using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using AmplifyColor;
using CurvedUI;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using DG.Tweening.Plugins.Options;
using FIMSpace.Basics;
using FIMSpace.FLook;
using FreakLib.Music;
using Game.General.Navigation;
using Il2CppDummyDll;
using LitJson;
using Oculus.Platform;
using Oculus.Platform.Models;
using Pvr_UnitySDKAPI;
using Pvr_UnitySDKAPI.Achievement;
using UltimateGameTools.MeshSimplifier;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Experimental.Rendering;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class BranchGrabInfo : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRGrabObject grabObject;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SECTR_AudioCue myCue;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] turnOff;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LandingSpot[] myLandingSpots;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xCDE83C", Offset = "0xCDE83C", VA = "0xCDE83C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xCDE974", Offset = "0xCDE974", VA = "0xCDE974")]
	private void GrabOneShot()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xCDEB2C", Offset = "0xCDEB2C", VA = "0xCDEB2C")]
	private void BranchGrab()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xCDEC40", Offset = "0xCDEC40", VA = "0xCDEC40")]
	private void BranchDrop()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xCDEA8C", Offset = "0xCDEA8C", VA = "0xCDEA8C")]
	private void TurnOff()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xCDECDC", Offset = "0xCDECDC", VA = "0xCDECDC")]
	public BranchGrabInfo()
	{
	}
}
[Token(Token = "0x2000003")]
public class ClusterSpawner : MonoBehaviour
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] spawnableObject;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool spherelike;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float radius;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2Int amount;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool randomRotation;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xCE2C2C", Offset = "0xCE2C2C", VA = "0xCE2C2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xCE2C30", Offset = "0xCE2C30", VA = "0xCE2C30")]
	private void SpawnSystem()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xCE3230", Offset = "0xCE3230", VA = "0xCE3230")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xCE3288", Offset = "0xCE3288", VA = "0xCE3288")]
	public ClusterSpawner()
	{
	}
}
[Token(Token = "0x2000004")]
public class NTVR_CameraFacing : MonoBehaviour
{
	[Token(Token = "0x600000B")]
	[Address(RVA = "0xBD6228", Offset = "0xBD6228", VA = "0xBD6228")]
	private void Update()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xBD6334", Offset = "0xBD6334", VA = "0xBD6334")]
	public NTVR_CameraFacing()
	{
	}
}
[Token(Token = "0x2000005")]
public class Test : MonoBehaviour
{
	[Token(Token = "0x600000D")]
	[Address(RVA = "0xB30558", Offset = "0xB30558", VA = "0xB30558")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xB305F0", Offset = "0xB305F0", VA = "0xB305F0")]
	private Mesh ThickerMeshUsingNormals(Mesh m, float fPerturb)
	{
		return null;
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xB30898", Offset = "0xB30898", VA = "0xB30898")]
	public Test()
	{
	}
}
[Token(Token = "0x2000006")]
public class MusicPlayerTrackForcer : MonoBehaviour
{
	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MusicPlayer myplayer;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int startPlace;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xBD5A04", Offset = "0xBD5A04", VA = "0xBD5A04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xBD5AA8", Offset = "0xBD5AA8", VA = "0xBD5AA8")]
	public MusicPlayerTrackForcer()
	{
	}
}
[Token(Token = "0x2000007")]
public class NatureTreksPlayerManager : MonoBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CD750", Offset = "0x8CD750")]
	public Toggle myToggle;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeStart;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeStart2;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float renderScaleMax;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int teleportingHand;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRTeleporter teleporter;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject controllerRight;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject controllerLeft;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VrStrafe walkingMovement;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SimpleVrTeleporter teleporterController;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xDE7060", Offset = "0xDE7060", VA = "0xDE7060")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xDE706C", Offset = "0xDE706C", VA = "0xDE706C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xDE7318", Offset = "0xDE7318", VA = "0xDE7318")]
	private void Update()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xDE75DC", Offset = "0xDE75DC", VA = "0xDE75DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xDE7500", Offset = "0xDE7500", VA = "0xDE7500")]
	public void ShootEvent()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xDE7090", Offset = "0xDE7090", VA = "0xDE7090")]
	public void LoadHand()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xDE73FC", Offset = "0xDE73FC", VA = "0xDE73FC")]
	public void ToggleMovement()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xDE769C", Offset = "0xDE769C", VA = "0xDE769C")]
	public void ChangeMovement(int hand)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xDE7824", Offset = "0xDE7824", VA = "0xDE7824")]
	public NatureTreksPlayerManager()
	{
	}
}
[Token(Token = "0x2000008")]
public class PlayerKillZones : MonoBehaviour
{
	[Token(Token = "0x600001B")]
	[Address(RVA = "0xE9DD00", Offset = "0xE9DD00", VA = "0xE9DD00")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xE9DE18", Offset = "0xE9DE18", VA = "0xE9DE18")]
	public PlayerKillZones()
	{
	}
}
[Token(Token = "0x2000009")]
public class PlayerRespawnManager : MonoBehaviour
{
	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 respawnArea;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xE9DE20", Offset = "0xE9DE20", VA = "0xE9DE20")]
	private void Start()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xE9DDBC", Offset = "0xE9DDBC", VA = "0xE9DDBC")]
	public void RespawnNow()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xE9DE64", Offset = "0xE9DE64", VA = "0xE9DE64")]
	public PlayerRespawnManager()
	{
	}
}
[Token(Token = "0x200000A")]
public class SECTRAudioExample : MonoBehaviour
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SECTR_AudioCue testCue;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SECTR_AudioCue musicCue;

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xB9CD58", Offset = "0xB9CD58", VA = "0xB9CD58")]
	private void PlayClip()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xB9CEB0", Offset = "0xB9CEB0", VA = "0xB9CEB0")]
	public void ChangeMusic(SECTR_AudioCue yourCue)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xB9D104", Offset = "0xB9D104", VA = "0xB9D104")]
	public void Update()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xB9D1E0", Offset = "0xB9D1E0", VA = "0xB9D1E0")]
	public SECTRAudioExample()
	{
	}
}
[Token(Token = "0x200000B")]
public class SECTRAudioPlayer : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SECTR_AudioCue mainCue;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SECTR_AudioCue awakeCue;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SECTR_AudioCue deathCue;

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xB9D1E8", Offset = "0xB9D1E8", VA = "0xB9D1E8")]
	public void PlayAudio()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xB9D2A0", Offset = "0xB9D2A0", VA = "0xB9D2A0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xB9D3A0", Offset = "0xB9D3A0", VA = "0xB9D3A0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xB9D4A0", Offset = "0xB9D4A0", VA = "0xB9D4A0")]
	public SECTRAudioPlayer()
	{
	}
}
[Token(Token = "0x200000C")]
public class SECTRMusicPlayer : MonoBehaviour
{
	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SECTR_AudioCue musicCue;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxClip;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string currentPlayingString;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float time;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float nextTime;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xB9D4A8", Offset = "0xB9D4A8", VA = "0xB9D4A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xB9D520", Offset = "0xB9D520", VA = "0xB9D520")]
	private void NextClip()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xB9D524", Offset = "0xB9D524", VA = "0xB9D524")]
	private void Update()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xB9D528", Offset = "0xB9D528", VA = "0xB9D528")]
	public SECTRMusicPlayer()
	{
	}
}
[Token(Token = "0x200000D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C6440", Offset = "0x8C6440")]
public class SeedScript : MonoBehaviour
{
	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CD788", Offset = "0x8CD788")]
	public GameObject[] thingsToSpawn;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SECTR_AudioCue audioEffect;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 offset;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string searchTag;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VRGrabObject myGrabObject;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool locked;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CD7C0", Offset = "0x8CD7C0")]
	public GameObject particlePoof;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float poofDeathTime;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CD7F8", Offset = "0x8CD7F8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CD7F8", Offset = "0x8CD7F8")]
	public bool isHighAsset;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CD858", Offset = "0x8CD858")]
	public bool noAsset;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CD890", Offset = "0x8CD890")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CD890", Offset = "0x8CD890")]
	public bool isTimedSpawn;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float timeSpawn;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CD8F0", Offset = "0x8CD8F0")]
	public bool toggleTimeOfDay;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool toggleWeather;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool startMoveUp;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float addYVector;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int explodeTime;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float addToVectorstart;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xD90D18", Offset = "0xD90D18", VA = "0xD90D18")]
	private void Start()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xD90DD4", Offset = "0xD90DD4", VA = "0xD90DD4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xD90E40", Offset = "0xD90E40", VA = "0xD90E40")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xD90F14", Offset = "0xD90F14", VA = "0xD90F14")]
	public void Tossed()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xD910A8", Offset = "0xD910A8", VA = "0xD910A8")]
	private void Dropped()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xD91198", Offset = "0xD91198", VA = "0xD91198")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xD9131C", Offset = "0xD9131C", VA = "0xD9131C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xD9137C", Offset = "0xD9137C", VA = "0xD9137C")]
	private void Spawn()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xD91864", Offset = "0xD91864", VA = "0xD91864")]
	private void DoEffect()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xD919F4", Offset = "0xD919F4", VA = "0xD919F4")]
	public SeedScript()
	{
	}
}
[Token(Token = "0x200000E")]
public class SimpleSeed : MonoBehaviour
{
	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CD928", Offset = "0x8CD928")]
	public GameObject[] thingsToSpawn;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SECTR_AudioCue audioEffect;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string searchTag;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CD960", Offset = "0x8CD960")]
	public bool autoCleanup;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 offset;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CD998", Offset = "0x8CD998")]
	public GameObject particlePoof;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float poofDeathTime;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int particlePoofDestroy;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CD9D0", Offset = "0x8CD9D0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CD9D0", Offset = "0x8CD9D0")]
	public bool isHighAsset;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CDA30", Offset = "0x8CDA30")]
	public bool noAsset;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xEDE9B8", Offset = "0xEDE9B8", VA = "0xEDE9B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xEDEA4C", Offset = "0xEDEA4C", VA = "0xEDEA4C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xEDEAA4", Offset = "0xEDEAA4", VA = "0xEDEAA4")]
	private void Spawn()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xEDEED4", Offset = "0xEDEED4", VA = "0xEDEED4")]
	private void DoEffect()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xEDF068", Offset = "0xEDF068", VA = "0xEDF068")]
	public SimpleSeed()
	{
	}
}
[Token(Token = "0x200000F")]
public class SpawnedObject : MonoBehaviour
{
	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool canDie;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float deathTime;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isFood;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isOnlyFood;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject deathEffect;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xB2536C", Offset = "0xB2536C", VA = "0xB2536C")]
	private void Start()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xB253F8", Offset = "0xB253F8", VA = "0xB253F8")]
	private void KillOtherfoods()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xB25558", Offset = "0xB25558", VA = "0xB25558")]
	private void FoodAlert()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xB25644", Offset = "0xB25644", VA = "0xB25644")]
	private void InvokeDeath()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xB25798", Offset = "0xB25798", VA = "0xB25798")]
	public SpawnedObject()
	{
	}
}
[Token(Token = "0x2000010")]
public class SpawnedObjectSystem : MonoBehaviour
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> highAssetList;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> lowAssetList;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int highMaxObjects;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int lowMaxObjects;

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xB257A0", Offset = "0xB257A0", VA = "0xB257A0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xB25828", Offset = "0xB25828", VA = "0xB25828")]
	public void AddLowAsset(GameObject thing)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xB2595C", Offset = "0xB2595C", VA = "0xB2595C")]
	public void AddHighAsset(GameObject thing)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xB25A90", Offset = "0xB25A90", VA = "0xB25A90")]
	public SpawnedObjectSystem()
	{
	}
}
[Token(Token = "0x2000011")]
public class ToggleAsset : MonoBehaviour
{
	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent toggleOnEvent;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent toggleOffEvent;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer changeRenderer;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject activateEffect;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material onImage;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material offImage;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isOn;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VRSimpleGrabSystem myGrabber;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xB32674", Offset = "0xB32674", VA = "0xB32674")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xB32734", Offset = "0xB32734", VA = "0xB32734")]
	private void Update()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xB329D8", Offset = "0xB329D8", VA = "0xB329D8")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xB327F0", Offset = "0xB327F0", VA = "0xB327F0")]
	private void ToggleSystem()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xB32AE0", Offset = "0xB32AE0", VA = "0xB32AE0")]
	public ToggleAsset()
	{
	}
}
[Token(Token = "0x2000012")]
public class VRMenuSystem : MonoBehaviour
{
	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Pvr_KeyCode menuButtonLeft;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Pvr_KeyCode menuButtonRight;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDA68", Offset = "0x8CDA68")]
	public Transform targetLocationL;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform targetLocationR;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform targetLocation;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject vrUIGroup;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDAA0", Offset = "0x8CDAA0")]
	public bool UIOn;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 Offset;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float distance;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDAD8", Offset = "0x8CDAD8")]
	public bool xOverRide;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float xOverRideNum;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public KeyCode DebugKey;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool openOnLeft;

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xD5E2C4", Offset = "0xD5E2C4", VA = "0xD5E2C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xD5E308", Offset = "0xD5E308", VA = "0xD5E308")]
	private void AutoGrab()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xD5E3C0", Offset = "0xD5E3C0", VA = "0xD5E3C0")]
	private void Update()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xD5E528", Offset = "0xD5E528", VA = "0xD5E528")]
	public void ToggleVRUI()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xD5E2C8", Offset = "0xD5E2C8", VA = "0xD5E2C8")]
	public void CloseVRUI()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xD5E890", Offset = "0xD5E890", VA = "0xD5E890")]
	public void OpenVRUI()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xD5E538", Offset = "0xD5E538", VA = "0xD5E538")]
	private void RepositionUI()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xD5E8E4", Offset = "0xD5E8E4", VA = "0xD5E8E4")]
	public VRMenuSystem()
	{
	}
}
[Token(Token = "0x2000013")]
public class SpriteFlip : MonoBehaviour
{
	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool flippedX;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpriteRenderer m_Sprite;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_Initialized;

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xB27314", Offset = "0xB27314", VA = "0xB27314")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xB273EC", Offset = "0xB273EC", VA = "0xB273EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xB273F0", Offset = "0xB273F0", VA = "0xB273F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xB2744C", Offset = "0xB2744C", VA = "0xB2744C")]
	public void flip(bool flipX)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xB275CC", Offset = "0xB275CC", VA = "0xB275CC")]
	public SpriteFlip()
	{
	}
}
[Token(Token = "0x2000014")]
public class RandomMaterial : MonoBehaviour
{
	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer targetRenderer;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xB998AC", Offset = "0xB998AC", VA = "0xB998AC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xB998B0", Offset = "0xB998B0", VA = "0xB998B0")]
	public void ChangeMaterial()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xB99940", Offset = "0xB99940", VA = "0xB99940")]
	public RandomMaterial()
	{
	}
}
[Token(Token = "0x2000015")]
public class UnluckDistanceDisabler : MonoBehaviour
{
	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _distanceDisable;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _distanceFrom;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _distanceFromMainCam;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _disableCheckInterval;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _enableCheckInterval;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _disableOnStart;

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xD579CC", Offset = "0xD579CC", VA = "0xD579CC")]
	public void Start()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xD57ABC", Offset = "0xD57ABC", VA = "0xD57ABC")]
	public void DisableOnStart()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xD57B00", Offset = "0xD57B00", VA = "0xD57B00")]
	public void CheckDisable()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xD57C78", Offset = "0xD57C78", VA = "0xD57C78")]
	public void CheckEnable()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xD57DF0", Offset = "0xD57DF0", VA = "0xD57DF0")]
	public UnluckDistanceDisabler()
	{
	}
}
[Token(Token = "0x2000016")]
public class LookAtCamera : MonoBehaviour
{
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera lookAtCamera;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool lookOnlyOnAwake;

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xBCAE48", Offset = "0xBCAE48", VA = "0xBCAE48")]
	public void Start()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xBCAF44", Offset = "0xBCAF44", VA = "0xBCAF44")]
	public void Update()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xBCAEE4", Offset = "0xBCAEE4", VA = "0xBCAEE4")]
	public void LookCam()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xBCAF54", Offset = "0xBCAF54", VA = "0xBCAF54")]
	public LookAtCamera()
	{
	}
}
[Token(Token = "0x2000017")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C64A4", Offset = "0x8C64A4")]
public class SmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float autoRotate;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float autoRotateSpeed;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float xDeg;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float yDeg;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentDistance;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float desiredDistance;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion currentRotation;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion desiredRotation;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion rotation;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 position;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleTimer;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float idleSmooth;

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xB221A0", Offset = "0xB221A0", VA = "0xB221A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xB225F4", Offset = "0xB225F4", VA = "0xB225F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xB221A4", Offset = "0xB221A4", VA = "0xB221A4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xB225F8", Offset = "0xB225F8", VA = "0xB225F8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xB22BA0", Offset = "0xB22BA0", VA = "0xB22BA0")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xB22C50", Offset = "0xB22C50", VA = "0xB22C50")]
	public SmoothCameraOrbit()
	{
	}
}
[Token(Token = "0x2000018")]
public class FlockChild : MonoBehaviour
{
	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public FlockController _spawner;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Vector3 _wayPoint;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _speed;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool _dived;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float _stuckCounter;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float _damping;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool _soar;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[HideInInspector]
	public bool _landing;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float _targetSpeed;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public bool _move;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _model;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _modelT;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public float _avoidValue;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public float _avoidDistance;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _soarTimer;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _instantiated;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _updateNextSeed;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _updateSeed;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public bool _avoid;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform _thisT;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 _landingPosOffset;

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xC045C8", Offset = "0xC045C8", VA = "0xC045C8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xC04FC0", Offset = "0xC04FC0", VA = "0xC04FC0")]
	public void Update()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xC0596C", Offset = "0xC0596C", VA = "0xC0596C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xC059CC", Offset = "0xC059CC", VA = "0xC059CC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xC04778", Offset = "0xC04778", VA = "0xC04778")]
	public void FindRequiredComponents()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xC04BE4", Offset = "0xC04BE4", VA = "0xC04BE4")]
	public void RandomizeStartAnimationFrame()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xC04EF4", Offset = "0xC04EF4", VA = "0xC04EF4")]
	public void InitAvoidanceValues()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xC049B0", Offset = "0xC049B0", VA = "0xC049B0")]
	public void SetRandomScale()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xC05040", Offset = "0xC05040", VA = "0xC05040")]
	public void SoarTimeLimit()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xC050D8", Offset = "0xC050D8", VA = "0xC050D8")]
	public void CheckForDistanceToWaypoint()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xC0523C", Offset = "0xC0523C", VA = "0xC0523C")]
	public void RotationBasedOnWaypointOrAvoidance()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xC05DA0", Offset = "0xC05DA0", VA = "0xC05DA0")]
	public bool Avoidance()
	{
		return default(bool);
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xC056CC", Offset = "0xC056CC", VA = "0xC056CC")]
	public void LimitRotationOfModel()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xC048CC", Offset = "0xC048CC", VA = "0xC048CC")]
	public void Wander(float delay)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xC06510", Offset = "0xC06510", VA = "0xC06510")]
	public void SetRandomMode()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xC05AD8", Offset = "0xC05AD8", VA = "0xC05AD8")]
	public void Flap()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xC04A48", Offset = "0xC04A48", VA = "0xC04A48")]
	public Vector3 findWaypoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xC065FC", Offset = "0xC065FC", VA = "0xC065FC")]
	public void Soar()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xC066C0", Offset = "0xC066C0", VA = "0xC066C0")]
	public void Dive()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xC06A7C", Offset = "0xC06A7C", VA = "0xC06A7C")]
	public void animationSpeed()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xC06E00", Offset = "0xC06E00", VA = "0xC06E00")]
	public FlockChild()
	{
	}
}
[Token(Token = "0x2000019")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C64DC", Offset = "0x8C64DC")]
public class FlockChildSound : MonoBehaviour
{
	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] _idleSounds;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _idleSoundRandomChance;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] _flightSounds;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _flightSoundRandomChance;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] _scareSounds;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _pitchMin;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _pitchMax;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _volumeMin;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _volumeMax;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FlockChild _flockChild;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource _audio;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _hasLanded;

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xC06E28", Offset = "0xC06E28", VA = "0xC06E28")]
	public void Start()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xC06F04", Offset = "0xC06F04", VA = "0xC06F04")]
	public void PlayRandomSound()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xC0721C", Offset = "0xC0721C", VA = "0xC0721C")]
	public void ScareSound()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xC07384", Offset = "0xC07384", VA = "0xC07384")]
	public FlockChildSound()
	{
	}
}
[Token(Token = "0x200001A")]
public class FlockController : MonoBehaviour
{
	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlockChild _childPrefab;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int _childAmount;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool _slowSpawn;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _spawnSphere;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _spawnSphereHeight;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _spawnSphereDepth;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _minSpeed;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _maxSpeed;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _minScale;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _maxScale;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _soarFrequency;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string _soarAnimation;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string _flapAnimation;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string _idleAnimation;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _diveValue;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _diveFrequency;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _minDamping;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _maxDamping;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float _waypointDistance;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float _minAnimationSpeed;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float _maxAnimationSpeed;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float _randomPositionTimer;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float _positionSphere;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float _positionSphereHeight;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _positionSphereDepth;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool _childTriggerPos;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool _forceChildWaypoints;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float _forcedRandomDelay;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool _flatFly;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	public bool _flatSoar;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	public bool _birdAvoid;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int _birdAvoidHorizontalForce;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool _birdAvoidDown;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool _birdAvoidUp;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int _birdAvoidVerticalForce;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float _birdAvoidDistanceMax;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float _birdAvoidDistanceMin;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float _soarMaxTime;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LayerMask _avoidanceMask;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<FlockChild> _roamers;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector3 _posBuffer;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int _updateDivisor;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float _newDelta;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int _updateCounter;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float _activeChildren;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool _groupChildToNewTransform;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform _groupTransform;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string _groupName;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool _groupChildToFlock;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Vector3 _startPosOffset;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform _thisT;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xC073A8", Offset = "0xC073A8", VA = "0xC073A8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xC07504", Offset = "0xC07504", VA = "0xC07504")]
	public void AddChild(int amount)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xC077AC", Offset = "0xC077AC", VA = "0xC077AC")]
	public void AddChildToParent(Transform obj)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xC07814", Offset = "0xC07814", VA = "0xC07814")]
	public void RemoveChild(int amount)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xC07988", Offset = "0xC07988", VA = "0xC07988")]
	public void Update()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xC07608", Offset = "0xC07608", VA = "0xC07608")]
	public void InstantiateGroup()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xC079F8", Offset = "0xC079F8", VA = "0xC079F8")]
	public void UpdateChildAmount()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xC07AD4", Offset = "0xC07AD4", VA = "0xC07AD4")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xC05BDC", Offset = "0xC05BDC", VA = "0xC05BDC")]
	public void SetFlockRandomPosition()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xC07DCC", Offset = "0xC07DCC", VA = "0xC07DCC")]
	public void destroyBirds()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xC07EEC", Offset = "0xC07EEC", VA = "0xC07EEC")]
	public FlockController()
	{
	}
}
[Token(Token = "0x200001B")]
public class FlockScare : MonoBehaviour
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandingSpotController[] landingSpotControllers;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scareInterval;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distanceToScare;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int checkEveryNthLandingSpot;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int InvokeAmounts;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lsc;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int ls;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LandingSpotController currentController;

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xC08004", Offset = "0xC08004", VA = "0xC08004")]
	private void CheckProximityToLandingSpots()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xC0811C", Offset = "0xC0811C", VA = "0xC0811C")]
	private void IterateLandingSpots()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xC0820C", Offset = "0xC0820C", VA = "0xC0820C")]
	private bool CheckDistanceToLandingSpot(LandingSpotController lc)
	{
		return default(bool);
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xC083E0", Offset = "0xC083E0", VA = "0xC083E0")]
	private void Invoker()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xC08478", Offset = "0xC08478", VA = "0xC08478")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xC084F8", Offset = "0xC084F8", VA = "0xC084F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xC0854C", Offset = "0xC0854C", VA = "0xC0854C")]
	public FlockScare()
	{
	}
}
[Token(Token = "0x200001C")]
public class FlockWaypointTrigger : MonoBehaviour
{
	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _timer;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockChild _flockChild;

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xC08568", Offset = "0xC08568", VA = "0xC08568")]
	public void Start()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xC08654", Offset = "0xC08654", VA = "0xC08654")]
	public void Trigger()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xC08684", Offset = "0xC08684", VA = "0xC08684")]
	public FlockWaypointTrigger()
	{
	}
}
[Token(Token = "0x200001D")]
public class LandingButtons : MonoBehaviour
{
	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandingSpotController _landingSpotController;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockController _flockController;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hSliderValue;

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xBC08CC", Offset = "0xBC08CC", VA = "0xBC08CC")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xBC0EEC", Offset = "0xBC0EEC", VA = "0xBC0EEC")]
	public LandingButtons()
	{
	}
}
[Token(Token = "0x200001E")]
public class LandingSpot : MonoBehaviour
{
	[Token(Token = "0x20004CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCA44", Offset = "0x8CCA44")]
	private sealed class <GetFlockChild>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minDelay;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxDelay;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpot <>4__this;

		[Token(Token = "0x1700022E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600228F")]
			[Address(RVA = "0xBC3594", Offset = "0xBC3594", VA = "0xBC3594", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002291")]
			[Address(RVA = "0xBC3604", Offset = "0xBC3604", VA = "0xBC3604", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0xBC23A0", Offset = "0xBC23A0", VA = "0xBC23A0")]
		[DebuggerHidden]
		public <GetFlockChild>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0xBC2D04", Offset = "0xBC2D04", VA = "0xBC2D04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0xBC2D08", Offset = "0xBC2D08", VA = "0xBC2D08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0xBC359C", Offset = "0xBC359C", VA = "0xBC359C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public FlockChild landingChild;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool landing;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int lerpCounter;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LandingSpotController _controller;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _idle;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _thisT;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _gotcha;

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xBC0EFC", Offset = "0xBC0EFC", VA = "0xBC0EFC")]
	public void Start()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xBC1124", Offset = "0xBC1124", VA = "0xBC1124")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xBC1654", Offset = "0xBC1654", VA = "0xBC1654")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xBC229C", Offset = "0xBC229C", VA = "0xBC229C")]
	public void StraightenBird()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xBC2084", Offset = "0xBC2084", VA = "0xBC2084")]
	public void RotateBird()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xBC236C", Offset = "0xBC236C", VA = "0xBC236C")]
	public void GetMeABird()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xBC1074", Offset = "0xBC1074", VA = "0xBC1074")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E6B7C", Offset = "0x8E6B7C")]
	public IEnumerator GetFlockChild(float minDelay, float maxDelay)
	{
		return null;
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xBC23CC", Offset = "0xBC23CC", VA = "0xBC23CC")]
	public void InstantLand()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xBC28A4", Offset = "0xBC28A4", VA = "0xBC28A4")]
	public void ReleaseFlockChild()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xBC2CFC", Offset = "0xBC2CFC", VA = "0xBC2CFC")]
	public LandingSpot()
	{
	}
}
[Token(Token = "0x200001F")]
public class LandingSpotController : MonoBehaviour
{
	[Token(Token = "0x20004CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCA54", Offset = "0x8CCA54")]
	private sealed class <InstantLandOnStart>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpotController <>4__this;

		[Token(Token = "0x17000230")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002295")]
			[Address(RVA = "0xBC3F58", Offset = "0xBC3F58", VA = "0xBC3F58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002297")]
			[Address(RVA = "0xBC3FC8", Offset = "0xBC3FC8", VA = "0xBC3FC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0xBC3A4C", Offset = "0xBC3A4C", VA = "0xBC3A4C")]
		[DebuggerHidden]
		public <InstantLandOnStart>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0xBC3D9C", Offset = "0xBC3D9C", VA = "0xBC3D9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0xBC3DA0", Offset = "0xBC3DA0", VA = "0xBC3DA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0xBC3F60", Offset = "0xBC3F60", VA = "0xBC3F60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCA64", Offset = "0x8CCA64")]
	private sealed class <InstantLand>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpotController <>4__this;

		[Token(Token = "0x17000232")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600229B")]
			[Address(RVA = "0xBC3D24", Offset = "0xBC3D24", VA = "0xBC3D24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000233")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600229D")]
			[Address(RVA = "0xBC3D94", Offset = "0xBC3D94", VA = "0xBC3D94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0xBC3A78", Offset = "0xBC3A78", VA = "0xBC3A78")]
		[DebuggerHidden]
		public <InstantLand>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0xBC3B68", Offset = "0xBC3B68", VA = "0xBC3B68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0xBC3B6C", Offset = "0xBC3B6C", VA = "0xBC3B6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0xBC3D2C", Offset = "0xBC3D2C", VA = "0xBC3D2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _randomRotate;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 _autoCatchDelay;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 _autoDismountDelay;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _maxBirdDistance;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _minBirdDistance;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _takeClosest;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FlockController _flock;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _landOnStart;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool _soarLand;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool _onlyBirdsAbove;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _landingSpeedModifier;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _landingTurnSpeedModifier;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _featherPS;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform _thisT;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int _activeLandingSpots;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _snapLandDistance;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _landedRotateSpeed;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _gizmoSize;

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xBC360C", Offset = "0xBC360C", VA = "0xBC360C")]
	public void Start()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xBC0CDC", Offset = "0xBC0CDC", VA = "0xBC0CDC")]
	public void ScareAll()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xBC38C0", Offset = "0xBC38C0", VA = "0xBC38C0")]
	public void ScareAll(float minDelay, float maxDelay)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xBC0CE8", Offset = "0xBC0CE8", VA = "0xBC0CE8")]
	public void LandAll()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xBC3828", Offset = "0xBC3828", VA = "0xBC3828")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E6BE0", Offset = "0x8E6BE0")]
	public IEnumerator InstantLandOnStart(float delay)
	{
		return null;
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xBC0E54", Offset = "0xBC0E54", VA = "0xBC0E54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E6C44", Offset = "0x8E6C44")]
	public IEnumerator InstantLand(float delay)
	{
		return null;
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xBC3AA4", Offset = "0xBC3AA4", VA = "0xBC3AA4")]
	public LandingSpotController()
	{
	}
}
[Token(Token = "0x2000020")]
public class MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float scrollSpeed;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMinLimit;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float yMaxLimit;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceMin;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float distanceMax;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float smoothTime;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float rotationYAxis;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float rotationXAxis;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float velocityX;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float velocityY;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool start;

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xBD4BD4", Offset = "0xBD4BD4", VA = "0xBD4BD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xBD4C14", Offset = "0xBD4C14", VA = "0xBD4C14")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xBD4F90", Offset = "0xBD4F90", VA = "0xBD4F90")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xBD5040", Offset = "0xBD5040", VA = "0xBD5040")]
	public MouseOrbit()
	{
	}
}
[Token(Token = "0x2000021")]
public class Rotater : MonoBehaviour
{
	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xB9C9D8", Offset = "0xB9C9D8", VA = "0xB9C9D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xB9CA2C", Offset = "0xB9CA2C", VA = "0xB9CA2C")]
	public Rotater()
	{
	}
}
[Token(Token = "0x2000022")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C6540", Offset = "0x8C6540")]
public class CameraDepthMode : MonoBehaviour
{
	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xCE08A8", Offset = "0xCE08A8", VA = "0xCE08A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xCE0914", Offset = "0xCE0914", VA = "0xCE0914")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xCE0980", Offset = "0xCE0980", VA = "0xCE0980")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xCE09EC", Offset = "0xCE09EC", VA = "0xCE09EC")]
	public CameraDepthMode()
	{
	}
}
[Token(Token = "0x2000023")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C65B4", Offset = "0x8C65B4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C65B4", Offset = "0x8C65B4")]
[ExecuteInEditMode]
public class FogControl : MonoBehaviour
{
	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float FadeSpeed;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float Rate;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnderWaterFog fog;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera cam;

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xC08694", Offset = "0xC08694", VA = "0xC08694")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xC087E8", Offset = "0xC087E8", VA = "0xC087E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xC087EC", Offset = "0xC087EC", VA = "0xC087EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xC08698", Offset = "0xC08698", VA = "0xC08698")]
	private void init()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xC08A3C", Offset = "0xC08A3C", VA = "0xC08A3C")]
	public FogControl()
	{
	}
}
[Token(Token = "0x2000024")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C6650", Offset = "0x8C6650")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6650", Offset = "0x8C6650")]
public class UnderWaterFog : MonoBehaviour
{
	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color fogColor;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CDC00", Offset = "0x8CDC00")]
	public float height;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CDC38", Offset = "0x8CDC38")]
	public float heightDensity;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CDC54", Offset = "0x8CDC54")]
	public float startDistance;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader fogShader;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material fogMaterial;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xD53280", Offset = "0xD53280", VA = "0xD53280")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xD53284", Offset = "0xD53284", VA = "0xD53284")]
	public bool CheckResources()
	{
		return default(bool);
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xD533F8", Offset = "0xD533F8", VA = "0xD533F8")]
	[ImageEffectOpaque]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xD53D28", Offset = "0xD53D28", VA = "0xD53D28")]
	private static void CustomGraphicsBlit(RenderTexture source, RenderTexture dest, Material fxMaterial, int passNr)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xD53ED4", Offset = "0xD53ED4", VA = "0xD53ED4")]
	public UnderWaterFog()
	{
	}
}
[Token(Token = "0x2000025")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C66E8", Offset = "0x8C66E8")]
public class MirrorReflection : MonoBehaviour
{
	[Token(Token = "0x20004D0")]
	private enum QualityLevels
	{
		[Token(Token = "0x4001E62")]
		High = 1,
		[Token(Token = "0x4001E63")]
		Medium = 2,
		[Token(Token = "0x4001E64")]
		Low = 4,
		[Token(Token = "0x4001E65")]
		VeryLow = 8
	}

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask reflectionMask;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private QualityLevels Quality;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CDC9C", Offset = "0x8CDC9C")]
	public Color clearColor;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool reflectSkybox;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CDCD4", Offset = "0x8CDCD4")]
	public bool UpdateSceneView;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float clipPlaneOffset;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string reflectionSampler;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_Oldpos;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Camera m_ReflectionCamera;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material m_SharedMaterial;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<Camera, bool> m_HelperCameras;

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xBD200C", Offset = "0xBD200C", VA = "0xBD200C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xBD2110", Offset = "0xBD2110", VA = "0xBD2110")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xBD21C4", Offset = "0xBD21C4", VA = "0xBD21C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xBD20A0", Offset = "0xBD20A0", VA = "0xBD20A0")]
	public void setMaterial()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xBD2258", Offset = "0xBD2258", VA = "0xBD2258")]
	private Camera CreateReflectionCameraFor(Camera cam)
	{
		return null;
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xBD2638", Offset = "0xBD2638", VA = "0xBD2638")]
	private void SetStandardCameraParameter(Camera cam, LayerMask mask)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xBD275C", Offset = "0xBD275C", VA = "0xBD275C")]
	private RenderTexture CreateTextureFor(Camera cam)
	{
		return null;
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xBD287C", Offset = "0xBD287C", VA = "0xBD287C")]
	public void RenderHelpCameras(Camera currentCam)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xBD350C", Offset = "0xBD350C", VA = "0xBD350C")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xBD356C", Offset = "0xBD356C", VA = "0xBD356C")]
	public void WaterTileBeingRendered(Transform tr, Camera currentCam)
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xBD3674", Offset = "0xBD3674", VA = "0xBD3674")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xBD2A14", Offset = "0xBD2A14", VA = "0xBD2A14")]
	private void RenderReflectionFor(Camera cam, Camera reflectCamera)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xBD36AC", Offset = "0xBD36AC", VA = "0xBD36AC")]
	private void SaneCameraSettings(Camera helperCam)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xBD3C3C", Offset = "0xBD3C3C", VA = "0xBD3C3C")]
	private static Matrix4x4 CalculateObliqueMatrix(Matrix4x4 projection, Vector4 clipPlane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xBD3790", Offset = "0xBD3790", VA = "0xBD3790")]
	private static Matrix4x4 CalculateReflectionMatrix(Matrix4x4 reflectionMat, Vector4 plane)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xBD3E84", Offset = "0xBD3E84", VA = "0xBD3E84")]
	private static float Sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xBD3A54", Offset = "0xBD3A54", VA = "0xBD3A54")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xBD3EA4", Offset = "0xBD3EA4", VA = "0xBD3EA4")]
	public MirrorReflection()
	{
	}
}
[Token(Token = "0x2000026")]
public class Animate : MonoBehaviour
{
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 texture1Speed;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 texture2Speed;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 bumpMap1Speed;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 bumpMap2Speed;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector2 distortSpeed;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 distort1Speed;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 distort2Speed;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector2 texture1UV;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2 texture2UV;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 bumpMap1UV;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 bumpMap2UV;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2 distortUV;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2 distort1UV;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector2 distort2UV;

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xF3EF68", Offset = "0xF3EF68", VA = "0xF3EF68")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xF3F0A0", Offset = "0xF3F0A0", VA = "0xF3F0A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xF3F404", Offset = "0xF3F404", VA = "0xF3F404")]
	public Animate()
	{
	}
}
[Token(Token = "0x2000027")]
public class AnimateUnderwater : MonoBehaviour
{
	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 distort1Speed;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 distort2Speed;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 distortionMap1UV;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 distortionMap2UV;

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xF3F660", Offset = "0xF3F660", VA = "0xF3F660")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xF3F70C", Offset = "0xF3F70C", VA = "0xF3F70C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xF3F858", Offset = "0xF3F858", VA = "0xF3F858")]
	public AnimateUnderwater()
	{
	}
}
[Token(Token = "0x2000028")]
public class FSPStaticMeshHolder : MonoBehaviour
{
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FSPStaticMeshHolder _instance;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, Mesh> _meshLinks;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public int receiverID;

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xBFFB00", Offset = "0xBFFB00", VA = "0xBFFB00")]
	public static FSPStaticMeshHolder Get()
	{
		return null;
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xBFFB50", Offset = "0xBFFB50", VA = "0xBFFB50")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xBFFD14", Offset = "0xBFFD14", VA = "0xBFFD14")]
	public Mesh GetMesh(int receiverID)
	{
		return null;
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xBFFBA8", Offset = "0xBFFBA8", VA = "0xBFFBA8")]
	private void LinkMeshes()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xBFFD84", Offset = "0xBFFD84", VA = "0xBFFD84")]
	public FSPStaticMeshHolder()
	{
	}
}
[Token(Token = "0x2000029")]
public class GlobalProjectorLightCamera : MonoBehaviour
{
	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action PreCullCallback;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action PostRenderCallback;

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xC09578", Offset = "0xC09578", VA = "0xC09578")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xC0958C", Offset = "0xC0958C", VA = "0xC0958C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xC095A0", Offset = "0xC095A0", VA = "0xC095A0")]
	public GlobalProjectorLightCamera()
	{
	}
}
[Token(Token = "0x200002A")]
public class GlobalProjectorManager : MonoBehaviour
{
	[Token(Token = "0x20004D1")]
	public enum ProjectionCulling
	{
		[Token(Token = "0x4001E67")]
		None,
		[Token(Token = "0x4001E68")]
		ProjectorBounds,
		[Token(Token = "0x4001E69")]
		ProjectionVolumeBounds
	}

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ProjectorEyeTexture _Tex;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ProjectorEyeTexture _TexLight;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material _ProjectorMaterialShadow;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material _ProjectorMaterialLight;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Matrix4x4 _ProjectorMatrix;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Matrix4x4 _ProjectorClipMatrix;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Matrix4x4 _BiasMatrix;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Matrix4x4 _ViewMatrix;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Matrix4x4 _BPV;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Matrix4x4 _BPVClip;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Matrix4x4 _ModelMatrix;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Matrix4x4 _FinalMatrix;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private Matrix4x4 _FinalClipMatrix;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private MaterialPropertyBlock _MBP;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private int[] _ShadowResolutions;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public bool useNonAllocCulling;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string GlobalProjectorLayer;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	private float _BatchBreak;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static GlobalProjectorManager _Instance;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private Vector3 _GlobalProjectionDir;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	private int _GlobalShadowResolution;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private ProjectionCulling _GlobalShadowCullingMode;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	private float _GlobalCutOffDistance;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private bool _GlobalFlipX;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A9")]
	private bool _GlobalFlipY;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AA")]
	private bool _renderShadows;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private Camera _ProjectorCamera;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private Camera _ProjectorCameraLight;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private List<ShadowProjector> _ShadowProjectors;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	private List<ShadowProjector> _LightProjectors;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private List<ShadowReceiver> _ShadowReceivers;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private List<ShadowTrigger> _ShadowTriggers;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private Texture2D _textureRead;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private bool _anyTriggersAlive;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E9")]
	private bool _shouldCheckTriggers;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	private Plane[] _mainCameraPlanes;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private bool _cameraPlainsCalculated;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	private Bounds _projectorBounds;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public Shader _globalProjectorShader;

	[Token(Token = "0x17000001")]
	public static Vector3 GlobalProjectionDir
	{
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0xC09860", Offset = "0xC09860", VA = "0xC09860")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0xC095A8", Offset = "0xC095A8", VA = "0xC095A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public static int GlobalShadowResolution
	{
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0xC09A50", Offset = "0xC09A50", VA = "0xC09A50")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0xC098E0", Offset = "0xC098E0", VA = "0xC098E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public static ProjectionCulling GlobalShadowCullingMode
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0xC09B44", Offset = "0xC09B44", VA = "0xC09B44")]
		get
		{
			return default(ProjectionCulling);
		}
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0xC09AC8", Offset = "0xC09AC8", VA = "0xC09AC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public static float GlobalCutOffDistance
	{
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0xC09C40", Offset = "0xC09C40", VA = "0xC09C40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0xC09BBC", Offset = "0xC09BBC", VA = "0xC09BBC")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public static bool GlobalFlipX
	{
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0xC09DF4", Offset = "0xC09DF4", VA = "0xC09DF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0xC09CB8", Offset = "0xC09CB8", VA = "0xC09CB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public static bool GlobalFlipY
	{
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0xC09F84", Offset = "0xC09F84", VA = "0xC09F84")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0xC09E6C", Offset = "0xC09E6C", VA = "0xC09E6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public bool ShadowsOn
	{
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0xC01C50", Offset = "0xC01C50", VA = "0xC01C50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0xC01C58", Offset = "0xC01C58", VA = "0xC01C58")]
		set
		{
		}
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xC01AFC", Offset = "0xC01AFC", VA = "0xC01AFC")]
	public static GlobalProjectorManager Get()
	{
		return null;
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xC09FFC", Offset = "0xC09FFC", VA = "0xC09FFC")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xC0A588", Offset = "0xC0A588", VA = "0xC0A588")]
	private void CreateLightCamera()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xC0A9D8", Offset = "0xC0A9D8", VA = "0xC0A9D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xC0A9DC", Offset = "0xC0A9DC", VA = "0xC0A9DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xC0A9E0", Offset = "0xC0A9E0", VA = "0xC0A9E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xC0AA48", Offset = "0xC0AA48", VA = "0xC0AA48")]
	public static bool Exists()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xC01E94", Offset = "0xC01E94", VA = "0xC01E94")]
	public Texture GetShadowTexture()
	{
		return null;
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xC0AAE0", Offset = "0xC0AAE0", VA = "0xC0AAE0")]
	public void AddProjector(ShadowProjector projector)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xC0ADF4", Offset = "0xC0ADF4", VA = "0xC0ADF4")]
	public void RemoveProjector(ShadowProjector projector)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xC0AF8C", Offset = "0xC0AF8C", VA = "0xC0AF8C")]
	public void AddReceiver(ShadowReceiver receiver)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xC0B044", Offset = "0xC0B044", VA = "0xC0B044")]
	private void CheckForTerrain(ShadowReceiver receiver)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xC0B1A0", Offset = "0xC0B1A0", VA = "0xC0B1A0")]
	public void AddShadowTrigger(ShadowTrigger trigger)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xC0B248", Offset = "0xC0B248", VA = "0xC0B248")]
	public void RemoveShadowTrigger(ShadowTrigger trigger)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xC0B314", Offset = "0xC0B314", VA = "0xC0B314")]
	public void RemoveReceiver(ShadowReceiver receiver)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xC09700", Offset = "0xC09700", VA = "0xC09700")]
	private void OnProjectionDirChange()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xC099CC", Offset = "0xC099CC", VA = "0xC099CC")]
	private void OnShadowResolutionChange()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xC0A7DC", Offset = "0xC0A7DC", VA = "0xC0A7DC")]
	private void CreateProjectorEyeTexture()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xC0A7E8", Offset = "0xC0A7E8", VA = "0xC0A7E8")]
	private void CreateProjectorEyeTexture(bool shadow, bool light)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xC09DD0", Offset = "0xC09DD0", VA = "0xC09DD0")]
	private void ForceShadowDummyRebuild()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xC0B3C0", Offset = "0xC0B3C0", VA = "0xC0B3C0")]
	private void ForceShadowDummyRebuild(List<ShadowProjector> projectors)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xC0B488", Offset = "0xC0B488", VA = "0xC0B488")]
	private void CalculateShadowBounds(Camera targetCamera, List<ShadowProjector> projectors)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xC0BB3C", Offset = "0xC0BB3C", VA = "0xC0BB3C")]
	private void CheckMainCameraPlains()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xC0BBA0", Offset = "0xC0BBA0", VA = "0xC0BBA0")]
	private bool IsProjectionVolumeVisible(Plane[] planes, ShadowProjector projector)
	{
		return default(bool);
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xC0BE98", Offset = "0xC0BE98", VA = "0xC0BE98")]
	public void SetTriggerTexPixel(Vector3 point, bool checkShadow, bool checkLight, int triggerID)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xC0BEBC", Offset = "0xC0BEBC", VA = "0xC0BEBC")]
	private void SetTriggerTexPixel(Camera camera, ProjectorEyeTexture tex, Vector3 point, int triggerID)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xC0C1F0", Offset = "0xC0C1F0", VA = "0xC0C1F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xC0C30C", Offset = "0xC0C30C", VA = "0xC0C30C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xC0C374", Offset = "0xC0C374", VA = "0xC0C374")]
	private void RenderProjectors(Camera targetCamera, List<ShadowProjector> projectors, Material material)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xC0C95C", Offset = "0xC0C95C", VA = "0xC0C95C")]
	private void Render(Material material)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xC0D150", Offset = "0xC0D150", VA = "0xC0D150")]
	private void PreventDynamicBatchUnity5()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xC0D210", Offset = "0xC0D210", VA = "0xC0D210")]
	private void CheckTriggers(bool shadow)
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xC0CE10", Offset = "0xC0CE10", VA = "0xC0CE10")]
	private void ApplyTerrainTextureMatrix(ShadowReceiver receiver)
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xC0D5F8", Offset = "0xC0D5F8", VA = "0xC0D5F8")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xC0D714", Offset = "0xC0D714", VA = "0xC0D714")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xC0D808", Offset = "0xC0D808", VA = "0xC0D808")]
	private void OnLightPreCull()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xC0D924", Offset = "0xC0D924", VA = "0xC0D924")]
	private void OnLightPostRender()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xC0DA18", Offset = "0xC0DA18", VA = "0xC0DA18")]
	public GlobalProjectorManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200002B")]
public class ProjectorEyeTexture
{
	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private RenderTexture _RenderTexture;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D _RenderTextureDummy;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera _Camera;

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xE9EB88", Offset = "0xE9EB88", VA = "0xE9EB88")]
	public ProjectorEyeTexture(Camera camera, int size)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xE9ED10", Offset = "0xE9ED10", VA = "0xE9ED10")]
	public void CleanUp()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xE9EDE4", Offset = "0xE9EDE4", VA = "0xE9EDE4")]
	public Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xE9EDEC", Offset = "0xE9EDEC", VA = "0xE9EDEC")]
	public RenderTexture GetRenderTexture()
	{
		return null;
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xE9EDF4", Offset = "0xE9EDF4", VA = "0xE9EDF4")]
	public void GrabScreenIfNeeded()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xE9ED08", Offset = "0xE9ED08", VA = "0xE9ED08")]
	public bool RenderTextureSupported()
	{
		return default(bool);
	}
}
[Token(Token = "0x200002C")]
public class ProjectorShadowDummy : MonoBehaviour
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 _ShadowLocalOffset;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Quaternion _RotationAngleOffset;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _freezeXRot;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool _freezeYRot;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool _freezeZRot;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion _AngleOffset;

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xE9EDF8", Offset = "0xE9EDF8", VA = "0xE9EDF8")]
	public void OnPreRenderShadowDummy(Camera camera)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xE9F4D0", Offset = "0xE9F4D0", VA = "0xE9F4D0")]
	public ProjectorShadowDummy()
	{
	}
}
[Token(Token = "0x200002D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C675C", Offset = "0x8C675C")]
public class ShadowProjector : MonoBehaviour
{
	[Token(Token = "0x20004D2")]
	private static class MeshGen
	{
		[Token(Token = "0x600229E")]
		[Address(RVA = "0xEDB104", Offset = "0xEDB104", VA = "0xEDB104")]
		public static Mesh CreatePlane(Vector3 up, Vector3 right, Rect uvRect, Color color, ShadowProjector parent)
		{
			return null;
		}
	}

	[Token(Token = "0x20004D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCA74", Offset = "0x8CCA74")]
	private sealed class <ReturnShadowDistance>d__100 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShadowProjector <>4__this;

		[Token(Token = "0x17000234")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022A2")]
			[Address(RVA = "0xEDC6E4", Offset = "0xEDC6E4", VA = "0xEDC6E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000235")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022A4")]
			[Address(RVA = "0xEDC754", Offset = "0xEDC754", VA = "0xEDC754", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0xEDBBDC", Offset = "0xEDBBDC", VA = "0xEDBBDC")]
		[DebuggerHidden]
		public <ReturnShadowDistance>d__100(int <>1__state)
		{
		}

		[Token(Token = "0x60022A0")]
		[Address(RVA = "0xEDC5EC", Offset = "0xEDC5EC", VA = "0xEDC5EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0xEDC5F0", Offset = "0xEDC5F0", VA = "0xEDC5F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0xEDC6EC", Offset = "0xEDC6EC", VA = "0xEDC6EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Vector3 _GlobalProjectionDir;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	protected int _GlobalShadowResolution;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected GlobalProjectorManager.ProjectionCulling _GlobalShadowCullingMode;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool _EnableCutOff;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected float _GlobalCutOffDistance;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	protected bool _GlobalFlipX;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[SerializeField]
	protected bool _GlobalFlipY;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float _ShadowSize;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private Color _ShadowColor;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float _ShadowOpacity;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material _Material;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool _IsLight;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private Vector3 _ShadowLocalOffset;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Quaternion _RotationAngleOffset;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private bool _FreezeXRot;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	[SerializeField]
	private bool _FreezeYRot;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	[SerializeField]
	private bool _FreezeZRot;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private Rect _UVRect;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private bool _AutoSizeOpacity;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float _AutoSOCutOffDistance;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private float _AutoSORayOriginOffset;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private float _AutoSOMaxScaleMultiplier;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	private int _AutoSORaycastLayer;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MeshRenderer _Renderer;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Mesh _ShadowDummyMesh;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ProjectorShadowDummy _ShadowDummy;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _initialSize;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float _initialOpacity;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _discarded;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	public bool doAutoChange;

	[Token(Token = "0x17000008")]
	public Vector3 GlobalProjectionDir
	{
		[Token(Token = "0x600011C")]
		[Address(RVA = "0xED9F0C", Offset = "0xED9F0C", VA = "0xED9F0C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600011B")]
		[Address(RVA = "0xED9E38", Offset = "0xED9E38", VA = "0xED9E38")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public int GlobalShadowResolution
	{
		[Token(Token = "0x600011E")]
		[Address(RVA = "0xED9FC8", Offset = "0xED9FC8", VA = "0xED9FC8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600011D")]
		[Address(RVA = "0xED9F18", Offset = "0xED9F18", VA = "0xED9F18")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public GlobalProjectorManager.ProjectionCulling GlobalShadowCullingMode
	{
		[Token(Token = "0x6000120")]
		[Address(RVA = "0xEDA080", Offset = "0xEDA080", VA = "0xEDA080")]
		get
		{
			return default(GlobalProjectorManager.ProjectionCulling);
		}
		[Token(Token = "0x600011F")]
		[Address(RVA = "0xED9FD0", Offset = "0xED9FD0", VA = "0xED9FD0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public bool EnableCutOff
	{
		[Token(Token = "0x6000122")]
		[Address(RVA = "0xEDA0A8", Offset = "0xEDA0A8", VA = "0xEDA0A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000121")]
		[Address(RVA = "0xEDA088", Offset = "0xEDA088", VA = "0xEDA088")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public float GlobalCutOffDistance
	{
		[Token(Token = "0x6000124")]
		[Address(RVA = "0xEDA160", Offset = "0xEDA160", VA = "0xEDA160")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000123")]
		[Address(RVA = "0xEDA0B0", Offset = "0xEDA0B0", VA = "0xEDA0B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public bool GlobalFlipX
	{
		[Token(Token = "0x6000126")]
		[Address(RVA = "0xEDA220", Offset = "0xEDA220", VA = "0xEDA220")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000125")]
		[Address(RVA = "0xEDA168", Offset = "0xEDA168", VA = "0xEDA168")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public bool GlobalFlipY
	{
		[Token(Token = "0x6000128")]
		[Address(RVA = "0xEDA2E0", Offset = "0xEDA2E0", VA = "0xEDA2E0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000127")]
		[Address(RVA = "0xEDA228", Offset = "0xEDA228", VA = "0xEDA228")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public float ShadowSize
	{
		[Token(Token = "0x600012A")]
		[Address(RVA = "0xEDA414", Offset = "0xEDA414", VA = "0xEDA414")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000129")]
		[Address(RVA = "0xEDA2E8", Offset = "0xEDA2E8", VA = "0xEDA2E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public Color ShadowColor
	{
		[Token(Token = "0x600012C")]
		[Address(RVA = "0xEDA658", Offset = "0xEDA658", VA = "0xEDA658")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600012B")]
		[Address(RVA = "0xEDA41C", Offset = "0xEDA41C", VA = "0xEDA41C")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public float ShadowOpacity
	{
		[Token(Token = "0x600012E")]
		[Address(RVA = "0xEDA70C", Offset = "0xEDA70C", VA = "0xEDA70C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600012D")]
		[Address(RVA = "0xEDA664", Offset = "0xEDA664", VA = "0xEDA664")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public bool IsLight
	{
		[Token(Token = "0x6000130")]
		[Address(RVA = "0xEDA720", Offset = "0xEDA720", VA = "0xEDA720")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600012F")]
		[Address(RVA = "0xEDA714", Offset = "0xEDA714", VA = "0xEDA714")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public Vector3 ShadowLocalOffset
	{
		[Token(Token = "0x6000132")]
		[Address(RVA = "0xEDA7EC", Offset = "0xEDA7EC", VA = "0xEDA7EC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000131")]
		[Address(RVA = "0xEDA728", Offset = "0xEDA728", VA = "0xEDA728")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public Quaternion RotationAngleOffset
	{
		[Token(Token = "0x6000134")]
		[Address(RVA = "0xEDA8C8", Offset = "0xEDA8C8", VA = "0xEDA8C8")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000133")]
		[Address(RVA = "0xEDA7F8", Offset = "0xEDA7F8", VA = "0xEDA7F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public bool FreezeXRot
	{
		[Token(Token = "0x6000136")]
		[Address(RVA = "0xEDA978", Offset = "0xEDA978", VA = "0xEDA978")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000135")]
		[Address(RVA = "0xEDA8D4", Offset = "0xEDA8D4", VA = "0xEDA8D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public bool FreezeYRot
	{
		[Token(Token = "0x6000138")]
		[Address(RVA = "0xEDAA24", Offset = "0xEDAA24", VA = "0xEDAA24")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000137")]
		[Address(RVA = "0xEDA980", Offset = "0xEDA980", VA = "0xEDA980")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public bool FreezeZRot
	{
		[Token(Token = "0x600013A")]
		[Address(RVA = "0xEDAAD0", Offset = "0xEDAAD0", VA = "0xEDAAD0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000139")]
		[Address(RVA = "0xEDAA2C", Offset = "0xEDAA2C", VA = "0xEDAA2C")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public Rect UVRect
	{
		[Token(Token = "0x600013C")]
		[Address(RVA = "0xEDAB94", Offset = "0xEDAB94", VA = "0xEDAB94")]
		get
		{
			return default(Rect);
		}
		[Token(Token = "0x600013B")]
		[Address(RVA = "0xEDAAD8", Offset = "0xEDAAD8", VA = "0xEDAAD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public bool AutoSizeOpacity
	{
		[Token(Token = "0x600013E")]
		[Address(RVA = "0xEDABAC", Offset = "0xEDABAC", VA = "0xEDABAC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600013D")]
		[Address(RVA = "0xEDABA0", Offset = "0xEDABA0", VA = "0xEDABA0")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public float AutoSOCutOffDistance
	{
		[Token(Token = "0x6000140")]
		[Address(RVA = "0xEDABBC", Offset = "0xEDABBC", VA = "0xEDABBC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600013F")]
		[Address(RVA = "0xEDABB4", Offset = "0xEDABB4", VA = "0xEDABB4")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public float AutoSORayOriginOffset
	{
		[Token(Token = "0x6000142")]
		[Address(RVA = "0xEDABCC", Offset = "0xEDABCC", VA = "0xEDABCC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000141")]
		[Address(RVA = "0xEDABC4", Offset = "0xEDABC4", VA = "0xEDABC4")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public float AutoSOMaxScaleMultiplier
	{
		[Token(Token = "0x6000144")]
		[Address(RVA = "0xEDABDC", Offset = "0xEDABDC", VA = "0xEDABDC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000143")]
		[Address(RVA = "0xEDABD4", Offset = "0xEDABD4", VA = "0xEDABD4")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public int AutoSORaycastLayer
	{
		[Token(Token = "0x6000146")]
		[Address(RVA = "0xEDABEC", Offset = "0xEDABEC", VA = "0xEDABEC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000145")]
		[Address(RVA = "0xEDABE4", Offset = "0xEDABE4", VA = "0xEDABE4")]
		set
		{
		}
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xEDABF4", Offset = "0xEDABF4", VA = "0xEDABF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xEDBAB0", Offset = "0xEDBAB0", VA = "0xEDBAB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xEDBB68", Offset = "0xEDBB68", VA = "0xEDBB68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E6CB8", Offset = "0x8E6CB8")]
	private IEnumerator ReturnShadowDistance()
	{
		return null;
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xEDBC08", Offset = "0xEDBC08", VA = "0xEDBC08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xEDBCA8", Offset = "0xEDBCA8", VA = "0xEDBCA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xEDBDB0", Offset = "0xEDBDB0", VA = "0xEDBDB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xEDBE60", Offset = "0xEDBE60", VA = "0xEDBE60")]
	public Bounds GetBounds()
	{
		return default(Bounds);
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xEDBE98", Offset = "0xEDBE98", VA = "0xEDBE98")]
	public bool IsVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xEDBEC8", Offset = "0xEDBEC8", VA = "0xEDBEC8")]
	public void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xEDBF00", Offset = "0xEDBF00", VA = "0xEDBF00")]
	public void Discard(bool discard)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xEDBF14", Offset = "0xEDBF14", VA = "0xEDBF14")]
	public bool IsDiscarded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xEDBF1C", Offset = "0xEDBF1C", VA = "0xEDBF1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xEDC0A8", Offset = "0xEDC0A8", VA = "0xEDC0A8")]
	public void OnPreRenderShadowProjector(Camera camera)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xEDC158", Offset = "0xEDC158", VA = "0xEDC158")]
	public Matrix4x4 ShadowDummyLocalToWorldMatrix()
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xEDC1A8", Offset = "0xEDC1A8", VA = "0xEDC1A8")]
	public float GetShadowWorldSize()
	{
		return default(float);
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xEDC3A0", Offset = "0xEDC3A0", VA = "0xEDC3A0")]
	public Vector3 GetShadowPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xEDA390", Offset = "0xEDA390", VA = "0xEDA390")]
	private void OnShadowSizeChanged()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xEDAB90", Offset = "0xEDAB90", VA = "0xEDAB90")]
	public void OnUVRectChanged()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xEDA4F8", Offset = "0xEDA4F8", VA = "0xEDA4F8")]
	public void OnShadowColorChanged()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xEDC3E8", Offset = "0xEDC3E8", VA = "0xEDC3E8")]
	private void RebuildMesh()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xEDC4E8", Offset = "0xEDC4E8", VA = "0xEDC4E8")]
	public ShadowProjector()
	{
	}
}
[Token(Token = "0x200002E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6794", Offset = "0x8C6794")]
public class ShadowReceiver : MonoBehaviour
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh _mesh;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh _meshCopy;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Terrain _terrain;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material _terrainMaterial;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _isTerrain;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _standardTerrain;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int _id;

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xEDC75C", Offset = "0xEDC75C", VA = "0xEDC75C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xEDCA20", Offset = "0xEDCA20", VA = "0xEDCA20")]
	private void Start()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xEDCC80", Offset = "0xEDCC80", VA = "0xEDCC80")]
	public Mesh GetMesh()
	{
		return null;
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xEDCD10", Offset = "0xEDCD10", VA = "0xEDCD10")]
	public bool IsTerrain()
	{
		return default(bool);
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xEDCDC4", Offset = "0xEDCDC4", VA = "0xEDCDC4")]
	public bool IsStandardTerrain()
	{
		return default(bool);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xEDCDCC", Offset = "0xEDCDCC", VA = "0xEDCDCC")]
	public Terrain GetTerrain()
	{
		return null;
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xEDCDD4", Offset = "0xEDCDD4", VA = "0xEDCDD4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xEDCDD8", Offset = "0xEDCDD8", VA = "0xEDCDD8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xEDCF2C", Offset = "0xEDCF2C", VA = "0xEDCF2C")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xEDCF30", Offset = "0xEDCF30", VA = "0xEDCF30")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xEDCF34", Offset = "0xEDCF34", VA = "0xEDCF34")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xEDCB54", Offset = "0xEDCB54", VA = "0xEDCB54")]
	private void AddReceiver()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xEDCDDC", Offset = "0xEDCDDC", VA = "0xEDCDDC")]
	private void RemoveReceiver()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xEDCF38", Offset = "0xEDCF38", VA = "0xEDCF38")]
	public ShadowReceiver()
	{
	}
}
[Token(Token = "0x200002F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C67CC", Offset = "0x8C67CC")]
public class ShadowTrigger : MonoBehaviour
{
	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnShadowEnter;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action OnShadowStay;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action OnShadowExit;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _InShadow;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool _DetectShadow;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[SerializeField]
	private bool _DetectLight;

	[Token(Token = "0x1700001E")]
	public bool DetectShadow
	{
		[Token(Token = "0x600016B")]
		[Address(RVA = "0xEDCF4C", Offset = "0xEDCF4C", VA = "0xEDCF4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600016A")]
		[Address(RVA = "0xEDCF40", Offset = "0xEDCF40", VA = "0xEDCF40")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public bool DetectLight
	{
		[Token(Token = "0x600016D")]
		[Address(RVA = "0xEDCF60", Offset = "0xEDCF60", VA = "0xEDCF60")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600016C")]
		[Address(RVA = "0xEDCF54", Offset = "0xEDCF54", VA = "0xEDCF54")]
		set
		{
		}
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xEDCF68", Offset = "0xEDCF68", VA = "0xEDCF68")]
	private void Awake()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xEDCF6C", Offset = "0xEDCF6C", VA = "0xEDCF6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xEDD020", Offset = "0xEDD020", VA = "0xEDD020")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xEDD024", Offset = "0xEDD024", VA = "0xEDD024")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xEDD0D8", Offset = "0xEDD0D8", VA = "0xEDD0D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xEDCF70", Offset = "0xEDCF70", VA = "0xEDCF70")]
	private void AddShadowTrigger()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xEDD028", Offset = "0xEDD028", VA = "0xEDD028")]
	private void RemoveShadowTrigger()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xEDD0DC", Offset = "0xEDD0DC", VA = "0xEDD0DC")]
	public void OnTriggerCheckDone(bool pointInShadow)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xEDD124", Offset = "0xEDD124", VA = "0xEDD124")]
	public ShadowTrigger()
	{
	}
}
[Token(Token = "0x2000030")]
public static class FAnimatorMethods
{
	[Token(Token = "0x6000177")]
	[Address(RVA = "0xC8D0B4", Offset = "0xC8D0B4", VA = "0xC8D0B4")]
	public static void LerpFloatValue(Animator animator, string name = "RunWalk", float value = 0f, float deltaSpeed = 8f)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xC8D14C", Offset = "0xC8D14C", VA = "0xC8D14C")]
	public static bool CheckAnimationEnd(Animator animator, int layer = 0, bool reverse = false, bool checkAnimLoop = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xC8D23C", Offset = "0xC8D23C", VA = "0xC8D23C")]
	public static void ResetLayersWeights(Animator animator, float speed = 10f)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xC8D304", Offset = "0xC8D304", VA = "0xC8D304")]
	public static void LerpLayerWeight(Animator animator, int layer = 0, float newValue = 1f, float speed = 8f)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xC8D39C", Offset = "0xC8D39C", VA = "0xC8D39C")]
	public static bool StateExists(Animator animator, string clipName, int layer = 0)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000031")]
public static class FColorMethods
{
	[Token(Token = "0x600017C")]
	[Address(RVA = "0xC8D3F0", Offset = "0xC8D3F0", VA = "0xC8D3F0")]
	public static Color ChangeColorAlpha(Color color, float alpha)
	{
		return default(Color);
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xC8D424", Offset = "0xC8D424", VA = "0xC8D424")]
	public static Color ChangeColorsValue(Color color, float brightenOrDarken = 0f)
	{
		return default(Color);
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xC8D460", Offset = "0xC8D460", VA = "0xC8D460")]
	public static Color32 HexToColor(string hex)
	{
		return default(Color32);
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xC8D688", Offset = "0xC8D688", VA = "0xC8D688")]
	public static string ColorToHex(Color32 color, bool addHash = true)
	{
		return null;
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xC8DA28", Offset = "0xC8DA28", VA = "0xC8DA28")]
	public static string ColorToHex(Color color, bool addHash = true)
	{
		return null;
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xC8DAA8", Offset = "0xC8DAA8", VA = "0xC8DAA8")]
	public static void LerpMaterialColor(Material mat, string property, Color targetColor, float deltaMultiplier = 8f)
	{
	}
}
[Token(Token = "0x2000032")]
public static class FDebug
{
	[Token(Token = "0x6000182")]
	[Address(RVA = "0xC8DEE8", Offset = "0xC8DEE8", VA = "0xC8DEE8")]
	public static void Log(string log)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xC8DF70", Offset = "0xC8DF70", VA = "0xC8DF70")]
	public static void Log(string log, string category)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xC8D5BC", Offset = "0xC8D5BC", VA = "0xC8D5BC")]
	public static void LogRed(string log)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xC8E32C", Offset = "0xC8E32C", VA = "0xC8E32C")]
	public static void LogOrange(string log)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xC8E3F8", Offset = "0xC8E3F8", VA = "0xC8E3F8")]
	public static void LogYellow(string log)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xC8E284", Offset = "0xC8E284", VA = "0xC8E284")]
	public static string MarkerColor(string color)
	{
		return null;
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xC8E2E4", Offset = "0xC8E2E4", VA = "0xC8E2E4")]
	public static string EndColorMarker()
	{
		return null;
	}
}
[Token(Token = "0x2000033")]
public static class FEasing
{
	[Token(Token = "0x20004D4")]
	public enum EFease
	{
		[Token(Token = "0x4001E6E")]
		EaseInCubic,
		[Token(Token = "0x4001E6F")]
		EaseOutCubic,
		[Token(Token = "0x4001E70")]
		EaseInOutCubic,
		[Token(Token = "0x4001E71")]
		EaseInOutElastic,
		[Token(Token = "0x4001E72")]
		EaseInElastic,
		[Token(Token = "0x4001E73")]
		EaseOutElastic,
		[Token(Token = "0x4001E74")]
		EaseInExpo,
		[Token(Token = "0x4001E75")]
		EaseOutExpo,
		[Token(Token = "0x4001E76")]
		EaseInOutExpo,
		[Token(Token = "0x4001E77")]
		Linear
	}

	[Token(Token = "0x20004D5")]
	public delegate float Function(float s, float e, float v, float extraParameter = 1f);

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xC8E4C4", Offset = "0xC8E4C4", VA = "0xC8E4C4")]
	public static float EaseInCubic(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xC8E4DC", Offset = "0xC8E4DC", VA = "0xC8E4DC")]
	public static float EaseOutCubic(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xC8E504", Offset = "0xC8E504", VA = "0xC8E504")]
	public static float EaseInOutCubic(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xC8E55C", Offset = "0xC8E55C", VA = "0xC8E55C")]
	public static float EaseOutElastic(float start, float end, float value, float rangeMul = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xC8E658", Offset = "0xC8E658", VA = "0xC8E658")]
	public static float EaseInElastic(float start, float end, float value, float rangeMul = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xC8E758", Offset = "0xC8E758", VA = "0xC8E758")]
	public static float EaseInOutElastic(float start, float end, float value, float rangeMul = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xC8E8C4", Offset = "0xC8E8C4", VA = "0xC8E8C4")]
	public static float EaseInExpo(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xC8E95C", Offset = "0xC8E95C", VA = "0xC8E95C")]
	public static float EaseOutExpo(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xC8E9F4", Offset = "0xC8E9F4", VA = "0xC8E9F4")]
	public static float EaseInOutExpo(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xC8EAE4", Offset = "0xC8EAE4", VA = "0xC8EAE4")]
	public static float Linear(float start, float end, float value, float ignore = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xC8EB6C", Offset = "0xC8EB6C", VA = "0xC8EB6C")]
	public static Function GetEasingFunction(EFease easingFunction)
	{
		return null;
	}
}
[Token(Token = "0x2000034")]
public static class FLogicMethods
{
	[Token(Token = "0x6000194")]
	[Address(RVA = "0xBFF640", Offset = "0xBFF640", VA = "0xBFF640")]
	public static float FLerp(float a, float b, float t, float factor = 0.01f)
	{
		return default(float);
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xBFF704", Offset = "0xBFF704", VA = "0xBFF704")]
	public static float FAbs(float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xBFF714", Offset = "0xBFF714", VA = "0xBFF714")]
	public static float TopDownDistanceManhattan(Vector3 a, Vector3 b)
	{
		return default(float);
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xBFF744", Offset = "0xBFF744", VA = "0xBFF744")]
	public static float DistanceManhattan(Vector3 a, Vector3 b)
	{
		return default(float);
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xBFF788", Offset = "0xBFF788", VA = "0xBFF788")]
	public static float WrapAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xBFF7C0", Offset = "0xBFF7C0", VA = "0xBFF7C0")]
	public static Vector3 WrapVector(Vector3 angles)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xBFF878", Offset = "0xBFF878", VA = "0xBFF878")]
	public static float UnwrapAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xBFF8B0", Offset = "0xBFF8B0", VA = "0xBFF8B0")]
	public static Vector3 UnwrapVector(Vector3 angles)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xBFF96C", Offset = "0xBFF96C", VA = "0xBFF96C")]
	public static bool IsAlmostEqual(float val, float to, int afterComma = 2, float addRange = 0f)
	{
		return default(bool);
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xBFFA28", Offset = "0xBFFA28", VA = "0xBFFA28")]
	public static Quaternion TopDownAngle(Vector3 from, Vector3 to)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xBF78E8", Offset = "0xBF78E8", VA = "0xBF78E8")]
	public static Quaternion TopDownAnglePosition2D(Vector2 from, Vector2 to, float offset = 0f)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x2000035")]
public static class FStringMethods
{
	[Token(Token = "0x600019F")]
	[Address(RVA = "0xC0206C", Offset = "0xC0206C", VA = "0xC0206C")]
	public static string IntToString(int value, int signs)
	{
		return null;
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xC02158", Offset = "0xC02158", VA = "0xC02158")]
	public static string CapitalizeOnlyFirstLetter(string text)
	{
		return null;
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xC02260", Offset = "0xC02260", VA = "0xC02260")]
	public static string CapitalizeFirstLetter(string text)
	{
		return null;
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xC02310", Offset = "0xC02310", VA = "0xC02310")]
	public static string ReplaceSpacesWithUnderline(string text)
	{
		return null;
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xC023AC", Offset = "0xC023AC", VA = "0xC023AC")]
	public static string GetEndOfStringFromSeparator(string source, char[] separators, int which = 1, bool fromEnd = false)
	{
		return null;
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xC02570", Offset = "0xC02570", VA = "0xC02570")]
	public static string GetEndOfStringFromStringSeparator(string source, string[] separators, int which = 1, bool rest = false)
	{
		return null;
	}
}
[Token(Token = "0x2000036")]
public static class FTransformMethods
{
	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xC027F4", Offset = "0xC027F4", VA = "0xC027F4")]
	public static Transform FindChildByNameInDepth(string name, Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60001A6")]
	public static List<T> FindComponentsInAllChildren<T>(Transform transformToSearchIn) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60001A7")]
	public static T FindComponentInAllChildren<T>(Transform transformToSearchIn) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60001A8")]
	public static T FindComponentInAllParents<T>(Transform transformToSearchIn) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xC02904", Offset = "0xC02904", VA = "0xC02904")]
	public static void ChangeActiveChildrenInside(Transform parentOfThem, bool active)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xC029A8", Offset = "0xC029A8", VA = "0xC029A8")]
	public static void ChangeActiveThroughParentTo(Transform start, Transform end, bool active, bool changeParentsChildrenActivation = false)
	{
	}
}
[Token(Token = "0x2000037")]
public static class FVectorMethods
{
	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xC02AF0", Offset = "0xC02AF0", VA = "0xC02AF0")]
	public static Vector3 RandomVector(float rangeA, float rangeB)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xBF8DEC", Offset = "0xBF8DEC", VA = "0xBF8DEC")]
	public static float VectorSum(Vector3 vector)
	{
		return default(float);
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xC02B78", Offset = "0xC02B78", VA = "0xC02B78")]
	public static Vector3 RandomVectorNoY(float rangeA, float rangeB)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xC02BEC", Offset = "0xC02BEC", VA = "0xC02BEC")]
	public static Vector3 RandomVectorMinMax(float min, float max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xC02CE0", Offset = "0xC02CE0", VA = "0xC02CE0")]
	public static Vector3 RandomVectorNoYMinMax(float min, float max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xC02DA0", Offset = "0xC02DA0", VA = "0xC02DA0")]
	public static Vector3 GetUIPositionFromWorldPosition(Vector3 position, Camera camera, RectTransform canvas)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xC02F08", Offset = "0xC02F08", VA = "0xC02F08")]
	public static Vector3 PosFromMatrix(Matrix4x4 m)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xC02FAC", Offset = "0xC02FAC", VA = "0xC02FAC")]
	public static Quaternion RotFromMatrix(Matrix4x4 m)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xC030C8", Offset = "0xC030C8", VA = "0xC030C8")]
	public static Vector3 ScaleFromMatrix(Matrix4x4 m)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000038")]
public class SchoolBubbles : MonoBehaviour
{
	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem _bubbleParticles;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _emitEverySecond;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float _speedEmitMultiplier;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int _minBubbles;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int _maxBubbles;

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xD8B328", Offset = "0xD8B328", VA = "0xD8B328")]
	public void Start()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xD8B3D4", Offset = "0xD8B3D4", VA = "0xD8B3D4")]
	public void EmitBubbles(Vector3 pos, float amount)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xD8B50C", Offset = "0xD8B50C", VA = "0xD8B50C")]
	public SchoolBubbles()
	{
	}
}
[Token(Token = "0x2000039")]
public class SchoolChild : MonoBehaviour
{
	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public SchoolController _spawner;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _wayPoint;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float _speed;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _stuckCounter;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _damping;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _model;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _targetSpeed;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float tParam;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _rotateCounterR;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _rotateCounterL;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _scanner;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _scan;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool _instantiated;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _updateNextSeed;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int _updateSeed;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Transform _cacheTransform;

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xD8B52C", Offset = "0xD8B52C", VA = "0xD8B52C")]
	public void Start()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xD8C3DC", Offset = "0xD8C3DC", VA = "0xD8C3DC")]
	public void Update()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xD8C308", Offset = "0xD8C308", VA = "0xD8C308")]
	public void FrameSkipSeedInit()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xD8C100", Offset = "0xD8C100", VA = "0xD8C100")]
	public void CheckForBubblesThenInvoke()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xD8CEF4", Offset = "0xD8CEF4", VA = "0xD8CEF4")]
	public void EmitBubbles()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xD8CF88", Offset = "0xD8CF88", VA = "0xD8CF88")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xD8CFE0", Offset = "0xD8CFE0", VA = "0xD8CFE0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xD8B964", Offset = "0xD8B964", VA = "0xD8B964")]
	public void LocateRequiredChildren()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xD8BE9C", Offset = "0xD8BE9C", VA = "0xD8BE9C")]
	public void SkewModelForLessUniformedMovement()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xD8B878", Offset = "0xD8B878", VA = "0xD8B878")]
	public void SetRandomScale()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xD8BB8C", Offset = "0xD8BB8C", VA = "0xD8BB8C")]
	public void RandomizeStartAnimationFrame()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xD8C214", Offset = "0xD8C214", VA = "0xD8C214")]
	public void GetStartPos()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xD8D040", Offset = "0xD8D040", VA = "0xD8D040")]
	public Vector3 findWaypoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xD8CAE4", Offset = "0xD8CAE4", VA = "0xD8CAE4")]
	public void RayCastToPushAwayFromObstacles()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xD8D2C8", Offset = "0xD8D2C8", VA = "0xD8D2C8")]
	public void RayCastToPushAwayFromObstaclesCheckForCollision()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xD8D1DC", Offset = "0xD8D1DC", VA = "0xD8D1DC")]
	public void RotateScanner()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xD8D75C", Offset = "0xD8D75C", VA = "0xD8D75C")]
	public bool Avoidance()
	{
		return default(bool);
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xD8C8C0", Offset = "0xD8C8C0", VA = "0xD8C8C0")]
	public void ForwardMovement()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xD8C5D4", Offset = "0xD8C5D4", VA = "0xD8C5D4")]
	public void RotationBasedOnWaypointOrAvoidance()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xD8C464", Offset = "0xD8C464", VA = "0xD8C464")]
	public void CheckForDistanceToWaypoint()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xD8E428", Offset = "0xD8E428", VA = "0xD8E428")]
	public void CheckIfThisShouldTriggerNewFlockWaypoint()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xD8E378", Offset = "0xD8E378", VA = "0xD8E378")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xD8CB30", Offset = "0xD8CB30", VA = "0xD8CB30")]
	public void SetAnimationSpeed()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xD8BFA0", Offset = "0xD8BFA0", VA = "0xD8BFA0")]
	public void Wander(float delay)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xD8C0D4", Offset = "0xD8C0D4", VA = "0xD8C0D4")]
	public void SetRandomWaypoint()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xD8E66C", Offset = "0xD8E66C", VA = "0xD8E66C")]
	public SchoolChild()
	{
	}
}
[Token(Token = "0x200003A")]
public class SchoolController : MonoBehaviour
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SchoolChild[] _childPrefab;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool _groupChildToNewTransform;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _groupTransform;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string _groupName;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool _groupChildToSchool;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int _childAmount;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _spawnSphere;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _spawnSphereDepth;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _spawnSphereHeight;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _childSpeedMultipler;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float _minSpeed;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float _maxSpeed;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve _speedCurveMultiplier;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _minScale;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _maxScale;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _minDamping;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _maxDamping;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float _waypointDistance;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float _minAnimationSpeed;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float _maxAnimationSpeed;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float _randomPositionTimerMax;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float _randomPositionTimerMin;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float _acceleration;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _brake;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float _positionSphere;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float _positionSphereDepth;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float _positionSphereHeight;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool _childTriggerPos;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool _forceChildWaypoints;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public bool _autoRandomPosition;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float _forcedRandomDelay;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float _schoolSpeed;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<SchoolChild> _roamers;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Vector3 _posBuffer;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Vector3 _posOffset;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool _avoidance;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float _avoidAngle;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float _avoidDistance;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float _avoidSpeed;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float _stopDistance;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float _stopSpeedMultiplier;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public LayerMask _avoidanceMask;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public bool _push;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float _pushDistance;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float _pushForce;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SchoolBubbles _bubbles;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public int _updateDivisor;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float _newDelta;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public int _updateCounter;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public int _activeChildren;

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xD8E690", Offset = "0xD8E690", VA = "0xD8E690")]
	public void Start()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xD8E914", Offset = "0xD8E914", VA = "0xD8E914")]
	public void Update()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xD8EA68", Offset = "0xD8EA68", VA = "0xD8EA68")]
	public void InstantiateGroup()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xD8E7AC", Offset = "0xD8E7AC", VA = "0xD8E7AC")]
	public void AddFish(int amount)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xD8EC1C", Offset = "0xD8EC1C", VA = "0xD8EC1C")]
	public void AddChildToParent(Transform obj)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xD8EC84", Offset = "0xD8EC84", VA = "0xD8EC84")]
	public void RemoveFish(int amount)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xD8E990", Offset = "0xD8E990", VA = "0xD8E990")]
	public void UpdateFishAmount()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xD8E47C", Offset = "0xD8E47C", VA = "0xD8E47C")]
	public void SetRandomWaypointPosition()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xD8EDE0", Offset = "0xD8EDE0", VA = "0xD8EDE0")]
	public void AutoRandomWaypointPosition()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xD8E908", Offset = "0xD8E908", VA = "0xD8E908")]
	public float RandomWaypointTime()
	{
		return default(float);
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xD8EE6C", Offset = "0xD8EE6C", VA = "0xD8EE6C")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xD8F12C", Offset = "0xD8F12C", VA = "0xD8F12C")]
	public SchoolController()
	{
	}
}
[Token(Token = "0x200003B")]
public class isKinematic : MonoBehaviour
{
	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Component[] rigidbodies;

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x1C8B27C", Offset = "0x1C8B27C", VA = "0x1C8B27C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x1C8B440", Offset = "0x1C8B440", VA = "0x1C8B440")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x1C8B444", Offset = "0x1C8B444", VA = "0x1C8B444")]
	public isKinematic()
	{
	}
}
[Token(Token = "0x200003C")]
public class CameraOrbit : MonoBehaviour
{
	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Transform _XForm_Camera;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Transform _XForm_Parent;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Vector3 _LocalRotation;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected float _CameraDistance;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float MouseSensitivity;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ScrollSensitvity;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float OrbitDampening;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ScrollDampening;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool CameraDisabled;

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xCE0C7C", Offset = "0xCE0C7C", VA = "0xCE0C7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xCE0CCC", Offset = "0xCE0CCC", VA = "0xCE0CCC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xCE1048", Offset = "0xCE1048", VA = "0xCE1048")]
	public CameraOrbit()
	{
	}
}
[Token(Token = "0x200003D")]
public class SeaTurtleCameraScript : MonoBehaviour
{
	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float turnSpeed;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject seaTurtleCamera;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float cameraAngleX;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float cameraAngleY;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float cameraDistance;

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xD8FB04", Offset = "0xD8FB04", VA = "0xD8FB04")]
	public void Start()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xD8FC24", Offset = "0xD8FC24", VA = "0xD8FC24")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xD8FFE0", Offset = "0xD8FFE0", VA = "0xD8FFE0")]
	public void TargetSet(GameObject aTarget)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xD8FDA0", Offset = "0xD8FDA0", VA = "0xD8FDA0")]
	public void CameraRotationX()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xD8FEC0", Offset = "0xD8FEC0", VA = "0xD8FEC0")]
	public void CameraRotationY()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xD8FFE8", Offset = "0xD8FFE8", VA = "0xD8FFE8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xD90150", Offset = "0xD90150", VA = "0xD90150")]
	public SeaTurtleCameraScript()
	{
	}
}
[Token(Token = "0x200003E")]
public class SeaTurtleCharacter : MonoBehaviour
{
	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator seaTurtleAnimator;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody seaTurtleRigid;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isSwimming;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxForwardSpeed;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxTurnSpeed;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxUpDownSpeed;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float forwardSpeed;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float turnSpeed;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float upDownSpeed;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float forwardAcceleration;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float turnAcceleration;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float upDownAcceleration;

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xD90174", Offset = "0xD90174", VA = "0xD90174")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xD90360", Offset = "0xD90360", VA = "0xD90360")]
	public void Attack()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xD903C4", Offset = "0xD903C4", VA = "0xD903C4")]
	public void Hit()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xD90428", Offset = "0xD90428", VA = "0xD90428")]
	public void Eat()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xD9048C", Offset = "0xD9048C", VA = "0xD9048C")]
	public void Death()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xD904F0", Offset = "0xD904F0", VA = "0xD904F0")]
	public void Rebirth()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xD901FC", Offset = "0xD901FC", VA = "0xD901FC")]
	public void Swim()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xD902B4", Offset = "0xD902B4", VA = "0xD902B4")]
	public void UpFromWater()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xD90554", Offset = "0xD90554", VA = "0xD90554")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xD90558", Offset = "0xD90558", VA = "0xD90558")]
	public void Move()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xD909EC", Offset = "0xD909EC", VA = "0xD909EC")]
	public SeaTurtleCharacter()
	{
	}
}
[Token(Token = "0x200003F")]
public class SeaTurtleUserController : MonoBehaviour
{
	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SeaTurtleCharacter seaTurtleCharacter;

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xD90A10", Offset = "0xD90A10", VA = "0xD90A10")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xD90A68", Offset = "0xD90A68", VA = "0xD90A68")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xD90BD8", Offset = "0xD90BD8", VA = "0xD90BD8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xD90D10", Offset = "0xD90D10", VA = "0xD90D10")]
	public SeaTurtleUserController()
	{
	}
}
[Token(Token = "0x2000040")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C6804", Offset = "0x8C6804")]
public class RamSpline : MonoBehaviour
{
	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SplineProfile currentProfile;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SplineProfile oldProfile;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<RamSpline> beginnigChildSplines;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<RamSpline> endingChildSplines;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RamSpline beginningSpline;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RamSpline endingSpline;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int beginningConnectionID;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int endingConnectionID;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float beginningMinWidth;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float beginningMaxWidth;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float endingMinWidth;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float endingMaxWidth;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int toolbarInt;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool invertUVDirection;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool uvRotation;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshFilter meshfilter;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<Vector4> controlPoints;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<Quaternion> controlPointsRotations;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Quaternion> controlPointsOrientation;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Vector3> controlPointsUp;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<Vector3> controlPointsDown;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<float> controlPointsSnap;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AnimationCurve meshCurve;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<AnimationCurve> controlPointsMeshCurves;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AnimationCurve terrainCurve;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int detailTerrain;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public int detailTerrainForward;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool normalFromRaycast;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	public bool snapToTerrain;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public LayerMask snapMask;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<Vector3> points;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<Vector3> pointsUp;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<Vector3> pointsDown;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<Vector3> points2;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<Vector3> verticesBeginning;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public List<Vector3> verticesEnding;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public List<Vector3> normalsBeginning;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<Vector3> normalsEnding;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<float> widths;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public List<float> snaps;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<float> lerpValues;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public List<Quaternion> orientations;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public List<Vector3> tangents;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public List<Vector3> normalsList;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Color[] colors;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public List<Vector2> colorsFlowMap;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float minVal;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float maxVal;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float width;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int vertsInShape;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float traingleDensity;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float uvScale;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Material oldMaterial;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public bool showVertexColors;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	public bool showFlowMap;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
	public bool overrideFlowMap;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16B")]
	public bool drawOnMesh;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public bool drawOnMeshFlowMap;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
	public bool uvScaleOverride;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
	public bool debug;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Color drawColor;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float flowSpeed;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public float flowDirection;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public AnimationCurve flowFlat;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public AnimationCurve flowWaterfall;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float opacity;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public float drawSize;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public float length;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public float fulllength;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public float minMaxWidth;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public float uvWidth;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float uvBeginning;

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x1074FC8", Offset = "0x1074FC8", VA = "0x1074FC8")]
	public void Start()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x107607C", Offset = "0x107607C", VA = "0x107607C")]
	public void GenerateBeginningParentBased()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x10764CC", Offset = "0x10764CC", VA = "0x10764CC")]
	public void GenerateEndingParentBased()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x1074FCC", Offset = "0x1074FCC", VA = "0x1074FCC")]
	public void GenerateSpline([Optional] List<RamSpline> generatedSplines)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x10768F8", Offset = "0x10768F8", VA = "0x10768F8")]
	private void CalculateCatmullRomSideSplines(List<Vector4> controlPoints, int pos)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x10770EC", Offset = "0x10770EC", VA = "0x10770EC")]
	private void CalculateCatmullRomSplineParameters(List<Vector4> controlPoints, int pos, bool initialPoints = false)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x10774DC", Offset = "0x10774DC", VA = "0x10774DC")]
	private void CalculateCatmullRomSpline(List<Vector3> controlPoints, int pos, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x107B11C", Offset = "0x107B11C", VA = "0x107B11C")]
	private void CalculatePointPosition(List<Vector3> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t, ref List<Vector3> points)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x107AA00", Offset = "0x107AA00", VA = "0x107AA00")]
	private void CalculatePointParameters(List<Vector4> controlPoints, int pos, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x107A19C", Offset = "0x107A19C", VA = "0x107A19C")]
	private int ClampListPos(int pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x107A270", Offset = "0x107A270", VA = "0x107A270")]
	private Vector3 GetCatmullRomPosition(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x107A608", Offset = "0x107A608", VA = "0x107A608")]
	private Vector3 GetCatmullRomTangent(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x107A938", Offset = "0x107A938", VA = "0x107A938")]
	private Vector3 CalculateNormal(Vector3 tangent, Vector3 up)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x10777F0", Offset = "0x10777F0", VA = "0x10777F0")]
	private void GenerateMesh(ref Mesh mesh)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x107B308", Offset = "0x107B308", VA = "0x107B308")]
	private float FlowCalculate(float u, float normalY)
	{
		return default(float);
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x107B3EC", Offset = "0x107B3EC", VA = "0x107B3EC")]
	public RamSpline()
	{
	}
}
[Token(Token = "0x2000041")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C6868", Offset = "0x8C6868")]
public class SplineProfile : ScriptableObject
{
	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material splineMaterial;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve meshCurve;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minVal;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxVal;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int vertsInShape;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float traingleDensity;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float uvScale;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool uvRotation;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve flowFlat;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve flowWaterfall;

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xB26F38", Offset = "0xB26F38", VA = "0xB26F38")]
	public SplineProfile()
	{
	}
}
[Token(Token = "0x2000042")]
public class StandardWater : MonoBehaviour
{
	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 currentSpeed;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 altCurrentSpeed;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float offsetX;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float offsetY;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float altOffsetX;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float altOffsetY;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer renderer;

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xB275D4", Offset = "0xB275D4", VA = "0xB275D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xB2762C", Offset = "0xB2762C", VA = "0xB2762C")]
	private void Update()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xB27798", Offset = "0xB27798", VA = "0xB27798")]
	public StandardWater()
	{
	}
}
[Token(Token = "0x2000043")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C68D8", Offset = "0x8C68D8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C68D8", Offset = "0x8C68D8")]
public class SgtGravityReceiver : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody body;

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x14144C4", Offset = "0x14144C4", VA = "0x14144C4", Slot = "4")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x1414858", Offset = "0x1414858", VA = "0x1414858")]
	public SgtGravityReceiver()
	{
	}
}
[Token(Token = "0x2000044")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6970", Offset = "0x8C6970")]
public class SgtGravitySource : MonoBehaviour
{
	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtGravitySource> AllGravitySources;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CDECC", Offset = "0x8CDECC")]
	public float Mass;

	[NonSerialized]
	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody body;

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x1414860", Offset = "0x1414860", VA = "0x1414860", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x14148EC", Offset = "0x14148EC", VA = "0x14148EC", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1414978", Offset = "0x1414978", VA = "0x1414978", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x1414A68", Offset = "0x1414A68", VA = "0x1414A68")]
	public SgtGravitySource()
	{
	}
}
[Token(Token = "0x2000045")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C69BC", Offset = "0x8C69BC")]
public class SgtRotate : MonoBehaviour
{
	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 DegreesPerSecond;

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x142D65C", Offset = "0x142D65C", VA = "0x142D65C", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x142D734", Offset = "0x142D734", VA = "0x142D734")]
	public SgtRotate()
	{
	}
}
[Token(Token = "0x2000046")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C69F4", Offset = "0x8C69F4")]
public class SgtSimpleOrbit : MonoBehaviour
{
	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CDF04", Offset = "0x8CDF04")]
	public float Radius;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CDF3C", Offset = "0x8CDF3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CDF3C", Offset = "0x8CDF3C")]
	public float Oblateness;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CDF90", Offset = "0x8CDF90")]
	public Vector3 Center;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CDFC8", Offset = "0x8CDFC8")]
	public float Angle;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE000", Offset = "0x8CE000")]
	public float DegreesPerSecond;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x142E874", Offset = "0x142E874", VA = "0x142E874", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x142E9A4", Offset = "0x142E9A4", VA = "0x142E9A4")]
	public SgtSimpleOrbit()
	{
	}
}
[Token(Token = "0x2000047")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C6A50", Offset = "0x8C6A50")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6A50", Offset = "0x8C6A50")]
public class SgtVelocity : MonoBehaviour
{
	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE038", Offset = "0x8CE038")]
	public Vector3 Velocity;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	[SerializeField]
	private Vector3 expectedVelocity;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody body;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xED9C9C", Offset = "0xED9C9C", VA = "0xED9C9C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xED9E20", Offset = "0xED9E20", VA = "0xED9E20", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xED9E28", Offset = "0xED9E28", VA = "0xED9E28", Slot = "6")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xED9CA4", Offset = "0xED9CA4", VA = "0xED9CA4")]
	private void UpdateVelocity(bool forceSet = false)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xED9E30", Offset = "0xED9E30", VA = "0xED9E30")]
	public SgtVelocity()
	{
	}
}
[Token(Token = "0x2000048")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6AD8", Offset = "0x8C6AD8")]
public class SgtAdvancedBelt : SgtBelt
{
	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE0A8", Offset = "0x8CE0A8")]
	[SgtSeed]
	public int Seed;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE0F4", Offset = "0x8CE0F4")]
	public AnimationCurve DistanceDistribution;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE12C", Offset = "0x8CE12C")]
	public AnimationCurve HeightDistribution;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE164", Offset = "0x8CE164")]
	public AnimationCurve SpeedDistribution;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE19C", Offset = "0x8CE19C")]
	public AnimationCurve SpeedNoiseDistribution;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE1D4", Offset = "0x8CE1D4")]
	public AnimationCurve RadiusDistribution;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE20C", Offset = "0x8CE20C")]
	public AnimationCurve SpinDistribution;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE244", Offset = "0x8CE244")]
	public int AsteroidCount;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Keyframe[] defaultDistanceKeyframes;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Keyframe[] defaultHeightKeyframes;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Keyframe[] defaultSpeedKeyframes;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Keyframe[] defaultSpeedOffsetKeyframes;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Keyframe[] defaultRadiusKeyframes;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Keyframe[] defaultSpinKeyframes;

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xD92440", Offset = "0xD92440", VA = "0xD92440")]
	public static SgtAdvancedBelt CreateAdvancedBelt(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xD9257C", Offset = "0xD9257C", VA = "0xD9257C")]
	public static SgtAdvancedBelt CreateAdvancedBelt(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xD926CC", Offset = "0xD926CC", VA = "0xD926CC", Slot = "12")]
	protected override void StartOnce()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xD929BC", Offset = "0xD929BC", VA = "0xD929BC", Slot = "9")]
	protected override int BeginQuads()
	{
		return default(int);
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xD92A30", Offset = "0xD92A30", VA = "0xD92A30", Slot = "16")]
	protected override void NextQuad(ref SgtBeltAsteroid asteroid, int asteroidIndex)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xD92CA4", Offset = "0xD92CA4", VA = "0xD92CA4", Slot = "10")]
	protected override void EndQuads()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xD92D04", Offset = "0xD92D04", VA = "0xD92D04")]
	public SgtAdvancedBelt()
	{
	}
}
[Token(Token = "0x2000049")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6B24", Offset = "0x8C6B24")]
public class SgtAtmosphere : MonoBehaviour
{
	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtAtmosphere> AllAtmospheres;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE27C", Offset = "0x8CE27C")]
	public Color Color;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE2B4", Offset = "0x8CE2B4")]
	public float Brightness;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE2EC", Offset = "0x8CE2EC")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE324", Offset = "0x8CE324")]
	public int RenderQueueOffset;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE35C", Offset = "0x8CE35C")]
	public float Height;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE394", Offset = "0x8CE394")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8CE394", Offset = "0x8CE394")]
	public float InnerFog;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE3F4", Offset = "0x8CE3F4")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8CE3F4", Offset = "0x8CE3F4")]
	public float OuterFog;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE454", Offset = "0x8CE454")]
	public float Sky;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE48C", Offset = "0x8CE48C")]
	public float CameraOffset;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE4C4", Offset = "0x8CE4C4")]
	public bool Lit;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE4FC", Offset = "0x8CE4FC")]
	public Texture LightingTex;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE534", Offset = "0x8CE534")]
	public bool Scattering;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE56C", Offset = "0x8CE56C")]
	public bool GroundScattering;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE5A4", Offset = "0x8CE5A4")]
	public Texture ScatteringTex;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE5DC", Offset = "0x8CE5DC")]
	public float ScatteringStrength;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE614", Offset = "0x8CE614")]
	public float ScatteringMie;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE64C", Offset = "0x8CE64C")]
	public float ScatteringRayleigh;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE684", Offset = "0x8CE684")]
	public bool Night;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE6BC", Offset = "0x8CE6BC")]
	public float NightSky;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE6F4", Offset = "0x8CE6F4")]
	public SgtEase.Type NightEase;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE72C", Offset = "0x8CE72C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CE72C", Offset = "0x8CE72C")]
	public float NightStart;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE780", Offset = "0x8CE780")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CE780", Offset = "0x8CE780")]
	public float NightEnd;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE7D4", Offset = "0x8CE7D4")]
	public float NightPower;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE80C", Offset = "0x8CE80C")]
	public List<Light> Lights;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE844", Offset = "0x8CE844")]
	public List<SgtShadow> Shadows;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE87C", Offset = "0x8CE87C")]
	public Texture InnerDepthTex;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE8B4", Offset = "0x8CE8B4")]
	public float InnerMeshRadius;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE8EC", Offset = "0x8CE8EC")]
	public List<MeshRenderer> InnerRenderers;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE924", Offset = "0x8CE924")]
	public Texture2D OuterDepthTex;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE95C", Offset = "0x8CE95C")]
	public float OuterMeshRadius;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE994", Offset = "0x8CE994")]
	public List<Mesh> OuterMeshes;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<SgtAtmosphereOuter> Outers;

	[NonSerialized]
	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Material InnerMaterial;

	[NonSerialized]
	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Material OuterMaterial;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	protected bool awakeCalled;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	[SerializeField]
	protected bool startCalled;

	[NonSerialized]
	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
	protected bool updateMaterialsCalled;

	[NonSerialized]
	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEB")]
	protected bool updateOutersCalled;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private SgtTerrain terrain;

	[Token(Token = "0x17000020")]
	public float OuterRadius
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0xD9333C", Offset = "0xD9333C", VA = "0xD9333C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xD9334C", Offset = "0xD9334C", VA = "0xD9334C")]
	public void UpdateDepthTex()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xD93468", Offset = "0xD93468", VA = "0xD93468")]
	public void UpdateLightingTex()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xD93584", Offset = "0xD93584", VA = "0xD93584")]
	public void UpdateScatteringTex()
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xD936A0", Offset = "0xD936A0", VA = "0xD936A0")]
	public void UpdateTerrainMaterials()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xD937EC", Offset = "0xD937EC", VA = "0xD937EC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E6D1C", Offset = "0x8E6D1C")]
	public void UpdateMaterials()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xD94190", Offset = "0xD94190", VA = "0xD94190")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E6D54", Offset = "0x8E6D54")]
	public void ApplyInnerMaterial()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xD94270", Offset = "0xD94270", VA = "0xD94270")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E6D8C", Offset = "0x8E6D8C")]
	public void RemoveInnerMaterial()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xD94350", Offset = "0xD94350", VA = "0xD94350")]
	public static SgtAtmosphere CreateAtmosphere(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xD9448C", Offset = "0xD9448C", VA = "0xD9448C")]
	public static SgtAtmosphere CreateAtmosphere(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xD945DC", Offset = "0xD945DC", VA = "0xD945DC")]
	public void AddInnerRenderer(MeshRenderer renderer)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xD9471C", Offset = "0xD9471C", VA = "0xD9471C")]
	public void RemoveRenderer(MeshRenderer renderer)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xD9480C", Offset = "0xD9480C", VA = "0xD9480C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E6DC4", Offset = "0x8E6DC4")]
	public void UpdateOuters()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xD94E34", Offset = "0xD94E34", VA = "0xD94E34", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xD951E0", Offset = "0xD951E0", VA = "0xD951E0", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xD95510", Offset = "0xD95510", VA = "0xD95510", Slot = "6")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xD956D8", Offset = "0xD956D8", VA = "0xD956D8", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xD9599C", Offset = "0xD9599C", VA = "0xD9599C", Slot = "8")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xD95B40", Offset = "0xD95B40", VA = "0xD95B40")]
	private void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xD95F60", Offset = "0xD95F60", VA = "0xD95F60")]
	private void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xD9649C", Offset = "0xD9649C", VA = "0xD9649C")]
	private float GetSky(Camera camera)
	{
		return default(float);
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xD93FC4", Offset = "0xD93FC4", VA = "0xD93FC4")]
	private void UpdateMaterialNonSerialized()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xD951F8", Offset = "0xD951F8", VA = "0xD951F8")]
	private void StartOnce()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xD9519C", Offset = "0xD9519C", VA = "0xD9519C")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xD94A50", Offset = "0xD94A50", VA = "0xD94A50")]
	private SgtAtmosphereOuter GetOrAddOuter(int index)
	{
		return null;
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xD9695C", Offset = "0xD9695C", VA = "0xD9695C")]
	public SgtAtmosphere()
	{
	}
}
[Token(Token = "0x200004A")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6B70", Offset = "0x8C6B70")]
public class SgtAtmosphereDepth : MonoBehaviour
{
	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE9EC", Offset = "0x8CE9EC")]
	public SgtAtmosphere Atmosphere;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEA24", Offset = "0x8CEA24")]
	public int Width;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEA5C", Offset = "0x8CEA5C")]
	public TextureFormat Format;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEA94", Offset = "0x8CEA94")]
	public Color HorizonColor;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEACC", Offset = "0x8CEACC")]
	public SgtEase.Type InnerEase;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEB04", Offset = "0x8CEB04")]
	public Color InnerColor;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEB3C", Offset = "0x8CEB3C")]
	public float InnerColorPower;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEB74", Offset = "0x8CEB74")]
	public float InnerAlphaPower;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEBAC", Offset = "0x8CEBAC")]
	public SgtEase.Type OuterEase;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEBE4", Offset = "0x8CEBE4")]
	public Color OuterColor;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEC1C", Offset = "0x8CEC1C")]
	public float OuterColorPower;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEC54", Offset = "0x8CEC54")]
	public float OuterAlphaPower;

	[NonSerialized]
	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Texture2D generatedInnerTexture;

	[NonSerialized]
	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Texture2D generatedOuterTexture;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x17000021")]
	public Texture2D GeneratedInnerTexture
	{
		[Token(Token = "0x6000241")]
		[Address(RVA = "0xD96A64", Offset = "0xD96A64", VA = "0xD96A64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000022")]
	public Texture2D GeneratedOuterTexture
	{
		[Token(Token = "0x6000242")]
		[Address(RVA = "0xD96A6C", Offset = "0xD96A6C", VA = "0xD96A6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xD96A74", Offset = "0xD96A74", VA = "0xD96A74")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E6DFC", Offset = "0x8E6DFC")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xD96BD4", Offset = "0xD96BD4", VA = "0xD96BD4")]
	private void ValidateTexture(ref Texture2D texture2D, string createName)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xD96DC8", Offset = "0xD96DC8", VA = "0xD96DC8")]
	private void WriteTexture(Texture2D texture2D, float u, int x, Color baseColor, SgtEase.Type ease, float colorPower, float alphaPower)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xD96F24", Offset = "0xD96F24", VA = "0xD96F24")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E6E34", Offset = "0x8E6E34")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xD970F8", Offset = "0xD970F8", VA = "0xD970F8", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xD971C4", Offset = "0xD971C4", VA = "0xD971C4", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xD97274", Offset = "0xD97274", VA = "0xD97274", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xD97108", Offset = "0xD97108", VA = "0xD97108")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xD972FC", Offset = "0xD972FC", VA = "0xD972FC")]
	public SgtAtmosphereDepth()
	{
	}
}
[Token(Token = "0x200004B")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6BBC", Offset = "0x8C6BBC")]
public class SgtAtmosphereLighting : MonoBehaviour
{
	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CECC4", Offset = "0x8CECC4")]
	public SgtAtmosphere Atmosphere;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CECFC", Offset = "0x8CECFC")]
	public int Width;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CED34", Offset = "0x8CED34")]
	public TextureFormat Format;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CED6C", Offset = "0x8CED6C")]
	public SgtEase.Type SunsetEase;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEDA4", Offset = "0x8CEDA4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CEDA4", Offset = "0x8CEDA4")]
	public float SunsetStart;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEDF8", Offset = "0x8CEDF8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CEDF8", Offset = "0x8CEDF8")]
	public float SunsetEnd;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEE4C", Offset = "0x8CEE4C")]
	public float SunsetPowerR;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEE84", Offset = "0x8CEE84")]
	public float SunsetPowerG;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEEBC", Offset = "0x8CEEBC")]
	public float SunsetPowerB;

	[NonSerialized]
	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D generatedTexture;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x17000023")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x600024C")]
		[Address(RVA = "0xD973F4", Offset = "0xD973F4", VA = "0xD973F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xD973FC", Offset = "0xD973FC", VA = "0xD973FC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E6E6C", Offset = "0x8E6E6C")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xD97788", Offset = "0xD97788", VA = "0xD97788")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xD97658", Offset = "0xD97658", VA = "0xD97658")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E6EA4", Offset = "0x8E6EA4")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xD978C0", Offset = "0xD978C0", VA = "0xD978C0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xD97954", Offset = "0xD97954", VA = "0xD97954", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xD97A04", Offset = "0xD97A04", VA = "0xD97A04", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xD978D0", Offset = "0xD978D0", VA = "0xD978D0")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xD97A78", Offset = "0xD97A78", VA = "0xD97A78")]
	public SgtAtmosphereLighting()
	{
	}
}
[Token(Token = "0x200004C")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6C08", Offset = "0x8C6C08")]
public class SgtAtmosphereLights : MonoBehaviour
{
	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEF04", Offset = "0x8CEF04")]
	public SgtAtmosphere Atmosphere;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEF3C", Offset = "0x8CEF3C")]
	public bool RequireSameLayer;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEF74", Offset = "0x8CEF74")]
	public bool RequireSameTag;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEFAC", Offset = "0x8CEFAC")]
	public string RequireNameContains;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xD97AA8", Offset = "0xD97AA8", VA = "0xD97AA8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E6EDC", Offset = "0x8E6EDC")]
	public void UpdateLights()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xD97BB4", Offset = "0xD97BB4", VA = "0xD97BB4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xD97BC4", Offset = "0xD97BC4", VA = "0xD97BC4", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xD97C74", Offset = "0xD97C74", VA = "0xD97C74")]
	public SgtAtmosphereLights()
	{
	}
}
[Token(Token = "0x200004D")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6C54", Offset = "0x8C6C54")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C6C54", Offset = "0x8C6C54")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C6C54", Offset = "0x8C6C54")]
public class SgtAtmosphereOuter : MonoBehaviour
{
	[Token(Token = "0x20004D6")]
	public class CameraState : SgtCameraState
	{
		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPosition;

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0xD97D0C", Offset = "0xD97D0C", VA = "0xD97D0C")]
		public CameraState()
		{
		}
	}

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEFF4", Offset = "0x8CEFF4")]
	public SgtAtmosphere Atmosphere;

	[NonSerialized]
	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[NonSerialized]
	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<CameraState> cameraStates;

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xD94BCC", Offset = "0xD94BCC", VA = "0xD94BCC")]
	public void SetMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xD93E88", Offset = "0xD93E88", VA = "0xD93E88")]
	public void SetMaterial(Material material)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xD94D08", Offset = "0xD94D08", VA = "0xD94D08")]
	public void SetScale(float scale)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xD95EA4", Offset = "0xD95EA4", VA = "0xD95EA4")]
	public void Save(Camera camera)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xD963D4", Offset = "0xD963D4", VA = "0xD963D4")]
	public void Restore(Camera camera)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xD95DEC", Offset = "0xD95DEC", VA = "0xD95DEC")]
	public void Revert()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xD9687C", Offset = "0xD9687C", VA = "0xD9687C")]
	public static SgtAtmosphereOuter Create(SgtAtmosphere atmosphere)
	{
		return null;
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xD94D94", Offset = "0xD94D94", VA = "0xD94D94")]
	public static void Pool(SgtAtmosphereOuter outer)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xD95A78", Offset = "0xD95A78", VA = "0xD95A78")]
	public static void MarkForDestruction(SgtAtmosphereOuter outer)
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xD97C7C", Offset = "0xD97C7C", VA = "0xD97C7C", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xD97D04", Offset = "0xD97D04", VA = "0xD97D04")]
	public SgtAtmosphereOuter()
	{
	}
}
[Token(Token = "0x200004E")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6D14", Offset = "0x8C6D14")]
public class SgtAtmosphereScattering : MonoBehaviour
{
	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF02C", Offset = "0x8CF02C")]
	public SgtAtmosphere Atmosphere;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF064", Offset = "0x8CF064")]
	public int Width;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF09C", Offset = "0x8CF09C")]
	public TextureFormat Format;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Scale;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF0D4", Offset = "0x8CF0D4")]
	public float Mie;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF10C", Offset = "0x8CF10C")]
	public float Rayleigh;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF144", Offset = "0x8CF144")]
	public SgtEase.Type SunsetEase;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF17C", Offset = "0x8CF17C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF17C", Offset = "0x8CF17C")]
	public float SunsetStart;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF1D0", Offset = "0x8CF1D0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF1D0", Offset = "0x8CF1D0")]
	public float SunsetEnd;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF224", Offset = "0x8CF224")]
	public float SunsetPowerR;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF25C", Offset = "0x8CF25C")]
	public float SunsetPowerG;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF294", Offset = "0x8CF294")]
	public float SunsetPowerB;

	[NonSerialized]
	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Texture2D generatedTexture;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x17000024")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x6000264")]
		[Address(RVA = "0xD97D1C", Offset = "0xD97D1C", VA = "0xD97D1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xD97D24", Offset = "0xD97D24", VA = "0xD97D24")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E6F14", Offset = "0x8E6F14")]
	public void UpdateTexture()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xD980B0", Offset = "0xD980B0", VA = "0xD980B0")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xD97F80", Offset = "0xD97F80", VA = "0xD97F80")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E6F4C", Offset = "0x8E6F4C")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xD981F8", Offset = "0xD981F8", VA = "0xD981F8", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xD9828C", Offset = "0xD9828C", VA = "0xD9828C", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xD9833C", Offset = "0xD9833C", VA = "0xD9833C", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xD98208", Offset = "0xD98208", VA = "0xD98208")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xD983B0", Offset = "0xD983B0", VA = "0xD983B0")]
	public SgtAtmosphereScattering()
	{
	}
}
[Token(Token = "0x200004F")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6D60", Offset = "0x8C6D60")]
public class SgtAtmosphereShadows : MonoBehaviour
{
	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF304", Offset = "0x8CF304")]
	public SgtAtmosphere Atmosphere;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF33C", Offset = "0x8CF33C")]
	public bool RequireSameLayer;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF374", Offset = "0x8CF374")]
	public bool RequireSameTag;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF3AC", Offset = "0x8CF3AC")]
	public string RequireNameContains;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xD983F0", Offset = "0xD983F0", VA = "0xD983F0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E6F84", Offset = "0x8E6F84")]
	public void UpdateShadows()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xD984FC", Offset = "0xD984FC", VA = "0xD984FC", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xD9850C", Offset = "0xD9850C", VA = "0xD9850C", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xD985BC", Offset = "0xD985BC", VA = "0xD985BC")]
	public SgtAtmosphereShadows()
	{
	}
}
[Token(Token = "0x2000050")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6DAC", Offset = "0x8C6DAC")]
public class SgtAurora : MonoBehaviour
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF3F4", Offset = "0x8CF3F4")]
	public Texture MainTex;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF42C", Offset = "0x8CF42C")]
	public Color Color;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF464", Offset = "0x8CF464")]
	public float Brightness;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF49C", Offset = "0x8CF49C")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF4D4", Offset = "0x8CF4D4")]
	public int RenderQueueOffset;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF50C", Offset = "0x8CF50C")]
	public float CameraOffset;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF544", Offset = "0x8CF544")]
	[SgtSeed]
	public int Seed;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF590", Offset = "0x8CF590")]
	public float RadiusMin;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF5C8", Offset = "0x8CF5C8")]
	public float RadiusMax;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF600", Offset = "0x8CF600")]
	public int PathCount;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF638", Offset = "0x8CF638")]
	public int PathDetail;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF670", Offset = "0x8CF670")]
	public float TrailEdgeFade;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF6A8", Offset = "0x8CF6A8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF6A8", Offset = "0x8CF6A8")]
	public float PathLengthMin;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF6FC", Offset = "0x8CF6FC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF6FC", Offset = "0x8CF6FC")]
	public float PathLengthMax;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF750", Offset = "0x8CF750")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF750", Offset = "0x8CF750")]
	public float StartMin;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF7A4", Offset = "0x8CF7A4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF7A4", Offset = "0x8CF7A4")]
	public float StartMax;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF7F8", Offset = "0x8CF7F8")]
	public float StartBias;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF830", Offset = "0x8CF830")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF830", Offset = "0x8CF830")]
	public float StartTop;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF884", Offset = "0x8CF884")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF884", Offset = "0x8CF884")]
	public int PointDetail;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF8DC", Offset = "0x8CF8DC")]
	public float PointSpiral;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF914", Offset = "0x8CF914")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF914", Offset = "0x8CF914")]
	public float PointJitter;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF968", Offset = "0x8CF968")]
	public float TrailTile;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF9A0", Offset = "0x8CF9A0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF9A0", Offset = "0x8CF9A0")]
	public float TrailHeights;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF9F8", Offset = "0x8CF9F8")]
	public int TrailHeightsDetail;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFA30", Offset = "0x8CFA30")]
	public Gradient Colors;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFA68", Offset = "0x8CFA68")]
	public int ColorsDetail;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFAA0", Offset = "0x8CFAA0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CFAA0", Offset = "0x8CFAA0")]
	public float ColorsAlpha;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFAF4", Offset = "0x8CFAF4")]
	public float ColorsAlphaBias;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFB2C", Offset = "0x8CFB2C")]
	public bool FadeNear;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFB64", Offset = "0x8CFB64")]
	public Texture FadeNearTex;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFB9C", Offset = "0x8CFB9C")]
	public float FadeNearRadius;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFBD4", Offset = "0x8CFBD4")]
	public float FadeNearThickness;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFC0C", Offset = "0x8CFC0C")]
	public bool Anim;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFC44", Offset = "0x8CFC44")]
	public float AnimOffset;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFC7C", Offset = "0x8CFC7C")]
	public float AnimSpeed;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFCB4", Offset = "0x8CFCB4")]
	public float AnimStrength;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFCEC", Offset = "0x8CFCEC")]
	public int AnimStrengthDetail;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFD24", Offset = "0x8CFD24")]
	public float AnimAngle;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFD5C", Offset = "0x8CFD5C")]
	public int AnimAngleDetail;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<SgtAuroraModel> Models;

	[NonSerialized]
	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Material Material;

	[NonSerialized]
	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<Mesh> Meshes;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	private bool startCalled;

	[NonSerialized]
	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool updateMaterialCalled;

	[NonSerialized]
	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
	protected bool updateMeshesAndModelsCalled;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Vector3> positions;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<Vector4> coords0;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<Color> colors;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<Vector3> normals;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<int> indices;

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xD985C4", Offset = "0xD985C4", VA = "0xD985C4")]
	public void UpdateMainTex()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xD98674", Offset = "0xD98674", VA = "0xD98674")]
	public void UpdateFadeNearTex()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xD98724", Offset = "0xD98724", VA = "0xD98724")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E6FBC", Offset = "0x8E6FBC")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xD98CFC", Offset = "0xD98CFC", VA = "0xD98CFC")]
	private void BakeMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xD98F18", Offset = "0xD98F18", VA = "0xD98F18")]
	private Mesh GetMesh(int index)
	{
		return null;
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xD99198", Offset = "0xD99198", VA = "0xD99198")]
	private Vector3 GetStart(float angle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xD992FC", Offset = "0xD992FC", VA = "0xD992FC")]
	private Vector3 GetNext(Vector3 point, float angle, float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xD99418", Offset = "0xD99418", VA = "0xD99418")]
	private float GetNextAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xD99448", Offset = "0xD99448", VA = "0xD99448")]
	private float GetNextStrength()
	{
		return default(float);
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xD99458", Offset = "0xD99458", VA = "0xD99458")]
	private Color GetNextColor()
	{
		return default(Color);
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xD99560", Offset = "0xD99560", VA = "0xD99560")]
	private float GetNextHeight()
	{
		return default(float);
	}

	[Token(Token = "0x600027C")]
	private void Shift<T>(ref T a, ref T b, ref T c, T d, ref float f)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xD99570", Offset = "0xD99570", VA = "0xD99570")]
	private void AddPath(ref Mesh mesh, ref int meshCount, ref int vertexCount)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xD9A434", Offset = "0xD9A434", VA = "0xD9A434")]
	private Vector3 GetNormal(Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xD9A510", Offset = "0xD9A510", VA = "0xD9A510")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E6FF4", Offset = "0x8E6FF4")]
	public void UpdateMeshesAndModels()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xD9AC88", Offset = "0xD9AC88", VA = "0xD9AC88")]
	public static SgtAurora CreateAurora(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xD9ADC4", Offset = "0xD9ADC4", VA = "0xD9ADC4")]
	public static SgtAurora CreateAurora(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xD9AF14", Offset = "0xD9AF14", VA = "0xD9AF14", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xD9B1D4", Offset = "0xD9B1D4", VA = "0xD9B1D4", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xD9B1EC", Offset = "0xD9B1EC", VA = "0xD9B1EC", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xD9B2D8", Offset = "0xD9B2D8", VA = "0xD9B2D8", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xD9B544", Offset = "0xD9B544", VA = "0xD9B544", Slot = "8")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xD9B7F0", Offset = "0xD9B7F0", VA = "0xD9B7F0")]
	private void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xD9BC10", Offset = "0xD9BC10", VA = "0xD9BC10")]
	private void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xD9A954", Offset = "0xD9A954", VA = "0xD9A954")]
	private SgtAuroraModel GetOrAddModel(int index)
	{
		return null;
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xD9B190", Offset = "0xD9B190", VA = "0xD9B190")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xD9BEB0", Offset = "0xD9BEB0", VA = "0xD9BEB0")]
	public SgtAurora()
	{
	}
}
[Token(Token = "0x2000051")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6DF8", Offset = "0x8C6DF8")]
public class SgtAuroraFadeNear : MonoBehaviour
{
	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFDA4", Offset = "0x8CFDA4")]
	public SgtAurora Aurora;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFDDC", Offset = "0x8CFDDC")]
	public int Width;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFE14", Offset = "0x8CFE14")]
	public TextureFormat Format;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFE4C", Offset = "0x8CFE4C")]
	public SgtEase.Type Ease;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFE84", Offset = "0x8CFE84")]
	public float Power;

	[NonSerialized]
	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D generatedTexture;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x17000025")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x600028D")]
		[Address(RVA = "0xD9C0A0", Offset = "0xD9C0A0", VA = "0xD9C0A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xD9C0A8", Offset = "0xD9C0A8", VA = "0xD9C0A8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E702C", Offset = "0x8E702C")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xD9C3C8", Offset = "0xD9C3C8", VA = "0xD9C3C8")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xD9C30C", Offset = "0xD9C30C", VA = "0xD9C30C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7064", Offset = "0x8E7064")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xD9C4D8", Offset = "0xD9C4D8", VA = "0xD9C4D8", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xD9C56C", Offset = "0xD9C56C", VA = "0xD9C56C", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xD9C61C", Offset = "0xD9C61C", VA = "0xD9C61C", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xD9C4E8", Offset = "0xD9C4E8", VA = "0xD9C4E8")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xD9C690", Offset = "0xD9C690", VA = "0xD9C690")]
	public SgtAuroraFadeNear()
	{
	}
}
[Token(Token = "0x2000052")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6E44", Offset = "0x8C6E44")]
public class SgtAuroraMainTex : MonoBehaviour
{
	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SgtAurora Aurora;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFEF4", Offset = "0x8CFEF4")]
	public int Width;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFF2C", Offset = "0x8CFF2C")]
	public int Height;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFF64", Offset = "0x8CFF64")]
	public TextureFormat Format;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFF9C", Offset = "0x8CFF9C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CFF9C", Offset = "0x8CFF9C")]
	public float NoiseStrength;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFFF0", Offset = "0x8CFFF0")]
	public int NoisePoints;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0028", Offset = "0x8D0028")]
	[SgtSeed]
	public int NoiseSeed;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0074", Offset = "0x8D0074")]
	public SgtEase.Type TopEase;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D00AC", Offset = "0x8D00AC")]
	public float TopPower;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D00E4", Offset = "0x8D00E4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D00E4", Offset = "0x8D00E4")]
	public float MiddlePoint;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0138", Offset = "0x8D0138")]
	public Color MiddleColor;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0170", Offset = "0x8D0170")]
	public SgtEase.Type MiddleEase;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D01A8", Offset = "0x8D01A8")]
	public float MiddlePower;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D01E0", Offset = "0x8D01E0")]
	public SgtEase.Type BottomEase;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0218", Offset = "0x8D0218")]
	public float BottomPower;

	[NonSerialized]
	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Texture2D generatedTexture;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<float> noisePoints;

	[Token(Token = "0x17000026")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x6000296")]
		[Address(RVA = "0xD9C6AC", Offset = "0xD9C6AC", VA = "0xD9C6AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xD9C6B4", Offset = "0xD9C6B4", VA = "0xD9C6B4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E709C", Offset = "0x8E709C")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xD9CB5C", Offset = "0xD9CB5C", VA = "0xD9CB5C")]
	private void WriteTexture(float u, float v, int x, int y)
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xD9CAA0", Offset = "0xD9CAA0", VA = "0xD9CAA0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E70D4", Offset = "0x8E70D4")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xD9CEA8", Offset = "0xD9CEA8", VA = "0xD9CEA8", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xD9CF3C", Offset = "0xD9CF3C", VA = "0xD9CF3C", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xD9CFEC", Offset = "0xD9CFEC", VA = "0xD9CFEC", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xD9CEB8", Offset = "0xD9CEB8", VA = "0xD9CEB8")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xD9D060", Offset = "0xD9D060", VA = "0xD9D060")]
	public SgtAuroraMainTex()
	{
	}
}
[Token(Token = "0x2000053")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6E90", Offset = "0x8C6E90")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C6E90", Offset = "0x8C6E90")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C6E90", Offset = "0x8C6E90")]
public class SgtAuroraModel : MonoBehaviour
{
	[Token(Token = "0x20004D7")]
	public class CameraState : SgtCameraState
	{
		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPosition;

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0xD9D1E0", Offset = "0xD9D1E0", VA = "0xD9D1E0")]
		public CameraState()
		{
		}
	}

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0288", Offset = "0x8D0288")]
	public SgtAurora Aurora;

	[NonSerialized]
	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[NonSerialized]
	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh mesh;

	[NonSerialized]
	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material material;

	[NonSerialized]
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<CameraState> cameraStates;

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xD9AAD4", Offset = "0xD9AAD4", VA = "0xD9AAD4")]
	public void SetMesh(Mesh newMesh)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xD98BE8", Offset = "0xD98BE8", VA = "0xD98BE8")]
	public void SetMaterial(Material newMaterial)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xD9BB54", Offset = "0xD9BB54", VA = "0xD9BB54")]
	public void Save(Camera camera)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xD9BD08", Offset = "0xD9BD08", VA = "0xD9BD08")]
	public void Restore(Camera camera)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xD9BA9C", Offset = "0xD9BA9C", VA = "0xD9BA9C")]
	public void Revert()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xD9BDD0", Offset = "0xD9BDD0", VA = "0xD9BDD0")]
	public static SgtAuroraModel Create(SgtAurora aurora)
	{
		return null;
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xD9ABE8", Offset = "0xD9ABE8", VA = "0xD9ABE8")]
	public static void Pool(SgtAuroraModel model)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xD9B728", Offset = "0xD9B728", VA = "0xD9B728")]
	public static void MarkForDestruction(SgtAuroraModel model)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xD9D150", Offset = "0xD9D150", VA = "0xD9D150", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xD9D1D8", Offset = "0xD9D1D8", VA = "0xD9D1D8")]
	public SgtAuroraModel()
	{
	}
}
[Token(Token = "0x2000054")]
public abstract class SgtBelt : SgtQuads
{
	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D02C0", Offset = "0x8D02C0")]
	public Texture HeightTex;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D02F8", Offset = "0x8D02F8")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D02F8", Offset = "0x8D02F8")]
	public float OrbitOffset;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0358", Offset = "0x8D0358")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D0358", Offset = "0x8D0358")]
	public float OrbitSpeed;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D03B8", Offset = "0x8D03B8")]
	public bool Lit;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D03F0", Offset = "0x8D03F0")]
	public Texture LightingTex;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0428", Offset = "0x8D0428")]
	public List<Light> Lights;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0460", Offset = "0x8D0460")]
	public List<SgtShadow> Shadows;

	[Token(Token = "0x17000027")]
	protected override string ShaderName
	{
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xD9D1E8", Offset = "0xD9D1E8", VA = "0xD9D1E8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xD9D230", Offset = "0xD9D230", VA = "0xD9D230")]
	public SgtCustomBelt MakeEditableCopy(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xD9D350", Offset = "0xD9D350", VA = "0xD9D350")]
	public SgtCustomBelt MakeEditableCopy(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xD9D76C", Offset = "0xD9D76C", VA = "0xD9D76C", Slot = "14")]
	public virtual void UpdateLightingTex()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xD9D81C", Offset = "0xD9D81C", VA = "0xD9D81C", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xD9D930", Offset = "0xD9D930", VA = "0xD9D930", Slot = "15")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xD9DB4C", Offset = "0xD9DB4C", VA = "0xD9DB4C", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xD9DC60", Offset = "0xD9DC60", VA = "0xD9DC60", Slot = "11")]
	protected override void BuildMaterial()
	{
	}

	[Token(Token = "0x60002B2")]
	protected abstract void NextQuad(ref SgtBeltAsteroid quad, int starIndex);

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xD9DD78", Offset = "0xD9DD78", VA = "0xD9DD78", Slot = "13")]
	protected override void BuildMesh(Mesh mesh, int asteroidIndex, int asteroidCount)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xD9EB2C", Offset = "0xD9EB2C", VA = "0xD9EB2C")]
	private void ObserverPreRender(SgtObserver observer)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xD9EC0C", Offset = "0xD9EC0C", VA = "0xD9EC0C")]
	protected void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xD92D10", Offset = "0xD92D10", VA = "0xD92D10")]
	protected SgtBelt()
	{
	}
}
[Serializable]
[Token(Token = "0x2000055")]
public class SgtBeltAsteroid
{
	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SgtBeltAsteroid Temp;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0498", Offset = "0x8D0498")]
	public int Variant;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D04D0", Offset = "0x8D04D0")]
	public Color Color;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0508", Offset = "0x8D0508")]
	public float Radius;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0540", Offset = "0x8D0540")]
	public float Height;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0578", Offset = "0x8D0578")]
	public float Angle;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D05B0", Offset = "0x8D05B0")]
	public float Spin;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D05E8", Offset = "0x8D05E8")]
	public float OrbitAngle;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0620", Offset = "0x8D0620")]
	public float OrbitSpeed;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0658", Offset = "0x8D0658")]
	public float OrbitDistance;

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xD9ED6C", Offset = "0xD9ED6C", VA = "0xD9ED6C")]
	public void CopyFrom(SgtBeltAsteroid other)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xD9D738", Offset = "0xD9D738", VA = "0xD9D738")]
	public SgtBeltAsteroid()
	{
	}
}
[Token(Token = "0x2000056")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6F60", Offset = "0x8C6F60")]
public class SgtBeltLighting : MonoBehaviour
{
	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0690", Offset = "0x8D0690")]
	public SgtBelt Belt;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D06C8", Offset = "0x8D06C8")]
	public int Width;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0700", Offset = "0x8D0700")]
	public TextureFormat Format;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0738", Offset = "0x8D0738")]
	public float FrontPower;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0770", Offset = "0x8D0770")]
	public float BackPower;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D07A8", Offset = "0x8D07A8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D07A8", Offset = "0x8D07A8")]
	public float BackStrength;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D07FC", Offset = "0x8D07FC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D07FC", Offset = "0x8D07FC")]
	public float BaseStrength;

	[NonSerialized]
	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D generatedTexture;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x17000028")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0xD9EEF0", Offset = "0xD9EEF0", VA = "0xD9EEF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xD9EEF8", Offset = "0xD9EEF8", VA = "0xD9EEF8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E710C", Offset = "0x8E710C")]
	public void UpdateTexture()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xD9F224", Offset = "0xD9F224", VA = "0xD9F224")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xD9F15C", Offset = "0xD9F15C", VA = "0xD9F15C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7144", Offset = "0x8E7144")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xD9F358", Offset = "0xD9F358", VA = "0xD9F358", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xD9F3EC", Offset = "0xD9F3EC", VA = "0xD9F3EC", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xD9F49C", Offset = "0xD9F49C", VA = "0xD9F49C", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xD9F368", Offset = "0xD9F368", VA = "0xD9F368")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xD9F510", Offset = "0xD9F510", VA = "0xD9F510")]
	public SgtBeltLighting()
	{
	}
}
[Token(Token = "0x2000057")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6FAC", Offset = "0x8C6FAC")]
public class SgtBeltLights : MonoBehaviour
{
	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0888", Offset = "0x8D0888")]
	public SgtBelt Belt;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D08C0", Offset = "0x8D08C0")]
	public bool RequireSameLayer;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D08F8", Offset = "0x8D08F8")]
	public bool RequireSameTag;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0930", Offset = "0x8D0930")]
	public string RequireNameContains;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xD9F52C", Offset = "0xD9F52C", VA = "0xD9F52C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E717C", Offset = "0x8E717C")]
	public void UpdateLights()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xD9F638", Offset = "0xD9F638", VA = "0xD9F638", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xD9F648", Offset = "0xD9F648", VA = "0xD9F648", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xD9F6F8", Offset = "0xD9F6F8", VA = "0xD9F6F8")]
	public SgtBeltLights()
	{
	}
}
[Token(Token = "0x2000058")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C6FF8", Offset = "0x8C6FF8")]
public class SgtBeltShadows : MonoBehaviour
{
	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0978", Offset = "0x8D0978")]
	public SgtBelt Belt;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D09B0", Offset = "0x8D09B0")]
	public bool RequireSameLayer;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D09E8", Offset = "0x8D09E8")]
	public bool RequireSameTag;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0A20", Offset = "0x8D0A20")]
	public string RequireNameContains;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xD9F700", Offset = "0xD9F700", VA = "0xD9F700")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E71B4", Offset = "0x8E71B4")]
	public void UpdateShadows()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xD9F80C", Offset = "0xD9F80C", VA = "0xD9F80C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xD9F81C", Offset = "0xD9F81C", VA = "0xD9F81C", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xD9F8CC", Offset = "0xD9F8CC", VA = "0xD9F8CC")]
	public SgtBeltShadows()
	{
	}
}
[Serializable]
[Token(Token = "0x2000059")]
public struct SgtBoundsD
{
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool set;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public double minX;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public double minY;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public double minZ;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public double maxX;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public double maxY;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public double maxZ;

	[Token(Token = "0x17000029")]
	public double SizeX
	{
		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x9A03E4", Offset = "0x9A03E4", VA = "0x9A03E4")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x1700002A")]
	public double SizeY
	{
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x9A03F4", Offset = "0x9A03F4", VA = "0x9A03F4")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x1700002B")]
	public double SizeZ
	{
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x9A0404", Offset = "0x9A0404", VA = "0x9A0404")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x1700002C")]
	public SgtVector3D Center
	{
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x9A0414", Offset = "0x9A0414", VA = "0x9A0414")]
		get
		{
			return default(SgtVector3D);
		}
	}

	[Token(Token = "0x1700002D")]
	public SgtVector3D Size
	{
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x9A041C", Offset = "0x9A041C", VA = "0x9A041C")]
		get
		{
			return default(SgtVector3D);
		}
	}

	[Token(Token = "0x1700002E")]
	public double ExtentsX
	{
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x9A0424", Offset = "0x9A0424", VA = "0x9A0424")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x1700002F")]
	public double ExtentsY
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x9A042C", Offset = "0x9A042C", VA = "0x9A042C")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x17000030")]
	public double ExtentsZ
	{
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x9A0434", Offset = "0x9A0434", VA = "0x9A0434")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x17000031")]
	public SgtVector3D Extents
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x9A043C", Offset = "0x9A043C", VA = "0x9A043C")]
		get
		{
			return default(SgtVector3D);
		}
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x9A0444", Offset = "0x9A0444", VA = "0x9A0444")]
	public void Add(SgtVector3D xyz)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x9A044C", Offset = "0x9A044C", VA = "0x9A044C")]
	public bool Contains(SgtVector3D xyz)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x9A0454", Offset = "0x9A0454", VA = "0x9A0454")]
	public bool Contains(long x, long y, long z)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x9A04B4", Offset = "0x9A04B4", VA = "0x9A04B4")]
	public void Clear()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x9A04CC", Offset = "0x9A04CC", VA = "0x9A04CC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x9A04D4", Offset = "0x9A04D4", VA = "0x9A04D4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xD9FE2C", Offset = "0xD9FE2C", VA = "0xD9FE2C")]
	public static bool operator ==(SgtBoundsD a, SgtBoundsD b)
	{
		return default(bool);
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xD9FE98", Offset = "0xD9FE98", VA = "0xD9FE98")]
	public static bool operator !=(SgtBoundsD a, SgtBoundsD b)
	{
		return default(bool);
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xD9FF04", Offset = "0xD9FF04", VA = "0xD9FF04")]
	public static explicit operator Bounds(SgtBoundsD a)
	{
		return default(Bounds);
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x9A04DC", Offset = "0x9A04DC", VA = "0x9A04DC", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x200005A")]
public struct SgtBoundsL
{
	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public long minX;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public long minY;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public long minZ;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public long maxX;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public long maxY;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public long maxZ;

	[Token(Token = "0x17000032")]
	public SgtBoundsL Double
	{
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x9A04E4", Offset = "0x9A04E4", VA = "0x9A04E4")]
		get
		{
			return default(SgtBoundsL);
		}
	}

	[Token(Token = "0x17000033")]
	public long SizeX
	{
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x9A0518", Offset = "0x9A0518", VA = "0x9A0518")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000034")]
	public long SizeY
	{
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x9A0528", Offset = "0x9A0528", VA = "0x9A0528")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000035")]
	public long SizeZ
	{
		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x9A0538", Offset = "0x9A0538", VA = "0x9A0538")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000036")]
	public SgtRectL RectZY
	{
		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x9A0548", Offset = "0x9A0548", VA = "0x9A0548")]
		get
		{
			return default(SgtRectL);
		}
	}

	[Token(Token = "0x17000037")]
	public SgtRectL RectXZ
	{
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x9A0564", Offset = "0x9A0564", VA = "0x9A0564")]
		get
		{
			return default(SgtRectL);
		}
	}

	[Token(Token = "0x17000038")]
	public SgtRectL RectXY
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x9A0584", Offset = "0x9A0584", VA = "0x9A0584")]
		get
		{
			return default(SgtRectL);
		}
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x9A05A0", Offset = "0x9A05A0", VA = "0x9A05A0")]
	public SgtBoundsL(long x, long y, long z, long size)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x9A05C8", Offset = "0x9A05C8", VA = "0x9A05C8")]
	public SgtBoundsL(long newMinX, long newMinY, long newMinZ, long newMaxX, long newMaxY, long newMaxZ)
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x9A05D8", Offset = "0x9A05D8", VA = "0x9A05D8")]
	public void ClampTo(SgtBoundsL other)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x9A0614", Offset = "0x9A0614", VA = "0x9A0614")]
	public bool Contains(SgtVector3L xyz)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x9A0674", Offset = "0x9A0674", VA = "0x9A0674")]
	public bool Contains(long x, long y, long z)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x9A06C8", Offset = "0x9A06C8", VA = "0x9A06C8")]
	public bool IsInsideX(long x)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x9A06EC", Offset = "0x9A06EC", VA = "0x9A06EC")]
	public bool IsInsideY(long y)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x9A0710", Offset = "0x9A0710", VA = "0x9A0710")]
	public bool IsInsideZ(long z)
	{
		return default(bool);
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x9A0734", Offset = "0x9A0734", VA = "0x9A0734")]
	public void Clear()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x9A0744", Offset = "0x9A0744", VA = "0x9A0744", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x9A074C", Offset = "0x9A074C", VA = "0x9A074C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xDA0894", Offset = "0xDA0894", VA = "0xDA0894")]
	public static bool operator ==(SgtBoundsL a, SgtBoundsL b)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xDA0900", Offset = "0xDA0900", VA = "0xDA0900")]
	public static bool operator !=(SgtBoundsL a, SgtBoundsL b)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x9A0754", Offset = "0x9A0754", VA = "0x9A0754", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x200005B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7044", Offset = "0x8C7044")]
public class SgtBox : SgtShape
{
	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0A68", Offset = "0x8D0A68")]
	public Vector3 Extents;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0AA0", Offset = "0x8D0AA0")]
	public SgtEase.Type Ease;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0AD8", Offset = "0x8D0AD8")]
	public float Power;

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xDA0E68", Offset = "0xDA0E68", VA = "0xDA0E68", Slot = "4")]
	public override float GetDensity(Vector3 worldPoint)
	{
		return default(float);
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xDA0FC8", Offset = "0xDA0FC8", VA = "0xDA0FC8")]
	public static SgtBox CreateBox(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xDA10E0", Offset = "0xDA10E0", VA = "0xDA10E0")]
	public static SgtBox CreateBox(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xDA1230", Offset = "0xDA1230", VA = "0xDA1230")]
	public SgtBox()
	{
	}
}
[Token(Token = "0x200005C")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C707C", Offset = "0x8C707C")]
public class SgtBoxStarfield : SgtPointStarfield
{
	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0B10", Offset = "0x8D0B10")]
	[SgtSeed]
	public int Seed;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0B5C", Offset = "0x8D0B5C")]
	public Vector3 Extents;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0B94", Offset = "0x8D0B94")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D0B94", Offset = "0x8D0B94")]
	public float Offset;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0BE8", Offset = "0x8D0BE8")]
	public int StarCount;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0C20", Offset = "0x8D0C20")]
	public float StarRadiusMin;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0C58", Offset = "0x8D0C58")]
	public float StarRadiusMax;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0C90", Offset = "0x8D0C90")]
	public float StarRadiusBias;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0CC8", Offset = "0x8D0CC8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D0CC8", Offset = "0x8D0CC8")]
	public float StarPulseMax;

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xDA12B4", Offset = "0xDA12B4", VA = "0xDA12B4")]
	public static SgtBoxStarfield CreateBoxStarfield(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xDA13CC", Offset = "0xDA13CC", VA = "0xDA13CC")]
	public static SgtBoxStarfield CreateBoxStarfield(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xDA151C", Offset = "0xDA151C", VA = "0xDA151C", Slot = "9")]
	protected override int BeginQuads()
	{
		return default(int);
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xDA1590", Offset = "0xDA1590", VA = "0xDA1590", Slot = "15")]
	protected override void NextQuad(ref SgtPointStar star, int starIndex)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xDA1894", Offset = "0xDA1894", VA = "0xDA1894", Slot = "10")]
	protected override void EndQuads()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xDA18F4", Offset = "0xDA18F4", VA = "0xDA18F4")]
	public SgtBoxStarfield()
	{
	}
}
[Token(Token = "0x200005D")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C70C8", Offset = "0x8C70C8")]
public class SgtCameraDepth : SgtDepth
{
	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0D1C", Offset = "0x8D0D1C")]
	public int Resolution;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0D54", Offset = "0x8D0D54")]
	public float Size;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera cachedCamera;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture renderTexture;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D readTexture;

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xDA1988", Offset = "0xDA1988", VA = "0xDA1988")]
	public static SgtCameraDepth CreateDepthCamera(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xDA1AA0", Offset = "0xDA1AA0", VA = "0xDA1AA0")]
	public static SgtCameraDepth CreateDepthCamera(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xDA1BF0", Offset = "0xDA1BF0", VA = "0xDA1BF0", Slot = "4")]
	protected override float DoCalculate(Vector3 eye, Vector3 target)
	{
		return default(float);
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xDA2400", Offset = "0xDA2400", VA = "0xDA2400", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xDA2404", Offset = "0xDA2404", VA = "0xDA2404", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xDA21F8", Offset = "0xDA21F8", VA = "0xDA21F8")]
	private void UpdateCamera()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xDA248C", Offset = "0xDA248C", VA = "0xDA248C")]
	public SgtCameraDepth()
	{
	}
}
[Token(Token = "0x200005E")]
public class SgtCameraState
{
	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Camera Camera;

	[Token(Token = "0x6000304")]
	public static T Save<T>(ref List<T> cameraStates, Camera camera) where T : SgtCameraState, new()
	{
		return null;
	}

	[Token(Token = "0x6000305")]
	public static T Restore<T>(List<T> cameraStates, Camera camera) where T : SgtCameraState
	{
		return null;
	}

	[Token(Token = "0x6000306")]
	public static void Clear<T>(List<T> cameraStates) where T : SgtCameraState
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xD97D14", Offset = "0xD97D14", VA = "0xD97D14")]
	public SgtCameraState()
	{
	}
}
[Token(Token = "0x200005F")]
public static class SgtClassPool<T> where T : class
{
	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<T> pool;

	[Token(Token = "0x17000039")]
	public static int Count
	{
		[Token(Token = "0x6000308")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000309")]
	static SgtClassPool()
	{
	}

	[Token(Token = "0x600030A")]
	public static T Add(T entry)
	{
		return null;
	}

	[Token(Token = "0x600030B")]
	public static T Add(T element, Action<T> onAdd)
	{
		return null;
	}

	[Token(Token = "0x600030C")]
	public static T Pop()
	{
		return null;
	}
}
[Token(Token = "0x2000060")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C713C", Offset = "0x8C713C")]
public class SgtCloudsphere : MonoBehaviour
{
	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtCloudsphere> AllCloudspheres;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0D8C", Offset = "0x8D0D8C")]
	public Color Color;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0DC4", Offset = "0x8D0DC4")]
	public float Brightness;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0DFC", Offset = "0x8D0DFC")]
	public float MeshRadius;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0E34", Offset = "0x8D0E34")]
	public List<Mesh> Meshes;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0E6C", Offset = "0x8D0E6C")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0EA4", Offset = "0x8D0EA4")]
	public int RenderQueueOffset;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0EDC", Offset = "0x8D0EDC")]
	public float Radius;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0F14", Offset = "0x8D0F14")]
	public bool Fade;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0F4C", Offset = "0x8D0F4C")]
	public Texture FadeTex;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0F84", Offset = "0x8D0F84")]
	public float FadeDistance;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0FBC", Offset = "0x8D0FBC")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D0FBC", Offset = "0x8D0FBC")]
	public float CameraOffset;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D101C", Offset = "0x8D101C")]
	public Cubemap MainTex;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1054", Offset = "0x8D1054")]
	public Texture2D DepthTex;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D108C", Offset = "0x8D108C")]
	public bool Lit;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D10C4", Offset = "0x8D10C4")]
	public Texture LightingTex;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D10FC", Offset = "0x8D10FC")]
	public List<Light> Lights;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1134", Offset = "0x8D1134")]
	public List<SgtShadow> Shadows;

	[NonSerialized]
	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material Material;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	public List<SgtCloudsphereModel> Models;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private bool startCalled;

	[NonSerialized]
	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	private bool updateMaterialCalled;

	[NonSerialized]
	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	private bool updateModelsCalled;

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xDA2500", Offset = "0xDA2500", VA = "0xDA2500")]
	public void UpdateDeptchTex()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xDA25B0", Offset = "0xDA25B0", VA = "0xDA25B0")]
	public void UpdateFadeTex()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xDA2660", Offset = "0xDA2660", VA = "0xDA2660")]
	public void UpdateLightingTex()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xDA2710", Offset = "0xDA2710", VA = "0xDA2710")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E71EC", Offset = "0x8E71EC")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xDA2BF4", Offset = "0xDA2BF4", VA = "0xDA2BF4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7224", Offset = "0x8E7224")]
	public void UpdateModels()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xDA31A4", Offset = "0xDA31A4", VA = "0xDA31A4")]
	public static SgtCloudsphere CreateCloudsphere(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xDA32E0", Offset = "0xDA32E0", VA = "0xDA32E0")]
	public static SgtCloudsphere CreateCloudsphere(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xDA3430", Offset = "0xDA3430", VA = "0xDA3430", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xDA3740", Offset = "0xDA3740", VA = "0xDA3740", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xDA3758", Offset = "0xDA3758", VA = "0xDA3758", Slot = "6")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xDA38E0", Offset = "0xDA38E0", VA = "0xDA38E0", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xDA3B9C", Offset = "0xDA3B9C", VA = "0xDA3B9C", Slot = "8")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xDA3D34", Offset = "0xDA3D34", VA = "0xDA3D34")]
	private void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xDA4214", Offset = "0xDA4214", VA = "0xDA4214")]
	private void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xDA4024", Offset = "0xDA4024", VA = "0xDA4024")]
	private void UpdateMaterialNonSerialized()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xDA2DE8", Offset = "0xDA2DE8", VA = "0xDA2DE8")]
	private SgtCloudsphereModel GetOrAddModel(int index)
	{
		return null;
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xDA36FC", Offset = "0xDA36FC", VA = "0xDA36FC")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xDA44B4", Offset = "0xDA44B4", VA = "0xDA44B4")]
	public SgtCloudsphere()
	{
	}
}
[Token(Token = "0x2000061")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7188", Offset = "0x8C7188")]
public class SgtCloudsphereDepth : MonoBehaviour
{
	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D118C", Offset = "0x8D118C")]
	public SgtCloudsphere Cloudsphere;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D11C4", Offset = "0x8D11C4")]
	public int Width;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D11FC", Offset = "0x8D11FC")]
	public TextureFormat Format;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1234", Offset = "0x8D1234")]
	public SgtEase.Type RimEase;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D126C", Offset = "0x8D126C")]
	public Color RimColor;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D12A4", Offset = "0x8D12A4")]
	public float RimPower;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D12DC", Offset = "0x8D12DC")]
	public float AlphaDensity;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1314", Offset = "0x8D1314")]
	public float AlphaFade;

	[NonSerialized]
	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture2D generatedTexture;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x1700003A")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x6000320")]
		[Address(RVA = "0xDA457C", Offset = "0xDA457C", VA = "0xDA457C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xDA4584", Offset = "0xDA4584", VA = "0xDA4584")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E725C", Offset = "0x8E725C")]
	public void UpdateTexture()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xDA4910", Offset = "0xDA4910", VA = "0xDA4910")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xDA47E0", Offset = "0xDA47E0", VA = "0xDA47E0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7294", Offset = "0x8E7294")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xDA4A40", Offset = "0xDA4A40", VA = "0xDA4A40", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xDA4AD4", Offset = "0xDA4AD4", VA = "0xDA4AD4", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xDA4B84", Offset = "0xDA4B84", VA = "0xDA4B84", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xDA4A50", Offset = "0xDA4A50", VA = "0xDA4A50")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xDA4BF8", Offset = "0xDA4BF8", VA = "0xDA4BF8")]
	public SgtCloudsphereDepth()
	{
	}
}
[Token(Token = "0x2000062")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C71D4", Offset = "0x8C71D4")]
public class SgtCloudsphereFade : MonoBehaviour
{
	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SgtCloudsphere Cloudsphere;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Width;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1384", Offset = "0x8D1384")]
	public TextureFormat Format;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SgtEase.Type Ease;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Power;

	[NonSerialized]
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D generatedTexture;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x1700003B")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0xDA4C88", Offset = "0xDA4C88", VA = "0xDA4C88")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xDA4C90", Offset = "0xDA4C90", VA = "0xDA4C90")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E72CC", Offset = "0x8E72CC")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xDA5024", Offset = "0xDA5024", VA = "0xDA5024")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xDA4EF4", Offset = "0xDA4EF4", VA = "0xDA4EF4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7304", Offset = "0x8E7304")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xDA5128", Offset = "0xDA5128", VA = "0xDA5128", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xDA51BC", Offset = "0xDA51BC", VA = "0xDA51BC", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xDA526C", Offset = "0xDA526C", VA = "0xDA526C", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xDA5138", Offset = "0xDA5138", VA = "0xDA5138")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xDA52E0", Offset = "0xDA52E0", VA = "0xDA52E0")]
	public SgtCloudsphereFade()
	{
	}
}
[Token(Token = "0x2000063")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7220", Offset = "0x8C7220")]
public class SgtCloudsphereLighting : MonoBehaviour
{
	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D13F4", Offset = "0x8D13F4")]
	public SgtCloudsphere Cloudsphere;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D142C", Offset = "0x8D142C")]
	public int Width;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1464", Offset = "0x8D1464")]
	public TextureFormat Format;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D149C", Offset = "0x8D149C")]
	public SgtEase.Type SunsetEase;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D14D4", Offset = "0x8D14D4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D14D4", Offset = "0x8D14D4")]
	public float SunsetStart;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1528", Offset = "0x8D1528")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D1528", Offset = "0x8D1528")]
	public float SunsetEnd;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D157C", Offset = "0x8D157C")]
	public float SunsetPowerR;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D15B4", Offset = "0x8D15B4")]
	public float SunsetPowerG;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D15EC", Offset = "0x8D15EC")]
	public float SunsetPowerB;

	[NonSerialized]
	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D generatedTexture;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x1700003C")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x6000332")]
		[Address(RVA = "0xDA52FC", Offset = "0xDA52FC", VA = "0xDA52FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xDA5304", Offset = "0xDA5304", VA = "0xDA5304")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E733C", Offset = "0x8E733C")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xDA5690", Offset = "0xDA5690", VA = "0xDA5690")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xDA5560", Offset = "0xDA5560", VA = "0xDA5560")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7374", Offset = "0x8E7374")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xDA57C8", Offset = "0xDA57C8", VA = "0xDA57C8", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xDA585C", Offset = "0xDA585C", VA = "0xDA585C", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xDA590C", Offset = "0xDA590C", VA = "0xDA590C", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xDA57D8", Offset = "0xDA57D8", VA = "0xDA57D8")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xDA5980", Offset = "0xDA5980", VA = "0xDA5980")]
	public SgtCloudsphereLighting()
	{
	}
}
[Token(Token = "0x2000064")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C726C", Offset = "0x8C726C")]
public class SgtCloudsphereLights : MonoBehaviour
{
	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D165C", Offset = "0x8D165C")]
	public SgtCloudsphere Cloudsphere;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1694", Offset = "0x8D1694")]
	public bool RequireSameLayer;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D16CC", Offset = "0x8D16CC")]
	public bool RequireSameTag;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1704", Offset = "0x8D1704")]
	public string RequireNameContains;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xDA59B0", Offset = "0xDA59B0", VA = "0xDA59B0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E73AC", Offset = "0x8E73AC")]
	public void UpdateLights()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xDA5ABC", Offset = "0xDA5ABC", VA = "0xDA5ABC", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xDA5ACC", Offset = "0xDA5ACC", VA = "0xDA5ACC", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xDA5B7C", Offset = "0xDA5B7C", VA = "0xDA5B7C")]
	public SgtCloudsphereLights()
	{
	}
}
[Token(Token = "0x2000065")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C72B8", Offset = "0x8C72B8")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C72B8", Offset = "0x8C72B8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C72B8", Offset = "0x8C72B8")]
public class SgtCloudsphereModel : MonoBehaviour
{
	[Token(Token = "0x20004D8")]
	public class CameraState : SgtCameraState
	{
		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPosition;

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0xDA5C14", Offset = "0xDA5C14", VA = "0xDA5C14")]
		public CameraState()
		{
		}
	}

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D174C", Offset = "0x8D174C")]
	public SgtCloudsphere Cloudsphere;

	[NonSerialized]
	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[NonSerialized]
	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh mesh;

	[NonSerialized]
	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material material;

	[NonSerialized]
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<CameraState> cameraStates;

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xDA2F64", Offset = "0xDA2F64", VA = "0xDA2F64")]
	public void SetMesh(Mesh newMesh)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xDA2AE0", Offset = "0xDA2AE0", VA = "0xDA2AE0")]
	public void SetMaterial(Material newMaterial)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xDA3078", Offset = "0xDA3078", VA = "0xDA3078")]
	public void SetScale(float scale)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xDA43D4", Offset = "0xDA43D4", VA = "0xDA43D4")]
	public static SgtCloudsphereModel Create(SgtCloudsphere cloudsphere)
	{
		return null;
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xDA3104", Offset = "0xDA3104", VA = "0xDA3104")]
	public static void Pool(SgtCloudsphereModel model)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xDA3C6C", Offset = "0xDA3C6C", VA = "0xDA3C6C")]
	public static void MarkForDestruction(SgtCloudsphereModel model)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xDA4158", Offset = "0xDA4158", VA = "0xDA4158")]
	public void Save(Camera camera)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xDA430C", Offset = "0xDA430C", VA = "0xDA430C")]
	public void Restore(Camera camera)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xDA40A0", Offset = "0xDA40A0", VA = "0xDA40A0")]
	public void Revert()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xDA5B84", Offset = "0xDA5B84", VA = "0xDA5B84", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xDA5C0C", Offset = "0xDA5C0C", VA = "0xDA5C0C")]
	public SgtCloudsphereModel()
	{
	}
}
[Token(Token = "0x2000066")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7388", Offset = "0x8C7388")]
public class SgtCloudsphereShadows : MonoBehaviour
{
	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1784", Offset = "0x8D1784")]
	public SgtCloudsphere Cloudsphere;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D17BC", Offset = "0x8D17BC")]
	public bool RequireSameLayer;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D17F4", Offset = "0x8D17F4")]
	public bool RequireSameTag;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D182C", Offset = "0x8D182C")]
	public string RequireNameContains;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xDA5C1C", Offset = "0xDA5C1C", VA = "0xDA5C1C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E73E4", Offset = "0x8E73E4")]
	public void UpdateShadows()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xDA5D28", Offset = "0xDA5D28", VA = "0xDA5D28", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xDA5D38", Offset = "0xDA5D38", VA = "0xDA5D38", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xDA5DE8", Offset = "0xDA5DE8", VA = "0xDA5DE8")]
	public SgtCloudsphereShadows()
	{
	}
}
[Token(Token = "0x2000067")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C73D4", Offset = "0x8C73D4")]
public class SgtComponentPool : MonoBehaviour
{
	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtComponentPool> AllComponentPools;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1874", Offset = "0x8D1874")]
	public string TypeName;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D18AC", Offset = "0x8D18AC")]
	public List<Component> Elements;

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xDA5DF0", Offset = "0xDA5DF0", VA = "0xDA5DF0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xDA5E7C", Offset = "0xDA5E7C", VA = "0xDA5E7C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xDA5F08", Offset = "0xDA5F08", VA = "0xDA5F08", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xDA6034", Offset = "0xDA6034", VA = "0xDA6034")]
	public SgtComponentPool()
	{
	}
}
[Token(Token = "0x2000068")]
public static class SgtComponentPool<T> where T : Component
{
	[Token(Token = "0x20004D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCA84", Offset = "0x8CCA84")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string typeName;

		[Token(Token = "0x60022AC")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x60022AD")]
		internal bool <UpdateComponent>b__0(SgtComponentPool p)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SgtComponentPool pool;

	[Token(Token = "0x1700003D")]
	public static int Count
	{
		[Token(Token = "0x6000353")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000354")]
	public static T Add(T entry)
	{
		return null;
	}

	[Token(Token = "0x6000355")]
	public static T Add(T element, Action<T> onAdd)
	{
		return null;
	}

	[Token(Token = "0x6000356")]
	public static void Cache()
	{
	}

	[Token(Token = "0x6000357")]
	public static T Pop(Transform parent, string name, int layer)
	{
		return null;
	}

	[Token(Token = "0x6000358")]
	public static T Pop()
	{
		return null;
	}

	[Token(Token = "0x6000359")]
	public static T Pop(Predicate<T> match)
	{
		return null;
	}

	[Token(Token = "0x600035A")]
	private static void UpdateComponent(bool allowCreation)
	{
	}
}
[Token(Token = "0x2000069")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7420", Offset = "0x8C7420")]
public class SgtCustomBelt : SgtBelt
{
	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D18E4", Offset = "0x8D18E4")]
	public List<SgtBeltAsteroid> Asteroids;

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xDA6118", Offset = "0xDA6118", VA = "0xDA6118")]
	public static SgtCustomBelt CreateCustomBelt(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xDA6230", Offset = "0xDA6230", VA = "0xDA6230")]
	public static SgtCustomBelt CreateCustomBelt(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xDA6380", Offset = "0xDA6380", VA = "0xDA6380", Slot = "8")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xDA6468", Offset = "0xDA6468", VA = "0xDA6468", Slot = "9")]
	protected override int BeginQuads()
	{
		return default(int);
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xDA64C8", Offset = "0xDA64C8", VA = "0xDA64C8", Slot = "16")]
	protected override void NextQuad(ref SgtBeltAsteroid asteroid, int asteroidIndex)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xDA655C", Offset = "0xDA655C", VA = "0xDA655C", Slot = "10")]
	protected override void EndQuads()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xDA6560", Offset = "0xDA6560", VA = "0xDA6560")]
	public SgtCustomBelt()
	{
	}
}
[Token(Token = "0x200006A")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C746C", Offset = "0x8C746C")]
public class SgtCustomStarfield : SgtPointStarfield
{
	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D191C", Offset = "0x8D191C")]
	public List<SgtPointStar> Stars;

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xDA6564", Offset = "0xDA6564", VA = "0xDA6564")]
	public static SgtCustomStarfield CreateCustomStarfield(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xDA667C", Offset = "0xDA667C", VA = "0xDA667C")]
	public static SgtCustomStarfield CreateCustomStarfield(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xDA67CC", Offset = "0xDA67CC", VA = "0xDA67CC", Slot = "8")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xDA68B4", Offset = "0xDA68B4", VA = "0xDA68B4", Slot = "9")]
	protected override int BeginQuads()
	{
		return default(int);
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xDA6914", Offset = "0xDA6914", VA = "0xDA6914", Slot = "15")]
	protected override void NextQuad(ref SgtPointStar quad, int starIndex)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xDA69AC", Offset = "0xDA69AC", VA = "0xDA69AC", Slot = "10")]
	protected override void EndQuads()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xDA69B0", Offset = "0xDA69B0", VA = "0xDA69B0")]
	public SgtCustomStarfield()
	{
	}
}
[Token(Token = "0x200006B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C74B8", Offset = "0x8C74B8")]
public class SgtDebris : MonoBehaviour
{
	[Token(Token = "0x20004DA")]
	public enum StateType
	{
		[Token(Token = "0x4001E7D")]
		Hide,
		[Token(Token = "0x4001E7E")]
		Fade,
		[Token(Token = "0x4001E7F")]
		Show
	}

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnSpawn;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action OnDespawn;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1954", Offset = "0x8D1954")]
	public bool Pool;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D198C", Offset = "0x8D198C")]
	public StateType State;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D19C4", Offset = "0x8D19C4")]
	public SgtDebris Prefab;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D19FC", Offset = "0x8D19FC")]
	public Vector3 Scale;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1A34", Offset = "0x8D1A34")]
	public SgtVector3L Cell;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float Show;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xDA69B8", Offset = "0xDA69B8", VA = "0xDA69B8")]
	public SgtDebris()
	{
	}
}
[Token(Token = "0x200006C")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C74F0", Offset = "0x8C74F0")]
public class SgtDebrisGrid : MonoBehaviour
{
	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1A6C", Offset = "0x8D1A6C")]
	public Transform Target;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1AA4", Offset = "0x8D1AA4")]
	public SgtShapeGroup SpawnInside;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1ADC", Offset = "0x8D1ADC")]
	public float ShowDistance;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1B14", Offset = "0x8D1B14")]
	public float HideDistance;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1B4C", Offset = "0x8D1B4C")]
	public double CellSize;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1B84", Offset = "0x8D1B84")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D1B84", Offset = "0x8D1B84")]
	public float CellNoise;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1BD8", Offset = "0x8D1BD8")]
	public float DebrisCountTarget;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1C10", Offset = "0x8D1C10")]
	public float ScaleMin;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1C48", Offset = "0x8D1C48")]
	public float ScaleMax;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1C80", Offset = "0x8D1C80")]
	public float ScaleBias;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1CB8", Offset = "0x8D1CB8")]
	public bool RandomRotation;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1CF0", Offset = "0x8D1CF0")]
	[SgtSeed]
	public int Seed;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1D3C", Offset = "0x8D1D3C")]
	public List<SgtDebris> Prefabs;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<SgtDebris> Debris;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float minScale;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SgtBoundsL bounds;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private SgtDebris targetPrefab;

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xDA69C0", Offset = "0xDA69C0", VA = "0xDA69C0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E741C", Offset = "0x8E741C")]
	public void ClearDebris()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xDA6B88", Offset = "0xDA6B88", VA = "0xDA6B88")]
	public void UpdateDebris()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xDA76F0", Offset = "0xDA76F0", VA = "0xDA76F0")]
	public void UpdateDebrisScale(Vector3 worldPoint)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xDA7A74", Offset = "0xDA7A74", VA = "0xDA7A74")]
	public static SgtDebrisGrid CreateDebrisGrid(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xDA7B8C", Offset = "0xDA7B8C", VA = "0xDA7B8C")]
	public static SgtDebrisGrid CreateDebrisGrid(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xDA7CDC", Offset = "0xDA7CDC", VA = "0xDA7CDC", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xDA72CC", Offset = "0xDA72CC", VA = "0xDA72CC")]
	private void Spawn(long x, long y, long z, Vector3 point)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xDA7CE0", Offset = "0xDA7CE0", VA = "0xDA7CE0")]
	private SgtDebris Spawn(SgtDebris prefab)
	{
		return null;
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xDA6AC4", Offset = "0xDA6AC4", VA = "0xDA6AC4")]
	private void Despawn(SgtDebris debris)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xDA7674", Offset = "0xDA7674", VA = "0xDA7674")]
	private void Despawn(SgtDebris debris, int index)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xDA7E70", Offset = "0xDA7E70", VA = "0xDA7E70")]
	private bool DebrisMatch(SgtDebris debris)
	{
		return default(bool);
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xDA7F3C", Offset = "0xDA7F3C", VA = "0xDA7F3C")]
	public SgtDebrisGrid()
	{
	}
}
[Token(Token = "0x200006D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C753C", Offset = "0x8C753C")]
public class SgtDebrisSpawner : MonoBehaviour
{
	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtDebrisSpawner> AllDebrisSpawners;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1D84", Offset = "0x8D1D84")]
	public Transform Follower;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1DBC", Offset = "0x8D1DBC")]
	public float ShowSpeed;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1DF4", Offset = "0x8D1DF4")]
	public float ShowDistance;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1E2C", Offset = "0x8D1E2C")]
	public float HideDistance;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1E64", Offset = "0x8D1E64")]
	public int SpawnLimit;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1E9C", Offset = "0x8D1E9C")]
	public float SpawnRateMin;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1ED4", Offset = "0x8D1ED4")]
	public float SpawnRateMax;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1F0C", Offset = "0x8D1F0C")]
	public float SpawnScaleMin;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1F44", Offset = "0x8D1F44")]
	public float SpawnScaleMax;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1F7C", Offset = "0x8D1F7C")]
	public bool SpawnOnAwake;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1FB4", Offset = "0x8D1FB4")]
	public List<SgtDebris> Prefabs;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1FEC", Offset = "0x8D1FEC")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D1FEC", Offset = "0x8D1FEC")]
	public List<SgtShape> Shapes;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<SgtDebris> Debris;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float spawnCooldown;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 followerPosition;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 followerVelocity;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float minScale;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private SgtDebris targetPrefab;

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xDA7F80", Offset = "0xDA7F80", VA = "0xDA7F80")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7454", Offset = "0x8E7454")]
	public void ClearDebris()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xDA8190", Offset = "0xDA8190", VA = "0xDA8190")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E748C", Offset = "0x8E748C")]
	public void SpawnDebrisInside()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xDA8198", Offset = "0xDA8198", VA = "0xDA8198")]
	public void SpawnDebris(bool inside)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xDA87E8", Offset = "0xDA87E8", VA = "0xDA87E8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E74C4", Offset = "0x8E74C4")]
	public void SpawnAllDebrisInside()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xDA887C", Offset = "0xDA887C", VA = "0xDA887C")]
	public float GetDensity(Vector3 worldPosition)
	{
		return default(float);
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xDA89FC", Offset = "0xDA89FC", VA = "0xDA89FC")]
	public static SgtDebrisSpawner CreateDebrisSpawner(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xDA8B38", Offset = "0xDA8B38", VA = "0xDA8B38")]
	public static SgtDebrisSpawner CreateDebrisSpawner(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xDA8C88", Offset = "0xDA8C88", VA = "0xDA8C88", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xDA8DB8", Offset = "0xDA8DB8", VA = "0xDA8DB8", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xDA8E4C", Offset = "0xDA8E4C", VA = "0xDA8E4C", Slot = "6")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xDA8FE8", Offset = "0xDA8FE8", VA = "0xDA8FE8", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xDA8684", Offset = "0xDA8684", VA = "0xDA8684")]
	private SgtDebris Spawn(SgtDebris prefab)
	{
		return null;
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xDA8098", Offset = "0xDA8098", VA = "0xDA8098")]
	private void Despawn(SgtDebris debris, int index)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xDA9478", Offset = "0xDA9478", VA = "0xDA9478", Slot = "8")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xDA8CC0", Offset = "0xDA8CC0", VA = "0xDA8CC0")]
	private void ResetFollower()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xDA9504", Offset = "0xDA9504", VA = "0xDA9504")]
	private bool DebrisMatch(SgtDebris debris)
	{
		return default(bool);
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xDA95D0", Offset = "0xDA95D0", VA = "0xDA95D0")]
	public SgtDebrisSpawner()
	{
	}
}
[Token(Token = "0x200006E")]
[ExecuteInEditMode]
public abstract class SgtDepth : MonoBehaviour
{
	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D204C", Offset = "0x8D204C")]
	public LayerMask Layers;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2084", Offset = "0x8D2084")]
	public SgtEase.Type Ease;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool busy;

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xDA967C", Offset = "0xDA967C", VA = "0xDA967C")]
	public float Calculate(Vector3 eye, Vector3 target)
	{
		return default(float);
	}

	[Token(Token = "0x6000389")]
	protected abstract float DoCalculate(Vector3 eye, Vector3 target);

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xDA24CC", Offset = "0xDA24CC", VA = "0xDA24CC")]
	protected SgtDepth()
	{
	}
}
[Token(Token = "0x200006F")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C7584", Offset = "0x8C7584")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7584", Offset = "0x8C7584")]
public class SgtDepthTextureMode : MonoBehaviour
{
	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D20BC", Offset = "0x8D20BC")]
	public DepthTextureMode DepthMode;

	[NonSerialized]
	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera cachedCamera;

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xDA9794", Offset = "0xDA9794", VA = "0xDA9794")]
	public void UpdateDepthMode()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xDA984C", Offset = "0xDA984C", VA = "0xDA984C", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xDA9850", Offset = "0xDA9850", VA = "0xDA9850")]
	public SgtDepthTextureMode()
	{
	}
}
[Token(Token = "0x2000070")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C762C", Offset = "0x8C762C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C762C", Offset = "0x8C762C")]
public class SgtDisplacedMesh : MonoBehaviour
{
	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D20F4", Offset = "0x8D20F4")]
	public Mesh OriginalMesh;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D212C", Offset = "0x8D212C")]
	public Texture2D HeightTex;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2164", Offset = "0x8D2164")]
	public float InnerRadius;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D219C", Offset = "0x8D219C")]
	public float OuterRadius;

	[NonSerialized]
	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh displacedMesh;

	[NonSerialized]
	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshFilter meshFilter;

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xDA9858", Offset = "0xDA9858", VA = "0xDA9858")]
	public float GetSurfaceHeightLocal(Vector3 localPosition)
	{
		return default(float);
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xDA99C8", Offset = "0xDA99C8", VA = "0xDA99C8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E74FC", Offset = "0x8E74FC")]
	public void RebuildMesh()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xDA9CD0", Offset = "0xDA9CD0", VA = "0xDA9CD0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xDA9D74", Offset = "0xDA9D74", VA = "0xDA9D74", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xDA9EB4", Offset = "0xDA9EB4", VA = "0xDA9EB4", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xDA9978", Offset = "0xDA9978", VA = "0xDA9978")]
	private float GetHeightTexAlphaBilinear(Vector2 uv)
	{
		return default(float);
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xDA9F6C", Offset = "0xDA9F6C", VA = "0xDA9F6C")]
	private float GetHeightTexAlphaCubic(Vector2 uv)
	{
		return default(float);
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xDAA34C", Offset = "0xDAA34C", VA = "0xDAA34C")]
	private float GetHeightTexAlphaCos(Vector2 uv)
	{
		return default(float);
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xDAA518", Offset = "0xDAA518", VA = "0xDAA518")]
	private int RepeatX(int x)
	{
		return default(int);
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xDAA59C", Offset = "0xDAA59C", VA = "0xDAA59C")]
	private int ClampY(int y)
	{
		return default(int);
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xDAA620", Offset = "0xDAA620", VA = "0xDAA620")]
	private float Coserp(float a, float b, float t)
	{
		return default(float);
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xDAA314", Offset = "0xDAA314", VA = "0xDAA314")]
	public static float Cubic(float a, float b, float c, float d, float t)
	{
		return default(float);
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xDAA294", Offset = "0xDAA294", VA = "0xDAA294")]
	private void FracInt(float v, out int i, out float f)
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xDAA2AC", Offset = "0xDAA2AC", VA = "0xDAA2AC")]
	private float GetPixel(int x, int y)
	{
		return default(float);
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xDAA6C4", Offset = "0xDAA6C4", VA = "0xDAA6C4")]
	public SgtDisplacedMesh()
	{
	}
}
[Token(Token = "0x2000071")]
public static class SgtEase
{
	[Token(Token = "0x20004DB")]
	public enum Type
	{
		[Token(Token = "0x4001E81")]
		Linear,
		[Token(Token = "0x4001E82")]
		Smoothstep,
		[Token(Token = "0x4001E83")]
		Sinusoidial,
		[Token(Token = "0x4001E84")]
		Quadratic,
		[Token(Token = "0x4001E85")]
		Circular,
		[Token(Token = "0x4001E86")]
		Cubic,
		[Token(Token = "0x4001E87")]
		Quartic,
		[Token(Token = "0x4001E88")]
		Quintic,
		[Token(Token = "0x4001E89")]
		Exponential
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1410670", Offset = "0x1410670", VA = "0x1410670")]
	public static float Evaluate(Type ease, float t)
	{
		return default(float);
	}
}
[Token(Token = "0x2000072")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C76C4", Offset = "0x8C76C4")]
public class SgtEllipticalStarfield : SgtPointStarfield
{
	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D21D4", Offset = "0x8D21D4")]
	[SgtSeed]
	public int Seed;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2220", Offset = "0x8D2220")]
	public float Radius;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2258", Offset = "0x8D2258")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D2258", Offset = "0x8D2258")]
	public float Symmetry;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D22AC", Offset = "0x8D22AC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D22AC", Offset = "0x8D22AC")]
	public float Offset;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2300", Offset = "0x8D2300")]
	public bool Inverse;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2338", Offset = "0x8D2338")]
	public int StarCount;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2370", Offset = "0x8D2370")]
	public float StarRadiusMin;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D23A8", Offset = "0x8D23A8")]
	public float StarRadiusMax;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D23E0", Offset = "0x8D23E0")]
	public float StarRadiusBias;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2418", Offset = "0x8D2418")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D2418", Offset = "0x8D2418")]
	public float StarPulseMax;

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x1410820", Offset = "0x1410820", VA = "0x1410820")]
	public static SgtEllipticalStarfield CreateEllipticalStarfield(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x1410938", Offset = "0x1410938", VA = "0x1410938")]
	public static SgtEllipticalStarfield CreateEllipticalStarfield(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x1410C58", Offset = "0x1410C58", VA = "0x1410C58", Slot = "9")]
	protected override int BeginQuads()
	{
		return default(int);
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x1410D7C", Offset = "0x1410D7C", VA = "0x1410D7C", Slot = "15")]
	protected override void NextQuad(ref SgtPointStar quad, int starIndex)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x141101C", Offset = "0x141101C", VA = "0x141101C", Slot = "10")]
	protected override void EndQuads()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x1411104", Offset = "0x1411104", VA = "0x1411104")]
	public SgtEllipticalStarfield()
	{
	}
}
[Token(Token = "0x2000073")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7710", Offset = "0x8C7710")]
public class SgtFlare : MonoBehaviour
{
	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D246C", Offset = "0x8D246C")]
	public Mesh Mesh;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D24A4", Offset = "0x8D24A4")]
	public Material Material;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D24DC", Offset = "0x8D24DC")]
	public float HideThickness;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2514", Offset = "0x8D2514")]
	public SgtDepth Depth;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D254C", Offset = "0x8D254C")]
	public bool FollowCameras;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2584", Offset = "0x8D2584")]
	public float FollowDistance;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D25BC", Offset = "0x8D25BC")]
	public float CameraOffset;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SgtFlareModel Model;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool busy;

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x14111D0", Offset = "0x14111D0", VA = "0x14111D0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7534", Offset = "0x8E7534")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x14113AC", Offset = "0x14113AC", VA = "0x14113AC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E756C", Offset = "0x8E756C")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x1411588", Offset = "0x1411588", VA = "0x1411588")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E75A4", Offset = "0x8E75A4")]
	public void UpdateModel()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x141173C", Offset = "0x141173C", VA = "0x141173C")]
	public static SgtFlare CreateFlare(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x1411854", Offset = "0x1411854", VA = "0x1411854")]
	public static SgtFlare CreateFlare(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x14119A0", Offset = "0x14119A0", VA = "0x14119A0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x1411BBC", Offset = "0x1411BBC", VA = "0x1411BBC", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x1411DD8", Offset = "0x1411DD8", VA = "0x1411DD8", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x1411E60", Offset = "0x1411E60", VA = "0x1411E60", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x1411F30", Offset = "0x1411F30", VA = "0x1411F30")]
	private void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x1412A28", Offset = "0x1412A28", VA = "0x1412A28")]
	private void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x1412C28", Offset = "0x1412C28", VA = "0x1412C28")]
	public SgtFlare()
	{
	}
}
[Token(Token = "0x2000074")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C775C", Offset = "0x8C775C")]
public class SgtFlareMaterial : MonoBehaviour
{
	[Token(Token = "0x20004DC")]
	public enum ZTestState
	{
		[Token(Token = "0x4001E8B")]
		LEqual = 2,
		[Token(Token = "0x4001E8C")]
		Always = 6
	}

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D25F4", Offset = "0x8D25F4")]
	public SgtFlare Flare;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D262C", Offset = "0x8D262C")]
	public ZTestState ZTest;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2664", Offset = "0x8D2664")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D269C", Offset = "0x8D269C")]
	public int RenderQueueOffset;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D26D4", Offset = "0x8D26D4")]
	public TextureFormat Format;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D270C", Offset = "0x8D270C")]
	public int Width;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2744", Offset = "0x8D2744")]
	public Color Color;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D277C", Offset = "0x8D277C")]
	public SgtEase.Type Ease;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D27B4", Offset = "0x8D27B4")]
	public float PowerR;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D27EC", Offset = "0x8D27EC")]
	public float PowerG;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2824", Offset = "0x8D2824")]
	public float PowerB;

	[NonSerialized]
	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material generatedMaterial;

	[NonSerialized]
	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Texture2D generatedTexture;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x1700003E")]
	public Material GeneratedMaterial
	{
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x1412C40", Offset = "0x1412C40", VA = "0x1412C40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003F")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x1412C48", Offset = "0x1412C48", VA = "0x1412C48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x1412C50", Offset = "0x1412C50", VA = "0x1412C50")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E75DC", Offset = "0x8E75DC")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x1412FC8", Offset = "0x1412FC8", VA = "0x1412FC8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7614", Offset = "0x8E7614")]
	public void UpdateTexture()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x1413330", Offset = "0x1413330", VA = "0x1413330")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1412EBC", Offset = "0x1412EBC", VA = "0x1412EBC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E764C", Offset = "0x8E764C")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x14134B0", Offset = "0x14134B0", VA = "0x14134B0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x141358C", Offset = "0x141358C", VA = "0x141358C", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x14135A4", Offset = "0x14135A4", VA = "0x14135A4", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x14134C0", Offset = "0x14134C0", VA = "0x14134C0")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x141362C", Offset = "0x141362C", VA = "0x141362C")]
	public SgtFlareMaterial()
	{
	}
}
[Token(Token = "0x2000075")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C77A8", Offset = "0x8C77A8")]
public class SgtFlareMesh : MonoBehaviour
{
	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D286C", Offset = "0x8D286C")]
	public SgtFlare Flare;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D28A4", Offset = "0x8D28A4")]
	public int Detail;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D28DC", Offset = "0x8D28DC")]
	public float Radius;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2914", Offset = "0x8D2914")]
	public bool Wave;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D294C", Offset = "0x8D294C")]
	public float WaveStrength;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2984", Offset = "0x8D2984")]
	public int WavePoints;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D29BC", Offset = "0x8D29BC")]
	public float WavePower;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D29F4", Offset = "0x8D29F4")]
	public float WavePhase;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2A2C", Offset = "0x8D2A2C")]
	public bool Noise;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2A64", Offset = "0x8D2A64")]
	public float NoiseStrength;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2A9C", Offset = "0x8D2A9C")]
	public int NoisePoints;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2AD4", Offset = "0x8D2AD4")]
	public float NoisePower;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2B0C", Offset = "0x8D2B0C")]
	public float NoisePhase;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2B44", Offset = "0x8D2B44")]
	[SgtSeed]
	public int NoiseSeed;

	[NonSerialized]
	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh generatedMesh;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<float> points;

	[Token(Token = "0x17000040")]
	public Mesh GeneratedMesh
	{
		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x1413694", Offset = "0x1413694", VA = "0x1413694")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x141369C", Offset = "0x141369C", VA = "0x141369C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7684", Offset = "0x8E7684")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x1413EE0", Offset = "0x1413EE0", VA = "0x1413EE0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E76BC", Offset = "0x8E76BC")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x1413FD4", Offset = "0x1413FD4", VA = "0x1413FD4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x1414068", Offset = "0x1414068", VA = "0x1414068", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x1414118", Offset = "0x1414118", VA = "0x1414118", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x1413FE4", Offset = "0x1413FE4", VA = "0x1413FE4")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x14141F0", Offset = "0x14141F0", VA = "0x14141F0")]
	public SgtFlareMesh()
	{
	}
}
[Token(Token = "0x2000076")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C77F4", Offset = "0x8C77F4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C77F4", Offset = "0x8C77F4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C77F4", Offset = "0x8C77F4")]
public class SgtFlareModel : MonoBehaviour
{
	[Token(Token = "0x20004DD")]
	public class CameraState : SgtCameraState
	{
		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPosition;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion LocalRotation;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 LocalScale;

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0x14144BC", Offset = "0x14144BC", VA = "0x14144BC")]
		public CameraState()
		{
		}
	}

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2BC8", Offset = "0x8D2BC8")]
	public SgtFlare Flare;

	[NonSerialized]
	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[NonSerialized]
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<CameraState> cameraStates;

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x1411270", Offset = "0x1411270", VA = "0x1411270")]
	public void SetMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x141144C", Offset = "0x141144C", VA = "0x141144C")]
	public void SetMaterial(Material material)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x1414298", Offset = "0x1414298", VA = "0x1414298")]
	public void SetRotation(Quaternion rotation)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x141165C", Offset = "0x141165C", VA = "0x141165C")]
	public static SgtFlareModel Create(SgtFlare flare)
	{
		return null;
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x14142FC", Offset = "0x14142FC", VA = "0x14142FC")]
	public static void Pool(SgtFlareModel model)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x1411E68", Offset = "0x1411E68", VA = "0x1411E68")]
	public static void MarkForDestruction(SgtFlareModel model)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x1412914", Offset = "0x1412914", VA = "0x1412914")]
	public void Save(Camera camera)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x1412AEC", Offset = "0x1412AEC", VA = "0x1412AEC")]
	public void Restore(Camera camera)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x141258C", Offset = "0x141258C", VA = "0x141258C")]
	public void Revert()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x141439C", Offset = "0x141439C", VA = "0x141439C", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x141442C", Offset = "0x141442C", VA = "0x141442C", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x14144B4", Offset = "0x14144B4", VA = "0x14144B4")]
	public SgtFlareModel()
	{
	}
}
[Token(Token = "0x2000077")]
public enum SgtForceType
{
	[Token(Token = "0x4000416")]
	AddForce,
	[Token(Token = "0x4000417")]
	AddForceAtPosition
}
[Token(Token = "0x2000078")]
public static class SgtHelper
{
	[Token(Token = "0x20004DE")]
	private class LightProperties
	{
		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Direction;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Position;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Color;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Scatter;

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0x1419AE4", Offset = "0x1419AE4", VA = "0x1419AE4")]
		public LightProperties()
		{
		}
	}

	[Token(Token = "0x20004DF")]
	private class ShadowProperties
	{
		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Texture;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Matrix;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Ratio;

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0x141A43C", Offset = "0x141A43C", VA = "0x141A43C")]
		public ShadowProperties()
		{
		}
	}

	[Token(Token = "0x4000418")]
	public const string ShaderNamePrefix = "Hidden/Sgt";

	[Token(Token = "0x4000419")]
	public const string ComponentMenuPrefix = "Space Graphics Toolkit/SGT ";

	[Token(Token = "0x400041A")]
	public const string GameObjectMenuPrefix = "GameObject/Space Graphics Toolkit/";

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly float InscribedBox;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int QuadsPerMesh;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<Material> tempMaterials;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Stack<UnityEngine.Random.State> seedStates;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<Material> materials;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<Light> tempLights;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static List<LightProperties> cachedLightProperties;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static List<string> cachedLightKeywords;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static List<ShadowProperties> cachedShadowProperties;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static List<string> cachedShadowKeywords;

	[Token(Token = "0x60003D0")]
	public static void ClearCapacity<T>(List<T> list, int minCapacity)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x1412700", Offset = "0x1412700", VA = "0x1412700")]
	public static bool Enabled(Behaviour b)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D2")]
	public static T GetOrAddComponent<T>(GameObject gameObject, bool recordUndo = true) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60003D3")]
	public static T AddComponent<T>(GameObject gameObject, bool recordUndo = true) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60003D4")]
	public static T Destroy<T>(T o) where T : UnityEngine.Object
	{
		return null;
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x1414AEC", Offset = "0x1414AEC", VA = "0x1414AEC")]
	public static bool Zero(float v)
	{
		return default(bool);
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x1414B60", Offset = "0x1414B60", VA = "0x1414B60")]
	public static float Reciprocal(float v)
	{
		return default(float);
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x1414BE4", Offset = "0x1414BE4", VA = "0x1414BE4")]
	public static float Acos(float v)
	{
		return default(float);
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x1414C7C", Offset = "0x1414C7C", VA = "0x1414C7C")]
	public static Vector3 Reciprocal3(Vector3 xyz)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x1414D20", Offset = "0x1414D20", VA = "0x1414D20")]
	public static float Divide(float a, float b)
	{
		return default(float);
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x1414D34", Offset = "0x1414D34", VA = "0x1414D34")]
	public static Vector4 NewVector4(Vector3 xyz, float w)
	{
		return default(Vector4);
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x1414D64", Offset = "0x1414D64", VA = "0x1414D64")]
	public static float Pow(float a, float p)
	{
		return default(float);
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x1413F9C", Offset = "0x1413F9C", VA = "0x1413F9C")]
	public static float CubicInterpolate(float a, float b, float c, float d, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x1414E20", Offset = "0x1414E20", VA = "0x1414E20")]
	public static float HermiteInterpolate(float a, float b, float c, float d, float t)
	{
		return default(float);
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x1414E88", Offset = "0x1414E88", VA = "0x1414E88")]
	public static Color HermiteInterpolate(Color a, Color b, Color c, Color d, float t)
	{
		return default(Color);
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x14150A0", Offset = "0x14150A0", VA = "0x14150A0")]
	public static Vector3 HermiteInterpolate3(Vector3 a, Vector3 b, Vector3 c, Vector3 d, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x14152E8", Offset = "0x14152E8", VA = "0x14152E8")]
	public static float DampenFactor(float dampening, float elapsed)
	{
		return default(float);
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x1415364", Offset = "0x1415364", VA = "0x1415364")]
	public static float Dampen(float current, float target, float dampening, float elapsed)
	{
		return default(float);
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x1415420", Offset = "0x1415420", VA = "0x1415420")]
	public static float Dampen(float current, float target, float dampening, float elapsed, float minStep)
	{
		return default(float);
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x14154F0", Offset = "0x14154F0", VA = "0x14154F0")]
	public static Quaternion Dampen(Quaternion current, Quaternion target, float dampening, float elapsed)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x14155E4", Offset = "0x14155E4", VA = "0x14155E4")]
	public static Quaternion Dampen(Quaternion current, Quaternion target, float dampening, float elapsed, float minStep)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1415750", Offset = "0x1415750", VA = "0x1415750")]
	public static Vector3 Dampen3(Vector3 current, Vector3 target, float dampening, float elapsed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x141583C", Offset = "0x141583C", VA = "0x141583C")]
	public static Vector3 Dampen3(Vector3 current, Vector3 target, float dampening, float elapsed, float minStep)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x141594C", Offset = "0x141594C", VA = "0x141594C")]
	public static int Mod(int a, int b)
	{
		return default(int);
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x1415960", Offset = "0x1415960", VA = "0x1415960")]
	public static Bounds NewBoundsFromMinMax(Vector3 min, Vector3 max)
	{
		return default(Bounds);
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x14159A4", Offset = "0x14159A4", VA = "0x14159A4")]
	public static Bounds NewBoundsCenter(Bounds b, Vector3 c)
	{
		return default(Bounds);
	}

	[Token(Token = "0x60003EA")]
	public static void ResizeArrayTo<T>(ref List<T> array, int size, Func<int, T> newT, Action<T> removeT)
	{
	}

	[Token(Token = "0x60003EB")]
	public static bool RequireArraySize<T>(ref T[] array, int size)
	{
		return default(bool);
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x1415B64", Offset = "0x1415B64", VA = "0x1415B64")]
	public static void BeginRandomSeed(int newSeed, long x, long y, long z)
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x1410CC8", Offset = "0x1410CC8", VA = "0x1410CC8")]
	public static void BeginRandomSeed(int newSeed)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1411078", Offset = "0x1411078", VA = "0x1411078")]
	public static void EndRandomSeed()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x1412D94", Offset = "0x1412D94", VA = "0x1412D94")]
	public static Material CreateTempMaterial(string materialName, string shaderName)
	{
		return null;
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x1413E24", Offset = "0x1413E24", VA = "0x1413E24")]
	public static Mesh CreateTempMesh(string meshName)
	{
		return null;
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x1413274", Offset = "0x1413274", VA = "0x1413274")]
	public static Texture2D CreateTempTexture2D(string name, int width, int height, TextureFormat format = TextureFormat.ARGB32, bool mips = false, bool linear = false)
	{
		return null;
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x1415C1C", Offset = "0x1415C1C", VA = "0x1415C1C")]
	public static Texture2D CreateTexture2D(string name, int width, int height, TextureFormat format = TextureFormat.ARGB32, bool mips = false, bool linear = false, bool recordUndo = true)
	{
		return null;
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x1415CD8", Offset = "0x1415CD8", VA = "0x1415CD8")]
	public static Material CreateMaterial(string shaderName, bool recordUndo = true)
	{
		return null;
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x1415D50", Offset = "0x1415D50", VA = "0x1415D50")]
	public static GameObject CloneGameObject(GameObject source, Transform parent, bool keepName = false)
	{
		return null;
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x1415E84", Offset = "0x1415E84", VA = "0x1415E84")]
	public static GameObject CloneGameObject(GameObject source, Transform parent, Vector3 localPosition, Quaternion localRotation, bool keepName = false)
	{
		return null;
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x141616C", Offset = "0x141616C", VA = "0x141616C")]
	public static GameObject CreateGameObject(string name, int layer, [Optional] Transform parent, bool recordUndo = true)
	{
		return null;
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x1410A84", Offset = "0x1410A84", VA = "0x1410A84")]
	public static GameObject CreateGameObject(string name, int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale, bool recordUndo = true)
	{
		return null;
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x14162B4", Offset = "0x14162B4", VA = "0x14162B4")]
	public static void SetSharedMaterial(Renderer r, Material m)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x14163A8", Offset = "0x14163A8", VA = "0x14163A8")]
	public static void SetSharedMesh(MeshFilter mf, Mesh m)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x141649C", Offset = "0x141649C", VA = "0x141649C")]
	public static void SetEnabled(Behaviour b, bool enabled)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x1416564", Offset = "0x1416564", VA = "0x1416564")]
	public static void SetEnabled(Collider c, bool enabled)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x141662C", Offset = "0x141662C", VA = "0x141662C")]
	public static void SetEnabled(Renderer r, bool enabled)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x14166F4", Offset = "0x14166F4", VA = "0x14166F4")]
	public static void SetPosition(Transform t, float x, float y, float z)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x14167A8", Offset = "0x14167A8", VA = "0x14167A8")]
	public static void SetPosition(Transform t, Vector3 v)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x141686C", Offset = "0x141686C", VA = "0x141686C")]
	public static void SetLocalPosition(Transform t, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x1416920", Offset = "0x1416920", VA = "0x1416920")]
	public static void SetLocalPosition(Transform t, Vector3 v)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x14169E4", Offset = "0x14169E4", VA = "0x14169E4")]
	public static void SetLocalScale(Transform t, float v)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x1416BC0", Offset = "0x1416BC0", VA = "0x1416BC0")]
	public static void SetLocalScale(Transform t, float x, float y, float z)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x1416A88", Offset = "0x1416A88", VA = "0x1416A88")]
	public static void SetLocalScale(Transform t, Vector3 v)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x1416C74", Offset = "0x1416C74", VA = "0x1416C74")]
	public static void SetLocalRotation(Transform t, Quaternion q)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x1416D40", Offset = "0x1416D40", VA = "0x1416D40")]
	public static void SetRotation(Transform t, Quaternion q)
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x1416E0C", Offset = "0x1416E0C", VA = "0x1416E0C")]
	public static float DistanceToHorizon(float radius, float distanceToCenter)
	{
		return default(float);
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x1416EB0", Offset = "0x1416EB0", VA = "0x1416EB0")]
	public static Vector2 CartesianToPolar(Vector3 xyz)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x1416F78", Offset = "0x1416F78", VA = "0x1416F78")]
	public static Vector2 CartesianToPolarUV(Vector3 xyz)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x1417058", Offset = "0x1417058", VA = "0x1417058")]
	public static Vector4 CalculateSpriteUV(Sprite s)
	{
		return default(Vector4);
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x1417240", Offset = "0x1417240", VA = "0x1417240")]
	public static void CalculateAtmosphereThicknessAtHorizon(float groundRadius, float skyRadius, float distance, out float groundThickness, out float skyThickness)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x1417344", Offset = "0x1417344", VA = "0x1417344")]
	public static void EnableKeyword(string keyword, Material material)
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x141740C", Offset = "0x141740C", VA = "0x141740C")]
	public static void DisableKeyword(string keyword, Material material)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x14174D4", Offset = "0x14174D4", VA = "0x14174D4")]
	public static void SetKeywords(Material m, List<string> keywords)
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x14175FC", Offset = "0x14175FC", VA = "0x14175FC")]
	public static void SetKeywords(Material m, List<string> keywords, ref string[] lastKeywords)
	{
	}

	[Token(Token = "0x600040F")]
	public static bool ArraysEqual<T>(T[] a, List<T> b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1417818", Offset = "0x1417818", VA = "0x1417818")]
	public static void AddMaterial(Renderer r, Material m)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1417B04", Offset = "0x1417B04", VA = "0x1417B04")]
	public static void ReplaceMaterial(Renderer r, Material m)
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x1417E58", Offset = "0x1417E58", VA = "0x1417E58")]
	public static void RemoveMaterial(Renderer r, Material m)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x14180A4", Offset = "0x14180A4", VA = "0x14180A4")]
	public static float UniformScale(Vector3 scale)
	{
		return default(float);
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x1418138", Offset = "0x1418138", VA = "0x1418138")]
	public static Matrix4x4 Rotation(Quaternion q)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x1418240", Offset = "0x1418240", VA = "0x1418240")]
	public static Matrix4x4 Translation(Vector3 xyz)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x14182F0", Offset = "0x14182F0", VA = "0x14182F0")]
	public static Matrix4x4 Scaling(float xyz)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x141839C", Offset = "0x141839C", VA = "0x141839C")]
	public static Matrix4x4 Scaling(Vector3 xyz)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x1418458", Offset = "0x1418458", VA = "0x1418458")]
	public static Matrix4x4 Scaling(float x, float y, float z)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x1418514", Offset = "0x1418514", VA = "0x1418514")]
	public static Matrix4x4 ShearingX(Vector2 yz)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x14185C8", Offset = "0x14185C8", VA = "0x14185C8")]
	public static Matrix4x4 ShearingY(Vector2 xz)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x141867C", Offset = "0x141867C", VA = "0x141867C")]
	public static Matrix4x4 ShearingZ(Vector2 xy)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x1418738", Offset = "0x1418738", VA = "0x1418738")]
	public static Color Brighten(Color color, float brightness)
	{
		return default(Color);
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x1418748", Offset = "0x1418748", VA = "0x1418748")]
	public static Color Premultiply(Color color)
	{
		return default(Color);
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x1418758", Offset = "0x1418758", VA = "0x1418758")]
	public static void GetShadows(GameObject gameObject, ref List<SgtShadow> shadows, bool RequireSameLayer, bool RequireSameTag, string RequireNameContains)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x1418A20", Offset = "0x1418A20", VA = "0x1418A20")]
	public static void GetLights(GameObject gameObject, ref List<Light> lights, bool RequireSameLayer, bool RequireSameTag, string RequireNameContains)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x1418D7C", Offset = "0x1418D7C", VA = "0x1418D7C")]
	public static void CalculateLight(Light light, Vector3 center, Transform directionTransform, Transform positionTransform, ref Vector3 position, ref Vector3 direction, ref Color color)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x141915C", Offset = "0x141915C", VA = "0x141915C")]
	public static void SetTempMaterial(Material material)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x141921C", Offset = "0x141921C", VA = "0x141921C")]
	public static void SetTempMaterial(Material material1, Material material2)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x1419310", Offset = "0x1419310", VA = "0x1419310")]
	public static void SetTempMaterial(List<Material> materials)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x14193FC", Offset = "0x14193FC", VA = "0x14193FC")]
	public static void EnableKeyword(string keyword)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x1419568", Offset = "0x1419568", VA = "0x1419568")]
	public static void DisableKeyword(string keyword)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x14196D4", Offset = "0x14196D4", VA = "0x14196D4")]
	public static void SetMatrix(string key, Matrix4x4 value)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x1419868", Offset = "0x1419868", VA = "0x1419868")]
	private static LightProperties GetLightProperties(int index)
	{
		return null;
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1419AEC", Offset = "0x1419AEC", VA = "0x1419AEC")]
	private static string GetLightKeyword(int index)
	{
		return null;
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1419C88", Offset = "0x1419C88", VA = "0x1419C88")]
	public static void WriteLights(bool lit, List<Light> lights, int maxLights, Vector3 center, Transform directionTransform, Transform positionTransform, Color tint, float scatterStrength)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x141A1F4", Offset = "0x141A1F4", VA = "0x141A1F4")]
	private static ShadowProperties GetShadowProperties(int index)
	{
		return null;
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x141A444", Offset = "0x141A444", VA = "0x141A444")]
	private static string GetShadowKeyword(int index)
	{
		return null;
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x141A5E0", Offset = "0x141A5E0", VA = "0x141A5E0")]
	public static void WriteShadows(List<SgtShadow> shadows, int maxShadows)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x141A988", Offset = "0x141A988", VA = "0x141A988")]
	public static void WriteShadowsNonSerialized(List<SgtShadow> shadows, int maxShadows)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x141AB74", Offset = "0x141AB74", VA = "0x141AB74")]
	public static void WriteMie(float sharpness, float strength)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x141AD70", Offset = "0x141AD70", VA = "0x141AD70")]
	public static void WriteRayleigh(float strength)
	{
	}
}
[Token(Token = "0x2000079")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C78B4", Offset = "0x8C78B4")]
public class SgtJovian : MonoBehaviour
{
	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtJovian> AllJovians;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2C00", Offset = "0x8D2C00")]
	public Color Color;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2C38", Offset = "0x8D2C38")]
	public float Brightness;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2C70", Offset = "0x8D2C70")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2CA8", Offset = "0x8D2CA8")]
	public int RenderQueueOffset;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2CE0", Offset = "0x8D2CE0")]
	public Cubemap MainTex;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2D18", Offset = "0x8D2D18")]
	public Texture2D DepthTex;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2D50", Offset = "0x8D2D50")]
	public float Sky;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2D88", Offset = "0x8D2D88")]
	public bool Lit;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2DC0", Offset = "0x8D2DC0")]
	public Texture LightingTex;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2DF8", Offset = "0x8D2DF8")]
	public List<Light> Lights;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2E30", Offset = "0x8D2E30")]
	public List<SgtShadow> Shadows;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2E68", Offset = "0x8D2E68")]
	public bool Scattering;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2EA0", Offset = "0x8D2EA0")]
	public Texture ScatteringTex;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2ED8", Offset = "0x8D2ED8")]
	public float ScatteringStrength;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2F10", Offset = "0x8D2F10")]
	public float MeshRadius;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2F48", Offset = "0x8D2F48")]
	public List<Mesh> Meshes;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D2F80", Offset = "0x8D2F80")]
	public List<SgtJovianModel> Models;

	[NonSerialized]
	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material Material;

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x141B0C0", Offset = "0x141B0C0", VA = "0x141B0C0", Slot = "4")]
	public virtual void UpdateDepthTex()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x141B170", Offset = "0x141B170", VA = "0x141B170", Slot = "5")]
	public virtual void UpdateLightingTex()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x141B220", Offset = "0x141B220", VA = "0x141B220", Slot = "6")]
	public virtual void UpdateScatteringTex()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x141B2D0", Offset = "0x141B2D0", VA = "0x141B2D0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E76F4", Offset = "0x8E76F4")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x141B940", Offset = "0x141B940", VA = "0x141B940")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E772C", Offset = "0x8E772C")]
	public void UpdateModels()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x141BE24", Offset = "0x141BE24", VA = "0x141BE24")]
	public static SgtJovian CreateJovian(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x141BF60", Offset = "0x141BF60", VA = "0x141BF60")]
	public static SgtJovian CreateJovian(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x141C0AC", Offset = "0x141C0AC", VA = "0x141C0AC", Slot = "7")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x141C2C4", Offset = "0x141C2C4", VA = "0x141C2C4", Slot = "8")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x141C34C", Offset = "0x141C34C", VA = "0x141C34C", Slot = "9")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x141C4B4", Offset = "0x141C4B4", VA = "0x141C4B4", Slot = "10")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x141C6CC", Offset = "0x141C6CC", VA = "0x141C6CC", Slot = "11")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x141B774", Offset = "0x141B774", VA = "0x141B774")]
	private void UpdateMaterialNonSerialized()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x141C864", Offset = "0x141C864", VA = "0x141C864")]
	private void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x141BACC", Offset = "0x141BACC", VA = "0x141BACC")]
	private SgtJovianModel GetOrAddModel(int index)
	{
		return null;
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x141CB94", Offset = "0x141CB94", VA = "0x141CB94")]
	public SgtJovian()
	{
	}
}
[Token(Token = "0x200007A")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7900", Offset = "0x8C7900")]
public class SgtJovianDepth : MonoBehaviour
{
	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2FB8", Offset = "0x8D2FB8")]
	public SgtJovian Jovian;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2FF0", Offset = "0x8D2FF0")]
	public int Width;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3028", Offset = "0x8D3028")]
	public TextureFormat Format;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3060", Offset = "0x8D3060")]
	public SgtEase.Type RimEase;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3098", Offset = "0x8D3098")]
	public float RimPower;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D30D0", Offset = "0x8D30D0")]
	public Color RimColor;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3108", Offset = "0x8D3108")]
	public float AlphaDensity;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3140", Offset = "0x8D3140")]
	public float AlphaFade;

	[NonSerialized]
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Texture2D generatedTexture;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x17000041")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x6000442")]
		[Address(RVA = "0x141CC58", Offset = "0x141CC58", VA = "0x141CC58")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x141CC60", Offset = "0x141CC60", VA = "0x141CC60")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7764", Offset = "0x8E7764")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x141CF7C", Offset = "0x141CF7C", VA = "0x141CF7C")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x141CEC0", Offset = "0x141CEC0", VA = "0x141CEC0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E779C", Offset = "0x8E779C")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x141D0AC", Offset = "0x141D0AC", VA = "0x141D0AC", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x141D140", Offset = "0x141D140", VA = "0x141D140", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x141D1F0", Offset = "0x141D1F0", VA = "0x141D1F0", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x141D0BC", Offset = "0x141D0BC", VA = "0x141D0BC")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x141D264", Offset = "0x141D264", VA = "0x141D264")]
	public SgtJovianDepth()
	{
	}
}
[Token(Token = "0x200007B")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C794C", Offset = "0x8C794C")]
public class SgtJovianLighting : MonoBehaviour
{
	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D31B0", Offset = "0x8D31B0")]
	public SgtJovian Jovian;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D31E8", Offset = "0x8D31E8")]
	public int Width;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3220", Offset = "0x8D3220")]
	public TextureFormat Format;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3258", Offset = "0x8D3258")]
	public SgtEase.Type SunsetEase;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3290", Offset = "0x8D3290")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3290", Offset = "0x8D3290")]
	public float SunsetStart;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D32E4", Offset = "0x8D32E4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D32E4", Offset = "0x8D32E4")]
	public float SunsetEnd;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3338", Offset = "0x8D3338")]
	public float SunsetPowerR;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3370", Offset = "0x8D3370")]
	public float SunsetPowerG;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D33A8", Offset = "0x8D33A8")]
	public float SunsetPowerB;

	[NonSerialized]
	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D generatedTexture;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x17000042")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x600044B")]
		[Address(RVA = "0x141D2EC", Offset = "0x141D2EC", VA = "0x141D2EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x141D2F4", Offset = "0x141D2F4", VA = "0x141D2F4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E77D4", Offset = "0x8E77D4")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x141D610", Offset = "0x141D610", VA = "0x141D610")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x141D54C", Offset = "0x141D54C", VA = "0x141D54C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E780C", Offset = "0x8E780C")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x141D73C", Offset = "0x141D73C", VA = "0x141D73C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x141D7D0", Offset = "0x141D7D0", VA = "0x141D7D0", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x141D880", Offset = "0x141D880", VA = "0x141D880", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x141D74C", Offset = "0x141D74C", VA = "0x141D74C")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x141D8F4", Offset = "0x141D8F4", VA = "0x141D8F4")]
	public SgtJovianLighting()
	{
	}
}
[Token(Token = "0x200007C")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7998", Offset = "0x8C7998")]
public class SgtJovianLights : MonoBehaviour
{
	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3418", Offset = "0x8D3418")]
	public SgtJovian Jovian;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3450", Offset = "0x8D3450")]
	public bool RequireSameLayer;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3488", Offset = "0x8D3488")]
	public bool RequireSameTag;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D34C0", Offset = "0x8D34C0")]
	public string RequireNameContains;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x141D924", Offset = "0x141D924", VA = "0x141D924")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7844", Offset = "0x8E7844")]
	public void UpdateLights()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x141DA2C", Offset = "0x141DA2C", VA = "0x141DA2C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x141DA3C", Offset = "0x141DA3C", VA = "0x141DA3C", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x141DAEC", Offset = "0x141DAEC", VA = "0x141DAEC")]
	public SgtJovianLights()
	{
	}
}
[Token(Token = "0x200007D")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C79E4", Offset = "0x8C79E4")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C79E4", Offset = "0x8C79E4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C79E4", Offset = "0x8C79E4")]
public class SgtJovianModel : MonoBehaviour
{
	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3508", Offset = "0x8D3508")]
	public SgtJovian Jovian;

	[NonSerialized]
	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x141BC48", Offset = "0x141BC48", VA = "0x141BC48")]
	public void SetMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x141B638", Offset = "0x141B638", VA = "0x141B638")]
	public void SetMaterial(Material material)
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x141CAB4", Offset = "0x141CAB4", VA = "0x141CAB4")]
	public static SgtJovianModel Create(SgtJovian jovian)
	{
		return null;
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x141BD84", Offset = "0x141BD84", VA = "0x141BD84")]
	public static void Pool(SgtJovianModel model)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x141C79C", Offset = "0x141C79C", VA = "0x141C79C")]
	public static void MarkForDestruction(SgtJovianModel model)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x141DAF4", Offset = "0x141DAF4", VA = "0x141DAF4", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x141DB7C", Offset = "0x141DB7C", VA = "0x141DB7C")]
	public SgtJovianModel()
	{
	}
}
[Token(Token = "0x200007E")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7AB4", Offset = "0x8C7AB4")]
public class SgtJovianScattering : MonoBehaviour
{
	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3540", Offset = "0x8D3540")]
	public SgtJovian Jovian;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3578", Offset = "0x8D3578")]
	public int Width;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D35B0", Offset = "0x8D35B0")]
	public int Height;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D35E8", Offset = "0x8D35E8")]
	public TextureFormat Format;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3620", Offset = "0x8D3620")]
	public float Mie;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3658", Offset = "0x8D3658")]
	public float Rayleigh;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3690", Offset = "0x8D3690")]
	public SgtEase.Type SunsetEase;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D36C8", Offset = "0x8D36C8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D36C8", Offset = "0x8D36C8")]
	public float SunsetStart;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D371C", Offset = "0x8D371C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D371C", Offset = "0x8D371C")]
	public float SunsetEnd;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3770", Offset = "0x8D3770")]
	public float SunsetPowerR;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D37A8", Offset = "0x8D37A8")]
	public float SunsetPowerG;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D37E0", Offset = "0x8D37E0")]
	public float SunsetPowerB;

	[NonSerialized]
	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Texture2D generatedTexture;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x17000043")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x600045F")]
		[Address(RVA = "0x141DB84", Offset = "0x141DB84", VA = "0x141DB84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x141DB8C", Offset = "0x141DB8C", VA = "0x141DB8C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E787C", Offset = "0x8E787C")]
	public void UpdateTexture()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x141DF04", Offset = "0x141DF04", VA = "0x141DF04")]
	private void WriteTexture(float u, float v, int x, int y)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x141DE40", Offset = "0x141DE40", VA = "0x141DE40")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E78B4", Offset = "0x8E78B4")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x141E094", Offset = "0x141E094", VA = "0x141E094", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x141E128", Offset = "0x141E128", VA = "0x141E128", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x141E1D8", Offset = "0x141E1D8", VA = "0x141E1D8", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x141E0A4", Offset = "0x141E0A4", VA = "0x141E0A4")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x141E24C", Offset = "0x141E24C", VA = "0x141E24C")]
	public SgtJovianScattering()
	{
	}
}
[Token(Token = "0x200007F")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7B00", Offset = "0x8C7B00")]
public class SgtJovianShadows : MonoBehaviour
{
	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3850", Offset = "0x8D3850")]
	public SgtJovian Jovian;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3888", Offset = "0x8D3888")]
	public bool RequireSameLayer;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D38C0", Offset = "0x8D38C0")]
	public bool RequireSameTag;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D38F8", Offset = "0x8D38F8")]
	public string RequireNameContains;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x141E28C", Offset = "0x141E28C", VA = "0x141E28C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E78EC", Offset = "0x8E78EC")]
	public void UpdateShadows()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x141E394", Offset = "0x141E394", VA = "0x141E394", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x141E3A4", Offset = "0x141E3A4", VA = "0x141E3A4", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x141E454", Offset = "0x141E454", VA = "0x141E454")]
	public SgtJovianShadows()
	{
	}
}
[Token(Token = "0x2000080")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7B4C", Offset = "0x8C7B4C")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C7B4C", Offset = "0x8C7B4C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C7B4C", Offset = "0x8C7B4C")]
public class SgtLightning : MonoBehaviour
{
	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3940", Offset = "0x8D3940")]
	public SgtLightningSpawner LightningSpawner;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3978", Offset = "0x8D3978")]
	public float Age;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D39B0", Offset = "0x8D39B0")]
	public float Life;

	[NonSerialized]
	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer meshRenderer;

	[NonSerialized]
	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh mesh;

	[NonSerialized]
	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material material;

	[Token(Token = "0x17000044")]
	public Material Material
	{
		[Token(Token = "0x600046C")]
		[Address(RVA = "0x141E45C", Offset = "0x141E45C", VA = "0x141E45C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x141E464", Offset = "0x141E464", VA = "0x141E464")]
	public void SetMesh(Mesh newMesh)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x141E578", Offset = "0x141E578", VA = "0x141E578")]
	public void SetMaterial(Material newMaterial)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x141E68C", Offset = "0x141E68C", VA = "0x141E68C")]
	public static SgtLightning Create(SgtLightningSpawner lightningSpawner)
	{
		return null;
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x141E76C", Offset = "0x141E76C", VA = "0x141E76C")]
	public static void Pool(SgtLightning model)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x141E80C", Offset = "0x141E80C", VA = "0x141E80C")]
	public static void MarkForDestruction(SgtLightning model)
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x141E8D4", Offset = "0x141E8D4", VA = "0x141E8D4", Slot = "4")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x141E948", Offset = "0x141E948", VA = "0x141E948", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x141EAD8", Offset = "0x141EAD8", VA = "0x141EAD8")]
	public SgtLightning()
	{
	}
}
[Token(Token = "0x2000081")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7C1C", Offset = "0x8C7C1C")]
public class SgtLightningSpawner : MonoBehaviour
{
	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SgtLightningSpawner> AllLightningSpawner;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D39E8", Offset = "0x8D39E8")]
	public float DelayMin;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3A20", Offset = "0x8D3A20")]
	public float DelayMax;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3A58", Offset = "0x8D3A58")]
	public float LifeMin;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3A90", Offset = "0x8D3A90")]
	public float LifeMax;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3AC8", Offset = "0x8D3AC8")]
	public float Radius;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3B00", Offset = "0x8D3B00")]
	public float Size;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3B38", Offset = "0x8D3B38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3B38", Offset = "0x8D3B38")]
	public int Detail;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3B90", Offset = "0x8D3B90")]
	public Gradient Colors;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3BC8", Offset = "0x8D3BC8")]
	public float Brightness;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3C00", Offset = "0x8D3C00")]
	public List<Sprite> Sprites;

	[NonSerialized]
	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mesh Mesh;

	[NonSerialized]
	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float cooldown;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[NonSerialized]
	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool updateMeshCalled;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GradientColorKey[] defaultColors;

	[Token(Token = "0x17000045")]
	public Sprite RandomSprite
	{
		[Token(Token = "0x6000475")]
		[Address(RVA = "0x141EAE0", Offset = "0x141EAE0", VA = "0x141EAE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000046")]
	public Color RandomColor
	{
		[Token(Token = "0x6000476")]
		[Address(RVA = "0x141EB88", Offset = "0x141EB88", VA = "0x141EB88")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x141EBC8", Offset = "0x141EBC8", VA = "0x141EBC8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7924", Offset = "0x8E7924")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x141F110", Offset = "0x141F110", VA = "0x141F110")]
	public SgtLightning Spawn()
	{
		return null;
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x141F560", Offset = "0x141F560", VA = "0x141F560")]
	public static SgtLightningSpawner CreateLightningSpawner(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x141F69C", Offset = "0x141F69C", VA = "0x141F69C")]
	public static SgtLightningSpawner CreateLightningSpawner(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x141F7E8", Offset = "0x141F7E8", VA = "0x141F7E8", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x141F840", Offset = "0x141F840", VA = "0x141F840", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x141F868", Offset = "0x141F868", VA = "0x141F868", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x141F94C", Offset = "0x141F94C", VA = "0x141F94C", Slot = "7")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x141F9B0", Offset = "0x141F9B0", VA = "0x141F9B0", Slot = "8")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x141F814", Offset = "0x141F814", VA = "0x141F814")]
	private void ResetDelay()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x141F858", Offset = "0x141F858", VA = "0x141F858")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x141FA88", Offset = "0x141FA88", VA = "0x141FA88")]
	public SgtLightningSpawner()
	{
	}
}
[Token(Token = "0x2000082")]
public enum SgtNebulaSource
{
	[Token(Token = "0x4000480")]
	None,
	[Token(Token = "0x4000481")]
	Red,
	[Token(Token = "0x4000482")]
	Green,
	[Token(Token = "0x4000483")]
	Blue,
	[Token(Token = "0x4000484")]
	Alpha,
	[Token(Token = "0x4000485")]
	AverageRgb,
	[Token(Token = "0x4000486")]
	MinRgb,
	[Token(Token = "0x4000487")]
	MaxRgb
}
[Token(Token = "0x2000083")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7C54", Offset = "0x8C7C54")]
public class SgtNebulaStarfield : SgtPointStarfield
{
	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3C70", Offset = "0x8D3C70")]
	[SgtSeed]
	public int Seed;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3CBC", Offset = "0x8D3CBC")]
	public Texture SourceTex;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3CF4", Offset = "0x8D3CF4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3CF4", Offset = "0x8D3CF4")]
	public float Threshold;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3D48", Offset = "0x8D3D48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3D48", Offset = "0x8D3D48")]
	public int Samples;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3D9C", Offset = "0x8D3D9C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3D9C", Offset = "0x8D3D9C")]
	public float Jitter;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3DF0", Offset = "0x8D3DF0")]
	public SgtNebulaSource HeightSource;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3E28", Offset = "0x8D3E28")]
	public SgtNebulaSource ScaleSource;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3E60", Offset = "0x8D3E60")]
	public Vector3 Size;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3E98", Offset = "0x8D3E98")]
	public float HorizontalBrightness;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3ED0", Offset = "0x8D3ED0")]
	public float HorizontalPower;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3F08", Offset = "0x8D3F08")]
	public int StarCount;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3F40", Offset = "0x8D3F40")]
	public float StarRadiusMin;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3F78", Offset = "0x8D3F78")]
	public float StarRadiusMax;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3FB0", Offset = "0x8D3FB0")]
	public float StarRadiusBias;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3FE8", Offset = "0x8D3FE8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D3FE8", Offset = "0x8D3FE8")]
	public float StarPulseMax;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Texture2D sourceTex2D;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector3 halfSize;

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x141FC58", Offset = "0x141FC58", VA = "0x141FC58")]
	public static SgtNebulaStarfield CreateNebulaStarfield(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x141FD70", Offset = "0x141FD70", VA = "0x141FD70")]
	public static SgtNebulaStarfield CreateNebulaStarfield(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x141FEBC", Offset = "0x141FEBC", VA = "0x141FEBC", Slot = "9")]
	protected override int BeginQuads()
	{
		return default(int);
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x142001C", Offset = "0x142001C", VA = "0x142001C", Slot = "15")]
	protected override void NextQuad(ref SgtPointStar quad, int starIndex)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x1420518", Offset = "0x1420518", VA = "0x1420518", Slot = "10")]
	protected override void EndQuads()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x1420574", Offset = "0x1420574", VA = "0x1420574", Slot = "16")]
	protected override void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x14203B4", Offset = "0x14203B4", VA = "0x14203B4")]
	private float GetWeight(SgtNebulaSource source, Color pixel, float defaultWeight)
	{
		return default(float);
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x14209F4", Offset = "0x14209F4", VA = "0x14209F4")]
	public SgtNebulaStarfield()
	{
	}
}
[Token(Token = "0x2000084")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7CA0", Offset = "0x8C7CA0")]
public class SgtObjectPool : MonoBehaviour
{
	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtObjectPool> AllObjectPools;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string TypeName;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<UnityEngine.Object> Elements;

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x1420A8C", Offset = "0x1420A8C", VA = "0x1420A8C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x1420B18", Offset = "0x1420B18", VA = "0x1420B18", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x1420BA4", Offset = "0x1420BA4", VA = "0x1420BA4", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x1420C84", Offset = "0x1420C84", VA = "0x1420C84")]
	public SgtObjectPool()
	{
	}
}
[Token(Token = "0x2000085")]
public static class SgtObjectPool<T> where T : UnityEngine.Object
{
	[Token(Token = "0x20004E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCA94", Offset = "0x8CCA94")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string typeName;

		[Token(Token = "0x60022B1")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x60022B2")]
		internal bool <UpdateComponent>b__0(SgtObjectPool p)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SgtObjectPool pool;

	[Token(Token = "0x6000491")]
	static SgtObjectPool()
	{
	}

	[Token(Token = "0x6000492")]
	public static T Add(T entry)
	{
		return null;
	}

	[Token(Token = "0x6000493")]
	public static T Add(T element, Action<T> onAdd)
	{
		return null;
	}

	[Token(Token = "0x6000494")]
	public static T Pop()
	{
		return null;
	}

	[Token(Token = "0x6000495")]
	private static void UpdateComponent(bool allowCreation)
	{
	}
}
[Token(Token = "0x2000086")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C7CEC", Offset = "0x8C7CEC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7CEC", Offset = "0x8C7CEC")]
public class SgtObserver : MonoBehaviour
{
	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtObserver> AllObservers;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<SgtObserver> OnObserverPreCull;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Action<SgtObserver> OnObserverPreRender;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Action<SgtObserver> OnObserverPostRender;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D403C", Offset = "0x8D403C")]
	public float RollAngle;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Quaternion RollQuaternion;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Matrix4x4 RollMatrix;

	[NonSerialized]
	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 DeltaPosition;

	[NonSerialized]
	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 Velocity;

	[NonSerialized]
	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Quaternion OldRotation;

	[NonSerialized]
	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 OldPosition;

	[NonSerialized]
	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Camera Camera;

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x14127CC", Offset = "0x14127CC", VA = "0x14127CC")]
	public static SgtObserver Find(Camera camera)
	{
		return null;
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x1420D68", Offset = "0x1420D68", VA = "0x1420D68", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x1420EA0", Offset = "0x1420EA0", VA = "0x1420EA0", Slot = "5")]
	protected virtual void OnPreCull()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x1420F60", Offset = "0x1420F60", VA = "0x1420F60", Slot = "6")]
	protected virtual void OnPreRender()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x1421020", Offset = "0x1421020", VA = "0x1421020", Slot = "7")]
	protected virtual void OnPostRender()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x14210E0", Offset = "0x14210E0", VA = "0x14210E0", Slot = "8")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x1421358", Offset = "0x1421358", VA = "0x1421358", Slot = "9")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x14213E4", Offset = "0x14213E4", VA = "0x14213E4")]
	public SgtObserver()
	{
	}
}
[Serializable]
[Token(Token = "0x2000087")]
public class SgtPointStar
{
	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SgtPointStar Temp;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4074", Offset = "0x8D4074")]
	public int Variant;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D40AC", Offset = "0x8D40AC")]
	public Color Color;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D40E4", Offset = "0x8D40E4")]
	public float Radius;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D411C", Offset = "0x8D411C")]
	public float Angle;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4154", Offset = "0x8D4154")]
	public Vector3 Position;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D418C", Offset = "0x8D418C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D418C", Offset = "0x8D418C")]
	public float PulseSpeed;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D41E0", Offset = "0x8D41E0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D41E0", Offset = "0x8D41E0")]
	public float PulseRange;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4234", Offset = "0x8D4234")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D4234", Offset = "0x8D4234")]
	public float PulseOffset;

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x1421538", Offset = "0x1421538", VA = "0x1421538")]
	public void CopyFrom(SgtPointStar other)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x1421644", Offset = "0x1421644", VA = "0x1421644")]
	public SgtPointStar()
	{
	}
}
[Token(Token = "0x2000088")]
public abstract class SgtPointStarfield : SgtQuads
{
	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4288", Offset = "0x8D4288")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D4288", Offset = "0x8D4288")]
	public bool FollowCameras;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D42E8", Offset = "0x8D42E8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D42E8", Offset = "0x8D42E8")]
	public float Softness;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4340", Offset = "0x8D4340")]
	public bool Wrap;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4378", Offset = "0x8D4378")]
	public Vector3 WrapSize;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D43B0", Offset = "0x8D43B0")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D43B0", Offset = "0x8D43B0")]
	public bool Stretch;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4410", Offset = "0x8D4410")]
	public Vector3 StretchVector;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4448", Offset = "0x8D4448")]
	public float StretchScale;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4480", Offset = "0x8D4480")]
	public bool FadeNear;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D44B8", Offset = "0x8D44B8")]
	public Texture FadeNearTex;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D44F0", Offset = "0x8D44F0")]
	public float FadeNearRadius;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4528", Offset = "0x8D4528")]
	public float FadeNearThickness;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4560", Offset = "0x8D4560")]
	public bool FadeFar;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4598", Offset = "0x8D4598")]
	public Texture FadeFarTex;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D45D0", Offset = "0x8D45D0")]
	public float FadeFarRadius;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4608", Offset = "0x8D4608")]
	public float FadeFarThickness;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4640", Offset = "0x8D4640")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D4640", Offset = "0x8D4640")]
	public bool Pulse;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D46A0", Offset = "0x8D46A0")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D46A0", Offset = "0x8D46A0")]
	public float PulseOffset;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4700", Offset = "0x8D4700")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D4700", Offset = "0x8D4700")]
	public float PulseSpeed;

	[Token(Token = "0x17000047")]
	protected override string ShaderName
	{
		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x14216E0", Offset = "0x14216E0", VA = "0x14216E0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1421728", Offset = "0x1421728", VA = "0x1421728")]
	public void UpdateFadeFarTex()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x14217D8", Offset = "0x14217D8", VA = "0x14217D8")]
	public void UpdateFadeNearTex()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1421888", Offset = "0x1421888", VA = "0x1421888")]
	public SgtCustomStarfield MakeEditableCopy(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x142214C", Offset = "0x142214C", VA = "0x142214C")]
	public SgtCustomStarfield MakeEditableCopy(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x142226C", Offset = "0x142226C", VA = "0x142226C", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x142255C", Offset = "0x142255C", VA = "0x142255C", Slot = "14")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1422648", Offset = "0x1422648", VA = "0x1422648", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1422918", Offset = "0x1422918", VA = "0x1422918", Slot = "11")]
	protected override void BuildMaterial()
	{
	}

	[Token(Token = "0x60004AB")]
	protected abstract void NextQuad(ref SgtPointStar quad, int starIndex);

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x1423174", Offset = "0x1423174", VA = "0x1423174", Slot = "13")]
	protected override void BuildMesh(Mesh mesh, int starIndex, int starCount)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x14207F0", Offset = "0x14207F0", VA = "0x14207F0", Slot = "16")]
	protected virtual void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x142415C", Offset = "0x142415C", VA = "0x142415C")]
	protected void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x1411124", Offset = "0x1411124", VA = "0x1411124")]
	protected SgtPointStarfield()
	{
	}
}
[Token(Token = "0x2000089")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7D94", Offset = "0x8C7D94")]
public class SgtProminence : MonoBehaviour
{
	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtProminence> AllProminences;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4760", Offset = "0x8D4760")]
	public Texture MainTex;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4798", Offset = "0x8D4798")]
	public Color Color;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D47D0", Offset = "0x8D47D0")]
	public float Brightness;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4808", Offset = "0x8D4808")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4840", Offset = "0x8D4840")]
	public int RenderQueueOffset;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4878", Offset = "0x8D4878")]
	[SgtSeed]
	public int Seed;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D48C4", Offset = "0x8D48C4")]
	public float InnerRadius;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D48FC", Offset = "0x8D48FC")]
	public float OuterRadius;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4934", Offset = "0x8D4934")]
	public int PlaneCount;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D496C", Offset = "0x8D496C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D496C", Offset = "0x8D496C")]
	public int PlaneDetail;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D49CC", Offset = "0x8D49CC")]
	public bool FadeEdge;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4A04", Offset = "0x8D4A04")]
	public float FadePower;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4A3C", Offset = "0x8D4A3C")]
	public bool ClipNear;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4A74", Offset = "0x8D4A74")]
	public float ClipPower;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4AAC", Offset = "0x8D4AAC")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D4AAC", Offset = "0x8D4AAC")]
	public float CameraOffset;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D4B0C", Offset = "0x8D4B0C")]
	public List<SgtProminencePlane> Planes;

	[NonSerialized]
	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material Material;

	[NonSerialized]
	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Mesh Mesh;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[NonSerialized]
	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool updateMaterialCalled;

	[NonSerialized]
	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	protected bool updateMeshCalled;

	[NonSerialized]
	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	private bool updatePlanesCalled;

	[Token(Token = "0x17000048")]
	public float Width
	{
		[Token(Token = "0x60004B0")]
		[Address(RVA = "0x142477C", Offset = "0x142477C", VA = "0x142477C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1424788", Offset = "0x1424788", VA = "0x1424788")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E795C", Offset = "0x8E795C")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1424D0C", Offset = "0x1424D0C", VA = "0x1424D0C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7994", Offset = "0x8E7994")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x142563C", Offset = "0x142563C", VA = "0x142563C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E79CC", Offset = "0x8E79CC")]
	public void UpdatePlanes()
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x1425B1C", Offset = "0x1425B1C", VA = "0x1425B1C")]
	public static SgtProminence CreateProminence(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x1425C58", Offset = "0x1425C58", VA = "0x1425C58")]
	public static SgtProminence CreateProminence(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x1425DA4", Offset = "0x1425DA4", VA = "0x1425DA4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x14260C4", Offset = "0x14260C4", VA = "0x14260C4", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x14260DC", Offset = "0x14260DC", VA = "0x14260DC", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x1426398", Offset = "0x1426398", VA = "0x1426398", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x14265C0", Offset = "0x14265C0", VA = "0x14265C0")]
	private void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x14269E0", Offset = "0x14269E0", VA = "0x14269E0")]
	private void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x1425828", Offset = "0x1425828", VA = "0x1425828")]
	private SgtProminencePlane GetOrAddPlane(int index)
	{
		return null;
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x1426070", Offset = "0x1426070", VA = "0x1426070")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x1426C80", Offset = "0x1426C80", VA = "0x1426C80")]
	public SgtProminence()
	{
	}
}
[Token(Token = "0x200008A")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7DE0", Offset = "0x8C7DE0")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C7DE0", Offset = "0x8C7DE0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C7DE0", Offset = "0x8C7DE0")]
public class SgtProminencePlane : MonoBehaviour
{
	[Token(Token = "0x20004E1")]
	public class CameraState : SgtCameraState
	{
		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPosition;

		[Token(Token = "0x60022B3")]
		[Address(RVA = "0x1426DE4", Offset = "0x1426DE4", VA = "0x1426DE4")]
		public CameraState()
		{
		}
	}

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4B7C", Offset = "0x8D4B7C")]
	public SgtProminence Prominence;

	[NonSerialized]
	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[NonSerialized]
	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh mesh;

	[NonSerialized]
	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material material;

	[NonSerialized]
	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<CameraState> cameraStates;

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x1425528", Offset = "0x1425528", VA = "0x1425528")]
	public void SetMesh(Mesh newMesh)
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x1424BF8", Offset = "0x1424BF8", VA = "0x1424BF8")]
	public void SetMaterial(Material newMaterial)
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x14259D4", Offset = "0x14259D4", VA = "0x14259D4")]
	public void SetRotation(Quaternion rotation)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x1426924", Offset = "0x1426924", VA = "0x1426924")]
	public void Save(Camera camera)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x1426AD8", Offset = "0x1426AD8", VA = "0x1426AD8")]
	public void Restore(Camera camera)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x142686C", Offset = "0x142686C", VA = "0x142686C")]
	public void Revert()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x1426BA0", Offset = "0x1426BA0", VA = "0x1426BA0")]
	public static SgtProminencePlane Create(SgtProminence prominence)
	{
		return null;
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x1425A7C", Offset = "0x1425A7C", VA = "0x1425A7C")]
	public static void Pool(SgtProminencePlane plane)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x14264F8", Offset = "0x14264F8", VA = "0x14264F8")]
	public static void MarkForDestruction(SgtProminencePlane plane)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x1426D54", Offset = "0x1426D54", VA = "0x1426D54", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x1426DDC", Offset = "0x1426DDC", VA = "0x1426DDC")]
	public SgtProminencePlane()
	{
	}
}
[Token(Token = "0x200008B")]
public abstract class SgtQuads : MonoBehaviour
{
	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4BB4", Offset = "0x8D4BB4")]
	public Color Color;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4BEC", Offset = "0x8D4BEC")]
	public float Brightness;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4C24", Offset = "0x8D4C24")]
	public Texture MainTex;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4C5C", Offset = "0x8D4C5C")]
	public SgtQuadsLayoutType Layout;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4C94", Offset = "0x8D4C94")]
	public int LayoutColumns;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4CCC", Offset = "0x8D4CCC")]
	public int LayoutRows;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4D04", Offset = "0x8D4D04")]
	public List<Rect> Rects;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4D3C", Offset = "0x8D4D3C")]
	public SgtQuadsBlendType BlendMode;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4D74", Offset = "0x8D4D74")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4DAC", Offset = "0x8D4DAC")]
	public int RenderQueueOffset;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public List<SgtQuadsModel> Models;

	[NonSerialized]
	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material Material;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private bool startCalled;

	[NonSerialized]
	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool updateMaterialCalled;

	[NonSerialized]
	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool updateMeshesAndModelsCalled;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static List<Vector4> tempCoords;

	[Token(Token = "0x17000049")]
	protected abstract string ShaderName
	{
		[Token(Token = "0x60004CB")]
		get;
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x1426DEC", Offset = "0x1426DEC", VA = "0x1426DEC")]
	public void UpdateMainTex()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x1421DB8", Offset = "0x1421DB8", VA = "0x1421DB8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7A04", Offset = "0x8E7A04")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x1421F48", Offset = "0x1421F48", VA = "0x1421F48")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7A3C", Offset = "0x8E7A3C")]
	public void UpdateMeshesAndModels()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x1427754", Offset = "0x1427754", VA = "0x1427754", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x142242C", Offset = "0x142242C", VA = "0x142242C", Slot = "6")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x1422808", Offset = "0x1422808", VA = "0x1422808", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x14277B8", Offset = "0x14277B8", VA = "0x14277B8", Slot = "8")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60004D3")]
	protected abstract int BeginQuads();

	[Token(Token = "0x60004D4")]
	protected abstract void EndQuads();

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x1422E58", Offset = "0x1422E58", VA = "0x1422E58", Slot = "11")]
	protected virtual void BuildMaterial()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x1427A8C", Offset = "0x1427A8C", VA = "0x1427A8C", Slot = "12")]
	protected virtual void StartOnce()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x1423050", Offset = "0x1423050", VA = "0x1423050")]
	protected void BuildAdditive()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x1427968", Offset = "0x1427968", VA = "0x1427968")]
	protected void BuildAlphaTest()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x1426FB0", Offset = "0x1426FB0", VA = "0x1426FB0")]
	protected void BuildRects()
	{
	}

	[Token(Token = "0x60004DA")]
	protected abstract void BuildMesh(Mesh mesh, int starIndex, int starCount);

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x1423F30", Offset = "0x1423F30", VA = "0x1423F30")]
	protected static void ExpandBounds(ref bool minMaxSet, ref Vector3 min, ref Vector3 max, Vector3 position, float radius)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x1427180", Offset = "0x1427180", VA = "0x1427180")]
	private void ConvertRectsToCoords()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x14273F4", Offset = "0x14273F4", VA = "0x14273F4")]
	private SgtQuadsModel GetOrNewModel(int index)
	{
		return null;
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x14275B0", Offset = "0x14275B0", VA = "0x14275B0")]
	private Mesh GetOrNewMesh(SgtQuadsModel model)
	{
		return null;
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x1427774", Offset = "0x1427774", VA = "0x1427774")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x1424730", Offset = "0x1424730", VA = "0x1424730")]
	protected SgtQuads()
	{
	}
}
[Token(Token = "0x200008C")]
public enum SgtQuadsBlendType
{
	[Token(Token = "0x40004F2")]
	Default,
	[Token(Token = "0x40004F3")]
	Additive,
	[Token(Token = "0x40004F4")]
	AlphaTest
}
[Token(Token = "0x200008D")]
public enum SgtQuadsLayoutType
{
	[Token(Token = "0x40004F6")]
	Grid,
	[Token(Token = "0x40004F7")]
	Custom
}
[Token(Token = "0x200008E")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7EB0", Offset = "0x8C7EB0")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C7EB0", Offset = "0x8C7EB0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C7EB0", Offset = "0x8C7EB0")]
public class SgtQuadsModel : MonoBehaviour
{
	[Token(Token = "0x20004E2")]
	public class CameraState : SgtCameraState
	{
		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPosition;

		[Token(Token = "0x60022B4")]
		[Address(RVA = "0x1428130", Offset = "0x1428130", VA = "0x1428130")]
		public CameraState()
		{
		}
	}

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4E04", Offset = "0x8D4E04")]
	public SgtQuads Quads;

	[NonSerialized]
	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[NonSerialized]
	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh mesh;

	[NonSerialized]
	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material material;

	[NonSerialized]
	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<CameraState> cameraStates;

	[Token(Token = "0x1700004A")]
	public Mesh Mesh
	{
		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x1427B70", Offset = "0x1427B70", VA = "0x1427B70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x1427D00", Offset = "0x1427D00", VA = "0x1427D00")]
	public void PoolMeshNow()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x1427B78", Offset = "0x1427B78", VA = "0x1427B78")]
	public void SetMesh(Mesh newMesh)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x1426E9C", Offset = "0x1426E9C", VA = "0x1426E9C")]
	public void SetMaterial(Material newMaterial)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x1427A90", Offset = "0x1427A90", VA = "0x1427A90")]
	public static SgtQuadsModel Create(SgtQuads quads)
	{
		return null;
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x1427698", Offset = "0x1427698", VA = "0x1427698")]
	public static void Pool(SgtQuadsModel model)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x1427888", Offset = "0x1427888", VA = "0x1427888")]
	public static void MarkForDestruction(SgtQuadsModel model)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x1427E60", Offset = "0x1427E60", VA = "0x1427E60")]
	public void Save(Camera camera)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x1427F1C", Offset = "0x1427F1C", VA = "0x1427F1C")]
	public void Restore(Camera camera)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x1427FE4", Offset = "0x1427FE4", VA = "0x1427FE4")]
	public void Revert()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x142809C", Offset = "0x142809C", VA = "0x142809C", Slot = "4")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x14280A0", Offset = "0x14280A0", VA = "0x14280A0", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x1428128", Offset = "0x1428128", VA = "0x1428128")]
	public SgtQuadsModel()
	{
	}
}
[Token(Token = "0x200008F")]
[ExecuteInEditMode]
public class SgtRaycastDepth : SgtDepth
{
	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4E3C", Offset = "0x8D4E3C")]
	public float MaxThickness;

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x1428138", Offset = "0x1428138", VA = "0x1428138")]
	public static SgtRaycastDepth CreateDepthRaycast(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x1428250", Offset = "0x1428250", VA = "0x1428250")]
	public static SgtRaycastDepth CreateDepthRaycast(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x142839C", Offset = "0x142839C", VA = "0x142839C", Slot = "4")]
	protected override float DoCalculate(Vector3 eye, Vector3 target)
	{
		return default(float);
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x1428614", Offset = "0x1428614", VA = "0x1428614")]
	public SgtRaycastDepth()
	{
	}
}
[Token(Token = "0x2000090")]
public struct SgtRectL
{
	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public long minX;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public long minY;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public long maxX;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public long maxY;

	[Token(Token = "0x1700004B")]
	public long SizeX
	{
		[Token(Token = "0x60004F3")]
		[Address(RVA = "0x9AEBB0", Offset = "0x9AEBB0", VA = "0x9AEBB0")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700004C")]
	public long SizeY
	{
		[Token(Token = "0x60004F4")]
		[Address(RVA = "0x9AEBC0", Offset = "0x9AEBC0", VA = "0x9AEBC0")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x9AEBD0", Offset = "0x9AEBD0", VA = "0x9AEBD0")]
	public void ClampTo(SgtRectL other)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x9AEC04", Offset = "0x9AEC04", VA = "0x9AEC04")]
	public SgtRectL GetExpanded(long amount)
	{
		return default(SgtRectL);
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x9AEC28", Offset = "0x9AEC28", VA = "0x9AEC28")]
	public SgtRectL(long newMinX, long newMinY, long newMaxX, long newMaxY)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x9AEC34", Offset = "0x9AEC34", VA = "0x9AEC34")]
	public bool Contains(long x, long y)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x9AEC70", Offset = "0x9AEC70", VA = "0x9AEC70")]
	public void Clear()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x9AEC7C", Offset = "0x9AEC7C", VA = "0x9AEC7C")]
	public void SwapX()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x9AEC98", Offset = "0x9AEC98", VA = "0x9AEC98")]
	public void SwapY()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x9AECB4", Offset = "0x9AECB4", VA = "0x9AECB4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x9AECBC", Offset = "0x9AECBC", VA = "0x9AECBC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x1428894", Offset = "0x1428894", VA = "0x1428894")]
	public static bool operator ==(SgtRectL a, SgtRectL b)
	{
		return default(bool);
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x14288E0", Offset = "0x14288E0", VA = "0x14288E0")]
	public static bool operator !=(SgtRectL a, SgtRectL b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x9AECC4", Offset = "0x9AECC4", VA = "0x9AECC4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000091")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7F90", Offset = "0x8C7F90")]
public class SgtRing : MonoBehaviour
{
	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtRing> AllRings;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4E74", Offset = "0x8D4E74")]
	public Color Color;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4EAC", Offset = "0x8D4EAC")]
	public float Brightness;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4EE4", Offset = "0x8D4EE4")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4F1C", Offset = "0x8D4F1C")]
	public int RenderQueueOffset;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4F54", Offset = "0x8D4F54")]
	public Texture MainTex;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4F8C", Offset = "0x8D4F8C")]
	public Mesh Mesh;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4FC4", Offset = "0x8D4FC4")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D4FC4", Offset = "0x8D4FC4")]
	public int Segments;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5024", Offset = "0x8D5024")]
	public bool Detail;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D505C", Offset = "0x8D505C")]
	public Texture DetailTex;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5094", Offset = "0x8D5094")]
	public float DetailScaleX;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D50CC", Offset = "0x8D50CC")]
	public int DetailScaleY;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5104", Offset = "0x8D5104")]
	public Vector2 DetailOffset;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D513C", Offset = "0x8D513C")]
	public Vector2 DetailSpeed;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5174", Offset = "0x8D5174")]
	public float DetailTwist;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D51AC", Offset = "0x8D51AC")]
	public float DetailTwistBias;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D51E4", Offset = "0x8D51E4")]
	public bool Fade;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D521C", Offset = "0x8D521C")]
	public Texture FadeTex;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5254", Offset = "0x8D5254")]
	public float FadeDistance;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D528C", Offset = "0x8D528C")]
	public bool Scattering;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D52C4", Offset = "0x8D52C4")]
	public float ScatteringMie;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D52FC", Offset = "0x8D52FC")]
	public float ScatteringStrength;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5334", Offset = "0x8D5334")]
	public bool Lit;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D536C", Offset = "0x8D536C")]
	public Texture LightingTex;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D53A4", Offset = "0x8D53A4")]
	public List<Light> Lights;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D53DC", Offset = "0x8D53DC")]
	public List<SgtShadow> Shadows;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D5414", Offset = "0x8D5414")]
	public List<SgtRingModel> Models;

	[NonSerialized]
	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material Material;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private bool startCalled;

	[NonSerialized]
	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool updateMaterialCalled;

	[NonSerialized]
	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	private bool updateModelsCalled;

	[Token(Token = "0x1700004D")]
	protected virtual string ShaderName
	{
		[Token(Token = "0x6000501")]
		[Address(RVA = "0x1428CD0", Offset = "0x1428CD0", VA = "0x1428CD0", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x1428D18", Offset = "0x1428D18", VA = "0x1428D18", Slot = "5")]
	public virtual void UpdateMainTex()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x1428DC8", Offset = "0x1428DC8", VA = "0x1428DC8", Slot = "6")]
	public virtual void UpdateFadeTex()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x1428E78", Offset = "0x1428E78", VA = "0x1428E78", Slot = "7")]
	public virtual void UpdateLightingTex()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x1428F28", Offset = "0x1428F28", VA = "0x1428F28", Slot = "8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7A74", Offset = "0x8E7A74")]
	public virtual void UpdateMaterial()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x1429650", Offset = "0x1429650", VA = "0x1429650")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7AAC", Offset = "0x8E7AAC")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x1429884", Offset = "0x1429884", VA = "0x1429884")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7AE4", Offset = "0x8E7AE4")]
	public void UpdateModels()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x1429DBC", Offset = "0x1429DBC", VA = "0x1429DBC")]
	public static SgtRing CreateRing(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x1429EF8", Offset = "0x1429EF8", VA = "0x1429EF8")]
	public static SgtRing CreateRing(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x142A044", Offset = "0x142A044", VA = "0x142A044", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x142A2B8", Offset = "0x142A2B8", VA = "0x142A2B8", Slot = "10")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x142A2D0", Offset = "0x142A2D0", VA = "0x142A2D0", Slot = "11")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x142A518", Offset = "0x142A518", VA = "0x142A518", Slot = "12")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x142A730", Offset = "0x142A730", VA = "0x142A730", Slot = "13")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x14295DC", Offset = "0x14295DC", VA = "0x14295DC")]
	private void UpdateMaterialNonSerialized()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x142A8C8", Offset = "0x142A8C8", VA = "0x142A8C8")]
	private void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x1429AF8", Offset = "0x1429AF8", VA = "0x1429AF8")]
	private SgtRingModel GetOrAddModel(int index)
	{
		return null;
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x142A26C", Offset = "0x142A26C", VA = "0x142A26C")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x142AA30", Offset = "0x142AA30", VA = "0x142AA30")]
	public SgtRing()
	{
	}
}
[Token(Token = "0x2000092")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C7FDC", Offset = "0x8C7FDC")]
public class SgtRingFade : MonoBehaviour
{
	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D545C", Offset = "0x8D545C")]
	public SgtRing Ring;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5494", Offset = "0x8D5494")]
	public int Width;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D54CC", Offset = "0x8D54CC")]
	public TextureFormat Format;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SgtEase.Type Ease;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Power;

	[NonSerialized]
	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D generatedTexture;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x1700004E")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x6000515")]
		[Address(RVA = "0x142AB0C", Offset = "0x142AB0C", VA = "0x142AB0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x142AB14", Offset = "0x142AB14", VA = "0x142AB14")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7B1C", Offset = "0x8E7B1C")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x142AEAC", Offset = "0x142AEAC", VA = "0x142AEAC")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x142AD74", Offset = "0x142AD74", VA = "0x142AD74")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7B54", Offset = "0x8E7B54")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x142AFB4", Offset = "0x142AFB4", VA = "0x142AFB4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x142B048", Offset = "0x142B048", VA = "0x142B048", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x142B0F8", Offset = "0x142B0F8", VA = "0x142B0F8", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x142AFC4", Offset = "0x142AFC4", VA = "0x142AFC4")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x142B16C", Offset = "0x142B16C", VA = "0x142B16C")]
	public SgtRingFade()
	{
	}
}
[Token(Token = "0x2000093")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8028", Offset = "0x8C8028")]
public class SgtRingLighting : MonoBehaviour
{
	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D553C", Offset = "0x8D553C")]
	public SgtRing Ring;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5574", Offset = "0x8D5574")]
	public int Width;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D55AC", Offset = "0x8D55AC")]
	public TextureFormat Format;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D55E4", Offset = "0x8D55E4")]
	public float FrontPower;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D561C", Offset = "0x8D561C")]
	public float BackPower;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5654", Offset = "0x8D5654")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D5654", Offset = "0x8D5654")]
	public float BackStrength;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D56A8", Offset = "0x8D56A8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D56A8", Offset = "0x8D56A8")]
	public float BaseStrength;

	[NonSerialized]
	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D generatedTexture;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x1700004F")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x600051E")]
		[Address(RVA = "0x142B188", Offset = "0x142B188", VA = "0x142B188")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x142B190", Offset = "0x142B190", VA = "0x142B190")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7B8C", Offset = "0x8E7B8C")]
	public void UpdateTexture()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x142B528", Offset = "0x142B528", VA = "0x142B528")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x142B3F0", Offset = "0x142B3F0", VA = "0x142B3F0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7BC4", Offset = "0x8E7BC4")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x142B65C", Offset = "0x142B65C", VA = "0x142B65C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x142B6F0", Offset = "0x142B6F0", VA = "0x142B6F0", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x142B7A0", Offset = "0x142B7A0", VA = "0x142B7A0", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x142B66C", Offset = "0x142B66C", VA = "0x142B66C")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x142B814", Offset = "0x142B814", VA = "0x142B814")]
	public SgtRingLighting()
	{
	}
}
[Token(Token = "0x2000094")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8074", Offset = "0x8C8074")]
public class SgtRingLights : MonoBehaviour
{
	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5734", Offset = "0x8D5734")]
	public SgtRing Ring;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D576C", Offset = "0x8D576C")]
	public bool RequireSameLayer;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D57A4", Offset = "0x8D57A4")]
	public bool RequireSameTag;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D57DC", Offset = "0x8D57DC")]
	public string RequireNameContains;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x142B834", Offset = "0x142B834", VA = "0x142B834")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7BFC", Offset = "0x8E7BFC")]
	public void UpdateLights()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x142B93C", Offset = "0x142B93C", VA = "0x142B93C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x142B94C", Offset = "0x142B94C", VA = "0x142B94C", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x142B9FC", Offset = "0x142B9FC", VA = "0x142B9FC")]
	public SgtRingLights()
	{
	}
}
[Token(Token = "0x2000095")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C80C0", Offset = "0x8C80C0")]
public class SgtRingMainTexFilter : MonoBehaviour
{
	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5824", Offset = "0x8D5824")]
	public SgtRing Ring;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D585C", Offset = "0x8D585C")]
	public Texture2D Source;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5894", Offset = "0x8D5894")]
	public TextureFormat Format;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D58CC", Offset = "0x8D58CC")]
	public float Power;

	[NonSerialized]
	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D generatedTexture;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x17000050")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x600052B")]
		[Address(RVA = "0x142BA04", Offset = "0x142BA04", VA = "0x142BA04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x142BA0C", Offset = "0x142BA0C", VA = "0x142BA0C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7C34", Offset = "0x8E7C34")]
	public void UpdateTexture()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x142BD84", Offset = "0x142BD84", VA = "0x142BD84")]
	private void WriteTexture(int x)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x142BCC0", Offset = "0x142BCC0", VA = "0x142BCC0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7C6C", Offset = "0x8E7C6C")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x142BEA0", Offset = "0x142BEA0", VA = "0x142BEA0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x142BF34", Offset = "0x142BF34", VA = "0x142BF34", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x142BFE4", Offset = "0x142BFE4", VA = "0x142BFE4", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x142BEB0", Offset = "0x142BEB0", VA = "0x142BEB0")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x142C058", Offset = "0x142C058", VA = "0x142C058")]
	public SgtRingMainTexFilter()
	{
	}
}
[Token(Token = "0x2000096")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C810C", Offset = "0x8C810C")]
public class SgtRingMesh : MonoBehaviour
{
	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D593C", Offset = "0x8D593C")]
	public SgtRing Ring;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5974", Offset = "0x8D5974")]
	public int Segments;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D59AC", Offset = "0x8D59AC")]
	public int SegmentDetail;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D59E4", Offset = "0x8D59E4")]
	public float RadiusMin;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5A1C", Offset = "0x8D5A1C")]
	public float RadiusMax;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5A54", Offset = "0x8D5A54")]
	public int RadiusDetail;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5A8C", Offset = "0x8D5A8C")]
	public float BoundsShift;

	[NonSerialized]
	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh generatedMesh;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x17000051")]
	public Mesh GeneratedMesh
	{
		[Token(Token = "0x6000534")]
		[Address(RVA = "0x142C06C", Offset = "0x142C06C", VA = "0x142C06C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x142C074", Offset = "0x142C074", VA = "0x142C074")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7CA4", Offset = "0x8E7CA4")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x142C908", Offset = "0x142C908", VA = "0x142C908")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7CDC", Offset = "0x8E7CDC")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x142CA38", Offset = "0x142CA38", VA = "0x142CA38", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x142CACC", Offset = "0x142CACC", VA = "0x142CACC", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x142CB7C", Offset = "0x142CB7C", VA = "0x142CB7C", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x142CA48", Offset = "0x142CA48", VA = "0x142CA48")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x142CC54", Offset = "0x142CC54", VA = "0x142CC54")]
	public SgtRingMesh()
	{
	}
}
[Token(Token = "0x2000097")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8158", Offset = "0x8C8158")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C8158", Offset = "0x8C8158")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C8158", Offset = "0x8C8158")]
public class SgtRingModel : MonoBehaviour
{
	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5AFC", Offset = "0x8D5AFC")]
	public SgtRing Ring;

	[NonSerialized]
	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x1429748", Offset = "0x1429748", VA = "0x1429748")]
	public void SetMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x14294A0", Offset = "0x14294A0", VA = "0x14294A0")]
	public void SetMaterial(Material material)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x1429C74", Offset = "0x1429C74", VA = "0x1429C74")]
	public void SetRotation(Quaternion rotation)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x142A950", Offset = "0x142A950", VA = "0x142A950")]
	public static SgtRingModel Create(SgtRing ring)
	{
		return null;
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x1429D1C", Offset = "0x1429D1C", VA = "0x1429D1C")]
	public static void Pool(SgtRingModel segment)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x142A800", Offset = "0x142A800", VA = "0x142A800")]
	public static void MarkForDestruction(SgtRingModel segment)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x142CC78", Offset = "0x142CC78", VA = "0x142CC78", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x142CD00", Offset = "0x142CD00", VA = "0x142CD00")]
	public SgtRingModel()
	{
	}
}
[Token(Token = "0x2000098")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8218", Offset = "0x8C8218")]
public class SgtRingShadow : SgtShadow
{
	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5B34", Offset = "0x8D5B34")]
	public Texture Texture;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5B6C", Offset = "0x8D5B6C")]
	public SgtRingMesh RingMesh;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5BA4", Offset = "0x8D5BA4")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D5BA4", Offset = "0x8D5BA4")]
	public float RadiusMin;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5C04", Offset = "0x8D5C04")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D5C04", Offset = "0x8D5C04")]
	public float RadiusMax;

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x142CD08", Offset = "0x142CD08", VA = "0x142CD08", Slot = "4")]
	public override Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x142CD10", Offset = "0x142CD10", VA = "0x142CD10", Slot = "7")]
	public override bool CalculateShadow(ref Matrix4x4 matrix, ref float ratio)
	{
		return default(bool);
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x142D410", Offset = "0x142D410", VA = "0x142D410")]
	public SgtRingShadow()
	{
	}
}
[Token(Token = "0x2000099")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8264", Offset = "0x8C8264")]
public class SgtRingShadows : MonoBehaviour
{
	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5C64", Offset = "0x8D5C64")]
	public SgtRing Ring;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5C9C", Offset = "0x8D5C9C")]
	public bool RequireSameLayer;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5CD4", Offset = "0x8D5CD4")]
	public bool RequireSameTag;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5D0C", Offset = "0x8D5D0C")]
	public string RequireNameContains;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private bool startCalled;

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x142D48C", Offset = "0x142D48C", VA = "0x142D48C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7D14", Offset = "0x8E7D14")]
	public void UpdateShadows()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x142D594", Offset = "0x142D594", VA = "0x142D594", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x142D5A4", Offset = "0x142D5A4", VA = "0x142D5A4", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x142D654", Offset = "0x142D654", VA = "0x142D654")]
	public SgtRingShadows()
	{
	}
}
[Token(Token = "0x200009A")]
public class SgtSeedAttribute : PropertyAttribute
{
	[Token(Token = "0x600054B")]
	[Address(RVA = "0x142D798", Offset = "0x142D798", VA = "0x142D798")]
	public SgtSeedAttribute()
	{
	}
}
[Token(Token = "0x200009B")]
public abstract class SgtShadow : MonoBehaviour
{
	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtShadow> AllShadows;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5D54", Offset = "0x8D5D54")]
	public Light Light;

	[Token(Token = "0x600054C")]
	public abstract Texture GetTexture();

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x142D7A0", Offset = "0x142D7A0", VA = "0x142D7A0", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x142D82C", Offset = "0x142D82C", VA = "0x142D82C", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x142D370", Offset = "0x142D370", VA = "0x142D370", Slot = "7")]
	public virtual bool CalculateShadow(ref Matrix4x4 matrix, ref float ratio)
	{
		return default(bool);
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x142D484", Offset = "0x142D484", VA = "0x142D484")]
	protected SgtShadow()
	{
	}
}
[Token(Token = "0x200009C")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C82B0", Offset = "0x8C82B0")]
public class SgtShadowLayer : MonoBehaviour
{
	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5D8C", Offset = "0x8D5D8C")]
	public List<SgtShadow> Shadows;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5DC4", Offset = "0x8D5DC4")]
	public List<MeshRenderer> Renderers;

	[NonSerialized]
	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material Material;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x142D92C", Offset = "0x142D92C", VA = "0x142D92C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7D4C", Offset = "0x8E7D4C")]
	public void ApplyMaterial()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x142DA04", Offset = "0x142DA04", VA = "0x142DA04")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7D84", Offset = "0x8E7D84")]
	public void RemoveMaterial()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x142DADC", Offset = "0x142DADC", VA = "0x142DADC")]
	public void AddRenderer(MeshRenderer renderer)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x142DC58", Offset = "0x142DC58", VA = "0x142DC58")]
	public void RemoveRenderer(MeshRenderer renderer)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x142DD80", Offset = "0x142DD80", VA = "0x142DD80", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x142DF3C", Offset = "0x142DF3C", VA = "0x142DF3C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x142E058", Offset = "0x142E058", VA = "0x142E058", Slot = "6")]
	protected virtual void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x142E110", Offset = "0x142E110", VA = "0x142E110")]
	public SgtShadowLayer()
	{
	}
}
[Token(Token = "0x200009D")]
public abstract class SgtShape : MonoBehaviour
{
	[Token(Token = "0x600055A")]
	public abstract float GetDensity(Vector3 worldPoint);

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x142E118", Offset = "0x142E118", VA = "0x142E118")]
	protected SgtShape()
	{
	}
}
[Token(Token = "0x200009E")]
public class SgtShapeGroup : MonoBehaviour
{
	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5DFC", Offset = "0x8D5DFC")]
	public List<SgtShape> Shapes;

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x142E120", Offset = "0x142E120", VA = "0x142E120")]
	public float GetDensity(Vector3 worldPosition)
	{
		return default(float);
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x142E278", Offset = "0x142E278", VA = "0x142E278")]
	public SgtShapeGroup()
	{
	}
}
[Token(Token = "0x200009F")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C82FC", Offset = "0x8C82FC")]
public class SgtSimpleBelt : SgtBelt
{
	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5E34", Offset = "0x8D5E34")]
	[SgtSeed]
	public int Seed;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5E80", Offset = "0x8D5E80")]
	public float Thickness;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float ThicknessBias;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5EB8", Offset = "0x8D5EB8")]
	public float InnerRadius;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5EF0", Offset = "0x8D5EF0")]
	public float InnerSpeed;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5F28", Offset = "0x8D5F28")]
	public float OuterRadius;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5F60", Offset = "0x8D5F60")]
	public float OuterSpeed;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5F98", Offset = "0x8D5F98")]
	public int AsteroidCount;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5FD0", Offset = "0x8D5FD0")]
	public float AsteroidSpin;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6008", Offset = "0x8D6008")]
	public float AsteroidRadiusMin;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6040", Offset = "0x8D6040")]
	public float AsteroidRadiusMax;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6078", Offset = "0x8D6078")]
	public float AsteroidRadiusBias;

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x142E280", Offset = "0x142E280", VA = "0x142E280")]
	public static SgtSimpleBelt CreateSimpleBelt(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x142E398", Offset = "0x142E398", VA = "0x142E398")]
	public static SgtSimpleBelt CreateSimpleBelt(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x142E4E4", Offset = "0x142E4E4", VA = "0x142E4E4", Slot = "9")]
	protected override int BeginQuads()
	{
		return default(int);
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x142E554", Offset = "0x142E554", VA = "0x142E554", Slot = "16")]
	protected override void NextQuad(ref SgtBeltAsteroid asteroid, int asteroidIndex)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x142E7E8", Offset = "0x142E7E8", VA = "0x142E7E8", Slot = "10")]
	protected override void EndQuads()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x142E844", Offset = "0x142E844", VA = "0x142E844")]
	public SgtSimpleBelt()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A0")]
public class SgtSimplex
{
	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private byte[] perm;

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x142E9BC", Offset = "0x142E9BC", VA = "0x142E9BC")]
	public SgtSimplex()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x142EA1C", Offset = "0x142EA1C", VA = "0x142EA1C")]
	public SgtSimplex(int seed)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x142EA94", Offset = "0x142EA94", VA = "0x142EA94")]
	public void SetSeed(int seed)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x142EB90", Offset = "0x142EB90", VA = "0x142EB90")]
	public float Generate(float x, float y, float z)
	{
		return default(float);
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x142F304", Offset = "0x142F304", VA = "0x142F304")]
	private static int FastFloor(float x)
	{
		return default(int);
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x142F318", Offset = "0x142F318", VA = "0x142F318")]
	private static int Mod(int x, int m)
	{
		return default(int);
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x142F378", Offset = "0x142F378", VA = "0x142F378")]
	private static float grad(int hash, float x)
	{
		return default(float);
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x142F398", Offset = "0x142F398", VA = "0x142F398")]
	private static float grad(int hash, float x, float y)
	{
		return default(float);
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x142F32C", Offset = "0x142F32C", VA = "0x142F32C")]
	private static float grad(int hash, float x, float y, float z)
	{
		return default(float);
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x142F3D0", Offset = "0x142F3D0", VA = "0x142F3D0")]
	private static float grad(int hash, float x, float y, float z, float t)
	{
		return default(float);
	}
}
[Token(Token = "0x20000A1")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8348", Offset = "0x8C8348")]
public class SgtSingularity : MonoBehaviour
{
	[Token(Token = "0x20004E3")]
	public enum EdgeFadeType
	{
		[Token(Token = "0x4001E9B")]
		None,
		[Token(Token = "0x4001E9C")]
		Center,
		[Token(Token = "0x4001E9D")]
		Fragment
	}

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtSingularity> AllSingularities;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D60C0", Offset = "0x8D60C0")]
	public List<Mesh> Meshes;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D60F8", Offset = "0x8D60F8")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6130", Offset = "0x8D6130")]
	public int RenderQueueOffset;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6168", Offset = "0x8D6168")]
	public float PinchPower;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D61A0", Offset = "0x8D61A0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D61A0", Offset = "0x8D61A0")]
	public float PinchOffset;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D61F4", Offset = "0x8D61F4")]
	public EdgeFadeType EdgeFade;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D622C", Offset = "0x8D622C")]
	public float EdgeFadePower;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6264", Offset = "0x8D6264")]
	public Color HoleColor;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D629C", Offset = "0x8D629C")]
	public float HolePower;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D62D4", Offset = "0x8D62D4")]
	public bool Tint;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D630C", Offset = "0x8D630C")]
	public Color TintColor;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6344", Offset = "0x8D6344")]
	public float TintPower;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D637C", Offset = "0x8D637C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D637C", Offset = "0x8D637C")]
	public List<SgtSingularityModel> Models;

	[NonSerialized]
	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material Material;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[NonSerialized]
	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool updateMaterialCalled;

	[NonSerialized]
	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool updateModelsCalled;

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x142F41C", Offset = "0x142F41C", VA = "0x142F41C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7DBC", Offset = "0x8E7DBC")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x142F980", Offset = "0x142F980", VA = "0x142F980")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7DF4", Offset = "0x8E7DF4")]
	public void UpdateModels()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x142FCA8", Offset = "0x142FCA8", VA = "0x142FCA8")]
	public static SgtSingularity CreateSingularity(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x142FDE4", Offset = "0x142FDE4", VA = "0x142FDE4")]
	public static SgtSingularity CreateSingularity(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x142FF30", Offset = "0x142FF30", VA = "0x142FF30", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x14300F4", Offset = "0x14300F4", VA = "0x14300F4", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x143010C", Offset = "0x143010C", VA = "0x143010C", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x143026C", Offset = "0x143026C", VA = "0x143026C", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x142FB24", Offset = "0x142FB24", VA = "0x142FB24")]
	private SgtSingularityModel GetOrAddModel(int index)
	{
		return null;
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x14300B0", Offset = "0x14300B0", VA = "0x14300B0")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x1430340", Offset = "0x1430340", VA = "0x1430340")]
	public SgtSingularity()
	{
	}
}
[Token(Token = "0x20000A2")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8394", Offset = "0x8C8394")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C8394", Offset = "0x8C8394")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C8394", Offset = "0x8C8394")]
public class SgtSingularityModel : MonoBehaviour
{
	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6414", Offset = "0x8D6414")]
	public SgtSingularity Singularity;

	[NonSerialized]
	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xEC2A88", Offset = "0xEC2A88", VA = "0xEC2A88")]
	public void SetMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xEC2BC4", Offset = "0xEC2BC4", VA = "0xEC2BC4")]
	public void SetMaterial(Material material)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xEC2D00", Offset = "0xEC2D00", VA = "0xEC2D00")]
	public static SgtSingularityModel Create(SgtSingularity singularity)
	{
		return null;
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xEC2DE0", Offset = "0xEC2DE0", VA = "0xEC2DE0")]
	public static void Pool(SgtSingularityModel model)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xEC2E80", Offset = "0xEC2E80", VA = "0xEC2E80")]
	public static void MarkForDestruction(SgtSingularityModel model)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xEC2F48", Offset = "0xEC2F48", VA = "0xEC2F48", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xEC2FD0", Offset = "0xEC2FD0", VA = "0xEC2FD0")]
	public SgtSingularityModel()
	{
	}
}
[Token(Token = "0x20000A3")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8454", Offset = "0x8C8454")]
public class SgtSkysphere : MonoBehaviour
{
	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtSkysphere> AllSkyspheres;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D644C", Offset = "0x8D644C")]
	public List<Mesh> Meshes;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6484", Offset = "0x8D6484")]
	public Color Color;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D64BC", Offset = "0x8D64BC")]
	public float Brightness;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D64F4", Offset = "0x8D64F4")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D652C", Offset = "0x8D652C")]
	public int RenderQueueOffset;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6564", Offset = "0x8D6564")]
	public Texture MainTex;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D659C", Offset = "0x8D659C")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D659C", Offset = "0x8D659C")]
	public bool FollowCameras;

	[NonSerialized]
	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material Material;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<SgtSkysphereModel> Models;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[NonSerialized]
	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool updateMaterialCalled;

	[NonSerialized]
	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	private bool updateModelsCalled;

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xEC2FD8", Offset = "0xEC2FD8", VA = "0xEC2FD8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7E2C", Offset = "0x8E7E2C")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xEC319C", Offset = "0xEC319C", VA = "0xEC319C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7E64", Offset = "0x8E7E64")]
	public void UpdateModels()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xEC37C4", Offset = "0xEC37C4", VA = "0xEC37C4")]
	public static SgtSkysphere CreateSkysphere(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xEC3900", Offset = "0xEC3900", VA = "0xEC3900")]
	public static SgtSkysphere CreateSkysphere(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xEC3A50", Offset = "0xEC3A50", VA = "0xEC3A50", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xEC3D60", Offset = "0xEC3D60", VA = "0xEC3D60", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xEC3D78", Offset = "0xEC3D78", VA = "0xEC3D78", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xEC4034", Offset = "0xEC4034", VA = "0xEC4034", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xEC41CC", Offset = "0xEC41CC", VA = "0xEC41CC")]
	private void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xEC44E8", Offset = "0xEC44E8", VA = "0xEC44E8")]
	private void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xEC3330", Offset = "0xEC3330", VA = "0xEC3330")]
	private SgtSkysphereModel GetOrAddModel(int index)
	{
		return null;
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xEC3D1C", Offset = "0xEC3D1C", VA = "0xEC3D1C")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xEC4788", Offset = "0xEC4788", VA = "0xEC4788")]
	public SgtSkysphere()
	{
	}
}
[Token(Token = "0x20000A4")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C84A0", Offset = "0x8C84A0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C84A0", Offset = "0x8C84A0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C84A0", Offset = "0x8C84A0")]
public class SgtSkysphereModel : MonoBehaviour
{
	[Token(Token = "0x20004E4")]
	public class CameraState : SgtCameraState
	{
		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 LocalPosition;

		[Token(Token = "0x60022B5")]
		[Address(RVA = "0xEC48CC", Offset = "0xEC48CC", VA = "0xEC48CC")]
		public CameraState()
		{
		}
	}

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6634", Offset = "0x8D6634")]
	public SgtSkysphere Skysphere;

	[NonSerialized]
	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter meshFilter;

	[NonSerialized]
	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer meshRenderer;

	[NonSerialized]
	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<CameraState> cameraStates;

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xEC34AC", Offset = "0xEC34AC", VA = "0xEC34AC")]
	public void SetMesh(Mesh mesh)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xEC35E8", Offset = "0xEC35E8", VA = "0xEC35E8")]
	public void SetMaterial(Material material)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xEC442C", Offset = "0xEC442C", VA = "0xEC442C")]
	public void Save(Camera camera)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xEC45E0", Offset = "0xEC45E0", VA = "0xEC45E0")]
	public void Restore(Camera camera)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xEC4374", Offset = "0xEC4374", VA = "0xEC4374")]
	public void Revert()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xEC46A8", Offset = "0xEC46A8", VA = "0xEC46A8")]
	public static SgtSkysphereModel Create(SgtSkysphere skysphere)
	{
		return null;
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xEC3724", Offset = "0xEC3724", VA = "0xEC3724")]
	public static void Pool(SgtSkysphereModel model)
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xEC4104", Offset = "0xEC4104", VA = "0xEC4104")]
	public static void MarkForDestruction(SgtSkysphereModel model)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xEC483C", Offset = "0xEC483C", VA = "0xEC483C", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xEC48C4", Offset = "0xEC48C4", VA = "0xEC48C4")]
	public SgtSkysphereModel()
	{
	}
}
[Token(Token = "0x20000A5")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8560", Offset = "0x8C8560")]
public class SgtSnapToTerrain : MonoBehaviour
{
	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D666C", Offset = "0x8D666C")]
	public SgtTerrain Terrain;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D66A4", Offset = "0x8D66A4")]
	public bool SnapPosition;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D66DC", Offset = "0x8D66DC")]
	public float SnapOffset;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6714", Offset = "0x8D6714")]
	public float SnapMoveDampening;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D674C", Offset = "0x8D674C")]
	public bool SnapRotation;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6784", Offset = "0x8D6784")]
	public float SnapRightDistance;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D67BC", Offset = "0x8D67BC")]
	public float SnapForwardDistance;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D67F4", Offset = "0x8D67F4")]
	public float SnapTurnDampening;

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xEC48D4", Offset = "0xEC48D4", VA = "0xEC48D4")]
	public static void SnapTransformPosition(SgtTerrain terrain, Transform transform, float offset = 0f, float dampening = 0f)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xEC4988", Offset = "0xEC4988", VA = "0xEC4988")]
	public static void SnapTransformRotation(SgtTerrain terrain, Transform transform, float rightDistance = 1f, float forwardDistance = 1f, float dampening = 0f)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xEC5004", Offset = "0xEC5004", VA = "0xEC5004")]
	public void UpdateSnap()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xEC5078", Offset = "0xEC5078", VA = "0xEC5078", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xEC507C", Offset = "0xEC507C", VA = "0xEC507C")]
	public SgtSnapToTerrain()
	{
	}
}
[Token(Token = "0x20000A6")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C85AC", Offset = "0x8C85AC")]
public class SgtSpacetime : MonoBehaviour
{
	[Token(Token = "0x20004E5")]
	public enum DisplacementType
	{
		[Token(Token = "0x4001EA0")]
		Pinch,
		[Token(Token = "0x4001EA1")]
		Offset
	}

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtSpacetime> AllSpacetimes;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D682C", Offset = "0x8D682C")]
	public Color Color;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6864", Offset = "0x8D6864")]
	public float Brightness;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D689C", Offset = "0x8D689C")]
	public RenderQueue RenderQueue;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D68D4", Offset = "0x8D68D4")]
	public int RenderQueueOffset;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D690C", Offset = "0x8D690C")]
	public Texture2D MainTex;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6944", Offset = "0x8D6944")]
	public int Tile;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D697C", Offset = "0x8D697C")]
	public Color AmbientColor;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D69B4", Offset = "0x8D69B4")]
	public float AmbientBrightness;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D69EC", Offset = "0x8D69EC")]
	public Color DisplacementColor;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6A24", Offset = "0x8D6A24")]
	public float DisplacementBrightness;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6A5C", Offset = "0x8D6A5C")]
	public Color HighlightColor;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6A94", Offset = "0x8D6A94")]
	public float HighlightBrightness;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6ACC", Offset = "0x8D6ACC")]
	public float HighlightPower;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6B04", Offset = "0x8D6B04")]
	public float HighlightScale;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6B3C", Offset = "0x8D6B3C")]
	public DisplacementType Displacement;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6B74", Offset = "0x8D6B74")]
	public bool Accumulate;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6BAC", Offset = "0x8D6BAC")]
	public float Power;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6BE4", Offset = "0x8D6BE4")]
	public float FadeScale;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6C1C", Offset = "0x8D6C1C")]
	public Vector3 Offset;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6C54", Offset = "0x8D6C54")]
	public bool UseAllWells;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6C8C", Offset = "0x8D6C8C")]
	public bool RequireSameLayer;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6CC4", Offset = "0x8D6CC4")]
	public bool RequireSameTag;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6CFC", Offset = "0x8D6CFC")]
	public string RequireNameContains;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6D34", Offset = "0x8D6D34")]
	public List<SgtSpacetimeWell> Wells;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6D6C", Offset = "0x8D6D6C")]
	public List<MeshRenderer> Renderers;

	[NonSerialized]
	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material Material;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[NonSerialized]
	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool updateMaterialCalled;

	[NonSerialized]
	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	private bool updateWellsCalled;

	[NonSerialized]
	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector4[] gauPos;

	[NonSerialized]
	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector4[] gauDat;

	[NonSerialized]
	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector4[] ripPos;

	[NonSerialized]
	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector4[] ripDat;

	[NonSerialized]
	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector4[] twiPos;

	[NonSerialized]
	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Vector4[] twiDat;

	[NonSerialized]
	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Matrix4x4[] twiMat;

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xEC50A4", Offset = "0xEC50A4", VA = "0xEC50A4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7E9C", Offset = "0x8E7E9C")]
	public void UpdateMaterial()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xEC572C", Offset = "0xEC572C", VA = "0xEC572C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7ED4", Offset = "0x8E7ED4")]
	public void UpdateWells()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xEC55CC", Offset = "0xEC55CC", VA = "0xEC55CC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7F0C", Offset = "0x8E7F0C")]
	public void ApplyMaterial()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xEC6150", Offset = "0xEC6150", VA = "0xEC6150")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7F44", Offset = "0x8E7F44")]
	public void RemoveMaterial()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xEC62A0", Offset = "0xEC62A0", VA = "0xEC62A0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7F7C", Offset = "0x8E7F7C")]
	public SgtSpacetimeWell AddWell()
	{
		return null;
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xEC6458", Offset = "0xEC6458", VA = "0xEC6458")]
	public void AddWell(SgtSpacetimeWell well)
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xEC6530", Offset = "0xEC6530", VA = "0xEC6530")]
	public void AddRenderer(MeshRenderer renderer)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xEC66AC", Offset = "0xEC66AC", VA = "0xEC66AC")]
	public void RemoveRenderer(MeshRenderer renderer)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xEC67D4", Offset = "0xEC67D4", VA = "0xEC67D4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xEC68BC", Offset = "0xEC68BC", VA = "0xEC68BC", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xEC6944", Offset = "0xEC6944", VA = "0xEC6944", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xEC6948", Offset = "0xEC6948", VA = "0xEC6948", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xEC5A44", Offset = "0xEC5A44", VA = "0xEC5A44")]
	private void WriteWells(ref int gaussianCount, ref int rippleCount, ref int twistCount)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xEC6878", Offset = "0xEC6878", VA = "0xEC6878")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xEC69DC", Offset = "0xEC69DC", VA = "0xEC69DC")]
	public SgtSpacetime()
	{
	}
}
[Token(Token = "0x20000A7")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C85F8", Offset = "0x8C85F8")]
public class SgtSpacetimeWell : MonoBehaviour
{
	[Token(Token = "0x20004E6")]
	public enum DistributionType
	{
		[Token(Token = "0x4001EA3")]
		Gaussian,
		[Token(Token = "0x4001EA4")]
		Ripple,
		[Token(Token = "0x4001EA5")]
		Twist
	}

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtSpacetimeWell> AllWells;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6DDC", Offset = "0x8D6DDC")]
	public DistributionType Distribution;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6E14", Offset = "0x8D6E14")]
	public float Radius;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6E4C", Offset = "0x8D6E4C")]
	public float Frequency;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6E84", Offset = "0x8D6E84")]
	public float Strength;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6EBC", Offset = "0x8D6EBC")]
	public float Offset;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6EF4", Offset = "0x8D6EF4")]
	public float OffsetSpeed;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6F2C", Offset = "0x8D6F2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D6F2C", Offset = "0x8D6F2C")]
	public float HoleSize;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6F84", Offset = "0x8D6F84")]
	public float HolePower;

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xEC6304", Offset = "0xEC6304", VA = "0xEC6304")]
	public static SgtSpacetimeWell Create(SgtSpacetime spacetime)
	{
		return null;
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xEC6BE0", Offset = "0xEC6BE0", VA = "0xEC6BE0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xEC6C6C", Offset = "0xEC6C6C", VA = "0xEC6C6C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xEC6CF8", Offset = "0xEC6CF8", VA = "0xEC6CF8", Slot = "6")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xEC6D34", Offset = "0xEC6D34", VA = "0xEC6D34")]
	public SgtSpacetimeWell()
	{
	}
}
[Token(Token = "0x20000A8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8644", Offset = "0x8C8644")]
public class SgtSphere : SgtShape
{
	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6FBC", Offset = "0x8D6FBC")]
	public float Radius;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6FF4", Offset = "0x8D6FF4")]
	public SgtEase.Type Ease;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D702C", Offset = "0x8D702C")]
	public float Power;

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xEC6DC8", Offset = "0xEC6DC8", VA = "0xEC6DC8", Slot = "4")]
	public override float GetDensity(Vector3 worldPoint)
	{
		return default(float);
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xEC6EF8", Offset = "0xEC6EF8", VA = "0xEC6EF8")]
	public static SgtSphere CreateSphere(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xEC7010", Offset = "0xEC7010", VA = "0xEC7010")]
	public static SgtSphere CreateSphere(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xEC7160", Offset = "0xEC7160", VA = "0xEC7160")]
	public SgtSphere()
	{
	}
}
[Token(Token = "0x20000A9")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C867C", Offset = "0x8C867C")]
public class SgtSphereShadow : SgtShadow
{
	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7064", Offset = "0x8D7064")]
	public int Width;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D709C", Offset = "0x8D709C")]
	public TextureFormat Format;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D70D4", Offset = "0x8D70D4")]
	public float PowerR;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D710C", Offset = "0x8D710C")]
	public float PowerG;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7144", Offset = "0x8D7144")]
	public float PowerB;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D717C", Offset = "0x8D717C")]
	public float Opacity;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D71B4", Offset = "0x8D71B4")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D71B4", Offset = "0x8D71B4")]
	public float RadiusMin;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7214", Offset = "0x8D7214")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D7214", Offset = "0x8D7214")]
	public float RadiusMax;

	[NonSerialized]
	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Texture2D generatedTexture;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x17000052")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xEC717C", Offset = "0xEC717C", VA = "0xEC717C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xEC7184", Offset = "0xEC7184", VA = "0xEC7184", Slot = "4")]
	public override Texture GetTexture()
	{
		return null;
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xEC7204", Offset = "0xEC7204", VA = "0xEC7204")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7FB4", Offset = "0x8E7FB4")]
	public void UpdateTexture()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xEC7460", Offset = "0xEC7460", VA = "0xEC7460")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xEC7560", Offset = "0xEC7560", VA = "0xEC7560", Slot = "7")]
	public override bool CalculateShadow(ref Matrix4x4 matrix, ref float ratio)
	{
		return default(bool);
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xEC7AF8", Offset = "0xEC7AF8", VA = "0xEC7AF8")]
	private float GetRadius(float a, float b, float theta)
	{
		return default(float);
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xEC7BC8", Offset = "0xEC7BC8", VA = "0xEC7BC8", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xEC7C8C", Offset = "0xEC7C8C", VA = "0xEC7C8C", Slot = "8")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xEC7CA4", Offset = "0xEC7CA4", VA = "0xEC7CA4", Slot = "9")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xEC7C04", Offset = "0xEC7C04", VA = "0xEC7C04")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xEC7D18", Offset = "0xEC7D18", VA = "0xEC7D18")]
	public SgtSphereShadow()
	{
	}
}
[Token(Token = "0x20000AA")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C86C8", Offset = "0x8C86C8")]
public class SgtSpiralStarfield : SgtPointStarfield
{
	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D72AC", Offset = "0x8D72AC")]
	[SgtSeed]
	public int Seed;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D72F8", Offset = "0x8D72F8")]
	public float Radius;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7330", Offset = "0x8D7330")]
	public int ArmCount;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7368", Offset = "0x8D7368")]
	public float Twist;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D73A0", Offset = "0x8D73A0")]
	public AnimationCurve Thickness;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D73D8", Offset = "0x8D73D8")]
	public int StarCount;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7410", Offset = "0x8D7410")]
	public float StarRadiusMin;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7448", Offset = "0x8D7448")]
	public float StarRadiusMax;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7480", Offset = "0x8D7480")]
	public float StarRadiusBias;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D74B8", Offset = "0x8D74B8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D74B8", Offset = "0x8D74B8")]
	public float StarPulseMax;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Keyframe[] defaultThicknessKeyframes;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float armStep;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float twistStep;

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xEC7DA4", Offset = "0xEC7DA4", VA = "0xEC7DA4")]
	public static SgtSpiralStarfield CreateSpiralStarfield(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xEC7EE0", Offset = "0xEC7EE0", VA = "0xEC7EE0")]
	public static SgtSpiralStarfield CreateSpiralStarfield(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xEC8030", Offset = "0xEC8030", VA = "0xEC8030", Slot = "5")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xEC810C", Offset = "0xEC810C", VA = "0xEC810C", Slot = "9")]
	protected override int BeginQuads()
	{
		return default(int);
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xEC8214", Offset = "0xEC8214", VA = "0xEC8214", Slot = "15")]
	protected override void NextQuad(ref SgtPointStar star, int starIndex)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xEC85D0", Offset = "0xEC85D0", VA = "0xEC85D0", Slot = "10")]
	protected override void EndQuads()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xEC8630", Offset = "0xEC8630", VA = "0xEC8630")]
	public SgtSpiralStarfield()
	{
	}
}
[Token(Token = "0x20000AB")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8714", Offset = "0x8C8714")]
public class SgtStarfieldFadeFar : MonoBehaviour
{
	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D750C", Offset = "0x8D750C")]
	public SgtPointStarfield Starfield;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7544", Offset = "0x8D7544")]
	public int Width;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D757C", Offset = "0x8D757C")]
	public TextureFormat Format;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D75B4", Offset = "0x8D75B4")]
	public SgtEase.Type Ease;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D75EC", Offset = "0x8D75EC")]
	public float Power;

	[NonSerialized]
	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D generatedTexture;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x17000053")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xEC879C", Offset = "0xEC879C", VA = "0xEC879C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xEC87A4", Offset = "0xEC87A4", VA = "0xEC87A4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E7FEC", Offset = "0x8E7FEC")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xEC8AC8", Offset = "0xEC8AC8", VA = "0xEC8AC8")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xEC8A08", Offset = "0xEC8A08", VA = "0xEC8A08")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E8024", Offset = "0x8E8024")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xEC8BD4", Offset = "0xEC8BD4", VA = "0xEC8BD4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xEC8C68", Offset = "0xEC8C68", VA = "0xEC8C68", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xEC8D18", Offset = "0xEC8D18", VA = "0xEC8D18", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xEC8BE4", Offset = "0xEC8BE4", VA = "0xEC8BE4")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xEC8D8C", Offset = "0xEC8D8C", VA = "0xEC8D8C")]
	public SgtStarfieldFadeFar()
	{
	}
}
[Token(Token = "0x20000AC")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8760", Offset = "0x8C8760")]
public class SgtStarfieldFadeNear : MonoBehaviour
{
	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D765C", Offset = "0x8D765C")]
	public SgtPointStarfield Starfield;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7694", Offset = "0x8D7694")]
	public int Width;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D76CC", Offset = "0x8D76CC")]
	public TextureFormat Format;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7704", Offset = "0x8D7704")]
	public SgtEase.Type Ease;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D773C", Offset = "0x8D773C")]
	public float Power;

	[NonSerialized]
	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D generatedTexture;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private bool startCalled;

	[Token(Token = "0x17000054")]
	public Texture2D GeneratedTexture
	{
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xEC8DA8", Offset = "0xEC8DA8", VA = "0xEC8DA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xEC8DB0", Offset = "0xEC8DB0", VA = "0xEC8DB0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E805C", Offset = "0x8E805C")]
	public void UpdateTextures()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xEC90D4", Offset = "0xEC90D4", VA = "0xEC90D4")]
	private void WriteTexture(float u, int x)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xEC9014", Offset = "0xEC9014", VA = "0xEC9014")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E8094", Offset = "0x8E8094")]
	public void UpdateApply()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xEC91E0", Offset = "0xEC91E0", VA = "0xEC91E0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xEC9274", Offset = "0xEC9274", VA = "0xEC9274", Slot = "5")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xEC9324", Offset = "0xEC9324", VA = "0xEC9324", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xEC91F0", Offset = "0xEC91F0", VA = "0xEC91F0")]
	private void CheckUpdateCalls()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xEC9398", Offset = "0xEC9398", VA = "0xEC9398")]
	public SgtStarfieldFadeNear()
	{
	}
}
[Serializable]
[Token(Token = "0x20000AD")]
public class SgtStaticStar
{
	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SgtStaticStar Temp;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D77AC", Offset = "0x8D77AC")]
	public int Variant;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D77E4", Offset = "0x8D77E4")]
	public Color Color;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D781C", Offset = "0x8D781C")]
	public float Radius;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7854", Offset = "0x8D7854")]
	public Vector3 Position;

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xEC93B4", Offset = "0xEC93B4", VA = "0xEC93B4")]
	public void CopyFrom(SgtStaticStar other)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xEC9454", Offset = "0xEC9454", VA = "0xEC9454")]
	public SgtStaticStar()
	{
	}
}
[Token(Token = "0x20000AE")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C87AC", Offset = "0x8C87AC")]
public class SgtStaticStarfield : SgtQuads
{
	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D788C", Offset = "0x8D788C")]
	[SgtSeed]
	public int Seed;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D78D8", Offset = "0x8D78D8")]
	public float Radius;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7910", Offset = "0x8D7910")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D7910", Offset = "0x8D7910")]
	public float Symmetry;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7964", Offset = "0x8D7964")]
	public int StarCount;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D799C", Offset = "0x8D799C")]
	public float StarRadiusMin;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D79D4", Offset = "0x8D79D4")]
	public float StarRadiusMax;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7A0C", Offset = "0x8D7A0C")]
	public float StarRadiusBias;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7A44", Offset = "0x8D7A44")]
	public Gradient StarColors;

	[Token(Token = "0x17000055")]
	protected override string ShaderName
	{
		[Token(Token = "0x60005E0")]
		[Address(RVA = "0xEC94E8", Offset = "0xEC94E8", VA = "0xEC94E8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xEC9530", Offset = "0xEC9530", VA = "0xEC9530")]
	public static SgtStaticStarfield CreateStaticStarfield(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xEC9648", Offset = "0xEC9648", VA = "0xEC9648")]
	public static SgtStaticStarfield CreateStaticStarfield(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xEC9798", Offset = "0xEC9798", VA = "0xEC9798", Slot = "6")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xEC995C", Offset = "0xEC995C", VA = "0xEC995C", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xEC9B20", Offset = "0xEC9B20", VA = "0xEC9B20", Slot = "9")]
	protected override int BeginQuads()
	{
		return default(int);
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xEC9B94", Offset = "0xEC9B94", VA = "0xEC9B94", Slot = "14")]
	protected virtual void NextQuad(ref SgtStaticStar quad, int starIndex)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xEC9D68", Offset = "0xEC9D68", VA = "0xEC9D68", Slot = "10")]
	protected override void EndQuads()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xEC9DC8", Offset = "0xEC9DC8", VA = "0xEC9DC8", Slot = "13")]
	protected override void BuildMesh(Mesh mesh, int starIndex, int starCount)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xECA85C", Offset = "0xECA85C", VA = "0xECA85C", Slot = "15")]
	protected virtual void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xECA9EC", Offset = "0xECA9EC", VA = "0xECA9EC")]
	protected void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xECAAE8", Offset = "0xECAAE8", VA = "0xECAAE8")]
	public SgtStaticStarfield()
	{
	}
}
[Token(Token = "0x20000AF")]
[ExecuteInEditMode]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C87F8", Offset = "0x8C87F8")]
public class SgtTerrain : MonoBehaviour
{
	[Token(Token = "0x20004E7")]
	public enum NormalsType
	{
		[Token(Token = "0x4001EA7")]
		Normalized,
		[Token(Token = "0x4001EA8")]
		Hierarchical
	}

	[Token(Token = "0x20004E8")]
	public delegate void CalculateHeightDelegate(SgtVector3D localPosition, ref double height);

	[Token(Token = "0x20004E9")]
	public delegate void CalculateColorDelegate(SgtVector3D localPosition, double height, ref Color color);

	[Token(Token = "0x20004EA")]
	public delegate void CalculateMaterialDelegate(SgtTerrainFace face, ref Material material);

	[Token(Token = "0x20004EB")]
	public delegate void CalculateFaceDelegate(SgtTerrainFace face);

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<SgtTerrain> AllTerrains;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7A7C", Offset = "0x8D7A7C")]
	public Material Material;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7AB4", Offset = "0x8D7AB4")]
	public SgtAtmosphere Atmosphere;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7AEC", Offset = "0x8D7AEC")]
	public List<Transform> Targets;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7B24", Offset = "0x8D7B24")]
	public double Radius;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7B5C", Offset = "0x8D7B5C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D7B5C", Offset = "0x8D7B5C")]
	public int Subdivisions;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7BB0", Offset = "0x8D7BB0")]
	public NormalsType Normals;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7BE8", Offset = "0x8D7BE8")]
	public bool Tangents;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7C20", Offset = "0x8D7C20")]
	public bool CenterBounds;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7C58", Offset = "0x8D7C58")]
	public int MaxColliderDepth;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7C90", Offset = "0x8D7C90")]
	public List<double> Distances;

	[NonSerialized]
	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool DelayRebuild;

	[NonSerialized]
	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool DelayUpdateRenderers;

	[NonSerialized]
	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool DelayUpdateColliders;

	[NonSerialized]
	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<SgtVector3D> LocalPoints;

	[NonSerialized]
	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<double> LocalDistances;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public SgtTerrainFace NegativeX;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SgtTerrainFace NegativeY;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SgtTerrainFace NegativeZ;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SgtTerrainFace PositiveX;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SgtTerrainFace PositiveY;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SgtTerrainFace PositiveZ;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public CalculateHeightDelegate OnCalculateHeight;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public CalculateFaceDelegate OnSpawnFace;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public CalculateFaceDelegate OnDespawnFace;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public CalculateMaterialDelegate OnCalculateMaterial;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public CalculateColorDelegate OnCalculateColor;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CalculateFaceDelegate OnPostProcessVertices;

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xECAB70", Offset = "0xECAB70", VA = "0xECAB70")]
	private void CalculateLocalValues()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xECAE04", Offset = "0xECAE04", VA = "0xECAE04")]
	public double GetLocalHeight(SgtVector3D localPoint)
	{
		return default(double);
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xECB408", Offset = "0xECB408", VA = "0xECB408")]
	public float GetWorldHeight(Vector3 worldPoint)
	{
		return default(float);
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xECB5C8", Offset = "0xECB5C8", VA = "0xECB5C8")]
	public SgtVector3D GetLocalPoint(SgtVector3D localCube)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xECB4F8", Offset = "0xECB4F8", VA = "0xECB4F8")]
	public Vector3 GetWorldPoint(Vector3 position)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xECB690", Offset = "0xECB690", VA = "0xECB690")]
	public SgtVector3D GetLocalNormal(SgtVector3D point, SgtVector3D right, SgtVector3D up)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xEC4D6C", Offset = "0xEC4D6C", VA = "0xEC4D6C")]
	public Vector3 GetWorldNormal(Vector3 point, Vector3 right, Vector3 up)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xEC4F2C", Offset = "0xEC4F2C", VA = "0xEC4F2C")]
	public Vector3 GetWorldNormal(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xECB7C8", Offset = "0xECB7C8", VA = "0xECB7C8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E80CC", Offset = "0x8E80CC")]
	public void Rebuild()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xECC100", Offset = "0xECC100", VA = "0xECC100")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E8104", Offset = "0x8E8104")]
	public void UpdateStates()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xECC4AC", Offset = "0xECC4AC", VA = "0xECC4AC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E813C", Offset = "0x8E813C")]
	public void UpdateRenderers()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xECC744", Offset = "0xECC744", VA = "0xECC744")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E8174", Offset = "0x8E8174")]
	public void UpdateColliders()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xECC9DC", Offset = "0xECC9DC", VA = "0xECC9DC")]
	public void RunFaces(CalculateFaceDelegate method)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xECCA58", Offset = "0xECCA58", VA = "0xECCA58")]
	public void RunFaces(SgtTerrainFace face, CalculateFaceDelegate method)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xECB878", Offset = "0xECB878", VA = "0xECB878")]
	public void ValidateFaces()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xECD54C", Offset = "0xECD54C", VA = "0xECD54C")]
	public static SgtTerrain CreateTerrain(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xECD688", Offset = "0xECD688", VA = "0xECD688")]
	public static SgtTerrain CreateTerrain(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xECD7D8", Offset = "0xECD7D8", VA = "0xECD7D8", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xECDAEC", Offset = "0xECDAEC", VA = "0xECDAEC", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xECDB3C", Offset = "0xECDB3C", VA = "0xECDB3C", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xECDE58", Offset = "0xECDE58", VA = "0xECDE58", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xECD294", Offset = "0xECD294", VA = "0xECD294")]
	private SgtTerrainFace CreateFace(CubemapFace side, SgtVector3D cornerBL, SgtVector3D cornerBR, SgtVector3D cornerTL, SgtVector3D cornerTR)
	{
		return null;
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xECE01C", Offset = "0xECE01C", VA = "0xECE01C")]
	public SgtTerrain()
	{
	}
}
[Token(Token = "0x20000B0")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8854", Offset = "0x8C8854")]
public class SgtTerrainCubeMaterials : SgtTerrainModifier
{
	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material NegativeX;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material NegativeY;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material NegativeZ;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material PositiveX;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material PositiveY;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material PositiveZ;

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xECF05C", Offset = "0xECF05C", VA = "0xECF05C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xECF230", Offset = "0xECF230", VA = "0xECF230", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xECF350", Offset = "0xECF350", VA = "0xECF350")]
	private void CalculateMaterial(SgtTerrainFace face, ref Material material)
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xECF3DC", Offset = "0xECF3DC", VA = "0xECF3DC")]
	public SgtTerrainCubeMaterials()
	{
	}
}
[Token(Token = "0x20000B1")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C88A0", Offset = "0x8C88A0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C88A0", Offset = "0x8C88A0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C88A0", Offset = "0x8C88A0")]
public class SgtTerrainFace : MonoBehaviour
{
	[Token(Token = "0x20004EC")]
	public enum StateType
	{
		[Token(Token = "0x4001EAA")]
		Invalid,
		[Token(Token = "0x4001EAB")]
		Building,
		[Token(Token = "0x4001EAC")]
		Visible
	}

	[NonSerialized]
	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StateType State;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SgtTerrain Terrain;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SgtTerrainFace Parent;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CubemapFace Side;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int Depth;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SgtBoundsD Bounds;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool Split;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public SgtTerrainFace ChildBL;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SgtTerrainFace ChildBR;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SgtTerrainFace ChildTL;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public SgtTerrainFace ChildTR;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SgtVector3D CornerBL;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public SgtVector3D CornerBR;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SgtVector3D CornerTL;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public SgtVector3D CornerTR;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public SgtVector2D CoordBL;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public SgtVector2D CoordBR;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public SgtVector2D CoordTL;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public SgtVector2D CoordTR;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public SgtTerrainNeighbour NeighbourL;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public SgtTerrainNeighbour NeighbourR;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public SgtTerrainNeighbour NeighbourB;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public SgtTerrainNeighbour NeighbourT;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public SgtVector3D[] positions;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Vector3[] vertices;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Vector3[] normals1;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Vector3[] normals2;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Vector4[] tangents1;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Vector4[] tangents2;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Vector2[] coords1;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Vector2[] coords2;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Color[] colors;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Mesh mesh;

	[NonSerialized]
	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private MeshFilter cachedMeshFilter;

	[NonSerialized]
	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private MeshRenderer cachedMeshRenderer;

	[NonSerialized]
	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private MeshCollider cachedMeshCollider;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Material[] materials1;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Material[] materials2;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<int> buildingIndices;

	[Token(Token = "0x17000056")]
	private bool CanSplit
	{
		[Token(Token = "0x600061A")]
		[Address(RVA = "0xED1AAC", Offset = "0xED1AAC", VA = "0xED1AAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000057")]
	private bool CanUnsplit
	{
		[Token(Token = "0x600061B")]
		[Address(RVA = "0xED2208", Offset = "0xED2208", VA = "0xED2208")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xECF3EC", Offset = "0xECF3EC", VA = "0xECF3EC")]
	public SgtTerrainFace GetChild(int index)
	{
		return null;
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xECF424", Offset = "0xECF424", VA = "0xECF424")]
	public void SetNeighbour(int index, SgtTerrainFace face)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xECC6BC", Offset = "0xECC6BC", VA = "0xECC6BC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E81AC", Offset = "0x8E81AC")]
	public void UpdateRenderers()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xECF45C", Offset = "0xECF45C", VA = "0xECF45C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E81E4", Offset = "0x8E81E4")]
	public void UpdateRenderer()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xECC954", Offset = "0xECC954", VA = "0xECC954")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E821C", Offset = "0x8E821C")]
	public void UpdateColliders()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xECF774", Offset = "0xECF774", VA = "0xECF774")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E8254", Offset = "0x8E8254")]
	public void UpdateCollider()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xECFA00", Offset = "0xECFA00", VA = "0xECFA00")]
	public bool WriteVertex(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xECFA44", Offset = "0xECFA44", VA = "0xECFA44")]
	private void ValidateVertices()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xECFB84", Offset = "0xECFB84", VA = "0xECFB84")]
	public void BuildData()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xED0A64", Offset = "0xED0A64", VA = "0xED0A64")]
	private SgtVector3D GetPosition(SgtVector3D origin, SgtVector3D sideDelta, SgtVector3D edgeDelta)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xED0B68", Offset = "0xED0B68", VA = "0xED0B68")]
	private void CopyVertiesToChildren()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xED0D2C", Offset = "0xED0D2C", VA = "0xED0D2C")]
	private void CopyVertiesToChildren(SgtTerrainFace child, int verts, int minX, int maxX, int minY, int maxY, int offX, int offY)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xED0F84", Offset = "0xED0F84", VA = "0xED0F84")]
	public void BuildVertices()
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xED13B4", Offset = "0xED13B4", VA = "0xED13B4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E828C", Offset = "0x8E828C")]
	public void BuildIndices()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xECDFAC", Offset = "0xECDFAC", VA = "0xECDFAC")]
	public static SgtTerrainFace Create(string name, int layer, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xED17E0", Offset = "0xED17E0", VA = "0xED17E0")]
	public static SgtTerrainFace Pool(SgtTerrainFace face)
	{
		return null;
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xECDEE8", Offset = "0xECDEE8", VA = "0xECDEE8")]
	public static SgtTerrainFace MarkForDestruction(SgtTerrainFace face)
	{
		return null;
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xECC31C", Offset = "0xECC31C", VA = "0xECC31C")]
	public void UpdateStates()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xED265C", Offset = "0xED265C", VA = "0xED265C", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xED2704", Offset = "0xED2704", VA = "0xED2704")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E82C4", Offset = "0x8E82C4")]
	public void Test()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xED197C", Offset = "0xED197C", VA = "0xED197C")]
	private double GetDistance()
	{
		return default(double);
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xECC05C", Offset = "0xECC05C", VA = "0xECC05C")]
	public void UpdateInvalid()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xED29FC", Offset = "0xED29FC", VA = "0xED29FC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xED1B50", Offset = "0xED1B50", VA = "0xED1B50")]
	private void SplitNow()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xED2CFC", Offset = "0xED2CFC", VA = "0xED2CFC")]
	private void LinkNeighbours(SgtTerrainFace childA, SgtTerrainFace childB, ref SgtTerrainNeighbour childNeighbourA, ref SgtTerrainNeighbour childNeighbourB, ref SgtTerrainNeighbour neighbour)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xED2F2C", Offset = "0xED2F2C", VA = "0xED2F2C")]
	private void UpdateNeighbourData(SgtTerrainFace face, ref SgtTerrainNeighbour neighbour)
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xED1904", Offset = "0xED1904", VA = "0xED1904")]
	private void UpdateInvalidChildren()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xED23D0", Offset = "0xED23D0", VA = "0xED23D0")]
	private void UnsplitNow()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xED3018", Offset = "0xED3018", VA = "0xED3018")]
	private void UnlinkNeighbours(ref SgtTerrainNeighbour childNeighbour)
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xED2A64", Offset = "0xED2A64", VA = "0xED2A64")]
	private SgtTerrainFace Create(string childName, SgtVector3D cornerBL, SgtVector3D cornerBR, SgtVector3D cornerTL, SgtVector3D cornerTR, SgtVector2D coordBL, SgtVector2D coordBR, SgtVector2D coordTL, SgtVector2D coordTR)
	{
		return null;
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xED1240", Offset = "0xED1240", VA = "0xED1240")]
	private Mesh GetMesh()
	{
		return null;
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xED31B0", Offset = "0xED31B0", VA = "0xED31B0")]
	public SgtTerrainFace()
	{
	}
}
[Token(Token = "0x20000B2")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8960", Offset = "0x8C8960")]
public class SgtTerrainHeightmap : SgtTerrainModifier
{
	[Token(Token = "0x20004ED")]
	public enum EncodingType
	{
		[Token(Token = "0x4001EAE")]
		Alpha,
		[Token(Token = "0x4001EAF")]
		RedGreen
	}

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7CC8", Offset = "0x8D7CC8")]
	public Texture2D Heightmap;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7D00", Offset = "0x8D7D00")]
	public EncodingType Encoding;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7D38", Offset = "0x8D7D38")]
	public double DisplacementMin;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7D70", Offset = "0x8D7D70")]
	public double DisplacementMax;

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xED3264", Offset = "0xED3264", VA = "0xED3264", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xED3438", Offset = "0xED3438", VA = "0xED3438", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xED3558", Offset = "0xED3558", VA = "0xED3558")]
	private void CalculateHeight(SgtVector3D localPosition, ref double height)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xED36AC", Offset = "0xED36AC", VA = "0xED36AC")]
	private Color SampleBilinear(Vector2 uv)
	{
		return default(Color);
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xED36F4", Offset = "0xED36F4", VA = "0xED36F4")]
	public SgtTerrainHeightmap()
	{
	}
}
[Token(Token = "0x20000B3")]
public class SgtTerrainLevel
{
	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int MaxDelta;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[][] IndicesL;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[][] IndicesR;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int[][] IndicesB;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int[][] IndicesT;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] Indices;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int[][][] Offsets;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SgtTerrainLevel[] Levels;

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xED370C", Offset = "0xED370C", VA = "0xED370C")]
	static SgtTerrainLevel()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xED17C4", Offset = "0xED17C4", VA = "0xED17C4")]
	public int GetIndex(int delta)
	{
		return default(int);
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xED546C", Offset = "0xED546C", VA = "0xED546C")]
	public SgtTerrainLevel()
	{
	}
}
[Token(Token = "0x20000B4")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C89AC", Offset = "0x8C89AC")]
public class SgtTerrainMaterial : SgtTerrainModifier
{
	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7DA8", Offset = "0x8D7DA8")]
	public Material Material;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7DE0", Offset = "0x8D7DE0")]
	public bool AllSides;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7E18", Offset = "0x8D7E18")]
	public CubemapFace RequiredSide;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7E50", Offset = "0x8D7E50")]
	public int LevelMin;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7E88", Offset = "0x8D7E88")]
	public int LevelMax;

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xED5474", Offset = "0xED5474", VA = "0xED5474", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xED5594", Offset = "0xED5594", VA = "0xED5594", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xED56B4", Offset = "0xED56B4", VA = "0xED56B4")]
	private void CalculateMaterial(SgtTerrainFace face, ref Material material)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xED5728", Offset = "0xED5728", VA = "0xED5728")]
	public SgtTerrainMaterial()
	{
	}
}
[Token(Token = "0x20000B5")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C89F8", Offset = "0x8C89F8")]
public abstract class SgtTerrainModifier : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected SgtTerrain terrain;

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xED3384", Offset = "0xED3384", VA = "0xED3384")]
	public void Rebuild()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xECF17C", Offset = "0xECF17C", VA = "0xECF17C")]
	public void UpdateRenderers()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xED5744", Offset = "0xED5744", VA = "0xED5744")]
	public void UpdateColliders()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xECF3E4", Offset = "0xECF3E4", VA = "0xECF3E4")]
	protected SgtTerrainModifier()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B6")]
public struct SgtTerrainNeighbour
{
	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int A;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int B;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int C;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int D;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int I;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int O;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Z;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SgtTerrainFace Face;

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x9A2E70", Offset = "0x9A2E70", VA = "0x9A2E70")]
	public void Set(SgtTerrainFace newFace, int newI, int newA, int newB, int newO, int newC, int newD, int newZ)
	{
	}
}
[Token(Token = "0x20000B7")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8A6C", Offset = "0x8C8A6C")]
public class SgtTerrainObject : MonoBehaviour
{
	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action OnSpawn;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action OnDespawn;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7EC0", Offset = "0x8D7EC0")]
	public bool Pool;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7EF8", Offset = "0x8D7EF8")]
	public float ScaleMin;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7F30", Offset = "0x8D7F30")]
	public float ScaleMax;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7F68", Offset = "0x8D7F68")]
	public float AlignToNormal;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7FA0", Offset = "0x8D7FA0")]
	public SgtTerrainObject Prefab;

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xED57F8", Offset = "0xED57F8", VA = "0xED57F8")]
	public void Spawn(SgtTerrain terrain, SgtTerrainFace face, SgtVector3D localPoint)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xED5DCC", Offset = "0xED5DCC", VA = "0xED5DCC")]
	public void Despawn()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xED5E84", Offset = "0xED5E84", VA = "0xED5E84")]
	public SgtTerrainObject()
	{
	}
}
[Token(Token = "0x20000B8")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8AB8", Offset = "0x8C8AB8")]
public class SgtTerrainPlane : MonoBehaviour
{
	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7FD8", Offset = "0x8D7FD8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D7FD8", Offset = "0x8D7FD8")]
	public int Detail;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D802C", Offset = "0x8D802C")]
	public float Size;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Mesh mesh;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private MeshCollider meshCollider;

	[NonSerialized]
	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] positions;

	[NonSerialized]
	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int[] indices;

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xED5E9C", Offset = "0xED5E9C", VA = "0xED5E9C", Slot = "4")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xED6A88", Offset = "0xED6A88", VA = "0xED6A88", Slot = "5")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xED613C", Offset = "0xED613C", VA = "0xED613C")]
	private void Build(SgtTerrain terrain, Vector3 bestPoint)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xED6920", Offset = "0xED6920", VA = "0xED6920")]
	private void Pool()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xED6A8C", Offset = "0xED6A8C", VA = "0xED6A8C")]
	public SgtTerrainPlane()
	{
	}
}
[Token(Token = "0x20000B9")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8B04", Offset = "0x8C8B04")]
public class SgtTerrainRidgedSimplex : SgtTerrainModifier
{
	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8084", Offset = "0x8D8084")]
	public double Frequency;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D80BC", Offset = "0x8D80BC")]
	public double Amplitude;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D80F4", Offset = "0x8D80F4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D80F4", Offset = "0x8D80F4")]
	public int Octaves;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8148", Offset = "0x8D8148")]
	public bool Invert;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8180", Offset = "0x8D8180")]
	[SgtSeed]
	public int Seed;

	[NonSerialized]
	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SgtSimplex[] generators;

	[NonSerialized]
	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private double scale;

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xED6AA0", Offset = "0xED6AA0", VA = "0xED6AA0")]
	public void UpdateNoise()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xED6C78", Offset = "0xED6C78", VA = "0xED6C78", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xED6DA0", Offset = "0xED6DA0", VA = "0xED6DA0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xED6EC0", Offset = "0xED6EC0", VA = "0xED6EC0")]
	private void CalculateHeight(SgtVector3D localPosition, ref double height)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xED7054", Offset = "0xED7054", VA = "0xED7054")]
	public SgtTerrainRidgedSimplex()
	{
	}
}
[Token(Token = "0x20000BA")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8B50", Offset = "0x8C8B50")]
public class SgtTerrainSimplex : SgtTerrainModifier
{
	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D81CC", Offset = "0x8D81CC")]
	public double Frequency;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8204", Offset = "0x8D8204")]
	public double Amplitude;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D823C", Offset = "0x8D823C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D823C", Offset = "0x8D823C")]
	public int Octaves;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8290", Offset = "0x8D8290")]
	[SgtSeed]
	public int Seed;

	[NonSerialized]
	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SgtSimplex[] generators;

	[NonSerialized]
	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private double scale;

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xED7078", Offset = "0xED7078", VA = "0xED7078")]
	public void UpdateNoise()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xED7250", Offset = "0xED7250", VA = "0xED7250", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xED7378", Offset = "0xED7378", VA = "0xED7378", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xED7498", Offset = "0xED7498", VA = "0xED7498")]
	private void CalculateHeight(SgtVector3D localPosition, ref double height)
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xED75F8", Offset = "0xED75F8", VA = "0xED75F8")]
	public SgtTerrainSimplex()
	{
	}
}
[Token(Token = "0x20000BB")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8B9C", Offset = "0x8C8B9C")]
public class SgtTerrainSpawner : SgtTerrainModifier
{
	[Serializable]
	[Token(Token = "0x20004EE")]
	public class Surface
	{
		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SgtTerrainFace Face;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SgtRectL Rect;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<SgtTerrainObject> Clones;

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0xED7B1C", Offset = "0xED7B1C", VA = "0xED7B1C")]
		public void Clear()
		{
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0xED7EE4", Offset = "0xED7EE4", VA = "0xED7EE4")]
		public Surface()
		{
		}
	}

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D82DC", Offset = "0x8D82DC")]
	public int Depth;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8314", Offset = "0x8D8314")]
	[SgtSeed]
	public int Seed;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8360", Offset = "0x8D8360")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D8360", Offset = "0x8D8360")]
	public float SpawnProbability;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D83B4", Offset = "0x8D83B4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D83B4", Offset = "0x8D83B4")]
	public int SpawnCountMax;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D840C", Offset = "0x8D840C")]
	public float HeightMin;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8444", Offset = "0x8D8444")]
	public float HeightMax;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D847C", Offset = "0x8D847C")]
	public List<SgtTerrainObject> Prefabs;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<Surface> surfaces;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private List<SgtTerrainObject> terrainObjects;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SgtTerrainObject targetPrefab;

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xED761C", Offset = "0xED761C", VA = "0xED761C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xED7880", Offset = "0xED7880", VA = "0xED7880", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xED7A5C", Offset = "0xED7A5C", VA = "0xED7A5C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E82FC", Offset = "0x8E82FC")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xED7C24", Offset = "0xED7C24", VA = "0xED7C24")]
	private void SpawnFace(SgtTerrainFace face)
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xED821C", Offset = "0xED821C", VA = "0xED821C")]
	private void DespawnFace(SgtTerrainFace face)
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xED7DEC", Offset = "0xED7DEC", VA = "0xED7DEC")]
	private Surface FindSurface(SgtTerrainFace face)
	{
		return null;
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xED7EEC", Offset = "0xED7EEC", VA = "0xED7EEC")]
	private void AddObject(Surface surface, SgtTerrainFace face)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xED8468", Offset = "0xED8468", VA = "0xED8468")]
	private static SgtTerrainObject Despawn(SgtTerrainObject prefab)
	{
		return null;
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xED833C", Offset = "0xED833C", VA = "0xED833C")]
	private static SgtTerrainObject Spawn(SgtTerrainObject prefab)
	{
		return null;
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xED84E0", Offset = "0xED84E0", VA = "0xED84E0")]
	private static bool ObjectMatch(SgtTerrainObject instance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xED85AC", Offset = "0xED85AC", VA = "0xED85AC")]
	public SgtTerrainSpawner()
	{
	}
}
[Token(Token = "0x20000BC")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8BE8", Offset = "0x8C8BE8")]
public class SgtThruster : MonoBehaviour
{
	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D84D4", Offset = "0x8D84D4")]
	public float Throttle;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D850C", Offset = "0x8D850C")]
	public Rigidbody Rigidbody;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8544", Offset = "0x8D8544")]
	public SgtForceType ForceType;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D857C", Offset = "0x8D857C")]
	public ForceMode ForceMode;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D85B4", Offset = "0x8D85B4")]
	public float ForceMagnitude;

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xED85C4", Offset = "0xED85C4", VA = "0xED85C4")]
	public static SgtThruster CreateThruster(int layer = 0, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xED86DC", Offset = "0xED86DC", VA = "0xED86DC")]
	public static SgtThruster CreateThruster(int layer, Transform parent, Vector3 localPosition, Quaternion localRotation, Vector3 localScale)
	{
		return null;
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xED882C", Offset = "0xED882C", VA = "0xED882C", Slot = "4")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xED8A50", Offset = "0xED8A50", VA = "0xED8A50")]
	public SgtThruster()
	{
	}
}
[Token(Token = "0x20000BD")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8C34", Offset = "0x8C8C34")]
public class SgtThrusterRoll : MonoBehaviour
{
	[Token(Token = "0x20004EF")]
	public class CameraState : SgtCameraState
	{
		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Quaternion LocalRotation;

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0xED930C", Offset = "0xED930C", VA = "0xED930C")]
		public CameraState()
		{
		}
	}

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D85EC", Offset = "0x8D85EC")]
	public Vector3 Rotation;

	[NonSerialized]
	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<CameraState> cameraStates;

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xED8A6C", Offset = "0xED8A6C", VA = "0xED8A6C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xED8C18", Offset = "0xED8C18", VA = "0xED8C18", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xED8DC4", Offset = "0xED8DC4", VA = "0xED8DC4")]
	private void CameraPreCull(Camera camera)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xED91D8", Offset = "0xED91D8", VA = "0xED91D8")]
	private void CameraPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xED9118", Offset = "0xED9118", VA = "0xED9118")]
	public void Save(Camera camera)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xED91DC", Offset = "0xED91DC", VA = "0xED91DC")]
	private void Restore(Camera camera)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xED9058", Offset = "0xED9058", VA = "0xED9058")]
	public void Revert()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xED92A8", Offset = "0xED92A8", VA = "0xED92A8")]
	public SgtThrusterRoll()
	{
	}
}
[Token(Token = "0x20000BE")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8C80", Offset = "0x8C8C80")]
public class SgtThrusterScale : MonoBehaviour
{
	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8624", Offset = "0x8D8624")]
	public SgtThruster Thruster;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D865C", Offset = "0x8D865C")]
	public float Dampening;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8694", Offset = "0x8D8694")]
	public Vector3 BaseScale;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D86CC", Offset = "0x8D86CC")]
	public Vector3 ThrottleScale;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8704", Offset = "0x8D8704")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D8704", Offset = "0x8D8704")]
	public float Flicker;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8758", Offset = "0x8D8758")]
	public float FlickerOffset;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8790", Offset = "0x8D8790")]
	public float FlickerSpeed;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float throttle;

	[NonSerialized]
	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] points;

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xED9314", Offset = "0xED9314", VA = "0xED9314", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xED93A4", Offset = "0xED93A4", VA = "0xED93A4", Slot = "5")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xED97C8", Offset = "0xED97C8", VA = "0xED97C8")]
	public SgtThrusterScale()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BF")]
public struct SgtVector2D
{
	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public double x;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public double y;

	[Token(Token = "0x17000058")]
	public double sqrMagnitude
	{
		[Token(Token = "0x600066A")]
		[Address(RVA = "0x9A2EA4", Offset = "0x9A2EA4", VA = "0x9A2EA4")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x17000059")]
	public double magnitude
	{
		[Token(Token = "0x600066B")]
		[Address(RVA = "0x9A2EB8", Offset = "0x9A2EB8", VA = "0x9A2EB8")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x1700005A")]
	public SgtVector2D normalized
	{
		[Token(Token = "0x600066C")]
		[Address(RVA = "0x9A2EC0", Offset = "0x9A2EC0", VA = "0x9A2EC0")]
		get
		{
			return default(SgtVector2D);
		}
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x9A2E8C", Offset = "0x9A2E8C", VA = "0x9A2E8C")]
	public SgtVector2D(double newX, double newY)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x9A2E94", Offset = "0x9A2E94", VA = "0x9A2E94")]
	public SgtVector2D(Vector2 v)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xED09E8", Offset = "0xED09E8", VA = "0xED09E8")]
	public static SgtVector2D operator -(SgtVector2D a, SgtVector2D b)
	{
		return default(SgtVector2D);
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xED0A24", Offset = "0xED0A24", VA = "0xED0A24")]
	public static SgtVector2D operator +(SgtVector2D a, SgtVector2D b)
	{
		return default(SgtVector2D);
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xED99D0", Offset = "0xED99D0", VA = "0xED99D0")]
	public static SgtVector2D operator /(SgtVector2D a, long b)
	{
		return default(SgtVector2D);
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xED99C4", Offset = "0xED99C4", VA = "0xED99C4")]
	public static SgtVector2D operator /(SgtVector2D a, double b)
	{
		return default(SgtVector2D);
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xED0A14", Offset = "0xED0A14", VA = "0xED0A14")]
	public static SgtVector2D operator *(SgtVector2D a, long b)
	{
		return default(SgtVector2D);
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xED09F4", Offset = "0xED09F4", VA = "0xED09F4")]
	public static SgtVector2D operator *(SgtVector2D a, double b)
	{
		return default(SgtVector2D);
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xED99E0", Offset = "0xED99E0", VA = "0xED99E0")]
	public static SgtVector2D operator *(long a, SgtVector2D b)
	{
		return default(SgtVector2D);
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xED0A30", Offset = "0xED0A30", VA = "0xED0A30")]
	public static explicit operator Vector2(SgtVector2D a)
	{
		return default(Vector2);
	}
}
[Serializable]
[Token(Token = "0x20000C0")]
public struct SgtVector3D
{
	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public double x;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public double y;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public double z;

	[Token(Token = "0x1700005B")]
	public double sqrMagnitude
	{
		[Token(Token = "0x6000677")]
		[Address(RVA = "0x9A2EEC", Offset = "0x9A2EEC", VA = "0x9A2EEC")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x1700005C")]
	public double magnitude
	{
		[Token(Token = "0x6000678")]
		[Address(RVA = "0x9A2F0C", Offset = "0x9A2F0C", VA = "0x9A2F0C")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x1700005D")]
	public SgtVector3D normalized
	{
		[Token(Token = "0x6000679")]
		[Address(RVA = "0x9A2F14", Offset = "0x9A2F14", VA = "0x9A2F14")]
		get
		{
			return default(SgtVector3D);
		}
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x9A2EC8", Offset = "0x9A2EC8", VA = "0x9A2EC8")]
	public SgtVector3D(double newX, double newY, double newZ)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x9A2ED4", Offset = "0x9A2ED4", VA = "0x9A2ED4")]
	public SgtVector3D(Vector3 v)
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xED99F0", Offset = "0xED99F0", VA = "0xED99F0")]
	public static double Dot(SgtVector3D a, SgtVector3D b)
	{
		return default(double);
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xECB7A0", Offset = "0xECB7A0", VA = "0xECB7A0")]
	public static SgtVector3D Cross(SgtVector3D a, SgtVector3D b)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xED9A08", Offset = "0xED9A08", VA = "0xED9A08")]
	public static bool Overlap(SgtVector3D a, SgtVector3D b, SgtVector3D c, SgtVector3D d, double eps = 0.001)
	{
		return default(bool);
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xED9B7C", Offset = "0xED9B7C", VA = "0xED9B7C")]
	public static bool Overlap(SgtVector3D a, SgtVector3D b, SgtVector3D p, float eps = 0.001f)
	{
		return default(bool);
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xED9C44", Offset = "0xED9C44", VA = "0xED9C44")]
	public static double SquareDistance(SgtVector3D a, SgtVector3D b)
	{
		return default(double);
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xED0B58", Offset = "0xED0B58", VA = "0xED0B58")]
	public static SgtVector3D operator -(SgtVector3D a)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xECB790", Offset = "0xECB790", VA = "0xECB790")]
	public static SgtVector3D operator -(SgtVector3D a, SgtVector3D b)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xECB780", Offset = "0xECB780", VA = "0xECB780")]
	public static SgtVector3D operator +(SgtVector3D a, SgtVector3D b)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xED9C68", Offset = "0xED9C68", VA = "0xED9C68")]
	public static SgtVector3D operator /(SgtVector3D a, long b)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xED7044", Offset = "0xED7044", VA = "0xED7044")]
	public static SgtVector3D operator /(SgtVector3D a, double b)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xED0A00", Offset = "0xED0A00", VA = "0xED0A00")]
	public static SgtVector3D operator *(SgtVector3D a, long b)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xECAF30", Offset = "0xECAF30", VA = "0xECAF30")]
	public static SgtVector3D operator *(SgtVector3D a, double b)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xED9C7C", Offset = "0xED9C7C", VA = "0xED9C7C")]
	public static SgtVector3D operator *(long a, SgtVector3D b)
	{
		return default(SgtVector3D);
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xECB650", Offset = "0xECB650", VA = "0xECB650")]
	public static explicit operator Vector3(SgtVector3D a)
	{
		return default(Vector3);
	}
}
[Serializable]
[Token(Token = "0x20000C1")]
public struct SgtVector3L
{
	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public long x;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public long y;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public long z;

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x9A2F1C", Offset = "0x9A2F1C", VA = "0x9A2F1C")]
	public SgtVector3L(long newX, long newY, long newZ)
	{
	}
}
[Token(Token = "0x20000C2")]
public class SU_Asteroid : MonoBehaviour
{
	[Token(Token = "0x20004F0")]
	public enum PolyCount
	{
		[Token(Token = "0x4001EB5")]
		HIGH,
		[Token(Token = "0x4001EB6")]
		MEDIUM,
		[Token(Token = "0x4001EB7")]
		LOW
	}

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PolyCount polyCount;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PolyCount polyCountCollider;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform meshLowPoly;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform meshMediumPoly;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform meshHighPoly;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float rotationSpeed;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 rotationalAxis;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float driftSpeed;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 driftAxis;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _cacheTransform;

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xD88028", Offset = "0xD88028", VA = "0xD88028")]
	private void Start()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xD88064", Offset = "0xD88064", VA = "0xD88064")]
	private void Update()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xD8805C", Offset = "0xD8805C", VA = "0xD8805C")]
	public void SetPolyCount(PolyCount _newPolyCount)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xD88210", Offset = "0xD88210", VA = "0xD88210")]
	public void SetPolyCount(PolyCount _newPolyCount, bool _collider)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xD8848C", Offset = "0xD8848C", VA = "0xD8848C")]
	public SU_Asteroid()
	{
	}
}
[Token(Token = "0x20000C3")]
public class SU_AsteroidField : MonoBehaviour
{
	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SU_Asteroid.PolyCount polyCount;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SU_Asteroid.PolyCount polyCountCollider;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] prefabAsteroids;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material[] materialVeryCommon;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material[] materialCommon;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material[] materialRare;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material[] materialVeryRare;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float range;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int maxAsteroids;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool respawnDestroyedAsteroids;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool respawnIfOutOfRange;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float distanceSpawn;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minAsteroidScale;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxAsteroidScale;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float scaleMultiplier;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isRigidbody;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float minAsteroidRotationSpeed;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float maxAsteroidRotationSpeed;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float rotationSpeedMultiplier;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float minAsteroidDriftSpeed;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float maxAsteroidDriftSpeed;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float driftSpeedMultiplier;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float mass;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float minAsteroidAngularVelocity;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float maxAsteroidAngularVelocity;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float angularVelocityMultiplier;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float minAsteroidVelocity;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float maxAsteroidVelocity;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float velocityMultiplier;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool fadeAsteroids;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float distanceFade;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float _distanceToSpawn;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _distanceToFade;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform _cacheTransform;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<Transform> _asteroids;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<Material> _asteroidsMaterials;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<bool> _asteroidsFading;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Hashtable _materialsTransparent;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private SortedList<int, string> _materialList;

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xD8851C", Offset = "0xD8851C", VA = "0xD8851C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xD89708", Offset = "0xD89708", VA = "0xD89708")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xD897F0", Offset = "0xD897F0", VA = "0xD897F0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xD89848", Offset = "0xD89848", VA = "0xD89848")]
	private void Update()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xD88B88", Offset = "0xD88B88", VA = "0xD88B88")]
	private void SpawnAsteroids(bool atSpawnDistance)
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xD887B8", Offset = "0xD887B8", VA = "0xD887B8")]
	private void CreateTransparentMaterial(Material[] _sourceMaterials, Hashtable _ht)
	{
	}

	[Token(Token = "0x6000694")]
	private static T WeightedRandom<T>(SortedList<int, T> _list)
	{
		return (T)null;
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xD89FD4", Offset = "0xD89FD4", VA = "0xD89FD4")]
	public SU_AsteroidField()
	{
	}
}
[Token(Token = "0x20000C4")]
public class SU_Planet : MonoBehaviour
{
	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 planetRotation;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _cacheTransform;

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xD8B138", Offset = "0xD8B138", VA = "0xD8B138")]
	private void Start()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xD8B160", Offset = "0xD8B160", VA = "0xD8B160")]
	private void Update()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xD8B278", Offset = "0xD8B278", VA = "0xD8B278")]
	public SU_Planet()
	{
	}
}
[Token(Token = "0x20000C5")]
public class Bluemorpho : MonoBehaviour
{
	[Token(Token = "0x20004F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCAA4", Offset = "0x8CCAA4")]
	private sealed class <idle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bluemorpho <>4__this;

		[Token(Token = "0x17000236")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022CC")]
			[Address(RVA = "0xF4945C", Offset = "0xF4945C", VA = "0xF4945C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000237")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022CE")]
			[Address(RVA = "0xF494CC", Offset = "0xF494CC", VA = "0xF494CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0xF490F8", Offset = "0xF490F8", VA = "0xF490F8")]
		[DebuggerHidden]
		public <idle>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0xF492D4", Offset = "0xF492D4", VA = "0xF492D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0xF492D8", Offset = "0xF492D8", VA = "0xF492D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0xF49464", Offset = "0xF49464", VA = "0xF49464", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCAB4", Offset = "0x8CCAB4")]
	private sealed class <fly>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bluemorpho <>4__this;

		[Token(Token = "0x17000238")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022D2")]
			[Address(RVA = "0xF4925C", Offset = "0xF4925C", VA = "0xF4925C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000239")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022D4")]
			[Address(RVA = "0xF492CC", Offset = "0xF492CC", VA = "0xF492CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0xF49124", Offset = "0xF49124", VA = "0xF49124")]
		[DebuggerHidden]
		public <fly>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0xF49158", Offset = "0xF49158", VA = "0xF49158", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0xF4915C", Offset = "0xF4915C", VA = "0xF4915C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0xF49264", Offset = "0xF49264", VA = "0xF49264", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator bluemorpho;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IEnumerator coroutine;

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xF48ADC", Offset = "0xF48ADC", VA = "0xF48ADC")]
	private void Start()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xF48B34", Offset = "0xF48B34", VA = "0xF48B34")]
	private void Update()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xF49010", Offset = "0xF49010", VA = "0xF49010")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8334", Offset = "0x8E8334")]
	private IEnumerator idle()
	{
		return null;
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xF49084", Offset = "0xF49084", VA = "0xF49084")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8398", Offset = "0x8E8398")]
	private IEnumerator fly()
	{
		return null;
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xF49150", Offset = "0xF49150", VA = "0xF49150")]
	public Bluemorpho()
	{
	}
}
[Token(Token = "0x20000C6")]
public class CameraLookAt : MonoBehaviour
{
	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xCE0C30", Offset = "0xCE0C30", VA = "0xCE0C30")]
	private void Start()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xCE0C34", Offset = "0xCE0C34", VA = "0xCE0C34")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xCE0C74", Offset = "0xCE0C74", VA = "0xCE0C74")]
	public CameraLookAt()
	{
	}
}
[Token(Token = "0x20000C7")]
public class CUI_CameraRotationOnButtonHeld : MonoBehaviour
{
	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float Sensitivity;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 oldMousePos;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool move;

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xCDF25C", Offset = "0xCDF25C", VA = "0xCDF25C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xCDF288", Offset = "0xCDF288", VA = "0xCDF288")]
	public CUI_CameraRotationOnButtonHeld()
	{
	}
}
[Token(Token = "0x20000C8")]
public class CUI_MoveAlong : MonoBehaviour
{
	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xCDF2A0", Offset = "0xCDF2A0", VA = "0xCDF2A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xCDF2A4", Offset = "0xCDF2A4", VA = "0xCDF2A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xCDF644", Offset = "0xCDF644", VA = "0xCDF644")]
	public CUI_MoveAlong()
	{
	}
}
[Token(Token = "0x20000C9")]
public class CUI_MoveHeartbeat : MonoBehaviour
{
	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool wrapAroundParent;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform rectie;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform parentRectie;

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xCDF64C", Offset = "0xCDF64C", VA = "0xCDF64C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xCDF70C", Offset = "0xCDF70C", VA = "0xCDF70C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xCDF8B0", Offset = "0xCDF8B0", VA = "0xCDF8B0")]
	public CUI_MoveHeartbeat()
	{
	}
}
[Token(Token = "0x20000CA")]
public class CUI_rotation_anim : MonoBehaviour
{
	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Rotation;

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xCDF9C4", Offset = "0xCDF9C4", VA = "0xCDF9C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xCDF9C8", Offset = "0xCDF9C8", VA = "0xCDF9C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xCDFC20", Offset = "0xCDFC20", VA = "0xCDFC20")]
	public CUI_rotation_anim()
	{
	}
}
[Token(Token = "0x20000CB")]
public class CUI_ShowParentCoordinates : MonoBehaviour
{
	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xCDF8C0", Offset = "0xCDF8C0", VA = "0xCDF8C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xCDF9B8", Offset = "0xCDF9B8", VA = "0xCDF9B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xCDF9BC", Offset = "0xCDF9BC", VA = "0xCDF9BC")]
	public CUI_ShowParentCoordinates()
	{
	}
}
[Token(Token = "0x20000CC")]
public class CUI_touchpad : MonoBehaviour
{
	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform container;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform dot;

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xCDFC28", Offset = "0xCDFC28", VA = "0xCDFC28")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xCDFC9C", Offset = "0xCDFC9C", VA = "0xCDFC9C")]
	private void MoveDotOnTouchpadAxisChanged(object o, ViveInputArgs args)
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xCDFD98", Offset = "0xCDFD98", VA = "0xCDFD98")]
	public CUI_touchpad()
	{
	}
}
[Token(Token = "0x20000CD")]
[ExecuteInEditMode]
public class CurvedUIInputModule : StandaloneInputModule
{
	[Token(Token = "0x20004F3")]
	public enum CUIControlMethod
	{
		[Token(Token = "0x4001EBF")]
		MOUSE = 0,
		[Token(Token = "0x4001EC0")]
		GAZE = 1,
		[Token(Token = "0x4001EC1")]
		WORLD_MOUSE = 2,
		[Token(Token = "0x4001EC2")]
		CUSTOM_RAY = 3,
		[Token(Token = "0x4001EC3")]
		STEAMVR = 4,
		[Token(Token = "0x4001EC4")]
		OCULUSVR = 5,
		[Token(Token = "0x4001EC5")]
		GOOGLEVR = 7
	}

	[Token(Token = "0x20004F4")]
	public enum Hand
	{
		[Token(Token = "0x4001EC7")]
		Both,
		[Token(Token = "0x4001EC8")]
		Right,
		[Token(Token = "0x4001EC9")]
		Left
	}

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	private CUIControlMethod controlMethod;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private string submitButtonName;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private bool gazeUseTimedClick;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[SerializeField]
	private float gazeClickTimer;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	private float gazeClickTimerDelay;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private Image gazeTimedClickProgressImage;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	private float worldSpaceMouseSensitivity;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[SerializeField]
	private Hand usedHand;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool disableOtherInputModulesOnStart;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CurvedUIInputModule instance;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GameObject currentDragging;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject currentPointedAt;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float gazeTimerProgress;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Ray customControllerRay;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float dragThreshold;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool pressedDown;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool pressedLastFrame;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 lastMouseOnScreenPos;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector2 worldSpaceMouseInCanvasSpace;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector2 lastWorldSpaceMouseOnCanvas;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector2 worldSpaceMouseOnCanvasDelta;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private Transform TouchControllerTransform;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private OVRInput.Button InteractionButton;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[SerializeField]
	private OVRCameraRig oculusCameraRig;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private OVRInput.Controller activeCont;

	[Token(Token = "0x1700005E")]
	public static CurvedUIInputModule Instance
	{
		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xCE8040", Offset = "0xCE8040", VA = "0xCE8040")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xCFADF4", Offset = "0xCFADF4", VA = "0xCFADF4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public static Ray CustomControllerRay
	{
		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xCEDC44", Offset = "0xCEDC44", VA = "0xCEDC44")]
		get
		{
			return default(Ray);
		}
		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xCE6508", Offset = "0xCE6508", VA = "0xCE6508")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8EE1C8", Offset = "0x8EE1C8")]
	public static bool CustromControllerButtonDown
	{
		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xCFC68C", Offset = "0xCFC68C", VA = "0xCFC68C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xCFC6FC", Offset = "0xCFC6FC", VA = "0xCFC6FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public static bool CustomControllerButtonDown
	{
		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xCFC61C", Offset = "0xCFC61C", VA = "0xCFC61C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xCE6A98", Offset = "0xCE6A98", VA = "0xCE6A98")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public Vector2 WorldSpaceMouseInCanvasSpace
	{
		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xCE813C", Offset = "0xCE813C", VA = "0xCE813C")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xCE8148", Offset = "0xCE8148", VA = "0xCE8148")]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public Vector2 WorldSpaceMouseInCanvasSpaceDelta
	{
		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xCFC774", Offset = "0xCFC774", VA = "0xCFC774")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000064")]
	public float WorldSpaceMouseSensitivity
	{
		[Token(Token = "0x60006C6")]
		[Address(RVA = "0xCFC808", Offset = "0xCFC808", VA = "0xCFC808")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xCFC810", Offset = "0xCFC810", VA = "0xCFC810")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public static CUIControlMethod ControlMethod
	{
		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xCE5B80", Offset = "0xCE5B80", VA = "0xCE5B80")]
		get
		{
			return default(CUIControlMethod);
		}
		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xCF5F7C", Offset = "0xCF5F7C", VA = "0xCF5F7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public GameObject CurrentPointedAt
	{
		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xCFC818", Offset = "0xCFC818", VA = "0xCFC818")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000067")]
	public Hand UsedHand
	{
		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xCE98EC", Offset = "0xCE98EC", VA = "0xCE98EC")]
		get
		{
			return default(Hand);
		}
		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xCE9B18", Offset = "0xCE9B18", VA = "0xCE9B18")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public bool GazeUseTimedClick
	{
		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xCEC0C4", Offset = "0xCEC0C4", VA = "0xCEC0C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xCF6388", Offset = "0xCF6388", VA = "0xCF6388")]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public float GazeClickTimer
	{
		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xCEC378", Offset = "0xCEC378", VA = "0xCEC378")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xCF6484", Offset = "0xCF6484", VA = "0xCF6484")]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public float GazeClickTimerDelay
	{
		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xCEC370", Offset = "0xCEC370", VA = "0xCEC370")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xCF65F4", Offset = "0xCF65F4", VA = "0xCF65F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public float GazeTimerProgress
	{
		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xCF66E4", Offset = "0xCF66E4", VA = "0xCF66E4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700006C")]
	public Image GazeTimedClickProgressImage
	{
		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xCF313C", Offset = "0xCF313C", VA = "0xCF313C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xCFC820", Offset = "0xCFC820", VA = "0xCFC820")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public OVRCameraRig OculusCameraRig
	{
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xCFC828", Offset = "0xCFC828", VA = "0xCFC828")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xCFC830", Offset = "0xCFC830", VA = "0xCFC830")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public OVRInput.Button OculusTouchInteractionButton
	{
		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xCE9B20", Offset = "0xCE9B20", VA = "0xCE9B20")]
		get
		{
			return default(OVRInput.Button);
		}
		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xCFC838", Offset = "0xCFC838", VA = "0xCFC838")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public Transform OculusTouchUsedControllerTransform
	{
		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xCE98A0", Offset = "0xCE98A0", VA = "0xCE98A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xCFAD14", Offset = "0xCFAD14", VA = "0xCFAD14", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xCFAE60", Offset = "0xCFAE60", VA = "0xCFAE60", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xCFB0A0", Offset = "0xCFB0A0", VA = "0xCFB0A0", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xCFB35C", Offset = "0xCFB35C", VA = "0xCFB35C", Slot = "31")]
	protected virtual void ProcessGaze()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xCFB3DC", Offset = "0xCFB3DC", VA = "0xCFB3DC", Slot = "32")]
	protected virtual void ProcessCustomRayController()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xCFB66C", Offset = "0xCFB66C", VA = "0xCFB66C", Slot = "33")]
	protected virtual void ProcessDownRelease(PointerEventData eventData, bool down, bool released)
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xCFC064", Offset = "0xCFC064", VA = "0xCFC064", Slot = "34")]
	protected virtual void ProcessViveControllers()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xCFC068", Offset = "0xCFC068", VA = "0xCFC068", Slot = "35")]
	protected virtual void ProcessOculusVRController()
	{
	}

	[Token(Token = "0x60006BA")]
	private static T EnableInputModule<T>() where T : BaseInputModule
	{
		return null;
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xCFC840", Offset = "0xCFC840", VA = "0xCFC840")]
	public CurvedUIInputModule()
	{
	}
}
[Token(Token = "0x20000CE")]
public class debuglogscript : MonoBehaviour
{
	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMesh text;

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x1C8B22C", Offset = "0x1C8B22C", VA = "0x1C8B22C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x1C8B270", Offset = "0x1C8B270", VA = "0x1C8B270")]
	private void Update()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x1C8B274", Offset = "0x1C8B274", VA = "0x1C8B274")]
	public debuglogscript()
	{
	}
}
[Token(Token = "0x20000CF")]
public enum Difficulty
{
	[Token(Token = "0x40006F0")]
	Fast,
	[Token(Token = "0x40006F1")]
	Faster,
	[Token(Token = "0x40006F2")]
	Fastest
}
[Token(Token = "0x20000D0")]
public class SettingsManager : MonoBehaviour
{
	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Cube1;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Cube2;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider volumeSliderSound;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider volumeSliderMusic;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider volumeSliderVoice;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle enableTips;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Toggle enableBloom;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Toggle fastDifficulty;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Toggle fasterDifficulty;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Toggle fastestDifficulty;

	[Token(Token = "0x40006FD")]
	private const string MUSIC_VOLUME_PREF = "music-volume";

	[Token(Token = "0x40006FE")]
	private const string SFX_VOLUME_PREF = "sound-volume";

	[Token(Token = "0x40006FF")]
	private const string VO_VOLUME_PREF = "voice-volume";

	[Token(Token = "0x4000700")]
	private const string DIFFICULTY_PREF = "difficulty";

	[Token(Token = "0x4000701")]
	private const string TIPS_PREF = "tips";

	[Token(Token = "0x4000702")]
	private const string BLOOM_PREF = "bloom";

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Difficulty currentDifficulty;

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xD91DB4", Offset = "0xD91DB4", VA = "0xD91DB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xD92058", Offset = "0xD92058", VA = "0xD92058")]
	public void OnChangeSoundVolume(float value)
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xD920C0", Offset = "0xD920C0", VA = "0xD920C0")]
	public void OnChangeMusicVolume(float value)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xD9211C", Offset = "0xD9211C", VA = "0xD9211C")]
	public void OnChangeVoiceVolume(float value)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xD92178", Offset = "0xD92178", VA = "0xD92178")]
	public void OnToggleTips(bool state)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xD922A8", Offset = "0xD922A8", VA = "0xD922A8")]
	public void OnToggleBloom(bool state)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xD92384", Offset = "0xD92384", VA = "0xD92384")]
	public void OnToggleFastDifficulty(bool state)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xD923F8", Offset = "0xD923F8", VA = "0xD923F8")]
	public void OnToggleFasterDifficulty(bool state)
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xD92408", Offset = "0xD92408", VA = "0xD92408")]
	public void OnToggleFastestDifficulty(bool state)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xD92394", Offset = "0xD92394", VA = "0xD92394")]
	private void SetDifficulty(Difficulty difficulty)
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xD920B4", Offset = "0xD920B4", VA = "0xD920B4")]
	private void SetPref(string key, float value)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xD92428", Offset = "0xD92428", VA = "0xD92428")]
	private void SetPref(string key, string value)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xD92418", Offset = "0xD92418", VA = "0xD92418")]
	private void SetPref(string key, int value)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xD92224", Offset = "0xD92224", VA = "0xD92224")]
	private void SetPref(string key, bool value)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xD91FCC", Offset = "0xD91FCC", VA = "0xD91FCC")]
	private bool GetBoolPref(string key, bool defaultValue = true)
	{
		return default(bool);
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xD92438", Offset = "0xD92438", VA = "0xD92438")]
	public SettingsManager()
	{
	}
}
[Token(Token = "0x20000D1")]
public class Dragonfly : MonoBehaviour
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator dragonfly;

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xC87D34", Offset = "0xC87D34", VA = "0xC87D34")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xC87D38", Offset = "0xC87D38", VA = "0xC87D38")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xC880B0", Offset = "0xC880B0", VA = "0xC880B0")]
	public Dragonfly()
	{
	}
}
[Token(Token = "0x20000D2")]
public class GearVRTestScript : MonoBehaviour
{
	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerR;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRInput.Controller controllerL;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Button myButton;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform Cube1;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform Cube2;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform Cube3;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMesh textL;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh textR;

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xC08D60", Offset = "0xC08D60", VA = "0xC08D60")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xC08D64", Offset = "0xC08D64", VA = "0xC08D64")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xC08EE4", Offset = "0xC08EE4", VA = "0xC08EE4")]
	public GearVRTestScript()
	{
	}
}
[Token(Token = "0x20000D3")]
public class AutoRotate : MonoBehaviour
{
	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool RotateOnX;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool RotateOnY;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool RotateOnZ;

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xF3F860", Offset = "0xF3F860", VA = "0xF3F860")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xF3F984", Offset = "0xF3F984", VA = "0xF3F984")]
	public AutoRotate()
	{
	}
}
[Token(Token = "0x20000D4")]
public class RobinCameraScript : MonoBehaviour
{
	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject robinCamera;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float cameraAngleX;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float cameraAngleY;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float cameraDistance;

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xB9B0AC", Offset = "0xB9B0AC", VA = "0xB9B0AC")]
	public void Start()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xB9B1CC", Offset = "0xB9B1CC", VA = "0xB9B1CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xB9B54C", Offset = "0xB9B54C", VA = "0xB9B54C")]
	public void SetTarget(GameObject aTarget)
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xB9B30C", Offset = "0xB9B30C", VA = "0xB9B30C")]
	public void CameraRotationX()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xB9B42C", Offset = "0xB9B42C", VA = "0xB9B42C")]
	public void CameraRotationY()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xB9B554", Offset = "0xB9B554", VA = "0xB9B554")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xB9B6C0", Offset = "0xB9B6C0", VA = "0xB9B6C0")]
	public RobinCameraScript()
	{
	}
}
[Token(Token = "0x20000D5")]
public class RobinCharacter : MonoBehaviour
{
	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator robinAnimator;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float animSpeed;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody robinRigid;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isFlying;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float forwardSpeed;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float turnAcceleration;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float upDownAcceleration;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float forwardAccelerationMultiplier;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float turnAccelerationMultiplier;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float upDownAccelerationMultiplier;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float forwardAcceleration;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isGrounded;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float groundCheckDistance;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float groundCheckOffset;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool soaring;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float soaringTime;

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xB9B6D8", Offset = "0xB9B6D8", VA = "0xB9B6D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xB9B770", Offset = "0xB9B770", VA = "0xB9B770")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xB9BD10", Offset = "0xB9BD10", VA = "0xB9BD10")]
	public void AnimSpeedSet(float speed)
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xB9BD54", Offset = "0xB9BD54", VA = "0xB9BD54")]
	public void Landing()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xB9BE00", Offset = "0xB9BE00", VA = "0xB9BE00")]
	public void Soar()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xB9BEC4", Offset = "0xB9BEC4", VA = "0xB9BEC4")]
	public void HopForward()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xB9BF28", Offset = "0xB9BF28", VA = "0xB9BF28")]
	public void HopBack()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0xB9BF8C", Offset = "0xB9BF8C", VA = "0xB9BF8C")]
	public void HopRight()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xB9BFF0", Offset = "0xB9BFF0", VA = "0xB9BFF0")]
	public void HopLeft()
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xB9C054", Offset = "0xB9C054", VA = "0xB9C054")]
	public void Attack()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0xB9C0B8", Offset = "0xB9C0B8", VA = "0xB9C0B8")]
	public void Hit()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0xB9C11C", Offset = "0xB9C11C", VA = "0xB9C11C")]
	public void Bathing()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xB9C180", Offset = "0xB9C180", VA = "0xB9C180")]
	public void Chirp()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xB9C1E4", Offset = "0xB9C1E4", VA = "0xB9C1E4")]
	public void Grooming()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xB9C248", Offset = "0xB9C248", VA = "0xB9C248")]
	public void EatStart()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xB9C2B0", Offset = "0xB9C2B0", VA = "0xB9C2B0")]
	public void EatEnd()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xB9C318", Offset = "0xB9C318", VA = "0xB9C318")]
	public void Death()
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xB9C380", Offset = "0xB9C380", VA = "0xB9C380")]
	public void Rebirth()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xB9BB20", Offset = "0xB9BB20", VA = "0xB9BB20")]
	private void CheckGroundStatus()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xB9B7CC", Offset = "0xB9B7CC", VA = "0xB9B7CC")]
	public void Move()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xB9C3E8", Offset = "0xB9C3E8", VA = "0xB9C3E8")]
	public RobinCharacter()
	{
	}
}
[Token(Token = "0x20000D6")]
public class RobinUserController : MonoBehaviour
{
	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RobinCharacter robinCharacter;

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xB9C420", Offset = "0xB9C420", VA = "0xB9C420")]
	private void Start()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xB9C478", Offset = "0xB9C478", VA = "0xB9C478")]
	private void Update()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xB9C7E8", Offset = "0xB9C7E8", VA = "0xB9C7E8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xB9C89C", Offset = "0xB9C89C", VA = "0xB9C89C")]
	public RobinUserController()
	{
	}
}
[Token(Token = "0x20000D7")]
public class LanguageLocalization : MonoBehaviour
{
	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Font chineseFont;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer levelLogo;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material chineseLevelLogo;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text logoText;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text blackBegginningText;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text greenMeadowsText;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text blueDeepText;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text blueOceanText;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text redFallText;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text redSavannaText;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text whiteWinterText;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text orangeSunsetText;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text blueMoonText;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Text controlsText;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Text settingsText;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Text mainMenuText;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Text resumeText;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Text movementText;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text rotateText;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text selectSeedText;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text releaseSeedText;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Text teleportText;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Text branchesText;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Text teleportMovementText;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Text audioVisualEffectsText;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Text meditationLotusText;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Text musicVolumeText;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Text currentlyPlayingText;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Text backText;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Text backText1;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string chineseLogo;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private string chineseBlackBegginning;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string chineseGreenMeadows;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private string chineseBlueDeep;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private string chineseBlueOcean;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private string chineseRedFall;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private string chineseRedSavanna;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private string chineseWhiteWinter;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private string chineseOrangeSunset;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private string chineseBlueMoon;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private string chineseControls;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private string chineseSettings;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private string chineseMainMenu;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private string chineseResume;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private string chineseMovement;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private string chineseRotate;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private string chineseSelectSeed;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private string chineseReleaseSeed;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private string chineseTeleport;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private string chineseBranches;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private string chineseTeleportMovement;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private string chineseAudioVisualEffects;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private string chineseMeditationLotus;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private string chineseMusicVolume;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private string chineseCurrentlyPlaying;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private string chineseBack;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Image Neo3Controls;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Image Neo3Move;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Image Neo3Rotate;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Image Neo3Orbs;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Image Neo3Grab;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Image Neo2Controls;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Image Neo2Move;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public Image Neo2Rotate;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public Image Neo2Orbs;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Image Neo2Grab;

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xBC3FD0", Offset = "0xBC3FD0", VA = "0xBC3FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0xBC4044", Offset = "0xBC4044", VA = "0xBC4044")]
	public void ChangeControllers(bool neo3)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0xBC4264", Offset = "0xBC4264", VA = "0xBC4264")]
	public void ChangeToChinese()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0xBC5020", Offset = "0xBC5020", VA = "0xBC5020")]
	public LanguageLocalization()
	{
	}
}
[Token(Token = "0x20000D8")]
public class Lovebird : MonoBehaviour
{
	[Token(Token = "0x20004F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCAC4", Offset = "0x8CCAC4")]
	private sealed class <fly>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lovebird <>4__this;

		[Token(Token = "0x1700023A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022D8")]
			[Address(RVA = "0xBCB9B4", Offset = "0xBCB9B4", VA = "0xBCB9B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022DA")]
			[Address(RVA = "0xBCBA24", Offset = "0xBCBA24", VA = "0xBCBA24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0xBCB680", Offset = "0xBCB680", VA = "0xBCB680")]
		[DebuggerHidden]
		public <fly>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0xBCB8B0", Offset = "0xBCB8B0", VA = "0xBCB8B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0xBCB8B4", Offset = "0xBCB8B4", VA = "0xBCB8B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0xBCB9BC", Offset = "0xBCB9BC", VA = "0xBCB9BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCAD4", Offset = "0x8CCAD4")]
	private sealed class <eat>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lovebird <>4__this;

		[Token(Token = "0x1700023C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022DE")]
			[Address(RVA = "0xBCB838", Offset = "0xBCB838", VA = "0xBCB838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022E0")]
			[Address(RVA = "0xBCB8A8", Offset = "0xBCB8A8", VA = "0xBCB8A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0xBCB6AC", Offset = "0xBCB6AC", VA = "0xBCB6AC")]
		[DebuggerHidden]
		public <eat>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0xBCB738", Offset = "0xBCB738", VA = "0xBCB738", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0xBCB73C", Offset = "0xBCB73C", VA = "0xBCB73C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0xBCB840", Offset = "0xBCB840", VA = "0xBCB840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCAE4", Offset = "0x8CCAE4")]
	private sealed class <idle>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lovebird <>4__this;

		[Token(Token = "0x1700023E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022E4")]
			[Address(RVA = "0xBCBCA8", Offset = "0xBCBCA8", VA = "0xBCBCA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022E6")]
			[Address(RVA = "0xBCBD18", Offset = "0xBCBD18", VA = "0xBCBD18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0xBCB6D8", Offset = "0xBCB6D8", VA = "0xBCB6D8")]
		[DebuggerHidden]
		public <idle>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0xBCBBA8", Offset = "0xBCBBA8", VA = "0xBCBBA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0xBCBBAC", Offset = "0xBCBBAC", VA = "0xBCBBAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0xBCBCB0", Offset = "0xBCBCB0", VA = "0xBCBCB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCAF4", Offset = "0x8CCAF4")]
	private sealed class <idle2>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lovebird <>4__this;

		[Token(Token = "0x17000240")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022EA")]
			[Address(RVA = "0xBCBB30", Offset = "0xBCBB30", VA = "0xBCBB30", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000241")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022EC")]
			[Address(RVA = "0xBCBBA0", Offset = "0xBCBBA0", VA = "0xBCBBA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0xBCB704", Offset = "0xBCB704", VA = "0xBCB704")]
		[DebuggerHidden]
		public <idle2>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0xBCBA2C", Offset = "0xBCBA2C", VA = "0xBCBA2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0xBCBA30", Offset = "0xBCBA30", VA = "0xBCBA30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0xBCBB38", Offset = "0xBCBB38", VA = "0xBCBB38", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator lovebird;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IEnumerator coroutine;

	[Token(Token = "0x600071C")]
	[Address(RVA = "0xBCAF5C", Offset = "0xBCAF5C", VA = "0xBCAF5C")]
	private void Start()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0xBCAF60", Offset = "0xBCAF60", VA = "0xBCAF60")]
	private void Update()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0xBCB4B0", Offset = "0xBCB4B0", VA = "0xBCB4B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E83FC", Offset = "0x8E83FC")]
	private IEnumerator fly()
	{
		return null;
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0xBCB598", Offset = "0xBCB598", VA = "0xBCB598")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8460", Offset = "0x8E8460")]
	private IEnumerator eat()
	{
		return null;
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xBCB524", Offset = "0xBCB524", VA = "0xBCB524")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E84C4", Offset = "0x8E84C4")]
	private IEnumerator idle()
	{
		return null;
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xBCB60C", Offset = "0xBCB60C", VA = "0xBCB60C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8528", Offset = "0x8E8528")]
	private IEnumerator idle2()
	{
		return null;
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xBCB730", Offset = "0xBCB730", VA = "0xBCB730")]
	public Lovebird()
	{
	}
}
[Token(Token = "0x20000D9")]
public class MantisLODEditorProfessional : MonoBehaviour
{
	[Token(Token = "0x6000723")]
	[Address(RVA = "0xBCF48C", Offset = "0xBCF48C", VA = "0xBCF48C")]
	public MantisLODEditorProfessional()
	{
	}
}
[Token(Token = "0x20000DA")]
public class Monarch : MonoBehaviour
{
	[Token(Token = "0x20004F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCB04", Offset = "0x8CCB04")]
	private sealed class <idle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Monarch <>4__this;

		[Token(Token = "0x17000242")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022F0")]
			[Address(RVA = "0xBD47F0", Offset = "0xBD47F0", VA = "0xBD47F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000243")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022F2")]
			[Address(RVA = "0xBD4860", Offset = "0xBD4860", VA = "0xBD4860", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0xBD44E4", Offset = "0xBD44E4", VA = "0xBD44E4")]
		[DebuggerHidden]
		public <idle>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0xBD46C0", Offset = "0xBD46C0", VA = "0xBD46C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0xBD46C4", Offset = "0xBD46C4", VA = "0xBD46C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0xBD47F8", Offset = "0xBD47F8", VA = "0xBD47F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCB14", Offset = "0x8CCB14")]
	private sealed class <fly>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Monarch <>4__this;

		[Token(Token = "0x17000244")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022F6")]
			[Address(RVA = "0xBD4648", Offset = "0xBD4648", VA = "0xBD4648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000245")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022F8")]
			[Address(RVA = "0xBD46B8", Offset = "0xBD46B8", VA = "0xBD46B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0xBD4510", Offset = "0xBD4510", VA = "0xBD4510")]
		[DebuggerHidden]
		public <fly>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0xBD4544", Offset = "0xBD4544", VA = "0xBD4544", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0xBD4548", Offset = "0xBD4548", VA = "0xBD4548", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0xBD4650", Offset = "0xBD4650", VA = "0xBD4650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator monarch;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IEnumerator coroutine;

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xBD3F38", Offset = "0xBD3F38", VA = "0xBD3F38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xBD3F90", Offset = "0xBD3F90", VA = "0xBD3F90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xBD43FC", Offset = "0xBD43FC", VA = "0xBD43FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E858C", Offset = "0x8E858C")]
	private IEnumerator idle()
	{
		return null;
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xBD4470", Offset = "0xBD4470", VA = "0xBD4470")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E85F0", Offset = "0x8E85F0")]
	private IEnumerator fly()
	{
		return null;
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xBD453C", Offset = "0xBD453C", VA = "0xBD453C")]
	public Monarch()
	{
	}
}
[Token(Token = "0x20000DB")]
internal class AnimateTiledTexture : MonoBehaviour
{
	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _uvTieX;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int _uvTieY;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int _fps;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 _size;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer _myRenderer;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _lastIndex;

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xF3F40C", Offset = "0xF3F40C", VA = "0xF3F40C")]
	private void Start()
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xF3F4E4", Offset = "0xF3F4E4", VA = "0xF3F4E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xF3F640", Offset = "0xF3F640", VA = "0xF3F640")]
	public AnimateTiledTexture()
	{
	}
}
[Token(Token = "0x20000DC")]
public class EntitlementManager : MonoBehaviour
{
	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string appId;

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xC8CF68", Offset = "0xC8CF68", VA = "0xC8CF68")]
	private void Start()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xC8CF6C", Offset = "0xC8CF6C", VA = "0xC8CF6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xC8CF70", Offset = "0xC8CF70", VA = "0xC8CF70")]
	public EntitlementManager()
	{
	}
}
[Token(Token = "0x20000DD")]
public class FacingAsset : MonoBehaviour
{
	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool alwaysFace;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool limitX;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool onlyOnce;

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xC032B0", Offset = "0xC032B0", VA = "0xC032B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xC03570", Offset = "0xC03570", VA = "0xC03570")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xC0330C", Offset = "0xC0330C", VA = "0xC0330C")]
	private void FacePlayer(bool xOnly)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xC03584", Offset = "0xC03584", VA = "0xC03584")]
	public FacingAsset()
	{
	}
}
[Token(Token = "0x20000DE")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8CDC", Offset = "0x8C8CDC")]
public class KillTimerPlusEffect : MonoBehaviour
{
	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject DestroyEffect;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float killDelay;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float killTimer;

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xBBCA44", Offset = "0xBBCA44", VA = "0xBBCA44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xBBCA50", Offset = "0xBBCA50", VA = "0xBBCA50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xBBCBC0", Offset = "0xBBCBC0", VA = "0xBBCBC0")]
	public KillTimerPlusEffect()
	{
	}
}
[Token(Token = "0x20000DF")]
public class NTVR_AudioSeedFire : MonoBehaviour
{
	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource randomShoot;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] audioSources;

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xBD6170", Offset = "0xBD6170", VA = "0xBD6170")]
	private void Start()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xBD6220", Offset = "0xBD6220", VA = "0xBD6220")]
	public NTVR_AudioSeedFire()
	{
	}
}
[Token(Token = "0x20000E0")]
public class NTVR_Caustics_Anim : MonoBehaviour
{
	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fps;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D[] frames;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frameIndex;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Projector projector;

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xBD633C", Offset = "0xBD633C", VA = "0xBD633C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xBD63B8", Offset = "0xBD63B8", VA = "0xBD63B8")]
	private void NextFrame()
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xBD64A8", Offset = "0xBD64A8", VA = "0xBD64A8")]
	public NTVR_Caustics_Anim()
	{
	}
}
[Token(Token = "0x20000E1")]
public class NTVR_CullLayer : MonoBehaviour
{
	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int cullLayer;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int cullDistance;

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xBD64B8", Offset = "0xBD64B8", VA = "0xBD64B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xBD658C", Offset = "0xBD658C", VA = "0xBD658C")]
	public NTVR_CullLayer()
	{
	}
}
[Token(Token = "0x20000E2")]
public class NTVR_DisableIcon : MonoBehaviour
{
	[Token(Token = "0x20004FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCB24", Offset = "0x8CCB24")]
	private sealed class <iconOff>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_DisableIcon <>4__this;

		[Token(Token = "0x17000246")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60022FC")]
			[Address(RVA = "0xBD6744", Offset = "0xBD6744", VA = "0xBD6744", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022FE")]
			[Address(RVA = "0xBD67B4", Offset = "0xBD67B4", VA = "0xBD67B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0xBD6640", Offset = "0xBD6640", VA = "0xBD6640")]
		[DebuggerHidden]
		public <iconOff>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0xBD6674", Offset = "0xBD6674", VA = "0xBD6674", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0xBD6678", Offset = "0xBD6678", VA = "0xBD6678", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0xBD674C", Offset = "0xBD674C", VA = "0xBD674C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xBD65A0", Offset = "0xBD65A0", VA = "0xBD65A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0xBD65CC", Offset = "0xBD65CC", VA = "0xBD65CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8654", Offset = "0x8E8654")]
	private IEnumerator iconOff()
	{
		return null;
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0xBD666C", Offset = "0xBD666C", VA = "0xBD666C")]
	public NTVR_DisableIcon()
	{
	}
}
[Token(Token = "0x20000E3")]
public class NTVR_DropSeed : MonoBehaviour
{
	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SpawnGrowObject;

	[Token(Token = "0x6000740")]
	[Address(RVA = "0xBD67BC", Offset = "0xBD67BC", VA = "0xBD67BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0xBD69C0", Offset = "0xBD69C0", VA = "0xBD69C0")]
	public NTVR_DropSeed()
	{
	}
}
[Token(Token = "0x20000E4")]
public class NTVR_DropSeedFruit : MonoBehaviour
{
	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SpawnGrowObject;

	[Token(Token = "0x6000742")]
	[Address(RVA = "0xBD69C8", Offset = "0xBD69C8", VA = "0xBD69C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0xBD6BF4", Offset = "0xBD6BF4", VA = "0xBD6BF4")]
	public NTVR_DropSeedFruit()
	{
	}
}
[Token(Token = "0x20000E5")]
public class NTVR_Event_Crow : MonoBehaviour
{
	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] animalSounds;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource soundSource;

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xBD6BFC", Offset = "0xBD6BFC", VA = "0xBD6BFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xBD6C00", Offset = "0xBD6C00", VA = "0xBD6C00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xBD6C04", Offset = "0xBD6C04", VA = "0xBD6C04")]
	private void animalSoundEvent()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xBD6C9C", Offset = "0xBD6C9C", VA = "0xBD6C9C")]
	public NTVR_Event_Crow()
	{
	}
}
[Token(Token = "0x20000E6")]
public class NTVR_FadeObject : MonoBehaviour
{
	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D88A8", Offset = "0x8D88A8")]
	public float fadeSpeed;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color fadeColor;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_Material;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color m_Color;

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xBD6CA4", Offset = "0xBD6CA4", VA = "0xBD6CA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xBD6D40", Offset = "0xBD6D40", VA = "0xBD6D40")]
	public NTVR_FadeObject()
	{
	}
}
[Token(Token = "0x20000E7")]
public class NTVR_FoveatedRendering : MonoBehaviour
{
	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRManager.TiledMultiResLevel renderV;

	[Token(Token = "0x600074A")]
	[Address(RVA = "0xBD6DB0", Offset = "0xBD6DB0", VA = "0xBD6DB0")]
	private void Start()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xBD6DB4", Offset = "0xBD6DB4", VA = "0xBD6DB4")]
	public NTVR_FoveatedRendering()
	{
	}
}
[Token(Token = "0x20000E8")]
public class NTVR_GO_FireSeed : MonoBehaviour
{
	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerR;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRInput.Controller controllerL;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Button myButton;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject prefabBall;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject spawn;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform spawnTransform;

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xBD6DBC", Offset = "0xBD6DBC", VA = "0xBD6DBC")]
	private void Start()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xBD6DF8", Offset = "0xBD6DF8", VA = "0xBD6DF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xBD6F64", Offset = "0xBD6F64", VA = "0xBD6F64")]
	public void btnFireSeed()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xBD7158", Offset = "0xBD7158", VA = "0xBD7158")]
	public NTVR_GO_FireSeed()
	{
	}
}
[Token(Token = "0x20000E9")]
public class NTVR_VisSeed : MonoBehaviour
{
	[Token(Token = "0x20004FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCB34", Offset = "0x8CCB34")]
	private sealed class <WaitForSpawn>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_VisSeed <>4__this;

		[Token(Token = "0x17000248")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002302")]
			[Address(RVA = "0xDE6DA0", Offset = "0xDE6DA0", VA = "0xDE6DA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000249")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002304")]
			[Address(RVA = "0xDE6E10", Offset = "0xDE6E10", VA = "0xDE6E10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0xDE6B0C", Offset = "0xDE6B0C", VA = "0xDE6B0C")]
		[DebuggerHidden]
		public <WaitForSpawn>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0xDE6B40", Offset = "0xDE6B40", VA = "0xDE6B40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0xDE6B44", Offset = "0xDE6B44", VA = "0xDE6B44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0xDE6DA8", Offset = "0xDE6DA8", VA = "0xDE6DA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SpawnGrowObject;

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xDE69E8", Offset = "0xDE69E8", VA = "0xDE69E8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xDE6A98", Offset = "0xDE6A98", VA = "0xDE6A98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E86B8", Offset = "0x8E86B8")]
	private IEnumerator WaitForSpawn()
	{
		return null;
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xDE6B38", Offset = "0xDE6B38", VA = "0xDE6B38")]
	public NTVR_VisSeed()
	{
	}
}
[Token(Token = "0x20000EA")]
public class NTVR_GrowObject : MonoBehaviour
{
	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource randomShoot;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] audioSources;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject GrowEffect;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SpecialEffect;

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xBD7174", Offset = "0xBD7174", VA = "0xBD7174")]
	private void Start()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xBD73D8", Offset = "0xBD73D8", VA = "0xBD73D8")]
	public NTVR_GrowObject()
	{
	}
}
[Token(Token = "0x20000EB")]
public class NTVR_GrowObject_Large : MonoBehaviour
{
	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource randomShoot;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] audioSources;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject GrowEffect;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SpecialEffect;

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xBD73E0", Offset = "0xBD73E0", VA = "0xBD73E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xBD7778", Offset = "0xBD7778", VA = "0xBD7778")]
	public NTVR_GrowObject_Large()
	{
	}
}
[Token(Token = "0x20000EC")]
public class NTVR_GrowObject_Medium : MonoBehaviour
{
	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource randomShoot;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] audioSources;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject GrowEffect;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SpecialEffect;

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xBD7780", Offset = "0xBD7780", VA = "0xBD7780")]
	private void Start()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xBD79E4", Offset = "0xBD79E4", VA = "0xBD79E4")]
	public NTVR_GrowObject_Medium()
	{
	}
}
[Token(Token = "0x20000ED")]
public class NTVR_GrowObject_Small : MonoBehaviour
{
	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GrowEffect;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SpecialEffect;

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xBD79EC", Offset = "0xBD79EC", VA = "0xBD79EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xBD7BC0", Offset = "0xBD7BC0", VA = "0xBD7BC0")]
	public NTVR_GrowObject_Small()
	{
	}
}
[Token(Token = "0x20000EE")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C8D14", Offset = "0x8C8D14")]
public class NTVR_KillTimer : MonoBehaviour
{
	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float killDelay;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float killTimer;

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xBD7BC8", Offset = "0xBD7BC8", VA = "0xBD7BC8")]
	private void Start()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xBD7BD4", Offset = "0xBD7BD4", VA = "0xBD7BD4")]
	private void Update()
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xBD7C84", Offset = "0xBD7C84", VA = "0xBD7C84")]
	public NTVR_KillTimer()
	{
	}
}
[Token(Token = "0x20000EF")]
public class NTVR_LeafWave : MonoBehaviour
{
	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector4 waving;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float wavingPower;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material mat;

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xBD7C94", Offset = "0xBD7C94", VA = "0xBD7C94")]
	private void Start()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xBD7D34", Offset = "0xBD7D34", VA = "0xBD7D34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xBD7E40", Offset = "0xBD7E40", VA = "0xBD7E40")]
	public NTVR_LeafWave()
	{
	}
}
[Token(Token = "0x20000F0")]
public class NTVR_LimitLarge : MonoBehaviour
{
	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D88C4", Offset = "0x8D88C4")]
	public List<GameObject> objectList;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxObjects;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NTVR_LimitLarge instance;

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xBD7E48", Offset = "0xBD7E48", VA = "0xBD7E48")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xBD7640", Offset = "0xBD7640", VA = "0xBD7640")]
	public void AddObject(GameObject holder)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0xBD7EC4", Offset = "0xBD7EC4", VA = "0xBD7EC4")]
	public NTVR_LimitLarge()
	{
	}
}
[Token(Token = "0x20000F1")]
public class NTVR_LimitMedium : MonoBehaviour
{
	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D88FC", Offset = "0x8D88FC")]
	public List<GameObject> objectList;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxObjects;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NTVR_LimitMedium instance;

	[Token(Token = "0x6000764")]
	[Address(RVA = "0xDDE9D4", Offset = "0xDDE9D4", VA = "0xDDE9D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0xDDEA50", Offset = "0xDDEA50", VA = "0xDDEA50")]
	public void AddObject(GameObject holder)
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0xDDEB88", Offset = "0xDDEB88", VA = "0xDDEB88")]
	public NTVR_LimitMedium()
	{
	}
}
[Token(Token = "0x20000F2")]
public class NTVR_LimitSmall : MonoBehaviour
{
	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8934", Offset = "0x8D8934")]
	public List<GameObject> objectList;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxObjects;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NTVR_LimitSmall instance;

	[Token(Token = "0x6000767")]
	[Address(RVA = "0xDDEB90", Offset = "0xDDEB90", VA = "0xDDEB90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0xDDEC0C", Offset = "0xDDEC0C", VA = "0xDDEC0C")]
	public void AddObject(GameObject holder)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xDDED44", Offset = "0xDDED44", VA = "0xDDED44")]
	public NTVR_LimitSmall()
	{
	}
}
[Token(Token = "0x20000F3")]
public class NTVR_LimitSpecial : MonoBehaviour
{
	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D896C", Offset = "0x8D896C")]
	public List<GameObject> objectList;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxObjects;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NTVR_LimitSpecial instance;

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xDDED4C", Offset = "0xDDED4C", VA = "0xDDED4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xDDEDC8", Offset = "0xDDEDC8", VA = "0xDDEDC8")]
	public void AddObject(GameObject holder)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0xDDEF00", Offset = "0xDDEF00", VA = "0xDDEF00")]
	public NTVR_LimitSpecial()
	{
	}
}
[Token(Token = "0x20000F4")]
public class NTVR_LocomotionSwitch : MonoBehaviour
{
	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerR;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRInput.Controller controllerL;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Button myButton;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public OVRInput.Button toggleButton;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject MovementFree;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject MovementTeleport;

	[Token(Token = "0x600076D")]
	[Address(RVA = "0xDDEF08", Offset = "0xDDEF08", VA = "0xDDEF08")]
	private void Update()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xDDEF90", Offset = "0xDDEF90", VA = "0xDDEF90")]
	public void locomotionSwitch()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xDDF24C", Offset = "0xDDF24C", VA = "0xDDF24C")]
	public NTVR_LocomotionSwitch()
	{
	}
}
[Token(Token = "0x20000F5")]
public class NTVR_Mute : MonoBehaviour
{
	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audio;

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xDDF268", Offset = "0xDDF268", VA = "0xDDF268")]
	private void Start()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xDDF2C0", Offset = "0xDDF2C0", VA = "0xDDF2C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xDDF348", Offset = "0xDDF348", VA = "0xDDF348")]
	public NTVR_Mute()
	{
	}
}
[Token(Token = "0x20000F6")]
public class NTVR_ObjectCountLarge : MonoBehaviour
{
	[Token(Token = "0x6000773")]
	[Address(RVA = "0xDDF350", Offset = "0xDDF350", VA = "0xDDF350")]
	private void Start()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xDDF3CC", Offset = "0xDDF3CC", VA = "0xDDF3CC")]
	public NTVR_ObjectCountLarge()
	{
	}
}
[Token(Token = "0x20000F7")]
public class NTVR_ObjectCountMedium : MonoBehaviour
{
	[Token(Token = "0x6000775")]
	[Address(RVA = "0xDDF3D4", Offset = "0xDDF3D4", VA = "0xDDF3D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xDDF44C", Offset = "0xDDF44C", VA = "0xDDF44C")]
	public NTVR_ObjectCountMedium()
	{
	}
}
[Token(Token = "0x20000F8")]
public class NTVR_ObjectCountSmall : MonoBehaviour
{
	[Token(Token = "0x6000777")]
	[Address(RVA = "0xDDF454", Offset = "0xDDF454", VA = "0xDDF454")]
	private void Start()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xDDF4CC", Offset = "0xDDF4CC", VA = "0xDDF4CC")]
	public NTVR_ObjectCountSmall()
	{
	}
}
[Token(Token = "0x20000F9")]
public class NTVR_ObjectCountSpecial : MonoBehaviour
{
	[Token(Token = "0x6000779")]
	[Address(RVA = "0xDDF4D4", Offset = "0xDDF4D4", VA = "0xDDF4D4")]
	private void Start()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xDDF54C", Offset = "0xDDF54C", VA = "0xDDF54C")]
	public NTVR_ObjectCountSpecial()
	{
	}
}
[Token(Token = "0x20000FA")]
public class NTVR_ObjectDestroy : MonoBehaviour
{
	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject destroyPrefab;

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xDDF554", Offset = "0xDDF554", VA = "0xDDF554")]
	private void OnCollisionEnter(Collision c)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xDDF62C", Offset = "0xDDF62C", VA = "0xDDF62C")]
	public NTVR_ObjectDestroy()
	{
	}
}
[Token(Token = "0x20000FB")]
public class NTVR_PlanetDestroy : MonoBehaviour
{
	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject EffectOnDestroyZone;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject EffectOnDestroyZoneBurst;

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xDDF634", Offset = "0xDDF634", VA = "0xDDF634")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xDDF840", Offset = "0xDDF840", VA = "0xDDF840")]
	public NTVR_PlanetDestroy()
	{
	}
}
[Token(Token = "0x20000FC")]
public class NTVR_RandomAudio : MonoBehaviour
{
	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource audioSource;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] RandomAudio;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioClip RandomAudioClip;

	[Token(Token = "0x600077F")]
	[Address(RVA = "0xDDF848", Offset = "0xDDF848", VA = "0xDDF848")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0xDDF958", Offset = "0xDDF958", VA = "0xDDF958")]
	public NTVR_RandomAudio()
	{
	}
}
[Token(Token = "0x20000FD")]
public class NTVR_SeedCountFlower : MonoBehaviour
{
	[Token(Token = "0x20004FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCB44", Offset = "0x8CCB44")]
	private sealed class <GrenadeStart>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_SeedCountFlower <>4__this;

		[Token(Token = "0x1700024A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002308")]
			[Address(RVA = "0xDE0604", Offset = "0xDE0604", VA = "0xDE0604", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600230A")]
			[Address(RVA = "0xDE0674", Offset = "0xDE0674", VA = "0xDE0674", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0xDDFA00", Offset = "0xDDFA00", VA = "0xDDFA00")]
		[DebuggerHidden]
		public <GrenadeStart>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0xDDFA34", Offset = "0xDDFA34", VA = "0xDDFA34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0xDDFA38", Offset = "0xDDFA38", VA = "0xDDFA38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0xDE060C", Offset = "0xDE060C", VA = "0xDE060C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ExplodeEffect;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SeedsSpawn;

	[Token(Token = "0x6000781")]
	[Address(RVA = "0xDDF960", Offset = "0xDDF960", VA = "0xDDF960")]
	private void Start()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0xDDF98C", Offset = "0xDDF98C", VA = "0xDDF98C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E871C", Offset = "0x8E871C")]
	private IEnumerator GrenadeStart()
	{
		return null;
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0xDDFA2C", Offset = "0xDDFA2C", VA = "0xDDFA2C")]
	public NTVR_SeedCountFlower()
	{
	}
}
[Token(Token = "0x20000FE")]
public class NTVR_SeedCountFruit : MonoBehaviour
{
	[Token(Token = "0x20004FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCB54", Offset = "0x8CCB54")]
	private sealed class <GrenadeStart>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_SeedCountFruit <>4__this;

		[Token(Token = "0x1700024C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600230E")]
			[Address(RVA = "0xDE1230", Offset = "0xDE1230", VA = "0xDE1230", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002310")]
			[Address(RVA = "0xDE12A0", Offset = "0xDE12A0", VA = "0xDE12A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0xDE071C", Offset = "0xDE071C", VA = "0xDE071C")]
		[DebuggerHidden]
		public <GrenadeStart>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0xDE0750", Offset = "0xDE0750", VA = "0xDE0750", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0xDE0754", Offset = "0xDE0754", VA = "0xDE0754", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0xDE1238", Offset = "0xDE1238", VA = "0xDE1238", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ExplodeEffect;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SeedsSpawnA;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject SeedsSpawnB;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject SeedsSpawnC;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject SeedsSpawnD;

	[Token(Token = "0x6000784")]
	[Address(RVA = "0xDE067C", Offset = "0xDE067C", VA = "0xDE067C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xDE06A8", Offset = "0xDE06A8", VA = "0xDE06A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8780", Offset = "0x8E8780")]
	private IEnumerator GrenadeStart()
	{
		return null;
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xDE0748", Offset = "0xDE0748", VA = "0xDE0748")]
	public NTVR_SeedCountFruit()
	{
	}
}
[Token(Token = "0x20000FF")]
public class NTVR_SeedCountShort : MonoBehaviour
{
	[Token(Token = "0x20004FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCB64", Offset = "0x8CCB64")]
	private sealed class <SpawnStart>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_SeedCountShort <>4__this;

		[Token(Token = "0x1700024E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002314")]
			[Address(RVA = "0xDE15FC", Offset = "0xDE15FC", VA = "0xDE15FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002316")]
			[Address(RVA = "0xDE166C", Offset = "0xDE166C", VA = "0xDE166C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0xDE1348", Offset = "0xDE1348", VA = "0xDE1348")]
		[DebuggerHidden]
		public <SpawnStart>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0xDE137C", Offset = "0xDE137C", VA = "0xDE137C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0xDE1380", Offset = "0xDE1380", VA = "0xDE1380", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0xDE1604", Offset = "0xDE1604", VA = "0xDE1604", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SpawnObject;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ExplodeEffect;

	[Token(Token = "0x6000787")]
	[Address(RVA = "0xDE12A8", Offset = "0xDE12A8", VA = "0xDE12A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0xDE12D4", Offset = "0xDE12D4", VA = "0xDE12D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E87E4", Offset = "0x8E87E4")]
	private IEnumerator SpawnStart()
	{
		return null;
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0xDE1374", Offset = "0xDE1374", VA = "0xDE1374")]
	public NTVR_SeedCountShort()
	{
	}
}
[Token(Token = "0x2000100")]
public class NTVR_SeedCountSimple : MonoBehaviour
{
	[Token(Token = "0x2000500")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCB74", Offset = "0x8CCB74")]
	private sealed class <SpawnStart>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_SeedCountSimple <>4__this;

		[Token(Token = "0x17000250")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600231A")]
			[Address(RVA = "0xDE1A1C", Offset = "0xDE1A1C", VA = "0xDE1A1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000251")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600231C")]
			[Address(RVA = "0xDE1A8C", Offset = "0xDE1A8C", VA = "0xDE1A8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0xDE1714", Offset = "0xDE1714", VA = "0xDE1714")]
		[DebuggerHidden]
		public <SpawnStart>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0xDE1748", Offset = "0xDE1748", VA = "0xDE1748", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0xDE174C", Offset = "0xDE174C", VA = "0xDE174C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0xDE1A24", Offset = "0xDE1A24", VA = "0xDE1A24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SpawnObject;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ExplodeEffect;

	[Token(Token = "0x600078A")]
	[Address(RVA = "0xDE1674", Offset = "0xDE1674", VA = "0xDE1674")]
	private void Start()
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0xDE16A0", Offset = "0xDE16A0", VA = "0xDE16A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8848", Offset = "0x8E8848")]
	private IEnumerator SpawnStart()
	{
		return null;
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0xDE1740", Offset = "0xDE1740", VA = "0xDE1740")]
	public NTVR_SeedCountSimple()
	{
	}
}
[Token(Token = "0x2000101")]
public class NTVR_SeedCountStar : MonoBehaviour
{
	[Token(Token = "0x2000501")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCB84", Offset = "0x8CCB84")]
	private sealed class <SpawnStart>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_SeedCountStar <>4__this;

		[Token(Token = "0x17000252")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002320")]
			[Address(RVA = "0xDE1EA0", Offset = "0xDE1EA0", VA = "0xDE1EA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002322")]
			[Address(RVA = "0xDE1F10", Offset = "0xDE1F10", VA = "0xDE1F10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0xDE1B34", Offset = "0xDE1B34", VA = "0xDE1B34")]
		[DebuggerHidden]
		public <SpawnStart>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0xDE1B68", Offset = "0xDE1B68", VA = "0xDE1B68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0xDE1B6C", Offset = "0xDE1B6C", VA = "0xDE1B6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0xDE1EA8", Offset = "0xDE1EA8", VA = "0xDE1EA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SpawnObject;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] SpawnEffect;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ExplodeEffect;

	[Token(Token = "0x600078D")]
	[Address(RVA = "0xDE1A94", Offset = "0xDE1A94", VA = "0xDE1A94")]
	private void Start()
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0xDE1AC0", Offset = "0xDE1AC0", VA = "0xDE1AC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E88AC", Offset = "0x8E88AC")]
	private IEnumerator SpawnStart()
	{
		return null;
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0xDE1B60", Offset = "0xDE1B60", VA = "0xDE1B60")]
	public NTVR_SeedCountStar()
	{
	}
}
[Token(Token = "0x2000102")]
public class NTVR_SeedCountTimeOfDay : MonoBehaviour
{
	[Token(Token = "0x2000502")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCB94", Offset = "0x8CCB94")]
	private sealed class <seedCountDown>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_SeedCountTimeOfDay <>4__this;

		[Token(Token = "0x17000254")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002326")]
			[Address(RVA = "0xDE2F8C", Offset = "0xDE2F8C", VA = "0xDE2F8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000255")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002328")]
			[Address(RVA = "0xDE2FFC", Offset = "0xDE2FFC", VA = "0xDE2FFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0xDE1FFC", Offset = "0xDE1FFC", VA = "0xDE1FFC")]
		[DebuggerHidden]
		public <seedCountDown>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xDE2030", Offset = "0xDE2030", VA = "0xDE2030", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0xDE2034", Offset = "0xDE2034", VA = "0xDE2034", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0xDE2F94", Offset = "0xDE2F94", VA = "0xDE2F94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject explodeEffect;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject scriptHolder;

	[Token(Token = "0x6000790")]
	[Address(RVA = "0xDE1F18", Offset = "0xDE1F18", VA = "0xDE1F18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0xDE1F88", Offset = "0xDE1F88", VA = "0xDE1F88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8910", Offset = "0x8E8910")]
	private IEnumerator seedCountDown()
	{
		return null;
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xDE2028", Offset = "0xDE2028", VA = "0xDE2028")]
	public NTVR_SeedCountTimeOfDay()
	{
	}
}
[Token(Token = "0x2000103")]
public class NTVR_SeedCountWeather : MonoBehaviour
{
	[Token(Token = "0x2000503")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCBA4", Offset = "0x8CCBA4")]
	private sealed class <seedCountDown>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_SeedCountWeather <>4__this;

		[Token(Token = "0x17000256")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600232C")]
			[Address(RVA = "0xDE33C0", Offset = "0xDE33C0", VA = "0xDE33C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000257")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600232E")]
			[Address(RVA = "0xDE3430", Offset = "0xDE3430", VA = "0xDE3430", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0xDE30E8", Offset = "0xDE30E8", VA = "0xDE30E8")]
		[DebuggerHidden]
		public <seedCountDown>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0xDE311C", Offset = "0xDE311C", VA = "0xDE311C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0xDE3120", Offset = "0xDE3120", VA = "0xDE3120", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0xDE33C8", Offset = "0xDE33C8", VA = "0xDE33C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject explodeEffect;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject scriptHolder;

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xDE3004", Offset = "0xDE3004", VA = "0xDE3004")]
	private void Start()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xDE3074", Offset = "0xDE3074", VA = "0xDE3074")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8974", Offset = "0x8E8974")]
	private IEnumerator seedCountDown()
	{
		return null;
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xDE3114", Offset = "0xDE3114", VA = "0xDE3114")]
	public NTVR_SeedCountWeather()
	{
	}
}
[Token(Token = "0x2000104")]
public class NTVR_SeedObjectScaleAnim : MonoBehaviour
{
	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationClip[] animationer;

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xDE3438", Offset = "0xDE3438", VA = "0xDE3438")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xDE3534", Offset = "0xDE3534", VA = "0xDE3534")]
	public NTVR_SeedObjectScaleAnim()
	{
	}
}
[Token(Token = "0x2000105")]
public class NTVR_SeedSpawn : MonoBehaviour
{
	[Token(Token = "0x2000504")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCBB4", Offset = "0x8CCBB4")]
	private sealed class <WaitForSpawn>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_SeedSpawn <>4__this;

		[Token(Token = "0x17000258")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002332")]
			[Address(RVA = "0xDE3C44", Offset = "0xDE3C44", VA = "0xDE3C44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000259")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002334")]
			[Address(RVA = "0xDE3CB4", Offset = "0xDE3CB4", VA = "0xDE3CB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0xDE3720", Offset = "0xDE3720", VA = "0xDE3720")]
		[DebuggerHidden]
		public <WaitForSpawn>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0xDE39E4", Offset = "0xDE39E4", VA = "0xDE39E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0xDE39E8", Offset = "0xDE39E8", VA = "0xDE39E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0xDE3C4C", Offset = "0xDE3C4C", VA = "0xDE3C4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000505")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCBC4", Offset = "0x8CCBC4")]
	private sealed class <DestroyZone>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_SeedSpawn <>4__this;

		[Token(Token = "0x1700025A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002338")]
			[Address(RVA = "0xDE396C", Offset = "0xDE396C", VA = "0xDE396C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600233A")]
			[Address(RVA = "0xDE39DC", Offset = "0xDE39DC", VA = "0xDE39DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0xDE374C", Offset = "0xDE374C", VA = "0xDE374C")]
		[DebuggerHidden]
		public <DestroyZone>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0xDE3780", Offset = "0xDE3780", VA = "0xDE3780", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0xDE3784", Offset = "0xDE3784", VA = "0xDE3784", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0xDE3974", Offset = "0xDE3974", VA = "0xDE3974", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SpawnObject;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject EffectOnDestroyZone;

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xDE353C", Offset = "0xDE353C", VA = "0xDE353C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xDE3638", Offset = "0xDE3638", VA = "0xDE3638")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E89D8", Offset = "0x8E89D8")]
	private IEnumerator WaitForSpawn()
	{
		return null;
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xDE36AC", Offset = "0xDE36AC", VA = "0xDE36AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8A3C", Offset = "0x8E8A3C")]
	private IEnumerator DestroyZone()
	{
		return null;
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xDE3778", Offset = "0xDE3778", VA = "0xDE3778")]
	public NTVR_SeedSpawn()
	{
	}
}
[Token(Token = "0x2000106")]
public class NTVR_Supersample_HighQuality : MonoBehaviour
{
	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float superSample;

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xDE3CBC", Offset = "0xDE3CBC", VA = "0xDE3CBC")]
	private void Start()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xDE3CC0", Offset = "0xDE3CC0", VA = "0xDE3CC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xDE3CC4", Offset = "0xDE3CC4", VA = "0xDE3CC4")]
	public NTVR_Supersample_HighQuality()
	{
	}
}
[Token(Token = "0x2000107")]
public class NTVR_TeleportCheckerMessage : MonoBehaviour
{
	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MovementTeleport;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform teleportHelp;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pointer;

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xDE3CD4", Offset = "0xDE3CD4", VA = "0xDE3CD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xDE3DC0", Offset = "0xDE3DC0", VA = "0xDE3DC0")]
	public void TeleportMessage()
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xDE3E48", Offset = "0xDE3E48", VA = "0xDE3E48")]
	public void TeleportMessageOff()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xDE3ED0", Offset = "0xDE3ED0", VA = "0xDE3ED0")]
	public NTVR_TeleportCheckerMessage()
	{
	}
}
[Token(Token = "0x2000108")]
public class NTVR_Toggle_TimeOfDay : MonoBehaviour
{
	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject toggleDay;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject toggleNight;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject water;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject objectLUT;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject objectLUTRight;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject objectLUTLeft;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material matGrass;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material matGrassBackground;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material matFlowers;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material matGroundCover;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material matSpritesA;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material matSpritesB;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material matSpritesC;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material matTreeWallA;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material matTreeWallB;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material matTreeWallC;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Material matBackgroundA;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Material matBackgroundB;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material matLeavesA;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material matLeavesB;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material matParticlesA;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Material matParticlesB;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Material matMiscA;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Material matMiscB;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Material matMiscC;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Color colDay;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Color colNight;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Color colAlt1;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Color colAlt2;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Texture TextureLUTday;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Texture TextureLUTnight;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Texture waterReflectionDay;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Texture waterReflectionNight;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Light sunLight;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Flare sunflare01;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Flare sunflare02;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Material Skybox01;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Color fogColor01;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Color ambientcolor01;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float fogdensity01;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public Vector3 sunDirection01;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float sunIntensity01;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public Color sunColor01;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Material Skybox02;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Color fogColor02;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Color ambientcolor02;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public float fogdensity02;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public Vector3 sunDirection02;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float sunIntensity02;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public Color sunColor02;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public bool pressed;

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xDE222C", Offset = "0xDE222C", VA = "0xDE222C")]
	public void timeOfDayChange()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xDE3ED8", Offset = "0xDE3ED8", VA = "0xDE3ED8")]
	public NTVR_Toggle_TimeOfDay()
	{
	}
}
[Token(Token = "0x2000109")]
public class NTVR_Toggle_Weather : MonoBehaviour
{
	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject toggleObject;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject toggleStaticObject;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool pressed;

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xDE3318", Offset = "0xDE3318", VA = "0xDE3318")]
	public void weatherChange()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xDE3F7C", Offset = "0xDE3F7C", VA = "0xDE3F7C")]
	public NTVR_Toggle_Weather()
	{
	}
}
[Token(Token = "0x200010A")]
public class NTVR_UI_LoadLevel : MonoBehaviour
{
	[Token(Token = "0x2000506")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCBD4", Offset = "0x8CCBD4")]
	private sealed class <LoadFade1>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x1700025C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600233E")]
			[Address(RVA = "0xDE4698", Offset = "0xDE4698", VA = "0xDE4698", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002340")]
			[Address(RVA = "0xDE4708", Offset = "0xDE4708", VA = "0xDE4708", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0xDE4068", Offset = "0xDE4068", VA = "0xDE4068")]
		[DebuggerHidden]
		public <LoadFade1>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0xDE459C", Offset = "0xDE459C", VA = "0xDE459C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0xDE45A0", Offset = "0xDE45A0", VA = "0xDE45A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0xDE46A0", Offset = "0xDE46A0", VA = "0xDE46A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000507")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCBE4", Offset = "0x8CCBE4")]
	private sealed class <LoadFade2>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x1700025E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002344")]
			[Address(RVA = "0xDE480C", Offset = "0xDE480C", VA = "0xDE480C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002346")]
			[Address(RVA = "0xDE487C", Offset = "0xDE487C", VA = "0xDE487C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0xDE4108", Offset = "0xDE4108", VA = "0xDE4108")]
		[DebuggerHidden]
		public <LoadFade2>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0xDE4710", Offset = "0xDE4710", VA = "0xDE4710", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0xDE4714", Offset = "0xDE4714", VA = "0xDE4714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0xDE4814", Offset = "0xDE4814", VA = "0xDE4814", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000508")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCBF4", Offset = "0x8CCBF4")]
	private sealed class <LoadFade3>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x17000260")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600234A")]
			[Address(RVA = "0xDE4980", Offset = "0xDE4980", VA = "0xDE4980", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600234C")]
			[Address(RVA = "0xDE49F0", Offset = "0xDE49F0", VA = "0xDE49F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0xDE41A8", Offset = "0xDE41A8", VA = "0xDE41A8")]
		[DebuggerHidden]
		public <LoadFade3>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0xDE4884", Offset = "0xDE4884", VA = "0xDE4884", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0xDE4888", Offset = "0xDE4888", VA = "0xDE4888", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0xDE4988", Offset = "0xDE4988", VA = "0xDE4988", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000509")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC04", Offset = "0x8CCC04")]
	private sealed class <LoadFade4>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x17000262")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002350")]
			[Address(RVA = "0xDE4AF4", Offset = "0xDE4AF4", VA = "0xDE4AF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000263")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002352")]
			[Address(RVA = "0xDE4B64", Offset = "0xDE4B64", VA = "0xDE4B64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0xDE4248", Offset = "0xDE4248", VA = "0xDE4248")]
		[DebuggerHidden]
		public <LoadFade4>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0xDE49F8", Offset = "0xDE49F8", VA = "0xDE49F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0xDE49FC", Offset = "0xDE49FC", VA = "0xDE49FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0xDE4AFC", Offset = "0xDE4AFC", VA = "0xDE4AFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC14", Offset = "0x8CCC14")]
	private sealed class <LoadFade5>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x17000264")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002356")]
			[Address(RVA = "0xDE4C68", Offset = "0xDE4C68", VA = "0xDE4C68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000265")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002358")]
			[Address(RVA = "0xDE4CD8", Offset = "0xDE4CD8", VA = "0xDE4CD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0xDE42E8", Offset = "0xDE42E8", VA = "0xDE42E8")]
		[DebuggerHidden]
		public <LoadFade5>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0xDE4B6C", Offset = "0xDE4B6C", VA = "0xDE4B6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0xDE4B70", Offset = "0xDE4B70", VA = "0xDE4B70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0xDE4C70", Offset = "0xDE4C70", VA = "0xDE4C70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC24", Offset = "0x8CCC24")]
	private sealed class <LoadFade6>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x17000266")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600235C")]
			[Address(RVA = "0xDE4DDC", Offset = "0xDE4DDC", VA = "0xDE4DDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000267")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600235E")]
			[Address(RVA = "0xDE4E4C", Offset = "0xDE4E4C", VA = "0xDE4E4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0xDE4388", Offset = "0xDE4388", VA = "0xDE4388")]
		[DebuggerHidden]
		public <LoadFade6>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0xDE4CE0", Offset = "0xDE4CE0", VA = "0xDE4CE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0xDE4CE4", Offset = "0xDE4CE4", VA = "0xDE4CE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0xDE4DE4", Offset = "0xDE4DE4", VA = "0xDE4DE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC34", Offset = "0x8CCC34")]
	private sealed class <LoadFade7>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x17000268")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002362")]
			[Address(RVA = "0xDE4F50", Offset = "0xDE4F50", VA = "0xDE4F50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000269")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002364")]
			[Address(RVA = "0xDE4FC0", Offset = "0xDE4FC0", VA = "0xDE4FC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0xDE4428", Offset = "0xDE4428", VA = "0xDE4428")]
		[DebuggerHidden]
		public <LoadFade7>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0xDE4E54", Offset = "0xDE4E54", VA = "0xDE4E54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0xDE4E58", Offset = "0xDE4E58", VA = "0xDE4E58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0xDE4F58", Offset = "0xDE4F58", VA = "0xDE4F58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC44", Offset = "0x8CCC44")]
	private sealed class <LoadFade8>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x1700026A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002368")]
			[Address(RVA = "0xDE50C4", Offset = "0xDE50C4", VA = "0xDE50C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600236A")]
			[Address(RVA = "0xDE5134", Offset = "0xDE5134", VA = "0xDE5134", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0xDE44C8", Offset = "0xDE44C8", VA = "0xDE44C8")]
		[DebuggerHidden]
		public <LoadFade8>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0xDE4FC8", Offset = "0xDE4FC8", VA = "0xDE4FC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0xDE4FCC", Offset = "0xDE4FCC", VA = "0xDE4FCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0xDE50CC", Offset = "0xDE50CC", VA = "0xDE50CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC54", Offset = "0x8CCC54")]
	private sealed class <LoadFade9>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_LoadLevel <>4__this;

		[Token(Token = "0x1700026C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600236E")]
			[Address(RVA = "0xDE5238", Offset = "0xDE5238", VA = "0xDE5238", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002370")]
			[Address(RVA = "0xDE52A8", Offset = "0xDE52A8", VA = "0xDE52A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600236B")]
		[Address(RVA = "0xDE4568", Offset = "0xDE4568", VA = "0xDE4568")]
		[DebuggerHidden]
		public <LoadFade9>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0xDE513C", Offset = "0xDE513C", VA = "0xDE513C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0xDE5140", Offset = "0xDE5140", VA = "0xDE5140", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0xDE5240", Offset = "0xDE5240", VA = "0xDE5240", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string SceneName1;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string SceneName2;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string SceneName3;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string SceneName4;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string SceneName5;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string SceneName6;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string SceneName7;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string SceneName8;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string SceneName9;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject fadeObject;

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xDE3F84", Offset = "0xDE3F84", VA = "0xDE3F84")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xDE3F88", Offset = "0xDE3F88", VA = "0xDE3F88")]
	public void LoadLevel1()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xDE3F94", Offset = "0xDE3F94", VA = "0xDE3F94")]
	public void LoadLevel2()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xDE3FA0", Offset = "0xDE3FA0", VA = "0xDE3FA0")]
	public void LoadLevel3()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xDE3FAC", Offset = "0xDE3FAC", VA = "0xDE3FAC")]
	public void LoadLevel4()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xDE3FB8", Offset = "0xDE3FB8", VA = "0xDE3FB8")]
	public void LoadLevel5()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xDE3FC4", Offset = "0xDE3FC4", VA = "0xDE3FC4")]
	public void LoadLevel6()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xDE3FD0", Offset = "0xDE3FD0", VA = "0xDE3FD0")]
	public void LoadLevel7()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xDE3FDC", Offset = "0xDE3FDC", VA = "0xDE3FDC")]
	public void LoadLevel8()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xDE3FE8", Offset = "0xDE3FE8", VA = "0xDE3FE8")]
	public void LoadLevel9()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xDE3FF4", Offset = "0xDE3FF4", VA = "0xDE3FF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8AA0", Offset = "0x8E8AA0")]
	private IEnumerator LoadFade1()
	{
		return null;
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xDE4094", Offset = "0xDE4094", VA = "0xDE4094")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8B04", Offset = "0x8E8B04")]
	private IEnumerator LoadFade2()
	{
		return null;
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xDE4134", Offset = "0xDE4134", VA = "0xDE4134")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8B68", Offset = "0x8E8B68")]
	private IEnumerator LoadFade3()
	{
		return null;
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xDE41D4", Offset = "0xDE41D4", VA = "0xDE41D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8BCC", Offset = "0x8E8BCC")]
	private IEnumerator LoadFade4()
	{
		return null;
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xDE4274", Offset = "0xDE4274", VA = "0xDE4274")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8C30", Offset = "0x8E8C30")]
	private IEnumerator LoadFade5()
	{
		return null;
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xDE4314", Offset = "0xDE4314", VA = "0xDE4314")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8C94", Offset = "0x8E8C94")]
	private IEnumerator LoadFade6()
	{
		return null;
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xDE43B4", Offset = "0xDE43B4", VA = "0xDE43B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8CF8", Offset = "0x8E8CF8")]
	private IEnumerator LoadFade7()
	{
		return null;
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xDE4454", Offset = "0xDE4454", VA = "0xDE4454")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8D5C", Offset = "0x8E8D5C")]
	private IEnumerator LoadFade8()
	{
		return null;
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xDE44F4", Offset = "0xDE44F4", VA = "0xDE44F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8DC0", Offset = "0x8E8DC0")]
	private IEnumerator LoadFade9()
	{
		return null;
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xDE4594", Offset = "0xDE4594", VA = "0xDE4594")]
	public NTVR_UI_LoadLevel()
	{
	}
}
[Token(Token = "0x200010B")]
public class NTVR_UI_MainMenuHelp : MonoBehaviour
{
	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform menuHelp;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Button pauseButton;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public OVRInput.Button pauseButton2;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRInput.Button pauseButton3;

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xDE52B0", Offset = "0xDE52B0", VA = "0xDE52B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xDE53B4", Offset = "0xDE53B4", VA = "0xDE53B4")]
	public void PauseMenu()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xDE5450", Offset = "0xDE5450", VA = "0xDE5450")]
	public NTVR_UI_MainMenuHelp()
	{
	}
}
[Token(Token = "0x200010C")]
public class NTVR_UI_Pause : MonoBehaviour
{
	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform progressBar;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform canvas;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform pauseMenu;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform settingsMenu;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform controlsMenu;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject leftHand;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject rightHand;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VRInputRay leftRay;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private VRInputRay rightRay;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject pointer;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject playerMovement;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public VrInputRayManager vrInputRayManager;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform Player;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Pvr_KeyCode pauseButtonLeft;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Pvr_KeyCode pauseButtonRight;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D89A4", Offset = "0x8D89A4")]
	public Transform playerCamera;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Vector3 offset;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float distance;

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xDE5458", Offset = "0xDE5458", VA = "0xDE5458")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xDE5518", Offset = "0xDE5518", VA = "0xDE5518")]
	private void Start()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xDE55A8", Offset = "0xDE55A8", VA = "0xDE55A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xDE5634", Offset = "0xDE5634", VA = "0xDE5634")]
	public void Pause()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xDE58F8", Offset = "0xDE58F8", VA = "0xDE58F8")]
	private void RepositionUI()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xDE5C5C", Offset = "0xDE5C5C", VA = "0xDE5C5C")]
	public void Settings(bool Open)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xDE5D50", Offset = "0xDE5D50", VA = "0xDE5D50")]
	public void Controls(bool Open)
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0xDE5E44", Offset = "0xDE5E44", VA = "0xDE5E44")]
	public NTVR_UI_Pause()
	{
	}
}
[Token(Token = "0x200010D")]
public class NTVR_UI_Save : MonoBehaviour
{
	[Token(Token = "0x200050F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC64", Offset = "0x8CCC64")]
	private sealed class <LoadMenu1>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_UI_Save <>4__this;

		[Token(Token = "0x1700026E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002374")]
			[Address(RVA = "0xDE6128", Offset = "0xDE6128", VA = "0xDE6128", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002376")]
			[Address(RVA = "0xDE6198", Offset = "0xDE6198", VA = "0xDE6198", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0xDE5F6C", Offset = "0xDE5F6C", VA = "0xDE5F6C")]
		[DebuggerHidden]
		public <LoadMenu1>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002372")]
		[Address(RVA = "0xDE5FA0", Offset = "0xDE5FA0", VA = "0xDE5FA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002373")]
		[Address(RVA = "0xDE5FA4", Offset = "0xDE5FA4", VA = "0xDE5FA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0xDE6130", Offset = "0xDE6130", VA = "0xDE6130", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string SceneName;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject fadeObject;

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xDE5E58", Offset = "0xDE5E58", VA = "0xDE5E58")]
	public void LoadMenu()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0xDE5EF8", Offset = "0xDE5EF8", VA = "0xDE5EF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8E24", Offset = "0x8E8E24")]
	private IEnumerator LoadMenu1()
	{
		return null;
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0xDE5F98", Offset = "0xDE5F98", VA = "0xDE5F98")]
	public NTVR_UI_Save()
	{
	}
}
[Token(Token = "0x200010E")]
public class NTVR_UI_Settings : MonoBehaviour
{
	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject audioVisHolder;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lotusHolder;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider volumeSliderMusic;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle toggleVis;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle toggleLotus;

	[Token(Token = "0x4000835")]
	private const string MUSIC_VOLUME_PREF = "music-volume";

	[Token(Token = "0x4000836")]
	private const string LOCOMOTION_PREF = "locomotion";

	[Token(Token = "0x4000837")]
	private const string VIS_PREF = "vis";

	[Token(Token = "0x4000838")]
	private const string LOTUS_PREF = "lotus";

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xDE61A0", Offset = "0xDE61A0", VA = "0xDE61A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xDE62CC", Offset = "0xDE62CC", VA = "0xDE62CC")]
	public void OnChangeMusicVolume(float value)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xDE6334", Offset = "0xDE6334", VA = "0xDE6334")]
	public void OnToggleVis(bool state)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0xDE6464", Offset = "0xDE6464", VA = "0xDE6464")]
	public void OnToggleLotus(bool state)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xDE6328", Offset = "0xDE6328", VA = "0xDE6328")]
	private void SetPref(string key, float value)
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xDE6510", Offset = "0xDE6510", VA = "0xDE6510")]
	private void SetPref(string key, string value)
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xDE6520", Offset = "0xDE6520", VA = "0xDE6520")]
	private void SetPref(string key, int value)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xDE63E0", Offset = "0xDE63E0", VA = "0xDE63E0")]
	private void SetPref(string key, bool value)
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xDE6530", Offset = "0xDE6530", VA = "0xDE6530")]
	public static void SetBool(string key, bool state)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xDE62AC", Offset = "0xDE62AC", VA = "0xDE62AC")]
	public static bool GetBool(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xDE653C", Offset = "0xDE653C", VA = "0xDE653C")]
	public NTVR_UI_Settings()
	{
	}
}
[Token(Token = "0x200010F")]
public class NTVR_UI_SoundFX : MonoBehaviour
{
	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource SoundsSourceUI;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip hover;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip click;

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xDE6544", Offset = "0xDE6544", VA = "0xDE6544")]
	public void OnHover()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xDE6578", Offset = "0xDE6578", VA = "0xDE6578")]
	public void OnClick()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xDE65B0", Offset = "0xDE65B0", VA = "0xDE65B0")]
	public NTVR_UI_SoundFX()
	{
	}
}
[Token(Token = "0x2000110")]
public class NTVR_VisDropSeed : MonoBehaviour
{
	[Token(Token = "0x2000510")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC74", Offset = "0x8CCC74")]
	private sealed class <WaitForSpawn>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NTVR_VisDropSeed <>4__this;

		[Token(Token = "0x17000270")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600237A")]
			[Address(RVA = "0xDE6970", Offset = "0xDE6970", VA = "0xDE6970", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000271")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600237C")]
			[Address(RVA = "0xDE69E0", Offset = "0xDE69E0", VA = "0xDE69E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0xDE66DC", Offset = "0xDE66DC", VA = "0xDE66DC")]
		[DebuggerHidden]
		public <WaitForSpawn>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0xDE6710", Offset = "0xDE6710", VA = "0xDE6710", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0xDE6714", Offset = "0xDE6714", VA = "0xDE6714", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0xDE6978", Offset = "0xDE6978", VA = "0xDE6978", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SpawnGrowObject;

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xDE65B8", Offset = "0xDE65B8", VA = "0xDE65B8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xDE6668", Offset = "0xDE6668", VA = "0xDE6668")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8E88", Offset = "0x8E8E88")]
	private IEnumerator WaitForSpawn()
	{
		return null;
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xDE6708", Offset = "0xDE6708", VA = "0xDE6708")]
	public NTVR_VisDropSeed()
	{
	}
}
[Token(Token = "0x2000111")]
public class NTVR_Waves : MonoBehaviour
{
	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float perlinScale;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float waveSpeed;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float waveHeight;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh mesh;

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xDE6E18", Offset = "0xDE6E18", VA = "0xDE6E18")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xDE6E1C", Offset = "0xDE6E1C", VA = "0xDE6E1C")]
	private void AnimateMesh()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xDE7040", Offset = "0xDE7040", VA = "0xDE7040")]
	public NTVR_Waves()
	{
	}
}
[Token(Token = "0x2000112")]
public class NTVRGO_SelectSeed : MonoBehaviour
{
	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerR;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRInput.Controller controllerL;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Button myButton;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int noClick;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] objList;

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xBD5B38", Offset = "0xBD5B38", VA = "0xBD5B38")]
	private void Update()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xBD5CA4", Offset = "0xBD5CA4", VA = "0xBD5CA4")]
	public void btnClick()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xBD5DA4", Offset = "0xBD5DA4", VA = "0xBD5DA4")]
	public NTVRGO_SelectSeed()
	{
	}
}
[Token(Token = "0x2000113")]
public class NTVRGO_SelectSeedIcon : MonoBehaviour
{
	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerR;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRInput.Controller controllerL;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Button myButton;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int noClick;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] objList;

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xBD5DC0", Offset = "0xBD5DC0", VA = "0xBD5DC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xBD5F2C", Offset = "0xBD5F2C", VA = "0xBD5F2C")]
	public void btnClick()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xBD602C", Offset = "0xBD602C", VA = "0xBD602C")]
	public NTVRGO_SelectSeedIcon()
	{
	}
}
[Token(Token = "0x2000114")]
public class SimpleTweener : MonoBehaviour
{
	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 scaleTo;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tweenTime;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Ease easeType;

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xEDF078", Offset = "0xEDF078", VA = "0xEDF078")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xEDF07C", Offset = "0xEDF07C", VA = "0xEDF07C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xEDF104", Offset = "0xEDF104", VA = "0xEDF104")]
	public SimpleTweener()
	{
	}
}
[Token(Token = "0x2000115")]
public class SpawningManager : MonoBehaviour
{
	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D89DC", Offset = "0x8D89DC")]
	public List<GameObject> objectList;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxObjects;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SpawningManager instance;

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xB25AA4", Offset = "0xB25AA4", VA = "0xB25AA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xB25B20", Offset = "0xB25B20", VA = "0xB25B20")]
	public void AddObject(GameObject holder)
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xB25C58", Offset = "0xB25C58", VA = "0xB25C58")]
	public SpawningManager()
	{
	}
}
[Token(Token = "0x2000116")]
public class Test_DeletePlayerPrefs : MonoBehaviour
{
	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xB30AA0", Offset = "0xB30AA0", VA = "0xB30AA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xB30AA8", Offset = "0xB30AA8", VA = "0xB30AA8")]
	public Test_DeletePlayerPrefs()
	{
	}
}
[Token(Token = "0x2000117")]
public class Test_Load_2 : MonoBehaviour
{
	[Token(Token = "0x2000511")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC84", Offset = "0x8CCC84")]
	private sealed class <LoadLevel>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Test_Load_2 <>4__this;

		[Token(Token = "0x17000272")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002380")]
			[Address(RVA = "0xB30CE0", Offset = "0xB30CE0", VA = "0xB30CE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000273")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002382")]
			[Address(RVA = "0xB30D50", Offset = "0xB30D50", VA = "0xB30D50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0xB30BF8", Offset = "0xB30BF8", VA = "0xB30BF8")]
		[DebuggerHidden]
		public <LoadLevel>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0xB30C2C", Offset = "0xB30C2C", VA = "0xB30C2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0xB30C30", Offset = "0xB30C30", VA = "0xB30C30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0xB30CE8", Offset = "0xB30CE8", VA = "0xB30CE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string leveltoload;

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xB30B58", Offset = "0xB30B58", VA = "0xB30B58")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xB30B84", Offset = "0xB30B84", VA = "0xB30B84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8EEC", Offset = "0x8E8EEC")]
	private IEnumerator LoadLevel()
	{
		return null;
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xB30C24", Offset = "0xB30C24", VA = "0xB30C24")]
	public Test_Load_2()
	{
	}
}
[Token(Token = "0x2000118")]
public class Test_LoadLevel : MonoBehaviour
{
	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerR;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRInput.Controller controllerL;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Button myButton;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public OVRInput.Button loadButton;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string leveltoload;

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xB30AB0", Offset = "0xB30AB0", VA = "0xB30AB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xB30B3C", Offset = "0xB30B3C", VA = "0xB30B3C")]
	public Test_LoadLevel()
	{
	}
}
[Token(Token = "0x2000119")]
public class Test_PlayerController : MonoBehaviour
{
	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bulletPrefab;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform bulletSpawn;

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xB30D58", Offset = "0xB30D58", VA = "0xB30D58")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xB30E88", Offset = "0xB30E88", VA = "0xB30E88")]
	private void Fire()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xB31070", Offset = "0xB31070", VA = "0xB31070")]
	public Test_PlayerController()
	{
	}
}
[Token(Token = "0x200011A")]
public class Test_ScaleTween : MonoBehaviour
{
	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 scaleTo;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tweenTime;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Ease easeType;

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xB31078", Offset = "0xB31078", VA = "0xB31078")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xB310E4", Offset = "0xB310E4", VA = "0xB310E4")]
	public Test_ScaleTween()
	{
	}
}
[Token(Token = "0x200011B")]
public class Test_SpawnLimit : MonoBehaviour
{
	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8A14", Offset = "0x8D8A14")]
	public GameObject prefabToSpawn;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject particlePoof;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8A4C", Offset = "0x8D8A4C")]
	public int spawnLimit;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8A84", Offset = "0x8D8A84")]
	public List<GameObject> spawnedObjectList;

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xB310F4", Offset = "0xB310F4", VA = "0xB310F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xB3115C", Offset = "0xB3115C", VA = "0xB3115C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xB31198", Offset = "0xB31198", VA = "0xB31198")]
	private void CreateObject()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xB313B0", Offset = "0xB313B0", VA = "0xB313B0")]
	private void CreatePoof(Transform where)
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xB314C4", Offset = "0xB314C4", VA = "0xB314C4")]
	public Test_SpawnLimit()
	{
	}
}
[Token(Token = "0x200011C")]
public class Test_SpawnOnCol : MonoBehaviour
{
	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xB314D4", Offset = "0xB314D4", VA = "0xB314D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xB314D8", Offset = "0xB314D8", VA = "0xB314D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xB314DC", Offset = "0xB314DC", VA = "0xB314DC")]
	public Test_SpawnOnCol()
	{
	}
}
[Token(Token = "0x200011D")]
public class Test_Toggle_Cubemap : MonoBehaviour
{
	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject water;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture waterReflection;

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xB314E4", Offset = "0xB314E4", VA = "0xB314E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xB315A4", Offset = "0xB315A4", VA = "0xB315A4")]
	public Test_Toggle_Cubemap()
	{
	}
}
[Token(Token = "0x200011E")]
public class Test_Toggle_Lut : MonoBehaviour
{
	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectLut;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture TextureLUTnight;

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xB315AC", Offset = "0xB315AC", VA = "0xB315AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xB31650", Offset = "0xB31650", VA = "0xB31650")]
	public Test_Toggle_Lut()
	{
	}
}
[Token(Token = "0x200011F")]
public class Test_Toggle_MatColor : MonoBehaviour
{
	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject nightMat;

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xB31658", Offset = "0xB31658", VA = "0xB31658")]
	private void Update()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xB31768", Offset = "0xB31768", VA = "0xB31768")]
	public Test_Toggle_MatColor()
	{
	}
}
[Token(Token = "0x2000120")]
public class NTVR_AnimalSoundRandom : MonoBehaviour
{
	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource randomSound;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] audioSources;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int mint;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int maxt;

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xBD6048", Offset = "0xBD6048", VA = "0xBD6048")]
	private void Start()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xBD604C", Offset = "0xBD604C", VA = "0xBD604C")]
	private void CallAudio()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xBD60B0", Offset = "0xBD60B0", VA = "0xBD60B0")]
	private void RandomSoundness()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xBD6168", Offset = "0xBD6168", VA = "0xBD6168")]
	public NTVR_AnimalSoundRandom()
	{
	}
}
[Token(Token = "0x2000121")]
public class Waterfall_Scroll_Quest : MonoBehaviour
{
	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scrollSpeed;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x1C8A4B0", Offset = "0x1C8A4B0", VA = "0x1C8A4B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x1C8A508", Offset = "0x1C8A508", VA = "0x1C8A508")]
	private void Update()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x1C8A5C0", Offset = "0x1C8A5C0", VA = "0x1C8A5C0")]
	public Waterfall_Scroll_Quest()
	{
	}
}
[Serializable]
[Token(Token = "0x2000122")]
public class Observer_CustomEvent
{
	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string timestamp;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string type;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string id;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string session;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string user;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Observer_KeyValuePair> parameters;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<Observer_CustomEvent> tempQueue;

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xD01EF4", Offset = "0xD01EF4", VA = "0xD01EF4")]
	public Observer_CustomEvent(string type)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xD024C0", Offset = "0xD024C0", VA = "0xD024C0")]
	public Observer_CustomEvent AddParameter(string key, string value)
	{
		return null;
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xD02594", Offset = "0xD02594", VA = "0xD02594")]
	public Observer_CustomEvent AddParameter(string key, float value)
	{
		return null;
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xD026A8", Offset = "0xD026A8", VA = "0xD026A8")]
	public Observer_CustomEvent AddParameter(string key, double value)
	{
		return null;
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xD027BC", Offset = "0xD027BC", VA = "0xD027BC")]
	public Observer_CustomEvent AddParameter(string key, int value)
	{
		return null;
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xD028A4", Offset = "0xD028A4", VA = "0xD028A4")]
	public Observer_CustomEvent AddParameter(string key, bool value)
	{
		return null;
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xD02990", Offset = "0xD02990", VA = "0xD02990")]
	public Observer_CustomEvent AddParameter(string key, Vector3 value)
	{
		return null;
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xD02A90", Offset = "0xD02A90", VA = "0xD02A90")]
	public Observer_CustomEvent AddParameter(string key, string[] value)
	{
		return null;
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xD02B78", Offset = "0xD02B78", VA = "0xD02B78")]
	public void EndParameters()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xD03470", Offset = "0xD03470", VA = "0xD03470")]
	public void NoParameters()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xD0313C", Offset = "0xD0313C", VA = "0xD0313C")]
	private static void FlushTempQueue()
	{
	}
}
[Token(Token = "0x2000123")]
[DisallowMultipleComponent]
public class Observer_EventHandler : MonoBehaviour
{
	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8ABC", Offset = "0x8D8ABC")]
	private static Observer_EventHandler <Instance>k__BackingField;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Observer_ProjectSettings settings;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<string> eventQueue;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool debugMode;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private static bool prettyDebug;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private static bool sendEventsOnDebugMode;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string applicationID;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool Observer_Initialized;

	[Token(Token = "0x17000070")]
	public static Observer_EventHandler Instance
	{
		[Token(Token = "0x6000815")]
		[Address(RVA = "0xD02E18", Offset = "0xD02E18", VA = "0xD02E18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8F50", Offset = "0x8E8F50")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000816")]
		[Address(RVA = "0xD03E6C", Offset = "0xD03E6C", VA = "0xD03E6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8F60", Offset = "0x8E8F60")]
		private set
		{
		}
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xD03EC0", Offset = "0xD03EC0", VA = "0xD03EC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xD0404C", Offset = "0xD0404C", VA = "0xD0404C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xD04380", Offset = "0xD04380", VA = "0xD04380")]
	private void SendStoredData(string _applicationID)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xD02E68", Offset = "0xD02E68", VA = "0xD02E68")]
	public void AddEvent(Observer_CustomEvent e)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xD04510", Offset = "0xD04510", VA = "0xD04510")]
	private static string PrettyDebug(Observer_CustomEvent e)
	{
		return null;
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xD03CC0", Offset = "0xD03CC0", VA = "0xD03CC0")]
	public void SendEvents()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xD051C4", Offset = "0xD051C4", VA = "0xD051C4")]
	public Observer_EventHandler()
	{
	}
}
[Token(Token = "0x2000124")]
[DisallowMultipleComponent]
public class Observer_Analytics : MonoBehaviour
{
	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8ADC", Offset = "0x8D8ADC")]
	private static Observer_Analytics <Instance>k__BackingField;

	[Token(Token = "0x17000071")]
	public static Observer_Analytics Instance
	{
		[Token(Token = "0x600081E")]
		[Address(RVA = "0xD02110", Offset = "0xD02110", VA = "0xD02110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8F70", Offset = "0x8E8F70")]
		get
		{
			return null;
		}
		[Token(Token = "0x600081F")]
		[Address(RVA = "0xD02160", Offset = "0xD02160", VA = "0xD02160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8F80", Offset = "0x8E8F80")]
		private set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public static bool AnalyticsEnabled
	{
		[Token(Token = "0x6000820")]
		[Address(RVA = "0xD021B4", Offset = "0xD021B4", VA = "0xD021B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000821")]
		[Address(RVA = "0xD02230", Offset = "0xD02230", VA = "0xD02230")]
		set
		{
		}
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xD022B4", Offset = "0xD022B4", VA = "0xD022B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xD02408", Offset = "0xD02408", VA = "0xD02408")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xD02410", Offset = "0xD02410", VA = "0xD02410")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xD02418", Offset = "0xD02418", VA = "0xD02418")]
	public Observer_Analytics()
	{
	}
}
[Token(Token = "0x2000125")]
[DisallowMultipleComponent]
public class Observer_ErrorReporter : MonoBehaviour
{
	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Observer_ProjectSettings settings;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool logTrackingEnabled;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static List<string> _logs;

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xD03710", Offset = "0xD03710", VA = "0xD03710")]
	private void Start()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xD03880", Offset = "0xD03880", VA = "0xD03880")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xD0390C", Offset = "0xD0390C", VA = "0xD0390C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xD03998", Offset = "0xD03998", VA = "0xD03998")]
	private void LogHandler(string logString, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xD03E64", Offset = "0xD03E64", VA = "0xD03E64")]
	public Observer_ErrorReporter()
	{
	}
}
[Token(Token = "0x2000126")]
[DisallowMultipleComponent]
public class Observer_GeneralFOV : MonoBehaviour
{
	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Observer_ProjectSettings settings;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool generalFOVTrackingEnabled;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float generalFOVMaxDistance;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float generalFOVInterval;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static float _timeCounterFOV;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool debugMode;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Camera cam;

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xD051CC", Offset = "0xD051CC", VA = "0xD051CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xD053F8", Offset = "0xD053F8", VA = "0xD053F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xD05830", Offset = "0xD05830", VA = "0xD05830")]
	public Observer_GeneralFOV()
	{
	}
}
[Token(Token = "0x2000127")]
[DisallowMultipleComponent]
public class Observer_Performance : MonoBehaviour
{
	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Observer_ProjectSettings settings;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool performanceTrackingEnabled;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float _frameCounter;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float _timeCounter;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static float _lastFramerate;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float minFramerateThreshold;

	[Token(Token = "0x400088B")]
	private const float Interval = 5f;

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xD05838", Offset = "0xD05838", VA = "0xD05838")]
	private void Start()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xD0599C", Offset = "0xD0599C", VA = "0xD0599C")]
	private static void GetPerformanceObjects(float _framerate)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xD05AC8", Offset = "0xD05AC8", VA = "0xD05AC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xD05BA4", Offset = "0xD05BA4", VA = "0xD05BA4")]
	public Observer_Performance()
	{
	}
}
[Token(Token = "0x2000128")]
[DisallowMultipleComponent]
public class Observer_PlayerTracking : MonoBehaviour
{
	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Observer_ProjectSettings settings;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Camera cam;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool positionalTrackingEnabled;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static float positionalTrackingInterval;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static bool lostTrackingGlobal;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static float _timeCounterPosition;

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xD05BAC", Offset = "0xD05BAC", VA = "0xD05BAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xD05D90", Offset = "0xD05D90", VA = "0xD05D90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xD062FC", Offset = "0xD062FC", VA = "0xD062FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xD06300", Offset = "0xD06300", VA = "0xD06300")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xD06304", Offset = "0xD06304", VA = "0xD06304")]
	public Observer_PlayerTracking()
	{
	}
}
[Token(Token = "0x2000129")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C8DAC", Offset = "0x8C8DAC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C8DAC", Offset = "0x8C8DAC")]
[DisallowMultipleComponent]
public class Observer_Session : MonoBehaviour
{
	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Observer_ProjectSettings _settings;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8AEC", Offset = "0x8D8AEC")]
	private static Observer_Session <Instance>k__BackingField;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float maxSessionDurationInSeconds;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string sessionID;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool isQuitting;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static bool isPaused;

	[Token(Token = "0x17000073")]
	public static Observer_Session Instance
	{
		[Token(Token = "0x6000837")]
		[Address(RVA = "0xD02420", Offset = "0xD02420", VA = "0xD02420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8F90", Offset = "0x8E8F90")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000838")]
		[Address(RVA = "0xD0630C", Offset = "0xD0630C", VA = "0xD0630C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8FA0", Offset = "0x8E8FA0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public Observer_ProjectSettings Settings
	{
		[Token(Token = "0x6000839")]
		[Address(RVA = "0xD06360", Offset = "0xD06360", VA = "0xD06360")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xD063B0", Offset = "0xD063B0", VA = "0xD063B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xD0653C", Offset = "0xD0653C", VA = "0xD0653C")]
	private void Start()
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xD066E4", Offset = "0xD066E4", VA = "0xD066E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xD0679C", Offset = "0xD0679C", VA = "0xD0679C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xD06854", Offset = "0xD06854", VA = "0xD06854")]
	private static void SceneLoaded(Scene arg0, LoadSceneMode arg1)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xD06928", Offset = "0xD06928", VA = "0xD06928")]
	private static void SceneUnloaded(Scene arg0)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xD069FC", Offset = "0xD069FC", VA = "0xD069FC")]
	public void CreateNewSession()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xD06C68", Offset = "0xD06C68", VA = "0xD06C68")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xD06DC0", Offset = "0xD06DC0", VA = "0xD06DC0")]
	private void EndSession()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xD066CC", Offset = "0xD066CC", VA = "0xD066CC")]
	private static float ConvertHoursToSeconds(int hours)
	{
		return default(float);
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xD06ED0", Offset = "0xD06ED0", VA = "0xD06ED0")]
	private static void ForceShutoffAnalytics()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xD06FC8", Offset = "0xD06FC8", VA = "0xD06FC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xD07034", Offset = "0xD07034", VA = "0xD07034")]
	public Observer_Session()
	{
	}
}
[Token(Token = "0x200012A")]
[DisallowMultipleComponent]
public class Observer_TrackedObject : MonoBehaviour
{
	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string nickname;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public float minimumFOVThreshold;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public float leftThreshold;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public float rightThreshold;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float downThreshold;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float upThreshold;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public bool checkLineOfSight;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[HideInInspector]
	public bool checkDistance;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float maxDistance;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool FOVDebug;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool inFOV;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool debugMode;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string fovStartTime;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Collider objCollider;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer objRenderer;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Observer_ProjectSettings settings;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Camera cam;

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xD0703C", Offset = "0xD0703C", VA = "0xD0703C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xD07278", Offset = "0xD07278", VA = "0xD07278")]
	private void Update()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xD07970", Offset = "0xD07970", VA = "0xD07970")]
	public Observer_TrackedObject()
	{
	}
}
[Token(Token = "0x200012B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C8E58", Offset = "0x8C8E58")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C8E58", Offset = "0x8C8E58")]
[DisallowMultipleComponent]
public class Observer_User : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000512")]
	public class Observer_UserInfo
	{
		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string city;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string country_code;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string country_name;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string continent_code;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float latitude;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float longitude;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string zip;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string region_name;

		[Token(Token = "0x6002383")]
		[Address(RVA = "0xD08C88", Offset = "0xD08C88", VA = "0xD08C88")]
		public Observer_UserInfo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000513")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCC94", Offset = "0x8CCC94")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__10_0;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<bool> <>9__11_0;

		[Token(Token = "0x6002385")]
		[Address(RVA = "0xD08330", Offset = "0xD08330", VA = "0xD08330")]
		public <>c()
		{
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0xD08338", Offset = "0xD08338", VA = "0xD08338")]
		internal bool <UserExists>b__10_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0xD08414", Offset = "0xD08414", VA = "0xD08414")]
		internal bool <CreateUser>b__11_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000514")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCCA4", Offset = "0x8CCCA4")]
	private sealed class <UserExists>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Observer_User <>4__this;

		[Token(Token = "0x17000274")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600238B")]
			[Address(RVA = "0xD0919C", Offset = "0xD0919C", VA = "0xD0919C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000275")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600238D")]
			[Address(RVA = "0xD0920C", Offset = "0xD0920C", VA = "0xD0920C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0xD07F14", Offset = "0xD07F14", VA = "0xD07F14")]
		[DebuggerHidden]
		public <UserExists>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002389")]
		[Address(RVA = "0xD08D68", Offset = "0xD08D68", VA = "0xD08D68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0xD08D6C", Offset = "0xD08D6C", VA = "0xD08D6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0xD091A4", Offset = "0xD091A4", VA = "0xD091A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000515")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCCB4", Offset = "0x8CCCB4")]
	private sealed class <CreateUser>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Observer_User <>4__this;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <headset>5__2;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <getUserInfo>5__3;

		[Token(Token = "0x17000276")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002392")]
			[Address(RVA = "0xD08CF0", Offset = "0xD08CF0", VA = "0xD08CF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000277")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002394")]
			[Address(RVA = "0xD08D60", Offset = "0xD08D60", VA = "0xD08D60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0xD07F40", Offset = "0xD07F40", VA = "0xD07F40")]
		[DebuggerHidden]
		public <CreateUser>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600238F")]
		[Address(RVA = "0xD084F0", Offset = "0xD084F0", VA = "0xD084F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002390")]
		[Address(RVA = "0xD085CC", Offset = "0xD085CC", VA = "0xD085CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002391")]
		[Address(RVA = "0xD0850C", Offset = "0xD0850C", VA = "0xD0850C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6002393")]
		[Address(RVA = "0xD08CF8", Offset = "0xD08CF8", VA = "0xD08CF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D8BBC", Offset = "0x8D8BBC")]
	private static Observer_User <Instance>k__BackingField;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Observer_ProjectSettings settings;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Observer_UserInfo userInfo;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string userID;

	[Token(Token = "0x17000075")]
	public static Observer_User Instance
	{
		[Token(Token = "0x600084A")]
		[Address(RVA = "0xD02470", Offset = "0xD02470", VA = "0xD02470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8FB0", Offset = "0x8E8FB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600084B")]
		[Address(RVA = "0xD07998", Offset = "0xD07998", VA = "0xD07998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E8FC0", Offset = "0x8E8FC0")]
		private set
		{
		}
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xD079EC", Offset = "0xD079EC", VA = "0xD079EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xD07B78", Offset = "0xD07B78", VA = "0xD07B78")]
	private void Start()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xD07EA0", Offset = "0xD07EA0", VA = "0xD07EA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E8FD0", Offset = "0x8E8FD0")]
	private IEnumerator UserExists()
	{
		return null;
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xD07E2C", Offset = "0xD07E2C", VA = "0xD07E2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9034", Offset = "0x8E9034")]
	private IEnumerator CreateUser()
	{
		return null;
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xD07F6C", Offset = "0xD07F6C", VA = "0xD07F6C")]
	private static void SendUserCreateEvent(string headset)
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xD082C4", Offset = "0xD082C4", VA = "0xD082C4")]
	public Observer_User()
	{
	}
}
[Token(Token = "0x200012C")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8C8EF4", Offset = "0x8C8EF4")]
public class FastList<T>
{
	[Token(Token = "0x2000516")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000517")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCCC4", Offset = "0x8CCCC4")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000278")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x600239C")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000279")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600239E")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002399")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600239A")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600239B")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600239D")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000076")]
	public int Count
	{
		[Token(Token = "0x6000854")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000855")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public T Item
	{
		[Token(Token = "0x6000856")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000857")]
		set
		{
		}
	}

	[Token(Token = "0x6000852")]
	public FastList()
	{
	}

	[Token(Token = "0x6000853")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000858")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000859")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x600085A")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x600085B")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600085C")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600085D")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600085E")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600085F")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000860")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000861")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000862")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000863")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000864")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000865")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000866")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9098", Offset = "0x8E9098")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000867")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000868")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000869")]
	private void Trim()
	{
	}

	[Token(Token = "0x600086A")]
	public void Clear()
	{
	}

	[Token(Token = "0x600086B")]
	public void Release()
	{
	}
}
[Token(Token = "0x200012D")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string header;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly string message;

	[Token(Token = "0x600086C")]
	[Address(RVA = "0xBBC940", Offset = "0xBBC940", VA = "0xBBC940")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x200012E")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xBBC914", Offset = "0xBBC914", VA = "0xBBC914")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x200012F")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x40008B2")]
	private const float mobileBaseHeadHeight = 1.7f;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float voiceAmplitude;

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xF610FC", Offset = "0xF610FC", VA = "0xF610FC")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xF61228", Offset = "0xF61228", VA = "0xF61228")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xF61584", Offset = "0xF61584", VA = "0xF61584")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xF6190C", Offset = "0xF6190C", VA = "0xF6190C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xF61938", Offset = "0xF61938", VA = "0xF61938")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000130")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xE9DF68", Offset = "0xE9DF68", VA = "0xE9DF68")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xE9DFF4", Offset = "0xE9DFF4", VA = "0xE9DFF4")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xE9E1B8", Offset = "0xE9E1B8", VA = "0xE9E1B8")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x2000131")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000518")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x600239F")]
		[Address(RVA = "0xB9AD58", Offset = "0xB9AD58", VA = "0xB9AD58")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000519")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E693C", Offset = "0x8E693C")]
		public float FakeLatencyMax;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E6954", Offset = "0x8E6954")]
		public float FakeLatencyMin;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E696C", Offset = "0x8E696C")]
		public float LatencyWeight;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E6984", Offset = "0x8E6984")]
		public int MaxSamples;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0xB9AD60", Offset = "0xB9AD60", VA = "0xB9AD60")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0xB9AF6C", Offset = "0xB9AF6C", VA = "0xB9AF6C")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xB9A250", Offset = "0xB9A250", VA = "0xB9A250")]
	private void Start()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xB9A430", Offset = "0xB9A430", VA = "0xB9A430")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xB9A7E4", Offset = "0xB9A7E4", VA = "0xB9A7E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xB9A72C", Offset = "0xB9A72C", VA = "0xB9A72C")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xB9AAB0", Offset = "0xB9AAB0", VA = "0xB9AAB0")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xB9AEE0", Offset = "0xB9AEE0", VA = "0xB9AEE0")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000132")]
public class P2PManager
{
	[Token(Token = "0x200051A")]
	private enum MessageType : byte
	{
		[Token(Token = "0x4001F42")]
		Update = 1
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xF61E24", Offset = "0xF61E24", VA = "0xF61E24")]
	public P2PManager()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xF61E2C", Offset = "0xF61E2C", VA = "0xF61E2C")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xF61F04", Offset = "0xF61F04", VA = "0xF61F04")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xF61F7C", Offset = "0xF61F7C", VA = "0xF61F7C")]
	public void SendAvatarUpdate(ulong userID, Transform bodyTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xF6242C", Offset = "0xF6242C", VA = "0xF6242C")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xF62430", Offset = "0xF62430", VA = "0xF62430")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xF621D8", Offset = "0xF621D8", VA = "0xF621D8")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xF627F0", Offset = "0xF627F0", VA = "0xF627F0")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xF622E4", Offset = "0xF622E4", VA = "0xF622E4")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xF626D8", Offset = "0xF626D8", VA = "0xF626D8")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xF62244", Offset = "0xF62244", VA = "0xF62244")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xF62858", Offset = "0xF62858", VA = "0xF62858")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xF6238C", Offset = "0xF6238C", VA = "0xF6238C")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xF62764", Offset = "0xF62764", VA = "0xF62764")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000133")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Camera spyCamera;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject cameraRig;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool showUI;

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xE9D940", Offset = "0xE9D940", VA = "0xE9D940", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xE9D984", Offset = "0xE9D984", VA = "0xE9D984", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xE9D9C4", Offset = "0xE9D9C4", VA = "0xE9D9C4", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xE9D9EC", Offset = "0xE9D9EC", VA = "0xE9D9EC")]
	private void checkInput()
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xE9DB28", Offset = "0xE9DB28", VA = "0xE9DB28")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xE9DC18", Offset = "0xE9DC18", VA = "0xE9DC18")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xE9DC90", Offset = "0xE9DC90", VA = "0xE9DC90")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000134")]
public class RemotePlayer
{
	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedBodyPosition;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedBodyPositionPrior;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedBodyRotation;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedBodyRotationPrior;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xB9AFF4", Offset = "0xB9AFF4", VA = "0xB9AFF4")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000135")]
public class RoomManager
{
	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xB9C8A4", Offset = "0xB9C8A4", VA = "0xB9C8A4")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xB9C8CC", Offset = "0xB9C8CC", VA = "0xB9C8CC")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xB9C960", Offset = "0xB9C960", VA = "0xB9C960")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xB9C8FC", Offset = "0xB9C8FC", VA = "0xB9C8FC")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xB9C964", Offset = "0xB9C964", VA = "0xB9C964")]
	public void LeaveCurrentRoom()
	{
	}
}
[Token(Token = "0x2000136")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x200051B")]
	public enum State
	{
		[Token(Token = "0x4001F44")]
		INITIALIZING,
		[Token(Token = "0x4001F45")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4001F46")]
		CREATING_A_ROOM,
		[Token(Token = "0x4001F47")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x4001F48")]
		JOINING_A_ROOM,
		[Token(Token = "0x4001F49")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x4001F4A")]
		LEAVING_A_ROOM,
		[Token(Token = "0x4001F4B")]
		SHUTDOWN
	}

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CAPI.FilterCallback micFilterDelegate;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float voiceCurrent;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private uint packetSequence;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject helpPanel;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material riftMaterial;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material gearMaterial;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject roomSphere;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject roomFloor;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected State currentState;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected RoomManager roomManager;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected VoipManager voipManager;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected ulong myID;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected string myOculusID;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000078")]
	public static State CurrentState
	{
		[Token(Token = "0x600089E")]
		[Address(RVA = "0xB23B18", Offset = "0xB23B18", VA = "0xB23B18")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000079")]
	public static ulong MyID
	{
		[Token(Token = "0x600089F")]
		[Address(RVA = "0xB23B90", Offset = "0xB23B90", VA = "0xB23B90")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700007A")]
	public static string MyOculusID
	{
		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xB23C6C", Offset = "0xB23C6C", VA = "0xB23C6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xB22C8C", Offset = "0xB22C8C", VA = "0xB22C8C", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xB22F90", Offset = "0xB22F90", VA = "0xB22F90", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xB236C4", Offset = "0xB236C4", VA = "0xB236C4", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xB236C8", Offset = "0xB236C8", VA = "0xB236C8")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xB238D8", Offset = "0xB238D8", VA = "0xB238D8")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xB23A9C", Offset = "0xB23A9C", VA = "0xB23A9C")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xB23254", Offset = "0xB23254", VA = "0xB23254")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xB23308", Offset = "0xB23308", VA = "0xB23308")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xB23D90", Offset = "0xB23D90", VA = "0xB23D90")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xB23F88", Offset = "0xB23F88", VA = "0xB23F88")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xB240BC", Offset = "0xB240BC", VA = "0xB240BC")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xB2423C", Offset = "0xB2423C", VA = "0xB2423C")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xB24324", Offset = "0xB24324", VA = "0xB24324")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xB24848", Offset = "0xB24848", VA = "0xB24848")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xB2490C", Offset = "0xB2490C", VA = "0xB2490C")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xB249A8", Offset = "0xB249A8", VA = "0xB249A8")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xB2461C", Offset = "0xB2461C", VA = "0xB2461C")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xB24CF0", Offset = "0xB24CF0", VA = "0xB24CF0")]
	public void UpdateVoiceData(short[] pcmData)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xB24E0C", Offset = "0xB24E0C", VA = "0xB24E0C")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xB24E8C", Offset = "0xB24E8C", VA = "0xB24E8C")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xB24F64", Offset = "0xB24F64", VA = "0xB24F64")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000137")]
public class VoipManager
{
	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x1C897F8", Offset = "0x1C897F8", VA = "0x1C897F8")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x1C89800", Offset = "0x1C89800", VA = "0x1C89800")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x1C898D8", Offset = "0x1C898D8", VA = "0x1C898D8")]
	public void Disconnect(ulong userID)
	{
	}
}
[Serializable]
[Token(Token = "0x2000138")]
public class AvatarLayer
{
	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0xF48228", Offset = "0xF48228", VA = "0xF48228")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000139")]
public class PacketRecordSettings
{
	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0xF54484", Offset = "0xF54484", VA = "0xF54484")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200013A")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x200051C")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0xF53998", Offset = "0xF53998", VA = "0xF53998")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x200051D")]
	public enum HandType
	{
		[Token(Token = "0x4001F4E")]
		Right,
		[Token(Token = "0x4001F4F")]
		Left,
		[Token(Token = "0x4001F50")]
		Max
	}

	[Token(Token = "0x200051E")]
	public enum HandJoint
	{
		[Token(Token = "0x4001F52")]
		HandBase,
		[Token(Token = "0x4001F53")]
		IndexBase,
		[Token(Token = "0x4001F54")]
		IndexTip,
		[Token(Token = "0x4001F55")]
		ThumbBase,
		[Token(Token = "0x4001F56")]
		ThumbTip,
		[Token(Token = "0x4001F57")]
		Max
	}

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatarMaterialManager DefaultBodyMaterialManager;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatarMaterialManager DefaultHandMaterialManager;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OvrAvatarBase Base;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OvrAvatarBody Body;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public OvrAvatarHand HandLeft;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public OvrAvatarHand HandRight;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool RecordPackets;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool UseSDKPackets;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool StartWithControllers;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader SurfaceShader;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader SurfaceShaderSelfOccluding;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader SurfaceShaderPBS;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader SurfaceShaderPBSV2Single;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader SurfaceShaderPBSV2Combined;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader SurfaceShaderPBSV2Simple;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader SurfaceShaderPBSV2Loading;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int renderPartCount;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool showLeftController;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	private bool showRightController;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string oculusUserID;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool CombineMeshes;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	private bool ForceMobileTextureFormat;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
	private bool WaitingForCombinedMesh;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Dictionary<string, OvrAvatarComponent> trackedComponents;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private UnityEvent AssetsDoneLoading;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[,] HandJoints;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string NECK_JONT;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0xF4E640", Offset = "0xF4E640", VA = "0xF4E640")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0xF4E6A8", Offset = "0xF4E6A8", VA = "0xF4E6A8")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0xF4E728", Offset = "0xF4E728", VA = "0xF4E728")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0xF4E81C", Offset = "0xF4E81C", VA = "0xF4E81C")]
	private void AddAvatarComponent(GameObject componentObject, ovrAvatarComponent component)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0xF4EDC0", Offset = "0xF4EDC0", VA = "0xF4EDC0")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0xF4F030", Offset = "0xF4F030", VA = "0xF4F030")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0xF4F2A0", Offset = "0xF4F2A0", VA = "0xF4F2A0")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, OvrAvatarMaterialManager materialManager)
	{
		return null;
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0xF4F6C4", Offset = "0xF4F6C4", VA = "0xF4F6C4")]
	private OvrAvatarProjectorRenderComponent AddProjectorRenderComponent(GameObject gameObject, ovrAvatarRenderPart_ProjectorRender projectorRender)
	{
		return null;
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0xF4FA78", Offset = "0xF4FA78", VA = "0xF4FA78")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0xF4FB94", Offset = "0xF4FB94", VA = "0xF4FB94")]
	private void UpdateAvatarComponent(ovrAvatarComponent component)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0xF50360", Offset = "0xF50360", VA = "0xF50360")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0xF503E4", Offset = "0xF503E4", VA = "0xF503E4")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0xF504CC", Offset = "0xF504CC", VA = "0xF504CC")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0xF505F8", Offset = "0xF505F8", VA = "0xF505F8")]
	private void RemoveAvatarComponent(string name)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0xF506EC", Offset = "0xF506EC", VA = "0xF506EC")]
	private void UpdateSDKAvatarUnityState()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0xF517C0", Offset = "0xF517C0", VA = "0xF517C0")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0xF51AAC", Offset = "0xF51AAC", VA = "0xF51AAC")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0xF51C50", Offset = "0xF51C50", VA = "0xF51C50")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0xF51F64", Offset = "0xF51F64", VA = "0xF51F64")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0xF52058", Offset = "0xF52058", VA = "0xF52058")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0xF52730", Offset = "0xF52730", VA = "0xF52730")]
	private void Start()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0xF52A80", Offset = "0xF52A80", VA = "0xF52A80")]
	private void Update()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0xF52CD0", Offset = "0xF52CD0", VA = "0xF52CD0")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0xF52D18", Offset = "0xF52D18", VA = "0xF52D18")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xF52244", Offset = "0xF52244", VA = "0xF52244")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0xF522BC", Offset = "0xF522BC", VA = "0xF522BC")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xF52D48", Offset = "0xF52D48", VA = "0xF52D48")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xF52CC0", Offset = "0xF52CC0", VA = "0xF52CC0")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xF52FAC", Offset = "0xF52FAC", VA = "0xF52FAC")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xF52DB8", Offset = "0xF52DB8", VA = "0xF52DB8")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xF4E99C", Offset = "0xF4E99C", VA = "0xF4E99C")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xF53AD8", Offset = "0xF53AD8", VA = "0xF53AD8")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xF53EA0", Offset = "0xF53EA0", VA = "0xF53EA0")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xF53EAC", Offset = "0xF53EAC", VA = "0xF53EAC")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xF540EC", Offset = "0xF540EC", VA = "0xF540EC")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xF541E8", Offset = "0xF541E8", VA = "0xF541E8")]
	public Transform GetMouthTransform()
	{
		return null;
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xF512E4", Offset = "0xF512E4", VA = "0xF512E4")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xF54300", Offset = "0xF54300", VA = "0xF54300")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x200013B")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xF54900", Offset = "0xF54900", VA = "0xF54900")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x200013C")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xF54968", Offset = "0xF54968", VA = "0xF54968")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xF55FC0", Offset = "0xF55FC0", VA = "0xF55FC0")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x200013D")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x400093B")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xF56790", Offset = "0xF56790", VA = "0xF56790")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200013E")]
public class OvrAvatarBase : MonoBehaviour
{
	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xF569D4", Offset = "0xF569D4", VA = "0xF569D4")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200013F")]
public class OvrAvatarBody : MonoBehaviour
{
	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xF569DC", Offset = "0xF569DC", VA = "0xF569DC", Slot = "4")]
	public virtual void UpdatePose(float voiceAmplitude)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xF569E0", Offset = "0xF569E0", VA = "0xF569E0")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000140")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong ClothingAlphaTexture;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 ClothingAlphaOffset;

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xF4FCCC", Offset = "0xF4FCCC", VA = "0xF4FCCC")]
	public void UpdateAvatar(ovrAvatarComponent component, OvrAvatar avatar)
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xF5702C", Offset = "0xF5702C", VA = "0xF5702C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xF570CC", Offset = "0xF570CC", VA = "0xF570CC")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xF57CDC", Offset = "0xF57CDC", VA = "0xF57CDC")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xF57DC8", Offset = "0xF57DC8", VA = "0xF57DC8")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000141")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x200051F")]
	public enum PacketMode
	{
		[Token(Token = "0x4001F59")]
		SDK,
		[Token(Token = "0x4001F5A")]
		Unity
	}

	[Token(Token = "0x2000520")]
	public struct ControllerPose
	{
		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0xF59C0C", Offset = "0xF59C0C", VA = "0xF59C0C")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000521")]
	public struct PoseFrame
	{
		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0xF535D4", Offset = "0xF535D4", VA = "0xF535D4")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xF53244", Offset = "0xF53244", VA = "0xF53244")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60008EA")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xF597C8", Offset = "0xF597C8", VA = "0xF597C8")]
	protected void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xF59AE4", Offset = "0xF59AE4", VA = "0xF59AE4")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xF59B80", Offset = "0xF59B80", VA = "0xF59B80")]
	private ovrAvatarControllerType GetRemoteControllerType()
	{
		return default(ovrAvatarControllerType);
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xF59C04", Offset = "0xF59C04", VA = "0xF59C04")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x2000142")]
public class OvrAvatarHand : MonoBehaviour
{
	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xF59D64", Offset = "0xF59D64", VA = "0xF59D64")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x2000143")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float voiceAmplitude;

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xF59D6C", Offset = "0xF59D6C", VA = "0xF59D6C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xF59E98", Offset = "0xF59E98", VA = "0xF59E98")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xF5A1F4", Offset = "0xF5A1F4", VA = "0xF5A1F4")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xF5A580", Offset = "0xF5A580", VA = "0xF5A580", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xF5A5AC", Offset = "0xF5A5AC", VA = "0xF5A5AC")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000144")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000522")]
	public enum TextureType
	{
		[Token(Token = "0x4001F6B")]
		DiffuseTextures,
		[Token(Token = "0x4001F6C")]
		NormalMaps,
		[Token(Token = "0x4001F6D")]
		RoughnessMaps,
		[Token(Token = "0x4001F6E")]
		Count
	}

	[Serializable]
	[Token(Token = "0x2000523")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E699C", Offset = "0x8E699C")]
		public float DiffuseIntensity;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E69B4", Offset = "0x8E69B4")]
		public float RimIntensity;

		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E69CC", Offset = "0x8E69CC")]
		public float BacklightIntensity;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E69E4", Offset = "0x8E69E4")]
		public float ReflectionIntensity;
	}

	[Serializable]
	[Token(Token = "0x2000524")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Serializable]
	[Token(Token = "0x2000525")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] BacklightIntensities;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000526")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0xF5CB18", Offset = "0xF5CB18", VA = "0xF5CB18")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000527")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCCD4", Offset = "0x8CCCD4")]
	private sealed class <RunLoadingAnimation>d__44 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x1700027A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023A9")]
			[Address(RVA = "0xF5CAA0", Offset = "0xF5CAA0", VA = "0xF5CAA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023AB")]
			[Address(RVA = "0xF5CB10", Offset = "0xF5CB10", VA = "0xF5CB10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0xF5C2E8", Offset = "0xF5C2E8", VA = "0xF5C2E8")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0xF5C604", Offset = "0xF5C604", VA = "0xF5C604", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0xF5C608", Offset = "0xF5C608", VA = "0xF5C608", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0xF5CAA8", Offset = "0xF5CAA8", VA = "0xF5CAA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D[] DiffuseFallbacks;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D[] NormalFallbacks;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer TargetRenderer;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarTextureCopyManager TextureCopyManager;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color[] BodyColorTints;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AvatarMaterialConfig DefaultAvatarConfig;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AvatarMaterialPropertyBlock LocalAvatarMaterialPropertyBlock;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int RENDER_QUEUE;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_COMBINED;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_BACKLIGHTINTENSITY;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000965")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000966")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000967")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000968")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xF5A5B4", Offset = "0xF5A5B4", VA = "0xF5A5B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xF5A624", Offset = "0xF5A624", VA = "0xF5A624")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xF5A74C", Offset = "0xF5A74C", VA = "0xF5A74C")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xF5A788", Offset = "0xF5A788", VA = "0xF5A788")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xF5A7C4", Offset = "0xF5A7C4", VA = "0xF5A7C4")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xF5B120", Offset = "0xF5B120", VA = "0xF5B120")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xF5AD18", Offset = "0xF5AD18", VA = "0xF5AD18")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xF5B3FC", Offset = "0xF5B3FC", VA = "0xF5B3FC")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xF5B7D8", Offset = "0xF5B7D8", VA = "0xF5B7D8")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xF5B908", Offset = "0xF5B908", VA = "0xF5B908")]
	public void ValidateTextures()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xF5B0AC", Offset = "0xF5B0AC", VA = "0xF5B0AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E90FC", Offset = "0x8E90FC")]
	private IEnumerator RunLoadingAnimation()
	{
		return null;
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xF5C314", Offset = "0xF5C314", VA = "0xF5C314")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000145")]
public class OvrAvatarMeshInstance : MonoBehaviour
{
	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HashSet<ulong> AssetsToLoad;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ulong MeshID;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ulong MaterialID;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ulong FadeTextureID;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarBodyPartType MeshType;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ovrAvatarMaterialState MaterialState;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private MeshFilter Mesh;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private MeshRenderer MeshInstance;

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xF5CB20", Offset = "0xF5CB20", VA = "0xF5CB20")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xF5DB80", Offset = "0xF5DB80", VA = "0xF5DB80")]
	public void SetMeshAssets(ulong fadeTexture, ulong meshID, ulong materialID, ovrAvatarBodyPartType type)
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xF5CBF0", Offset = "0xF5CBF0", VA = "0xF5CBF0")]
	private void HandleAssetAvailable(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xF5DDF0", Offset = "0xF5DDF0", VA = "0xF5DDF0")]
	public void ChangeMaterial(ulong assetID)
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xF5DC34", Offset = "0xF5DC34", VA = "0xF5DC34")]
	private void RequestAsset(ulong assetID)
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xF5DD4C", Offset = "0xF5DD4C", VA = "0xF5DD4C")]
	private void RequestMaterialTextures()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xF5DDF8", Offset = "0xF5DDF8", VA = "0xF5DDF8")]
	public void SetActive(bool active)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xF5CF74", Offset = "0xF5CF74", VA = "0xF5CF74")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xF5DE5C", Offset = "0xF5DE5C", VA = "0xF5DE5C")]
	public OvrAvatarMeshInstance()
	{
	}
}
[Token(Token = "0x2000146")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x1700007B")]
	public float Duration
	{
		[Token(Token = "0x600090B")]
		[Address(RVA = "0xF533A4", Offset = "0xF533A4", VA = "0xF533A4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700007C")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x600090C")]
		[Address(RVA = "0xF53524", Offset = "0xF53524", VA = "0xF53524")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xF53A14", Offset = "0xF53A14", VA = "0xF53A14")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xF53254", Offset = "0xF53254", VA = "0xF53254")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xF5DE64", Offset = "0xF5DE64", VA = "0xF5DE64")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xF53444", Offset = "0xF53444", VA = "0xF53444")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xF5DF40", Offset = "0xF5DF40", VA = "0xF5DF40")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xF5E170", Offset = "0xF5E170", VA = "0xF5E170")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xF5E3F0", Offset = "0xF5E3F0", VA = "0xF5E3F0")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000147")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000914")]
	[Address(RVA = "0xF486C0", Offset = "0xF486C0", VA = "0xF486C0")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xF487E4", Offset = "0xF487E4", VA = "0xF487E4")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xF48A70", Offset = "0xF48A70", VA = "0xF48A70")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xF48898", Offset = "0xF48898", VA = "0xF48898")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xF48974", Offset = "0xF48974", VA = "0xF48974")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000148")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000919")]
	[Address(RVA = "0xF48230", Offset = "0xF48230", VA = "0xF48230")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xF48654", Offset = "0xF48654", VA = "0xF48654")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xF483D8", Offset = "0xF483D8", VA = "0xF483D8")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xF4846C", Offset = "0xF4846C", VA = "0xF4846C")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xF48530", Offset = "0xF48530", VA = "0xF48530")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000149")]
public class OvrAvatarProjectorRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material material;

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xF4F83C", Offset = "0xF4F83C", VA = "0xF4F83C")]
	internal void InitializeProjectorRender(ovrAvatarRenderPart_ProjectorRender render, Shader shader, OvrAvatarRenderComponent target)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xF56D40", Offset = "0xF56D40", VA = "0xF56D40")]
	internal void UpdateProjectorRender(OvrAvatarComponent component, ovrAvatarRenderPart_ProjectorRender render)
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xF5E740", Offset = "0xF5E740", VA = "0xF5E740")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xF5ED08", Offset = "0xF5ED08", VA = "0xF5ED08")]
	public OvrAvatarProjectorRenderComponent()
	{
	}
}
[Token(Token = "0x200014A")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000979")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400097A")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xF5ED28", Offset = "0xF5ED28", VA = "0xF5ED28")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xF5EDBC", Offset = "0xF5EDBC", VA = "0xF5EDBC", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xF5EDD8", Offset = "0xF5EDD8", VA = "0xF5EDD8")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xF5EF9C", Offset = "0xF5EF9C", VA = "0xF5EF9C")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xF5F1E4", Offset = "0xF5F1E4", VA = "0xF5F1E4")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x200014B")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xF5F25C", Offset = "0xF5F25C", VA = "0xF5F25C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xF5F2FC", Offset = "0xF5F2FC", VA = "0xF5F2FC")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer, int sortingOrder)
	{
		return null;
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xF5F56C", Offset = "0xF5F56C", VA = "0xF5F56C")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xF5E63C", Offset = "0xF5E63C", VA = "0xF5E63C")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xF5ED18", Offset = "0xF5ED18", VA = "0xF5ED18")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x200014C")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000982")]
	Body = 1,
	[Token(Token = "0x4000983")]
	Hands = 2,
	[Token(Token = "0x4000984")]
	Base = 4,
	[Token(Token = "0x4000985")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000986")]
	All = -1
}
[Token(Token = "0x200014D")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000988")]
	AvatarSpecification,
	[Token(Token = "0x4000989")]
	AssetLoaded,
	[Token(Token = "0x400098A")]
	Count
}
[Token(Token = "0x200014E")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200014F")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000150")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000990")]
	Mesh,
	[Token(Token = "0x4000991")]
	Texture,
	[Token(Token = "0x4000992")]
	Pose,
	[Token(Token = "0x4000993")]
	Material,
	[Token(Token = "0x4000994")]
	CombinedMesh,
	[Token(Token = "0x4000995")]
	PBSMaterial,
	[Token(Token = "0x4000996")]
	Count
}
[Token(Token = "0x2000151")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x2000152")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x2000153")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000154")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000155")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40009C2")]
	RGB24,
	[Token(Token = "0x40009C3")]
	DXT1,
	[Token(Token = "0x40009C4")]
	DXT5,
	[Token(Token = "0x40009C5")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40009C6")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40009C7")]
	Count
}
[Token(Token = "0x2000156")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000157")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40009CF")]
	SkinnedMeshRender,
	[Token(Token = "0x40009D0")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40009D1")]
	ProjectorRender,
	[Token(Token = "0x40009D2")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40009D3")]
	Count
}
[Token(Token = "0x2000158")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000159")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40009D8")]
	One = 1,
	[Token(Token = "0x40009D9")]
	Two = 2,
	[Token(Token = "0x40009DA")]
	Three = 4,
	[Token(Token = "0x40009DB")]
	Joystick = 8
}
[Token(Token = "0x200015A")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40009DD")]
	One = 1,
	[Token(Token = "0x40009DE")]
	Two = 2,
	[Token(Token = "0x40009DF")]
	Joystick = 4,
	[Token(Token = "0x40009E0")]
	ThumbRest = 8,
	[Token(Token = "0x40009E1")]
	Index = 0x10,
	[Token(Token = "0x40009E2")]
	Pointing = 0x40,
	[Token(Token = "0x40009E3")]
	ThumbUp = 0x80
}
[Token(Token = "0x200015B")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x200015C")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x200015D")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200015E")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200015F")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000160")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x2000161")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40009FB")]
	Add,
	[Token(Token = "0x40009FC")]
	Multiply,
	[Token(Token = "0x40009FD")]
	Count
}
[Token(Token = "0x2000162")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40009FF")]
	Color,
	[Token(Token = "0x4000A00")]
	Texture,
	[Token(Token = "0x4000A01")]
	TextureSingleChannel,
	[Token(Token = "0x4000A02")]
	Parallax,
	[Token(Token = "0x4000A03")]
	Count
}
[Token(Token = "0x2000163")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x4000A05")]
	None,
	[Token(Token = "0x4000A06")]
	Positional,
	[Token(Token = "0x4000A07")]
	ViewReflection,
	[Token(Token = "0x4000A08")]
	Fresnel,
	[Token(Token = "0x4000A09")]
	Pulse,
	[Token(Token = "0x4000A0A")]
	Count
}
[Token(Token = "0x2000164")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000A0C")]
	Touch,
	[Token(Token = "0x4000A0D")]
	Malibu,
	[Token(Token = "0x4000A0E")]
	Go,
	[Token(Token = "0x4000A0F")]
	Count
}
[Token(Token = "0x2000165")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000A11")]
	Lowest = 1,
	[Token(Token = "0x4000A12")]
	Medium = 3,
	[Token(Token = "0x4000A13")]
	Highest = 5
}
[Token(Token = "0x2000166")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000A15")]
	Unknown = -1,
	[Token(Token = "0x4000A16")]
	One,
	[Token(Token = "0x4000A17")]
	Two
}
[Token(Token = "0x2000167")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x1C8D608", Offset = "0x1C8D608", VA = "0x1C8D608")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x9C2E40", Offset = "0x9C2E40", VA = "0x9C2E40", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x9C2E48", Offset = "0x9C2E48", VA = "0x9C2E48", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000168")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x1C8D938", Offset = "0x1C8D938", VA = "0x1C8D938")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x9C30E8", Offset = "0x9C30E8", VA = "0x9C30E8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x9C30F0", Offset = "0x9C30F0", VA = "0x9C30F0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000169")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x1C8DE98", Offset = "0x1C8DE98", VA = "0x1C8DE98")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x9C39A0", Offset = "0x9C39A0", VA = "0x9C39A0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x9C39A8", Offset = "0x9C39A8", VA = "0x9C39A8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x200016A")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xF54908", Offset = "0xF54908", VA = "0xF54908")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x200016B")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x200016C")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000A43")]
	FirstPerson = 1,
	[Token(Token = "0x4000A44")]
	ThirdPerson = 2,
	[Token(Token = "0x4000A45")]
	SelfOccluding = 4
}
[Token(Token = "0x200016D")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200016E")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200016F")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x2000170")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000171")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000A5B")]
	Default,
	[Token(Token = "0x4000A5C")]
	GripSphere,
	[Token(Token = "0x4000A5D")]
	GripCube,
	[Token(Token = "0x4000A5E")]
	Count
}
[Token(Token = "0x2000172")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000A60")]
	Body,
	[Token(Token = "0x4000A61")]
	Clothing,
	[Token(Token = "0x4000A62")]
	Eyewear,
	[Token(Token = "0x4000A63")]
	Hair,
	[Token(Token = "0x4000A64")]
	Beard,
	[Token(Token = "0x4000A65")]
	Count
}
[Token(Token = "0x2000173")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000174")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000175")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000176")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x1700007D")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000942")]
		[Address(RVA = "0xF52334", Offset = "0xF52334", VA = "0xF52334")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xF5F860", Offset = "0xF5F860", VA = "0xF5F860")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xF5F9A4", Offset = "0xF5F9A4", VA = "0xF5F9A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xF5F9AC", Offset = "0xF5F9AC", VA = "0xF5F9AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xF528E4", Offset = "0xF528E4", VA = "0xF528E4")]
	public void RequestAvatarSpecification(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion)
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xF52518", Offset = "0xF52518", VA = "0xF52518")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xF52634", Offset = "0xF52634", VA = "0xF52634")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xF52490", Offset = "0xF52490", VA = "0xF52490")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xF5FFB4", Offset = "0xF5FFB4", VA = "0xF5FFB4")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000177")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700007E")]
	public static string AppID
	{
		[Token(Token = "0x600094B")]
		[Address(RVA = "0xF5FFBC", Offset = "0xF5FFBC", VA = "0xF5FFBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600094C")]
		[Address(RVA = "0xF600FC", Offset = "0xF600FC", VA = "0xF600FC")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public static string GearAppID
	{
		[Token(Token = "0x600094D")]
		[Address(RVA = "0xF5F978", Offset = "0xF5F978", VA = "0xF5F978")]
		get
		{
			return null;
		}
		[Token(Token = "0x600094E")]
		[Address(RVA = "0xF6012C", Offset = "0xF6012C", VA = "0xF6012C")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x600094F")]
		[Address(RVA = "0xF5FFE8", Offset = "0xF5FFE8", VA = "0xF5FFE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000950")]
		[Address(RVA = "0xF6015C", Offset = "0xF6015C", VA = "0xF6015C")]
		set
		{
		}
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xF601B0", Offset = "0xF601B0", VA = "0xF601B0")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000178")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Shader surface;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xF4EED4", Offset = "0xF4EED4", VA = "0xF4EED4")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer, int sortOrder)
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xF569E8", Offset = "0xF569E8", VA = "0xF569E8")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xF60F44", Offset = "0xF60F44", VA = "0xF60F44")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xF610DC", Offset = "0xF610DC", VA = "0xF610DC")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000179")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x6000956")]
	[Address(RVA = "0xF4F140", Offset = "0xF4F140", VA = "0xF4F140")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer, int sortOrder)
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xF56BE0", Offset = "0xF56BE0", VA = "0xF56BE0")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xF610EC", Offset = "0xF610EC", VA = "0xF610EC")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x200017A")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OvrAvatarMaterialManager AvatarMaterialManager;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool PreviouslyActive;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool IsCombinedMaterial;

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xF4F490", Offset = "0xF4F490", VA = "0xF4F490")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, int sortOrder, bool isCombinedMaterial, ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xF56ECC", Offset = "0xF56ECC", VA = "0xF56ECC")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xF607B8", Offset = "0xF607B8", VA = "0xF607B8")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xF60208", Offset = "0xF60208", VA = "0xF60208")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xF60F34", Offset = "0xF60F34", VA = "0xF60F34")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x200017B")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Token(Token = "0x2000528")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0x9A3DE0", Offset = "0x9A3DE0", VA = "0x9A3DE0")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x2000529")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCCE4", Offset = "0x8CCCE4")]
	private sealed class <CopyTextureCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CopyTextureParams copyTextureParams;

		[Token(Token = "0x1700027C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023B0")]
			[Address(RVA = "0xF61DA4", Offset = "0xF61DA4", VA = "0xF61DA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023B2")]
			[Address(RVA = "0xF61E14", Offset = "0xF61E14", VA = "0xF61E14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0xF61C68", Offset = "0xF61C68", VA = "0xF61C68")]
		[DebuggerHidden]
		public <CopyTextureCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0xF61C94", Offset = "0xF61C94", VA = "0xF61C94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0xF61C98", Offset = "0xF61C98", VA = "0xF61C98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0xF61DAC", Offset = "0xF61DAC", VA = "0xF61DAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A74")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xF61940", Offset = "0xF61940", VA = "0xF61940")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xF619B8", Offset = "0xF619B8", VA = "0xF619B8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xF5CA40", Offset = "0xF5CA40", VA = "0xF5CA40")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xF5B244", Offset = "0xF5B244", VA = "0xF5B244")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xF61B04", Offset = "0xF61B04", VA = "0xF61B04")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9200", Offset = "0x8E9200")]
	private IEnumerator CopyTextureCoroutine(CopyTextureParams copyTextureParams)
	{
		return null;
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xF61BAC", Offset = "0xF61BAC", VA = "0xF61BAC")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}
}
[Token(Token = "0x200017C")]
public class OvrAvatarTouchController : MonoBehaviour
{
	[Token(Token = "0x6000964")]
	[Address(RVA = "0xF61E1C", Offset = "0xF61E1C", VA = "0xF61E1C")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x200017D")]
public class AchievementSample : MonoBehaviour
{
	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text dataOutput;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField getDefinitionsByNameInputField;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputField getProgressByNameInputField;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputField unLockInputField;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputField addCountInputField;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InputField addFieldsInputField;

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xF30C48", Offset = "0xF30C48", VA = "0xF30C48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xF30CA8", Offset = "0xF30CA8", VA = "0xF30CA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xF30D08", Offset = "0xF30D08", VA = "0xF30D08")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xF30EF4", Offset = "0xF30EF4", VA = "0xF30EF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xF30F00", Offset = "0xF30F00", VA = "0xF30F00")]
	public void AsyncInitialize()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xF30F88", Offset = "0xF30F88", VA = "0xF30F88")]
	public void GetDefinitionsByName()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xF311A4", Offset = "0xF311A4", VA = "0xF311A4")]
	public void GetProgressByName()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0xF313C0", Offset = "0xF313C0", VA = "0xF313C0")]
	public void GetAllDefinitions()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xF314F4", Offset = "0xF314F4", VA = "0xF314F4")]
	public void GetAllProgress()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xF31628", Offset = "0xF31628", VA = "0xF31628")]
	public void UnLock()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xF317E8", Offset = "0xF317E8", VA = "0xF317E8")]
	public void AddCount()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xF31B58", Offset = "0xF31B58", VA = "0xF31B58")]
	public void AddFields()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xF30E48", Offset = "0xF30E48", VA = "0xF30E48")]
	private void achievementInit()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xF31448", Offset = "0xF31448", VA = "0xF31448")]
	private void getAchievementAllDefinition()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xF3157C", Offset = "0xF3157C", VA = "0xF3157C")]
	private void getAchievementAllProgress()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xF31CF8", Offset = "0xF31CF8", VA = "0xF31CF8")]
	private void addFieldsAchievement(string achievementName, string fields)
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xF31A70", Offset = "0xF31A70", VA = "0xF31A70")]
	private void addCountAchievement(string achievementName, string count)
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xF31734", Offset = "0xF31734", VA = "0xF31734")]
	private void unlockAchievement(string achievementName)
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xF3130C", Offset = "0xF3130C", VA = "0xF3130C")]
	private void getAchievementProgress(string[] achievementNames)
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xF310F0", Offset = "0xF310F0", VA = "0xF310F0")]
	private void getAchievementDefinition(string[] achievementNames)
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xF30D80", Offset = "0xF30D80", VA = "0xF30D80")]
	private void printOutputLine(string newLine)
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xF31DB4", Offset = "0xF31DB4", VA = "0xF31DB4")]
	private void achievementAllDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0xF326E4", Offset = "0xF326E4", VA = "0xF326E4")]
	private void achievementAllProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0xF32E00", Offset = "0xF32E00", VA = "0xF32E00")]
	private void achievementFieldsCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0xF3311C", Offset = "0xF3311C", VA = "0xF3311C")]
	private void achievementCountCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0xF33438", Offset = "0xF33438", VA = "0xF33438")]
	private void achievementUnlockCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0xF33754", Offset = "0xF33754", VA = "0xF33754")]
	private void achievementProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0xF33D4C", Offset = "0xF33D4C", VA = "0xF33D4C")]
	private void achievementDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xF343BC", Offset = "0xF343BC", VA = "0xF343BC")]
	private void initAchievementCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xF346D8", Offset = "0xF346D8", VA = "0xF346D8")]
	private void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xF34790", Offset = "0xF34790", VA = "0xF34790")]
	public AchievementSample()
	{
	}
}
[Token(Token = "0x200017E")]
public class BufferedAudioStream
{
	[Token(Token = "0x4000A7C")]
	private const bool VerboseLogging = false;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AudioSource audio;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float[] audioBuffer;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int writePos;

	[Token(Token = "0x4000A80")]
	private const float bufferLengthSeconds = 0.25f;

	[Token(Token = "0x4000A81")]
	private const int sampleRate = 48000;

	[Token(Token = "0x4000A82")]
	private const int bufferSize = 12000;

	[Token(Token = "0x4000A83")]
	private const float playbackDelayTimeSeconds = 0.05f;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float playbackDelayRemaining;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float remainingBufferTime;

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xCDECE4", Offset = "0xCDECE4", VA = "0xCDECE4")]
	public BufferedAudioStream(AudioSource audio)
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xCDEE1C", Offset = "0xCDEE1C", VA = "0xCDEE1C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xCDEDB8", Offset = "0xCDEDB8", VA = "0xCDEDB8")]
	private void Stop()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xCDF020", Offset = "0xCDF020", VA = "0xCDF020")]
	public void AddData(float[] samples)
	{
	}
}
[Token(Token = "0x200017F")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200052A")]
	public delegate void OnClick();

	[Token(Token = "0x200052B")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x200052C")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200052D")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200052E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCCF4", Offset = "0x8CCCF4")]
	private sealed class <>c__DisplayClass36_0
	{
		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x60023C3")]
		[Address(RVA = "0xC830A8", Offset = "0xC830A8", VA = "0xC830A8")]
		public <>c__DisplayClass36_0()
		{
		}

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0xC83BE0", Offset = "0xC83BE0", VA = "0xC83BE0")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200052F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD04", Offset = "0x8CCD04")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0xC833AC", Offset = "0xC833AC", VA = "0xC833AC")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0xC8400C", Offset = "0xC8400C", VA = "0xC8400C")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000530")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD14", Offset = "0x8CCD14")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0xC835F8", Offset = "0xC835F8", VA = "0xC835F8")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0xC84498", Offset = "0xC84498", VA = "0xC84498")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000531")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD24", Offset = "0x8CCD24")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0xC837CC", Offset = "0xC837CC", VA = "0xC837CC")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0xC84BFC", Offset = "0xC84BFC", VA = "0xC84BFC")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000532")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD34", Offset = "0x8CCD34")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0xC83AA8", Offset = "0xC83AA8", VA = "0xC83AA8")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0xC84C2C", Offset = "0xC84C2C", VA = "0xC84C2C")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000A86")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000A87")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000A88")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private bool manuallyResizeContentPanels;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool[] reEnable;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000A96")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000A97")]
	private const float marginH = 16f;

	[Token(Token = "0x4000A98")]
	private const float marginV = 16f;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LaserPointer lp;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LineRenderer lr;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xC81AB8", Offset = "0xC81AB8", VA = "0xC81AB8")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xC81FE0", Offset = "0xC81FE0", VA = "0xC81FE0")]
	public void Show()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xC827EC", Offset = "0xC827EC", VA = "0xC827EC")]
	public void Hide()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xC824EC", Offset = "0xC824EC", VA = "0xC824EC")]
	private void Relayout()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xC829E0", Offset = "0xC829E0", VA = "0xC829E0")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xC82D9C", Offset = "0xC82D9C", VA = "0xC82D9C")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xC830B0", Offset = "0xC830B0", VA = "0xC830B0")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xC831B8", Offset = "0xC831B8", VA = "0xC831B8")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xC833B4", Offset = "0xC833B4", VA = "0xC833B4")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xC83450", Offset = "0xC83450", VA = "0xC83450")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xC83600", Offset = "0xC83600", VA = "0xC83600")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xC837D4", Offset = "0xC837D4", VA = "0xC837D4")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xC83AB0", Offset = "0xC83AB0", VA = "0xC83AB0")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xC83B70", Offset = "0xC83B70", VA = "0xC83B70")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000180")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xC0E374", Offset = "0xC0E374", VA = "0xC0E374")]
	private void Start()
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xC0E3FC", Offset = "0xC0E3FC", VA = "0xC0E3FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xC0E47C", Offset = "0xC0E47C", VA = "0xC0E47C")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xC0E4EC", Offset = "0xC0E4EC", VA = "0xC0E4EC")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000181")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000533")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4001F93")]
		On,
		[Token(Token = "0x4001F94")]
		Off,
		[Token(Token = "0x4001F95")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _forward;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _hitTarget;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000081")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600099B")]
		[Address(RVA = "0xBC5264", Offset = "0xBC5264", VA = "0xBC5264")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600099A")]
		[Address(RVA = "0xBC5208", Offset = "0xBC5208", VA = "0xBC5208")]
		set
		{
		}
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0xBC526C", Offset = "0xBC526C", VA = "0xBC526C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0xBC52C4", Offset = "0xBC52C4", VA = "0xBC52C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0xBC5360", Offset = "0xBC5360", VA = "0xBC5360", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0xBC537C", Offset = "0xBC537C", VA = "0xBC537C", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0xBC53F4", Offset = "0xBC53F4", VA = "0xBC53F4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0xBC56D8", Offset = "0xBC56D8", VA = "0xBC56D8")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0xBC5834", Offset = "0xBC5834", VA = "0xBC5834")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0xBC58D0", Offset = "0xBC58D0", VA = "0xBC58D0")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000182")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0xCDE0A8", Offset = "0xCDE0A8", VA = "0xCDE0A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xCDE2FC", Offset = "0xCDE2FC", VA = "0xCDE2FC")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xCDE834", Offset = "0xCDE834", VA = "0xCDE834")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x2000183")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xC0DB40", Offset = "0xC0DB40", VA = "0xC0DB40")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xC0DCC0", Offset = "0xC0DCC0", VA = "0xC0DCC0")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xC0DF28", Offset = "0xC0DF28", VA = "0xC0DF28")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x2000184")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color m_boundaryColor;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_framecount;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000082")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x60009AC")]
		[Address(RVA = "0xC0E01C", Offset = "0xC0E01C", VA = "0xC0E01C")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xC0DBD4", Offset = "0xC0DBD4", VA = "0xC0DBD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9264", Offset = "0x8E9264")]
		add
		{
		}
		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xC0DF30", Offset = "0xC0DF30", VA = "0xC0DF30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9274", Offset = "0x8E9274")]
		remove
		{
		}
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0xC0E028", Offset = "0xC0E028", VA = "0xC0E028")]
	private void Start()
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xC0E1A4", Offset = "0xC0E1A4", VA = "0xC0E1A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xC0E35C", Offset = "0xC0E35C", VA = "0xC0E35C")]
	private void Recentered()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xC0E364", Offset = "0xC0E364", VA = "0xC0E364")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x2000185")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C8F8C", Offset = "0x8C8F8C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C8F8C", Offset = "0x8C8F8C")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8CBC", Offset = "0x8D8CBC")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8CF4", Offset = "0x8D8CF4")]
	public float CurrentDistance;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8D2C", Offset = "0x8D8D2C")]
	public bool EnableFadeout;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8D64", Offset = "0x8D8D64")]
	public bool EnableCollision;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8D9C", Offset = "0x8D8D9C")]
	public bool DynamicHeight;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8DD4", Offset = "0x8D8DD4")]
	public float MaxFade;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8E0C", Offset = "0x8D8E0C")]
	public float FadeMinDistance;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8E44", Offset = "0x8D8E44")]
	public float FadeMaxDistance;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CharacterController _character;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRPlayerController _playerController;

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xCE1170", Offset = "0xCE1170", VA = "0xCE1170")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xCE1234", Offset = "0xCE1234", VA = "0xCE1234")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xCE12A4", Offset = "0xCE12A4", VA = "0xCE12A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xCE130C", Offset = "0xCE130C", VA = "0xCE130C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xCE1374", Offset = "0xCE1374", VA = "0xCE1374")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xCE17D0", Offset = "0xCE17D0", VA = "0xCE17D0")]
	private void PreCharacterMovement()
	{
	}
}
[Token(Token = "0x2000186")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterController CharacterController;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRPlayerController PlayerController;

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xBC6AC0", Offset = "0xBC6AC0", VA = "0xBC6AC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xBC6BFC", Offset = "0xBC6BFC", VA = "0xBC6BFC")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000187")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000534")]
	public enum States
	{
		[Token(Token = "0x4001F97")]
		Ready,
		[Token(Token = "0x4001F98")]
		Aim,
		[Token(Token = "0x4001F99")]
		CancelAim,
		[Token(Token = "0x4001F9A")]
		PreTeleport,
		[Token(Token = "0x4001F9B")]
		CancelTeleport,
		[Token(Token = "0x4001F9C")]
		Teleporting,
		[Token(Token = "0x4001F9D")]
		PostTeleport
	}

	[Token(Token = "0x2000535")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4001F9F")]
		None,
		[Token(Token = "0x4001FA0")]
		Aim,
		[Token(Token = "0x4001FA1")]
		PreTeleport,
		[Token(Token = "0x4001FA2")]
		Teleport
	}

	[Token(Token = "0x2000536")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4001FA4")]
		Point,
		[Token(Token = "0x4001FA5")]
		Sphere,
		[Token(Token = "0x4001FA6")]
		Capsule
	}

	[Token(Token = "0x2000537")]
	public class AimData
	{
		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E69FC", Offset = "0x8E69FC")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x1700027E")]
		public List<Vector3> Points
		{
			[Token(Token = "0x60023CE")]
			[Address(RVA = "0xBCAD0C", Offset = "0xBCAD0C", VA = "0xBCAD0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECF28", Offset = "0x8ECF28")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023CF")]
			[Address(RVA = "0xBCAD04", Offset = "0xBCAD04", VA = "0xBCAD04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ECF38", Offset = "0x8ECF38")]
			private set
			{
			}
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0xBCAC90", Offset = "0xBCAC90", VA = "0xBCAC90")]
		public AimData()
		{
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0xBCAD14", Offset = "0xBCAD14", VA = "0xBCAD14")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000538")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD44", Offset = "0x8CCD44")]
	private sealed class <ReadyStateCoroutine>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700027F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023D4")]
			[Address(RVA = "0xBCAA6C", Offset = "0xBCAA6C", VA = "0xBCAA6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023D6")]
			[Address(RVA = "0xBCAADC", Offset = "0xBCAADC", VA = "0xBCAADC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0xBC86BC", Offset = "0xBC86BC", VA = "0xBC86BC")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0xBCA900", Offset = "0xBCA900", VA = "0xBCA900", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0xBCA904", Offset = "0xBCA904", VA = "0xBCA904", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0xBCAA74", Offset = "0xBCAA74", VA = "0xBCAA74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000539")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD54", Offset = "0x8CCD54")]
	private sealed class <AimStateCoroutine>d__62 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000281")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023DA")]
			[Address(RVA = "0xBCA23C", Offset = "0xBCA23C", VA = "0xBCA23C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000282")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023DC")]
			[Address(RVA = "0xBCA2AC", Offset = "0xBCA2AC", VA = "0xBCA2AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0xBC8D58", Offset = "0xBC8D58", VA = "0xBC8D58")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__62(int <>1__state)
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0xBCA070", Offset = "0xBCA070", VA = "0xBCA070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0xBCA074", Offset = "0xBCA074", VA = "0xBCA074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0xBCA244", Offset = "0xBCA244", VA = "0xBCA244", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200053A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD64", Offset = "0x8CCD64")]
	private sealed class <CancelAimStateCoroutine>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000283")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023E0")]
			[Address(RVA = "0xBCA390", Offset = "0xBCA390", VA = "0xBCA390", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000284")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023E2")]
			[Address(RVA = "0xBCA400", Offset = "0xBCA400", VA = "0xBCA400", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023DD")]
		[Address(RVA = "0xBC8FD0", Offset = "0xBC8FD0", VA = "0xBC8FD0")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0xBCA2B4", Offset = "0xBCA2B4", VA = "0xBCA2B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0xBCA2B8", Offset = "0xBCA2B8", VA = "0xBCA2B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0xBCA398", Offset = "0xBCA398", VA = "0xBCA398", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200053B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD74", Offset = "0x8CCD74")]
	private sealed class <PreTeleportStateCoroutine>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000285")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023E6")]
			[Address(RVA = "0xBCA888", Offset = "0xBCA888", VA = "0xBCA888", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000286")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023E8")]
			[Address(RVA = "0xBCA8F8", Offset = "0xBCA8F8", VA = "0xBCA8F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0xBC9248", Offset = "0xBC9248", VA = "0xBC9248")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0xBCA73C", Offset = "0xBCA73C", VA = "0xBCA73C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0xBCA740", Offset = "0xBCA740", VA = "0xBCA740", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0xBCA890", Offset = "0xBCA890", VA = "0xBCA890", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200053C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD84", Offset = "0x8CCD84")]
	private sealed class <CancelTeleportStateCoroutine>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000287")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023EC")]
			[Address(RVA = "0xBCA4E4", Offset = "0xBCA4E4", VA = "0xBCA4E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000288")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023EE")]
			[Address(RVA = "0xBCA554", Offset = "0xBCA554", VA = "0xBCA554", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0xBC94C0", Offset = "0xBC94C0", VA = "0xBC94C0")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0xBCA408", Offset = "0xBCA408", VA = "0xBCA408", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0xBCA40C", Offset = "0xBCA40C", VA = "0xBCA40C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0xBCA4EC", Offset = "0xBCA4EC", VA = "0xBCA4EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200053D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCD94", Offset = "0x8CCD94")]
	private sealed class <TeleportingStateCoroutine>d__78 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000289")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023F2")]
			[Address(RVA = "0xBCAC18", Offset = "0xBCAC18", VA = "0xBCAC18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023F4")]
			[Address(RVA = "0xBCAC88", Offset = "0xBCAC88", VA = "0xBCAC88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0xBC9738", Offset = "0xBC9738", VA = "0xBC9738")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__78(int <>1__state)
		{
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0xBCAAE4", Offset = "0xBCAAE4", VA = "0xBCAAE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0xBCAAE8", Offset = "0xBCAAE8", VA = "0xBCAAE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0xBCAC20", Offset = "0xBCAC20", VA = "0xBCAC20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200053E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCDA4", Offset = "0x8CCDA4")]
	private sealed class <PostTeleportStateCoroutine>d__82 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700028B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023F8")]
			[Address(RVA = "0xBCA6C4", Offset = "0xBCA6C4", VA = "0xBCA6C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023FA")]
			[Address(RVA = "0xBCA734", Offset = "0xBCA734", VA = "0xBCA734", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0xBC99B0", Offset = "0xBC99B0", VA = "0xBC99B0")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__82(int <>1__state)
		{
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0xBCA55C", Offset = "0xBCA55C", VA = "0xBCA55C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0xBCA560", Offset = "0xBCA560", VA = "0xBCA560", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023F9")]
		[Address(RVA = "0xBCA6CC", Offset = "0xBCA6CC", VA = "0xBCA6CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8E7C", Offset = "0x8D8E7C")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8EB4", Offset = "0x8D8EB4")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8EEC", Offset = "0x8D8EEC")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8F24", Offset = "0x8D8F24")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8F5C", Offset = "0x8D8F5C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8F94", Offset = "0x8D8F94")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8FCC", Offset = "0x8D8FCC")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9004", Offset = "0x8D9004")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D903C", Offset = "0x8D903C")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D904C", Offset = "0x8D904C")]
	public TeleportDestination TeleportDestinationPrefab;

	[NonSerialized]
	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9094", Offset = "0x8D9094")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D90A4", Offset = "0x8D90A4")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D90DC", Offset = "0x8D90DC")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9114", Offset = "0x8D9114")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D914C", Offset = "0x8D914C")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000083")]
	public States CurrentState
	{
		[Token(Token = "0x60009BB")]
		[Address(RVA = "0xBC79E8", Offset = "0xBC79E8", VA = "0xBC79E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9284", Offset = "0x8E9284")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xBC79F0", Offset = "0xBC79F0", VA = "0xBC79F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9294", Offset = "0x8E9294")]
		private set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xBC7CB0", Offset = "0xBC7CB0", VA = "0xBC7CB0")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000085")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xBC7CF0", Offset = "0xBC7CF0", VA = "0xBC7CF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E92C4", Offset = "0x8E92C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009C2")]
		[Address(RVA = "0xBC7CF8", Offset = "0xBC7CF8", VA = "0xBC7CF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E92D4", Offset = "0x8E92D4")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xBC79F8", Offset = "0xBC79F8", VA = "0xBC79F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E92A4", Offset = "0x8E92A4")]
		add
		{
		}
		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xBC7AE4", Offset = "0xBC7AE4", VA = "0xBC7AE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E92B4", Offset = "0x8E92B4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60009CB")]
		[Address(RVA = "0xBC84E4", Offset = "0xBC84E4", VA = "0xBC84E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E931C", Offset = "0x8E931C")]
		add
		{
		}
		[Token(Token = "0x60009CC")]
		[Address(RVA = "0xBC85D0", Offset = "0xBC85D0", VA = "0xBC85D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E932C", Offset = "0x8E932C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xBC86E8", Offset = "0xBC86E8", VA = "0xBC86E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E93A0", Offset = "0x8E93A0")]
		add
		{
		}
		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xBC87D4", Offset = "0xBC87D4", VA = "0xBC87D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E93B0", Offset = "0x8E93B0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xBC88C0", Offset = "0xBC88C0", VA = "0xBC88C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E93C0", Offset = "0x8E93C0")]
		add
		{
		}
		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xBC89AC", Offset = "0xBC89AC", VA = "0xBC89AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E93D0", Offset = "0x8E93D0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xBC8B0C", Offset = "0xBC8B0C", VA = "0xBC8B0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E93E0", Offset = "0x8E93E0")]
		add
		{
		}
		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xBC8BF8", Offset = "0xBC8BF8", VA = "0xBC8BF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E93F0", Offset = "0x8E93F0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xBC8D84", Offset = "0xBC8D84", VA = "0xBC8D84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9464", Offset = "0x8E9464")]
		add
		{
		}
		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xBC8E70", Offset = "0xBC8E70", VA = "0xBC8E70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9474", Offset = "0x8E9474")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xBC8FFC", Offset = "0xBC8FFC", VA = "0xBC8FFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E94E8", Offset = "0x8E94E8")]
		add
		{
		}
		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xBC90E8", Offset = "0xBC90E8", VA = "0xBC90E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E94F8", Offset = "0x8E94F8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xBC9274", Offset = "0xBC9274", VA = "0xBC9274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E956C", Offset = "0x8E956C")]
		add
		{
		}
		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xBC9360", Offset = "0xBC9360", VA = "0xBC9360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E957C", Offset = "0x8E957C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xBC94EC", Offset = "0xBC94EC", VA = "0xBC94EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E95F0", Offset = "0x8E95F0")]
		add
		{
		}
		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xBC95D8", Offset = "0xBC95D8", VA = "0xBC95D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9600", Offset = "0x8E9600")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xBC9764", Offset = "0xBC9764", VA = "0xBC9764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9674", Offset = "0x8E9674")]
		add
		{
		}
		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xBC9850", Offset = "0xBC9850", VA = "0xBC9850")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9684", Offset = "0x8E9684")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xBC99DC", Offset = "0xBC99DC", VA = "0xBC99DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E96F8", Offset = "0x8E96F8")]
		add
		{
		}
		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xBC9AC8", Offset = "0xBC9AC8", VA = "0xBC9AC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9708", Offset = "0x8E9708")]
		remove
		{
		}
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xBC7510", Offset = "0xBC7510", VA = "0xBC7510")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xBC7534", Offset = "0xBC7534", VA = "0xBC7534")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0xBC7BD0", Offset = "0xBC7BD0", VA = "0xBC7BD0")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0xBC7D00", Offset = "0xBC7D00", VA = "0xBC7D00")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xBC80D4", Offset = "0xBC80D4", VA = "0xBC80D4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E92E4", Offset = "0x8E92E4")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xBC818C", Offset = "0xBC818C", VA = "0xBC818C")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xBC826C", Offset = "0xBC826C", VA = "0xBC826C")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xBC829C", Offset = "0xBC829C", VA = "0xBC829C")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xBC8368", Offset = "0xBC8368", VA = "0xBC8368")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xBC83E4", Offset = "0xBC83E4", VA = "0xBC83E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xBC8440", Offset = "0xBC8440", VA = "0xBC8440", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xBC8470", Offset = "0xBC8470", VA = "0xBC8470")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E933C", Offset = "0x8E933C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0xBC8A98", Offset = "0xBC8A98", VA = "0xBC8A98")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0xBC8CE4", Offset = "0xBC8CE4", VA = "0xBC8CE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9400", Offset = "0x8E9400")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xBC8F5C", Offset = "0xBC8F5C", VA = "0xBC8F5C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9484", Offset = "0x8E9484")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0xBC91D4", Offset = "0xBC91D4", VA = "0xBC91D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9508", Offset = "0x8E9508")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xBC944C", Offset = "0xBC944C", VA = "0xBC944C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E958C", Offset = "0x8E958C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xBC96C4", Offset = "0xBC96C4", VA = "0xBC96C4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9610", Offset = "0x8E9610")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0xBC993C", Offset = "0xBC993C", VA = "0xBC993C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9694", Offset = "0x8E9694")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xBC9BB4", Offset = "0xBC9BB4", VA = "0xBC9BB4")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xBC9D84", Offset = "0xBC9D84", VA = "0xBC9D84")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xBC9DDC", Offset = "0xBC9DDC", VA = "0xBC9DDC")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xBC9EA4", Offset = "0xBC9EA4", VA = "0xBC9EA4")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xBCA060", Offset = "0xBCA060", VA = "0xBCA060")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000188")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xB2AA60", Offset = "0xB2AA60", VA = "0xB2AA60", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xB2AB00", Offset = "0xB2AB00", VA = "0xB2AB00", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60009EE")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xB2ABDC", Offset = "0xB2ABDC", VA = "0xB2ABDC")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000189")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9224", Offset = "0x8D9224")]
	public float Range;

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xB2ABEC", Offset = "0xB2ABEC", VA = "0xB2ABEC", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xB2AD9C", Offset = "0xB2AD9C", VA = "0xB2AD9C")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200018A")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D925C", Offset = "0x8D925C")]
	public float Range;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9294", Offset = "0x8D9294")]
	public float MinimumElevation;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D92CC", Offset = "0x8D92CC")]
	public float Gravity;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9304", Offset = "0x8D9304")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9304", Offset = "0x8D9304")]
	public float AimVelocity;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9360", Offset = "0x8D9360")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9360", Offset = "0x8D9360")]
	public float AimStep;

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xB2ADAC", Offset = "0xB2ADAC", VA = "0xB2ADAC", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xB2B010", Offset = "0xB2B010", VA = "0xB2B010")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x200018B")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D93B8", Offset = "0x8D93B8")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xB2B024", Offset = "0xB2B024", VA = "0xB2B024")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xB2B108", Offset = "0xB2B108", VA = "0xB2B108")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xB2B154", Offset = "0xB2B154", VA = "0xB2B154")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xB2B1A0", Offset = "0xB2B1A0", VA = "0xB2B1A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xB2B254", Offset = "0xB2B254", VA = "0xB2B254", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xB2B2F4", Offset = "0xB2B2F4", VA = "0xB2B2F4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xB2B390", Offset = "0xB2B390", VA = "0xB2B390")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x200018C")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D93F0", Offset = "0x8D93F0")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9400", Offset = "0x8D9400")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9438", Offset = "0x8D9438")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9470", Offset = "0x8D9470")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000086")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xB2B54C", Offset = "0xB2B54C", VA = "0xB2B54C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9718", Offset = "0x8E9718")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xB2B554", Offset = "0xB2B554", VA = "0xB2B554")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9728", Offset = "0x8E9728")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xB2B764", Offset = "0xB2B764", VA = "0xB2B764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9738", Offset = "0x8E9738")]
		add
		{
		}
		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xB2B850", Offset = "0xB2B850", VA = "0xB2B850")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9748", Offset = "0x8E9748")]
		remove
		{
		}
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xB2B560", Offset = "0xB2B560", VA = "0xB2B560")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xB2B5F0", Offset = "0xB2B5F0", VA = "0xB2B5F0")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xB2B70C", Offset = "0xB2B70C", VA = "0xB2B70C")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xB2B760", Offset = "0xB2B760", VA = "0xB2B760")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xB2B93C", Offset = "0xB2B93C", VA = "0xB2B93C")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xB2B9A4", Offset = "0xB2B9A4", VA = "0xB2B9A4")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xB2B9DC", Offset = "0xB2B9DC", VA = "0xB2B9DC", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200018D")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200053F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCDB4", Offset = "0x8CCDB4")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700028D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023FE")]
			[Address(RVA = "0xB2C234", Offset = "0xB2C234", VA = "0xB2C234", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002400")]
			[Address(RVA = "0xB2C2A4", Offset = "0xB2C2A4", VA = "0xB2C2A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0xB2BF4C", Offset = "0xB2BF4C", VA = "0xB2BF4C")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0xB2C198", Offset = "0xB2C198", VA = "0xB2C198", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0xB2C19C", Offset = "0xB2C19C", VA = "0xB2C19C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0xB2C23C", Offset = "0xB2C23C", VA = "0xB2C23C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000540")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCDC4", Offset = "0x8CCDC4")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x1700028F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002404")]
			[Address(RVA = "0xB2C120", Offset = "0xB2C120", VA = "0xB2C120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002406")]
			[Address(RVA = "0xB2C190", Offset = "0xB2C190", VA = "0xB2C190", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002401")]
		[Address(RVA = "0xB2BFEC", Offset = "0xB2BFEC", VA = "0xB2BFEC")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0xB2C070", Offset = "0xB2C070", VA = "0xB2C070", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0xB2C074", Offset = "0xB2C074", VA = "0xB2C074", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0xB2C128", Offset = "0xB2C128", VA = "0xB2C128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xB2BCB8", Offset = "0xB2BCB8", VA = "0xB2BCB8")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xB2BD64", Offset = "0xB2BD64", VA = "0xB2BD64", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xB2BDE8", Offset = "0xB2BDE8", VA = "0xB2BDE8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xB2BED8", Offset = "0xB2BED8", VA = "0xB2BED8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9758", Offset = "0x8E9758")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xB2BF78", Offset = "0xB2BF78", VA = "0xB2BF78")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E97BC", Offset = "0x8E97BC")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A0B")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000A0C")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xB2C018", Offset = "0xB2C018", VA = "0xB2C018")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9820", Offset = "0x8E9820")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xB2C044", Offset = "0xB2C044", VA = "0xB2C044")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9830", Offset = "0x8E9830")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200018E")]
public class TeleportInputHandlerAvatarTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000541")]
	public enum InputModes
	{
		[Token(Token = "0x4001FC8")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001FC9")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4001FCA")]
		ThumbstickTeleport,
		[Token(Token = "0x4001FCB")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000542")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001FCD")]
		A,
		[Token(Token = "0x4001FCE")]
		B,
		[Token(Token = "0x4001FCF")]
		LeftTrigger,
		[Token(Token = "0x4001FD0")]
		LeftThumbstick,
		[Token(Token = "0x4001FD1")]
		RightTrigger,
		[Token(Token = "0x4001FD2")]
		RightThumbstick,
		[Token(Token = "0x4001FD3")]
		X,
		[Token(Token = "0x4001FD4")]
		Y
	}

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D94B8", Offset = "0x8D94B8")]
	public OvrAvatar Avatar;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D94F0", Offset = "0x8D94F0")]
	public InputModes InputMode;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9528", Offset = "0x8D9528")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9560", Offset = "0x8D9560")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9598", Offset = "0x8D9598")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xB2C2AC", Offset = "0xB2C2AC", VA = "0xB2C2AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xB2C38C", Offset = "0xB2C38C", VA = "0xB2C38C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xB2C9AC", Offset = "0xB2C9AC", VA = "0xB2C9AC", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xB2CAAC", Offset = "0xB2CAAC", VA = "0xB2CAAC")]
	public TeleportInputHandlerAvatarTouch()
	{
	}
}
[Token(Token = "0x200018F")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D95D0", Offset = "0x8D95D0")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D95E0", Offset = "0x8D95E0")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9618", Offset = "0x8D9618")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9650", Offset = "0x8D9650")]
	public bool FastTeleport;

	[Token(Token = "0x17000087")]
	public Transform Pointer
	{
		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xB2CB5C", Offset = "0xB2CB5C", VA = "0xB2CB5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9840", Offset = "0x8E9840")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xB2CB64", Offset = "0xB2CB64", VA = "0xB2CB64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9850", Offset = "0x8E9850")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xB2C844", Offset = "0xB2C844", VA = "0xB2C844", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xB2CB6C", Offset = "0xB2CB6C", VA = "0xB2CB6C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xB2CB58", Offset = "0xB2CB58", VA = "0xB2CB58")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000190")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000543")]
	public enum OrientationModes
	{
		[Token(Token = "0x4001FD6")]
		HeadRelative,
		[Token(Token = "0x4001FD7")]
		ForwardFacing
	}

	[Token(Token = "0x2000544")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCDD4", Offset = "0x8CCDD4")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000291")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600240A")]
			[Address(RVA = "0xB2D100", Offset = "0xB2D100", VA = "0xB2D100", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000292")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600240C")]
			[Address(RVA = "0xB2D170", Offset = "0xB2D170", VA = "0xB2D170", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0xB2CE68", Offset = "0xB2CE68", VA = "0xB2CE68")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0xB2D014", Offset = "0xB2D014", VA = "0xB2D014", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0xB2D018", Offset = "0xB2D018", VA = "0xB2D018", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600240B")]
		[Address(RVA = "0xB2D108", Offset = "0xB2D108", VA = "0xB2D108", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xB2CC5C", Offset = "0xB2CC5C", VA = "0xB2CC5C")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xB2CD10", Offset = "0xB2CD10", VA = "0xB2CD10")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xB2CD18", Offset = "0xB2CD18", VA = "0xB2CD18", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xB2CD88", Offset = "0xB2CD88", VA = "0xB2CD88", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xB2CDF4", Offset = "0xB2CDF4", VA = "0xB2CDF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9860", Offset = "0x8E9860")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A1D")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000A1E")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0xB2CE94", Offset = "0xB2CE94", VA = "0xB2CE94")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0xB2CFE8", Offset = "0xB2CFE8", VA = "0xB2CFE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E98C4", Offset = "0x8E98C4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000191")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000A21")]
	[Address(RVA = "0xB2D178", Offset = "0xB2D178", VA = "0xB2D178", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0xB2D17C", Offset = "0xB2D17C", VA = "0xB2D17C", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0xB2D238", Offset = "0xB2D238", VA = "0xB2D238")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000192")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9688", Offset = "0x8D9688")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D96C0", Offset = "0x8D96C0")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D96F8", Offset = "0x8D96F8")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9730", Offset = "0x8D9730")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0xB2D23C", Offset = "0xB2D23C", VA = "0xB2D23C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0xB2D2AC", Offset = "0xB2D2AC", VA = "0xB2D2AC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0xB2D818", Offset = "0xB2D818", VA = "0xB2D818")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000193")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9768", Offset = "0x8D9768")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D97A0", Offset = "0x8D97A0")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D97D8", Offset = "0x8D97D8")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xB2D81C", Offset = "0xB2D81C", VA = "0xB2D81C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xB2D868", Offset = "0xB2D868", VA = "0xB2D868", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xB2DD4C", Offset = "0xB2DD4C", VA = "0xB2DD4C")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000194")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xB2DD5C", Offset = "0xB2DD5C", VA = "0xB2DD5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xB2DD60", Offset = "0xB2DD60", VA = "0xB2DD60")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xB2DD68", Offset = "0xB2DD68", VA = "0xB2DD68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xB2DE64", Offset = "0xB2DE64", VA = "0xB2DE64")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xB2DE8C", Offset = "0xB2DE8C", VA = "0xB2DE8C")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000195")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9810", Offset = "0x8D9810")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000088")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xB2AAF8", Offset = "0xB2AAF8", VA = "0xB2AAF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E98D4", Offset = "0x8E98D4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xB2DEA4", Offset = "0xB2DEA4", VA = "0xB2DEA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E98E4", Offset = "0x8E98E4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xB2AA94", Offset = "0xB2AA94", VA = "0xB2AA94", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xB2ABB0", Offset = "0xB2ABB0", VA = "0xB2ABB0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xB2DEAC", Offset = "0xB2DEAC", VA = "0xB2DEAC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E98F4", Offset = "0x8E98F4")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xB2B2E8", Offset = "0xB2B2E8", VA = "0xB2B2E8", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xB2B388", Offset = "0xB2B388", VA = "0xB2B388", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xB2ABE4", Offset = "0xB2ABE4", VA = "0xB2ABE4")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000196")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000545")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCDE4", Offset = "0x8CCDE4")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000293")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002410")]
			[Address(RVA = "0xB2E6CC", Offset = "0xB2E6CC", VA = "0xB2E6CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000294")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002412")]
			[Address(RVA = "0xB2E73C", Offset = "0xB2E73C", VA = "0xB2E73C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0xB2E134", Offset = "0xB2E134", VA = "0xB2E134")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0xB2E35C", Offset = "0xB2E35C", VA = "0xB2E35C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600240F")]
		[Address(RVA = "0xB2E360", Offset = "0xB2E360", VA = "0xB2E360", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0xB2E6D4", Offset = "0xB2E6D4", VA = "0xB2E6D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9820", Offset = "0x8D9820")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xB2DF80", Offset = "0xB2DF80", VA = "0xB2DF80")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xB2E044", Offset = "0xB2E044", VA = "0xB2E044", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xB2E084", Offset = "0xB2E084", VA = "0xB2E084", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xB2E0C0", Offset = "0xB2E0C0", VA = "0xB2E0C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E992C", Offset = "0x8E992C")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xB2E160", Offset = "0xB2E160", VA = "0xB2E160", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000A3C")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0xB2E190", Offset = "0xB2E190", VA = "0xB2E190", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0xB2E330", Offset = "0xB2E330", VA = "0xB2E330")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9990", Offset = "0x8E9990")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000197")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xB2E744", Offset = "0xB2E744", VA = "0xB2E744")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xB2E7A4", Offset = "0xB2E7A4", VA = "0xB2E7A4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xB2E95C", Offset = "0xB2E95C", VA = "0xB2E95C", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xB2EA94", Offset = "0xB2EA94", VA = "0xB2EA94")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E99A0", Offset = "0x8E99A0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xB2EA98", Offset = "0xB2EA98", VA = "0xB2EA98")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000198")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9858", Offset = "0x8D9858")]
	public float LOSOffset;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9890", Offset = "0x8D9890")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xB2EAA4", Offset = "0xB2EAA4", VA = "0xB2EAA4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xB2ED3C", Offset = "0xB2ED3C", VA = "0xB2ED3C")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000199")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xB2ED48", Offset = "0xB2ED48", VA = "0xB2ED48", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xB2EF00", Offset = "0xB2EF00", VA = "0xB2EF00")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x200019A")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xB2FC54", Offset = "0xB2FC54", VA = "0xB2FC54", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xB2FCFC", Offset = "0xB2FCFC", VA = "0xB2FCFC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000A4A")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xB2FDA0", Offset = "0xB2FDA0", VA = "0xB2FDA0")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x200019B")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000546")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCDF4", Offset = "0x8CCDF4")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000295")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002416")]
			[Address(RVA = "0xB30170", Offset = "0xB30170", VA = "0xB30170", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000296")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002418")]
			[Address(RVA = "0xB301E0", Offset = "0xB301E0", VA = "0xB301E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0xB2FE48", Offset = "0xB2FE48", VA = "0xB2FE48")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0xB30034", Offset = "0xB30034", VA = "0xB30034", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0xB30038", Offset = "0xB30038", VA = "0xB30038", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0xB30178", Offset = "0xB30178", VA = "0xB30178", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D98C8", Offset = "0x8D98C8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D98C8", Offset = "0x8D98C8")]
	public float TransitionDuration;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9920", Offset = "0x8D9920")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9920", Offset = "0x8D9920")]
	public float TeleportDelay;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9974", Offset = "0x8D9974")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xB2FDA8", Offset = "0xB2FDA8", VA = "0xB2FDA8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xB2FDD4", Offset = "0xB2FDD4", VA = "0xB2FDD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E99D8", Offset = "0x8E99D8")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xB2FE74", Offset = "0xB2FE74", VA = "0xB2FE74")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x200019C")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xB301E8", Offset = "0xB301E8", VA = "0xB301E8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xB30218", Offset = "0xB30218", VA = "0xB30218")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200019D")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000547")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCE04", Offset = "0x8CCE04")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4001FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000297")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600241C")]
			[Address(RVA = "0xB304E0", Offset = "0xB304E0", VA = "0xB304E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000298")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600241E")]
			[Address(RVA = "0xB30550", Offset = "0xB30550", VA = "0xB30550", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0xB302C0", Offset = "0xB302C0", VA = "0xB302C0")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0xB30334", Offset = "0xB30334", VA = "0xB30334", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0xB30338", Offset = "0xB30338", VA = "0xB30338", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0xB304E8", Offset = "0xB304E8", VA = "0xB304E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D99AC", Offset = "0x8D99AC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D99AC", Offset = "0x8D99AC")]
	public float TransitionDuration;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xB30220", Offset = "0xB30220", VA = "0xB30220", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xB3024C", Offset = "0xB3024C", VA = "0xB3024C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9A3C", Offset = "0x8E9A3C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xB302EC", Offset = "0xB302EC", VA = "0xB302EC")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x200019E")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xC85238", Offset = "0xC85238", VA = "0xC85238")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xC856D4", Offset = "0xC856D4", VA = "0xC856D4")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xC8579C", Offset = "0xC8579C", VA = "0xC8579C")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xC85A58", Offset = "0xC85A58", VA = "0xC85A58")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xC85B48", Offset = "0xC85B48", VA = "0xC85B48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xC85C3C", Offset = "0xC85C3C", VA = "0xC85C3C")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xC85CA8", Offset = "0xC85CA8", VA = "0xC85CA8")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xC85CB0", Offset = "0xC85CB0", VA = "0xC85CB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9AA0", Offset = "0x8E9AA0")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xC85D0C", Offset = "0xC85D0C", VA = "0xC85D0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9AB0", Offset = "0x8E9AB0")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xC85D68", Offset = "0xC85D68", VA = "0xC85D68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9AC0", Offset = "0x8E9AC0")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0xC85DC4", Offset = "0xC85DC4", VA = "0xC85DC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9AD0", Offset = "0x8E9AD0")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x200019F")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9A14", Offset = "0x8D9A14")]
	public int SubdivisionsU;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9A30", Offset = "0x8D9A30")]
	public int SubdivisionsV;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xCE1CC4", Offset = "0xCE1CC4", VA = "0xCE1CC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xCE2C24", Offset = "0xCE2C24", VA = "0xCE2C24")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20001A0")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000089")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xBC6C04", Offset = "0xBC6C04", VA = "0xBC6C04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xBC6C64", Offset = "0xBC6C64", VA = "0xBC6C64")]
	public void Start()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xBC7074", Offset = "0xBC7074", VA = "0xBC7074")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xBC7170", Offset = "0xBC7170", VA = "0xBC7170")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E9AE0", Offset = "0x8E9AE0")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000A65")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000A66")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000A67")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000A68")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000A69")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000A6A")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000A6B")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000A6C")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xBC71D8", Offset = "0xBC71D8", VA = "0xBC71D8")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xBC723C", Offset = "0xBC723C", VA = "0xBC723C")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xBC72EC", Offset = "0xBC72EC", VA = "0xBC72EC")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xBC7558", Offset = "0xBC7558", VA = "0xBC7558")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xBC7648", Offset = "0xBC7648", VA = "0xBC7648")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xBC6ED0", Offset = "0xBC6ED0", VA = "0xBC6ED0")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xBC7780", Offset = "0xBC7780", VA = "0xBC7780")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xBC7860", Offset = "0xBC7860", VA = "0xBC7860")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xBC79E0", Offset = "0xBC79E0", VA = "0xBC79E0")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20001A1")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000548")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCE14", Offset = "0x8CCE14")]
	private sealed class <ShowOverlayAndLoad>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StartMenu <>4__this;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string sceneName;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x17000299")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002422")]
			[Address(RVA = "0xB28294", Offset = "0xB28294", VA = "0xB28294", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002424")]
			[Address(RVA = "0xB28304", Offset = "0xB28304", VA = "0xB28304", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0xB27CB8", Offset = "0xB27CB8", VA = "0xB27CB8")]
		[DebuggerHidden]
		public <ShowOverlayAndLoad>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0xB27FBC", Offset = "0xB27FBC", VA = "0xB27FBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0xB27FC0", Offset = "0xB27FC0", VA = "0xB27FC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0xB2829C", Offset = "0xB2829C", VA = "0xB2829C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xB277A0", Offset = "0xB277A0", VA = "0xB277A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xB27B90", Offset = "0xB27B90", VA = "0xB27B90")]
	private void LoadScene(string sceneName)
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xB27C20", Offset = "0xB27C20", VA = "0xB27C20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9B18", Offset = "0x8E9B18")]
	private IEnumerator ShowOverlayAndLoad(string sceneName)
	{
		return null;
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xB27CE4", Offset = "0xB27CE4", VA = "0xB27CE4")]
	private void LoadAvatarGrab()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xB27D34", Offset = "0xB27D34", VA = "0xB27D34")]
	private void LoadCustomControllers()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xB27D84", Offset = "0xB27D84", VA = "0xB27D84")]
	private void LoadCustomHands()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0xB27DD4", Offset = "0xB27DD4", VA = "0xB27DD4")]
	private void LoadDebugUI()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xB27E24", Offset = "0xB27E24", VA = "0xB27E24")]
	private void LoadDistanceGrab()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xB27E74", Offset = "0xB27E74", VA = "0xB27E74")]
	private void LoadGuardianBoundarySystem()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xB27EC4", Offset = "0xB27EC4", VA = "0xB27EC4")]
	private void LoadLocomotion()
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xB27F14", Offset = "0xB27F14", VA = "0xB27F14")]
	private void LoadMixedRealityCapture()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xB27F64", Offset = "0xB27F64", VA = "0xB27F64")]
	private void LoadOVROverlay()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xB27FB4", Offset = "0xB27FB4", VA = "0xB27FB4")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20001A2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9028", Offset = "0x8C9028")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000549")]
	public enum RotationAxes
	{
		[Token(Token = "0x4001FEF")]
		MouseXAndY,
		[Token(Token = "0x4001FF0")]
		MouseX,
		[Token(Token = "0x4001FF1")]
		MouseY
	}

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xBD4868", Offset = "0xBD4868", VA = "0xBD4868")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xBD4AEC", Offset = "0xBD4AEC", VA = "0xBD4AEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xBD4BB4", Offset = "0xBD4BB4", VA = "0xBD4BB4")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20001A3")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20001A4")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xDF9E8C", Offset = "0xDF9E8C", VA = "0xDF9E8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xDF9E90", Offset = "0xDF9E90", VA = "0xDF9E90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xDF9E94", Offset = "0xDF9E94", VA = "0xDF9E94")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xDFA020", Offset = "0xDFA020", VA = "0xDFA020")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xDF9EE8", Offset = "0xDF9EE8", VA = "0xDF9EE8")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xDF9F7C", Offset = "0xDF9F7C", VA = "0xDF9F7C")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xDFA074", Offset = "0xDFA074", VA = "0xDFA074")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xDFA114", Offset = "0xDFA114", VA = "0xDFA114")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xDFA2A0", Offset = "0xDFA2A0", VA = "0xDFA2A0")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xDFA42C", Offset = "0xDFA42C", VA = "0xDFA42C")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20001A5")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x200054A")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioRaycastCallback _raycastCallback;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float particleSize;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float particleOffset;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject room;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] dims;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] coefs;

	[Token(Token = "0x4000B5C")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] points;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3[] normals;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem sys;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000B62")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xB79C0C", Offset = "0xB79C0C", VA = "0xB79C0C")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xB79C44", Offset = "0xB79C44", VA = "0xB79C44")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xB79E14", Offset = "0xB79E14", VA = "0xB79E14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xB79EC0", Offset = "0xB79EC0", VA = "0xB79EC0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xB79FD0", Offset = "0xB79FD0", VA = "0xB79FD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xB7AC08", Offset = "0xB7AC08", VA = "0xB7AC08")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xB79E9C", Offset = "0xB79E9C", VA = "0xB79E9C")]
	private static extern int OSP_Unity_AssignRaycastCallback(MulticastDelegate callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xB79F24", Offset = "0xB79F24", VA = "0xB79F24")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xB7A8F0", Offset = "0xB7A8F0", VA = "0xB7A8F0")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xB7A98C", Offset = "0xB7A98C", VA = "0xB7A98C")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xB7AA2C", Offset = "0xB7AA2C", VA = "0xB7AA2C")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xB7AACC", Offset = "0xB7AACC", VA = "0xB7AACC")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xB7AB68", Offset = "0xB7AB68", VA = "0xB7AB68")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xB7BF70", Offset = "0xB7BF70", VA = "0xB7BF70")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xB7C034", Offset = "0xB7C034", VA = "0xB7C034")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xB7C0F8", Offset = "0xB7C0F8", VA = "0xB7C0F8")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20001A6")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x200054B")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4001FF3")]
		Uninitialized = -1,
		[Token(Token = "0x4001FF4")]
		NotEnabled,
		[Token(Token = "0x4001FF5")]
		Success,
		[Token(Token = "0x4001FF6")]
		StreamError,
		[Token(Token = "0x4001FF7")]
		ProcessError,
		[Token(Token = "0x4001FF8")]
		MaxStatValue
	}

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x1700008A")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xDE7D44", Offset = "0xDE7D44", VA = "0xDE7D44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xDE7D4C", Offset = "0xDE7D4C", VA = "0xDE7D4C")]
		set
		{
		}
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xDE7D58", Offset = "0xDE7D58", VA = "0xDE7D58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xDE7FA8", Offset = "0xDE7FA8", VA = "0xDE7FA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xDE8234", Offset = "0xDE8234", VA = "0xDE8234")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20001A7")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x200054C")]
	private enum Parameters
	{
		[Token(Token = "0x4001FFA")]
		P_GAIN,
		[Token(Token = "0x4001FFB")]
		P_USEINVSQR,
		[Token(Token = "0x4001FFC")]
		P_NEAR,
		[Token(Token = "0x4001FFD")]
		P_FAR,
		[Token(Token = "0x4001FFE")]
		P_RADIUS,
		[Token(Token = "0x4001FFF")]
		P_DISABLE_RFL,
		[Token(Token = "0x4002000")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4002001")]
		P_AMBISTAT,
		[Token(Token = "0x4002002")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4002003")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4002004")]
		P_SENDLEVEL,
		[Token(Token = "0x4002005")]
		P_NUM
	}

	[Token(Token = "0x4000B68")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700008B")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xDE83B4", Offset = "0xDE83B4", VA = "0xDE83B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xDE83BC", Offset = "0xDE83BC", VA = "0xDE83BC")]
		set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public float Gain
	{
		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xDE83C8", Offset = "0xDE83C8", VA = "0xDE83C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xDE83D0", Offset = "0xDE83D0", VA = "0xDE83D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xDE8454", Offset = "0xDE8454", VA = "0xDE8454")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xDE845C", Offset = "0xDE845C", VA = "0xDE845C")]
		set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public float Near
	{
		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xDE8468", Offset = "0xDE8468", VA = "0xDE8468")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xDE8470", Offset = "0xDE8470", VA = "0xDE8470")]
		set
		{
		}
	}

	[Token(Token = "0x1700008F")]
	public float Far
	{
		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xDE84F8", Offset = "0xDE84F8", VA = "0xDE84F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xDE8500", Offset = "0xDE8500", VA = "0xDE8500")]
		set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xDE8588", Offset = "0xDE8588", VA = "0xDE8588")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xDE8590", Offset = "0xDE8590", VA = "0xDE8590")]
		set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public float ReverbSend
	{
		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xDE8618", Offset = "0xDE8618", VA = "0xDE8618")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xDE8620", Offset = "0xDE8620", VA = "0xDE8620")]
		set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xDE86A8", Offset = "0xDE86A8", VA = "0xDE86A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xDE86B0", Offset = "0xDE86B0", VA = "0xDE86B0")]
		set
		{
		}
	}

	[PreserveSig]
	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xDE82B8", Offset = "0xDE82B8", VA = "0xDE82B8")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xDE86BC", Offset = "0xDE86BC", VA = "0xDE86BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xDE88BC", Offset = "0xDE88BC", VA = "0xDE88BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xDE88C0", Offset = "0xDE88C0", VA = "0xDE88C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xDE8728", Offset = "0xDE8728", VA = "0xDE8728")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xDE89A0", Offset = "0xDE89A0", VA = "0xDE89A0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xDE8E74", Offset = "0xDE8E74", VA = "0xDE8E74")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xDE8F44", Offset = "0xDE8F44", VA = "0xDE8F44")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20001A8")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000B73")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000B75")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xDE8F64", Offset = "0xDE8F64", VA = "0xDE8F64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xDE8F70", Offset = "0xDE8F70", VA = "0xDE8F70")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xDE9044", Offset = "0xDE9044", VA = "0xDE9044")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xDE8FA8", Offset = "0xDE8FA8", VA = "0xDE8FA8")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xDE90E0", Offset = "0xDE90E0", VA = "0xDE90E0")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20001A9")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x200054D")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x200054E")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int OSPSuccess;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int terrainDecimation;

	[Token(Token = "0x17000093")]
	public string filePath
	{
		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xDE90F0", Offset = "0xDE90F0", VA = "0xDE90F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xDE914C", Offset = "0xDE914C", VA = "0xDE914C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xDE9150", Offset = "0xDE9150", VA = "0xDE9150")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xDE9620", Offset = "0xDE9620", VA = "0xDE9620")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xDE9B0C", Offset = "0xDE9B0C", VA = "0xDE9B0C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xDE9C7C", Offset = "0xDE9C7C", VA = "0xDE9C7C")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic)
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xDEA4B0", Offset = "0xDEA4B0", VA = "0xDEA4B0")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic)
	{
		return default(int);
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xDE94D4", Offset = "0xDE94D4", VA = "0xDE94D4")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xDE934C", Offset = "0xDE934C", VA = "0xDE934C")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xDEBFBC", Offset = "0xDEBFBC", VA = "0xDEBFBC")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20001AA")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x200054F")]
	public enum Preset
	{
		[Token(Token = "0x400200B")]
		Custom,
		[Token(Token = "0x400200C")]
		AcousticTile,
		[Token(Token = "0x400200D")]
		Brick,
		[Token(Token = "0x400200E")]
		BrickPainted,
		[Token(Token = "0x400200F")]
		Carpet,
		[Token(Token = "0x4002010")]
		CarpetHeavy,
		[Token(Token = "0x4002011")]
		CarpetHeavyPadded,
		[Token(Token = "0x4002012")]
		CeramicTile,
		[Token(Token = "0x4002013")]
		Concrete,
		[Token(Token = "0x4002014")]
		ConcreteRough,
		[Token(Token = "0x4002015")]
		ConcreteBlock,
		[Token(Token = "0x4002016")]
		ConcreteBlockPainted,
		[Token(Token = "0x4002017")]
		Curtain,
		[Token(Token = "0x4002018")]
		Foliage,
		[Token(Token = "0x4002019")]
		Glass,
		[Token(Token = "0x400201A")]
		GlassHeavy,
		[Token(Token = "0x400201B")]
		Grass,
		[Token(Token = "0x400201C")]
		Gravel,
		[Token(Token = "0x400201D")]
		GypsumBoard,
		[Token(Token = "0x400201E")]
		PlasterOnBrick,
		[Token(Token = "0x400201F")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4002020")]
		Soil,
		[Token(Token = "0x4002021")]
		SoundProof,
		[Token(Token = "0x4002022")]
		Snow,
		[Token(Token = "0x4002023")]
		Steel,
		[Token(Token = "0x4002024")]
		Water,
		[Token(Token = "0x4002025")]
		WoodThin,
		[Token(Token = "0x4002026")]
		WoodThick,
		[Token(Token = "0x4002027")]
		WoodFloor,
		[Token(Token = "0x4002028")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x2000550")]
	public sealed class Point
	{
		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6002429")]
		[Address(RVA = "0xDF9784", Offset = "0xDF9784", VA = "0xDF9784")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0xDF98CC", Offset = "0xDF98CC", VA = "0xDF98CC")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0xDF993C", Offset = "0xDF993C", VA = "0xDF993C")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x2000551")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8CCE24", Offset = "0x8CCE24")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20006D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD730", Offset = "0x8CD730")]
		private sealed class <>c
		{
			[Token(Token = "0x4002546")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002547")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4002548")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x60027E0")]
			[Address(RVA = "0xDF9E2C", Offset = "0xDF9E2C", VA = "0xDF9E2C")]
			public <>c()
			{
			}

			[Token(Token = "0x60027E1")]
			[Address(RVA = "0xDF9E34", Offset = "0xDF9E34", VA = "0xDF9E34")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x60027E2")]
			[Address(RVA = "0xDF9E60", Offset = "0xDF9E60", VA = "0xDF9E60")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x1700029B")]
		public float Item
		{
			[Token(Token = "0x600242C")]
			[Address(RVA = "0xDF99A4", Offset = "0xDF99A4", VA = "0xDF99A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0xDF9854", Offset = "0xDF9854", VA = "0xDF9854")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9ADC", Offset = "0x8D9ADC")]
	public Spectrum absorption;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9B14", Offset = "0x8D9B14")]
	public Spectrum transmission;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9B4C", Offset = "0x8D9B4C")]
	public Spectrum scattering;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000094")]
	public Preset preset
	{
		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xDEF7E4", Offset = "0xDEF7E4", VA = "0xDEF7E4")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xDEF7EC", Offset = "0xDEF7EC", VA = "0xDEF7EC")]
		set
		{
		}
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xDEF9A8", Offset = "0xDEF9A8", VA = "0xDEF9A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xDEBD0C", Offset = "0xDEBD0C", VA = "0xDEBD0C")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xDEFE5C", Offset = "0xDEFE5C", VA = "0xDEFE5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xDEFE60", Offset = "0xDEFE60", VA = "0xDEFE60")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xDEF9AC", Offset = "0xDEF9AC", VA = "0xDEF9AC")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xDEF814", Offset = "0xDEF814", VA = "0xDEF814")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xDEFEE4", Offset = "0xDEFEE4", VA = "0xDEFEE4")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xDF0478", Offset = "0xDF0478", VA = "0xDF0478")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xDF0A14", Offset = "0xDF0A14", VA = "0xDF0A14")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xDF0FB0", Offset = "0xDF0FB0", VA = "0xDF0FB0")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xDF1550", Offset = "0xDF1550", VA = "0xDF1550")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xDF1AE8", Offset = "0xDF1AE8", VA = "0xDF1AE8")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xDF2080", Offset = "0xDF2080", VA = "0xDF2080")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xDF2620", Offset = "0xDF2620", VA = "0xDF2620")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xDF2BC0", Offset = "0xDF2BC0", VA = "0xDF2BC0")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xDF315C", Offset = "0xDF315C", VA = "0xDF315C")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xDF36FC", Offset = "0xDF36FC", VA = "0xDF36FC")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xDF3C9C", Offset = "0xDF3C9C", VA = "0xDF3C9C")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xDF4234", Offset = "0xDF4234", VA = "0xDF4234")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xDF47CC", Offset = "0xDF47CC", VA = "0xDF47CC")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xDF4D64", Offset = "0xDF4D64", VA = "0xDF4D64")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xDF5304", Offset = "0xDF5304", VA = "0xDF5304")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xDF5720", Offset = "0xDF5720", VA = "0xDF5720")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xDF5B34", Offset = "0xDF5B34", VA = "0xDF5B34")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xDF60D4", Offset = "0xDF60D4", VA = "0xDF60D4")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xDF6670", Offset = "0xDF6670", VA = "0xDF6670")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xDF6C0C", Offset = "0xDF6C0C", VA = "0xDF6C0C")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xDF7024", Offset = "0xDF7024", VA = "0xDF7024")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xDF71B8", Offset = "0xDF71B8", VA = "0xDF71B8")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xDF75CC", Offset = "0xDF75CC", VA = "0xDF75CC")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xDF7B68", Offset = "0xDF7B68", VA = "0xDF7B68")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xDF8108", Offset = "0xDF8108", VA = "0xDF8108")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xDF86A4", Offset = "0xDF86A4", VA = "0xDF86A4")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xDF8C44", Offset = "0xDF8C44", VA = "0xDF8C44")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xDF91E4", Offset = "0xDF91E4", VA = "0xDF91E4")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xDF97BC", Offset = "0xDF97BC", VA = "0xDF97BC")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20001AB")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000B81")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xDFA4B4", Offset = "0xDFA4B4", VA = "0xDFA4B4")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xDFA568", Offset = "0xDFA568", VA = "0xDFA568")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xDFA674", Offset = "0xDFA674", VA = "0xDFA674")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xDFA678", Offset = "0xDFA678", VA = "0xDFA678")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xDFA67C", Offset = "0xDFA67C", VA = "0xDFA67C")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20001AC")]
public class Pvr_Controller : MonoBehaviour
{
	[Token(Token = "0x2000552")]
	public enum UserHandNess
	{
		[Token(Token = "0x400202E")]
		Right,
		[Token(Token = "0x400202F")]
		Left
	}

	[Token(Token = "0x2000553")]
	public enum GazeType
	{
		[Token(Token = "0x4002031")]
		Never,
		[Token(Token = "0x4002032")]
		DuringMotion,
		[Token(Token = "0x4002033")]
		Always
	}

	[Token(Token = "0x2000554")]
	public enum ControllerAxis
	{
		[Token(Token = "0x4002035")]
		Controller,
		[Token(Token = "0x4002036")]
		Wrist,
		[Token(Token = "0x4002037")]
		Elbow,
		[Token(Token = "0x4002038")]
		Shoulder
	}

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller0;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller1;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UserHandNess handness;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerAxis Axis;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GazeType Gazetype;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9B94", Offset = "0x8D9B94")]
	public float ElbowHeight;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9BB0", Offset = "0x8D9BB0")]
	public float ElbowDepth;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D9BCC", Offset = "0x8D9BCC")]
	public float PointerTiltAngle;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mouseX;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mouseY;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mouseZ;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] inputDirection;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9BE4", Offset = "0x8D9BE4")]
	private static Vector3 <pointerPosition>k__BackingField;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9BF4", Offset = "0x8D9BF4")]
	private static Quaternion <pointerRotation>k__BackingField;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9C04", Offset = "0x8D9C04")]
	private static Vector3 <elbowPosition>k__BackingField;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9C14", Offset = "0x8D9C14")]
	private static Quaternion <elbowRotation>k__BackingField;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9C24", Offset = "0x8D9C24")]
	private static Vector3 <wristPosition>k__BackingField;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9C34", Offset = "0x8D9C34")]
	private static Quaternion <wristRotation>k__BackingField;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9C44", Offset = "0x8D9C44")]
	private static Vector3 <shoulderPosition>k__BackingField;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9C54", Offset = "0x8D9C54")]
	private static Quaternion <shoulderRotation>k__BackingField;

	[Token(Token = "0x17000095")]
	public static Vector3 pointerPosition
	{
		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xEAE9C4", Offset = "0xEAE9C4", VA = "0xEAE9C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9B7C", Offset = "0x8E9B7C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xEAE8E0", Offset = "0xEAE8E0", VA = "0xEAE8E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9B8C", Offset = "0x8E9B8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public static Quaternion pointerRotation
	{
		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xEAEA18", Offset = "0xEAEA18", VA = "0xEAEA18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9B9C", Offset = "0x8E9B9C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xEAE950", Offset = "0xEAE950", VA = "0xEAE950")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9BAC", Offset = "0x8E9BAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public static Vector3 elbowPosition
	{
		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xEAECDC", Offset = "0xEAECDC", VA = "0xEAECDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9BBC", Offset = "0x8E9BBC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xEAEBF8", Offset = "0xEAEBF8", VA = "0xEAEBF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9BCC", Offset = "0x8E9BCC")]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public static Quaternion elbowRotation
	{
		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xEAED30", Offset = "0xEAED30", VA = "0xEAED30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9BDC", Offset = "0x8E9BDC")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xEAEC68", Offset = "0xEAEC68", VA = "0xEAEC68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9BEC", Offset = "0x8E9BEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public static Vector3 wristPosition
	{
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xEAEB50", Offset = "0xEAEB50", VA = "0xEAEB50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9BFC", Offset = "0x8E9BFC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xEAEA6C", Offset = "0xEAEA6C", VA = "0xEAEA6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9C0C", Offset = "0x8E9C0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	public static Quaternion wristRotation
	{
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xEAEBA4", Offset = "0xEAEBA4", VA = "0xEAEBA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9C1C", Offset = "0x8E9C1C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xEAEADC", Offset = "0xEAEADC", VA = "0xEAEADC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9C2C", Offset = "0x8E9C2C")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public static Vector3 shoulderPosition
	{
		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xEAEE68", Offset = "0xEAEE68", VA = "0xEAEE68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9C3C", Offset = "0x8E9C3C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xEAED84", Offset = "0xEAED84", VA = "0xEAED84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9C4C", Offset = "0x8E9C4C")]
		set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public static Quaternion shoulderRotation
	{
		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xEAEEBC", Offset = "0xEAEEBC", VA = "0xEAEEBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9C5C", Offset = "0x8E9C5C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xEAEDF4", Offset = "0xEAEDF4", VA = "0xEAEDF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9C6C", Offset = "0x8E9C6C")]
		set
		{
		}
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xEAC4EC", Offset = "0xEAC4EC", VA = "0xEAC4EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xEAC628", Offset = "0xEAC628", VA = "0xEAC628")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xEAC698", Offset = "0xEAC698", VA = "0xEAC698")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xEAC7D4", Offset = "0xEAC7D4", VA = "0xEAC7D4")]
	private void MainControllerChanged(string index)
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xEAC87C", Offset = "0xEAC87C", VA = "0xEAC87C")]
	private void HandnessChanged(string index)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xEAC880", Offset = "0xEAC880", VA = "0xEAC880")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xEAC7D8", Offset = "0xEAC7D8", VA = "0xEAC7D8")]
	private void RefreshHandness()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xEAC8E0", Offset = "0xEAC8E0", VA = "0xEAC8E0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xEACAC8", Offset = "0xEACAC8", VA = "0xEACAC8")]
	private void ShowController()
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xEACC94", Offset = "0xEACC94", VA = "0xEACC94")]
	private void CheckControllerState(string data)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xEACD80", Offset = "0xEACD80", VA = "0xEACD80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xEAC884", Offset = "0xEAC884", VA = "0xEAC884")]
	public static void ChangeHandNess()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xEAD068", Offset = "0xEAD068", VA = "0xEAD068")]
	private void DoUpdateControler0()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xEAD0E4", Offset = "0xEAD0E4", VA = "0xEAD0E4")]
	private void DoUpdateControler1()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xEAD168", Offset = "0xEAD168", VA = "0xEAD168")]
	private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xEAE6FC", Offset = "0xEAE6FC", VA = "0xEAE6FC")]
	private Quaternion UpdateSimulatedFrameParams()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xEAD2F0", Offset = "0xEAD2F0", VA = "0xEAD2F0")]
	private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xEAD300", Offset = "0xEAD300", VA = "0xEAD300")]
	private void CalcArmModelfromSo(int hand)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xEAD9F4", Offset = "0xEAD9F4", VA = "0xEAD9F4")]
	public void UpdateControllerDataSO(int hand)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xEAEF10", Offset = "0xEAEF10", VA = "0xEAEF10")]
	public Pvr_Controller()
	{
	}
}
[Token(Token = "0x20001AD")]
public class Pvr_ControllerDemo : MonoBehaviour
{
	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HeadSetController;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller0;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controller1;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cube;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray ray;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject currentController;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform lastHit;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform currentHit;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material normat;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material gazemat;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Material clickmat;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool noClick;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject referenceObj;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float rayDefaultLength;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isHasController;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool headcontrolmode;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RaycastHit hit;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject rayLine;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject dot;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform dragObj;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float disX;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float disY;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float disZ;

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xEAEF78", Offset = "0xEAEF78", VA = "0xEAEF78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xEAF10C", Offset = "0xEAF10C", VA = "0xEAF10C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xEAF224", Offset = "0xEAF224", VA = "0xEAF224")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xEB12B0", Offset = "0xEB12B0", VA = "0xEB12B0")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xEB135C", Offset = "0xEB135C", VA = "0xEB135C")]
	private void ControllerStateListener(string data)
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xEB1408", Offset = "0xEB1408", VA = "0xEB1408")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xEB14A8", Offset = "0xEB14A8", VA = "0xEB14A8")]
	public void SwitchControlMode()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xEB14AC", Offset = "0xEB14AC", VA = "0xEB14AC")]
	public Pvr_ControllerDemo()
	{
	}
}
[Token(Token = "0x20001AE")]
public class Pvr_ControllerEventsExamples : MonoBehaviour
{
	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xEB14BC", Offset = "0xEB14BC", VA = "0xEB14BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xEB1718", Offset = "0xEB1718", VA = "0xEB1718")]
	private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xEB17C0", Offset = "0xEB17C0", VA = "0xEB17C0")]
	private void UIPointerElementExit(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xEB1868", Offset = "0xEB1868", VA = "0xEB1868")]
	private void UIPointerElementClick(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xEB1910", Offset = "0xEB1910", VA = "0xEB1910")]
	private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xEB19B8", Offset = "0xEB19B8", VA = "0xEB19B8")]
	private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xEB1A60", Offset = "0xEB1A60", VA = "0xEB1A60")]
	public Pvr_ControllerEventsExamples()
	{
	}
}
[Token(Token = "0x20001AF")]
public class Pvr_ControllerInit : MonoBehaviour
{
	[Token(Token = "0x2000555")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCE5C", Offset = "0x8CCE5C")]
	private sealed class <RefreshController>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int id;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_ControllerInit <>4__this;

		[Token(Token = "0x1700029C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002431")]
			[Address(RVA = "0xEB3F94", Offset = "0xEB3F94", VA = "0xEB3F94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002433")]
			[Address(RVA = "0xEB4004", Offset = "0xEB4004", VA = "0xEB4004", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0xEB2AC0", Offset = "0xEB2AC0", VA = "0xEB2AC0")]
		[DebuggerHidden]
		public <RefreshController>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0xEB3A3C", Offset = "0xEB3A3C", VA = "0xEB3A3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0xEB3A40", Offset = "0xEB3A40", VA = "0xEB3A40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002432")]
		[Address(RVA = "0xEB3F9C", Offset = "0xEB3F9C", VA = "0xEB3F9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerVariety Variety;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isCustomModel;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject goblin;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject g2;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject neo2L;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject neo2R;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject neo3L;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject neo3R;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material standardMat;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material unlitMat;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int controllerType;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public bool loadModelSuccess;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int systemOrUnity;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private JsonData curControllerData;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string modelName;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string texFormat;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string prePath;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string modelFilePath;

	[Token(Token = "0x4000BBF")]
	private const string goblinTexbasePath = "Controller/controller1/controller1";

	[Token(Token = "0x4000BC0")]
	private const string g2TexbasePath = "Controller/controller3/controller3";

	[Token(Token = "0x4000BC1")]
	private const string neo2TexbasePath = "Controller/controller4/controller4";

	[Token(Token = "0x4000BC2")]
	private const string neo3TexbasePath = "Controller/controller5/controller5";

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xEB1A68", Offset = "0xEB1A68", VA = "0xEB1A68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xEB1C10", Offset = "0xEB1C10", VA = "0xEB1C10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xEB1D14", Offset = "0xEB1D14", VA = "0xEB1D14")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xEB20A4", Offset = "0xEB20A4", VA = "0xEB20A4")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xEB22D8", Offset = "0xEB22D8", VA = "0xEB22D8")]
	private void LoadResFromJson()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xEB250C", Offset = "0xEB250C", VA = "0xEB250C")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xEB294C", Offset = "0xEB294C", VA = "0xEB294C")]
	private void CheckControllerStateOfAbility(string data)
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xEB1D20", Offset = "0xEB1D20", VA = "0xEB1D20")]
	private void DestroyLocalController()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xEB25F8", Offset = "0xEB25F8", VA = "0xEB25F8")]
	private void DestroySysController()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xEB2474", Offset = "0xEB2474", VA = "0xEB2474")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9C7C", Offset = "0x8E9C7C")]
	private IEnumerator RefreshController(int id)
	{
		return null;
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xEB2AEC", Offset = "0xEB2AEC", VA = "0xEB2AEC")]
	private void LoadControllerFromPrefab()
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xEB31B8", Offset = "0xEB31B8", VA = "0xEB31B8")]
	private void LoadControllerFromSystem(int id)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xEB2DE8", Offset = "0xEB2DE8", VA = "0xEB2DE8")]
	private void LoadTexture(Pvr_ControllerVisual visual, string controllerName, bool fromRes)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xEB3730", Offset = "0xEB3730", VA = "0xEB3730")]
	private Texture2D LoadOneTexture(string filepath, bool fromRes)
	{
		return null;
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xEB3850", Offset = "0xEB3850", VA = "0xEB3850")]
	private byte[] ReadPNG(string path)
	{
		return null;
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xEB39C8", Offset = "0xEB39C8", VA = "0xEB39C8")]
	public Pvr_ControllerInit()
	{
	}
}
[Token(Token = "0x20001B0")]
public class Pvr_ControllerLink
{
	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaClass javaHummingbirdClass;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AndroidJavaClass javaPico2ReceiverClass;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AndroidJavaClass javaserviceClass;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AndroidJavaClass javavractivityclass;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AndroidJavaClass javaCVClass;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AndroidJavaObject activity;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string gameobjname;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool picoDevice;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string hummingBirdMac;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hummingBirdRSSI;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool goblinserviceStarted;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool neoserviceStarted;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool controller0Connected;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool controller1Connected;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int mainHandID;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Pvr_Controller.UserHandNess handness;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int controllerType;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerHand Controller0;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ControllerHand Controller1;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int platFormType;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int trackingmode;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int systemProp;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int enablehand6dofbyhead;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool switchHomeKey;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] hbPoseData;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float[] sensorData;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int[] keyData;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int[] neo3TouchValue;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float[] fixedState;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float[] neoposeData;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int[] goblinKeyArray;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int[] neoKeyArray;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int[] neotriggerV;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float[] velocity;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float[] angularVelocity;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float[] acceData;

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xEB400C", Offset = "0xEB400C", VA = "0xEB400C")]
	public Pvr_ControllerLink(string name)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xEB4418", Offset = "0xEB4418", VA = "0xEB4418")]
	private void StartHummingBirdService()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xEB4E40", Offset = "0xEB4E40", VA = "0xEB4E40")]
	public bool IsServiceExisted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xEB4BA4", Offset = "0xEB4BA4", VA = "0xEB4BA4")]
	public void SetGameObjectToJar(string name)
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xEB4CC4", Offset = "0xEB4CC4", VA = "0xEB4CC4")]
	public void BindService()
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xEB4FF8", Offset = "0xEB4FF8", VA = "0xEB4FF8")]
	public void UnBindService()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xEB5174", Offset = "0xEB5174", VA = "0xEB5174")]
	public void StopLark2Receiver()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xEB530C", Offset = "0xEB530C", VA = "0xEB530C")]
	public void StartLark2Receiver()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0xEB5460", Offset = "0xEB5460", VA = "0xEB5460")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0xEB55F8", Offset = "0xEB55F8", VA = "0xEB55F8")]
	public void StartLark2Service()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0xEB57DC", Offset = "0xEB57DC", VA = "0xEB57DC")]
	public int getHandness()
	{
		return default(int);
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xEB5974", Offset = "0xEB5974", VA = "0xEB5974")]
	public void setHandness(int hand)
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xEB5AD8", Offset = "0xEB5AD8", VA = "0xEB5AD8")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xEB5C04", Offset = "0xEB5C04", VA = "0xEB5C04")]
	public void StopScan()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xEB4AA8", Offset = "0xEB4AA8", VA = "0xEB4AA8")]
	public int GetSysproc()
	{
		return default(int);
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xEB5D2C", Offset = "0xEB5D2C", VA = "0xEB5D2C")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xEB5EC4", Offset = "0xEB5EC4", VA = "0xEB5EC4")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xEB6008", Offset = "0xEB6008", VA = "0xEB6008")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xEB60A8", Offset = "0xEB60A8", VA = "0xEB60A8")]
	public bool StartUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xEB616C", Offset = "0xEB616C", VA = "0xEB616C")]
	public void setBinPath(string path, bool isasset)
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xEB6314", Offset = "0xEB6314", VA = "0xEB6314")]
	public string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xEB6400", Offset = "0xEB6400", VA = "0xEB6400")]
	public long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xEB64F0", Offset = "0xEB64F0", VA = "0xEB64F0")]
	public string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0xEB65DC", Offset = "0xEB65DC", VA = "0xEB65DC")]
	public long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xEB66CC", Offset = "0xEB66CC", VA = "0xEB66CC")]
	public int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xEB6A24", Offset = "0xEB6A24", VA = "0xEB6A24")]
	public void RebackToLauncher()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xEB6B10", Offset = "0xEB6B10", VA = "0xEB6B10")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xEB6CB8", Offset = "0xEB6CB8", VA = "0xEB6CB8")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0xEB6E60", Offset = "0xEB6E60", VA = "0xEB6E60")]
	public float[] GetHBControllerPoseData()
	{
		return null;
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xEB72F8", Offset = "0xEB72F8", VA = "0xEB72F8")]
	public float[] GetControllerSensorData()
	{
		return null;
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xEB745C", Offset = "0xEB745C", VA = "0xEB745C")]
	public int[] GetControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xEB74E8", Offset = "0xEB74E8", VA = "0xEB74E8")]
	public int[] GetNeo3TouchData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xEB8060", Offset = "0xEB8060", VA = "0xEB8060")]
	public int GetNeo3GripValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xEB8204", Offset = "0xEB8204", VA = "0xEB8204")]
	public float[] GetControllerFixedSensorState(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xEB8A64", Offset = "0xEB8A64", VA = "0xEB8A64")]
	public float[] GetCvControllerPoseData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xEB92FC", Offset = "0xEB92FC", VA = "0xEB92FC")]
	public int[] GetHBControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xEBB0E8", Offset = "0xEBB0E8", VA = "0xEBB0E8")]
	public int GetHBKeyValue()
	{
		return default(int);
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0xEBB210", Offset = "0xEBB210", VA = "0xEBB210")]
	public int[] GetCvControllerKeyData(int hand)
	{
		return null;
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0xEBDD3C", Offset = "0xEBDD3C", VA = "0xEBDD3C")]
	public int GetCVTriggerValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0xEBDF38", Offset = "0xEBDF38", VA = "0xEBDF38")]
	public void AutoConnectHbController(int scanTimeMs)
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0xEBE0E4", Offset = "0xEBE0E4", VA = "0xEBE0E4")]
	public void StartControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xEBE2DC", Offset = "0xEBE2DC", VA = "0xEBE2DC")]
	public void StopControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xEBE4D4", Offset = "0xEBE4D4", VA = "0xEBE4D4")]
	public void SetUnityVersionToJar(string version)
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xEBE5FC", Offset = "0xEBE5FC", VA = "0xEBE5FC")]
	public Vector3 GetVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xEBEAFC", Offset = "0xEBEAFC", VA = "0xEBEAFC")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xEBEFA8", Offset = "0xEBEFA8", VA = "0xEBEFA8")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xEBF3B4", Offset = "0xEBF3B4", VA = "0xEBF3B4")]
	public string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xEBF4A0", Offset = "0xEBF4A0", VA = "0xEBF4A0")]
	public void VibrateNeo2Controller(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0xEBF84C", Offset = "0xEBF84C", VA = "0xEBF84C")]
	public int GetMainControllerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xEBF94C", Offset = "0xEBF94C", VA = "0xEBF94C")]
	public void SetMainController(int index)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xEBFAAC", Offset = "0xEBFAAC", VA = "0xEBFAAC")]
	public void ResetHeadSensorForController()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xEBFB54", Offset = "0xEBFB54", VA = "0xEBFB54")]
	public void GetDeviceVersion(int deviceType)
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xEBFCBC", Offset = "0xEBFCBC", VA = "0xEBFCBC")]
	public void GetControllerSnCode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xEBFE24", Offset = "0xEBFE24", VA = "0xEBFE24")]
	public void SetControllerUnbind(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xEBFF8C", Offset = "0xEBFF8C", VA = "0xEBFF8C")]
	public void SetStationRestart()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xEC0034", Offset = "0xEC0034", VA = "0xEC0034")]
	public void StartStationOtaUpdate()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xEC00DC", Offset = "0xEC00DC", VA = "0xEC00DC")]
	public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xEC02C4", Offset = "0xEC02C4", VA = "0xEC02C4")]
	public void EnterPairMode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xEC042C", Offset = "0xEC042C", VA = "0xEC042C")]
	public void SetControllerShutdown(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0xEC0594", Offset = "0xEC0594", VA = "0xEC0594")]
	public int GetStationPairState()
	{
		return default(int);
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xEC0698", Offset = "0xEC0698", VA = "0xEC0698")]
	public int GetStationOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xEC079C", Offset = "0xEC079C", VA = "0xEC079C")]
	public int GetControllerOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xEC08A0", Offset = "0xEC08A0", VA = "0xEC08A0")]
	public void GetControllerVersionAndSN(int controllerSerialNum)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0xEC0A08", Offset = "0xEC0A08", VA = "0xEC0A08")]
	public void GetControllerUniqueID()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0xEC0AB0", Offset = "0xEC0AB0", VA = "0xEC0AB0")]
	public void InterruptStationPairMode()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0xEC0B58", Offset = "0xEC0B58", VA = "0xEC0B58")]
	public int GetControllerAbility(int controllerSerialNum)
	{
		return default(int);
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0xEC0CDC", Offset = "0xEC0CDC", VA = "0xEC0CDC")]
	public void SwitchHomeKey(bool state)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0xEC0D90", Offset = "0xEC0D90", VA = "0xEC0D90")]
	public void SetBootReconnect()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xEC0E30", Offset = "0xEC0E30", VA = "0xEC0E30")]
	public int GetTemperature()
	{
		return default(int);
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xEC0F2C", Offset = "0xEC0F2C", VA = "0xEC0F2C")]
	public int GetDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xEC1028", Offset = "0xEC1028", VA = "0xEC1028")]
	public int GetControllerType()
	{
		return default(int);
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xEC10B8", Offset = "0xEC10B8", VA = "0xEC10B8")]
	public string GetHummingBird2SN()
	{
		return null;
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xEC119C", Offset = "0xEC119C", VA = "0xEC119C")]
	public string GetControllerVersion()
	{
		return null;
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xEC1280", Offset = "0xEC1280", VA = "0xEC1280")]
	public bool IsEnbleTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xEC1368", Offset = "0xEC1368", VA = "0xEC1368")]
	public void StartCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xEC14D0", Offset = "0xEC14D0", VA = "0xEC14D0")]
	public void StopCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xEC1638", Offset = "0xEC1638", VA = "0xEC1638")]
	public int GetControllerBindingState(int id)
	{
		return default(int);
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xEC17B4", Offset = "0xEC17B4", VA = "0xEC17B4")]
	public void setIsEnbleHomeKey(bool state)
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xEC190C", Offset = "0xEC190C", VA = "0xEC190C")]
	public int getControllerSensorStatus(int id)
	{
		return default(int);
	}
}
[Token(Token = "0x20001B1")]
public class Pvr_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x2000556")]
	public delegate void PvrServiceStartSuccess();

	[Token(Token = "0x2000557")]
	public delegate void PvrControllerStateChanged(string data);

	[Token(Token = "0x2000558")]
	public delegate void ChangeMainControllerCallBack(string index);

	[Token(Token = "0x2000559")]
	public delegate void ChangeHandNessCallBack(string index);

	[Token(Token = "0x200055A")]
	public delegate void SetHbServiceBindState();

	[Token(Token = "0x200055B")]
	public delegate void ControllerThreadStartedCallback();

	[Token(Token = "0x200055C")]
	public delegate void SetControllerServiceBindState();

	[Token(Token = "0x200055D")]
	public delegate void ControllerStatusChange(string isconnect);

	[Token(Token = "0x200055E")]
	public delegate void SetControllerAbility(string data);

	[Token(Token = "0x200055F")]
	public delegate void SetControllerStateChanged(string data);

	[Token(Token = "0x2000560")]
	public delegate void SetHbControllerMac(string mac);

	[Token(Token = "0x2000561")]
	public delegate void ControllerDeviceVersionCallback(string data);

	[Token(Token = "0x2000562")]
	public delegate void ControllerSnCodeCallback(string data);

	[Token(Token = "0x2000563")]
	public delegate void ControllerUnbindCallback(string status);

	[Token(Token = "0x2000564")]
	public delegate void ControllerStationStatusCallback(string status);

	[Token(Token = "0x2000565")]
	public delegate void ControllerStationBusyCallback(string status);

	[Token(Token = "0x2000566")]
	public delegate void ControllerOtaStartCodeCallback(string data);

	[Token(Token = "0x2000567")]
	public delegate void ControllerDeviceVersionAndSNCallback(string data);

	[Token(Token = "0x2000568")]
	public delegate void ControllerUniqueIDCallback(string data);

	[Token(Token = "0x2000569")]
	public delegate void ControllerCombinedKeyUnbindCallback(string data);

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ControllerManager instance;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Pvr_ControllerLink controllerlink;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float cTime;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool stopConnect;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text toast;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool controllerServicestate;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float disConnectTime;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool LengthAdaptiveRay;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] sensorData;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] keyData;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] g2SensorData;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] g2KeyData;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int keyOffset;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int rotControllerMode;

	[Token(Token = "0x1700009D")]
	public static Pvr_ControllerManager Instance
	{
		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x1338D24", Offset = "0x1338D24", VA = "0x1338D24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400000E")]
	public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
	{
		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x1338F94", Offset = "0x1338F94", VA = "0x1338F94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9CE0", Offset = "0x8E9CE0")]
		add
		{
		}
		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x13390C4", Offset = "0x13390C4", VA = "0x13390C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9CF0", Offset = "0x8E9CF0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public static event PvrControllerStateChanged PvrControllerStateChangedEvent
	{
		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x13391F4", Offset = "0x13391F4", VA = "0x13391F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9D00", Offset = "0x8E9D00")]
		add
		{
		}
		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x1339324", Offset = "0x1339324", VA = "0x1339324")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9D10", Offset = "0x8E9D10")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
	{
		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x1339454", Offset = "0x1339454", VA = "0x1339454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9D20", Offset = "0x8E9D20")]
		add
		{
		}
		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x1339584", Offset = "0x1339584", VA = "0x1339584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9D30", Offset = "0x8E9D30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
	{
		[Token(Token = "0x6000B95")]
		[Address(RVA = "0x13396B4", Offset = "0x13396B4", VA = "0x13396B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9D40", Offset = "0x8E9D40")]
		add
		{
		}
		[Token(Token = "0x6000B96")]
		[Address(RVA = "0x13397E4", Offset = "0x13397E4", VA = "0x13397E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9D50", Offset = "0x8E9D50")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event SetHbServiceBindState SetHbServiceBindStateEvent
	{
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x1339914", Offset = "0x1339914", VA = "0x1339914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9D60", Offset = "0x8E9D60")]
		add
		{
		}
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x1339A44", Offset = "0x1339A44", VA = "0x1339A44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9D70", Offset = "0x8E9D70")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
	{
		[Token(Token = "0x6000B99")]
		[Address(RVA = "0x1339B74", Offset = "0x1339B74", VA = "0x1339B74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9D80", Offset = "0x8E9D80")]
		add
		{
		}
		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x1339CA4", Offset = "0x1339CA4", VA = "0x1339CA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9D90", Offset = "0x8E9D90")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
	{
		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x1339DD4", Offset = "0x1339DD4", VA = "0x1339DD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9DA0", Offset = "0x8E9DA0")]
		add
		{
		}
		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x1339F04", Offset = "0x1339F04", VA = "0x1339F04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9DB0", Offset = "0x8E9DB0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event ControllerStatusChange ControllerStatusChangeEvent
	{
		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x133A034", Offset = "0x133A034", VA = "0x133A034")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9DC0", Offset = "0x8E9DC0")]
		add
		{
		}
		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x133A164", Offset = "0x133A164", VA = "0x133A164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9DD0", Offset = "0x8E9DD0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event SetControllerAbility SetControllerAbilityEvent
	{
		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x133A294", Offset = "0x133A294", VA = "0x133A294")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9DE0", Offset = "0x8E9DE0")]
		add
		{
		}
		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x133A3C4", Offset = "0x133A3C4", VA = "0x133A3C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9DF0", Offset = "0x8E9DF0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event SetControllerStateChanged SetControllerStateChangedEvent
	{
		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x133A4F4", Offset = "0x133A4F4", VA = "0x133A4F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9E00", Offset = "0x8E9E00")]
		add
		{
		}
		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x133A624", Offset = "0x133A624", VA = "0x133A624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9E10", Offset = "0x8E9E10")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public static event SetHbControllerMac SetHbControllerMacEvent
	{
		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x133A754", Offset = "0x133A754", VA = "0x133A754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9E20", Offset = "0x8E9E20")]
		add
		{
		}
		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0x133A884", Offset = "0x133A884", VA = "0x133A884")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9E30", Offset = "0x8E9E30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
	{
		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0x133A9B4", Offset = "0x133A9B4", VA = "0x133A9B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9E40", Offset = "0x8E9E40")]
		add
		{
		}
		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x133AAE4", Offset = "0x133AAE4", VA = "0x133AAE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9E50", Offset = "0x8E9E50")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
	{
		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x133AC14", Offset = "0x133AC14", VA = "0x133AC14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9E60", Offset = "0x8E9E60")]
		add
		{
		}
		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x133AD44", Offset = "0x133AD44", VA = "0x133AD44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9E70", Offset = "0x8E9E70")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
	{
		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x133AE74", Offset = "0x133AE74", VA = "0x133AE74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9E80", Offset = "0x8E9E80")]
		add
		{
		}
		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x133AFA4", Offset = "0x133AFA4", VA = "0x133AFA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9E90", Offset = "0x8E9E90")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
	{
		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x133B0D4", Offset = "0x133B0D4", VA = "0x133B0D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9EA0", Offset = "0x8E9EA0")]
		add
		{
		}
		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x133B204", Offset = "0x133B204", VA = "0x133B204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9EB0", Offset = "0x8E9EB0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
	{
		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0x133B334", Offset = "0x133B334", VA = "0x133B334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9EC0", Offset = "0x8E9EC0")]
		add
		{
		}
		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0x133B464", Offset = "0x133B464", VA = "0x133B464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9ED0", Offset = "0x8E9ED0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
	{
		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0x133B594", Offset = "0x133B594", VA = "0x133B594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9EE0", Offset = "0x8E9EE0")]
		add
		{
		}
		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0x133B6C4", Offset = "0x133B6C4", VA = "0x133B6C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9EF0", Offset = "0x8E9EF0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
	{
		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0x133B7F4", Offset = "0x133B7F4", VA = "0x133B7F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9F00", Offset = "0x8E9F00")]
		add
		{
		}
		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0x133B924", Offset = "0x133B924", VA = "0x133B924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9F10", Offset = "0x8E9F10")]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
	{
		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0x133BA54", Offset = "0x133BA54", VA = "0x133BA54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9F20", Offset = "0x8E9F20")]
		add
		{
		}
		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0x133BB84", Offset = "0x133BB84", VA = "0x133BB84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9F30", Offset = "0x8E9F30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
	{
		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0x133BCB4", Offset = "0x133BCB4", VA = "0x133BCB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9F40", Offset = "0x8E9F40")]
		add
		{
		}
		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0x133BDE4", Offset = "0x133BDE4", VA = "0x133BDE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9F50", Offset = "0x8E9F50")]
		remove
		{
		}
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x133BF14", Offset = "0x133BF14", VA = "0x133BF14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x133C234", Offset = "0x133C234", VA = "0x133C234")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x133C2E0", Offset = "0x133C2E0", VA = "0x133C2E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x133ECE0", Offset = "0x133ECE0", VA = "0x133ECE0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x133F67C", Offset = "0x133F67C", VA = "0x133F67C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x133F764", Offset = "0x133F764", VA = "0x133F764")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x133F90C", Offset = "0x133F90C", VA = "0x133F90C")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x133F9BC", Offset = "0x133F9BC", VA = "0x133F9BC")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x133FAA8", Offset = "0x133FAA8", VA = "0x133FAA8")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x133C184", Offset = "0x133C184", VA = "0x133C184")]
	public void BindService()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x133FB94", Offset = "0x133FB94", VA = "0x133FB94")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x133FC44", Offset = "0x133FC44", VA = "0x133FC44")]
	public void StopScan()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x133FCF4", Offset = "0x133FCF4", VA = "0x133FCF4")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x133F1F8", Offset = "0x133F1F8", VA = "0x133F1F8")]
	public static int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x133FDAC", Offset = "0x133FDAC", VA = "0x133FDAC")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x133FE5C", Offset = "0x133FE5C", VA = "0x133FE5C")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x133FF0C", Offset = "0x133FF0C", VA = "0x133FF0C")]
	public void SetBinPath(string path, bool isAsset)
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x133FFD8", Offset = "0x133FFD8", VA = "0x133FFD8")]
	public void StartUpgrade()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x1340088", Offset = "0x1340088", VA = "0x1340088")]
	public static string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x1340104", Offset = "0x1340104", VA = "0x1340104")]
	public static long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x1340180", Offset = "0x1340180", VA = "0x1340180")]
	public static string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x13401FC", Offset = "0x13401FC", VA = "0x13401FC")]
	public static long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x1340278", Offset = "0x1340278", VA = "0x1340278")]
	public static void AutoConnectHbController(int scans)
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x1340330", Offset = "0x1340330", VA = "0x1340330")]
	public static string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x13403F0", Offset = "0x13403F0", VA = "0x13403F0")]
	public void setHbControllerMac(string mac)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x1340D10", Offset = "0x1340D10", VA = "0x1340D10")]
	public int GetControllerRSSI()
	{
		return default(int);
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x1340D88", Offset = "0x1340D88", VA = "0x1340D88")]
	public void setHbServiceBindState(string state)
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x134149C", Offset = "0x134149C", VA = "0x134149C")]
	public void setControllerServiceBindState(string state)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x1341B88", Offset = "0x1341B88", VA = "0x1341B88")]
	public void setHbControllerConnectState(string isconnect)
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x1342D0C", Offset = "0x1342D0C", VA = "0x1342D0C")]
	public void setControllerStateChanged(string state)
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x1343B48", Offset = "0x1343B48", VA = "0x1343B48")]
	public void setControllerAbility(string data)
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x134437C", Offset = "0x134437C", VA = "0x134437C")]
	public void controllerThreadStartedCallback()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x1344C94", Offset = "0x1344C94", VA = "0x1344C94")]
	public void controllerDeviceVersionCallback(string data)
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x13454C8", Offset = "0x13454C8", VA = "0x13454C8")]
	public void controllerSnCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x1345CFC", Offset = "0x1345CFC", VA = "0x1345CFC")]
	public void controllerUnbindCallback(string status)
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x1346530", Offset = "0x1346530", VA = "0x1346530")]
	public void controllerStationStatusCallback(string status)
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x1346D64", Offset = "0x1346D64", VA = "0x1346D64")]
	public void controllerStationBusyCallback(string status)
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x1347598", Offset = "0x1347598", VA = "0x1347598")]
	public void controllerOTAStartCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x1347DCC", Offset = "0x1347DCC", VA = "0x1347DCC")]
	public void controllerDeviceVersionAndSNCallback(string data)
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x1348600", Offset = "0x1348600", VA = "0x1348600")]
	public void controllerUniqueIDCallback(string data)
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x1348E34", Offset = "0x1348E34", VA = "0x1348E34")]
	public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x134961C", Offset = "0x134961C", VA = "0x134961C")]
	public void setupdateFailed()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x1349620", Offset = "0x1349620", VA = "0x1349620")]
	public void setupdateSuccess()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x1349624", Offset = "0x1349624", VA = "0x1349624")]
	public void setupdateProgress(string progress)
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x1349628", Offset = "0x1349628", VA = "0x1349628")]
	public void setHbAutoConnectState(string state)
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x1349964", Offset = "0x1349964", VA = "0x1349964")]
	public void callbackControllerServiceState(string state)
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x1349AC0", Offset = "0x1349AC0", VA = "0x1349AC0")]
	public void changeMainControllerCallback(string index)
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x134A350", Offset = "0x134A350", VA = "0x134A350")]
	public void changeHandnessCallback(string index)
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x134977C", Offset = "0x134977C", VA = "0x134977C")]
	private void ShowToast(int type)
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x134ABE0", Offset = "0x134ABE0", VA = "0x134ABE0")]
	private void HideToast()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x134AC90", Offset = "0x134AC90", VA = "0x134AC90")]
	private void CheckControllerService()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x13444C8", Offset = "0x13444C8", VA = "0x13444C8")]
	private void GetCVControllerState()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x133E4FC", Offset = "0x133E4FC", VA = "0x133E4FC")]
	private void SetSystemKey()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x133DFA8", Offset = "0x133DFA8", VA = "0x133DFA8")]
	private void TransformData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x134ACA4", Offset = "0x134ACA4", VA = "0x134ACA4")]
	private void TransSingleKey(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x134AE5C", Offset = "0x134AE5C", VA = "0x134AE5C")]
	private void TransformTouchData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x134AF8C", Offset = "0x134AF8C", VA = "0x134AF8C")]
	private void TransSingleTouchValue(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x134B0CC", Offset = "0x134B0CC", VA = "0x134B0CC")]
	public Pvr_ControllerManager()
	{
	}
}
[Token(Token = "0x20001B2")]
public class Pvr_ControllerModuleInit : MonoBehaviour
{
	[Token(Token = "0x200056A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCE6C", Offset = "0x8CCE6C")]
	private sealed class <ShowOrHideRay>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_ControllerModuleInit <>4__this;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int id;

		[Token(Token = "0x1700029E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002487")]
			[Address(RVA = "0x134C13C", Offset = "0x134C13C", VA = "0x134C13C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002489")]
			[Address(RVA = "0x134C1AC", Offset = "0x134C1AC", VA = "0x134C1AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x134BBF0", Offset = "0x134BBF0", VA = "0x134BBF0")]
		[DebuggerHidden]
		public <ShowOrHideRay>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x134C048", Offset = "0x134C048", VA = "0x134C048", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x134C04C", Offset = "0x134C04C", VA = "0x134C04C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x134C144", Offset = "0x134C144", VA = "0x134C144", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerVariety Variety;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsCustomModel;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rayLine;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool moduleState;

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x134B6C0", Offset = "0x134B6C0", VA = "0x134B6C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x134B8A0", Offset = "0x134B8A0", VA = "0x134B8A0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x134B988", Offset = "0x134B988", VA = "0x134B988")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x134B9FC", Offset = "0x134B9FC", VA = "0x134B9FC")]
	private void ControllerStateChanged(string data)
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x134BB54", Offset = "0x134BB54", VA = "0x134BB54")]
	private void MainControllerIDChanged(string data)
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x134B98C", Offset = "0x134B98C", VA = "0x134B98C")]
	private void RefreshRay()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x134BB58", Offset = "0x134BB58", VA = "0x134BB58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E9F60", Offset = "0x8E9F60")]
	private IEnumerator ShowOrHideRay(int id)
	{
		return null;
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x134BC1C", Offset = "0x134BC1C", VA = "0x134BC1C")]
	public void ForceHideOrShow(bool state)
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x134BD64", Offset = "0x134BD64", VA = "0x134BD64")]
	public void UpdateRay()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x134C038", Offset = "0x134C038", VA = "0x134C038")]
	public Pvr_ControllerModuleInit()
	{
	}
}
[Token(Token = "0x20001B3")]
public class Pvr_ControllerPower : MonoBehaviour
{
	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite power1;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite power2;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite power3;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite power4;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite power5;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image powerImage;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int powerValue;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float power;

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x134C1B4", Offset = "0x134C1B4", VA = "0x134C1B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x134C2AC", Offset = "0x134C2AC", VA = "0x134C2AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x134C2E4", Offset = "0x134C2E4", VA = "0x134C2E4")]
	private void RefreshPower(int hand)
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x134C454", Offset = "0x134C454", VA = "0x134C454")]
	public Pvr_ControllerPower()
	{
	}
}
[Token(Token = "0x20001B4")]
public class Pvr_ControllerVisual : MonoBehaviour
{
	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerDevice currentDevice;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D m_idle;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D m_app;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_home;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_touchpad;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D m_volUp;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D m_volDn;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D m_trigger;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D m_a;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D m_b;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D m_x;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D m_y;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D m_grip;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer controllerRenderMat;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x134C45C", Offset = "0x134C45C", VA = "0x134C45C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x134C4B4", Offset = "0x134C4B4", VA = "0x134C4B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x134C534", Offset = "0x134C534", VA = "0x134C534")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x134C56C", Offset = "0x134C56C", VA = "0x134C56C")]
	private void ChangeKeyEffects(int hand)
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x134C92C", Offset = "0x134C92C", VA = "0x134C92C")]
	public Pvr_ControllerVisual()
	{
	}
}
[Token(Token = "0x20001B5")]
public class Pvr_ToolTips : MonoBehaviour
{
	[Token(Token = "0x200056B")]
	public enum TipBtn
	{
		[Token(Token = "0x4002042")]
		app,
		[Token(Token = "0x4002043")]
		touchpad,
		[Token(Token = "0x4002044")]
		home,
		[Token(Token = "0x4002045")]
		volup,
		[Token(Token = "0x4002046")]
		voldown,
		[Token(Token = "0x4002047")]
		trigger,
		[Token(Token = "0x4002048")]
		grip
	}

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerDevice currentDevice;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float tipsAlpha;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Pvr_ToolTips tooltips;

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x135214C", Offset = "0x135214C", VA = "0x135214C")]
	public void ChangeTipsText(TipBtn tip, string key)
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x1352314", Offset = "0x1352314", VA = "0x1352314")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x1352394", Offset = "0x1352394", VA = "0x1352394")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x1352634", Offset = "0x1352634", VA = "0x1352634")]
	private void LoadTextFromJson()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x1352B88", Offset = "0x1352B88", VA = "0x1352B88")]
	public static void RefreshTips()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x1352C34", Offset = "0x1352C34", VA = "0x1352C34")]
	public Pvr_ToolTips()
	{
	}
}
[Token(Token = "0x20001B6")]
public class Pvr_TouchPadScroll : MonoBehaviour
{
	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect scrollRect;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isHoving;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int mainHand;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SwipeDirection direction;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currPos;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 tarPos;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lerpSpeed;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform tranViewport;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ignoreDis;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 lastTouchDownPos;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 lastTouchUpPos;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isTouching;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isClosed;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 vecOrigin;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 vecOriginNeo2;

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x1352C3C", Offset = "0x1352C3C", VA = "0x1352C3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x1352CE0", Offset = "0x1352CE0", VA = "0x1352CE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x135323C", Offset = "0x135323C", VA = "0x135323C")]
	private bool IsControllerConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x1352E70", Offset = "0x1352E70", VA = "0x1352E70")]
	private void UpdateTargetPos()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x1353438", Offset = "0x1353438", VA = "0x1353438")]
	private void ComputeTouchPos()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x13537EC", Offset = "0x13537EC", VA = "0x13537EC")]
	private void ComputeRockerPos()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x1353BD4", Offset = "0x1353BD4", VA = "0x1353BD4")]
	private bool VerifyNeo2TouchValid(Vector2 nowTouchPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x1352FCC", Offset = "0x1352FCC", VA = "0x1352FCC")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x1353328", Offset = "0x1353328", VA = "0x1353328")]
	private void ResetParameter()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x1352D0C", Offset = "0x1352D0C", VA = "0x1352D0C")]
	private void Process()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x1353C10", Offset = "0x1353C10", VA = "0x1353C10")]
	private bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x1353E3C", Offset = "0x1353E3C", VA = "0x1353E3C")]
	private bool FindTree(Transform tran)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x1353F30", Offset = "0x1353F30", VA = "0x1353F30")]
	public Pvr_TouchPadScroll()
	{
	}
}
[Token(Token = "0x20001B7")]
public class Pvr_TouchVisual : MonoBehaviour
{
	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer touchRenderer;

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x1353FEC", Offset = "0x1353FEC", VA = "0x1353FEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x13540AC", Offset = "0x13540AC", VA = "0x13540AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x13540E4", Offset = "0x13540E4", VA = "0x13540E4")]
	private void ChangeEffects(int hand)
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x1354214", Offset = "0x1354214", VA = "0x1354214")]
	public Pvr_TouchVisual()
	{
	}
}
[Token(Token = "0x20001B8")]
public class DemoController : MonoBehaviour
{
	[Token(Token = "0x200056C")]
	public delegate void showLoadingEventHandler();

	[Token(Token = "0x200056D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCE7C", Offset = "0x8CCE7C")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoController <>4__this;

		[Token(Token = "0x600248E")]
		[Address(RVA = "0xC867A0", Offset = "0xC867A0", VA = "0xC867A0")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0xC871E0", Offset = "0xC871E0", VA = "0xC871E0")]
		internal void <InitDelegate>b__0()
		{
		}
	}

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Callback callback;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject msg;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKManager picoVrManager;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string currentOrderID;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loading;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject BG;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject InputPanel;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static showLoadingEventHandler showLoading;

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0xC85E20", Offset = "0xC85E20", VA = "0xC85E20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0xC86070", Offset = "0xC86070", VA = "0xC86070")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0xC8661C", Offset = "0xC8661C", VA = "0xC8661C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0xC86144", Offset = "0xC86144", VA = "0xC86144")]
	private void InitDelegate()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0xC867A8", Offset = "0xC867A8", VA = "0xC867A8")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0xC86BB4", Offset = "0xC86BB4", VA = "0xC86BB4")]
	public string getRamdomTestOrderID()
	{
		return null;
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0xC86B5C", Offset = "0xC86B5C", VA = "0xC86B5C")]
	private void StartLoading()
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xC86BF8", Offset = "0xC86BF8", VA = "0xC86BF8")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xC86D1C", Offset = "0xC86D1C", VA = "0xC86D1C")]
	public void DoPayByCode()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xC870CC", Offset = "0xC870CC", VA = "0xC870CC")]
	private bool VerifyLocalToken()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xC871D8", Offset = "0xC871D8", VA = "0xC871D8")]
	public DemoController()
	{
	}
}
[Token(Token = "0x20001B9")]
public class LoadingRatation : MonoBehaviour
{
	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xBC6A30", Offset = "0xBC6A30", VA = "0xBC6A30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xBC6A34", Offset = "0xBC6A34", VA = "0xBC6A34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xBC6AB8", Offset = "0xBC6AB8", VA = "0xBC6AB8")]
	public LoadingRatation()
	{
	}
}
[Token(Token = "0x20001BA")]
public class InputManager : MonoBehaviour
{
	[Token(Token = "0x200056E")]
	public delegate void doEnterEventHandler();

	[Token(Token = "0x200056F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCE8C", Offset = "0x8CCE8C")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputManager <>4__this;

		[Token(Token = "0x6002494")]
		[Address(RVA = "0xBBB830", Offset = "0xBBB830", VA = "0xBBB830")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0xBBC894", Offset = "0xBBC894", VA = "0xBBC894")]
		internal void <InitKeyBoard>b__0()
		{
		}
	}

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static doEnterEventHandler doEnter;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StringBuilder sb;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ArrayList btnsName;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject enter;

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xBBACD4", Offset = "0xBBACD4", VA = "0xBBACD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xBBB828", Offset = "0xBBB828", VA = "0xBBB828")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xBBB82C", Offset = "0xBBB82C", VA = "0xBBB82C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xBBACD8", Offset = "0xBBACD8", VA = "0xBBACD8")]
	private void InitKeyBoard()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xBBB838", Offset = "0xBBB838", VA = "0xBBB838")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xBBC6E0", Offset = "0xBBC6E0", VA = "0xBBC6E0")]
	private void EnterChar(string s)
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xBBBB3C", Offset = "0xBBBB3C", VA = "0xBBBB3C")]
	private void DoCapslock(bool IsUpper)
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0xBBC22C", Offset = "0xBBC22C", VA = "0xBBC22C")]
	private void ClearBuffer()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0xBBC80C", Offset = "0xBBC80C", VA = "0xBBC80C")]
	public InputManager()
	{
	}
}
[Token(Token = "0x20001BB")]
public class Callback : MonoBehaviour
{
	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IS_SUCCESS;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string MSG;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string CODE;

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0xCDFDA0", Offset = "0xCDFDA0", VA = "0xCDFDA0")]
	public void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0xCE01E8", Offset = "0xCE01E8", VA = "0xCE01E8")]
	public void QueryOrPayCallback(string queryOrPayInfo)
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0xCE049C", Offset = "0xCE049C", VA = "0xCE049C")]
	public void UserInfoCallback(string userInfo)
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0xCE002C", Offset = "0xCE002C", VA = "0xCE002C")]
	public void SetMassage(string massage)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0xCE0584", Offset = "0xCE0584", VA = "0xCE0584")]
	public GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0xCE05D0", Offset = "0xCE05D0", VA = "0xCE05D0")]
	public void ActivityForResultCallback(string activity)
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0xCE06D8", Offset = "0xCE06D8", VA = "0xCE06D8")]
	public Callback()
	{
	}
}
[Token(Token = "0x20001BC")]
public class CommonDic
{
	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CommonDic dic;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, string> mydic;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _app_ID;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _app_Key;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _user_token;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _access_token;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _open_id;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _refresh_token;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _expires_in;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _user_info;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _subject;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _body;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _order_id;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _total;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _goods_tag;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _notify_url;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _trade_type;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _pay_code;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _order_info;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _code;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string _msg;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string _merchant_ID;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _payKey;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string _isSuucess;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string _loginMsg;

	[Token(Token = "0x1700009E")]
	public string subject
	{
		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xCE3D90", Offset = "0xCE3D90", VA = "0xCE3D90")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xCE3CE0", Offset = "0xCE3CE0", VA = "0xCE3CE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public string body
	{
		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xCE3D98", Offset = "0xCE3D98", VA = "0xCE3D98")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xCE3CE8", Offset = "0xCE3CE8", VA = "0xCE3CE8")]
		set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public string order_id
	{
		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xCE3DA0", Offset = "0xCE3DA0", VA = "0xCE3DA0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xCE3CF0", Offset = "0xCE3CF0", VA = "0xCE3CF0")]
		set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public string total
	{
		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xCE3DA8", Offset = "0xCE3DA8", VA = "0xCE3DA8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xCE3CF8", Offset = "0xCE3CF8", VA = "0xCE3CF8")]
		set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public string goods_tag
	{
		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xCE3DB0", Offset = "0xCE3DB0", VA = "0xCE3DB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xCE3D00", Offset = "0xCE3D00", VA = "0xCE3D00")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public string notify_url
	{
		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xCE3DB8", Offset = "0xCE3DB8", VA = "0xCE3DB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xCE3D08", Offset = "0xCE3D08", VA = "0xCE3D08")]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public string pay_code
	{
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xCE3DC0", Offset = "0xCE3DC0", VA = "0xCE3DC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xCE3D18", Offset = "0xCE3D18", VA = "0xCE3D18")]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public string trade_type
	{
		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xCE3DC8", Offset = "0xCE3DC8", VA = "0xCE3DC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xCE3D10", Offset = "0xCE3D10", VA = "0xCE3D10")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public string user_token
	{
		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xCE3DD0", Offset = "0xCE3DD0", VA = "0xCE3DD0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xCE3DD8", Offset = "0xCE3DD8", VA = "0xCE3DD8")]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public string access_token
	{
		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xCE3DE0", Offset = "0xCE3DE0", VA = "0xCE3DE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xCE3DE8", Offset = "0xCE3DE8", VA = "0xCE3DE8")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public string open_id
	{
		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xCE3DF0", Offset = "0xCE3DF0", VA = "0xCE3DF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xCE3DF8", Offset = "0xCE3DF8", VA = "0xCE3DF8")]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public string refresh_token
	{
		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xCE3E00", Offset = "0xCE3E00", VA = "0xCE3E00")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xCE3E08", Offset = "0xCE3E08", VA = "0xCE3E08")]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public string expires_in
	{
		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xCE3E10", Offset = "0xCE3E10", VA = "0xCE3E10")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xCE3E18", Offset = "0xCE3E18", VA = "0xCE3E18")]
		set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public string isSuccess
	{
		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xCE3E20", Offset = "0xCE3E20", VA = "0xCE3E20")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xCE01D8", Offset = "0xCE01D8", VA = "0xCE01D8")]
		set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public string loginMsg
	{
		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xCE3E28", Offset = "0xCE3E28", VA = "0xCE3E28")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xCE01E0", Offset = "0xCE01E0", VA = "0xCE01E0")]
		set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public string user_info
	{
		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xCE3E30", Offset = "0xCE3E30", VA = "0xCE3E30")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xCE057C", Offset = "0xCE057C", VA = "0xCE057C")]
		set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public string order_info
	{
		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xCE3E38", Offset = "0xCE3E38", VA = "0xCE3E38")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xCE0494", Offset = "0xCE0494", VA = "0xCE0494")]
		set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public string code
	{
		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xCE3E40", Offset = "0xCE3E40", VA = "0xCE3E40")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xCE0484", Offset = "0xCE0484", VA = "0xCE0484")]
		set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public string msg
	{
		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xCE3E48", Offset = "0xCE3E48", VA = "0xCE3E48")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xCE048C", Offset = "0xCE048C", VA = "0xCE048C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public string app_ID
	{
		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xCE3E50", Offset = "0xCE3E50", VA = "0xCE3E50")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xCE3E58", Offset = "0xCE3E58", VA = "0xCE3E58")]
		set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public string app_Key
	{
		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xCE3E60", Offset = "0xCE3E60", VA = "0xCE3E60")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xCE3E68", Offset = "0xCE3E68", VA = "0xCE3E68")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public string merchant_ID
	{
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xCE3E70", Offset = "0xCE3E70", VA = "0xCE3E70")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xCE3E78", Offset = "0xCE3E78", VA = "0xCE3E78")]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public string paykey
	{
		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xCE3E80", Offset = "0xCE3E80", VA = "0xCE3E80")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xCE3E88", Offset = "0xCE3E88", VA = "0xCE3E88")]
		set
		{
		}
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0xCE0114", Offset = "0xCE0114", VA = "0xCE0114")]
	public static CommonDic getInstance()
	{
		return null;
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0xCE3AE0", Offset = "0xCE3AE0", VA = "0xCE3AE0")]
	public Dictionary<string, string> getDic()
	{
		return null;
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0xCE3B30", Offset = "0xCE3B30", VA = "0xCE3B30")]
	public void setParameters(string name, string value)
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0xCE3D20", Offset = "0xCE3D20", VA = "0xCE3D20")]
	public string PayOrderString()
	{
		return null;
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xCE3304", Offset = "0xCE3304", VA = "0xCE3304")]
	public static void InitDicData(Dictionary<string, string> mydic)
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xCE3298", Offset = "0xCE3298", VA = "0xCE3298")]
	public CommonDic()
	{
	}
}
[Token(Token = "0x20001BD")]
public class LoginSDK
{
	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xBCAD80", Offset = "0xBCAD80", VA = "0xBCAD80")]
	public static void Login()
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xBCADE0", Offset = "0xBCADE0", VA = "0xBCADE0")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xBCAE40", Offset = "0xBCAE40", VA = "0xBCAE40")]
	public LoginSDK()
	{
	}
}
[Token(Token = "0x20001BE")]
public class PicoPaymentSDK
{
	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject _jo;

	[Token(Token = "0x170000B5")]
	public static AndroidJavaObject jo
	{
		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xE9C21C", Offset = "0xE9C21C", VA = "0xE9C21C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xE9C284", Offset = "0xE9C284", VA = "0xE9C284")]
		set
		{
		}
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0xE9C2F0", Offset = "0xE9C2F0", VA = "0xE9C2F0")]
	public static void Login()
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0xE9C494", Offset = "0xE9C494", VA = "0xE9C494")]
	public static void Pay(string payOrderJson)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xE9C694", Offset = "0xE9C694", VA = "0xE9C694")]
	public static void QueryOrder(string orderId)
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0xE9C894", Offset = "0xE9C894", VA = "0xE9C894")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0xE9CA38", Offset = "0xE9CA38", VA = "0xE9CA38")]
	public PicoPaymentSDK()
	{
	}
}
[Token(Token = "0x20001BF")]
public class Pvr_ToBService : MonoBehaviour
{
	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text deviceInfoText;

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x1351C20", Offset = "0x1351C20", VA = "0x1351C20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x1351C58", Offset = "0x1351C58", VA = "0x1351C58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x1351C68", Offset = "0x1351C68", VA = "0x1351C68")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x1351C24", Offset = "0x1351C24", VA = "0x1351C24")]
	private void InitToBService()
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x1351C60", Offset = "0x1351C60", VA = "0x1351C60")]
	private void BindToBService()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x1351C70", Offset = "0x1351C70", VA = "0x1351C70")]
	private void UnBindToBService()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x1351C78", Offset = "0x1351C78", VA = "0x1351C78")]
	private void BoolCallback(string value)
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x1351D28", Offset = "0x1351D28", VA = "0x1351D28")]
	private void IntCallback(string value)
	{
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x1351DB8", Offset = "0x1351DB8", VA = "0x1351DB8")]
	private void LongCallback(string value)
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x1351E48", Offset = "0x1351E48", VA = "0x1351E48")]
	public void StateGetDeviceInfo()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x1351ED8", Offset = "0x1351ED8", VA = "0x1351ED8")]
	public void ControlSetDeviceAction()
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x1351F58", Offset = "0x1351F58", VA = "0x1351F58")]
	private void ControlSetDeviceActionCallBack(int value)
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x1352008", Offset = "0x1352008", VA = "0x1352008")]
	public void AppManager()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x1352094", Offset = "0x1352094", VA = "0x1352094")]
	private void AppManagerCallBack(int value)
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x1352144", Offset = "0x1352144", VA = "0x1352144")]
	public Pvr_ToBService()
	{
	}
}
[Token(Token = "0x20001C0")]
public class PLOG : MonoBehaviour
{
	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int logLevel;

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0xF628E4", Offset = "0xF628E4", VA = "0xF628E4")]
	public static void getConfigTraceLevel()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xF62950", Offset = "0xF62950", VA = "0xF62950")]
	public static void D(string msg)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0xF629F8", Offset = "0xF629F8", VA = "0xF629F8")]
	public static void I(string msg)
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0xF62AA0", Offset = "0xF62AA0", VA = "0xF62AA0")]
	public static void W(string msg)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xF62B48", Offset = "0xF62B48", VA = "0xF62B48")]
	public static void E(string msg)
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0xF62BB0", Offset = "0xF62BB0", VA = "0xF62BB0")]
	public PLOG()
	{
	}
}
[Token(Token = "0x20001C1")]
public class CPicoSDKSettingAsset : ScriptableObject
{
	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IgnoreSDKSetting;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool DontshowBuildWaring;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AppIDChecked;

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xCDF254", Offset = "0xCDF254", VA = "0xCDF254")]
	public CPicoSDKSettingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C2")]
public class Pvr_UnitySDKProjectSetting : ScriptableObject
{
	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTextureAntiAliasing rtAntiAlising;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTextureDepth rtBitDepth;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTextureFormat rtFormat;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool usedefaultRenderTexture;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 customRTSize;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool usedefaultfps;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int customfps;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool usesinglepass;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool usecontentprotect;

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x10639EC", Offset = "0x10639EC", VA = "0x10639EC")]
	public static Pvr_UnitySDKProjectSetting GetProjectConfig()
	{
		return null;
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x106C11C", Offset = "0x106C11C", VA = "0x106C11C")]
	public Pvr_UnitySDKProjectSetting()
	{
	}
}
[Token(Token = "0x20001C3")]
public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
{
	[Token(Token = "0x2000570")]
	public enum simulationType
	{
		[Token(Token = "0x400204E")]
		Null,
		[Token(Token = "0x400204F")]
		Invalid,
		[Token(Token = "0x4002050")]
		Valid
	}

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool entitlementchecksimulation;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool startTimeEntitlementCheck;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string appID;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> deviceSN;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKPlatformSetting instance;

	[Token(Token = "0x170000B6")]
	public static bool Entitlementchecksimulation
	{
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x106B200", Offset = "0x106B200", VA = "0x106B200")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x106B22C", Offset = "0x106B22C", VA = "0x106B22C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public static bool StartTimeEntitlementCheck
	{
		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x106AE20", Offset = "0x106AE20", VA = "0x106AE20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x106B284", Offset = "0x106B284", VA = "0x106B284")]
		set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public static Pvr_UnitySDKPlatformSetting Instance
	{
		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x106AE4C", Offset = "0x106AE4C", VA = "0x106AE4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x106B2DC", Offset = "0x106B2DC", VA = "0x106B2DC")]
		set
		{
		}
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x106B330", Offset = "0x106B330", VA = "0x106B330")]
	public Pvr_UnitySDKPlatformSetting()
	{
	}
}
[Token(Token = "0x20001C4")]
public class Pvr_UnitySDKManager : MonoBehaviour
{
	[Token(Token = "0x2000571")]
	public delegate void EntitlementCheckResult(int ReturnValue);

	[Token(Token = "0x2000572")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCE9C", Offset = "0x8CCE9C")]
	private sealed class <ToastManager>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int type;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool state;

		[Token(Token = "0x170002A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600249D")]
			[Address(RVA = "0x106B0E0", Offset = "0x106B0E0", VA = "0x106B0E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600249F")]
			[Address(RVA = "0x106B150", Offset = "0x106B150", VA = "0x106B150", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600249A")]
		[Address(RVA = "0x10652C4", Offset = "0x10652C4", VA = "0x10652C4")]
		[DebuggerHidden]
		public <ToastManager>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x106AF7C", Offset = "0x106AF7C", VA = "0x106AF7C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600249C")]
		[Address(RVA = "0x106AF80", Offset = "0x106AF80", VA = "0x106AF80", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0x106B0E8", Offset = "0x106B0E8", VA = "0x106B0E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000573")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCEAC", Offset = "0x8CCEAC")]
	private sealed class <>c__DisplayClass102_0
	{
		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trans;

		[Token(Token = "0x60024A0")]
		[Address(RVA = "0x1066B48", Offset = "0x1066B48", VA = "0x1066B48")]
		public <>c__DisplayClass102_0()
		{
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x1069E68", Offset = "0x1069E68", VA = "0x1069E68")]
		internal void <SetProperty>b__0()
		{
		}
	}

	[Token(Token = "0x2000574")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCEBC", Offset = "0x8CCEBC")]
	private sealed class <G3TipsManager>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tip;

		[Token(Token = "0x170002A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024A5")]
			[Address(RVA = "0x1069FA8", Offset = "0x1069FA8", VA = "0x1069FA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024A7")]
			[Address(RVA = "0x106A018", Offset = "0x106A018", VA = "0x106A018", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024A2")]
		[Address(RVA = "0x1066F54", Offset = "0x1066F54", VA = "0x1066F54")]
		[DebuggerHidden]
		public <G3TipsManager>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x1069EE4", Offset = "0x1069EE4", VA = "0x1069EE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x1069EE8", Offset = "0x1069EE8", VA = "0x1069EE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024A6")]
		[Address(RVA = "0x1069FB0", Offset = "0x1069FB0", VA = "0x1069FB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000575")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCECC", Offset = "0x8CCECC")]
	private sealed class <Start>d__118 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x170002A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024AB")]
			[Address(RVA = "0x106AF04", Offset = "0x106AF04", VA = "0x106AF04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024AD")]
			[Address(RVA = "0x106AF74", Offset = "0x106AF74", VA = "0x106AF74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024A8")]
		[Address(RVA = "0x1069084", Offset = "0x1069084", VA = "0x1069084")]
		[DebuggerHidden]
		public <Start>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x106AB94", Offset = "0x106AB94", VA = "0x106AB94", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x106AB98", Offset = "0x106AB98", VA = "0x106AB98", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x106AF0C", Offset = "0x106AF0C", VA = "0x106AF0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000576")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCEDC", Offset = "0x8CCEDC")]
	private sealed class <InitRenderThreadRoutine>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x170002A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024B1")]
			[Address(RVA = "0x106A320", Offset = "0x106A320", VA = "0x106A320", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024B3")]
			[Address(RVA = "0x106A390", Offset = "0x106A390", VA = "0x106A390", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024AE")]
		[Address(RVA = "0x1069110", Offset = "0x1069110", VA = "0x1069110")]
		[DebuggerHidden]
		public <InitRenderThreadRoutine>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x106A020", Offset = "0x106A020", VA = "0x106A020", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x106A024", Offset = "0x106A024", VA = "0x106A024", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x106A328", Offset = "0x106A328", VA = "0x106A328", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000577")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCEEC", Offset = "0x8CCEEC")]
	private sealed class <OnResume>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <ability6dof>5__2;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <waitNum>5__3;

		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <resetNum>5__4;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__5;

		[Token(Token = "0x170002A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024B7")]
			[Address(RVA = "0x106AB1C", Offset = "0x106AB1C", VA = "0x106AB1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024B9")]
			[Address(RVA = "0x106AB8C", Offset = "0x106AB8C", VA = "0x106AB8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x1069D5C", Offset = "0x1069D5C", VA = "0x1069D5C")]
		[DebuggerHidden]
		public <OnResume>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x60024B5")]
		[Address(RVA = "0x106A398", Offset = "0x106A398", VA = "0x106A398", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024B6")]
		[Address(RVA = "0x106A39C", Offset = "0x106A39C", VA = "0x106A39C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024B8")]
		[Address(RVA = "0x106AB24", Offset = "0x106AB24", VA = "0x106AB24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatForm platform;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Pvr_UnitySDKManager sdk;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float EyesAspect;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int posStatus;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool ismirroring;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Vector3 resetBasePos;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int trackingmode;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int systemprop;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool systemFPS;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float[] headData;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool rotfoldout;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool hmdOnlyrot;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool controllerOnlyrot;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private TrackingOrigin trackingOrigin;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ResetTrackerOnLoad;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public Vector3 leftEyeOffset;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Vector3 rightEyeOffset;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public Rect leftEyeRect;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Rect rightEyeRect;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Matrix4x4 leftEyeView;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public Matrix4x4 rightEyeView;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private bool vrModeEnabled;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public Material Eyematerial;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public Material Middlematerial;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA0C4", Offset = "0x8DA0C4")]
	private bool <picovrTriggered>k__BackingField;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[HideInInspector]
	public bool newPicovrTriggered;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	[SerializeField]
	private bool showFPS;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[HideInInspector]
	public Vector3 neckOffset;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private bool pVRNeck;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	[HideInInspector]
	public bool UseCustomNeckPara;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	[HideInInspector]
	public bool onResume;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	[HideInInspector]
	public bool isEnterVRMode;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool isHasController;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject calltoast;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject msgtoast;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject lowhmdBatterytoast;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject lowphoneBatterytoast;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject LowPhoneHealthtoast;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GameObject LowcontrollerBatterytoast;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool lowControllerpowerstate;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float controllerpowershowtime;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool UseToast;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GameObject G3LiteTips;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private bool monoscopic;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool mIsAndroid7;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Func<bool> eventEnterVRMode;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	[HideInInspector]
	public bool ShowVideoSeethrough;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public int SystemDebugFFRLevel;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public int SystemFFRLevel;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public int AppCheckResult;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Action longPressHomeKeyAction;

	[Token(Token = "0x170000B9")]
	public static Pvr_UnitySDKManager SDK
	{
		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x105BC30", Offset = "0x105BC30", VA = "0x105BC30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BA")]
	public bool Rotfoldout
	{
		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x10638F0", Offset = "0x10638F0", VA = "0x10638F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x10638F8", Offset = "0x10638F8", VA = "0x10638F8")]
		set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public bool HmdOnlyrot
	{
		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x1063918", Offset = "0x1063918", VA = "0x1063918")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x1063920", Offset = "0x1063920", VA = "0x1063920")]
		set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	public bool ControllerOnlyrot
	{
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x1063940", Offset = "0x1063940", VA = "0x1063940")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x1063948", Offset = "0x1063948", VA = "0x1063948")]
		set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	public TrackingOrigin TrackingOrigin
	{
		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x1063968", Offset = "0x1063968", VA = "0x1063968")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x1063970", Offset = "0x1063970", VA = "0x1063970")]
		set
		{
		}
	}

	[Token(Token = "0x170000BE")]
	[HideInInspector]
	public bool VRModeEnabled
	{
		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x105C974", Offset = "0x105C974", VA = "0x105C974")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x1063A7C", Offset = "0x1063A7C", VA = "0x1063A7C")]
		set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	[HideInInspector]
	public bool picovrTriggered
	{
		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x1063A9C", Offset = "0x1063A9C", VA = "0x1063A9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9FC4", Offset = "0x8E9FC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x1063AA4", Offset = "0x1063AA4", VA = "0x1063AA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9FD4", Offset = "0x8E9FD4")]
		set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	public bool ShowFPS
	{
		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x1063AB0", Offset = "0x1063AB0", VA = "0x1063AB0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x1063AB8", Offset = "0x1063AB8", VA = "0x1063AB8")]
		set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public bool PVRNeck
	{
		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x1063AD8", Offset = "0x1063AD8", VA = "0x1063AD8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x1063AE0", Offset = "0x1063AE0", VA = "0x1063AE0")]
		set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	[HideInInspector]
	public bool Monoscopic
	{
		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x105BD98", Offset = "0x105BD98", VA = "0x105BD98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x1063B00", Offset = "0x1063B00", VA = "0x1063B00")]
		set
		{
		}
	}

	[Token(Token = "0x14000022")]
	public static event EntitlementCheckResult EntitlementCheckResultEvent
	{
		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x1063B2C", Offset = "0x1063B2C", VA = "0x1063B2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9FE4", Offset = "0x8E9FE4")]
		add
		{
		}
		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x1063C5C", Offset = "0x1063C5C", VA = "0x1063C5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E9FF4", Offset = "0x8E9FF4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x1063990", Offset = "0x1063990", VA = "0x1063990")]
	public void ChangeDefaultCustomRtSize(int w, int h)
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x105BD58", Offset = "0x105BD58", VA = "0x105BD58")]
	public Vector3 EyeOffset(Eye eye)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x1063A40", Offset = "0x1063A40", VA = "0x1063A40")]
	public Rect EyeRect(Eye eye)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x1063D8C", Offset = "0x1063D8C", VA = "0x1063D8C")]
	private bool SDKManagerInit()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x1063EE4", Offset = "0x1063EE4", VA = "0x1063EE4")]
	private bool SDKManagerInitCoreAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x1064024", Offset = "0x1064024", VA = "0x1064024")]
	public void smsReceivedCallback(string msg)
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x1064A48", Offset = "0x1064A48", VA = "0x1064A48")]
	public void phoneStateCallback(string state)
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x1064EA4", Offset = "0x1064EA4", VA = "0x1064EA4")]
	public void phoneBatteryStateCallback(string state)
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x1065180", Offset = "0x1065180", VA = "0x1065180")]
	public void hmdLowBatteryCallback(string level)
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x1064480", Offset = "0x1064480", VA = "0x1064480")]
	private string TransformNumber(string number)
	{
		return null;
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x10652C0", Offset = "0x10652C0", VA = "0x10652C0")]
	public void onHmdOrientationReseted()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x1064974", Offset = "0x1064974", VA = "0x1064974")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EA004", Offset = "0x8EA004")]
	private IEnumerator ToastManager(int type, bool state, float time)
	{
		return null;
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x10652F0", Offset = "0x10652F0", VA = "0x10652F0")]
	private void CheckControllerStateForG2(string state)
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x10654A8", Offset = "0x10654A8", VA = "0x10654A8")]
	public void notificationCallback(string data)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x106686C", Offset = "0x106686C", VA = "0x106686C")]
	private Sprite LoadSprite(Vector2 size, string filepath)
	{
		return null;
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x1066998", Offset = "0x1066998", VA = "0x1066998")]
	private byte[] ReadTex(string path)
	{
		return null;
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x1065900", Offset = "0x1065900", VA = "0x1065900")]
	private void SetProperty(int type, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x1065F48", Offset = "0x1065F48", VA = "0x1065F48")]
	private void SetBaseProperty(Transform trans, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x1066478", Offset = "0x1066478", VA = "0x1066478")]
	private void SetImageProperty(Transform image, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x1066B50", Offset = "0x1066B50", VA = "0x1066B50")]
	private void SetTextProperty(Transform text, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x10667D4", Offset = "0x10667D4", VA = "0x10667D4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EA068", Offset = "0x8EA068")]
	private IEnumerator G3TipsManager(GameObject tip, float time)
	{
		return null;
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x1066ED8", Offset = "0x1066ED8", VA = "0x1066ED8")]
	private float JsonToFloat(JsonData data)
	{
		return default(float);
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x1066F80", Offset = "0x1066F80", VA = "0x1066F80")]
	private bool SDKManagerInitFPS()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x1063E70", Offset = "0x1063E70", VA = "0x1063E70")]
	private bool SDKManagerInitConfigProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x1067160", Offset = "0x1067160", VA = "0x1067160")]
	private bool SDKManagerInitEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x1067210", Offset = "0x1067210", VA = "0x1067210")]
	private bool SDKManagerInitPara()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x1067218", Offset = "0x1067218", VA = "0x1067218")]
	public void SDKManagerLongHomeKey()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x1067328", Offset = "0x1067328", VA = "0x1067328")]
	private void setLongHomeKey()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x106774C", Offset = "0x106774C", VA = "0x106774C")]
	public void verifyAPPCallback(string code)
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x1067CD8", Offset = "0x1067CD8", VA = "0x1067CD8")]
	public void IpdRefreshCallBack(string ipd)
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x1067E30", Offset = "0x1067E30", VA = "0x1067E30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x1069010", Offset = "0x1069010", VA = "0x1069010")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EA0CC", Offset = "0x8EA0CC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x10690B0", Offset = "0x10690B0", VA = "0x10690B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EA130", Offset = "0x8EA130")]
	private IEnumerator InitRenderThreadRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x106913C", Offset = "0x106913C", VA = "0x106913C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x1069494", Offset = "0x1069494", VA = "0x1069494")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x10695F4", Offset = "0x10695F4", VA = "0x10695F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x106972C", Offset = "0x106972C", VA = "0x106972C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x1069734", Offset = "0x1069734", VA = "0x1069734")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x10699A8", Offset = "0x10699A8", VA = "0x10699A8")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x1069C5C", Offset = "0x1069C5C", VA = "0x1069C5C")]
	public void EnterVRMode()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x10697E4", Offset = "0x10697E4", VA = "0x10697E4")]
	public void LeaveVRMode()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x1069D54", Offset = "0x1069D54", VA = "0x1069D54")]
	public void SixDofForceQuit()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x1068824", Offset = "0x1068824", VA = "0x1068824")]
	private void InitUI()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x1068AC0", Offset = "0x1068AC0", VA = "0x1068AC0")]
	private void RefreshTextByLanguage()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x1068480", Offset = "0x1068480", VA = "0x1068480")]
	private void LoadIsMirroringValue()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x1069BE8", Offset = "0x1069BE8", VA = "0x1069BE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EA194", Offset = "0x8EA194")]
	private IEnumerator OnResume()
	{
		return null;
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x1069D88", Offset = "0x1069D88", VA = "0x1069D88")]
	public Pvr_UnitySDKManager()
	{
	}
}
[Token(Token = "0x20001C5")]
public class QuitGame : MonoBehaviour
{
	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x1074F90", Offset = "0x1074F90", VA = "0x1074F90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x1074F94", Offset = "0x1074F94", VA = "0x1074F94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x1074FC0", Offset = "0x1074FC0", VA = "0x1074FC0")]
	public QuitGame()
	{
	}
}
[Token(Token = "0x20001C6")]
public class Pvr_UnityEyeMask : MonoBehaviour
{
	[Token(Token = "0x2000578")]
	private class EyeMaskData
	{
		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Eye eyeSide;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x1527894", Offset = "0x1527894", VA = "0x1527894")]
		public EyeMaskData()
		{
		}
	}

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader eyeMaskShader;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material eyeMaskMaterial;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh eyeMaskMeshLeft;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh eyeMaskMeshRight;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh eyeMaskMeshBoth;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float zDir;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color eyeMaskColor;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<EyeMaskData> cameraDataList;

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x1525BD4", Offset = "0x1525BD4", VA = "0x1525BD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x1525C90", Offset = "0x1525C90", VA = "0x1525C90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x1526944", Offset = "0x1526944", VA = "0x1526944")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x152631C", Offset = "0x152631C", VA = "0x152631C")]
	private void CreateCommandBuffer()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x1527670", Offset = "0x1527670", VA = "0x1527670")]
	private void OnCustomPreRender(Camera cam)
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x1526D98", Offset = "0x1526D98", VA = "0x1526D98")]
	private Mesh GetStencilMesh(Eye eyeSide)
	{
		return null;
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x15271FC", Offset = "0x15271FC", VA = "0x15271FC")]
	private Mesh GetStencilMeshBoth(Mesh leftMesh, Mesh rightMesh)
	{
		return null;
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x1526C54", Offset = "0x1526C54", VA = "0x1526C54")]
	private bool VerifyCommadBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x1525F58", Offset = "0x1525F58", VA = "0x1525F58")]
	private void PrepareCameras()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x1527830", Offset = "0x1527830", VA = "0x1527830")]
	private void AddCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x1526B80", Offset = "0x1526B80", VA = "0x1526B80")]
	private void RemoveCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x1526BE0", Offset = "0x1526BE0", VA = "0x1526BE0")]
	private void CleanEyeMask()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x152789C", Offset = "0x152789C", VA = "0x152789C")]
	public Pvr_UnityEyeMask()
	{
	}
}
[Token(Token = "0x20001C7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C9060", Offset = "0x8C9060")]
public class Pvr_UnitySDKEye : MonoBehaviour
{
	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEye> Instances;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Eye eyeSide;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA174", Offset = "0x8DA174")]
	private Camera <eyecamera>k__BackingField;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int eyeCameraOriginCullingMask;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private CameraClearFlags eyeCameraOriginClearFlag;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color eyeCameraOriginBackgroundColor;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastBoundaryState;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Matrix4x4 realProj;

	[Token(Token = "0x4000CC1")]
	private const int bufferSize = 3;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int IDIndex;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RenderEventType eventType;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int previousId;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool setLevel;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material mat_Vignette;

	[Token(Token = "0x170000C3")]
	public Camera eyecamera
	{
		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x105A5FC", Offset = "0x105A5FC", VA = "0x105A5FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA1F8", Offset = "0x8EA1F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x105A604", Offset = "0x105A604", VA = "0x105A604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA208", Offset = "0x8EA208")]
		private set
		{
		}
	}

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x105A60C", Offset = "0x105A60C", VA = "0x105A60C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x105A6B4", Offset = "0x105A6B4", VA = "0x105A6B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x105AD2C", Offset = "0x105AD2C", VA = "0x105AD2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x105B00C", Offset = "0x105B00C", VA = "0x105B00C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x105B0D8", Offset = "0x105B0D8", VA = "0x105B0D8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x105B1A4", Offset = "0x105B1A4", VA = "0x105B1A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x105B230", Offset = "0x105B230", VA = "0x105B230")]
	public void MyPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x105B454", Offset = "0x105B454", VA = "0x105B454")]
	public void MyPreRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x105B518", Offset = "0x105B518", VA = "0x105B518")]
	public void MyPostRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x105B2F4", Offset = "0x105B2F4", VA = "0x105B2F4")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x105B5DC", Offset = "0x105B5DC", VA = "0x105B5DC")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x105BA58", Offset = "0x105BA58", VA = "0x105BA58")]
	public void EyeRender()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x105A7A4", Offset = "0x105A7A4", VA = "0x105A7A4")]
	private void Setup(Eye eyeSide)
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x105AA20", Offset = "0x105AA20", VA = "0x105AA20")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x105BDA8", Offset = "0x105BDA8", VA = "0x105BDA8")]
	public void RefreshCameraPosition(float ipd)
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x105BF88", Offset = "0x105BF88", VA = "0x105BF88")]
	private void DrawVignetteLine()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x105C0BC", Offset = "0x105C0BC", VA = "0x105C0BC")]
	private void vignette()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x105B884", Offset = "0x105B884", VA = "0x105B884")]
	private void SetFFRParameter()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x105C434", Offset = "0x105C434", VA = "0x105C434")]
	public Pvr_UnitySDKEye()
	{
	}
}
[Token(Token = "0x20001C8")]
public class Pvr_UnitySDKEyeManager : MonoBehaviour
{
	[Token(Token = "0x2000579")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCEFC", Offset = "0x8CCEFC")]
	private sealed class <EndOfFrame>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x170002AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024BE")]
			[Address(RVA = "0x1061BC8", Offset = "0x1061BC8", VA = "0x1061BC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024C0")]
			[Address(RVA = "0x1061C38", Offset = "0x1061C38", VA = "0x1061C38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x105E864", Offset = "0x105E864", VA = "0x105E864")]
		[DebuggerHidden]
		public <EndOfFrame>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x105F9A8", Offset = "0x105F9A8", VA = "0x105F9A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x105F9AC", Offset = "0x105F9AC", VA = "0x105F9AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0x1061BD0", Offset = "0x1061BD0", VA = "0x1061BD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200057A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCF0C", Offset = "0x8CCF0C")]
	private sealed class <ScreenFade>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x170002AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024C4")]
			[Address(RVA = "0x1061D7C", Offset = "0x1061D7C", VA = "0x1061D7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024C6")]
			[Address(RVA = "0x1061DEC", Offset = "0x1061DEC", VA = "0x1061DEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024C1")]
		[Address(RVA = "0x105F8E4", Offset = "0x105F8E4", VA = "0x105F8E4")]
		[DebuggerHidden]
		public <ScreenFade>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x60024C2")]
		[Address(RVA = "0x1061C40", Offset = "0x1061C40", VA = "0x1061C40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024C3")]
		[Address(RVA = "0x1061C44", Offset = "0x1061C44", VA = "0x1061C44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0x1061D84", Offset = "0x1061D84", VA = "0x1061D84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKEyeManager instance;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Camera LeftEyeCamera;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Camera RightEyeCamera;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Camera MonoEyeCamera;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Camera BothEyeCamera;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int MonoEyeTextureID;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int WaitSplashScreenFrames;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int frameNum;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[HideInInspector]
	private bool foveatedRendering;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private EFoveationLevel foveationLevel;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int eyeTextureId;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderEventType eventType;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Pvr_UnitySDKEyeOverlay compositeLayer;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int overlayLayerDepth;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int underlayLayerDepth;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isHeadLocked;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int layerFlags;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public bool EyeTracking;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Vector3 eyePoint;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EyeTrackingData eyePoseData;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static bool supportEyeTracking;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA264", Offset = "0x8DA264")]
	public bool screenFade;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA29C", Offset = "0x8DA29C")]
	public float fadeTime;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA2D4", Offset = "0x8DA2D4")]
	public Color fadeColor;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int renderQueue;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private MeshFilter fadeMeshFilter;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Material fadeMaterial;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float elapsedTime;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool isFading;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float currentAlpha;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float nowFadeAlpha;

	[Token(Token = "0x170000C4")]
	public static Pvr_UnitySDKEyeManager Instance
	{
		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x105C33C", Offset = "0x105C33C", VA = "0x105C33C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C5")]
	public Pvr_UnitySDKEye[] Eyes
	{
		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x105C554", Offset = "0x105C554", VA = "0x105C554")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C6")]
	[HideInInspector]
	public bool FoveatedRendering
	{
		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x105C5EC", Offset = "0x105C5EC", VA = "0x105C5EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x105C5F4", Offset = "0x105C5F4", VA = "0x105C5F4")]
		set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	[HideInInspector]
	public EFoveationLevel FoveationLevel
	{
		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x105C660", Offset = "0x105C660", VA = "0x105C660")]
		get
		{
			return default(EFoveationLevel);
		}
		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x105C668", Offset = "0x105C668", VA = "0x105C668")]
		set
		{
		}
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x105C67C", Offset = "0x105C67C", VA = "0x105C67C")]
	private void SetCameraEnableEditor()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x105C97C", Offset = "0x105C97C", VA = "0x105C97C")]
	private void SetCamerasEnableByStereoRendering()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x105CA58", Offset = "0x105CA58", VA = "0x105CA58")]
	private void SetupMonoCamera()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x105CBBC", Offset = "0x105CBBC", VA = "0x105CBBC")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x105CCCC", Offset = "0x105CCCC", VA = "0x105CCCC")]
	private void MonoEyeRender()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x105CEA4", Offset = "0x105CEA4", VA = "0x105CEA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x105D8FC", Offset = "0x105D8FC", VA = "0x105D8FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x105E0CC", Offset = "0x105E0CC", VA = "0x105E0CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x105E0F0", Offset = "0x105E0F0", VA = "0x105E0F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x105E440", Offset = "0x105E440", VA = "0x105E440")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x105E568", Offset = "0x105E568", VA = "0x105E568")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x105E570", Offset = "0x105E570", VA = "0x105E570")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x105E6D8", Offset = "0x105E6D8", VA = "0x105E6D8")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x105E7F0", Offset = "0x105E7F0", VA = "0x105E7F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EA218", Offset = "0x8EA218")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x105E890", Offset = "0x105E890", VA = "0x105E890")]
	private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x105EEC4", Offset = "0x105EEC4", VA = "0x105EEC4")]
	public bool SetEyeTrackingMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x105F224", Offset = "0x105F224", VA = "0x105F224")]
	public Vector3 GetEyeTrackingPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x105F458", Offset = "0x105F458", VA = "0x105F458")]
	private EyeDeviceInfo GetDeviceInfo()
	{
		return default(EyeDeviceInfo);
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x105D2B4", Offset = "0x105D2B4", VA = "0x105D2B4")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x105E574", Offset = "0x105E574", VA = "0x105E574")]
	private void DestoryFadeMesh()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x105D8F4", Offset = "0x105D8F4", VA = "0x105D8F4")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x105E01C", Offset = "0x105E01C", VA = "0x105E01C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EA27C", Offset = "0x8EA27C")]
	private IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x105F744", Offset = "0x105F744", VA = "0x105F744")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x105E014", Offset = "0x105E014", VA = "0x105E014")]
	public bool GfxDeviceAdvanceFrameGLES()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x105F910", Offset = "0x105F910", VA = "0x105F910")]
	public Pvr_UnitySDKEyeManager()
	{
	}
}
[Token(Token = "0x20001C9")]
public class Pvr_UnitySDKEyeOverlay : MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
{
	[Token(Token = "0x200057B")]
	public delegate void ExternalAndroidSurfaceObjectCreated();

	[Token(Token = "0x200057C")]
	public enum OverlayShape
	{
		[Token(Token = "0x4002077")]
		Quad,
		[Token(Token = "0x4002078")]
		Cylinder,
		[Token(Token = "0x4002079")]
		Equirect
	}

	[Token(Token = "0x200057D")]
	public enum OverlayType
	{
		[Token(Token = "0x400207B")]
		Overlay,
		[Token(Token = "0x400207C")]
		Underlay
	}

	[Token(Token = "0x200057E")]
	public enum OverlayTexFilterMode
	{
		[Token(Token = "0x400207E")]
		NotCare,
		[Token(Token = "0x400207F")]
		Nearest,
		[Token(Token = "0x4002080")]
		Linear,
		[Token(Token = "0x4002081")]
		Nearest_Mipmap_Nearest,
		[Token(Token = "0x4002082")]
		Linear_Mipmap_Nearest,
		[Token(Token = "0x4002083")]
		Nearest_Mipmap_Linear,
		[Token(Token = "0x4002084")]
		Linear_Mipmap_Linear
	}

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEyeOverlay> Instances;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int layerIndex;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OverlayType overlayType;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OverlayShape overlayShape;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform layerTransform;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture[] layerTextures;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] layerTextureIds;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Matrix4x4[] MVMatrixs;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] ModelScales;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion[] ModelRotations;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3[] ModelTranslations;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Quaternion[] CameraRotations;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3[] CameraTranslations;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Camera[] layerEyeCamera;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool overrideColorScaleAndOffset;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector4 colorScale;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector4 colorOffset;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector4 overlayLayerColorScaleDefault;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector4 overlayLayerColorOffsetDefault;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool isExternalAndroidSurface;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntPtr externalAndroidSurfaceObject;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x1061DF4", Offset = "0x1061DF4", VA = "0x1061DF4", Slot = "4")]
	public int CompareTo(Pvr_UnitySDKEyeOverlay other)
	{
		return default(int);
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x1061E2C", Offset = "0x1061E2C", VA = "0x1061E2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x1062438", Offset = "0x1062438", VA = "0x1062438")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x1062B20", Offset = "0x1062B20", VA = "0x1062B20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x105DD28", Offset = "0x105DD28", VA = "0x105DD28")]
	public void RefreshCamera()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x1062230", Offset = "0x1062230", VA = "0x1062230")]
	private void InitializeBuffer()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x106243C", Offset = "0x106243C", VA = "0x106243C")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x1062E30", Offset = "0x1062E30", VA = "0x1062E30")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x1062EF4", Offset = "0x1062EF4", VA = "0x1062EF4")]
	public void SetLayerColorScaleAndOffset(Vector4 scale, Vector4 offset)
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x1061B48", Offset = "0x1061B48", VA = "0x1061B48")]
	public Vector4 GetLayerColorScale()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x1061B88", Offset = "0x1061B88", VA = "0x1061B88")]
	public Vector4 GetLayerColorOffset()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x1062F08", Offset = "0x1062F08", VA = "0x1062F08")]
	public Pvr_UnitySDKEyeOverlay()
	{
	}
}
[Token(Token = "0x20001CA")]
public class Pvr_UnitySDKRender
{
	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKRender instance;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaObject activity;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AndroidJavaClass javaVrActivityClass;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AndroidJavaClass javaSysActivityClass;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AndroidJavaClass javaserviceClass;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static AndroidJavaClass javaVrActivityLongReceiver;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static AndroidJavaClass javaVrActivityClientClass;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canConnecttoActivity;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isInitrenderThread;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string model;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 prefinger1;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 prefinger2;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int eyeTextureCount;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture[] eyeTextures;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] eyeTextureIds;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currEyeTextureIdx;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int nextEyeTextureIdx;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int lastEyeTextureIdx;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isSwitchSDK;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int RenderviewNumber;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isFirstStartup;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool isShellMode;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private StereoRenderingPathPico stereoRenderPath;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA30C", Offset = "0x8DA30C")]
	private SDKStereoRendering <StereoRendering>k__BackingField;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rtScaleFactor;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float eyeVFov;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float eyeHFov;

	[Token(Token = "0x170000C8")]
	public static Pvr_UnitySDKRender Instance
	{
		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x105B7BC", Offset = "0x105B7BC", VA = "0x105B7BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x106C234", Offset = "0x106C234", VA = "0x106C234")]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public StereoRenderingPathPico StereoRenderPath
	{
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x105BD90", Offset = "0x105BD90", VA = "0x105BD90")]
		get
		{
			return default(StereoRenderingPathPico);
		}
	}

	[Token(Token = "0x170000CA")]
	public SDKStereoRendering StereoRendering
	{
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x105B87C", Offset = "0x105B87C", VA = "0x105B87C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA2E0", Offset = "0x8EA2E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x106CC34", Offset = "0x106CC34", VA = "0x106CC34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA2F0", Offset = "0x8EA2F0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	public float RtScaleFactor
	{
		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x106CC3C", Offset = "0x106CC3C", VA = "0x106CC3C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x106CC44", Offset = "0x106CC44", VA = "0x106CC44")]
		set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public float EyeVFoV
	{
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x105BDA0", Offset = "0x105BDA0", VA = "0x105BDA0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x106CDE4", Offset = "0x106CDE4", VA = "0x106CDE4")]
		set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public float EyeHFoV
	{
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x105F73C", Offset = "0x105F73C", VA = "0x105F73C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x106CDF8", Offset = "0x106CDF8", VA = "0x106CDF8")]
		set
		{
		}
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x106C124", Offset = "0x106C124", VA = "0x106C124")]
	public Pvr_UnitySDKRender()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x106C2A0", Offset = "0x106C2A0", VA = "0x106C2A0")]
	public void ConnectToAndriod()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x106CBB4", Offset = "0x106CBB4", VA = "0x106CBB4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x106D1C0", Offset = "0x106D1C0", VA = "0x106D1C0")]
	private bool InitRenderAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x106D2E0", Offset = "0x106D2E0", VA = "0x106D2E0")]
	private bool UpdateRenderParaFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x106D390", Offset = "0x106D390", VA = "0x106D390")]
	private bool CreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x106DE54", Offset = "0x106DE54", VA = "0x106DE54")]
	private void InitSinglePass()
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x106D7AC", Offset = "0x106D7AC", VA = "0x106D7AC")]
	public float GetEyeVFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x106D91C", Offset = "0x106D91C", VA = "0x106D91C")]
	public float GetEyeHFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x106E070", Offset = "0x106E070", VA = "0x106E070")]
	private void ConfigureEyeBuffer(int eyeTextureIndex, Vector2 resolution)
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x106CC5C", Offset = "0x106CC5C", VA = "0x106CC5C")]
	public bool ReCreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x106AE08", Offset = "0x106AE08", VA = "0x106AE08")]
	public void ReInit()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x106A1D0", Offset = "0x106A1D0", VA = "0x106A1D0")]
	public void IssueRenderThread()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x106E758", Offset = "0x106E758", VA = "0x106E758")]
	private void AutoAdpatForPico1s()
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x106DA8C", Offset = "0x106DA8C", VA = "0x106DA8C")]
	public Vector2 GetEyeBufferResolution()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x106EA1C", Offset = "0x106EA1C", VA = "0x106EA1C")]
	public bool GetUsePredictedMatrix()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x106CE0C", Offset = "0x106CE0C", VA = "0x106CE0C")]
	public bool GetIsShellMode()
	{
		return default(bool);
	}
}
[Token(Token = "0x20001CB")]
public class Pvr_UnitySDKSinglePass : SDKStereoRendering
{
	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera bothCamera;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] eyesOffset;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CommandBuffer commandBufferBeforeForwardOpaque;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CommandBuffer commandBufferBeforeSkybox;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommandBuffer commandBufferAfterSkybox;

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x107217C", Offset = "0x107217C", VA = "0x107217C", Slot = "4")]
	public override void InitEye(Camera eye)
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x1072C0C", Offset = "0x1072C0C", VA = "0x1072C0C", Slot = "5")]
	public override void OnSDKRenderInited()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x1072D6C", Offset = "0x1072D6C", VA = "0x1072D6C", Slot = "6")]
	public override void OnSDKPreRender()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x107383C", Offset = "0x107383C", VA = "0x107383C", Slot = "7")]
	public override void OnSDKPostRender()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x1072C10", Offset = "0x1072C10", VA = "0x1072C10")]
	public void OnSDKRenderInited_SinglePass()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x10738F4", Offset = "0x10738F4", VA = "0x10738F4")]
	private void SetAntiAliasing()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x107259C", Offset = "0x107259C", VA = "0x107259C")]
	public void SetEyesPosition()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x1072A98", Offset = "0x1072A98", VA = "0x1072A98")]
	public void SetEyeProjection()
	{
	}

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x10739FC", Offset = "0x10739FC", VA = "0x10739FC")]
	private static Matrix4x4 GetProjection(float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x1073CD4", Offset = "0x1073CD4", VA = "0x1073CD4")]
	public static Matrix4x4 MakeProjection(float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x1073AD0", Offset = "0x1073AD0", VA = "0x1073AD0")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x1073844", Offset = "0x1073844", VA = "0x1073844")]
	private void SwitchKeywordAndDeviceView(bool enable)
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x1062BAC", Offset = "0x1062BAC", VA = "0x1062BAC")]
	public static Matrix4x4[] GetStereoWorldToCameraMat()
	{
		return null;
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x1072D70", Offset = "0x1072D70", VA = "0x1072D70")]
	public void SinglePassPreRender()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x1073F74", Offset = "0x1073F74", VA = "0x1073F74")]
	private void SetCommandBuffers()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x1073EBC", Offset = "0x1073EBC", VA = "0x1073EBC")]
	private void SetRenderTextureWithDepth()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x106E6B0", Offset = "0x106E6B0", VA = "0x106E6B0")]
	public Pvr_UnitySDKSinglePass()
	{
	}
}
[Token(Token = "0x20001CC")]
public abstract class SDKStereoRendering
{
	[Token(Token = "0x6000D61")]
	public abstract void InitEye(Camera eye);

	[Token(Token = "0x6000D62")]
	public abstract void OnSDKRenderInited();

	[Token(Token = "0x6000D63")]
	public abstract void OnSDKPreRender();

	[Token(Token = "0x6000D64")]
	public abstract void OnSDKPostRender();

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0xB9CD50", Offset = "0xB9CD50", VA = "0xB9CD50")]
	protected SDKStereoRendering()
	{
	}
}
[Token(Token = "0x20001CD")]
public class HighlightAtGaze : MonoBehaviour
{
	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color HighlightColor;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float AnimationTime;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer myRenderer;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color originalColor;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color targetColor;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0xBBA9BC", Offset = "0xBBA9BC", VA = "0xBBA9BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xBBAA54", Offset = "0xBBAA54", VA = "0xBBAA54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xBBAC94", Offset = "0xBBAC94", VA = "0xBBAC94")]
	public HighlightAtGaze()
	{
	}
}
[Token(Token = "0x20001CE")]
public class RayVisualizer : MonoBehaviour
{
	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer _line;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0xB99948", Offset = "0xB99948", VA = "0xB99948")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0xB99A00", Offset = "0xB99A00", VA = "0xB99A00")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xB99BF0", Offset = "0xB99BF0", VA = "0xB99BF0")]
	public RayVisualizer()
	{
	}
}
[Token(Token = "0x20001CF")]
public class GetSeeThroughImage : MonoBehaviour
{
	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage viewImage_left;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage viewImage_right;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int width;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int height;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture cameraTex_left;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture cameraTex_right;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool cameraPreview;

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xC09380", Offset = "0xC09380", VA = "0xC09380")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0xC094CC", Offset = "0xC094CC", VA = "0xC094CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0xC09558", Offset = "0xC09558", VA = "0xC09558")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0xC09384", Offset = "0xC09384", VA = "0xC09384")]
	private void CreateTexture()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0xC09508", Offset = "0xC09508", VA = "0xC09508")]
	private void DrawTexture()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0xC09570", Offset = "0xC09570", VA = "0xC09570")]
	public GetSeeThroughImage()
	{
	}
}
[Token(Token = "0x20001D0")]
public class OverlayExternalSurfaceDemo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200057F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCF1C", Offset = "0x8CCF1C")]
	private sealed class <>c
	{
		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Pvr_UnitySDKEyeOverlay.ExternalAndroidSurfaceObjectCreated <>9__7_0;

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0xF4E5CC", Offset = "0xF4E5CC", VA = "0xF4E5CC")]
		public <>c()
		{
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0xF4E5D4", Offset = "0xF4E5D4", VA = "0xF4E5D4")]
		internal void <StartPlay>b__7_0()
		{
		}
	}

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string movieName;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Pvr_UnitySDKEyeOverlay.OverlayType overlayType;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Pvr_UnitySDKEyeOverlay.OverlayShape overlayShape;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKEyeOverlay overlay;

	[Token(Token = "0x4000D37")]
	private const string TAG = "[ExternalSurface]>>>>>>";

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0xF4E184", Offset = "0xF4E184", VA = "0xF4E184")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xF4E2D0", Offset = "0xF4E2D0", VA = "0xF4E2D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xF4E354", Offset = "0xF4E354", VA = "0xF4E354")]
	private void StartPlay(string moviePath, string licenceUrl)
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xF4E560", Offset = "0xF4E560", VA = "0xF4E560")]
	public OverlayExternalSurfaceDemo()
	{
	}
}
[Token(Token = "0x20001D1")]
public class MoveCylinder : MonoBehaviour
{
	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startingRotation;

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xBD506C", Offset = "0xBD506C", VA = "0xBD506C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xBD50DC", Offset = "0xBD50DC", VA = "0xBD50DC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xBD5174", Offset = "0xBD5174", VA = "0xBD5174")]
	public MoveCylinder()
	{
	}
}
[Token(Token = "0x20001D2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C90C4", Offset = "0x8C90C4")]
public class MoveSphere : MonoBehaviour
{
	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xBD517C", Offset = "0xBD517C", VA = "0xBD517C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xBD5370", Offset = "0xBD5370", VA = "0xBD5370")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xBD529C", Offset = "0xBD529C", VA = "0xBD529C")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xBD5374", Offset = "0xBD5374", VA = "0xBD5374")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xBD54E4", Offset = "0xBD54E4", VA = "0xBD54E4")]
	public void TeleportRandomly()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xBD560C", Offset = "0xBD560C", VA = "0xBD560C")]
	public MoveSphere()
	{
	}
}
[Token(Token = "0x20001D3")]
public class Resetbutton : MonoBehaviour
{
	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xB9AFFC", Offset = "0xB9AFFC", VA = "0xB9AFFC")]
	public void DemoResetTracking()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0xB9B0A4", Offset = "0xB9B0A4", VA = "0xB9B0A4")]
	public Resetbutton()
	{
	}
}
[Token(Token = "0x20001D4")]
public class UserEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x6000D81")]
	[Address(RVA = "0xD58CA4", Offset = "0xD58CA4", VA = "0xD58CA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0xD58D38", Offset = "0xD58D38", VA = "0xD58D38")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0xD58DCC", Offset = "0xD58DCC", VA = "0xD58DCC")]
	private void HandelEntitlementCheckResult(int resultCode)
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0xD59098", Offset = "0xD59098", VA = "0xD59098")]
	public UserEntitlementCheck()
	{
	}
}
[Token(Token = "0x20001D5")]
public class Pvr_UnitySDKHeadTrack : MonoBehaviour
{
	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA31C", Offset = "0x8DA31C")]
	public bool trackRotation;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA354", Offset = "0x8DA354")]
	public bool trackPosition;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool updated;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool dataClock;

	[Token(Token = "0x170000CE")]
	public Ray Gaze
	{
		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x10632E8", Offset = "0x10632E8", VA = "0x10632E8")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x10638C0", Offset = "0x10638C0", VA = "0x10638C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x10633A0", Offset = "0x10633A0", VA = "0x10633A0")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x10638E0", Offset = "0x10638E0", VA = "0x10638E0")]
	public Pvr_UnitySDKHeadTrack()
	{
	}
}
[Token(Token = "0x20001D6")]
public class Pvr_UnitySDKPose
{
	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Matrix4x4 flipZ;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA38C", Offset = "0x8DA38C")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA39C", Offset = "0x8DA39C")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA3AC", Offset = "0x8DA3AC")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x170000CF")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x106BA18", Offset = "0x106BA18", VA = "0x106BA18")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x170000D0")]
	public Vector3 Position
	{
		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x10638D4", Offset = "0x10638D4", VA = "0x10638D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA300", Offset = "0x8EA300")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x106BBA8", Offset = "0x106BBA8", VA = "0x106BBA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA310", Offset = "0x8EA310")]
		protected set
		{
		}
	}

	[Token(Token = "0x170000D1")]
	public Quaternion Orientation
	{
		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x10638C8", Offset = "0x10638C8", VA = "0x10638C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA320", Offset = "0x8EA320")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x106BBB4", Offset = "0x106BBB4", VA = "0x106BBB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA330", Offset = "0x8EA330")]
		protected set
		{
		}
	}

	[Token(Token = "0x170000D2")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x106BB84", Offset = "0x106BB84", VA = "0x106BB84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA340", Offset = "0x8EA340")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x106BBC0", Offset = "0x106BBC0", VA = "0x106BBC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA350", Offset = "0x8EA350")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x106BBDC", Offset = "0x106BBDC", VA = "0x106BBDC")]
	public Pvr_UnitySDKPose(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x106BDA4", Offset = "0x106BDA4", VA = "0x106BDA4")]
	public Pvr_UnitySDKPose(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x106BE24", Offset = "0x106BE24", VA = "0x106BE24")]
	public void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x106BC38", Offset = "0x106BC38", VA = "0x106BC38")]
	protected void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x106BF64", Offset = "0x106BF64", VA = "0x106BF64")]
	private Quaternion NormalizeQuaternion(ref Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x20001D7")]
public class Pvr_UnitySDKSensor
{
	[Token(Token = "0x2000580")]
	public delegate void Enter3DofModel();

	[Token(Token = "0x2000581")]
	public delegate void Exit3DofModel();

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKSensor instance;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool SensorStart;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool SensorInit;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Quaternion UnityQuaternion;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 UnityPosition;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Sensorindex sensorIndex;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool dofClock;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action EyeFovChanged;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Pvr_UnitySDKPose HeadPose;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float vfov;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float hfov;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float w;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float x;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float y;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float z;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float px;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float py;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float pz;

	[Token(Token = "0x170000D3")]
	public static Pvr_UnitySDKSensor Instance
	{
		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x106188C", Offset = "0x106188C", VA = "0x106188C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x106EAE4", Offset = "0x106EAE4", VA = "0x106EAE4")]
		set
		{
		}
	}

	[Token(Token = "0x14000023")]
	public static event Enter3DofModel Enter3DofModelEvent
	{
		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x106EC84", Offset = "0x106EC84", VA = "0x106EC84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA360", Offset = "0x8EA360")]
		add
		{
		}
		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x106EDB4", Offset = "0x106EDB4", VA = "0x106EDB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA370", Offset = "0x8EA370")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public static event Exit3DofModel Exit3DofModelEvent
	{
		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x106EEE4", Offset = "0x106EEE4", VA = "0x106EEE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA380", Offset = "0x8EA380")]
		add
		{
		}
		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x106F014", Offset = "0x106F014", VA = "0x106F014")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA390", Offset = "0x8EA390")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x106EA28", Offset = "0x106EA28", VA = "0x106EA28")]
	public Pvr_UnitySDKSensor()
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x106EB50", Offset = "0x106EB50", VA = "0x106EB50")]
	public void Init()
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x10693F4", Offset = "0x10693F4", VA = "0x10693F4")]
	public void SensorUpdate()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x106F3AC", Offset = "0x106F3AC", VA = "0x106F3AC")]
	public bool InitUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x106F144", Offset = "0x106F144", VA = "0x106F144")]
	public bool InitUnitySDK6DofSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x106A9D0", Offset = "0x106A9D0", VA = "0x106A9D0")]
	public bool StartUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x106985C", Offset = "0x106985C", VA = "0x106985C")]
	public bool StopUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x10675C0", Offset = "0x10675C0", VA = "0x10675C0")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x106194C", Offset = "0x106194C", VA = "0x106194C")]
	public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x106F4F8", Offset = "0x106F4F8", VA = "0x106F4F8")]
	public bool GetUnitySDKSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x107105C", Offset = "0x107105C", VA = "0x107105C")]
	public bool GetUnitySDKPSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x1070E08", Offset = "0x1070E08", VA = "0x1070E08")]
	private void RefreshHeadData(float x, float y, float z, float w, float px, float py, float pz)
	{
	}
}
[Token(Token = "0x20001D8")]
public class CLoadingAsset : ScriptableObject
{
	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SplashScreenType;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture2D> splashImage;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D Inside_background;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseSplashText;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DefaultText;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ChineseText;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string EnglishText;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string JapaneseText;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string KoreanText;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string FontSize;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color FontColor;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string TextHeight;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool UseCarousel;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int SplashTextAlignment;

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0xCDF1E4", Offset = "0xCDF1E4", VA = "0xCDF1E4")]
	public CLoadingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D9")]
public class Pvr_UnitySDKConfigProfile
{
	[Token(Token = "0x2000582")]
	public struct Lenses
	{
		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float separation;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float offset;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int alignment;

		[Token(Token = "0x400208B")]
		public const int AlignTop = -1;

		[Token(Token = "0x400208C")]
		public const int AlignCenter = 0;

		[Token(Token = "0x400208D")]
		public const int AlignBottom = 1;
	}

	[Token(Token = "0x2000583")]
	public struct MaxFOV
	{
		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upper;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float lower;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float inner;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float outer;
	}

	[Token(Token = "0x2000584")]
	public struct Distortion
	{
		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k1;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float k2;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float k3;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float k4;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float k5;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float k6;

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0x9B0E58", Offset = "0x9B0E58", VA = "0x9B0E58")]
		public float distort(float r)
		{
			return default(float);
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0x9B0E60", Offset = "0x9B0E60", VA = "0x9B0E60")]
		public float distort(float r, float dist)
		{
			return default(float);
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0x9B0E68", Offset = "0x9B0E68", VA = "0x9B0E68")]
		public float diatortInv(float radious)
		{
			return default(float);
		}
	}

	[Token(Token = "0x2000585")]
	public struct Device
	{
		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lenses devLenses;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaxFOV devMaxFov;

		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Distortion devDistortion;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Distortion devDistortionInv;
	}

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Device SimulateDevice;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Device device;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Pvr_UnitySDKConfigProfile Default;

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x154279C", Offset = "0x154279C", VA = "0x154279C")]
	public Pvr_UnitySDKConfigProfile Clone()
	{
		return null;
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x1542838", Offset = "0x1542838", VA = "0x1542838")]
	public static Pvr_UnitySDKConfigProfile GetPicoProfile()
	{
		return null;
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x15428E4", Offset = "0x15428E4", VA = "0x15428E4")]
	public float[] GetLeftEyeVisibleTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x1542C78", Offset = "0x1542C78", VA = "0x1542C78")]
	public float[] GetLeftEyeNoLensTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x1542EEC", Offset = "0x1542EEC", VA = "0x1542EEC")]
	public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x1542830", Offset = "0x1542830", VA = "0x1542830")]
	public Pvr_UnitySDKConfigProfile()
	{
	}
}
[Token(Token = "0x20001DA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C9128", Offset = "0x8C9128")]
public class Pvr_UnitySDKFPS : MonoBehaviour
{
	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float updateInterval;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeLeft;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string strFps;

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x1063140", Offset = "0x1063140", VA = "0x1063140")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x10631C8", Offset = "0x10631C8", VA = "0x10631C8")]
	private void ShowFps()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x10632D8", Offset = "0x10632D8", VA = "0x10632D8")]
	public Pvr_UnitySDKFPS()
	{
	}
}
[Token(Token = "0x20001DB")]
public class Pvr_GazeFuse : MonoBehaviour
{
	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gazeGameObject;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x134C93C", Offset = "0x134C93C", VA = "0x134C93C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x134C994", Offset = "0x134C994", VA = "0x134C994")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x134CB68", Offset = "0x134CB68", VA = "0x134CB68")]
	private void FuseAmountChanged(float fuseAmount)
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x134CC18", Offset = "0x134CC18", VA = "0x134CC18")]
	public Pvr_GazeFuse()
	{
	}
}
[Token(Token = "0x20001DC")]
public class Pvr_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x2000586")]
	public enum Mode
	{
		[Token(Token = "0x400209D")]
		Click,
		[Token(Token = "0x400209E")]
		Gaze
	}

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mode mode;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA3DC", Offset = "0x8DA3DC")]
	public string ClickInputName;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA414", Offset = "0x8DA414")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA44C", Offset = "0x8DA44C")]
	private static float <gazeFraction>k__BackingField;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA45C", Offset = "0x8DA45C")]
	private static GameObject <gazeGameObject>k__BackingField;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x170000D4")]
	public static float gazeFraction
	{
		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x134CB18", Offset = "0x134CB18", VA = "0x134CB18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA3A0", Offset = "0x8EA3A0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x134CC20", Offset = "0x134CC20", VA = "0x134CC20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA3B0", Offset = "0x8EA3B0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public static GameObject gazeGameObject
	{
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x134CAC8", Offset = "0x134CAC8", VA = "0x134CAC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA3C0", Offset = "0x8EA3C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x134CC7C", Offset = "0x134CC7C", VA = "0x134CC7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA3D0", Offset = "0x8EA3D0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x134CCD0", Offset = "0x134CCD0", VA = "0x134CCD0", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x134CCF4", Offset = "0x134CCF4", VA = "0x134CCF4")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x134CF34", Offset = "0x134CF34", VA = "0x134CF34")]
	private void HandleSelection()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x134D3CC", Offset = "0x134D3CC", VA = "0x134D3CC")]
	public Pvr_GazeInputModule()
	{
	}
}
[Token(Token = "0x20001DD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C918C", Offset = "0x8C918C")]
public class Pvr_GazeInputModuleCrosshair : MonoBehaviour
{
	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA46C", Offset = "0x8DA46C")]
	public Transform Crosshair;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Pvr_GazeInputModule gazeInputModule;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 CrosshairOriginalScale;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x134D42C", Offset = "0x134D42C", VA = "0x134D42C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x134D484", Offset = "0x134D484", VA = "0x134D484")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x134D518", Offset = "0x134D518", VA = "0x134D518")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x134D650", Offset = "0x134D650", VA = "0x134D650")]
	private void SetCrossHairAtDistance(float dist)
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x134D778", Offset = "0x134D778", VA = "0x134D778")]
	public Pvr_GazeInputModuleCrosshair()
	{
	}
}
[Token(Token = "0x20001DE")]
public enum RenderEventType
{
	[Token(Token = "0x4000D80")]
	InitRenderThread = 1024,
	[Token(Token = "0x4000D81")]
	Pause,
	[Token(Token = "0x4000D82")]
	Resume,
	[Token(Token = "0x4000D83")]
	LeftEyeEndFrame,
	[Token(Token = "0x4000D84")]
	RightEyeEndFrame,
	[Token(Token = "0x4000D85")]
	TimeWarp,
	[Token(Token = "0x4000D86")]
	ResetVrModeParms,
	[Token(Token = "0x4000D87")]
	ShutdownRenderThread,
	[Token(Token = "0x4000D88")]
	BeginEye,
	[Token(Token = "0x4000D89")]
	EndEye,
	[Token(Token = "0x4000D8A")]
	BoundaryRenderLeft,
	[Token(Token = "0x4000D8B")]
	BoundaryRenderRight,
	[Token(Token = "0x4000D8C")]
	BothEyeEndFrame,
	[Token(Token = "0x4000D8D")]
	CameraFrameLeft,
	[Token(Token = "0x4000D8E")]
	CameraFrameRight,
	[Token(Token = "0x4000D8F")]
	StartCameraFrame,
	[Token(Token = "0x4000D90")]
	StopCameraFrame
}
[Token(Token = "0x20001DF")]
public static class Pvr_UnitySDKPluginEvent
{
	[Token(Token = "0x2000587")]
	private delegate void RenderEventDelegate(int eventId);

	[Token(Token = "0x4000D91")]
	private const uint IS_DATA_FLAG = 2147483648u;

	[Token(Token = "0x4000D92")]
	private const uint DATA_POS_MASK = 1073741824u;

	[Token(Token = "0x4000D93")]
	private const int DATA_POS_SHIFT = 30;

	[Token(Token = "0x4000D94")]
	private const uint EVENT_TYPE_MASK = 1056899072u;

	[Token(Token = "0x4000D95")]
	private const int EVENT_TYPE_SHIFT = 17;

	[Token(Token = "0x4000D96")]
	private const uint PAYLOAD_MASK = 65535u;

	[Token(Token = "0x4000D97")]
	private const int PAYLOAD_SHIFT = 16;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderEventDelegate SetSinglePassBeforeForwardOpaqueHandle;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IntPtr SetSinglePassBeforeForwardOpaquePtr;

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x105BA2C", Offset = "0x105BA2C", VA = "0x105BA2C")]
	public static void Issue(RenderEventType eventType)
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x106B3A8", Offset = "0x106B3A8", VA = "0x106B3A8")]
	private static int EncodeType(int eventType)
	{
		return default(int);
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x106B3B0", Offset = "0x106B3B0", VA = "0x106B3B0")]
	private static int EncodeData(int eventId, int eventData, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x106B3D0", Offset = "0x106B3D0", VA = "0x106B3D0")]
	private static int DecodeData(int eventData)
	{
		return default(int);
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x106B3A0", Offset = "0x106B3A0", VA = "0x106B3A0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8EA3E0", Offset = "0x8EA3E0")]
	private static void SetSinglePassBeforeForwardOpaque(int eventId)
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x106B3E4", Offset = "0x106B3E4", VA = "0x106B3E4")]
	public static void SetSinglePassBeforeForwardOpaque(CommandBuffer cmd)
	{
	}
}
[Token(Token = "0x20001E0")]
public class Pvr_UnitySDKSightInputModule : BaseInputModule
{
	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA4A4", Offset = "0x8DA4A4")]
	public GameObject cursor;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int trigger;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float clickTime;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Vector2 hotspot;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PointerEventData pointerData;

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x107124C", Offset = "0x107124C", VA = "0x107124C", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x10712E0", Offset = "0x10712E0", VA = "0x10712E0", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x107162C", Offset = "0x107162C", VA = "0x107162C", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x10716BC", Offset = "0x10716BC", VA = "0x10716BC", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x10716F8", Offset = "0x10716F8", VA = "0x10716F8")]
	private void CastRayFromGaze()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x10718A0", Offset = "0x10718A0", VA = "0x10718A0")]
	private void UpdateCurrentObject()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x1071A9C", Offset = "0x1071A9C", VA = "0x1071A9C")]
	private void PlaceCursor()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x1071408", Offset = "0x1071408", VA = "0x1071408")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x1071D94", Offset = "0x1071D94", VA = "0x1071D94")]
	private void HandleTrigger()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x1072128", Offset = "0x1072128", VA = "0x1072128")]
	public Pvr_UnitySDKSightInputModule()
	{
	}
}
[Token(Token = "0x20001E1")]
public class Pvr_ObjImporter
{
	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ObjImporter _instance;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<int> triangles;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> vertices;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector2> uv;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> normals;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PvrVector3Int> faceData;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> intArray;

	[Token(Token = "0x4000DA6")]
	private const int MIN_POW_10 = -16;

	[Token(Token = "0x4000DA7")]
	private const int MAX_POW_10 = 16;

	[Token(Token = "0x4000DA8")]
	private const int NUM_POWS_10 = 33;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float[] pow10;

	[Token(Token = "0x170000D6")]
	public static Pvr_ObjImporter Instance
	{
		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x1350540", Offset = "0x1350540", VA = "0x1350540")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x13505EC", Offset = "0x13505EC", VA = "0x13505EC")]
	public Mesh ImportFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x1350B84", Offset = "0x1350B84", VA = "0x1350B84")]
	private void LoadMeshData(string fileName)
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x13513E8", Offset = "0x13513E8", VA = "0x13513E8")]
	private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
	{
		return default(float);
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x13515C8", Offset = "0x13515C8", VA = "0x13515C8")]
	private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
	{
		return default(int);
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x1351AB4", Offset = "0x1351AB4", VA = "0x1351AB4")]
	private static float[] GenerateLookupTable()
	{
		return null;
	}

	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x1351750", Offset = "0x1351750", VA = "0x1351750")]
	private float ParseFloat(StringBuilder value)
	{
		return default(float);
	}

	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x1351A30", Offset = "0x1351A30", VA = "0x1351A30")]
	private int IntParseFast(StringBuilder value)
	{
		return default(int);
	}

	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x13505E4", Offset = "0x13505E4", VA = "0x13505E4")]
	public Pvr_ObjImporter()
	{
	}
}
[Token(Token = "0x20001E2")]
public sealed class PvrVector3Int
{
	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA4FC", Offset = "0x8DA4FC")]
	private int <x>k__BackingField;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA50C", Offset = "0x8DA50C")]
	private int <y>k__BackingField;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DA51C", Offset = "0x8DA51C")]
	private int <z>k__BackingField;

	[Token(Token = "0x170000D7")]
	public int x
	{
		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xEAC474", Offset = "0xEAC474", VA = "0xEAC474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA444", Offset = "0x8EA444")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xEAC47C", Offset = "0xEAC47C", VA = "0xEAC47C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA454", Offset = "0x8EA454")]
		set
		{
		}
	}

	[Token(Token = "0x170000D8")]
	public int y
	{
		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xEAC484", Offset = "0xEAC484", VA = "0xEAC484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA464", Offset = "0x8EA464")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xEAC48C", Offset = "0xEAC48C", VA = "0xEAC48C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA474", Offset = "0x8EA474")]
		set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public int z
	{
		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xEAC494", Offset = "0xEAC494", VA = "0xEAC494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA484", Offset = "0x8EA484")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xEAC49C", Offset = "0xEAC49C", VA = "0xEAC49C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA494", Offset = "0x8EA494")]
		set
		{
		}
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0xEAC4A4", Offset = "0xEAC4A4", VA = "0xEAC4A4")]
	public PvrVector3Int()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0xEAC4AC", Offset = "0xEAC4AC", VA = "0xEAC4AC")]
	public PvrVector3Int(int x, int y, int z)
	{
	}
}
[Token(Token = "0x20001E3")]
public class Pvr_EnumFlags : PropertyAttribute
{
	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x134C934", Offset = "0x134C934", VA = "0x134C934")]
	public Pvr_EnumFlags()
	{
	}
}
[Token(Token = "0x20001E4")]
public enum ConfirmBtn
{
	[Token(Token = "0x4000DAE")]
	App = 1,
	[Token(Token = "0x4000DAF")]
	TouchPad = 2,
	[Token(Token = "0x4000DB0")]
	Trigger = 4
}
[Token(Token = "0x20001E5")]
public class Pvr_InputModule : PointerInputModule
{
	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UIPointer> pointers;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Pvr_EnumFlags]
	public ConfirmBtn confirmBtn;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<RaycastResult> rayCasts;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaycastResult rayCastResult;

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x134D7D4", Offset = "0x134D7D4", VA = "0x134D7D4", Slot = "30")]
	public virtual void Initialise()
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x134D858", Offset = "0x134D858", VA = "0x134D858")]
	public static void AddPoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x134D948", Offset = "0x134D948", VA = "0x134D948")]
	public static void RemovePoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x134DA38", Offset = "0x134DA38", VA = "0x134DA38", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x134DE24", Offset = "0x134DE24", VA = "0x134DE24", Slot = "31")]
	protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
	{
		return null;
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x134DF24", Offset = "0x134DF24", VA = "0x134DF24", Slot = "32")]
	protected virtual bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x134E024", Offset = "0x134E024", VA = "0x134E024", Slot = "33")]
	protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x134E17C", Offset = "0x134E17C", VA = "0x134E17C", Slot = "34")]
	protected virtual bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x134E3E0", Offset = "0x134E3E0", VA = "0x134E3E0", Slot = "35")]
	protected virtual bool ValidElement(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x134E49C", Offset = "0x134E49C", VA = "0x134E49C", Slot = "36")]
	protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x134E53C", Offset = "0x134E53C", VA = "0x134E53C", Slot = "37")]
	protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x134F424", Offset = "0x134F424", VA = "0x134F424", Slot = "38")]
	protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x134F4C0", Offset = "0x134F4C0", VA = "0x134F4C0", Slot = "39")]
	protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x134F598", Offset = "0x134F598", VA = "0x134F598", Slot = "40")]
	protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x134F690", Offset = "0x134F690", VA = "0x134F690", Slot = "41")]
	protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x134F9C4", Offset = "0x134F9C4", VA = "0x134F9C4", Slot = "42")]
	protected virtual bool AttemptClick(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x134FCEC", Offset = "0x134FCEC", VA = "0x134FCEC", Slot = "43")]
	protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x1350454", Offset = "0x1350454", VA = "0x1350454")]
	public Pvr_InputModule()
	{
	}
}
[Token(Token = "0x20001E6")]
public class Pvr_UICanvas : MonoBehaviour
{
	[Token(Token = "0x2000588")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCF2C", Offset = "0x8CCF2C")]
	private sealed class <CreateDraggablePanel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 canvasSize;

		[Token(Token = "0x170002AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024E0")]
			[Address(RVA = "0x135503C", Offset = "0x135503C", VA = "0x135503C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024E2")]
			[Address(RVA = "0x13550AC", Offset = "0x13550AC", VA = "0x13550AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0x13547C8", Offset = "0x13547C8", VA = "0x13547C8")]
		[DebuggerHidden]
		public <CreateDraggablePanel>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0x1354B38", Offset = "0x1354B38", VA = "0x1354B38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0x1354B3C", Offset = "0x1354B3C", VA = "0x1354B3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0x1355044", Offset = "0x1355044", VA = "0x1355044", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clickOnPointerCollision;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float autoActivateWithinDistance;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected BoxCollider canvasBoxCollider;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Rigidbody canvasRigidBody;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Coroutine draggablePanelCreation;

	[Token(Token = "0x4000DBA")]
	protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x135421C", Offset = "0x135421C", VA = "0x135421C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x1354228", Offset = "0x1354228", VA = "0x1354228", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x1354234", Offset = "0x1354234", VA = "0x1354234", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x1354240", Offset = "0x1354240", VA = "0x1354240", Slot = "7")]
	protected virtual void SetupCanvas()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x135472C", Offset = "0x135472C", VA = "0x135472C", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EA4A4", Offset = "0x8EA4A4")]
	protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
	{
		return null;
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x13547F4", Offset = "0x13547F4", VA = "0x13547F4", Slot = "9")]
	protected virtual void RemoveCanvas()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x1354B30", Offset = "0x1354B30", VA = "0x1354B30")]
	public Pvr_UICanvas()
	{
	}
}
[Token(Token = "0x20001E7")]
public struct UIDraggableItemEventArgs
{
	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;
}
[Token(Token = "0x20001E8")]
public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
[Token(Token = "0x20001E9")]
public class Pvr_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool restrictToDropZone;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool restrictToOriginalCanvas;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveOffset;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject validDropZone;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected RectTransform dragTransform;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 startPosition;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Quaternion startRotation;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject startDropZone;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform startParent;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Canvas startCanvas;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected CanvasGroup canvasGroup;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Pvr_InputModule currentInputmodule;

	[Token(Token = "0x14000025")]
	public event UIDraggableItemEventHandler DraggableItemDropped
	{
		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x13550B4", Offset = "0x13550B4", VA = "0x13550B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA508", Offset = "0x8EA508")]
		add
		{
		}
		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x13551A0", Offset = "0x13551A0", VA = "0x13551A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA518", Offset = "0x8EA518")]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public event UIDraggableItemEventHandler DraggableItemReset
	{
		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x135528C", Offset = "0x135528C", VA = "0x135528C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA528", Offset = "0x8EA528")]
		add
		{
		}
		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x1355378", Offset = "0x1355378", VA = "0x1355378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA538", Offset = "0x8EA538")]
		remove
		{
		}
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x1355464", Offset = "0x1355464", VA = "0x1355464", Slot = "7")]
	public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x1355488", Offset = "0x1355488", VA = "0x1355488", Slot = "8")]
	public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x13554AC", Offset = "0x13554AC", VA = "0x13554AC", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x1355714", Offset = "0x1355714", VA = "0x1355714", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x1355720", Offset = "0x1355720", VA = "0x1355720", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x1355C08", Offset = "0x1355C08", VA = "0x1355C08", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x1355CFC", Offset = "0x1355CFC", VA = "0x1355CFC", Slot = "10")]
	protected virtual Pvr_UIPointer GetPointer()
	{
		return null;
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x1355EB4", Offset = "0x1355EB4", VA = "0x1355EB4", Slot = "11")]
	protected virtual void SetDragPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x1356264", Offset = "0x1356264", VA = "0x1356264", Slot = "12")]
	protected virtual void ResetElement()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x1356374", Offset = "0x1356374", VA = "0x1356374", Slot = "13")]
	protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
	{
		return default(UIDraggableItemEventArgs);
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x135637C", Offset = "0x135637C", VA = "0x135637C")]
	public Pvr_UIDraggableItem()
	{
	}
}
[Token(Token = "0x20001EA")]
public class Pvr_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Pvr_UIDraggableItem droppableItem;

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x1356390", Offset = "0x1356390", VA = "0x1356390", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x13564BC", Offset = "0x13564BC", VA = "0x13564BC", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x1356548", Offset = "0x1356548", VA = "0x1356548")]
	public Pvr_UIDropZone()
	{
	}
}
[Token(Token = "0x20001EB")]
public class Pvr_UIGraphicRaycaster : GraphicRaycaster
{
	[Serializable]
	[Token(Token = "0x2000589")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCF3C", Offset = "0x8CCF3C")]
	private sealed class <>c
	{
		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastResult> <>9__7_0;

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0x135764C", Offset = "0x135764C", VA = "0x135764C")]
		public <>c()
		{
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0x1357654", Offset = "0x1357654", VA = "0x1357654")]
		internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Canvas currentCanvas;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector2 lastKnownPosition;

	[Token(Token = "0x4000DCD")]
	protected const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RaycastResult> s_RaycastResults;

	[Token(Token = "0x170000DA")]
	protected virtual Canvas canvas
	{
		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x135745C", Offset = "0x135745C", VA = "0x135745C", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x1356550", Offset = "0x1356550", VA = "0x1356550", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x1356764", Offset = "0x1356764", VA = "0x1356764", Slot = "22")]
	protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x1356ABC", Offset = "0x1356ABC", VA = "0x1356ABC", Slot = "23")]
	protected virtual float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x1356E2C", Offset = "0x1356E2C", VA = "0x1356E2C", Slot = "24")]
	protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x135750C", Offset = "0x135750C", VA = "0x135750C")]
	public Pvr_UIGraphicRaycaster()
	{
	}
}
[Token(Token = "0x20001EC")]
public struct UIPointerEventArgs
{
	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject currentTarget;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject previousTarget;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RaycastResult raycastResult;
}
[Token(Token = "0x20001ED")]
public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
[Token(Token = "0x20001EE")]
public class Pvr_UIPointer : MonoBehaviour
{
	[Token(Token = "0x200058A")]
	public enum ClickMethods
	{
		[Token(Token = "0x40020A6")]
		ClickOnButtonUp,
		[Token(Token = "0x40020A7")]
		ClickOnButtonDown
	}

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClickMethods clickMethod;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool collisionClick;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[HideInInspector]
	public bool pressToDrag;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject autoActivatingCanvas;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float hoverDurationTimer;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool canClickOnHover;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pointerOriginTransform;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool pointerClicked;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool beamEnabledState;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	protected bool lastPointerPressState;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	protected bool lastPointerClickState;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected GameObject currentTarget;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected EventSystem cachedEventSystem;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Pvr_InputModule cachedVRInputModule;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform originalPointerOriginTransform;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TouchBtnValue;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool AppBtnValue;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool TriggerBtnValue;

	[Token(Token = "0x14000027")]
	public event UIPointerEventHandler UIPointerElementEnter
	{
		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x1357664", Offset = "0x1357664", VA = "0x1357664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA548", Offset = "0x8EA548")]
		add
		{
		}
		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x1357750", Offset = "0x1357750", VA = "0x1357750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA558", Offset = "0x8EA558")]
		remove
		{
		}
	}

	[Token(Token = "0x14000028")]
	public event UIPointerEventHandler UIPointerElementExit
	{
		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x135783C", Offset = "0x135783C", VA = "0x135783C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA568", Offset = "0x8EA568")]
		add
		{
		}
		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x1357928", Offset = "0x1357928", VA = "0x1357928")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA578", Offset = "0x8EA578")]
		remove
		{
		}
	}

	[Token(Token = "0x14000029")]
	public event UIPointerEventHandler UIPointerElementClick
	{
		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x1357A14", Offset = "0x1357A14", VA = "0x1357A14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA588", Offset = "0x8EA588")]
		add
		{
		}
		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x1357B00", Offset = "0x1357B00", VA = "0x1357B00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA598", Offset = "0x8EA598")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002A")]
	public event UIPointerEventHandler UIPointerElementDragStart
	{
		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x1357BEC", Offset = "0x1357BEC", VA = "0x1357BEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA5A8", Offset = "0x8EA5A8")]
		add
		{
		}
		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x1357CD8", Offset = "0x1357CD8", VA = "0x1357CD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA5B8", Offset = "0x8EA5B8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002B")]
	public event UIPointerEventHandler UIPointerElementDragEnd
	{
		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x1357DC4", Offset = "0x1357DC4", VA = "0x1357DC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA5C8", Offset = "0x8EA5C8")]
		add
		{
		}
		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x1357EB0", Offset = "0x1357EB0", VA = "0x1357EB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA5D8", Offset = "0x8EA5D8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x1357F9C", Offset = "0x1357F9C", VA = "0x1357F9C", Slot = "4")]
	public virtual bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x1357FA4", Offset = "0x1357FA4", VA = "0x1357FA4", Slot = "5")]
	public virtual bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x1358084", Offset = "0x1358084", VA = "0x1358084", Slot = "6")]
	public virtual Vector3 GetOriginPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x1358120", Offset = "0x1358120", VA = "0x1358120", Slot = "7")]
	public virtual Vector3 GetOriginForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x13581BC", Offset = "0x13581BC", VA = "0x13581BC", Slot = "8")]
	public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x13581D8", Offset = "0x13581D8", VA = "0x13581D8", Slot = "9")]
	protected virtual void ResetHoverTimer()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x13581E4", Offset = "0x13581E4", VA = "0x13581E4", Slot = "10")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x13582C8", Offset = "0x13582C8", VA = "0x13582C8", Slot = "11")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x1358394", Offset = "0x1358394", VA = "0x1358394", Slot = "12")]
	public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x1358460", Offset = "0x1358460", VA = "0x1358460", Slot = "13")]
	public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x13584AC", Offset = "0x13584AC", VA = "0x13584AC", Slot = "14")]
	public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x13584F8", Offset = "0x13584F8", VA = "0x13584F8", Slot = "15")]
	public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs);
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x135855C", Offset = "0x135855C", VA = "0x135855C", Slot = "16")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x1358568", Offset = "0x1358568", VA = "0x1358568", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x13585A0", Offset = "0x13585A0", VA = "0x13585A0", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x1358604", Offset = "0x1358604", VA = "0x1358604", Slot = "19")]
	protected virtual void ConfigureEventSystem()
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x13587AC", Offset = "0x13587AC", VA = "0x13587AC")]
	public Pvr_UIPointer()
	{
	}
}
[Token(Token = "0x20001EF")]
[ExecuteInEditMode]
public class Pvr_UnitySDKEditor : MonoBehaviour
{
	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool vrModeEnabled;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mouseX;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mouseY;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mouseZ;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float neckModelScale;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool autoUntiltHead;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 neckOffset;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Matrix4x4 headView;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Matrix4x4 leftEyeUndistortedProj;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Matrix4x4 rightEyeUndistortedProj;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Matrix4x4 leftEyeProj;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Matrix4x4 rightEyeProj;

	[Token(Token = "0x4000DF8")]
	private const float TOUCH_TIME_LIMIT = 0.2f;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float touchStartTime;

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x1543124", Offset = "0x1543124", VA = "0x1543124")]
	public Matrix4x4 UndistortedProjection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x1543170", Offset = "0x1543170", VA = "0x1543170")]
	public Matrix4x4 Projection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x15431BC", Offset = "0x15431BC", VA = "0x15431BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x15433E8", Offset = "0x15433E8", VA = "0x15433E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x15431D0", Offset = "0x15431D0", VA = "0x15431D0")]
	public void InitEyePara()
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x1543330", Offset = "0x1543330", VA = "0x1543330")]
	private void InitEditorSensorPara()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x1543ECC", Offset = "0x1543ECC", VA = "0x1543ECC")]
	public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x1544070", Offset = "0x1544070", VA = "0x1544070")]
	public bool UpdateStatesensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x15435B8", Offset = "0x15435B8", VA = "0x15435B8")]
	public void ComputeEyesFromProfile()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x15444F8", Offset = "0x15444F8", VA = "0x15444F8")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x15434AC", Offset = "0x15434AC", VA = "0x15434AC")]
	private void SimulateInput()
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x1543DF8", Offset = "0x1543DF8", VA = "0x1543DF8")]
	private void FovAdjust()
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x15445A0", Offset = "0x15445A0", VA = "0x15445A0")]
	private Rect RectAdjust(Rect eyeRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x1544088", Offset = "0x1544088", VA = "0x1544088")]
	private void UpdateSimulatedSensor()
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x1543C88", Offset = "0x1543C88", VA = "0x1543C88")]
	private void InitForEye(ref Material mat, ref Material mat1)
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x154450C", Offset = "0x154450C", VA = "0x154450C")]
	private void EnableVEmodel()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x15446D0", Offset = "0x15446D0", VA = "0x15446D0")]
	public Pvr_UnitySDKEditor()
	{
	}
}
[Token(Token = "0x20001F0")]
public class Pvr_VolumePowerBrightness : MonoBehaviour
{
	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool VolEnable;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool BattEnable;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text showResult;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text setVolumnum;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text setBrightnum;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MusicPath;

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x10747E4", Offset = "0x10747E4", VA = "0x10747E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x10748BC", Offset = "0x10748BC", VA = "0x10748BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x1074910", Offset = "0x1074910", VA = "0x1074910")]
	public void GetMaxVolumeNumber()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x10749B8", Offset = "0x10749B8", VA = "0x10749B8")]
	public void GetCurrentVolumeNumber()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x1074A60", Offset = "0x1074A60", VA = "0x1074A60")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x1074AE4", Offset = "0x1074AE4", VA = "0x1074AE4")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x1074B68", Offset = "0x1074B68", VA = "0x1074B68")]
	public void SetVolumeNum()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x1074C90", Offset = "0x1074C90", VA = "0x1074C90")]
	public void SetBrightness()
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x1074DB8", Offset = "0x1074DB8", VA = "0x1074DB8")]
	public void GetCurrentBrightness()
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x1074E60", Offset = "0x1074E60", VA = "0x1074E60")]
	public bool setAudio(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x1074EF4", Offset = "0x1074EF4", VA = "0x1074EF4")]
	public bool setBattery(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x1074854", Offset = "0x1074854", VA = "0x1074854")]
	private bool InitBatteryVolClass()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x107485C", Offset = "0x107485C", VA = "0x107485C")]
	private bool StartBatteryReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x1074908", Offset = "0x1074908", VA = "0x1074908")]
	private bool StopBatteryReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x107488C", Offset = "0x107488C", VA = "0x107488C")]
	private bool StartAudioReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x1074900", Offset = "0x1074900", VA = "0x1074900")]
	private bool StopAudioReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x1074F88", Offset = "0x1074F88", VA = "0x1074F88")]
	public Pvr_VolumePowerBrightness()
	{
	}
}
[Token(Token = "0x20001F1")]
public class PreformanceSettings : MonoBehaviour
{
	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DA67C", Offset = "0x8DA67C")]
	public float renderScaleMax;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRManager.TiledMultiResLevel myRenderscale;

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0xE9EAE0", Offset = "0xE9EAE0", VA = "0xE9EAE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0xE9EB6C", Offset = "0xE9EB6C", VA = "0xE9EB6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0xE9EB70", Offset = "0xE9EB70", VA = "0xE9EB70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0xE9EB74", Offset = "0xE9EB74", VA = "0xE9EB74")]
	public PreformanceSettings()
	{
	}
}
[Token(Token = "0x20001F2")]
public class qb_Group : MonoBehaviour
{
	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string groupName;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool visible;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool frozen;

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x1C8E200", Offset = "0x1C8E200", VA = "0x1C8E200")]
	public void AddObject(GameObject newObject)
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x1C8E264", Offset = "0x1C8E264", VA = "0x1C8E264")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x1C8E26C", Offset = "0x1C8E26C", VA = "0x1C8E26C")]
	public void Show()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x1C8E278", Offset = "0x1C8E278", VA = "0x1C8E278")]
	public void Freeze()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x1C8E284", Offset = "0x1C8E284", VA = "0x1C8E284")]
	public void UnFreeze()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x1C8E28C", Offset = "0x1C8E28C", VA = "0x1C8E28C")]
	public void CleanUp()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x1C8E308", Offset = "0x1C8E308", VA = "0x1C8E308")]
	public qb_Group()
	{
	}
}
[Token(Token = "0x20001F3")]
public class qb_Object : MonoBehaviour
{
	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x1C8E310", Offset = "0x1C8E310", VA = "0x1C8E310")]
	public qb_Object()
	{
	}
}
[Token(Token = "0x20001F4")]
public class Demo_Animator_DeerCalf : MonoBehaviour
{
	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int i;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int size;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool rot;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startpose;

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0xC87650", Offset = "0xC87650", VA = "0xC87650")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xC876D4", Offset = "0xC876D4", VA = "0xC876D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xC87798", Offset = "0xC87798", VA = "0xC87798")]
	public void NextAnimation()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xC87814", Offset = "0xC87814", VA = "0xC87814")]
	public void BackAnimation()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xC8788C", Offset = "0xC8788C", VA = "0xC8788C")]
	public Demo_Animator_DeerCalf()
	{
	}
}
[Token(Token = "0x20001F5")]
public class Demo_Animator_DeerDoe : MonoBehaviour
{
	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int i;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int size;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool rot;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startpose;

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0xC8789C", Offset = "0xC8789C", VA = "0xC8789C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xC87920", Offset = "0xC87920", VA = "0xC87920")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xC879E4", Offset = "0xC879E4", VA = "0xC879E4")]
	public void NextAnimation()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xC87A60", Offset = "0xC87A60", VA = "0xC87A60")]
	public void BackAnimation()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xC87AD8", Offset = "0xC87AD8", VA = "0xC87AD8")]
	public Demo_Animator_DeerDoe()
	{
	}
}
[Token(Token = "0x20001F6")]
public class Demo_Animator_DeerStag : MonoBehaviour
{
	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int i;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int size;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool rot;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startpose;

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xC87AE8", Offset = "0xC87AE8", VA = "0xC87AE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xC87B6C", Offset = "0xC87B6C", VA = "0xC87B6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xC87C30", Offset = "0xC87C30", VA = "0xC87C30")]
	public void NextAnimation()
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xC87CAC", Offset = "0xC87CAC", VA = "0xC87CAC")]
	public void BackAnimation()
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xC87D24", Offset = "0xC87D24", VA = "0xC87D24")]
	public Demo_Animator_DeerStag()
	{
	}
}
[Token(Token = "0x20001F7")]
public class ScrollUV_River : MonoBehaviour
{
	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float horizontalScrollSpeed;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float verticalScrollSpeed;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer _myRenderer;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool scroll;

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0xD8F990", Offset = "0xD8F990", VA = "0xD8F990")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xD8FA38", Offset = "0xD8FA38", VA = "0xD8FA38")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xD8FAD8", Offset = "0xD8FAD8", VA = "0xD8FAD8")]
	public void DoActivateTrigger()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xD8FAE8", Offset = "0xD8FAE8", VA = "0xD8FAE8")]
	public ScrollUV_River()
	{
	}
}
[Token(Token = "0x20001F8")]
public class Reindeer : MonoBehaviour
{
	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator reindeer;

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xB99BF8", Offset = "0xB99BF8", VA = "0xB99BF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xB99BFC", Offset = "0xB99BFC", VA = "0xB99BFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xB9A248", Offset = "0xB9A248", VA = "0xB9A248")]
	public Reindeer()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F9")]
public class SECTR_AudioAmbience
{
	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DA694", Offset = "0x8DA694")]
	public SECTR_AudioCue BackgroundLoop;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DA6D4", Offset = "0x8DA6D4")]
	public List<SECTR_AudioCue> OneShots;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DA70C", Offset = "0x8DA70C")]
	public Vector2 OneShotInterval;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DA758", Offset = "0x8DA758")]
	public float Volume;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DA790", Offset = "0x8DA790")]
	public bool UseOneShotCuesProbability;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float TotalProbability;

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0xB9D530", Offset = "0xB9D530", VA = "0xB9D530")]
	public SECTR_AudioAmbience()
	{
	}
}
[Token(Token = "0x20001FA")]
public class SECTR_AudioBus : ScriptableObject
{
	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private SECTR_AudioBus parent;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<SECTR_AudioBus> children;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float userVolume;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float userPitch;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float effectiveVolume;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float effectivePitch;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool muted;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DA810", Offset = "0x8DA810")]
	public float Volume;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DA850", Offset = "0x8DA850")]
	public float Pitch;

	[Token(Token = "0x170000DB")]
	public float UserVolume
	{
		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xB9D5E8", Offset = "0xB9D5E8", VA = "0xB9D5E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xB9D5E0", Offset = "0xB9D5E0", VA = "0xB9D5E0")]
		set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public float UserPitch
	{
		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xB9D5F8", Offset = "0xB9D5F8", VA = "0xB9D5F8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xB9D5F0", Offset = "0xB9D5F0", VA = "0xB9D5F0")]
		set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public bool Muted
	{
		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xB9D600", Offset = "0xB9D600", VA = "0xB9D600")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xB9D608", Offset = "0xB9D608", VA = "0xB9D608")]
		set
		{
		}
	}

	[Token(Token = "0x170000DE")]
	public float EffectiveVolume
	{
		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xB9D614", Offset = "0xB9D614", VA = "0xB9D614")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xB9D61C", Offset = "0xB9D61C", VA = "0xB9D61C")]
		set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public float EffectivePitch
	{
		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xB9D6B8", Offset = "0xB9D6B8", VA = "0xB9D6B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xB9D6C0", Offset = "0xB9D6C0", VA = "0xB9D6C0")]
		set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public SECTR_AudioBus Parent
	{
		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xB9D9F4", Offset = "0xB9D9F4", VA = "0xB9D9F4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xB9D758", Offset = "0xB9D758", VA = "0xB9D758")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public List<SECTR_AudioBus> Children
	{
		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xB9D9FC", Offset = "0xB9D9FC", VA = "0xB9D9FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0xB9DA04", Offset = "0xB9DA04", VA = "0xB9DA04")]
	public bool IsAncestorOf(SECTR_AudioBus bus)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0xB9DAD0", Offset = "0xB9DAD0", VA = "0xB9DAD0")]
	public bool IsDecendentOf(SECTR_AudioBus bus)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0xB9DB98", Offset = "0xB9DB98", VA = "0xB9DB98")]
	public void ResetUserVolume()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0xB9DCA4", Offset = "0xB9DCA4", VA = "0xB9DCA4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0xB9DD3C", Offset = "0xB9DD3C", VA = "0xB9DD3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0xB9D914", Offset = "0xB9D914", VA = "0xB9D914")]
	private void _AddChild(SECTR_AudioBus child)
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0xB9D8A4", Offset = "0xB9D8A4", VA = "0xB9D8A4")]
	private void _RemoveChild(SECTR_AudioBus child)
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xB9DDD4", Offset = "0xB9DDD4", VA = "0xB9DDD4")]
	public SECTR_AudioBus()
	{
	}
}
[Token(Token = "0x20001FB")]
public class SECTR_AudioCue : ScriptableObject
{
	[Token(Token = "0x200058B")]
	public enum PlaybackModes
	{
		[Token(Token = "0x40020A9")]
		Random,
		[Token(Token = "0x40020AA")]
		Shuffle,
		[Token(Token = "0x40020AB")]
		Loop,
		[Token(Token = "0x40020AC")]
		PingPong
	}

	[Token(Token = "0x200058C")]
	public enum FalloffTypes
	{
		[Token(Token = "0x40020AE")]
		Linear,
		[Token(Token = "0x40020AF")]
		Logrithmic
	}

	[Token(Token = "0x200058D")]
	public enum Spatializations
	{
		[Token(Token = "0x40020B1")]
		Simple2D,
		[Token(Token = "0x40020B2")]
		Infinite3D,
		[Token(Token = "0x40020B3")]
		Local3D,
		[Token(Token = "0x40020B4")]
		Occludable3D
	}

	[Serializable]
	[Token(Token = "0x200058E")]
	public class ClipData
	{
		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private AudioClip clip;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool playedInShuffle;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float volume;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SECTR_ULong bakeTimestamp;

		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve HDRCurve;

		[Token(Token = "0x170002B0")]
		public AudioClip Clip
		{
			[Token(Token = "0x60024E7")]
			[Address(RVA = "0xB9E53C", Offset = "0xB9E53C", VA = "0xB9E53C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B1")]
		public float Volume
		{
			[Token(Token = "0x60024E8")]
			[Address(RVA = "0xB9E86C", Offset = "0xB9E86C", VA = "0xB9E86C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024E9")]
			[Address(RVA = "0xB9E874", Offset = "0xB9E874", VA = "0xB9E874")]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public bool PlayedInShuffle
		{
			[Token(Token = "0x60024EA")]
			[Address(RVA = "0xB9E87C", Offset = "0xB9E87C", VA = "0xB9E87C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024EB")]
			[Address(RVA = "0xB9E884", Offset = "0xB9E884", VA = "0xB9E884")]
			set
			{
			}
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0xB9E828", Offset = "0xB9E828", VA = "0xB9E828")]
		public ClipData(AudioClip clip)
		{
		}
	}

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private SECTR_AudioCue template;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private SECTR_AudioBus bus;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int clipPlaybackIndex;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool needsShuffling;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool pingPongIncrement;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DA900", Offset = "0x8DA900")]
	public List<ClipData> AudioClips;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DA938", Offset = "0x8DA938")]
	public PlaybackModes PlaybackMode;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DA970", Offset = "0x8DA970")]
	public bool HDR;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DA9A8", Offset = "0x8DA9A8")]
	public Vector2 Loudness;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DA9E0", Offset = "0x8DA9E0")]
	public Vector2 Volume;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DAA18", Offset = "0x8DAA18")]
	public Vector2 Pitch;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DAA50", Offset = "0x8DAA50")]
	public bool Loops;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DAA88", Offset = "0x8DAA88")]
	public int Priority;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DAACC", Offset = "0x8DAACC")]
	public bool BypassEffects;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DAB04", Offset = "0x8DAB04")]
	public int MaxInstances;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DAB44", Offset = "0x8DAB44")]
	public float FadeInTime;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DAB84", Offset = "0x8DAB84")]
	public float FadeOutTime;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DABC4", Offset = "0x8DABC4")]
	public Spatializations Spatialization;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DABFC", Offset = "0x8DABFC")]
	public float Spread;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DAC40", Offset = "0x8DAC40")]
	public float Pan2D;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DAC80", Offset = "0x8DAC80")]
	public FalloffTypes Falloff;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DACB8", Offset = "0x8DACB8")]
	public float MaxDistance;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DACF8", Offset = "0x8DACF8")]
	public float MinDistance;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DAD38", Offset = "0x8DAD38")]
	public float DopplerLevel;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DAD78", Offset = "0x8DAD78")]
	public int ProximityLimit;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DADB8", Offset = "0x8DADB8")]
	public float ProximityRange;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DAE0C", Offset = "0x8DAE0C")]
	public float OcclusionScale;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DAE4C", Offset = "0x8DAE4C")]
	public float PlayProbability;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DAE8C", Offset = "0x8DAE8C")]
	public Vector2 Delay;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DAEC4", Offset = "0x8DAEC4")]
	public GameObject Prefab;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DAF04", Offset = "0x8DAF04")]
	public List<SECTR_CueParam> ControlParams;

	[Token(Token = "0x170000E2")]
	public SECTR_AudioCue Template
	{
		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xB9DF08", Offset = "0xB9DF08", VA = "0xB9DF08")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xB9DE54", Offset = "0xB9DE54", VA = "0xB9DE54")]
		set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public SECTR_AudioBus Bus
	{
		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xB9DF98", Offset = "0xB9DF98", VA = "0xB9DF98")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xB9DF10", Offset = "0xB9DF10", VA = "0xB9DF10")]
		set
		{
		}
	}

	[Token(Token = "0x170000E4")]
	public SECTR_AudioCue SourceCue
	{
		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xB9DFA0", Offset = "0xB9DFA0", VA = "0xB9DFA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E5")]
	public bool Is3D
	{
		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xB9E020", Offset = "0xB9E020", VA = "0xB9E020")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E6")]
	public bool IsLocal
	{
		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xB9E030", Offset = "0xB9E030", VA = "0xB9E030")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E7")]
	public int ClipIndex
	{
		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xB9E040", Offset = "0xB9E040", VA = "0xB9E040")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xB9E048", Offset = "0xB9E048", VA = "0xB9E048")]
	public ClipData GetNextClip()
	{
		return null;
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xB9E3C0", Offset = "0xB9E3C0", VA = "0xB9E3C0")]
	public float MinClipLength()
	{
		return default(float);
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0xB9E544", Offset = "0xB9E544", VA = "0xB9E544")]
	public float MaxClipLength()
	{
		return default(float);
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0xB9E6AC", Offset = "0xB9E6AC", VA = "0xB9E6AC")]
	public void ResetClipIndex()
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0xB9E6C0", Offset = "0xB9E6C0", VA = "0xB9E6C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0xB9E6D4", Offset = "0xB9E6D4", VA = "0xB9E6D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0xB9E22C", Offset = "0xB9E22C", VA = "0xB9E22C")]
	private void _ShuffleClips()
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0xB9E6D8", Offset = "0xB9E6D8", VA = "0xB9E6D8")]
	public SECTR_AudioCue()
	{
	}
}
[Token(Token = "0x20001FC")]
public interface SECTR_IAudioInstance
{
	[Token(Token = "0x170000E8")]
	int Generation
	{
		[Token(Token = "0x6000EAC")]
		get;
	}

	[Token(Token = "0x170000E9")]
	bool Active
	{
		[Token(Token = "0x6000EAD")]
		get;
	}

	[Token(Token = "0x170000EA")]
	Vector3 Position
	{
		[Token(Token = "0x6000EAE")]
		get;
		[Token(Token = "0x6000EAF")]
		set;
	}

	[Token(Token = "0x170000EB")]
	Vector3 LocalPosition
	{
		[Token(Token = "0x6000EB0")]
		get;
		[Token(Token = "0x6000EB1")]
		set;
	}

	[Token(Token = "0x170000EC")]
	float Volume
	{
		[Token(Token = "0x6000EB2")]
		get;
		[Token(Token = "0x6000EB3")]
		set;
	}

	[Token(Token = "0x170000ED")]
	float Pitch
	{
		[Token(Token = "0x6000EB4")]
		get;
		[Token(Token = "0x6000EB5")]
		set;
	}

	[Token(Token = "0x170000EE")]
	bool Mute
	{
		[Token(Token = "0x6000EB6")]
		get;
		[Token(Token = "0x6000EB7")]
		set;
	}

	[Token(Token = "0x170000EF")]
	bool Pause
	{
		[Token(Token = "0x6000EB8")]
		get;
		[Token(Token = "0x6000EB9")]
		set;
	}

	[Token(Token = "0x170000F0")]
	int TimeSamples
	{
		[Token(Token = "0x6000EBA")]
		get;
		[Token(Token = "0x6000EBB")]
		set;
	}

	[Token(Token = "0x170000F1")]
	float TimeSeconds
	{
		[Token(Token = "0x6000EBC")]
		get;
		[Token(Token = "0x6000EBD")]
		set;
	}

	[Token(Token = "0x6000EBE")]
	void Stop(bool stopImmediately);

	[Token(Token = "0x6000EBF")]
	void ForceInfinite();

	[Token(Token = "0x6000EC0")]
	void ForceOcclusion(bool occluded);

	[Token(Token = "0x6000EC1")]
	void SetParameter(string param, float value);

	[Token(Token = "0x6000EC2")]
	AudioSource GetInternalAudioSource();
}
[Token(Token = "0x20001FD")]
public struct SECTR_AudioCueInstance : SECTR_IAudioInstance
{
	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SECTR_IAudioInstance internalInstance;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private int generation;

	[Token(Token = "0x170000F2")]
	public int Generation
	{
		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x996C14", Offset = "0x996C14", VA = "0x996C14", Slot = "4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000F3")]
	public bool Active
	{
		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x996C1C", Offset = "0x996C1C", VA = "0x996C1C", Slot = "5")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000F4")]
	public Vector3 Position
	{
		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x996C24", Offset = "0x996C24", VA = "0x996C24", Slot = "6")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x996C2C", Offset = "0x996C2C", VA = "0x996C2C", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x170000F5")]
	public Vector3 LocalPosition
	{
		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x996C34", Offset = "0x996C34", VA = "0x996C34", Slot = "8")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x996C3C", Offset = "0x996C3C", VA = "0x996C3C", Slot = "9")]
		set
		{
		}
	}

	[Token(Token = "0x170000F6")]
	public float Volume
	{
		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x996C44", Offset = "0x996C44", VA = "0x996C44", Slot = "10")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x996C4C", Offset = "0x996C4C", VA = "0x996C4C", Slot = "11")]
		set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public float Pitch
	{
		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x996C54", Offset = "0x996C54", VA = "0x996C54", Slot = "12")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x996C5C", Offset = "0x996C5C", VA = "0x996C5C", Slot = "13")]
		set
		{
		}
	}

	[Token(Token = "0x170000F8")]
	public bool Mute
	{
		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x996C64", Offset = "0x996C64", VA = "0x996C64", Slot = "14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x996C6C", Offset = "0x996C6C", VA = "0x996C6C", Slot = "15")]
		set
		{
		}
	}

	[Token(Token = "0x170000F9")]
	public bool Pause
	{
		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x996C78", Offset = "0x996C78", VA = "0x996C78", Slot = "16")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x996C80", Offset = "0x996C80", VA = "0x996C80", Slot = "17")]
		set
		{
		}
	}

	[Token(Token = "0x170000FA")]
	public float TimeSeconds
	{
		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x996C8C", Offset = "0x996C8C", VA = "0x996C8C", Slot = "20")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x996C94", Offset = "0x996C94", VA = "0x996C94", Slot = "21")]
		set
		{
		}
	}

	[Token(Token = "0x170000FB")]
	public int TimeSamples
	{
		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x996C9C", Offset = "0x996C9C", VA = "0x996C9C", Slot = "18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x996CA4", Offset = "0x996CA4", VA = "0x996CA4", Slot = "19")]
		set
		{
		}
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x996C08", Offset = "0x996C08", VA = "0x996C08")]
	public SECTR_AudioCueInstance(SECTR_IAudioInstance internalInstance, int generation)
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x996CAC", Offset = "0x996CAC", VA = "0x996CAC", Slot = "22")]
	public void Stop(bool stopImmediately)
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x996CB8", Offset = "0x996CB8", VA = "0x996CB8", Slot = "23")]
	public void ForceInfinite()
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x996CC0", Offset = "0x996CC0", VA = "0x996CC0", Slot = "24")]
	public void ForceOcclusion(bool occluded)
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x996CCC", Offset = "0x996CCC", VA = "0x996CCC", Slot = "25")]
	public void SetParameter(string param, float value)
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x996CD4", Offset = "0x996CD4", VA = "0x996CD4", Slot = "26")]
	public AudioSource GetInternalAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x996CDC", Offset = "0x996CDC", VA = "0x996CDC")]
	public SECTR_IAudioInstance GetInternalInstance()
	{
		return null;
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0xB9FC90", Offset = "0xB9FC90", VA = "0xB9FC90")]
	public static implicit operator bool(SECTR_AudioCueInstance x)
	{
		return default(bool);
	}
}
[Token(Token = "0x20001FE")]
public abstract class SECTR_AudioEnvironment : MonoBehaviour
{
	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool ambienceActive;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DAF3C", Offset = "0x8DAF3C")]
	public SECTR_AudioAmbience Ambience;

	[Token(Token = "0x170000FC")]
	public bool Active
	{
		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xBA06B4", Offset = "0xBA06B4", VA = "0xBA06B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0xBA06BC", Offset = "0xBA06BC", VA = "0xBA06BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0xBA0738", Offset = "0xBA0738", VA = "0xBA0738")]
	protected void Activate()
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0xBA06C0", Offset = "0xBA06C0", VA = "0xBA06C0")]
	protected void Deactivate()
	{
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0xBA0978", Offset = "0xBA0978", VA = "0xBA0978")]
	protected SECTR_AudioEnvironment()
	{
	}
}
[Token(Token = "0x20001FF")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9200", Offset = "0x8C9200")]
public class SECTR_AudioEnvironmentTrigger : SECTR_AudioEnvironment
{
	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject activator;

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0xBA09DC", Offset = "0xBA09DC", VA = "0xBA09DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0xBA0A60", Offset = "0xBA0A60", VA = "0xBA0A60")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0xBA0B08", Offset = "0xBA0B08", VA = "0xBA0B08")]
	private void OnTriggerEnter2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0xBA0BB0", Offset = "0xBA0BB0", VA = "0xBA0BB0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0xBA0C60", Offset = "0xBA0C60", VA = "0xBA0C60")]
	private void OnTriggerExit2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0xBA0D10", Offset = "0xBA0D10", VA = "0xBA0D10")]
	public SECTR_AudioEnvironmentTrigger()
	{
	}
}
[Token(Token = "0x2000200")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C9238", Offset = "0x8C9238")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9238", Offset = "0x8C9238")]
public class SECTR_AudioEnvironmentZone : SECTR_AudioEnvironment
{
	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioReverbZone cachedZone;

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0xBA0D14", Offset = "0xBA0D14", VA = "0xBA0D14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xBA0D6C", Offset = "0xBA0D6C", VA = "0xBA0D6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xBA0D74", Offset = "0xBA0D74", VA = "0xBA0D74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xBA105C", Offset = "0xBA105C", VA = "0xBA105C")]
	public SECTR_AudioEnvironmentZone()
	{
	}
}
[Token(Token = "0x2000201")]
public abstract class SECTR_AudioSource : MonoBehaviour
{
	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	protected float volume;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[HideInInspector]
	protected float pitch;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool playedFromStart;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DAFE4", Offset = "0x8DAFE4")]
	public SECTR_AudioCue Cue;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB024", Offset = "0x8DB024")]
	public bool Loop;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB05C", Offset = "0x8DB05C")]
	public bool PlayOnStart;

	[Token(Token = "0x170000FD")]
	public float Volume
	{
		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0xBA1060", Offset = "0xBA1060", VA = "0xBA1060")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000EED")]
		[Address(RVA = "0xBA1068", Offset = "0xBA1068", VA = "0xBA1068")]
		set
		{
		}
	}

	[Token(Token = "0x170000FE")]
	public float Pitch
	{
		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0xBA110C", Offset = "0xBA110C", VA = "0xBA110C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0xBA1114", Offset = "0xBA1114", VA = "0xBA1114")]
		set
		{
		}
	}

	[Token(Token = "0x170000FF")]
	public abstract bool IsPlaying
	{
		[Token(Token = "0x6000EF0")]
		get;
	}

	[Token(Token = "0x6000EF1")]
	public abstract void Play();

	[Token(Token = "0x6000EF2")]
	public abstract void Stop(bool stopImmediately);

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xBA11C0", Offset = "0xBA11C0", VA = "0xBA11C0")]
	public void PlayEvent()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xBA11CC", Offset = "0xBA11CC", VA = "0xBA11CC")]
	public void StopEvent(bool stopImmediately)
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xBA11DC", Offset = "0xBA11DC", VA = "0xBA11DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xBA1218", Offset = "0xBA1218", VA = "0xBA1218")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xBA1238", Offset = "0xBA1238", VA = "0xBA1238", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000EF8")]
	protected abstract void OnVolumePitchChanged();

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0xBA1248", Offset = "0xBA1248", VA = "0xBA1248")]
	protected SECTR_AudioSource()
	{
	}
}
[Token(Token = "0x2000202")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C92C0", Offset = "0x8C92C0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C92C0", Offset = "0x8C92C0")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C92C0", Offset = "0x8C92C0")]
public class SECTR_AudioSystem : MonoBehaviour
{
	[Token(Token = "0x200058F")]
	private class Instance : SECTR_IAudioInstance
	{
		[Token(Token = "0x20006D9")]
		[Flags]
		private enum Flags
		{
			[Token(Token = "0x400254A")]
			Loops = 1,
			[Token(Token = "0x400254B")]
			FadingIn = 2,
			[Token(Token = "0x400254C")]
			FadingOut = 4,
			[Token(Token = "0x400254D")]
			Muted = 8,
			[Token(Token = "0x400254E")]
			Local = 0x10,
			[Token(Token = "0x400254F")]
			ThreeD = 0x20,
			[Token(Token = "0x4002550")]
			Paused = 0x40,
			[Token(Token = "0x4002551")]
			HDR = 0x80,
			[Token(Token = "0x4002552")]
			Occludable = 0x100,
			[Token(Token = "0x4002553")]
			Occluded = 0x200,
			[Token(Token = "0x4002554")]
			ForcedInfinite = 0x400,
			[Token(Token = "0x4002555")]
			Delayed = 0x800
		}

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int generation;

		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AudioSource source;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioLowPassFilter lowpass;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SECTR_AudioCue audioCue;

		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform parent;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 localPosition;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Flags flags;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float nextTestTime;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float fadeStarTime;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float basePitch;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float baseVolumeLoudness;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float userVolume;

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float userPitch;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float occlusionAlpha;

		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AnimationCurve hdrCurve;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<SECTR_CueParam, float> paramTable;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<float> volumeParamValues;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<float> pitchParamValues;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<SECTR_CueParam.AttributeData, float> attributeParamValues;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<SECTR_CueParam.AttributeData, float> attributeParamBaseValues;

		[Token(Token = "0x170002B3")]
		public int Generation
		{
			[Token(Token = "0x60024EC")]
			[Address(RVA = "0xBA2270", Offset = "0xBA2270", VA = "0xBA2270", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002B4")]
		public bool Active
		{
			[Token(Token = "0x60024ED")]
			[Address(RVA = "0xBA6BF0", Offset = "0xBA6BF0", VA = "0xBA6BF0", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B5")]
		public Vector3 Position
		{
			[Token(Token = "0x60024EE")]
			[Address(RVA = "0xBA6EEC", Offset = "0xBA6EEC", VA = "0xBA6EEC", Slot = "6")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60024EF")]
			[Address(RVA = "0xBA71E0", Offset = "0xBA71E0", VA = "0xBA71E0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public Vector3 LocalPosition
		{
			[Token(Token = "0x60024F0")]
			[Address(RVA = "0xBA73EC", Offset = "0xBA73EC", VA = "0xBA73EC", Slot = "8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60024F1")]
			[Address(RVA = "0xBA73F8", Offset = "0xBA73F8", VA = "0xBA73F8", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		public float Volume
		{
			[Token(Token = "0x60024F2")]
			[Address(RVA = "0xBA74F8", Offset = "0xBA74F8", VA = "0xBA74F8", Slot = "10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024F3")]
			[Address(RVA = "0xBA7500", Offset = "0xBA7500", VA = "0xBA7500", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public float Pitch
		{
			[Token(Token = "0x60024F4")]
			[Address(RVA = "0xBA75A8", Offset = "0xBA75A8", VA = "0xBA75A8", Slot = "12")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024F5")]
			[Address(RVA = "0xBA75B0", Offset = "0xBA75B0", VA = "0xBA75B0", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public bool Mute
		{
			[Token(Token = "0x60024F6")]
			[Address(RVA = "0xBA7660", Offset = "0xBA7660", VA = "0xBA7660", Slot = "14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024F7")]
			[Address(RVA = "0xBA7678", Offset = "0xBA7678", VA = "0xBA7678", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public bool Pause
		{
			[Token(Token = "0x60024F8")]
			[Address(RVA = "0xBA7760", Offset = "0xBA7760", VA = "0xBA7760", Slot = "16")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60024F9")]
			[Address(RVA = "0xBA2F8C", Offset = "0xBA2F8C", VA = "0xBA2F8C", Slot = "17")]
			set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		public float TimeSeconds
		{
			[Token(Token = "0x60024FA")]
			[Address(RVA = "0xBA7788", Offset = "0xBA7788", VA = "0xBA7788", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024FB")]
			[Address(RVA = "0xBA7828", Offset = "0xBA7828", VA = "0xBA7828", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		public int TimeSamples
		{
			[Token(Token = "0x60024FC")]
			[Address(RVA = "0xBA78D4", Offset = "0xBA78D4", VA = "0xBA78D4", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60024FD")]
			[Address(RVA = "0xBA7974", Offset = "0xBA7974", VA = "0xBA7974", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public bool Loops
		{
			[Token(Token = "0x6002502")]
			[Address(RVA = "0xBA7198", Offset = "0xBA7198", VA = "0xBA7198")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BE")]
		public bool Local
		{
			[Token(Token = "0x6002503")]
			[Address(RVA = "0xBA71D4", Offset = "0xBA71D4", VA = "0xBA71D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BF")]
		public bool ThreeD
		{
			[Token(Token = "0x6002504")]
			[Address(RVA = "0xBA71C8", Offset = "0xBA71C8", VA = "0xBA71C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C0")]
		public bool FadingIn
		{
			[Token(Token = "0x6002505")]
			[Address(RVA = "0xBA7EEC", Offset = "0xBA7EEC", VA = "0xBA7EEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C1")]
		public bool FadingOut
		{
			[Token(Token = "0x6002506")]
			[Address(RVA = "0xBA6CBC", Offset = "0xBA6CBC", VA = "0xBA6CBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C2")]
		public bool Muted
		{
			[Token(Token = "0x6002507")]
			[Address(RVA = "0xBA766C", Offset = "0xBA766C", VA = "0xBA766C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C3")]
		public bool Paused
		{
			[Token(Token = "0x6002508")]
			[Address(RVA = "0xBA71B0", Offset = "0xBA71B0", VA = "0xBA71B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C4")]
		public bool HDR
		{
			[Token(Token = "0x6002509")]
			[Address(RVA = "0xBA7EF8", Offset = "0xBA7EF8", VA = "0xBA7EF8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C5")]
		public bool Occludable
		{
			[Token(Token = "0x600250A")]
			[Address(RVA = "0xBA7F04", Offset = "0xBA7F04", VA = "0xBA7F04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C6")]
		public bool Occluded
		{
			[Token(Token = "0x600250B")]
			[Address(RVA = "0xBA7F10", Offset = "0xBA7F10", VA = "0xBA7F10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C7")]
		public bool ForcedInfinite
		{
			[Token(Token = "0x600250C")]
			[Address(RVA = "0xBA7F1C", Offset = "0xBA7F1C", VA = "0xBA7F1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C8")]
		public bool Delayed
		{
			[Token(Token = "0x600250D")]
			[Address(RVA = "0xBA71A4", Offset = "0xBA71A4", VA = "0xBA71A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C9")]
		public SECTR_AudioBus Bus
		{
			[Token(Token = "0x600250E")]
			[Address(RVA = "0xBA2EF8", Offset = "0xBA2EF8", VA = "0xBA2EF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CA")]
		public SECTR_AudioCue Cue
		{
			[Token(Token = "0x600250F")]
			[Address(RVA = "0xBA7F28", Offset = "0xBA7F28", VA = "0xBA7F28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024FE")]
		[Address(RVA = "0xBA7A20", Offset = "0xBA7A20", VA = "0xBA7A20", Slot = "23")]
		public void ForceInfinite()
		{
		}

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0xBA7B78", Offset = "0xBA7B78", VA = "0xBA7B78", Slot = "24")]
		public void ForceOcclusion(bool occluded)
		{
		}

		[Token(Token = "0x6002500")]
		[Address(RVA = "0xBA7C40", Offset = "0xBA7C40", VA = "0xBA7C40", Slot = "25")]
		public void SetParameter(string param, float value)
		{
		}

		[Token(Token = "0x6002501")]
		[Address(RVA = "0xBA7EE4", Offset = "0xBA7EE4", VA = "0xBA7EE4", Slot = "26")]
		public AudioSource GetInternalAudioSource()
		{
			return null;
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0xBA1BB0", Offset = "0xBA1BB0", VA = "0xBA1BB0")]
		public void Init(SECTR_AudioCue audioCue, Transform parent, Vector3 localPosition, bool loops)
		{
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0xBA2490", Offset = "0xBA2490", VA = "0xBA2490")]
		public void Clone(Instance instance, Vector3 newPosition)
		{
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0xBA6CC8", Offset = "0xBA6CC8", VA = "0xBA6CC8")]
		public void Uninit()
		{
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0xBA1E8C", Offset = "0xBA1E8C", VA = "0xBA1E8C")]
		public void Play()
		{
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0xBA4558", Offset = "0xBA4558", VA = "0xBA4558", Slot = "22")]
		public void Stop(bool stopImmediately)
		{
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0xBA53DC", Offset = "0xBA53DC", VA = "0xBA53DC")]
		public void Update(float deltaTime, bool volumeOnly)
		{
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0xBA7744", Offset = "0xBA7744", VA = "0xBA7744")]
		private void _SetFlag(Flags flag, bool on)
		{
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0xBA7778", Offset = "0xBA7778", VA = "0xBA7778")]
		private bool _GetFlag(Flags flag)
		{
			return default(bool);
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0xBA8164", Offset = "0xBA8164", VA = "0xBA8164")]
		private bool _AcquireSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6002519")]
		[Address(RVA = "0xBA91FC", Offset = "0xBA91FC", VA = "0xBA91FC")]
		private void _ReleaseSource()
		{
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0xBA7F30", Offset = "0xBA7F30", VA = "0xBA7F30")]
		private void _AddProximityInstance(SECTR_AudioCue srcCue)
		{
		}

		[Token(Token = "0x600251B")]
		[Address(RVA = "0xBA80A4", Offset = "0xBA80A4", VA = "0xBA80A4")]
		private void _ScheduleNextTest()
		{
		}

		[Token(Token = "0x600251C")]
		[Address(RVA = "0xBA95D0", Offset = "0xBA95D0", VA = "0xBA95D0")]
		private void _Stop(bool stopImmediately)
		{
		}

		[Token(Token = "0x600251D")]
		[Address(RVA = "0xBA3F20", Offset = "0xBA3F20", VA = "0xBA3F20")]
		public Instance()
		{
		}
	}

	[Token(Token = "0x2000590")]
	[Flags]
	public enum OcclusionModes
	{
		[Token(Token = "0x40020CF")]
		Graph = 1,
		[Token(Token = "0x40020D0")]
		Raycast = 2,
		[Token(Token = "0x40020D1")]
		Distance = 4
	}

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SECTR_AudioSystem system;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Stack<Instance> instancePool;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Stack<AudioSource> simpleSourcePool;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Stack<AudioSource> lowpassSourcePool;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Dictionary<GameObject, Stack<AudioSource>> prefabSourcePool;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Transform sourcePoolParent;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static List<Instance> activeInstances;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static Dictionary<SECTR_AudioCue, int> maxInstancesTable;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Dictionary<SECTR_AudioCue, List<Instance>> proximityTable;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static float currentTime;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static List<SECTR_AudioAmbience> ambienceStack;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static SECTR_AudioAmbience currentAmbience;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static SECTR_AudioCueInstance ambienceLoop;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static SECTR_AudioCueInstance ambienceOneShot;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static float nextAmbienceOneShotTime;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static SECTR_AudioCue currentMusic;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static SECTR_AudioCueInstance musicLoop;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static float windowHDRMax;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private static float windowHDRMin;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static float currentLoudness;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static List<SECTR_Graph.Node> occlusionPath;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static SECTR_Member cachedMember;

	[Token(Token = "0x4000E69")]
	private const float EPSILON = 0.001f;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB094", Offset = "0x8DB094")]
	public int MaxInstances;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB0CC", Offset = "0x8DB0CC")]
	public int LowpassInstances;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB104", Offset = "0x8DB104")]
	public SECTR_AudioBus MasterBus;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB144", Offset = "0x8DB144")]
	public SECTR_AudioAmbience DefaultAmbience;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB17C", Offset = "0x8DB17C")]
	public float HDRBaseLoudness;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB1C0", Offset = "0x8DB1C0")]
	public float HDRWindowSize;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB204", Offset = "0x8DB204")]
	public float HDRDecay;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB248", Offset = "0x8DB248")]
	public bool BlendNearbySounds;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB280", Offset = "0x8DB280")]
	public Vector2 NearBlendRange;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB2CC", Offset = "0x8DB2CC")]
	public OcclusionModes OcclusionFlags;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB34C", Offset = "0x8DB34C")]
	public float OcclusionDistance;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB398", Offset = "0x8DB398")]
	public LayerMask RaycastLayers;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB3E4", Offset = "0x8DB3E4")]
	public float OcclusionVolume;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB438", Offset = "0x8DB438")]
	public float OcclusionCutoff;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB490", Offset = "0x8DB490")]
	public float OcclusionResonanceQ;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB4E4", Offset = "0x8DB4E4")]
	public Vector2 RetestInterval;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB51C", Offset = "0x8DB51C")]
	public float CullingBuffer;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB554", Offset = "0x8DB554")]
	public bool ShowAudioHUD;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB590", Offset = "0x8DB590")]
	public Material HUDLineMaterial;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB5CC", Offset = "0x8DB5CC")]
	public bool Debugging;

	[Token(Token = "0x17000100")]
	public static bool Initialized
	{
		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xBA0F48", Offset = "0xBA0F48", VA = "0xBA0F48")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000101")]
	public static SECTR_Member Member
	{
		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0xBA1260", Offset = "0xBA1260", VA = "0xBA1260")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000102")]
	public static SECTR_AudioSystem System
	{
		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0xBA0040", Offset = "0xBA0040", VA = "0xBA0040")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000103")]
	public static Transform Listener
	{
		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0xBA0FE0", Offset = "0xBA0FE0", VA = "0xBA0FE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xB9CE10", Offset = "0xB9CE10", VA = "0xB9CE10")]
	public static SECTR_AudioCueInstance Play(SECTR_AudioCue audioCue, Vector3 position, bool loop)
	{
		return default(SECTR_AudioCueInstance);
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xBA12C8", Offset = "0xBA12C8", VA = "0xBA12C8")]
	public static SECTR_AudioCueInstance Play(SECTR_AudioCue audioCue, Transform parent, Vector3 localPosition, bool loop)
	{
		return default(SECTR_AudioCueInstance);
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xBA2278", Offset = "0xBA2278", VA = "0xBA2278")]
	public static SECTR_AudioCueInstance Clone(SECTR_AudioCueInstance instance, Vector3 newPosition)
	{
		return default(SECTR_AudioCueInstance);
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xB9CF14", Offset = "0xB9CF14", VA = "0xB9CF14")]
	public static void PlayMusic(SECTR_AudioCue musicCue)
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xBA26B0", Offset = "0xBA26B0", VA = "0xBA26B0")]
	public static void StopMusic(bool stopImmediate)
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xBA07C4", Offset = "0xBA07C4", VA = "0xBA07C4")]
	public static void PushAmbience(SECTR_AudioAmbience ambience)
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xBA08BC", Offset = "0xBA08BC", VA = "0xBA08BC")]
	public static void RemoveAmbience(SECTR_AudioAmbience ambience)
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xBA2750", Offset = "0xBA2750", VA = "0xBA2750")]
	public static void SetBusVolume(string busName, float volume)
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xBA2A04", Offset = "0xBA2A04", VA = "0xBA2A04")]
	public static void SetBusVolume(SECTR_AudioBus bus, float volume)
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xBA2AF8", Offset = "0xBA2AF8", VA = "0xBA2AF8")]
	public static void MuteBus(string busName, bool mute)
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xBA2C0C", Offset = "0xBA2C0C", VA = "0xBA2C0C")]
	public static void MuteBus(SECTR_AudioBus bus, bool mute)
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xBA2D04", Offset = "0xBA2D04", VA = "0xBA2D04")]
	public static void PauseBus(SECTR_AudioBus bus, bool paused)
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xBA3074", Offset = "0xBA3074", VA = "0xBA3074")]
	public static bool IsOccluded(Vector3 worldSpacePosition, OcclusionModes occlusionFlags)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xBA34F0", Offset = "0xBA34F0", VA = "0xBA34F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xBA4260", Offset = "0xBA4260", VA = "0xBA4260")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xBA4570", Offset = "0xBA4570", VA = "0xBA4570")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xBA1744", Offset = "0xBA1744", VA = "0xBA1744")]
	private static bool _CheckInstances(SECTR_AudioCue audioCue, bool isPlaying)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xBA1838", Offset = "0xBA1838", VA = "0xBA1838")]
	private static bool _CheckProximity(SECTR_AudioCue audioCue, Transform parent, Vector3 position, Instance testInstance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xBA4058", Offset = "0xBA4058", VA = "0xBA4058")]
	private static float _UpdateTime()
	{
		return default(float);
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xBA40DC", Offset = "0xBA40DC", VA = "0xBA40DC")]
	private static void _UpdateBusPitchVolume(SECTR_AudioBus bus, float effectiveVolume, float effectivePitch)
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xBA491C", Offset = "0xBA491C", VA = "0xBA491C")]
	private static void _UpdateAmbience()
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xBA2864", Offset = "0xBA2864", VA = "0xBA2864")]
	private static SECTR_AudioBus _FindBus(SECTR_AudioBus bus, string busName)
	{
		return null;
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xBA7084", Offset = "0xBA7084", VA = "0xBA7084")]
	public SECTR_AudioSystem()
	{
	}
}
[Token(Token = "0x2000203")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9380", Offset = "0x8C9380")]
public class SECTR_CharacterAudio : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000591")]
	public class SurfaceSound
	{
		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8E6A4C", Offset = "0x8E6A4C")]
		public PhysicMaterial SurfaceMaterial;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8E6A84", Offset = "0x8E6A84")]
		public SECTR_AudioCue FootstepCue;

		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8E6ABC", Offset = "0x8E6ABC")]
		public SECTR_AudioCue JumpCue;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8E6AF4", Offset = "0x8E6AF4")]
		public SECTR_AudioCue LandCue;

		[Token(Token = "0x600251E")]
		[Address(RVA = "0xBA9E2C", Offset = "0xBA9E2C", VA = "0xBA9E2C")]
		public SurfaceSound()
		{
		}
	}

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<PhysicMaterial, SurfaceSound> surfaceTable;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB608", Offset = "0x8DB608")]
	public SurfaceSound DefaultSounds;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB640", Offset = "0x8DB640")]
	public List<SurfaceSound> SurfaceSounds;

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0xBA98DC", Offset = "0xBA98DC", VA = "0xBA98DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xBA9A4C", Offset = "0xBA9A4C", VA = "0xBA9A4C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0xBA9A54", Offset = "0xBA9A54", VA = "0xBA9A54")]
	private void OnFootstep(PhysicMaterial currentMaterial)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0xBA9BE4", Offset = "0xBA9BE4", VA = "0xBA9BE4")]
	private void OnJump(PhysicMaterial currentMaterial)
	{
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0xBA9CC0", Offset = "0xBA9CC0", VA = "0xBA9CC0")]
	private void OnLand(PhysicMaterial currentMaterial)
	{
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0xBA9B30", Offset = "0xBA9B30", VA = "0xBA9B30")]
	private SurfaceSound _GetCurrentSurface(PhysicMaterial currentMaterial)
	{
		return null;
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xBA9D9C", Offset = "0xBA9D9C", VA = "0xBA9D9C")]
	public SECTR_CharacterAudio()
	{
	}
}
[Token(Token = "0x2000204")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C93B8", Offset = "0x8C93B8")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C93B8", Offset = "0x8C93B8")]
public class SECTR_ComputeRMS : MonoBehaviour
{
	[Token(Token = "0x2000592")]
	private struct BakeInfo
	{
		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SECTR_AudioCue cue;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SECTR_AudioCue.ClipData clipData;

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x996D30", Offset = "0x996D30", VA = "0x996D30")]
		public BakeInfo(SECTR_AudioCue cue, SECTR_AudioCue.ClipData clipData)
		{
		}
	}

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<BakeInfo> hdrBakeList;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<SECTR_ComputeRMS> activeBakeList;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int hdrBakeIndex;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SECTR_AudioCue cue;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SECTR_AudioCue.ClipData clipData;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<float> samples;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int numChannels;

	[Token(Token = "0x17000104")]
	public float Progress
	{
		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xBB01F4", Offset = "0xBB01F4", VA = "0xBB01F4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xBB049C", Offset = "0xBB049C", VA = "0xBB049C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xBB04A0", Offset = "0xBB04A0", VA = "0xBB04A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xBB04A4", Offset = "0xBB04A4", VA = "0xBB04A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xBB1024", Offset = "0xBB1024", VA = "0xBB1024")]
	private void OnAudioFilterRead(float[] samples, int numChannels)
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xBB0D74", Offset = "0xBB0D74", VA = "0xBB0D74")]
	public void _StartCompute(SECTR_AudioCue cue, SECTR_AudioCue.ClipData clipData)
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xBB109C", Offset = "0xBB109C", VA = "0xBB109C")]
	public SECTR_ComputeRMS()
	{
	}
}
[Serializable]
[Token(Token = "0x2000205")]
public class SECTR_CueParam
{
	[Token(Token = "0x2000593")]
	public enum TargetType
	{
		[Token(Token = "0x40020D9")]
		Volume,
		[Token(Token = "0x40020DA")]
		Pitch,
		[Token(Token = "0x40020DB")]
		Attribute
	}

	[Serializable]
	[Token(Token = "0x2000594")]
	public class AttributeData
	{
		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Type componentType;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string componentTypeString;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string attributeName;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool fieldAttribute;

		[Token(Token = "0x170002CB")]
		public Type ComponentType
		{
			[Token(Token = "0x6002521")]
			[Address(RVA = "0xBA980C", Offset = "0xBA980C", VA = "0xBA980C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002520")]
			[Address(RVA = "0xBB12AC", Offset = "0xBB12AC", VA = "0xBB12AC")]
			set
			{
			}
		}

		[Token(Token = "0x6002522")]
		[Address(RVA = "0xBB1354", Offset = "0xBB1354", VA = "0xBB1354")]
		public AttributeData()
		{
		}
	}

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TargetType affects;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float defaultValue;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve curve;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AttributeData attributeData;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool toggle;

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xBB113C", Offset = "0xBB113C", VA = "0xBB113C")]
	public SECTR_CueParam()
	{
	}
}
[Token(Token = "0x2000206")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9450", Offset = "0x8C9450")]
public class SECTR_DoorAudio : MonoBehaviour
{
	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SECTR_AudioCueInstance instance;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB678", Offset = "0x8DB678")]
	public SECTR_AudioCue OpenLoopCue;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB6B8", Offset = "0x8DB6B8")]
	public SECTR_AudioCue ClosedLoopCue;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB6F8", Offset = "0x8DB6F8")]
	public SECTR_AudioCue OpeningCue;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB738", Offset = "0x8DB738")]
	public SECTR_AudioCue ClosingCue;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB778", Offset = "0x8DB778")]
	public SECTR_AudioCue WaitingCue;

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xD6E4E4", Offset = "0xD6E4E4", VA = "0xD6E4E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xD6E504", Offset = "0xD6E504", VA = "0xD6E504")]
	private void OnOpen()
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xD6E5FC", Offset = "0xD6E5FC", VA = "0xD6E5FC")]
	private void OnOpening()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xD6E6F4", Offset = "0xD6E6F4", VA = "0xD6E6F4")]
	private void OnClose()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xD6E7EC", Offset = "0xD6E7EC", VA = "0xD6E7EC")]
	private void OnClosing()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xD6E8E4", Offset = "0xD6E8E4", VA = "0xD6E8E4")]
	private void OnWaiting()
	{
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xD6E4F4", Offset = "0xD6E4F4", VA = "0xD6E4F4")]
	private void _Stop(bool stopImmediately)
	{
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xD6E9DC", Offset = "0xD6E9DC", VA = "0xD6E9DC")]
	public SECTR_DoorAudio()
	{
	}
}
[Token(Token = "0x2000207")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9488", Offset = "0x8C9488")]
public class SECTR_ImpactAudio : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000595")]
	public class ImpactSound
	{
		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PhysicMaterial SurfaceMaterial;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SECTR_AudioCue ImpactCue;

		[Token(Token = "0x6002523")]
		[Address(RVA = "0xD77880", Offset = "0xD77880", VA = "0xD77880")]
		public ImpactSound()
		{
		}
	}

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float nextImpactTime;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<PhysicMaterial, ImpactSound> surfaceTable;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB7B8", Offset = "0x8DB7B8")]
	public ImpactSound DefaultSound;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB7F0", Offset = "0x8DB7F0")]
	public List<ImpactSound> SurfaceImpacts;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB828", Offset = "0x8DB828")]
	public float MinImpactSpeed;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB860", Offset = "0x8DB860")]
	public float MinImpactInterval;

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xD773C8", Offset = "0xD773C8", VA = "0xD773C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xD77538", Offset = "0xD77538", VA = "0xD77538")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xD77540", Offset = "0xD77540", VA = "0xD77540")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xD77804", Offset = "0xD77804", VA = "0xD77804")]
	public SECTR_ImpactAudio()
	{
	}
}
[Token(Token = "0x2000208")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C94D4", Offset = "0x8C94D4")]
public class SECTR_MusicTrigger : MonoBehaviour
{
	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject activator;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB898", Offset = "0x8DB898")]
	public SECTR_AudioCue Cue;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB8D8", Offset = "0x8DB8D8")]
	public bool Loop;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB910", Offset = "0x8DB910")]
	public bool StopOnExit;

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xD7EBCC", Offset = "0xD7EBCC", VA = "0xD7EBCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xD7ED00", Offset = "0xD7ED00", VA = "0xD7ED00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xD7ED7C", Offset = "0xD7ED7C", VA = "0xD7ED7C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xD7EE64", Offset = "0xD7EE64", VA = "0xD7EE64")]
	private void OnTriggerEnter2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xD7EF4C", Offset = "0xD7EF4C", VA = "0xD7EF4C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xD7EFE4", Offset = "0xD7EFE4", VA = "0xD7EFE4")]
	private void OnTriggerExit2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xD7EC50", Offset = "0xD7EC50", VA = "0xD7EC50")]
	private void _Play()
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xD7ED14", Offset = "0xD7ED14", VA = "0xD7ED14")]
	private void _Stop(bool stopImmediately)
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xD7F09C", Offset = "0xD7F09C", VA = "0xD7F09C")]
	public SECTR_MusicTrigger()
	{
	}
}
[Token(Token = "0x2000209")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9520", Offset = "0x8C9520")]
public class SECTR_PointSource : SECTR_AudioSource
{
	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected SECTR_AudioCueInstance instance;

	[Token(Token = "0x17000105")]
	public override bool IsPlaying
	{
		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xD80340", Offset = "0xD80340", VA = "0xD80340", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xD80350", Offset = "0xD80350", VA = "0xD80350", Slot = "5")]
	public override void Play()
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xD80550", Offset = "0xD80550", VA = "0xD80550", Slot = "6")]
	public override void Stop(bool stopImmediately)
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xD80560", Offset = "0xD80560", VA = "0xD80560", Slot = "8")]
	protected override void OnVolumePitchChanged()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0xD805BC", Offset = "0xD805BC", VA = "0xD805BC")]
	public SECTR_PointSource()
	{
	}
}
[Token(Token = "0x200020A")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C956C", Offset = "0x8C956C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C956C", Offset = "0x8C956C")]
public class SECTR_PropagationSource : SECTR_AudioSource
{
	[Token(Token = "0x2000596")]
	private class PathSound
	{
		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SECTR_AudioCueInstance instance;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SECTR_Portal firstPortal;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SECTR_Portal secondPortal;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float firstDistance;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float secondDistance;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float distance;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 position;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 lastListenerPosition;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float weight;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool occluded;

		[Token(Token = "0x6002524")]
		[Address(RVA = "0xD82134", Offset = "0xD82134", VA = "0xD82134")]
		public PathSound()
		{
		}
	}

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<SECTR_Graph.Node> path;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<PathSound> activeSounds;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float directDistanceToListener;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool playing;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool played;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB948", Offset = "0x8DB948")]
	public float InterpDistance;

	[Token(Token = "0x17000106")]
	public override bool IsPlaying
	{
		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xD80EA8", Offset = "0xD80EA8", VA = "0xD80EA8", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0xD80F24", Offset = "0xD80F24", VA = "0xD80F24", Slot = "5")]
	public override void Play()
	{
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0xD80F30", Offset = "0xD80F30", VA = "0xD80F30", Slot = "6")]
	public override void Stop(bool stopImmediately)
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0xD81018", Offset = "0xD81018", VA = "0xD81018")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0xD81070", Offset = "0xD81070", VA = "0xD81070", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0xD81098", Offset = "0xD81098", VA = "0xD81098")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0xD82440", Offset = "0xD82440", VA = "0xD82440", Slot = "8")]
	protected override void OnVolumePitchChanged()
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0xD82144", Offset = "0xD82144", VA = "0xD82144")]
	private void _ComputeSoundSpatialization(Vector3 listenerPosition, float distanceToListener, PathSound pathSound)
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0xD82444", Offset = "0xD82444", VA = "0xD82444")]
	public SECTR_PropagationSource()
	{
	}
}
[Token(Token = "0x200020B")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9604", Offset = "0x8C9604")]
public class SECTR_RegionSource : SECTR_PointSource
{
	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB988", Offset = "0x8DB988")]
	public bool Raycast;

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0xD82E04", Offset = "0xD82E04", VA = "0xD82E04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0xD8315C", Offset = "0xD8315C", VA = "0xD8315C")]
	public SECTR_RegionSource()
	{
	}
}
[Token(Token = "0x200020C")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9650", Offset = "0x8C9650")]
public class SECTR_SplineSource : SECTR_PointSource
{
	[Token(Token = "0x2000597")]
	private class SplineNode
	{
		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Point;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rot;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float T;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 EaseIO;

		[Token(Token = "0x6002525")]
		[Address(RVA = "0xD84F10", Offset = "0xD84F10", VA = "0xD84F10")]
		public SplineNode(Vector3 p, Quaternion q, float t, Vector2 io)
		{
		}

		[Token(Token = "0x6002526")]
		[Address(RVA = "0xD84F94", Offset = "0xD84F94", VA = "0xD84F94")]
		public SplineNode(SplineNode o)
		{
		}
	}

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<SplineNode> nodes;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB9C0", Offset = "0x8DB9C0")]
	public List<Transform> SplinePoints;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DB9F8", Offset = "0x8DB9F8")]
	public bool Closed;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DBA30", Offset = "0x8DBA30")]
	public bool AllowShortcuts;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DBA68", Offset = "0x8DBA68")]
	public float MaxInterpSpeed;

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0xD83D54", Offset = "0xD83D54", VA = "0xD83D54", Slot = "5")]
	public override void Play()
	{
	}

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0xD84168", Offset = "0xD84168", VA = "0xD84168")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0xD84C00", Offset = "0xD84C00", VA = "0xD84C00")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0xD84C04", Offset = "0xD84C04", VA = "0xD84C04", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0xD84C0C", Offset = "0xD84C0C", VA = "0xD84C0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0xD8416C", Offset = "0xD8416C", VA = "0xD8416C")]
	private void _SetupSpline()
	{
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0xD83E1C", Offset = "0xD83E1C", VA = "0xD83E1C")]
	private Vector3 _GetClosestPointOnSpline(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xD85030", Offset = "0xD85030", VA = "0xD85030")]
	private Vector3 _GetHermiteAtT(float timeParam)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xD85598", Offset = "0xD85598", VA = "0xD85598")]
	private float _Ease(float t, float k1, float k2)
	{
		return default(float);
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xD856F0", Offset = "0xD856F0", VA = "0xD856F0")]
	public SECTR_SplineSource()
	{
	}
}
[Token(Token = "0x200020D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C969C", Offset = "0x8C969C")]
public class SECTR_StartMusic : MonoBehaviour
{
	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DBAA8", Offset = "0x8DBAA8")]
	public SECTR_AudioCue Cue;

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xD85E34", Offset = "0xD85E34", VA = "0xD85E34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xD85ECC", Offset = "0xD85ECC", VA = "0xD85ECC")]
	public SECTR_StartMusic()
	{
	}
}
[Token(Token = "0x200020E")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C96D4", Offset = "0x8C96D4")]
public class SECTR_TriggerSource : SECTR_PointSource
{
	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject activator;

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xD86890", Offset = "0xD86890", VA = "0xD86890")]
	public SECTR_TriggerSource()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xD868B8", Offset = "0xD868B8", VA = "0xD868B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xD86958", Offset = "0xD86958", VA = "0xD86958")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xD86A08", Offset = "0xD86A08", VA = "0xD86A08")]
	private void OnTriggerEnter2D(Collider2D other)
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xD86AB8", Offset = "0xD86AB8", VA = "0xD86AB8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xD86B74", Offset = "0xD86B74", VA = "0xD86B74")]
	private void OnTriggerExit2D(Collider2D other)
	{
	}
}
[Token(Token = "0x200020F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C9720", Offset = "0x8C9720")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9720", Offset = "0x8C9720")]
public class SECTR_Door : MonoBehaviour
{
	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int controlParam;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int canOpenParam;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int closedState;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int waitingState;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int openingState;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int openState;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int closingState;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int lastState;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator cachedAnimator;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int openCount;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DBAE0", Offset = "0x8DBAE0")]
	public SECTR_Portal Portal;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DBB18", Offset = "0x8DBB18")]
	public string ControlParam;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DBB50", Offset = "0x8DBB50")]
	public string CanOpenParam;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DBB88", Offset = "0x8DBB88")]
	public string OpenState;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DBBC0", Offset = "0x8DBBC0")]
	public string ClosedState;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DBBF8", Offset = "0x8DBBF8")]
	public string OpeningState;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DBC30", Offset = "0x8DBC30")]
	public string ClosingState;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DBC68", Offset = "0x8DBC68")]
	public string WaitingState;

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xD6DE78", Offset = "0xD6DE78", VA = "0xD6DE78")]
	public void OpenDoor()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xD6DE88", Offset = "0xD6DE88", VA = "0xD6DE88")]
	public void CloseDoor()
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xD6DE98", Offset = "0xD6DE98", VA = "0xD6DE98")]
	public bool IsFullyOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xD6DF18", Offset = "0xD6DF18", VA = "0xD6DF18")]
	public bool IsClosed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xD6DF98", Offset = "0xD6DF98", VA = "0xD6DF98", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xD6E07C", Offset = "0xD6E07C", VA = "0xD6E07C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xD6E1AC", Offset = "0xD6E1AC", VA = "0xD6E1AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xD6E404", Offset = "0xD6E404", VA = "0xD6E404", Slot = "5")]
	protected virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xD6E414", Offset = "0xD6E414", VA = "0xD6E414", Slot = "6")]
	protected virtual void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xD6E424", Offset = "0xD6E424", VA = "0xD6E424", Slot = "7")]
	protected virtual bool CanOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xD6E42C", Offset = "0xD6E42C", VA = "0xD6E42C")]
	public SECTR_Door()
	{
	}
}
[Token(Token = "0x2000210")]
public static class SECTR_Geometry
{
	[Token(Token = "0x4000EC0")]
	public const float kVERTEX_EPSILON = 0.001f;

	[Token(Token = "0x4000EC1")]
	public const float kBOUNDS_CHEAT = 0.01f;

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xD70118", Offset = "0xD70118", VA = "0xD70118")]
	public static Bounds ComputeBounds(Light light)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xD70704", Offset = "0xD70704", VA = "0xD70704")]
	public static Bounds ComputeBounds(Terrain terrain)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xD708E0", Offset = "0xD708E0", VA = "0xD708E0")]
	public static bool FrustumIntersectsBounds(Bounds bounds, List<Plane> frustum, int inMask, out int outMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xD70AE0", Offset = "0xD70AE0", VA = "0xD70AE0")]
	public static bool FrustumContainsBounds(Bounds bounds, List<Plane> frustum)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xD70CD8", Offset = "0xD70CD8", VA = "0xD70CD8")]
	public static bool BoundsContainsBounds(Bounds container, Bounds contained)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xD70D38", Offset = "0xD70D38", VA = "0xD70D38")]
	public static bool BoundsIntersectsSphere(Bounds bounds, Vector3 sphereCenter, float sphereRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xD70E60", Offset = "0xD70E60", VA = "0xD70E60")]
	public static Bounds ProjectBounds(Bounds bounds, Vector3 projection)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0xD70FA0", Offset = "0xD70FA0", VA = "0xD70FA0")]
	public static bool IsPointInFrontOfPlane(Vector3 position, Vector3 center, Vector3 normal)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0xD710AC", Offset = "0xD710AC", VA = "0xD710AC")]
	public static bool IsPolygonConvex(Vector3[] verts)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0xD71340", Offset = "0xD71340", VA = "0xD71340")]
	public static int CompareVectorsCW(Vector3 a, Vector3 b, Vector3 centroid, Vector3 normal)
	{
		return default(int);
	}
}
[Token(Token = "0x2000211")]
public static class SECTR_Graph
{
	[Token(Token = "0x2000598")]
	public class Node : IComparable<Node>
	{
		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SECTR_Portal Portal;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SECTR_Sector Sector;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CostPlusEstimate;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Cost;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Depth;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ForwardTraversal;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Node Parent;

		[Token(Token = "0x6002527")]
		[Address(RVA = "0xD7427C", Offset = "0xD7427C", VA = "0xD7427C", Slot = "4")]
		public int CompareTo(Node other)
		{
			return default(int);
		}

		[Token(Token = "0x6002528")]
		[Address(RVA = "0xD73500", Offset = "0xD73500", VA = "0xD73500")]
		public static void ReconstructPath(List<Node> path, Node currentNode)
		{
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0xD72020", Offset = "0xD72020", VA = "0xD72020")]
		public Node()
		{
		}
	}

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_Sector> initialSectors;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<SECTR_Sector> goalSectors;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static SECTR_PriorityQueue<Node> openSet;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Dictionary<SECTR_Portal, Node> closedSet;

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0xD71AC8", Offset = "0xD71AC8", VA = "0xD71AC8")]
	public static void DepthWalk(ref List<Node> nodes, SECTR_Sector root, SECTR_Portal.PortalFlags stopFlags, int maxDepth)
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0xD721FC", Offset = "0xD721FC", VA = "0xD721FC")]
	public static void BreadthWalk(ref List<Node> nodes, SECTR_Sector root, SECTR_Portal.PortalFlags stopFlags, int maxDepth)
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0xD72760", Offset = "0xD72760", VA = "0xD72760")]
	public static void FindShortestPath(ref List<Node> path, Vector3 start, Vector3 goal, SECTR_Portal.PortalFlags stopFlags)
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0xD7358C", Offset = "0xD7358C", VA = "0xD7358C")]
	public static string GetGraphAsDot(string graphName)
	{
		return null;
	}
}
[Token(Token = "0x2000212")]
public abstract class SECTR_Hull : MonoBehaviour
{
	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh previousMesh;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] vertsCW;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 meshCentroid;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected Vector3 meshNormal;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DBCA0", Offset = "0x8DBCA0")]
	public Mesh HullMesh;

	[Token(Token = "0x17000107")]
	public Vector3[] VertsCW
	{
		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xD761F4", Offset = "0xD761F4", VA = "0xD761F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000108")]
	public Vector3 Normal
	{
		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xD76914", Offset = "0xD76914", VA = "0xD76914")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000109")]
	public Vector3 ReverseNormal
	{
		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xD769F8", Offset = "0xD769F8", VA = "0xD769F8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700010A")]
	public Vector3 Center
	{
		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xD76B1C", Offset = "0xD76B1C", VA = "0xD76B1C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700010B")]
	public Plane HullPlane
	{
		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xD76B9C", Offset = "0xD76B9C", VA = "0xD76B9C")]
		get
		{
			return default(Plane);
		}
	}

	[Token(Token = "0x1700010C")]
	public Plane ReverseHullPlane
	{
		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xD76C20", Offset = "0xD76C20", VA = "0xD76C20")]
		get
		{
			return default(Plane);
		}
	}

	[Token(Token = "0x1700010D")]
	public Bounds BoundingBox
	{
		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xD76CA4", Offset = "0xD76CA4", VA = "0xD76CA4")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0xD76EC0", Offset = "0xD76EC0", VA = "0xD76EC0")]
	public bool IsPointInHull(Vector3 p, float distanceTolerance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0xD76218", Offset = "0xD76218", VA = "0xD76218")]
	protected void ComputeVerts()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0xD77300", Offset = "0xD77300", VA = "0xD77300")]
	protected SECTR_Hull()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0xD77388", Offset = "0xD77388", VA = "0xD77388")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA5E8", Offset = "0x8EA5E8")]
	private int <ComputeVerts>b__20_0(Vector3 a, Vector3 b)
	{
		return default(int);
	}
}
[Token(Token = "0x2000213")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C97A8", Offset = "0x8C97A8")]
public class SECTR_Member : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000599")]
	public class Child
	{
		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int gameObjectHash;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SECTR_Member member;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer renderer;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int renderHash;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light light;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int lightHash;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Terrain terrain;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int terrainHash;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Bounds rendererBounds;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Bounds lightBounds;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Bounds terrainBounds;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool shadowLight;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		public bool rendererCastsShadows;

		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		public bool terrainCastsShadows;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public LayerMask layer;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector3 shadowLightPosition;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float shadowLightRange;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public LightType shadowLightType;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int shadowCullingMask;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool processed;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		public bool renderCulled;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
		public bool lightCulled;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBF")]
		public bool terrainCulled;

		[Token(Token = "0x600252A")]
		[Address(RVA = "0xD7CECC", Offset = "0xD7CECC", VA = "0xD7CECC")]
		public void Init(GameObject gameObject, Renderer renderer, Light light, Terrain terrain, SECTR_Member member, bool dirShadowCaster, Vector3 shadowVec)
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0xD7E830", Offset = "0xD7E830", VA = "0xD7E830", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0xD7E8D4", Offset = "0xD7E8D4", VA = "0xD7E8D4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600252D")]
		[Address(RVA = "0xD7DE7C", Offset = "0xD7DE7C", VA = "0xD7DE7C")]
		public static bool operator ==(Child x, Child y)
		{
			return default(bool);
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0xD7DE50", Offset = "0xD7DE50", VA = "0xD7DE50")]
		public static bool operator !=(Child x, Child y)
		{
			return default(bool);
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0xD7DEA8", Offset = "0xD7DEA8", VA = "0xD7DEA8")]
		public Child()
		{
		}
	}

	[Token(Token = "0x200059A")]
	public enum BoundsUpdateModes
	{
		[Token(Token = "0x4002110")]
		Start,
		[Token(Token = "0x4002111")]
		Movement,
		[Token(Token = "0x4002112")]
		Always,
		[Token(Token = "0x4002113")]
		Static,
		[Token(Token = "0x4002114")]
		SelfOnly
	}

	[Token(Token = "0x200059B")]
	public enum ChildCullModes
	{
		[Token(Token = "0x4002116")]
		Default,
		[Token(Token = "0x4002117")]
		Group,
		[Token(Token = "0x4002118")]
		Individual
	}

	[Token(Token = "0x200059C")]
	public delegate void MembershipChanged(List<SECTR_Sector> left, List<SECTR_Sector> joined);

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private List<Child> children;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private List<Child> renderers;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private List<Child> lights;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[HideInInspector]
	private List<Child> terrains;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private List<Child> shadowLights;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private List<Child> shadowCasters;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[HideInInspector]
	private Bounds totalBounds;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[HideInInspector]
	private Bounds renderBounds;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[HideInInspector]
	private Bounds lightBounds;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	[HideInInspector]
	private bool hasRenderBounds;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	[SerializeField]
	[HideInInspector]
	private bool hasLightBounds;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	[SerializeField]
	[HideInInspector]
	private bool shadowCaster;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	[SerializeField]
	[HideInInspector]
	private bool shadowLight;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	[HideInInspector]
	private bool frozen;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	[SerializeField]
	[HideInInspector]
	private bool neverJoin;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[HideInInspector]
	protected List<Light> bakedOnlyLights;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected bool isSector;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected SECTR_Member childProxy;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected bool hasChildProxy;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool started;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	private bool usedStartSector;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<SECTR_Sector> sectors;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<SECTR_Sector> newSectors;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<SECTR_Sector> leftSectors;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Dictionary<Transform, Child> childTable;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Dictionary<Light, Light> bakedOnlyTable;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Stack<Child> childPool;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_Member> allMembers;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<Transform, SECTR_Member> allMemberTable;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC058", Offset = "0x8DC058")]
	public bool PortalDetermined;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC090", Offset = "0x8DC090")]
	public SECTR_Sector ForceStartSector;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC0DC", Offset = "0x8DC0DC")]
	public BoundsUpdateModes BoundsUpdateMode;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC114", Offset = "0x8DC114")]
	public float ExtraBounds;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC14C", Offset = "0x8DC14C")]
	public bool OverrideBounds;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC184", Offset = "0x8DC184")]
	public Bounds BoundsOverride;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC1D0", Offset = "0x8DC1D0")]
	public Light DirShadowCaster;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC208", Offset = "0x8DC208")]
	public float DirShadowDistance;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC254", Offset = "0x8DC254")]
	public ChildCullModes ChildCulling;

	[NonSerialized]
	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[HideInInspector]
	public int LastVisibleFrameNumber;

	[Token(Token = "0x1700010E")]
	public static List<SECTR_Member> All
	{
		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xD7AA0C", Offset = "0xD7AA0C", VA = "0xD7AA0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010F")]
	public bool CullEachChild
	{
		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xD7AA74", Offset = "0xD7AA74", VA = "0xD7AA74")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000110")]
	public List<SECTR_Sector> Sectors
	{
		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xD7AAA4", Offset = "0xD7AAA4", VA = "0xD7AAA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000111")]
	public List<Child> Children
	{
		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xD7AAAC", Offset = "0xD7AAAC", VA = "0xD7AAAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000112")]
	public List<Child> Renderers
	{
		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xD7AAD0", Offset = "0xD7AAD0", VA = "0xD7AAD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000113")]
	public bool ShadowCaster
	{
		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xD7AAF4", Offset = "0xD7AAF4", VA = "0xD7AAF4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000114")]
	public List<Child> ShadowCasters
	{
		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xD7AB18", Offset = "0xD7AB18", VA = "0xD7AB18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000115")]
	public List<Child> Lights
	{
		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xD7AB3C", Offset = "0xD7AB3C", VA = "0xD7AB3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000116")]
	public bool ShadowLight
	{
		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xD7AB60", Offset = "0xD7AB60", VA = "0xD7AB60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000117")]
	public List<Child> ShadowLights
	{
		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xD7AB84", Offset = "0xD7AB84", VA = "0xD7AB84")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000118")]
	public List<Child> Terrains
	{
		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xD7ABA8", Offset = "0xD7ABA8", VA = "0xD7ABA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000119")]
	public Bounds TotalBounds
	{
		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xD7ABCC", Offset = "0xD7ABCC", VA = "0xD7ABCC")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x1700011A")]
	public Bounds RenderBounds
	{
		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xD7ABE0", Offset = "0xD7ABE0", VA = "0xD7ABE0")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x1700011B")]
	public bool HasRenderBounds
	{
		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xD7AC34", Offset = "0xD7AC34", VA = "0xD7AC34")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700011C")]
	public Bounds LightBounds
	{
		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xD7AC58", Offset = "0xD7AC58", VA = "0xD7AC58")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x1700011D")]
	public bool HasLightBounds
	{
		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xD7ACAC", Offset = "0xD7ACAC", VA = "0xD7ACAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700011E")]
	public bool Frozen
	{
		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xD7444C", Offset = "0xD7444C", VA = "0xD7444C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xD7AD2C", Offset = "0xD7AD2C", VA = "0xD7AD2C")]
		set
		{
		}
	}

	[Token(Token = "0x1700011F")]
	public SECTR_Member ChildProxy
	{
		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xD7AD40", Offset = "0xD7AD40", VA = "0xD7AD40")]
		set
		{
		}
	}

	[Token(Token = "0x17000120")]
	public bool NeverJoin
	{
		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xD7ADC8", Offset = "0xD7ADC8", VA = "0xD7ADC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000121")]
	public bool IsSector
	{
		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xD7ADD4", Offset = "0xD7ADD4", VA = "0xD7ADD4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1400002C")]
	public event MembershipChanged Changed
	{
		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xD750B4", Offset = "0xD750B4", VA = "0xD750B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA5F8", Offset = "0x8EA5F8")]
		add
		{
		}
		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xD75258", Offset = "0xD75258", VA = "0xD75258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA608", Offset = "0x8EA608")]
		remove
		{
		}
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0xD7ACD0", Offset = "0xD7ACD0", VA = "0xD7ACD0")]
	public bool IsVisibleThisFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0xD7ACFC", Offset = "0xD7ACFC", VA = "0xD7ACFC")]
	public bool WasVisibleLastFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0xD78C7C", Offset = "0xD78C7C", VA = "0xD78C7C")]
	public void ForceUpdate(bool updateChildren)
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0xD7BEBC", Offset = "0xD7BEBC", VA = "0xD7BEBC")]
	public void SectorDisabled(SECTR_Sector sector)
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0xD7C764", Offset = "0xD7C764", VA = "0xD7C764")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0xD7C7DC", Offset = "0xD7C7DC", VA = "0xD7C7DC", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0xD7C9E0", Offset = "0xD7C9E0", VA = "0xD7C9E0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0xD7CDF8", Offset = "0xD7CDF8", VA = "0xD7CDF8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0xD7ADDC", Offset = "0xD7ADDC", VA = "0xD7ADDC")]
	private void _UpdateChildren()
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0xD7D670", Offset = "0xD7D670", VA = "0xD7D670")]
	private void _AddChildren(Transform childTransform, bool dirShadowCaster, Vector3 shadowVec)
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0xD7B768", Offset = "0xD7B768", VA = "0xD7B768")]
	private void _UpdateSectorMembership()
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0xD7DEB0", Offset = "0xD7DEB0", VA = "0xD7DEB0")]
	private SECTR_Portal _CrossedPortal(SECTR_Sector sector)
	{
		return null;
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0xD7E4AC", Offset = "0xD7E4AC", VA = "0xD7E4AC")]
	public SECTR_Member()
	{
	}
}
[Token(Token = "0x2000214")]
public static class SECTR_Modules
{
	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool AUDIO;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool VIS;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool STREAM;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public static bool DEV;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string VERSION;

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0xD7E918", Offset = "0xD7E918", VA = "0xD7E918")]
	static SECTR_Modules()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0xD7EB04", Offset = "0xD7EB04", VA = "0xD7EB04")]
	public static bool HasPro()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0xD7EB0C", Offset = "0xD7EB0C", VA = "0xD7EB0C")]
	public static bool HasComplete()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000215")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C97F4", Offset = "0x8C97F4")]
public class SECTR_Portal : SECTR_Hull
{
	[Token(Token = "0x200059D")]
	[Flags]
	public enum PortalFlags
	{
		[Token(Token = "0x400211A")]
		Closed = 1,
		[Token(Token = "0x400211B")]
		Locked = 2,
		[Token(Token = "0x400211C")]
		PassThrough = 4
	}

	[Token(Token = "0x200059E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCF6C", Offset = "0x8CCF6C")]
	private sealed class <GetSectors>d__17 : IEnumerable<SECTR_Sector>, IEnumerable, IEnumerator<SECTR_Sector>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SECTR_Sector <>2__current;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <>l__initialThreadId;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SECTR_Portal <>4__this;

		[Token(Token = "0x170002CC")]
		private SECTR_Sector System.Collections.Generic.IEnumerator<SECTR_Sector>.Current
		{
			[Token(Token = "0x6002537")]
			[Address(RVA = "0xD80D7C", Offset = "0xD80D7C", VA = "0xD80D7C", Slot = "6")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002539")]
			[Address(RVA = "0xD80DEC", Offset = "0xD80DEC", VA = "0xD80DEC", Slot = "9")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0xD809B8", Offset = "0xD809B8", VA = "0xD809B8")]
		[DebuggerHidden]
		public <GetSectors>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0xD80CE4", Offset = "0xD80CE4", VA = "0xD80CE4", Slot = "7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0xD80CE8", Offset = "0xD80CE8", VA = "0xD80CE8", Slot = "8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0xD80D84", Offset = "0xD80D84", VA = "0xD80D84", Slot = "10")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0xD80DF4", Offset = "0xD80DF4", VA = "0xD80DF4", Slot = "4")]
		[DebuggerHidden]
		private IEnumerator<SECTR_Sector> System.Collections.Generic.IEnumerable<SECTR_Sector>.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0xD80EA4", Offset = "0xD80EA4", VA = "0xD80EA4", Slot = "5")]
		[DebuggerHidden]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	[HideInInspector]
	private SECTR_Sector frontSector;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private SECTR_Sector backSector;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool visited;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_Portal> allPortals;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC31C", Offset = "0x8DC31C")]
	public PortalFlags Flags;

	[Token(Token = "0x17000122")]
	public static List<SECTR_Portal> All
	{
		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xD74108", Offset = "0xD74108", VA = "0xD74108")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000123")]
	public SECTR_Sector FrontSector
	{
		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xD720A4", Offset = "0xD720A4", VA = "0xD720A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xD805C4", Offset = "0xD805C4", VA = "0xD805C4")]
		set
		{
		}
	}

	[Token(Token = "0x17000124")]
	public SECTR_Sector BackSector
	{
		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xD7214C", Offset = "0xD7214C", VA = "0xD7214C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xD80800", Offset = "0xD80800", VA = "0xD80800")]
		set
		{
		}
	}

	[Token(Token = "0x17000125")]
	public bool Visited
	{
		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xD80920", Offset = "0xD80920", VA = "0xD80920")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xD80928", Offset = "0xD80928", VA = "0xD80928")]
		set
		{
		}
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0xD80934", Offset = "0xD80934", VA = "0xD80934")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EA618", Offset = "0x8EA618")]
	public IEnumerable<SECTR_Sector> GetSectors()
	{
		return null;
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0xD6E190", Offset = "0xD6E190", VA = "0xD6E190")]
	public void SetFlag(PortalFlags flag, bool on)
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0xD809F0", Offset = "0xD809F0", VA = "0xD809F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0xD80B2C", Offset = "0xD80B2C", VA = "0xD80B2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0xD80C68", Offset = "0xD80C68", VA = "0xD80C68")]
	public SECTR_Portal()
	{
	}
}
[Token(Token = "0x2000216")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8C9840", Offset = "0x8C9840")]
public class SECTR_PriorityQueue<T> where T : IComparable<T>
{
	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<T> data;

	[Token(Token = "0x17000126")]
	public int Count
	{
		[Token(Token = "0x6000FB8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000FB9")]
		set
		{
		}
	}

	[Token(Token = "0x17000127")]
	public T Item
	{
		[Token(Token = "0x6000FBA")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000FBB")]
		set
		{
		}
	}

	[Token(Token = "0x6000FB6")]
	public SECTR_PriorityQueue()
	{
	}

	[Token(Token = "0x6000FB7")]
	public SECTR_PriorityQueue(int capacity)
	{
	}

	[Token(Token = "0x6000FBC")]
	public void Enqueue(T item)
	{
	}

	[Token(Token = "0x6000FBD")]
	public T Dequeue()
	{
		return (T)null;
	}

	[Token(Token = "0x6000FBE")]
	public T Peek()
	{
		return (T)null;
	}

	[Token(Token = "0x6000FBF")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000FC0")]
	public bool IsConsistent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FC1")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000FC2")]
	private void _SwapElements(int i, int j)
	{
	}

	[Token(Token = "0x6000FC3")]
	private void _Update(int i)
	{
	}
}
[Token(Token = "0x2000217")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9878", Offset = "0x8C9878")]
public class SECTR_Sector : SECTR_Member
{
	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<SECTR_Portal> portals;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<SECTR_Member> members;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool visited;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_Sector> allSectors;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC39C", Offset = "0x8DC39C")]
	public SECTR_Sector TopTerrain;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC3D4", Offset = "0x8DC3D4")]
	public SECTR_Sector BottomTerrain;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC40C", Offset = "0x8DC40C")]
	public SECTR_Sector LeftTerrain;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC444", Offset = "0x8DC444")]
	public SECTR_Sector RightTerrain;

	[Token(Token = "0x17000128")]
	public new static List<SECTR_Sector> All
	{
		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xD72028", Offset = "0xD72028", VA = "0xD72028")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000129")]
	public bool Visited
	{
		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xD721F4", Offset = "0xD721F4", VA = "0xD721F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xD72090", Offset = "0xD72090", VA = "0xD72090")]
		set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	public List<SECTR_Portal> Portals
	{
		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xD7209C", Offset = "0xD7209C", VA = "0xD7209C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012B")]
	public List<SECTR_Member> Members
	{
		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xD8322C", Offset = "0xD8322C", VA = "0xD8322C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012C")]
	public bool IsConnectedTerrain
	{
		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xD83234", Offset = "0xD83234", VA = "0xD83234")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0xD83164", Offset = "0xD83164", VA = "0xD83164")]
	private SECTR_Sector()
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0xD73348", Offset = "0xD73348", VA = "0xD73348")]
	public static void GetContaining(ref List<SECTR_Sector> sectors, Vector3 position)
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0xD7E2FC", Offset = "0xD7E2FC", VA = "0xD7E2FC")]
	public static void GetContaining(ref List<SECTR_Sector> sectors, Bounds bounds)
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0xD83340", Offset = "0xD83340", VA = "0xD83340")]
	public void ConnectTerrainNeighbors()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0xD83554", Offset = "0xD83554", VA = "0xD83554")]
	public void DisonnectTerrainNeighbors()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0xD80754", Offset = "0xD80754", VA = "0xD80754")]
	public void Register(SECTR_Portal portal)
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0xD806E4", Offset = "0xD806E4", VA = "0xD806E4")]
	public void Deregister(SECTR_Portal portal)
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0xD7E28C", Offset = "0xD7E28C", VA = "0xD7E28C")]
	public void Register(SECTR_Member member)
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0xD7CD88", Offset = "0xD7CD88", VA = "0xD7CD88")]
	public void Deregister(SECTR_Member member)
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0xD839F8", Offset = "0xD839F8", VA = "0xD839F8", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0xD83B54", Offset = "0xD83B54", VA = "0xD83B54", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0xD83480", Offset = "0xD83480", VA = "0xD83480")]
	protected static Terrain GetTerrain(SECTR_Sector sector)
	{
		return null;
	}
}
[Token(Token = "0x2000218")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8C98C4", Offset = "0x8C98C4")]
public class SECTR_ToolTip : Attribute
{
	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string tipText;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string dependentProperty;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float min;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float max;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Type enumType;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool hasRange;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool devOnly;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool sceneObjectOverride;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool allowSceneObjects;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool treatAsLayer;

	[Token(Token = "0x1700012D")]
	public string TipText
	{
		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xD86324", Offset = "0xD86324", VA = "0xD86324")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012E")]
	public string DependentProperty
	{
		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xD8632C", Offset = "0xD8632C", VA = "0xD8632C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012F")]
	public float Min
	{
		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xD86334", Offset = "0xD86334", VA = "0xD86334")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000130")]
	public float Max
	{
		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xD8633C", Offset = "0xD8633C", VA = "0xD8633C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000131")]
	public Type EnumType
	{
		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xD86344", Offset = "0xD86344", VA = "0xD86344")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000132")]
	public bool HasRange
	{
		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xD8634C", Offset = "0xD8634C", VA = "0xD8634C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000133")]
	public bool DevOnly
	{
		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xD86354", Offset = "0xD86354", VA = "0xD86354")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000134")]
	public bool SceneObjectOverride
	{
		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xD8635C", Offset = "0xD8635C", VA = "0xD8635C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000135")]
	public bool AllowSceneObjects
	{
		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xD86364", Offset = "0xD86364", VA = "0xD86364")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000136")]
	public bool TreatAsLayer
	{
		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xD8636C", Offset = "0xD8636C", VA = "0xD8636C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0xD8610C", Offset = "0xD8610C", VA = "0xD8610C")]
	public SECTR_ToolTip(string tipText)
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0xD86138", Offset = "0xD86138", VA = "0xD86138")]
	public SECTR_ToolTip(string tipText, float min, float max)
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0xD86180", Offset = "0xD86180", VA = "0xD86180")]
	public SECTR_ToolTip(string tipText, string dependentProperty)
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0xD861B8", Offset = "0xD861B8", VA = "0xD861B8")]
	public SECTR_ToolTip(string tipText, string dependentProperty, float min, float max)
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0xD8620C", Offset = "0xD8620C", VA = "0xD8620C")]
	public SECTR_ToolTip(string tipText, bool devOnly)
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0xD8624C", Offset = "0xD8624C", VA = "0xD8624C")]
	public SECTR_ToolTip(string tipText, bool devOnly, bool treatAsLayer)
	{
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0xD86298", Offset = "0xD86298", VA = "0xD86298")]
	public SECTR_ToolTip(string tipText, string dependentProperty, Type enumType)
	{
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0xD862D8", Offset = "0xD862D8", VA = "0xD862D8")]
	public SECTR_ToolTip(string tipText, string dependentProperty, bool allowSceneObjects)
	{
	}
}
[Serializable]
[Token(Token = "0x2000219")]
public class SECTR_ULong
{
	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private int first;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private int second;

	[Token(Token = "0x17000137")]
	public ulong value
	{
		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xD86C30", Offset = "0xD86C30", VA = "0xD86C30")]
		get
		{
			return default(ulong);
		}
		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xD86C40", Offset = "0xD86C40", VA = "0xD86C40")]
		set
		{
		}
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0xD86C4C", Offset = "0xD86C4C", VA = "0xD86C4C")]
	public SECTR_ULong(ulong newValue)
	{
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0xD86C7C", Offset = "0xD86C7C", VA = "0xD86C7C")]
	public SECTR_ULong()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0xD86CA4", Offset = "0xD86CA4", VA = "0xD86CA4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0xD86D74", Offset = "0xD86D74", VA = "0xD86D74")]
	public static bool operator >(SECTR_ULong a, ulong b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0xD86DB0", Offset = "0xD86DB0", VA = "0xD86DB0")]
	public static bool operator >(ulong a, SECTR_ULong b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0xD86DF0", Offset = "0xD86DF0", VA = "0xD86DF0")]
	public static bool operator <(SECTR_ULong a, ulong b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0xD86E2C", Offset = "0xD86E2C", VA = "0xD86E2C")]
	public static bool operator <(ulong a, SECTR_ULong b)
	{
		return default(bool);
	}
}
[Token(Token = "0x200021A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C98D8", Offset = "0x8C98D8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C98D8", Offset = "0x8C98D8")]
public class SECTR_Chunk : MonoBehaviour
{
	[Token(Token = "0x200059F")]
	public enum LoadState
	{
		[Token(Token = "0x4002122")]
		Unloaded,
		[Token(Token = "0x4002123")]
		Loading,
		[Token(Token = "0x4002124")]
		Loaded,
		[Token(Token = "0x4002125")]
		Unloading,
		[Token(Token = "0x4002126")]
		Active
	}

	[Token(Token = "0x20005A0")]
	public delegate void LoadCallback(SECTR_Chunk source, LoadState loadState);

	[Token(Token = "0x20005A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCF7C", Offset = "0x8CCF7C")]
	private sealed class <_DeferredUnload>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SECTR_Chunk <>4__this;

		[Token(Token = "0x170002CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002543")]
			[Address(RVA = "0xBAFA8C", Offset = "0xBAFA8C", VA = "0xBAFA8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002545")]
			[Address(RVA = "0xBAFAFC", Offset = "0xBAFAFC", VA = "0xBAFAFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0xBAF86C", Offset = "0xBAF86C", VA = "0xBAF86C")]
		[DebuggerHidden]
		public <_DeferredUnload>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0xBAF9C8", Offset = "0xBAF9C8", VA = "0xBAF9C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0xBAF9CC", Offset = "0xBAF9CC", VA = "0xBAF9CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0xBAFA94", Offset = "0xBAFA94", VA = "0xBAFA94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCF8C", Offset = "0x8CCF8C")]
	private sealed class <_UnloadScene>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SECTR_Chunk <>4__this;

		[Token(Token = "0x170002D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002549")]
			[Address(RVA = "0xBAFBB4", Offset = "0xBAFBB4", VA = "0xBAFBB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600254B")]
			[Address(RVA = "0xBAFC24", Offset = "0xBAFC24", VA = "0xBAFC24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0xBAF90C", Offset = "0xBAF90C", VA = "0xBAF90C")]
		[DebuggerHidden]
		public <_UnloadScene>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0xBAFB04", Offset = "0xBAFB04", VA = "0xBAFB04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0xBAFB08", Offset = "0xBAFB08", VA = "0xBAFB08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0xBAFBBC", Offset = "0xBAFBBC", VA = "0xBAFBBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AsyncOperation asyncLoadOp;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LoadState loadState;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int refCount;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject chunkRoot;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject chunkSector;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool recenterChunk;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SECTR_Sector cachedSector;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject proxy;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool quitting;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SECTR_Chunk chunkActivating;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static LinkedList<SECTR_Chunk> activationQueue;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool requestedDeferredUnload;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC49C", Offset = "0x8DC49C")]
	public string ScenePath;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC4D4", Offset = "0x8DC4D4")]
	public string NodeName;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC50C", Offset = "0x8DC50C")]
	public bool ExportForReuse;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC544", Offset = "0x8DC544")]
	public Mesh ProxyMesh;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC57C", Offset = "0x8DC57C")]
	public Material[] ProxyMaterials;

	[Token(Token = "0x17000138")]
	public SECTR_Sector Sector
	{
		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xBAD378", Offset = "0xBAD378", VA = "0xBAD378")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1400002D")]
	public event LoadCallback Changed
	{
		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xBADE94", Offset = "0xBADE94", VA = "0xBADE94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA67C", Offset = "0x8EA67C")]
		add
		{
		}
		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xBADF80", Offset = "0xBADF80", VA = "0xBADF80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA68C", Offset = "0x8EA68C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400002E")]
	public event LoadCallback ReferenceChange
	{
		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xBAE06C", Offset = "0xBAE06C", VA = "0xBAE06C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA69C", Offset = "0x8EA69C")]
		add
		{
		}
		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xBAE158", Offset = "0xBAE158", VA = "0xBAE158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA6AC", Offset = "0x8EA6AC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0xBAD380", Offset = "0xBAD380", VA = "0xBAD380")]
	public void AddReference()
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0xBADC94", Offset = "0xBADC94", VA = "0xBADC94")]
	public void RemoveReference()
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0xBADE08", Offset = "0xBADE08", VA = "0xBADE08")]
	public bool IsLoaded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0xBADE18", Offset = "0xBADE18", VA = "0xBADE18")]
	public bool IsUnloaded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0xBADE28", Offset = "0xBADE28", VA = "0xBADE28")]
	public float LoadProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0xBAE244", Offset = "0xBAE244", VA = "0xBAE244")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0xBAE24C", Offset = "0xBAE24C", VA = "0xBAE24C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0xBAE5DC", Offset = "0xBAE5DC", VA = "0xBAE5DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0xBAEC54", Offset = "0xBAEC54", VA = "0xBAEC54")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0xBAEC60", Offset = "0xBAEC60", VA = "0xBAEC60")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0xBAD3D4", Offset = "0xBAD3D4", VA = "0xBAD3D4")]
	private void _Load()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0xBADCE4", Offset = "0xBADCE4", VA = "0xBADCE4")]
	private void _Unload()
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0xBAE8F4", Offset = "0xBAE8F4", VA = "0xBAE8F4")]
	private void _DestroyChunk(bool createProxy, bool fromDisable)
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0xBAE6C8", Offset = "0xBAE6C8", VA = "0xBAE6C8")]
	private void _FindChunkRoot()
	{
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0xBAF01C", Offset = "0xBAF01C", VA = "0xBAF01C")]
	private void _SetupChunk()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0xBAE2D0", Offset = "0xBAE2D0", VA = "0xBAE2D0")]
	private void _CreateProxy()
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0xBAEDFC", Offset = "0xBAEDFC", VA = "0xBAEDFC")]
	private void _TrySceneActivation()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0xBAF658", Offset = "0xBAF658", VA = "0xBAF658")]
	private void _UnloadResources()
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0xBAF7F8", Offset = "0xBAF7F8", VA = "0xBAF7F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EA6BC", Offset = "0x8EA6BC")]
	private IEnumerator _DeferredUnload()
	{
		return null;
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0xBAF898", Offset = "0xBAF898", VA = "0xBAF898")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EA720", Offset = "0x8EA720")]
	private IEnumerator _UnloadScene(string scenePath)
	{
		return null;
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0xBAF938", Offset = "0xBAF938", VA = "0xBAF938")]
	public SECTR_Chunk()
	{
	}
}
[Token(Token = "0x200021B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9960", Offset = "0x8C9960")]
public class SECTR_ChunkRef : MonoBehaviour
{
	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_ChunkRef> allChunkRefs;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform RealSector;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Recentered;

	[Token(Token = "0x600100D")]
	[Address(RVA = "0xBAF6C8", Offset = "0xBAF6C8", VA = "0xBAF6C8")]
	public static SECTR_ChunkRef FindChunkRef(string chunkName)
	{
		return null;
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0xBAFCE4", Offset = "0xBAFCE4", VA = "0xBAFCE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0xBAFD70", Offset = "0xBAFD70", VA = "0xBAFD70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0xBAFDFC", Offset = "0xBAFDFC", VA = "0xBAFDFC")]
	public SECTR_ChunkRef()
	{
	}
}
[Token(Token = "0x200021C")]
public class SECTR_GroupLoader : SECTR_Loader
{
	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC5D4", Offset = "0x8DC5D4")]
	public List<SECTR_Sector> Sectors;

	[Token(Token = "0x17000139")]
	public override bool Loaded
	{
		[Token(Token = "0x6001012")]
		[Address(RVA = "0xD742D4", Offset = "0xD742D4", VA = "0xD742D4", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0xD74454", Offset = "0xD74454", VA = "0xD74454")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0xD745EC", Offset = "0xD745EC", VA = "0xD745EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0xD74784", Offset = "0xD74784", VA = "0xD74784")]
	private void ChunkChanged(SECTR_Chunk source, SECTR_Chunk.LoadState loadState)
	{
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0xD749DC", Offset = "0xD749DC", VA = "0xD749DC")]
	public SECTR_GroupLoader()
	{
	}
}
[Token(Token = "0x200021D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C9998", Offset = "0x8C9998")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9998", Offset = "0x8C9998")]
public class SECTR_Hibernator : MonoBehaviour
{
	[Token(Token = "0x20005A3")]
	public delegate void HibernateCallback();

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hibernating;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<SECTR_Chunk, SECTR_Chunk> chunks;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numLoadedSectors;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC60C", Offset = "0x8DC60C")]
	public bool HibernateChildren;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC644", Offset = "0x8DC644")]
	public bool HibernateBehaviors;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC67C", Offset = "0x8DC67C")]
	public bool HibernateColliders;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC6B4", Offset = "0x8DC6B4")]
	public bool HibernateRigidBodies;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC6EC", Offset = "0x8DC6EC")]
	public bool HibernateRenderers;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC724", Offset = "0x8DC724")]
	public GameObject HibernateTarget;

	[Token(Token = "0x1400002F")]
	public event HibernateCallback Awoke
	{
		[Token(Token = "0x6001017")]
		[Address(RVA = "0xD74A54", Offset = "0xD74A54", VA = "0xD74A54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA784", Offset = "0x8EA784")]
		add
		{
		}
		[Token(Token = "0x6001018")]
		[Address(RVA = "0xD74B40", Offset = "0xD74B40", VA = "0xD74B40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA794", Offset = "0x8EA794")]
		remove
		{
		}
	}

	[Token(Token = "0x14000030")]
	public event HibernateCallback Hibernated
	{
		[Token(Token = "0x6001019")]
		[Address(RVA = "0xD74C2C", Offset = "0xD74C2C", VA = "0xD74C2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA7A4", Offset = "0x8EA7A4")]
		add
		{
		}
		[Token(Token = "0x600101A")]
		[Address(RVA = "0xD74D18", Offset = "0xD74D18", VA = "0xD74D18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA7B4", Offset = "0x8EA7B4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000031")]
	public event HibernateCallback HibernateUpdate
	{
		[Token(Token = "0x600101B")]
		[Address(RVA = "0xD74E04", Offset = "0xD74E04", VA = "0xD74E04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA7C4", Offset = "0x8EA7C4")]
		add
		{
		}
		[Token(Token = "0x600101C")]
		[Address(RVA = "0xD74EF0", Offset = "0xD74EF0", VA = "0xD74EF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA7D4", Offset = "0x8EA7D4")]
		remove
		{
		}
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0xD74FDC", Offset = "0xD74FDC", VA = "0xD74FDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0xD751A4", Offset = "0xD751A4", VA = "0xD751A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0xD75348", Offset = "0xD75348", VA = "0xD75348")]
	private void _ChunkChanged(SECTR_Chunk source, SECTR_Chunk.LoadState loadState)
	{
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0xD753EC", Offset = "0xD753EC", VA = "0xD753EC")]
	private void _MembershipChanged(List<SECTR_Sector> left, List<SECTR_Sector> joined)
	{
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0xD75370", Offset = "0xD75370", VA = "0xD75370")]
	private void _HibernationChanged()
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0xD757D4", Offset = "0xD757D4", VA = "0xD757D4")]
	private void _WakeUp()
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0xD7578C", Offset = "0xD7578C", VA = "0xD7578C")]
	private void _Hibernate()
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0xD75C18", Offset = "0xD75C18", VA = "0xD75C18")]
	private void _UpdateComponents()
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0xD76120", Offset = "0xD76120", VA = "0xD76120")]
	public SECTR_Hibernator()
	{
	}
}
[Token(Token = "0x200021E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9A20", Offset = "0x8C9A20")]
public class SECTR_LightmapRef : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005A4")]
	public class RefData
	{
		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D FarLightmap;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D NearLightmap;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x6002550")]
		[Address(RVA = "0xD79648", Offset = "0xD79648", VA = "0xD79648")]
		public RefData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005A5")]
	public class RenderData
	{
		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer renderer;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int rendererLightmapIndex;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector4 rendererLightmapScaleOffset;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Terrain terrain;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int terrainLightmapIndex;

		[Token(Token = "0x6002551")]
		[Address(RVA = "0xD79658", Offset = "0xD79658", VA = "0xD79658")]
		public RenderData()
		{
		}
	}

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private List<RefData> lightmapRefs;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private List<RenderData> lightmapRenderRefs;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int[] globalLightmapRefCount;

	[Token(Token = "0x1700013A")]
	public List<RefData> LightmapRefs
	{
		[Token(Token = "0x6001026")]
		[Address(RVA = "0xD791C8", Offset = "0xD791C8", VA = "0xD791C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013B")]
	public List<RenderData> LightmapRenderers
	{
		[Token(Token = "0x6001027")]
		[Address(RVA = "0xD791D0", Offset = "0xD791D0", VA = "0xD791D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0xD791D8", Offset = "0xD791D8", VA = "0xD791D8")]
	public static void InitRefCounts()
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0xD793C4", Offset = "0xD793C4", VA = "0xD793C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0xD795AC", Offset = "0xD795AC", VA = "0xD795AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0xD795B0", Offset = "0xD795B0", VA = "0xD795B0")]
	public SECTR_LightmapRef()
	{
	}
}
[Token(Token = "0x200021F")]
public abstract class SECTR_Loader : MonoBehaviour
{
	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool locked;

	[Token(Token = "0x1700013C")]
	public abstract bool Loaded
	{
		[Token(Token = "0x600102C")]
		get;
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0xD796DC", Offset = "0xD796DC", VA = "0xD796DC")]
	protected void LockSelf(bool lockSelf)
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0xD74A4C", Offset = "0xD74A4C", VA = "0xD74A4C")]
	protected SECTR_Loader()
	{
	}
}
[Token(Token = "0x2000220")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9A58", Offset = "0x8C9A58")]
public class SECTR_LoadingDoor : SECTR_Door
{
	[Token(Token = "0x20005A6")]
	private enum FadeMode
	{
		[Token(Token = "0x4002136")]
		None,
		[Token(Token = "0x4002137")]
		FadeIn,
		[Token(Token = "0x4002138")]
		FadeOut,
		[Token(Token = "0x4002139")]
		Hold
	}

	[Token(Token = "0x20005A7")]
	private class LoadRequest
	{
		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SECTR_Chunk chunkToLoad;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SECTR_Chunk chunkToUnload;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SECTR_Chunk loadedChunk;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool enteredFront;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool enteredBack;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public FadeMode fadeMode;

		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float fadeAmount;

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float holdStart;

		[Token(Token = "0x6002552")]
		[Address(RVA = "0xD79F08", Offset = "0xD79F08", VA = "0xD79F08")]
		public LoadRequest()
		{
		}
	}

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Texture2D fadeTexture;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Dictionary<Collider, LoadRequest> loadRequests;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC7FC", Offset = "0x8DC7FC")]
	public LayerMask LoadLayers;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC834", Offset = "0x8DC834")]
	public bool FadeBeforeLoad;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC86C", Offset = "0x8DC86C")]
	public float FadeTime;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC8B8", Offset = "0x8DC8B8")]
	public float HoldTime;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC904", Offset = "0x8DC904")]
	public Color FadeColor;

	[Token(Token = "0x600102F")]
	[Address(RVA = "0xD79880", Offset = "0xD79880", VA = "0xD79880", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0xD7996C", Offset = "0xD7996C", VA = "0xD7996C", Slot = "5")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0xD79F10", Offset = "0xD79F10", VA = "0xD79F10", Slot = "6")]
	protected override void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0xD7A29C", Offset = "0xD7A29C", VA = "0xD7A29C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0xD7A638", Offset = "0xD7A638", VA = "0xD7A638", Slot = "7")]
	protected override bool CanOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0xD7A7F0", Offset = "0xD7A7F0", VA = "0xD7A7F0")]
	private void OnClose()
	{
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0xD7A700", Offset = "0xD7A700", VA = "0xD7A700")]
	private bool _IsSectorLoaded(SECTR_Sector sector)
	{
		return default(bool);
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0xD79D74", Offset = "0xD79D74", VA = "0xD79D74")]
	private SECTR_Chunk _GetOppositeChunk(Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0xD7A96C", Offset = "0xD7A96C", VA = "0xD7A96C")]
	public SECTR_LoadingDoor()
	{
	}
}
[Token(Token = "0x2000221")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C9A90", Offset = "0x8C9A90")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9A90", Offset = "0x8C9A90")]
public class SECTR_NeighborLoader : SECTR_Loader
{
	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SECTR_Sector> currentSectors;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<SECTR_Graph.Node> neighbors;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC950", Offset = "0x8DC950")]
	public int MaxDepth;

	[Token(Token = "0x1700013D")]
	public override bool Loaded
	{
		[Token(Token = "0x6001038")]
		[Address(RVA = "0xD7F0AC", Offset = "0xD7F0AC", VA = "0xD7F0AC", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0xD7F1F4", Offset = "0xD7F1F4", VA = "0xD7F1F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0xD7F298", Offset = "0xD7F298", VA = "0xD7F298")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0xD7F83C", Offset = "0xD7F83C", VA = "0xD7F83C")]
	private void Start()
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0xD7F844", Offset = "0xD7F844", VA = "0xD7F844")]
	private void Update()
	{
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0xD7F3A8", Offset = "0xD7F3A8", VA = "0xD7F3A8")]
	private void _MembershipChanged(List<SECTR_Sector> left, List<SECTR_Sector> joined)
	{
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0xD7F890", Offset = "0xD7F890", VA = "0xD7F890")]
	public SECTR_NeighborLoader()
	{
	}
}
[Token(Token = "0x2000222")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9B18", Offset = "0x8C9B18")]
public class SECTR_RegionLoader : SECTR_Loader
{
	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<SECTR_Sector> sectors;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SECTR_Sector> loadSectors;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<SECTR_Sector> unloadSectors;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool updated;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC988", Offset = "0x8DC988")]
	public Vector3 LoadSize;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DC9C0", Offset = "0x8DC9C0")]
	public float UnloadBuffer;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCA00", Offset = "0x8DCA00")]
	public LayerMask LayersToLoad;

	[Token(Token = "0x1700013E")]
	public override bool Loaded
	{
		[Token(Token = "0x600103F")]
		[Address(RVA = "0xD824EC", Offset = "0xD824EC", VA = "0xD824EC", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0xD82660", Offset = "0xD82660", VA = "0xD82660")]
	private void Start()
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0xD82668", Offset = "0xD82668", VA = "0xD82668")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0xD827DC", Offset = "0xD827DC", VA = "0xD827DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0xD82CFC", Offset = "0xD82CFC", VA = "0xD82CFC")]
	public SECTR_RegionLoader()
	{
	}
}
[Token(Token = "0x2000223")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C9B50", Offset = "0x8C9B50")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9B50", Offset = "0x8C9B50")]
public class SECTR_StartLoader : SECTR_Loader
{
	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Texture2D fadeTexture;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float fadeAmount;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCA38", Offset = "0x8DCA38")]
	public bool FadeIn;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCA70", Offset = "0x8DCA70")]
	public float FadeTime;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCABC", Offset = "0x8DCABC")]
	public Color FadeColor;

	[NonSerialized]
	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool Paused;

	[Token(Token = "0x1700013F")]
	public override bool Loaded
	{
		[Token(Token = "0x6001044")]
		[Address(RVA = "0xD8579C", Offset = "0xD8579C", VA = "0xD8579C", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0xD85930", Offset = "0xD85930", VA = "0xD85930")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0xD85A2C", Offset = "0xD85A2C", VA = "0xD85A2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0xD85A38", Offset = "0xD85A38", VA = "0xD85A38")]
	private void Start()
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0xD85BAC", Offset = "0xD85BAC", VA = "0xD85BAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0xD85C50", Offset = "0xD85C50", VA = "0xD85C50")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0xD85DF0", Offset = "0xD85DF0", VA = "0xD85DF0")]
	public SECTR_StartLoader()
	{
	}
}
[Token(Token = "0x2000224")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9BD8", Offset = "0x8C9BD8")]
public class SECTR_TriggerLoader : SECTR_Loader
{
	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected int loadedCount;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool chunksReferenced;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCB08", Offset = "0x8DCB08")]
	public List<SECTR_Sector> Sectors;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCB40", Offset = "0x8DCB40")]
	public bool UnloadOnExit;

	[Token(Token = "0x17000140")]
	public override bool Loaded
	{
		[Token(Token = "0x600104B")]
		[Address(RVA = "0xD86374", Offset = "0xD86374", VA = "0xD86374", Slot = "4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0xD864BC", Offset = "0xD864BC", VA = "0xD864BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0xD8664C", Offset = "0xD8664C", VA = "0xD8664C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0xD867F4", Offset = "0xD867F4", VA = "0xD867F4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0xD86684", Offset = "0xD86684", VA = "0xD86684")]
	private void _RefChunks()
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0xD864E0", Offset = "0xD864E0", VA = "0xD864E0")]
	private void _UnrefChunks()
	{
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0xD86818", Offset = "0xD86818", VA = "0xD86818")]
	public SECTR_TriggerLoader()
	{
	}
}
[Token(Token = "0x2000225")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C9C10", Offset = "0x8C9C10")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9C10", Offset = "0x8C9C10")]
public class SECTR_Culler : MonoBehaviour
{
	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCB78", Offset = "0x8DCB78")]
	public bool CullEachChild;

	[Token(Token = "0x6001052")]
	[Address(RVA = "0xBB135C", Offset = "0xBB135C", VA = "0xBB135C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0xBB13D4", Offset = "0xBB13D4", VA = "0xBB13D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0xBB13D8", Offset = "0xBB13D8", VA = "0xBB13D8")]
	public SECTR_Culler()
	{
	}
}
[Token(Token = "0x2000226")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C9CA8", Offset = "0x8C9CA8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9CA8", Offset = "0x8C9CA8")]
public class SECTR_CullingCamera : MonoBehaviour
{
	[Token(Token = "0x20005A8")]
	private struct VisibilityNode
	{
		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SECTR_Sector sector;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public SECTR_Portal portal;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Plane> frustumPlanes;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool forwardTraversal;

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x9A032C", Offset = "0x9A032C", VA = "0x9A032C")]
		public VisibilityNode(SECTR_CullingCamera cullingCamera, SECTR_Sector sector, SECTR_Portal portal, Plane[] frustumPlanes, bool forwardTraversal)
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x9A0338", Offset = "0x9A0338", VA = "0x9A0338")]
		public VisibilityNode(SECTR_CullingCamera cullingCamera, SECTR_Sector sector, SECTR_Portal portal, List<Plane> frustumPlanes, bool forwardTraversal)
		{
		}
	}

	[Token(Token = "0x20005A9")]
	private struct ClipVertex
	{
		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4 vertex;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float side;

		[Token(Token = "0x6002555")]
		[Address(RVA = "0x9A0250", Offset = "0x9A0250", VA = "0x9A0250")]
		public ClipVertex(Vector4 vertex, float side)
		{
		}
	}

	[Token(Token = "0x20005AA")]
	private struct ThreadCullData
	{
		[Token(Token = "0x20006DA")]
		public enum CullingModes
		{
			[Token(Token = "0x4002557")]
			None,
			[Token(Token = "0x4002558")]
			Graph,
			[Token(Token = "0x4002559")]
			Shadow
		}

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SECTR_Sector sector;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 cameraPos;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Plane> cullingPlanes;

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<List<Plane>> occluderFrustums;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int baseMask;

		[Token(Token = "0x400214D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float shadowDistance;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool cullingSimpleCulling;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<SECTR_Member.Child> sectorShadowLights;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CullingModes cullingMode;

		[Token(Token = "0x6002556")]
		[Address(RVA = "0x9A02AC", Offset = "0x9A02AC", VA = "0x9A02AC")]
		public ThreadCullData(SECTR_Sector sector, SECTR_CullingCamera cullingCamera, Vector3 cameraPos, List<Plane> cullingPlanes, List<List<Plane>> occluderFrustums, int baseMask, float shadowDistance, bool cullingSimpleCulling)
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0x9A02B8", Offset = "0x9A02B8", VA = "0x9A02B8")]
		public ThreadCullData(SECTR_Sector sector, Vector3 cameraPos, List<SECTR_Member.Child> sectorShadowLights)
		{
		}
	}

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera myCamera;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SECTR_Member cullingMember;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, SECTR_Member.Child> hiddenRenderers;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, SECTR_Member.Child> hiddenLights;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, SECTR_Member.Child> hiddenTerrains;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int renderersCulled;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int lightsCulled;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int terrainsCulled;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool didCull;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool runOnce;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<SECTR_Sector> initialSectors;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Stack<VisibilityNode> nodeStack;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<ClipVertex> portalVertices;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Plane> newFrustum;

	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Plane> cullingPlanes;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<List<Plane>> occluderFrustums;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Dictionary<SECTR_Occluder, SECTR_Occluder> activeOccluders;

	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<ClipVertex> occluderVerts;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Dictionary<SECTR_Member.Child, int> shadowLights;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<SECTR_Sector> shadowSectors;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<SECTR_Sector, List<SECTR_Member.Child>> shadowSectorTable;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Dictionary<int, SECTR_Member.Child> visibleRenderers;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<int, SECTR_Member.Child> visibleLights;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Dictionary<int, SECTR_Member.Child> visibleTerrains;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Stack<List<Plane>> frustumPool;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Stack<List<SECTR_Member.Child>> shadowLightPool;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Stack<Dictionary<int, SECTR_Member.Child>> threadVisibleListPool;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Stack<Dictionary<SECTR_Member.Child, int>> threadShadowLightPool;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Stack<List<Plane>> threadFrustumPool;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Stack<List<List<Plane>>> threadOccluderPool;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<Thread> workerThreads;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Queue<ThreadCullData> cullingWorkQueue;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int remainingThreadWork;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_CullingCamera> allCullingCameras;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCBB0", Offset = "0x8DCBB0")]
	public bool MultiCameraCulling;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCBE8", Offset = "0x8DCBE8")]
	public bool SimpleCulling;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCC20", Offset = "0x8DCC20")]
	public float GizmoDistance;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCC64", Offset = "0x8DCC64")]
	public Material GizmoMaterial;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCC9C", Offset = "0x8DCC9C")]
	public bool CullInEditor;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCCD4", Offset = "0x8DCCD4")]
	public bool CullShadows;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCD10", Offset = "0x8DCD10")]
	public Camera cullingProxy;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCD4C", Offset = "0x8DCD4C")]
	public int NumWorkerThreads;

	[Token(Token = "0x17000141")]
	public static List<SECTR_CullingCamera> All
	{
		[Token(Token = "0x6001055")]
		[Address(RVA = "0xBB13E0", Offset = "0xBB13E0", VA = "0xBB13E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000142")]
	public int RenderersCulled
	{
		[Token(Token = "0x6001056")]
		[Address(RVA = "0xBB1448", Offset = "0xBB1448", VA = "0xBB1448")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000143")]
	public int LightsCulled
	{
		[Token(Token = "0x6001057")]
		[Address(RVA = "0xBB1450", Offset = "0xBB1450", VA = "0xBB1450")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000144")]
	public int TerrainsCulled
	{
		[Token(Token = "0x6001058")]
		[Address(RVA = "0xBB1458", Offset = "0xBB1458", VA = "0xBB1458")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0xBB1460", Offset = "0xBB1460", VA = "0xBB1460")]
	public void ResetStats()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0xBB1470", Offset = "0xBB1470", VA = "0xBB1470")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0xBB1684", Offset = "0xBB1684", VA = "0xBB1684")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0xBB1BA4", Offset = "0xBB1BA4", VA = "0xBB1BA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0xBB1BA8", Offset = "0xBB1BA8", VA = "0xBB1BA8")]
	private void OnPreCull()
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0xBB789C", Offset = "0xBB789C", VA = "0xBB789C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0xBB78AC", Offset = "0xBB78AC", VA = "0xBB78AC")]
	private void _CullingWorker()
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0xBB5F14", Offset = "0xBB5F14", VA = "0xBB5F14")]
	private void _FrustumCullSectorThread(ThreadCullData cullData)
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0xBB712C", Offset = "0xBB712C", VA = "0xBB712C")]
	private void _ShadowCullSectorThread(ThreadCullData cullData)
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0xBB5D00", Offset = "0xBB5D00", VA = "0xBB5D00")]
	private static void _FrustumCullSector(SECTR_Sector sector, Vector3 cameraPos, List<Plane> cullingPlanes, List<List<Plane>> occluderFrustums, int baseMask, float shadowDistance, bool forceGroupCull, ref Dictionary<int, SECTR_Member.Child> visibleRenderers, ref Dictionary<int, SECTR_Member.Child> visibleLights, ref Dictionary<int, SECTR_Member.Child> visibleTerrains, ref Dictionary<SECTR_Member.Child, int> shadowLights)
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0xBB7A90", Offset = "0xBB7A90", VA = "0xBB7A90")]
	private static void _FrustumCull(SECTR_Member member, Vector3 cameraPos, List<Plane> frustumPlanes, List<List<Plane>> occluders, int baseMask, float shadowDistance, bool forceGroupCull, ref Dictionary<int, SECTR_Member.Child> visibleRenderers, ref Dictionary<int, SECTR_Member.Child> visibleLights, ref Dictionary<int, SECTR_Member.Child> visibleTerrains, ref Dictionary<SECTR_Member.Child, int> shadowLights)
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0xBB6F90", Offset = "0xBB6F90", VA = "0xBB6F90")]
	private static void _ShadowCullSector(SECTR_Sector sector, List<SECTR_Member.Child> sectorShadowLights, ref Dictionary<int, SECTR_Member.Child> visibleRenderers, ref Dictionary<int, SECTR_Member.Child> visibleTerrains)
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0xBB838C", Offset = "0xBB838C", VA = "0xBB838C")]
	private static void _ShadowCull(SECTR_Member member, List<SECTR_Member.Child> shadowLights, ref Dictionary<int, SECTR_Member.Child> visibleRenderers, ref Dictionary<int, SECTR_Member.Child> visibleTerrains)
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0xBB8250", Offset = "0xBB8250", VA = "0xBB8250")]
	private static bool _IsVisible(Bounds childBounds, List<Plane> frustumPlanes, int parentMask, List<List<Plane>> occluders)
	{
		return default(bool);
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0xBB4F68", Offset = "0xBB4F68", VA = "0xBB4F68")]
	private void _HideAllMembers()
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0xBB5400", Offset = "0xBB5400", VA = "0xBB5400")]
	private void _ApplyCulling(bool visible)
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0xBB17B4", Offset = "0xBB17B4", VA = "0xBB17B4")]
	private void _UndoCulling()
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0xBB59B0", Offset = "0xBB59B0", VA = "0xBB59B0")]
	private void _BuildFrustumFromHull(Camera cullingCamera, bool forwardTraversal, List<ClipVertex> portalVertices, ref List<Plane> newFrustum)
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0xBB8A58", Offset = "0xBB8A58", VA = "0xBB8A58")]
	public SECTR_CullingCamera()
	{
	}
}
[Token(Token = "0x2000227")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C9D40", Offset = "0x8C9D40")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9D40", Offset = "0x8C9D40")]
public class SECTR_LOD : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005AB")]
	public class LODEntry
	{
		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject gameObject;

		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer lightmapSource;

		[Token(Token = "0x6002558")]
		[Address(RVA = "0xD78E30", Offset = "0xD78E30", VA = "0xD78E30")]
		public LODEntry()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005AC")]
	public class LODSet
	{
		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<LODEntry> lodEntries;

		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float threshold;

		[Token(Token = "0x170002D2")]
		public List<LODEntry> LODEntries
		{
			[Token(Token = "0x6002559")]
			[Address(RVA = "0xD78C74", Offset = "0xD78C74", VA = "0xD78C74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D3")]
		public float Threshold
		{
			[Token(Token = "0x600255A")]
			[Address(RVA = "0xD77F44", Offset = "0xD77F44", VA = "0xD77F44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600255B")]
			[Address(RVA = "0xD78E38", Offset = "0xD78E38", VA = "0xD78E38")]
			set
			{
			}
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0xD78E40", Offset = "0xD78E40", VA = "0xD78E40")]
		public LODEntry Add(GameObject gameObject, Renderer lightmapSource)
		{
			return null;
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0xD79028", Offset = "0xD79028", VA = "0xD79028")]
		public void Remove(GameObject gameObject)
		{
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0xD78F18", Offset = "0xD78F18", VA = "0xD78F18")]
		public LODEntry GetEntry(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0xD79154", Offset = "0xD79154", VA = "0xD79154")]
		public LODSet()
		{
		}
	}

	[Token(Token = "0x20005AD")]
	[Flags]
	public enum SiblinglFlags
	{
		[Token(Token = "0x4002156")]
		Behaviors = 1,
		[Token(Token = "0x4002157")]
		Renderers = 2,
		[Token(Token = "0x4002158")]
		Lights = 4,
		[Token(Token = "0x4002159")]
		Colliders = 8,
		[Token(Token = "0x400215A")]
		RigidBodies = 0x10
	}

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Vector3 boundsOffset;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	[HideInInspector]
	private float boundsRadius;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private bool boundsUpdated;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int activeLOD;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool siblingsDisabled;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> toHide;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<LODEntry> toShow;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_LOD> allLODs;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<LODSet> LODs;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCE34", Offset = "0x8DCE34")]
	public SiblinglFlags CullSiblings;

	[Token(Token = "0x17000145")]
	public static List<SECTR_LOD> All
	{
		[Token(Token = "0x600106D")]
		[Address(RVA = "0xD77888", Offset = "0xD77888", VA = "0xD77888")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0xD778F0", Offset = "0xD778F0", VA = "0xD778F0")]
	public void SelectLOD(Camera renderCamera)
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0xD78914", Offset = "0xD78914", VA = "0xD78914")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0xD78AD4", Offset = "0xD78AD4", VA = "0xD78AD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0xD78B68", Offset = "0xD78B68", VA = "0xD78B68")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0xD77F4C", Offset = "0xD77F4C", VA = "0xD77F4C")]
	private void _ActivateLOD(int lodIndex)
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0xD77BAC", Offset = "0xD77BAC", VA = "0xD77BAC")]
	private void _CalculateBounds()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0xD78CF0", Offset = "0xD78CF0", VA = "0xD78CF0")]
	public SECTR_LOD()
	{
	}
}
[Token(Token = "0x2000228")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C9DD8", Offset = "0x8C9DD8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9DD8", Offset = "0x8C9DD8")]
public class SECTR_Occluder : SECTR_Hull
{
	[Token(Token = "0x20005AE")]
	public enum OrientationAxis
	{
		[Token(Token = "0x400215C")]
		None,
		[Token(Token = "0x400215D")]
		XYZ,
		[Token(Token = "0x400215E")]
		XZ,
		[Token(Token = "0x400215F")]
		XY,
		[Token(Token = "0x4002160")]
		YZ
	}

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SECTR_Member cachedMember;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<SECTR_Sector> currentSectors;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<SECTR_Occluder> allOccluders;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<SECTR_Sector, List<SECTR_Occluder>> occluderTable;

	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCEB4", Offset = "0x8DCEB4")]
	public OrientationAxis AutoOrient;

	[Token(Token = "0x17000146")]
	public static List<SECTR_Occluder> All
	{
		[Token(Token = "0x6001076")]
		[Address(RVA = "0xD7F938", Offset = "0xD7F938", VA = "0xD7F938")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000147")]
	public SECTR_Member Member
	{
		[Token(Token = "0x6001078")]
		[Address(RVA = "0xD7FA44", Offset = "0xD7FA44", VA = "0xD7FA44")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000148")]
	public Vector3 MeshNormal
	{
		[Token(Token = "0x6001079")]
		[Address(RVA = "0xD7FA4C", Offset = "0xD7FA4C", VA = "0xD7FA4C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0xD7F9A0", Offset = "0xD7F9A0", VA = "0xD7F9A0")]
	public static List<SECTR_Occluder> GetOccludersInSector(SECTR_Sector sector)
	{
		return null;
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0xD7FA74", Offset = "0xD7FA74", VA = "0xD7FA74")]
	public Matrix4x4 GetCullingMatrix(Vector3 cameraPos)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0xD7FCD0", Offset = "0xD7FCD0", VA = "0xD7FCD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0xD7FDC4", Offset = "0xD7FDC4", VA = "0xD7FDC4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0xD7FEA8", Offset = "0xD7FEA8", VA = "0xD7FEA8")]
	private void _MembershipChanged(List<SECTR_Sector> left, List<SECTR_Sector> joined)
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0xD80224", Offset = "0xD80224", VA = "0xD80224")]
	public SECTR_Occluder()
	{
	}
}
[Token(Token = "0x2000229")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9E60", Offset = "0x8C9E60")]
public class SECTR_AudioDemoUI : SECTR_DemoUI
{
	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SECTR_AudioCueInstance chatterInstance;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCEEC", Offset = "0x8DCEEC")]
	public SECTR_AudioCue SoftCue;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCF2C", Offset = "0x8DCF2C")]
	public SECTR_AudioCue ChatterCue;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCF6C", Offset = "0x8DCF6C")]
	public SECTR_AudioCue GunshotCue;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCFAC", Offset = "0x8DCFAC")]
	public SECTR_AudioCue ExplosionCue;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DCFEC", Offset = "0x8DCFEC")]
	public GameObject AudioPrefab;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DD024", Offset = "0x8DD024")]
	public float PrefabThrowSpeed;

	[Token(Token = "0x6001080")]
	[Address(RVA = "0xB9FCB8", Offset = "0xB9FCB8", VA = "0xB9FCB8", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0xB9FFC8", Offset = "0xB9FFC8", VA = "0xB9FFC8")]
	protected void ShowHUD(bool active)
	{
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0xBA00A8", Offset = "0xBA00A8", VA = "0xBA00A8")]
	protected void PlaySoft(bool active)
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0xBA0160", Offset = "0xBA0160", VA = "0xBA0160")]
	protected void PlayChatter(bool active)
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0xBA0288", Offset = "0xBA0288", VA = "0xBA0288")]
	protected void PlayGunshot(bool active)
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0xBA0340", Offset = "0xBA0340", VA = "0xBA0340")]
	protected void PlayExplosion(bool active)
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0xBA03F8", Offset = "0xBA03F8", VA = "0xBA03F8")]
	protected void ThrowPrefab(bool active)
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0xBA06A4", Offset = "0xBA06A4", VA = "0xBA06A4")]
	public SECTR_AudioDemoUI()
	{
	}
}
[Token(Token = "0x200022A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9E98", Offset = "0x8C9E98")]
public class SECTR_CompleteDemoUI : SECTR_DemoUI
{
	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string originalDemoMessage;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Multiline]
	public string Unity4PerfMessage;

	[Token(Token = "0x6001088")]
	[Address(RVA = "0xBAFE78", Offset = "0xBAFE78", VA = "0xBAFE78")]
	private void Start()
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0xBB002C", Offset = "0xBB002C", VA = "0xBB002C", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0xBB00E0", Offset = "0xBB00E0", VA = "0xBB00E0", Slot = "6")]
	protected override void OnGUI()
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0xBB01EC", Offset = "0xBB01EC", VA = "0xBB01EC")]
	public SECTR_CompleteDemoUI()
	{
	}
}
[Token(Token = "0x200022B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C9ED0", Offset = "0x8C9ED0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9ED0", Offset = "0x8C9ED0")]
public class SECTR_CharacterMotor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005AF")]
	public class CharacterMotorMovement
	{
		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float maxForwardSpeed;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxSidewaysSpeed;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxBackwardsSpeed;

		[Token(Token = "0x4002164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve slopeSpeedMultiplier;

		[Token(Token = "0x4002165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxGroundAcceleration;

		[Token(Token = "0x4002166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxAirAcceleration;

		[Token(Token = "0x4002167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float gravity;

		[Token(Token = "0x4002168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float maxFallSpeed;

		[Token(Token = "0x4002169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float footstepDistance;

		[Token(Token = "0x400216A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float pushPower;

		[NonSerialized]
		[Token(Token = "0x400216B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CollisionFlags collisionFlags;

		[NonSerialized]
		[Token(Token = "0x400216C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 velocity;

		[NonSerialized]
		[Token(Token = "0x400216D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 frameVelocity;

		[NonSerialized]
		[Token(Token = "0x400216E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 hitPoint;

		[NonSerialized]
		[Token(Token = "0x400216F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 lastHitPoint;

		[NonSerialized]
		[Token(Token = "0x4002170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public PhysicMaterial hitMaterial;

		[Token(Token = "0x6002560")]
		[Address(RVA = "0xBACD58", Offset = "0xBACD58", VA = "0xBACD58")]
		public CharacterMotorMovement()
		{
		}
	}

	[Token(Token = "0x20005B0")]
	public enum MovementTransferOnJump
	{
		[Token(Token = "0x4002172")]
		None,
		[Token(Token = "0x4002173")]
		InitTransfer,
		[Token(Token = "0x4002174")]
		PermaTransfer,
		[Token(Token = "0x4002175")]
		PermaLocked
	}

	[Serializable]
	[Token(Token = "0x20005B1")]
	public class CharacterMotorJumping
	{
		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float baseHeight;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float extraHeight;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float perpAmount;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float steepPerpAmount;

		[NonSerialized]
		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool jumping;

		[NonSerialized]
		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool holdingJumpButton;

		[NonSerialized]
		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float lastStartTime;

		[NonSerialized]
		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float lastButtonDownTime;

		[NonSerialized]
		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 jumpDir;

		[Token(Token = "0x6002561")]
		[Address(RVA = "0xBACFB8", Offset = "0xBACFB8", VA = "0xBACFB8")]
		public CharacterMotorJumping()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005B2")]
	public class CharacterMotorMovingPlatform
	{
		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MovementTransferOnJump movementTransfer;

		[NonSerialized]
		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform hitPlatform;

		[NonSerialized]
		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform activePlatform;

		[NonSerialized]
		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 activeLocalPoint;

		[NonSerialized]
		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 activeGlobalPoint;

		[NonSerialized]
		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Quaternion activeLocalRotation;

		[NonSerialized]
		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Quaternion activeGlobalRotation;

		[NonSerialized]
		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Matrix4x4 lastMatrix;

		[NonSerialized]
		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Vector3 platformVelocity;

		[NonSerialized]
		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public bool newPlatform;

		[Token(Token = "0x6002562")]
		[Address(RVA = "0xBAD058", Offset = "0xBAD058", VA = "0xBAD058")]
		public CharacterMotorMovingPlatform()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005B3")]
	public class CharacterMotorSliding
	{
		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enabled;

		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float slidingSpeed;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float sidewaysControl;

		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speedControl;

		[Token(Token = "0x6002563")]
		[Address(RVA = "0xBAD070", Offset = "0xBAD070", VA = "0xBAD070")]
		public CharacterMotorSliding()
		{
		}
	}

	[Token(Token = "0x20005B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCFAC", Offset = "0x8CCFAC")]
	private sealed class <SubtractNewPlatformVelocity>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SECTR_CharacterMotor <>4__this;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform <platform>5__2;

		[Token(Token = "0x170002D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002567")]
			[Address(RVA = "0xBAD300", Offset = "0xBAD300", VA = "0xBAD300", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002569")]
			[Address(RVA = "0xBAD370", Offset = "0xBAD370", VA = "0xBAD370", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0xBACA30", Offset = "0xBACA30", VA = "0xBACA30")]
		[DebuggerHidden]
		public <SubtractNewPlatformVelocity>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0xBAD098", Offset = "0xBAD098", VA = "0xBAD098", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0xBAD09C", Offset = "0xBAD09C", VA = "0xBAD09C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0xBAD308", Offset = "0xBAD308", VA = "0xBAD308", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canControl;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 lastGroundNormal;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform cachedTransform;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CharacterController cachedController;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastFootstepPosition;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PhysicMaterial defaultHitMaterial;

	[NonSerialized]
	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 inputMoveDirection;

	[NonSerialized]
	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool inputJump;

	[NonSerialized]
	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool grounded;

	[NonSerialized]
	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 groundNormal;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DD06C", Offset = "0x8DD06C")]
	public CharacterMotorMovement movement;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DD0A4", Offset = "0x8DD0A4")]
	public CharacterMotorJumping jumping;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DD0DC", Offset = "0x8DD0DC")]
	public CharacterMotorMovingPlatform movingPlatform;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CharacterMotorSliding sliding;

	[Token(Token = "0x600108C")]
	[Address(RVA = "0xBA9E34", Offset = "0xBA9E34", VA = "0xBA9E34")]
	private void Awake()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0xBA9EE8", Offset = "0xBA9EE8", VA = "0xBA9EE8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0xBAB268", Offset = "0xBAB268", VA = "0xBAB268")]
	private Vector3 ApplyInputVelocityChange(Vector3 velocity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0xBAB768", Offset = "0xBAB768", VA = "0xBAB768")]
	private Vector3 ApplyGravityAndJumping(Vector3 velocity)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0xBAC3F4", Offset = "0xBAC3F4", VA = "0xBAC3F4")]
	private void OnControllerColliderHit(ControllerColliderHit hit)
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0xBABF40", Offset = "0xBABF40", VA = "0xBABF40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EA7E4", Offset = "0x8EA7E4")]
	private IEnumerator SubtractNewPlatformVelocity()
	{
		return null;
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0xBABE58", Offset = "0xBABE58", VA = "0xBABE58")]
	private bool MoveWithPlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0xBAC058", Offset = "0xBAC058", VA = "0xBAC058")]
	private Vector3 GetDesiredHorizontalVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0xBAC1F4", Offset = "0xBAC1F4", VA = "0xBAC1F4")]
	private Vector3 AdjustGroundVelocityToNormal(Vector3 hVelocity, Vector3 groundNormal)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0xBABF24", Offset = "0xBABF24", VA = "0xBABF24")]
	private bool IsGroundedTest()
	{
		return default(bool);
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0xBAC30C", Offset = "0xBAC30C", VA = "0xBAC30C")]
	private float GetMaxAcceleration(bool grounded)
	{
		return default(float);
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0xBAC34C", Offset = "0xBAC34C", VA = "0xBAC34C")]
	private float CalculateJumpVerticalSpeed(float targetJumpHeight)
	{
		return default(float);
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0xBABFB4", Offset = "0xBABFB4", VA = "0xBABFB4")]
	private bool TooSteep()
	{
		return default(bool);
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0xBACA5C", Offset = "0xBACA5C", VA = "0xBACA5C")]
	private float MaxSpeedInDirection(Vector3 desiredMovementDirection)
	{
		return default(float);
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0xBACBFC", Offset = "0xBACBFC", VA = "0xBACBFC")]
	public SECTR_CharacterMotor()
	{
	}
}
[Token(Token = "0x200022C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C9F58", Offset = "0x8C9F58")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C9F58", Offset = "0x8C9F58")]
public class SECTR_DemoUI : MonoBehaviour
{
	[Token(Token = "0x20005B5")]
	protected enum WatermarkLocation
	{
		[Token(Token = "0x4002194")]
		UpperLeft,
		[Token(Token = "0x4002195")]
		UpperCenter,
		[Token(Token = "0x4002196")]
		UpperRight
	}

	[Token(Token = "0x20005B6")]
	protected delegate void DemoButtonPressedDelegate(bool active);

	[Token(Token = "0x20005B7")]
	private class DemoButton
	{
		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyCode key;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string activeHint;

		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string inactiveHint;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool active;

		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool pressed;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public DemoButtonPressedDelegate demoButtonPressed;

		[Token(Token = "0x600256E")]
		[Address(RVA = "0xD6DC5C", Offset = "0xD6DC5C", VA = "0xD6DC5C")]
		public DemoButton(KeyCode key, string activeHint, string inactiveHint, DemoButtonPressedDelegate demoButtonPressed)
		{
		}
	}

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool passedIntro;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected SECTR_FPSController cachedController;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected GUIStyle demoButtonStyle;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected WatermarkLocation watermarkLocation;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<DemoButton> demoButtons;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DD114", Offset = "0x8DD114")]
	public Texture2D Watermark;

	[Token(Token = "0x4000FB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DD14C", Offset = "0x8DD14C")]
	public SECTR_GhostController PipController;

	[Token(Token = "0x4000FB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DD184", Offset = "0x8DD184")]
	[Multiline]
	public string DemoMessage;

	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DD1D0", Offset = "0x8DD1D0")]
	public bool CaptureMode;

	[Token(Token = "0x17000149")]
	public bool PipActive
	{
		[Token(Token = "0x600109B")]
		[Address(RVA = "0xD6C9A8", Offset = "0xD6C9A8", VA = "0xD6C9A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0xD6CA44", Offset = "0xD6CA44", VA = "0xD6CA44", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0xD6CCE4", Offset = "0xD6CCE4", VA = "0xD6CCE4", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0xD6CD9C", Offset = "0xD6CD9C", VA = "0xD6CD9C", Slot = "6")]
	protected virtual void OnGUI()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0xD6CC20", Offset = "0xD6CC20", VA = "0xD6CC20")]
	protected void AddButton(KeyCode key, string activeHint, string inactiveHint, DemoButtonPressedDelegate buttonPressedDelegate)
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0xD6DCC4", Offset = "0xD6DCC4", VA = "0xD6DCC4")]
	private void PressedPip(bool active)
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0xD6DD60", Offset = "0xD6DD60", VA = "0xD6DD60")]
	public SECTR_DemoUI()
	{
	}
}
[Token(Token = "0x200022D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C9FE0", Offset = "0x8C9FE0")]
[ExecuteInEditMode]
public class SECTR_FogDisable : MonoBehaviour
{
	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool previousFogState;

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0xD700D0", Offset = "0xD700D0", VA = "0xD700D0")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0xD70104", Offset = "0xD70104", VA = "0xD70104")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0xD70110", Offset = "0xD70110", VA = "0xD70110")]
	public SECTR_FogDisable()
	{
	}
}
[Token(Token = "0x200022E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CB054", Offset = "0x8CB054")]
public abstract class SECTR_FPController : MonoBehaviour
{
	[Token(Token = "0x20005B8")]
	protected class TrackedTouch
	{
		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2 startPos;

		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 currentPos;

		[Token(Token = "0x600256F")]
		[Address(RVA = "0xD6F9CC", Offset = "0xD6F9CC", VA = "0xD6F9CC")]
		public TrackedTouch()
		{
		}
	}

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector2 _mouseAbsolute;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector2 _smoothMouse;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 _clampInDegrees;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 _targetDirection;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool focused;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Dictionary<int, TrackedTouch> _touches;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DD208", Offset = "0x8DD208")]
	public bool LockCursor;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DD240", Offset = "0x8DD240")]
	public Vector2 Sensitivity;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DD278", Offset = "0x8DD278")]
	public Vector2 Smoothing;

	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DD2B0", Offset = "0x8DD2B0")]
	public float TouchScreenLookScale;

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0xD6E9E4", Offset = "0xD6E9E4", VA = "0xD6E9E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0xD6EABC", Offset = "0xD6EABC", VA = "0xD6EABC")]
	private void OnApplicationFocus(bool focused)
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0xD6EAC8", Offset = "0xD6EAC8", VA = "0xD6EAC8", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0xD6F6FC", Offset = "0xD6F6FC", VA = "0xD6F6FC")]
	protected Vector2 GetScreenJoystick(bool left)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0xD6F094", Offset = "0xD6F094", VA = "0xD6F094")]
	private void _UpdateTouches()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0xD6F9D4", Offset = "0xD6F9D4", VA = "0xD6F9D4")]
	protected SECTR_FPController()
	{
	}
}
[Token(Token = "0x200022F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CB0B8", Offset = "0x8CB0B8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB0B8", Offset = "0x8CB0B8")]
public class SECTR_FPSController : SECTR_FPController
{
	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private SECTR_CharacterMotor cachedMotor;

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0xD6FAD4", Offset = "0xD6FAD4", VA = "0xD6FAD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0xD6FB2C", Offset = "0xD6FB2C", VA = "0xD6FB2C", Slot = "4")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0xD6FEF8", Offset = "0xD6FEF8", VA = "0xD6FEF8")]
	private Vector3 ProjectOntoPlane(Vector3 v, Vector3 normal)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0xD6FFC0", Offset = "0xD6FFC0", VA = "0xD6FFC0")]
	private Vector3 ConstantSlerp(Vector3 from, Vector3 to, float angle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0xD700CC", Offset = "0xD700CC", VA = "0xD700CC")]
	public SECTR_FPSController()
	{
	}
}
[Token(Token = "0x2000230")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB140", Offset = "0x8CB140")]
public class SECTR_GhostController : SECTR_FPController
{
	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DD2E8", Offset = "0x8DD2E8")]
	public float FlySpeed;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DD320", Offset = "0x8DD320")]
	public float AccelerationRatio;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DD358", Offset = "0x8DD358")]
	public float SlowDownRatio;

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0xD714FC", Offset = "0xD714FC", VA = "0xD714FC", Slot = "4")]
	protected override void Update()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0xD71AB0", Offset = "0xD71AB0", VA = "0xD71AB0")]
	public SECTR_GhostController()
	{
	}
}
[Token(Token = "0x2000231")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB178", Offset = "0x8CB178")]
public class SECTR_Wanderer : MonoBehaviour
{
	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<SECTR_Graph.Node> path;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> waypoints;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentWaypointIndex;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SECTR_ToolTip", RVA = "0x8DD390", Offset = "0x8DD390")]
	public float MovementSpeed;

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0xD87754", Offset = "0xD87754", VA = "0xD87754")]
	private void Update()
	{
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0xD87F80", Offset = "0xD87F80", VA = "0xD87F80")]
	public SECTR_Wanderer()
	{
	}
}
[Token(Token = "0x2000232")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB1B0", Offset = "0x8CB1B0")]
public class SECTR_StreamDemoUI : SECTR_DemoUI
{
	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Multiline]
	public string NoExportMessage;

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0xD85ED4", Offset = "0xD85ED4", VA = "0xD85ED4", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0xD85F7C", Offset = "0xD85F7C", VA = "0xD85F7C", Slot = "6")]
	protected override void OnGUI()
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0xD86108", Offset = "0xD86108", VA = "0xD86108")]
	public SECTR_StreamDemoUI()
	{
	}
}
[Token(Token = "0x2000233")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB1E8", Offset = "0x8CB1E8")]
public class SECTR_VisDemoUI : SECTR_DemoUI
{
	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string originalDemoMessage;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Multiline]
	public string Unity4PerfMessage;

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0xD86E6C", Offset = "0xD86E6C", VA = "0xD86E6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0xD87020", Offset = "0xD87020", VA = "0xD87020", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0xD870C8", Offset = "0xD870C8", VA = "0xD870C8", Slot = "6")]
	protected override void OnGUI()
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0xD87660", Offset = "0xD87660", VA = "0xD87660")]
	protected void ToggleCulling(bool active)
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0xD87750", Offset = "0xD87750", VA = "0xD87750")]
	public SECTR_VisDemoUI()
	{
	}
}
[Token(Token = "0x2000234")]
public class SimpleVrTeleporter : MonoBehaviour
{
	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRTeleporter teleporter;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int hand;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool leftDown;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool rightDown;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform player;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool teleporting;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float threshold;

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0xEDF114", Offset = "0xEDF114", VA = "0xEDF114")]
	private void Start()
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0xEDF11C", Offset = "0xEDF11C", VA = "0xEDF11C")]
	private void Update()
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0xEDF270", Offset = "0xEDF270", VA = "0xEDF270")]
	private void Rotate(int i)
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0xEDF3A4", Offset = "0xEDF3A4", VA = "0xEDF3A4")]
	public SimpleVrTeleporter()
	{
	}
}
[Token(Token = "0x2000235")]
public class CrabCameraScript : MonoBehaviour
{
	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float turnSpeed;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject camera;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float cameraAngleX;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float cameraAngleY;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float cameraDistance;

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0xCE3E90", Offset = "0xCE3E90", VA = "0xCE3E90")]
	public void Start()
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0xCE3FB0", Offset = "0xCE3FB0", VA = "0xCE3FB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0xCE412C", Offset = "0xCE412C", VA = "0xCE412C")]
	public void CameraRotationX()
	{
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0xCE424C", Offset = "0xCE424C", VA = "0xCE424C")]
	public void CameraRotationY()
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0xCE436C", Offset = "0xCE436C", VA = "0xCE436C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0xCE44D4", Offset = "0xCE44D4", VA = "0xCE44D4")]
	public CrabCameraScript()
	{
	}
}
[Token(Token = "0x2000236")]
public class CrabCharacter : MonoBehaviour
{
	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator crabAnimator;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float upDown;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float turn;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float forward;

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0xCE44F8", Offset = "0xCE44F8", VA = "0xCE44F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0xCE4550", Offset = "0xCE4550", VA = "0xCE4550")]
	private void Update()
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0xCE4628", Offset = "0xCE4628", VA = "0xCE4628")]
	public void Attack()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0xCE468C", Offset = "0xCE468C", VA = "0xCE468C")]
	public void Hit()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0xCE46F0", Offset = "0xCE46F0", VA = "0xCE46F0")]
	public void Defense(bool tf)
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0xCE4764", Offset = "0xCE4764", VA = "0xCE4764")]
	public void AimDefense(bool tf)
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0xCE47D8", Offset = "0xCE47D8", VA = "0xCE47D8")]
	public void Jump()
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0xCE483C", Offset = "0xCE483C", VA = "0xCE483C")]
	public void Open()
	{
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0xCE4554", Offset = "0xCE4554", VA = "0xCE4554")]
	public void Move()
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0xCE48A0", Offset = "0xCE48A0", VA = "0xCE48A0")]
	public CrabCharacter()
	{
	}
}
[Token(Token = "0x2000237")]
public class CrabUserController : MonoBehaviour
{
	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CrabCharacter crabCharacter;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float crouchSpeed;

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0xCE48A8", Offset = "0xCE48A8", VA = "0xCE48A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0xCE4900", Offset = "0xCE4900", VA = "0xCE4900")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0xCE4BE8", Offset = "0xCE4BE8", VA = "0xCE4BE8")]
	public CrabUserController()
	{
	}
}
[Token(Token = "0x2000238")]
public class SplashScene : MonoBehaviour
{
	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float time;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float duration;

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0xB26E8C", Offset = "0xB26E8C", VA = "0xB26E8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0xB26EB4", Offset = "0xB26EB4", VA = "0xB26EB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0xB26F28", Offset = "0xB26F28", VA = "0xB26F28")]
	public SplashScene()
	{
	}
}
[Token(Token = "0x2000239")]
public class SliderData : MonoBehaviour
{
	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD3E8", Offset = "0x8DD3E8")]
	public float outputValue;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD420", Offset = "0x8DD420")]
	public Vector3 sliderAxis;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ConfigurableJoint myJoint;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float theLimit;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject startPoint;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float rawValue;

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0xB21C5C", Offset = "0xB21C5C", VA = "0xB21C5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0xB21EE4", Offset = "0xB21EE4", VA = "0xB21EE4")]
	private void Update()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0xB21F34", Offset = "0xB21F34", VA = "0xB21F34")]
	private void CalcuateSlider()
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0xB22050", Offset = "0xB22050", VA = "0xB22050")]
	public SliderData()
	{
	}
}
[Token(Token = "0x200023A")]
public class SliderResult : MonoBehaviour
{
	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color From;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color To;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer Result;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SliderData Slider;

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0xB220B0", Offset = "0xB220B0", VA = "0xB220B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0xB22198", Offset = "0xB22198", VA = "0xB22198")]
	public SliderResult()
	{
	}
}
[Token(Token = "0x200023B")]
public class VRGrabChestScript : MonoBehaviour
{
	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD458", Offset = "0x8DD458")]
	public VRGrabObject handle;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD490", Offset = "0x8DD490")]
	public List<VRGrabObject> objectsInChest;

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0xD59D84", Offset = "0xD59D84", VA = "0xD59D84")]
	private void Start()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0xD59E34", Offset = "0xD59E34", VA = "0xD59E34")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0xD5A068", Offset = "0xD5A068", VA = "0xD5A068")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0xD5A1D8", Offset = "0xD5A1D8", VA = "0xD5A1D8")]
	private void Open()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0xD59FA4", Offset = "0xD59FA4", VA = "0xD59FA4")]
	private void Shut()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0xD5A298", Offset = "0xD5A298", VA = "0xD5A298")]
	public VRGrabChestScript()
	{
	}
}
[Token(Token = "0x200023C")]
public class VRGrabObject : MonoBehaviour
{
	[Token(Token = "0x20005B9")]
	public delegate void Grabbed();

	[Token(Token = "0x20005BA")]
	public delegate void Dropped();

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD4C8", Offset = "0x8DD4C8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD4C8", Offset = "0x8DD4C8")]
	public bool teleportToHand;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD528", Offset = "0x8DD528")]
	public bool alwaysKinematic;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD560", Offset = "0x8DD560")]
	public bool isSticky;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD598", Offset = "0x8DD598")]
	public bool isLocked;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD5D0", Offset = "0x8DD5D0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD5D0", Offset = "0x8DD5D0")]
	public bool isTool;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD630", Offset = "0x8DD630")]
	public Vector3 rotationOverride;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD668", Offset = "0x8DD668")]
	public bool flipInLeftHand;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD6A0", Offset = "0x8DD6A0")]
	public Vector3 positionOverride;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD6D8", Offset = "0x8DD6D8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD6D8", Offset = "0x8DD6D8")]
	public bool isHandle;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD738", Offset = "0x8DD738")]
	public float breakDistance;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD770", Offset = "0x8DD770")]
	public Rigidbody attachedTo;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD7A8", Offset = "0x8DD7A8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD7A8", Offset = "0x8DD7A8")]
	public bool canBeThrown;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD808", Offset = "0x8DD808")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DD808", Offset = "0x8DD808")]
	public float throwForceMultiplier;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int sampleCount;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD85C", Offset = "0x8DD85C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD85C", Offset = "0x8DD85C")]
	public float scaleMultiplier;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent uGrabEvent;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent uDropEvent;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SECTR_AudioCue grabSound;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SECTR_AudioCue dropSound;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform yourParent;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform whoHasMe;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<Vector3> positions;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD8DC", Offset = "0x8DD8DC")]
	public bool isSelected;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	public bool isGrabbed;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public VRSimpleGrabSystem grabScript;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Rigidbody yourBody;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool noRange;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 yourScale;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 lastpos;

	[Token(Token = "0x14000032")]
	public event Grabbed GrabE
	{
		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xD5A328", Offset = "0xD5A328", VA = "0xD5A328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA848", Offset = "0x8EA848")]
		add
		{
		}
		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xD5A414", Offset = "0xD5A414", VA = "0xD5A414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA858", Offset = "0x8EA858")]
		remove
		{
		}
	}

	[Token(Token = "0x14000033")]
	public event Dropped DropE
	{
		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xD5A500", Offset = "0xD5A500", VA = "0xD5A500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA868", Offset = "0x8EA868")]
		add
		{
		}
		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xD5A5EC", Offset = "0xD5A5EC", VA = "0xD5A5EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EA878", Offset = "0x8EA878")]
		remove
		{
		}
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0xD5A6D8", Offset = "0xD5A6D8", VA = "0xD5A6D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0xD5A784", Offset = "0xD5A784", VA = "0xD5A784")]
	private void GrabbingAltFunction()
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0xD5A8CC", Offset = "0xD5A8CC", VA = "0xD5A8CC")]
	private void DroppingAltFunction()
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0xD5A9AC", Offset = "0xD5A9AC", VA = "0xD5A9AC")]
	public void AdjustScale(bool restore)
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0xD5AA08", Offset = "0xD5AA08", VA = "0xD5AA08")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0xD5ACC0", Offset = "0xD5ACC0", VA = "0xD5ACC0")]
	private void SoftAttachMove()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0xD5AA5C", Offset = "0xD5AA5C", VA = "0xD5AA5C")]
	private void TrackVelocity()
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0xD5B0D4", Offset = "0xD5B0D4", VA = "0xD5B0D4")]
	public void PickUp(Transform chg)
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0xD5B68C", Offset = "0xD5B68C", VA = "0xD5B68C")]
	public void Throw()
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0xD5B690", Offset = "0xD5B690", VA = "0xD5B690")]
	public void AddForce()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0xD5AF74", Offset = "0xD5AF74", VA = "0xD5AF74")]
	public void InstantDrop()
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0xD5BE38", Offset = "0xD5BE38", VA = "0xD5BE38")]
	public void Drop()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0xD5B808", Offset = "0xD5B808", VA = "0xD5B808")]
	public Vector3 GetWorldVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0xD5BFCC", Offset = "0xD5BFCC", VA = "0xD5BFCC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0xD5C038", Offset = "0xD5C038", VA = "0xD5C038")]
	public VRGrabObject()
	{
	}
}
[Token(Token = "0x200023D")]
public class VRGrabThrowDispenser : MonoBehaviour
{
	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRGrabObject dispensingObject;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VRGrabObject currentObject;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool respawnOnDeath;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float particleDelay;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float respawnDelay;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject respawnEffect;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SECTR_AudioCue respawnSound;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject myRespawnEffect;

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0xD5C168", Offset = "0xD5C168", VA = "0xD5C168")]
	private void Start()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0xD5C16C", Offset = "0xD5C16C", VA = "0xD5C16C")]
	private void JustSpawn()
	{
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0xD5C464", Offset = "0xD5C464", VA = "0xD5C464")]
	private void CreateAndParentObject()
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0xD5C7CC", Offset = "0xD5C7CC", VA = "0xD5C7CC")]
	private void ParticleEffectDelayed()
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0xD5C984", Offset = "0xD5C984", VA = "0xD5C984")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0xD5CA4C", Offset = "0xD5CA4C", VA = "0xD5CA4C")]
	private void ObjectGrabed()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0xD5CB28", Offset = "0xD5CB28", VA = "0xD5CB28")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0xD5CBB8", Offset = "0xD5CBB8", VA = "0xD5CBB8")]
	public VRGrabThrowDispenser()
	{
	}
}
[Token(Token = "0x200023E")]
public class VRGrabThrowPocket : MonoBehaviour
{
	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD914", Offset = "0x8DD914")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD914", Offset = "0x8DD914")]
	public string searchTag;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DD974", Offset = "0x8DD974")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD974", Offset = "0x8DD974")]
	public VRGrabObject correctObject;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD9D4", Offset = "0x8DD9D4")]
	public UnityEvent myEvent;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDA0C", Offset = "0x8DDA0C")]
	public bool lockObject;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDA44", Offset = "0x8DDA44")]
	public bool centerObject;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDA7C", Offset = "0x8DDA7C")]
	public bool scaleObject;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDAB4", Offset = "0x8DDAB4")]
	public VRGrabObject slottedObject;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool hasObject;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 originalScale;

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0xD5CBC0", Offset = "0xD5CBC0", VA = "0xD5CBC0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0xD5CCD8", Offset = "0xD5CCD8", VA = "0xD5CCD8")]
	private void Update()
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0xD5CD8C", Offset = "0xD5CD8C", VA = "0xD5CD8C")]
	private void LoseObject()
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0xD5CE48", Offset = "0xD5CE48", VA = "0xD5CE48")]
	private void GainObject()
	{
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0xD5D028", Offset = "0xD5D028", VA = "0xD5D028")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0xD5D0F4", Offset = "0xD5D0F4", VA = "0xD5D0F4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0xD5D1CC", Offset = "0xD5D1CC", VA = "0xD5D1CC")]
	public VRGrabThrowPocket()
	{
	}
}
[Token(Token = "0x200023F")]
public class VRSimpleGrabSystem : MonoBehaviour
{
	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDAEC", Offset = "0x8DDAEC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDAEC", Offset = "0x8DDAEC")]
	public bool hideInGrab;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDB4C", Offset = "0x8DDB4C")]
	public Renderer[] objectsToHide;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDB84", Offset = "0x8DDB84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDB84", Offset = "0x8DDB84")]
	public bool isLeft;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool useRanged;

	[Token(Token = "0x400101F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDBE4", Offset = "0x8DDBE4")]
	public bool alwaysTeleportToHand;

	[Token(Token = "0x4001020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDC1C", Offset = "0x8DDC1C")]
	public bool rangedOnHandles;

	[Token(Token = "0x4001021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDC54", Offset = "0x8DDC54")]
	public float grabDistance;

	[Token(Token = "0x4001022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDC8C", Offset = "0x8DDC8C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDC8C", Offset = "0x8DDC8C")]
	public GameObject grabTrackingVisual;

	[Token(Token = "0x4001023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDCEC", Offset = "0x8DDCEC")]
	public GameObject pickVisual;

	[Token(Token = "0x4001024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CharacterController charController;

	[Token(Token = "0x4001025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject rangedGrabPoint;

	[Token(Token = "0x4001026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isStuck;

	[Token(Token = "0x4001027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int hand;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Pvr_KeyCode grabButton;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDD24", Offset = "0x8DDD24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDD24", Offset = "0x8DDD24")]
	public bool inGrab;

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDD84", Offset = "0x8DDD84")]
	public VRGrabObject pickedObject;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform grabTransform;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDDBC", Offset = "0x8DDDBC")]
	public VRGrabObject grabObject;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool inGrabRange;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Ray ray;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 lastPos;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 vel;

	[Token(Token = "0x6001104")]
	[Address(RVA = "0xD66134", Offset = "0xD66134", VA = "0xD66134")]
	private void Start()
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0xD66350", Offset = "0xD66350", VA = "0xD66350")]
	private void UsingOVRTouch()
	{
	}

	[Token(Token = "0x6001106")]
	[Address(RVA = "0xD668F0", Offset = "0xD668F0", VA = "0xD668F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0xD66E30", Offset = "0xD66E30", VA = "0xD66E30")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0xD6707C", Offset = "0xD6707C", VA = "0xD6707C")]
	private void OnTriggerExit(Collider col)
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0xD5B9F4", Offset = "0xD5B9F4", VA = "0xD5B9F4")]
	public void DropImmediate()
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0xD663BC", Offset = "0xD663BC", VA = "0xD663BC")]
	public void Drop()
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0xD671F0", Offset = "0xD671F0", VA = "0xD671F0")]
	public void DelayNulls()
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0xD6648C", Offset = "0xD6648C", VA = "0xD6648C")]
	public void Grab()
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0xD66A20", Offset = "0xD66A20", VA = "0xD66A20")]
	private void RangeGrab()
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0xD67220", Offset = "0xD67220", VA = "0xD67220")]
	public void PickVisualShow(Vector3 where)
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0xD66210", Offset = "0xD66210", VA = "0xD66210")]
	public void PickVisualHide()
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0xD662B4", Offset = "0xD662B4", VA = "0xD662B4")]
	public void TrackingVisualHide()
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0xD67328", Offset = "0xD67328", VA = "0xD67328")]
	public void TrackingVisualShow()
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0xD673C4", Offset = "0xD673C4", VA = "0xD673C4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0xD6713C", Offset = "0xD6713C", VA = "0xD6713C")]
	public void ToggleHideInGrab(bool visual, bool forceHide = false)
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0xD673F4", Offset = "0xD673F4", VA = "0xD673F4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0xD66FE4", Offset = "0xD66FE4", VA = "0xD66FE4")]
	private void ObjectIsSelected(bool toOn)
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0xD67540", Offset = "0xD67540", VA = "0xD67540")]
	public VRSimpleGrabSystem()
	{
	}
}
[Token(Token = "0x2000240")]
public class VrInputRayManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005BB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCFBC", Offset = "0x8CCFBC")]
	private sealed class <>c
	{
		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Converter<string, int> <>9__12_0;

		[Token(Token = "0x6002579")]
		[Address(RVA = "0x1C89EB8", Offset = "0x1C89EB8", VA = "0x1C89EB8")]
		public <>c()
		{
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x1C89EC0", Offset = "0x1C89EC0", VA = "0x1C89EC0")]
		internal int <ControllerStateCallback>b__12_0(string a)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRInputRay left;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VRInputRay right;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftHand;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightHand;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform ray;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool canInput;

	[Token(Token = "0x1700014A")]
	public bool canDoInput
	{
		[Token(Token = "0x6001117")]
		[Address(RVA = "0x1C89950", Offset = "0x1C89950", VA = "0x1C89950")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001118")]
		[Address(RVA = "0x1C89958", Offset = "0x1C89958", VA = "0x1C89958")]
		set
		{
		}
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x1C89AB4", Offset = "0x1C89AB4", VA = "0x1C89AB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x1C89B50", Offset = "0x1C89B50", VA = "0x1C89B50")]
	private void Update()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x1C89964", Offset = "0x1C89964", VA = "0x1C89964")]
	private void CheckControllers()
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x1C89B54", Offset = "0x1C89B54", VA = "0x1C89B54")]
	private void ControllerStateCallback(string code)
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x1C89E44", Offset = "0x1C89E44", VA = "0x1C89E44")]
	public VrInputRayManager()
	{
	}
}
[Token(Token = "0x2000241")]
public class VRMovementOculus : MonoBehaviour
{
	[Token(Token = "0x20005BC")]
	public enum eControllerType
	{
		[Token(Token = "0x40021A2")]
		Left,
		[Token(Token = "0x40021A3")]
		Right,
		[Token(Token = "0x40021A4")]
		Both
	}

	[Token(Token = "0x20005BD")]
	public enum eHMD
	{
		[Token(Token = "0x40021A6")]
		Rift,
		[Token(Token = "0x40021A7")]
		Go
	}

	[Token(Token = "0x20005BE")]
	public enum eMovementMode
	{
		[Token(Token = "0x40021A9")]
		Flight,
		[Token(Token = "0x40021AA")]
		Grounded,
		[Token(Token = "0x40021AB")]
		None,
		[Token(Token = "0x40021AC")]
		NoneWithGravity,
		[Token(Token = "0x40021AD")]
		Remote,
		[Token(Token = "0x40021AE")]
		Controller,
		[Token(Token = "0x40021AF")]
		Keyboard
	}

	[Token(Token = "0x20005BF")]
	public struct InputData
	{
		[Token(Token = "0x40021B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool pressed;

		[Token(Token = "0x40021B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform selectedController;

		[Token(Token = "0x40021B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isLeft;

		[Token(Token = "0x40021B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isRight;
	}

	[Token(Token = "0x20005C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCFCC", Offset = "0x8CCFCC")]
	private sealed class <Start>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRMovementOculus <>4__this;

		[Token(Token = "0x170002D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600257E")]
			[Address(RVA = "0xD60398", Offset = "0xD60398", VA = "0xD60398", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002580")]
			[Address(RVA = "0xD60408", Offset = "0xD60408", VA = "0xD60408", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0xD5E960", Offset = "0xD5E960", VA = "0xD5E960")]
		[DebuggerHidden]
		public <Start>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0xD60120", Offset = "0xD60120", VA = "0xD60120", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0xD60124", Offset = "0xD60124", VA = "0xD60124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0xD603A0", Offset = "0xD603A0", VA = "0xD603A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDE04", Offset = "0x8DDE04")]
	public eHMD oculusType;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public OVRInput.Controller defaultLeft;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public OVRInput.Controller defaultRight;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDE5C", Offset = "0x8DDE5C")]
	public eControllerType ControlsOn;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRInput.Button ForwardButton;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public OVRInput.Button BackwardButton;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDE94", Offset = "0x8DDE94")]
	public bool canMove;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public eMovementMode MovementMode;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool gravityInDebug;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDECC", Offset = "0x8DDECC")]
	public bool headIsForward;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float moveSpeed;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float PlayerGravity;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DDF04", Offset = "0x8DDF04")]
	public float basicAcceleration;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDF1C", Offset = "0x8DDF1C")]
	public float fadeTime;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool accelSpeed;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float decay;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float acc;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDF54", Offset = "0x8DDF54")]
	public CharacterController yourRig;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool AutoAssignTheRest;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform headRig;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform leftController;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform rightController;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public VRFadeScript myFade;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float curSpeed;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool gravityOverRide;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	[HideInInspector]
	public bool mainMovementOverRide;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform selectedController;

	[Token(Token = "0x600111E")]
	[Address(RVA = "0xD5E8EC", Offset = "0xD5E8EC", VA = "0xD5E8EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EA888", Offset = "0x8EA888")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0xD5E98C", Offset = "0xD5E98C", VA = "0xD5E98C")]
	public void ReCenter()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0xD5EA2C", Offset = "0xD5EA2C", VA = "0xD5EA2C")]
	public float GetHeight()
	{
		return default(float);
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0xD5EACC", Offset = "0xD5EACC", VA = "0xD5EACC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0xD5EFCC", Offset = "0xD5EFCC", VA = "0xD5EFCC")]
	public void ApplyGravity()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0xD5F474", Offset = "0xD5F474", VA = "0xD5F474")]
	public float GetGravity()
	{
		return default(float);
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0xD5F15C", Offset = "0xD5F15C", VA = "0xD5F15C")]
	private void MoveInputSystem()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0xD5F5D0", Offset = "0xD5F5D0", VA = "0xD5F5D0")]
	public void AdvancedMove(Transform thisController, float speed)
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0xD5EB54", Offset = "0xD5EB54", VA = "0xD5EB54")]
	public void DebugMovement()
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0xD5F4B0", Offset = "0xD5F4B0", VA = "0xD5F4B0")]
	private float GetAxisFromButton(OVRInput.Button theButton, OVRInput.Controller theController, bool isPositive = true)
	{
		return default(float);
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0xD5F7E8", Offset = "0xD5F7E8", VA = "0xD5F7E8")]
	public void RotateByDegrees(float degrees)
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0xD5F938", Offset = "0xD5F938", VA = "0xD5F938")]
	public InputData InputReturnGet(OVRInput.Button myButton)
	{
		return default(InputData);
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0xD5FBC4", Offset = "0xD5FBC4", VA = "0xD5FBC4")]
	public InputData InputReturnDown(OVRInput.Button myButton)
	{
		return default(InputData);
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0xD5FE50", Offset = "0xD5FE50", VA = "0xD5FE50")]
	public InputData InputReturnUp(OVRInput.Button myButton)
	{
		return default(InputData);
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0xD600DC", Offset = "0xD600DC", VA = "0xD600DC")]
	public VRMovementOculus()
	{
	}
}
[Token(Token = "0x2000242")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CB220", Offset = "0x8CB220")]
public class LineArcSystem : MonoBehaviour
{
	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LineRenderer myLine;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] thePoints;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 curveOffset;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DDF9C", Offset = "0x8DDF9C")]
	public float smoothness;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DDFB8", Offset = "0x8DDFB8")]
	public float AppogeePoint;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DDFD0", Offset = "0x8DDFD0")]
	public float Alpha;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer cachedRenderer;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DDFE8", Offset = "0x8DDFE8")]
	public bool TestMode;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LineStart;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform LineEnd;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color TestColor;

	[Token(Token = "0x600112D")]
	[Address(RVA = "0xBC6108", Offset = "0xBC6108", VA = "0xBC6108")]
	private void Start()
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0xBC6190", Offset = "0xBC6190", VA = "0xBC6190")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0xBC6248", Offset = "0xBC6248", VA = "0xBC6248")]
	public void CreateLine(Vector3 start, Vector3 end, Color yourColor)
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0xBC68EC", Offset = "0xBC68EC", VA = "0xBC68EC")]
	public void SetColor(Color chg)
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0xBC69F4", Offset = "0xBC69F4", VA = "0xBC69F4")]
	public void HideLine()
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0xBC64BC", Offset = "0xBC64BC", VA = "0xBC64BC")]
	public Vector3 LerpByDistance(Vector3 start, Vector3 end, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0xBC65B4", Offset = "0xBC65B4", VA = "0xBC65B4")]
	public static Vector3[] MakeSmoothCurve(Vector3[] arrayToCurve, float smoothness)
	{
		return null;
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0xBC6A28", Offset = "0xBC6A28", VA = "0xBC6A28")]
	public LineArcSystem()
	{
	}
}
[Token(Token = "0x2000243")]
public class TeleportThrower : MonoBehaviour
{
	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool isSelected;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE030", Offset = "0x8DE030")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE030", Offset = "0x8DE030")]
	public float addedThrowForce;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool stayKinematic;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool TeleportOnContact;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool sticksToObjects;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string LookTag;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int MAX_COUNT;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody yourBody;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public VROculusThrowTeleporter myTeleporter;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> positions;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasHelper;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 curpos;

	[Token(Token = "0x6001135")]
	[Address(RVA = "0xB2EF04", Offset = "0xB2EF04", VA = "0xB2EF04")]
	private void Start()
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0xB2F054", Offset = "0xB2F054", VA = "0xB2F054")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0xB2F064", Offset = "0xB2F064", VA = "0xB2F064")]
	private void TrackVelocity()
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0xB2F188", Offset = "0xB2F188", VA = "0xB2F188")]
	public void UnlockObject()
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0xB2EFB0", Offset = "0xB2EFB0", VA = "0xB2EFB0")]
	public void PickUp()
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0xB2F270", Offset = "0xB2F270", VA = "0xB2F270")]
	public void Throw()
	{
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0xB2F274", Offset = "0xB2F274", VA = "0xB2F274")]
	public void AddForce()
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0xB2F5D8", Offset = "0xB2F5D8", VA = "0xB2F5D8")]
	public void Drop(bool isImpulse = false)
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0xB2F6F0", Offset = "0xB2F6F0", VA = "0xB2F6F0")]
	public void DeleteThrower()
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0xB2F3EC", Offset = "0xB2F3EC", VA = "0xB2F3EC")]
	public Vector3 GetWorldVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0xB2F7A4", Offset = "0xB2F7A4", VA = "0xB2F7A4")]
	private void OnTriggerEnter(Collider Col)
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0xB2FA84", Offset = "0xB2FA84", VA = "0xB2FA84")]
	private void OnCollisionEnter(Collision Col)
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0xB2F8E4", Offset = "0xB2F8E4", VA = "0xB2F8E4")]
	private void DoBehavior(Transform theParent)
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0xB2FBC4", Offset = "0xB2FBC4", VA = "0xB2FBC4")]
	public TeleportThrower()
	{
	}
}
[Token(Token = "0x2000244")]
public class VRFadeScript : MonoBehaviour
{
	[Token(Token = "0x20005C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCFDC", Offset = "0x8CCFDC")]
	private sealed class <FadeIn>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRFadeScript <>4__this;

		[Token(Token = "0x40021BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <color>5__3;

		[Token(Token = "0x170002D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002584")]
			[Address(RVA = "0xD597F8", Offset = "0xD597F8", VA = "0xD597F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002586")]
			[Address(RVA = "0xD59868", Offset = "0xD59868", VA = "0xD59868", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0xD5927C", Offset = "0xD5927C", VA = "0xD5927C")]
		[DebuggerHidden]
		public <FadeIn>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0xD59640", Offset = "0xD59640", VA = "0xD59640", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0xD59644", Offset = "0xD59644", VA = "0xD59644", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0xD59800", Offset = "0xD59800", VA = "0xD59800", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCFEC", Offset = "0x8CCFEC")]
	private sealed class <FadeIn>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRFadeScript <>4__this;

		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <color>5__3;

		[Token(Token = "0x170002DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600258A")]
			[Address(RVA = "0xD59A3C", Offset = "0xD59A3C", VA = "0xD59A3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600258C")]
			[Address(RVA = "0xD59AAC", Offset = "0xD59AAC", VA = "0xD59AAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0xD59340", Offset = "0xD59340", VA = "0xD59340")]
		[DebuggerHidden]
		public <FadeIn>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0xD59870", Offset = "0xD59870", VA = "0xD59870", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0xD59874", Offset = "0xD59874", VA = "0xD59874", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0xD59A44", Offset = "0xD59A44", VA = "0xD59A44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CCFFC", Offset = "0x8CCFFC")]
	private sealed class <FadeOut>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRFadeScript <>4__this;

		[Token(Token = "0x40021C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float time;

		[Token(Token = "0x40021C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40021C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <color>5__3;

		[Token(Token = "0x170002DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002590")]
			[Address(RVA = "0xD59D0C", Offset = "0xD59D0C", VA = "0xD59D0C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002592")]
			[Address(RVA = "0xD59D7C", Offset = "0xD59D7C", VA = "0xD59D7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0xD59404", Offset = "0xD59404", VA = "0xD59404")]
		[DebuggerHidden]
		public <FadeOut>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600258E")]
		[Address(RVA = "0xD59AB4", Offset = "0xD59AB4", VA = "0xD59AB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0xD59AB8", Offset = "0xD59AB8", VA = "0xD59AB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0xD59D14", Offset = "0xD59D14", VA = "0xD59D14", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeTime;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color fadeColor;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material fadeMaterial;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isFading;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private YieldInstruction fadeInstruction;

	[Token(Token = "0x6001143")]
	[Address(RVA = "0xD590A0", Offset = "0xD590A0", VA = "0xD590A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0xD59128", Offset = "0xD59128", VA = "0xD59128")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0xD591C8", Offset = "0xD591C8", VA = "0xD591C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0xD59154", Offset = "0xD59154", VA = "0xD59154")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EA8EC", Offset = "0x8EA8EC")]
	private IEnumerator FadeIn()
	{
		return null;
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0xD592A8", Offset = "0xD592A8", VA = "0xD592A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EA950", Offset = "0x8EA950")]
	private IEnumerator FadeIn(float time)
	{
		return null;
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0xD5936C", Offset = "0xD5936C", VA = "0xD5936C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EA9B4", Offset = "0x8EA9B4")]
	private IEnumerator FadeOut(float time)
	{
		return null;
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0xD59430", Offset = "0xD59430", VA = "0xD59430")]
	public void StartFadeIn(float time)
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0xD5945C", Offset = "0xD5945C", VA = "0xD5945C")]
	public void StartFadeOut(float time)
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0xD59488", Offset = "0xD59488", VA = "0xD59488")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0xD59588", Offset = "0xD59588", VA = "0xD59588")]
	public VRFadeScript()
	{
	}
}
[Token(Token = "0x2000245")]
public class VROculusBlink : MonoBehaviour
{
	[Token(Token = "0x20005C4")]
	public enum eBlinkMode
	{
		[Token(Token = "0x40021C9")]
		Instant,
		[Token(Token = "0x40021CA")]
		HoldRelease
	}

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE094", Offset = "0x8DE094")]
	public OVRInput.Button BlinkButton;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool canBlink;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE0CC", Offset = "0x8DE0CC")]
	public bool fadeBlink;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public eBlinkMode BlinkMode;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float blinkDistance;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float blinkMoveTime;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE104", Offset = "0x8DE104")]
	public Transform blinkPoint;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LineArcSystem myLine;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color blinkLineColor;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LayerMask myMask;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color blinkLineBad;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool inBlink;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform storedTransformBlink;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool noBlinking;

	[Token(Token = "0x600114D")]
	[Address(RVA = "0xD60410", Offset = "0xD60410", VA = "0xD60410")]
	private void Start()
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0xD604E8", Offset = "0xD604E8", VA = "0xD604E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0xD604F8", Offset = "0xD604F8", VA = "0xD604F8")]
	public void BlinkInput()
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0xD60540", Offset = "0xD60540", VA = "0xD60540")]
	public void FowardBlinkNormal()
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0xD60D80", Offset = "0xD60D80", VA = "0xD60D80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0xD60DF4", Offset = "0xD60DF4", VA = "0xD60DF4")]
	private void BumpMe()
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0xD60790", Offset = "0xD60790", VA = "0xD60790")]
	public void FowardBlinkHold()
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0xD60EBC", Offset = "0xD60EBC", VA = "0xD60EBC")]
	public VROculusBlink()
	{
	}
}
[Token(Token = "0x2000246")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CB284", Offset = "0x8CB284")]
public class VROculusDragMovement : MonoBehaviour
{
	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE13C", Offset = "0x8DE13C")]
	public Transform DragVisual;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE174", Offset = "0x8DE174")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE174", Offset = "0x8DE174")]
	public float multipler;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool invertControls;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 lastPos;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isOn;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform storedTransform;

	[Token(Token = "0x6001155")]
	[Address(RVA = "0xD60F08", Offset = "0xD60F08", VA = "0xD60F08")]
	private void Start()
	{
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0xD60FE8", Offset = "0xD60FE8", VA = "0xD60FE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0xD61038", Offset = "0xD61038", VA = "0xD61038")]
	public void DraggingMove()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0xD614AC", Offset = "0xD614AC", VA = "0xD614AC")]
	public VROculusDragMovement()
	{
	}
}
[Token(Token = "0x2000247")]
public class VROculusRotate : MonoBehaviour
{
	[Token(Token = "0x20005C5")]
	public enum eRotationMode
	{
		[Token(Token = "0x40021CC")]
		ButtonPointAndShoot,
		[Token(Token = "0x40021CD")]
		QuickStick,
		[Token(Token = "0x40021CE")]
		DoubleTapQuickStick,
		[Token(Token = "0x40021CF")]
		SlowStick,
		[Token(Token = "0x40021D0")]
		ButtonRotateLR,
		[Token(Token = "0x40021D1")]
		TouchPadClick,
		[Token(Token = "0x40021D2")]
		TouchPadSwipe,
		[Token(Token = "0x40021D3")]
		None
	}

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool canRotate;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE1D0", Offset = "0x8DE1D0")]
	public VRMovementOculus.eControllerType RotateOnHand;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool copyHandFromMain;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool invertHand;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE208", Offset = "0x8DE208")]
	public eRotationMode RotationMode;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE240", Offset = "0x8DE240")]
	public OVRInput.Button RotateButton;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE278", Offset = "0x8DE278")]
	public bool fadeRotate;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE2B0", Offset = "0x8DE2B0")]
	public float rotateDegrees;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotateTime;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float slowRotateSpeed;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float doubleTapTime;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool doubleTapLeft;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool doubleTapRight;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float dTapTimeLeft;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float dTapTimeRight;

	[Token(Token = "0x6001159")]
	[Address(RVA = "0xD614BC", Offset = "0xD614BC", VA = "0xD614BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0xD61514", Offset = "0xD61514", VA = "0xD61514")]
	private void Update()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0xD61A9C", Offset = "0xD61A9C", VA = "0xD61A9C")]
	private void TouchPadMove()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0xD6199C", Offset = "0xD6199C", VA = "0xD6199C")]
	private void ButtonRotateLR()
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0xD617DC", Offset = "0xD617DC", VA = "0xD617DC")]
	private void SlowStickRotate()
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0xD616B4", Offset = "0xD616B4", VA = "0xD616B4")]
	private void QuickStickRotate()
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0xD61C44", Offset = "0xD61C44", VA = "0xD61C44")]
	private void QuickStickResolve(OVRInput.Controller selectedController)
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0xD61740", Offset = "0xD61740", VA = "0xD61740")]
	private void DoubleTapQuickStick()
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0xD61D18", Offset = "0xD61D18", VA = "0xD61D18")]
	private void DoubleTapResolve(OVRInput.Controller selectedController)
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0xD6160C", Offset = "0xD6160C", VA = "0xD6160C")]
	private void PointShootPressed()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0xD61E60", Offset = "0xD61E60", VA = "0xD61E60")]
	private void PointAndShootRotation(Transform selectedController)
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0xD61C40", Offset = "0xD61C40", VA = "0xD61C40")]
	public void RotateByDegrees(float degrees)
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0xD6216C", Offset = "0xD6216C", VA = "0xD6216C")]
	private void RotateByDegrees2(float degrees)
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0xD6256C", Offset = "0xD6256C", VA = "0xD6256C")]
	public VROculusRotate()
	{
	}
}
[Token(Token = "0x2000248")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CB2E8", Offset = "0x8CB2E8")]
public class VROculusRubberBand : MonoBehaviour
{
	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE2CC", Offset = "0x8DE2CC")]
	public Transform DragPointL;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform DragPointR;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE304", Offset = "0x8DE304")]
	public LineArcSystem RubberBandLineL;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LineArcSystem RubberBandLineR;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE33C", Offset = "0x8DE33C")]
	public float maxRadius;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool showLines;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool rbLeftOn;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool rbRightOn;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public bool invertDirection;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x6001167")]
	[Address(RVA = "0xD625A0", Offset = "0xD625A0", VA = "0xD625A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0xD627F8", Offset = "0xD627F8", VA = "0xD627F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0xD631EC", Offset = "0xD631EC", VA = "0xD631EC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0xD62884", Offset = "0xD62884", VA = "0xD62884")]
	public void RubberBandMoveL()
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0xD62D38", Offset = "0xD62D38", VA = "0xD62D38")]
	public void RubberBandMoveR()
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0xD63434", Offset = "0xD63434", VA = "0xD63434")]
	public float ConvertRange(float originalStart, float originalEnd, float newStart, float newEnd, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0xD6344C", Offset = "0xD6344C", VA = "0xD6344C")]
	public VROculusRubberBand()
	{
	}
}
[Token(Token = "0x2000249")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CB34C", Offset = "0x8CB34C")]
public class VROculusStrafe : MonoBehaviour
{
	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useController;

	[Token(Token = "0x600116E")]
	[Address(RVA = "0xD63468", Offset = "0xD63468", VA = "0xD63468")]
	private void Start()
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0xD63534", Offset = "0xD63534", VA = "0xD63534")]
	private void Update()
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0xD635E8", Offset = "0xD635E8", VA = "0xD635E8")]
	private void FPSMove(OVRInput.Controller pickedController)
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0xD63834", Offset = "0xD63834", VA = "0xD63834")]
	public VROculusStrafe()
	{
	}
}
[Token(Token = "0x200024A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CB3B0", Offset = "0x8CB3B0")]
public class VROculusTeleport : MonoBehaviour
{
	[Token(Token = "0x20005C6")]
	public enum TeleportType
	{
		[Token(Token = "0x40021D5")]
		NavMesh,
		[Token(Token = "0x40021D6")]
		TaggedPoint,
		[Token(Token = "0x40021D7")]
		AnyCollider,
		[Token(Token = "0x40021D8")]
		Tag
	}

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE374", Offset = "0x8DE374")]
	public OVRInput.Button TeleportButton;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool canTeleport;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE3AC", Offset = "0x8DE3AC")]
	public TeleportType TeleportMode;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool useArcTeleporter;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE3E4", Offset = "0x8DE3E4")]
	public LayerMask myLayers;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool fadeTeleport;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TeleMinDstance;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float TeleMaxDistance;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string theTag;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float teleportTime;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE41C", Offset = "0x8DE41C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE41C", Offset = "0x8DE41C")]
	public float forwardForce;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float gravityRatio;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE474", Offset = "0x8DE474")]
	public float lineResolution;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE490", Offset = "0x8DE490")]
	public LineArcSystem teleportLine;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color canTeleportColor;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color canNotTeleportColor;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE4C8", Offset = "0x8DE4C8")]
	public Transform teleportPoint;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float teleportGive;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool inBlink;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform storedTransformBlink;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool inTeleport;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform storedTransformTeleport;

	[Token(Token = "0x6001172")]
	[Address(RVA = "0xD6383C", Offset = "0xD6383C", VA = "0xD6383C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0xD63980", Offset = "0xD63980", VA = "0xD63980")]
	private void Update()
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0xD63990", Offset = "0xD63990", VA = "0xD63990")]
	private void TeleportInput()
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0xD64158", Offset = "0xD64158", VA = "0xD64158")]
	private void Teleport()
	{
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0xD643C4", Offset = "0xD643C4", VA = "0xD643C4")]
	private void BumpMe()
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0xD63B74", Offset = "0xD63B74", VA = "0xD63B74")]
	private void GetTeleportPoint()
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0xD64A7C", Offset = "0xD64A7C", VA = "0xD64A7C")]
	private bool NavMeshTeleport(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0xD64B1C", Offset = "0xD64B1C", VA = "0xD64B1C")]
	private bool TagTeleport(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0xD64B64", Offset = "0xD64B64", VA = "0xD64B64")]
	private bool ColliderTeleport(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0xD6448C", Offset = "0xD6448C", VA = "0xD6448C")]
	public void CastArc(Transform start)
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0xD64B6C", Offset = "0xD64B6C", VA = "0xD64B6C")]
	private bool RandomPoint(Vector3 center, float range, out Vector3 result)
	{
		return default(bool);
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0xD64CEC", Offset = "0xD64CEC", VA = "0xD64CEC")]
	public VROculusTeleport()
	{
	}
}
[Token(Token = "0x200024B")]
public class VROculusThrowTeleporter : MonoBehaviour
{
	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE500", Offset = "0x8DE500")]
	public OVRInput.Button TeleportButton;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OVRInput.Button CancelButton;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE538", Offset = "0x8DE538")]
	public bool fadeTeleport;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float teleportTime;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TeleportThrower leftPorter;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TeleportThrower rightPorter;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE570", Offset = "0x8DE570")]
	public TeleportThrower TeleportThrower;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x600117E")]
	[Address(RVA = "0xD64D78", Offset = "0xD64D78", VA = "0xD64D78")]
	private void Start()
	{
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0xD64E50", Offset = "0xD64E50", VA = "0xD64E50")]
	private void Update()
	{
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0xD64ED4", Offset = "0xD64ED4", VA = "0xD64ED4")]
	private void LeftThrower()
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0xD652CC", Offset = "0xD652CC", VA = "0xD652CC")]
	private void RightThrower()
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0xD656C4", Offset = "0xD656C4", VA = "0xD656C4")]
	public void TeleportMe(Transform teleportPoint)
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0xD65964", Offset = "0xD65964", VA = "0xD65964")]
	private void BumpMe()
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0xD65A2C", Offset = "0xD65A2C", VA = "0xD65A2C")]
	public VROculusThrowTeleporter()
	{
	}
}
[Token(Token = "0x200024C")]
public class VROculusThrusters : MonoBehaviour
{
	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE5A8", Offset = "0x8DE5A8")]
	public OVRInput.Button brakeButton;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE5E0", Offset = "0x8DE5E0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE5E0", Offset = "0x8DE5E0")]
	public float speedAdd;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE638", Offset = "0x8DE638")]
	public float maxSpeedMulti;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE650", Offset = "0x8DE650")]
	public float drag;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE668", Offset = "0x8DE668")]
	public float brakePower;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isOn;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool breaksHit;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool inverted;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	public bool reduceVelocityOnContact;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VRMovementOculus refSystem;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform storedTransform;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 moveDirection;

	[Token(Token = "0x6001185")]
	[Address(RVA = "0xD65A48", Offset = "0xD65A48", VA = "0xD65A48")]
	private void Start()
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0xD65B38", Offset = "0xD65B38", VA = "0xD65B38")]
	private void Update()
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0xD65EC8", Offset = "0xD65EC8", VA = "0xD65EC8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0xD65B7C", Offset = "0xD65B7C", VA = "0xD65B7C")]
	public void ThrusterMove()
	{
	}

	[Token(Token = "0x6001189")]
	[Address(RVA = "0xD66014", Offset = "0xD66014", VA = "0xD66014")]
	private void Brakes(float chg)
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0xD66104", Offset = "0xD66104", VA = "0xD66104")]
	public VROculusThrusters()
	{
	}
}
[Token(Token = "0x200024D")]
public class VrStrafe : MonoBehaviour
{
	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int hand;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform player;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform PlayerRotation;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform controller;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CharacterController characterController;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float moveSpeed;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float verticalMoveSpeed;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool verticalMovement;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool walking;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float initialAngleY;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float initialAngleX;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float angleOffset;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float rotationSpeed;

	[Token(Token = "0x600118B")]
	[Address(RVA = "0x1C89ECC", Offset = "0x1C89ECC", VA = "0x1C89ECC")]
	private void Start()
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0x1C89ED4", Offset = "0x1C89ED4", VA = "0x1C89ED4")]
	private void Update()
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0x1C8A358", Offset = "0x1C8A358", VA = "0x1C8A358")]
	private void Rotate(int i)
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0x1C8A48C", Offset = "0x1C8A48C", VA = "0x1C8A48C")]
	public VrStrafe()
	{
	}
}
[Token(Token = "0x200024E")]
public class SampleVRTeleporterController : MonoBehaviour
{
	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRTeleporter teleporter;

	[Token(Token = "0x600118F")]
	[Address(RVA = "0xD8B280", Offset = "0xD8B280", VA = "0xD8B280")]
	private void Update()
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0xD8B320", Offset = "0xD8B320", VA = "0xD8B320")]
	public SampleVRTeleporterController()
	{
	}
}
[Token(Token = "0x200024F")]
public class VRTeleporter : MonoBehaviour
{
	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject positionMarker;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform bodyTransforn;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask excludeLayers;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float angle;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float strength;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool curvedLine;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int maxVertexcount;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float vertexDelta;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LineRenderer arcRenderer;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 velocity;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 groundPos;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 lastNormal;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool groundDetected;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Vector3> vertexList;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool displayActive;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform controller;

	[Token(Token = "0x6001191")]
	[Address(RVA = "0xD67718", Offset = "0xD67718", VA = "0xD67718")]
	public void Teleport()
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0xD67858", Offset = "0xD67858", VA = "0xD67858")]
	public void ToggleDisplay(bool active)
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0xD678C8", Offset = "0xD678C8", VA = "0xD678C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0xD67958", Offset = "0xD67958", VA = "0xD67958")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0xD67968", Offset = "0xD67968", VA = "0xD67968")]
	private void UpdatePath()
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0xD68144", Offset = "0xD68144", VA = "0xD68144")]
	public VRTeleporter()
	{
	}
}
[Token(Token = "0x2000250")]
public class CameraFollow : MonoBehaviour
{
	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject player;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 offset;

	[Token(Token = "0x6001197")]
	[Address(RVA = "0xCE09F4", Offset = "0xCE09F4", VA = "0xCE09F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0xCE0B04", Offset = "0xCE0B04", VA = "0xCE0B04")]
	private void Update()
	{
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0xCE0C28", Offset = "0xCE0C28", VA = "0xCE0C28")]
	public CameraFollow()
	{
	}
}
[Token(Token = "0x2000251")]
public class CameraRotate : MonoBehaviour
{
	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int speed;

	[Token(Token = "0x600119A")]
	[Address(RVA = "0xCE1064", Offset = "0xCE1064", VA = "0xCE1064")]
	private void Start()
	{
	}

	[Token(Token = "0x600119B")]
	[Address(RVA = "0xCE1068", Offset = "0xCE1068", VA = "0xCE1068")]
	private void Update()
	{
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0xCE1160", Offset = "0xCE1160", VA = "0xCE1160")]
	public CameraRotate()
	{
	}
}
[Token(Token = "0x2000252")]
public class Pierisrapae : MonoBehaviour
{
	[Token(Token = "0x20005C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD00C", Offset = "0x8CD00C")]
	private sealed class <idle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pierisrapae <>4__this;

		[Token(Token = "0x170002DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002596")]
			[Address(RVA = "0xE9D364", Offset = "0xE9D364", VA = "0xE9D364", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002598")]
			[Address(RVA = "0xE9D3D4", Offset = "0xE9D3D4", VA = "0xE9D3D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0xE9CF64", Offset = "0xE9CF64", VA = "0xE9CF64")]
		[DebuggerHidden]
		public <idle>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0xE9D1B4", Offset = "0xE9D1B4", VA = "0xE9D1B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0xE9D1B8", Offset = "0xE9D1B8", VA = "0xE9D1B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0xE9D36C", Offset = "0xE9D36C", VA = "0xE9D36C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD01C", Offset = "0x8CD01C")]
	private sealed class <fly>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pierisrapae <>4__this;

		[Token(Token = "0x170002E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600259C")]
			[Address(RVA = "0xE9D13C", Offset = "0xE9D13C", VA = "0xE9D13C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600259E")]
			[Address(RVA = "0xE9D1AC", Offset = "0xE9D1AC", VA = "0xE9D1AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0xE9D004", Offset = "0xE9D004", VA = "0xE9D004")]
		[DebuggerHidden]
		public <fly>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0xE9D038", Offset = "0xE9D038", VA = "0xE9D038", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0xE9D03C", Offset = "0xE9D03C", VA = "0xE9D03C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0xE9D144", Offset = "0xE9D144", VA = "0xE9D144", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator pieris;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IEnumerator coroutine;

	[Token(Token = "0x600119D")]
	[Address(RVA = "0xE9CAD4", Offset = "0xE9CAD4", VA = "0xE9CAD4")]
	private void Start()
	{
	}

	[Token(Token = "0x600119E")]
	[Address(RVA = "0xE9CB2C", Offset = "0xE9CB2C", VA = "0xE9CB2C")]
	private void Update()
	{
	}

	[Token(Token = "0x600119F")]
	[Address(RVA = "0xE9CEF0", Offset = "0xE9CEF0", VA = "0xE9CEF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EAA18", Offset = "0x8EAA18")]
	private IEnumerator idle()
	{
		return null;
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0xE9CF90", Offset = "0xE9CF90", VA = "0xE9CF90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EAA7C", Offset = "0x8EAA7C")]
	private IEnumerator fly()
	{
		return null;
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0xE9D030", Offset = "0xE9D030", VA = "0xE9D030")]
	public Pierisrapae()
	{
	}
}
[Serializable]
[Token(Token = "0x2000253")]
public class LightControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float intensity;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bounceIntensity;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float range;

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0xBC58E0", Offset = "0xBC58E0", VA = "0xBC58E0")]
	public LightControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000254")]
public class LightControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightControlBehaviour template;

	[Token(Token = "0x1700014B")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xBC5924", Offset = "0xBC5924", VA = "0xBC5924", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0xBC592C", Offset = "0xBC592C", VA = "0xBC592C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0xBC59CC", Offset = "0xBC59CC", VA = "0xBC59CC")]
	public LightControlClip()
	{
	}
}
[Token(Token = "0x2000255")]
public class LightControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_DefaultIntensity;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_DefaultBounceIntensity;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_DefaultRange;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light m_TrackBinding;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0xBC5A30", Offset = "0xBC5A30", VA = "0xBC5A30", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0xBC5EBC", Offset = "0xBC5EBC", VA = "0xBC5EBC", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0xBC5FF8", Offset = "0xBC5FF8", VA = "0xBC5FF8")]
	public LightControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000256")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8CB414", Offset = "0x8CB414")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8CB414", Offset = "0x8CB414")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x8CB414", Offset = "0x8CB414")]
public class LightControlTrack : TrackAsset
{
	[Token(Token = "0x60011A9")]
	[Address(RVA = "0xBC6000", Offset = "0xBC6000", VA = "0xBC6000", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0xBC6098", Offset = "0xBC6098", VA = "0xBC6098", Slot = "18")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0xBC60A0", Offset = "0xBC60A0", VA = "0xBC60A0")]
	public LightControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000257")]
public class NavMeshAgentControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform destination;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destinationSet;

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0xDE7834", Offset = "0xDE7834", VA = "0xDE7834", Slot = "15")]
	public override void OnPlayableCreate(Playable playable)
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0xDE783C", Offset = "0xDE783C", VA = "0xDE783C")]
	public NavMeshAgentControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000258")]
public class NavMeshAgentControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Transform> destination;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public NavMeshAgentControlBehaviour template;

	[Token(Token = "0x1700014C")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xDE7844", Offset = "0xDE7844", VA = "0xDE7844", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0xDE784C", Offset = "0xDE784C", VA = "0xDE784C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0xDE7960", Offset = "0xDE7960", VA = "0xDE7960")]
	public NavMeshAgentControlClip()
	{
	}
}
[Token(Token = "0x2000259")]
public class NavMeshAgentControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x60011B1")]
	[Address(RVA = "0xDE79C8", Offset = "0xDE79C8", VA = "0xDE79C8", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0xDE7C3C", Offset = "0xDE7C3C", VA = "0xDE7C3C")]
	public NavMeshAgentControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x200025A")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8CB4C8", Offset = "0x8CB4C8")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8CB4C8", Offset = "0x8CB4C8")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x8CB4C8", Offset = "0x8CB4C8")]
public class NavMeshAgentControlTrack : TrackAsset
{
	[Token(Token = "0x60011B3")]
	[Address(RVA = "0xDE7C44", Offset = "0xDE7C44", VA = "0xDE7C44", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0xDE7CDC", Offset = "0xDE7CDC", VA = "0xDE7CDC")]
	public NavMeshAgentControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200025B")]
public class ScreenFaderBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0xD8F31C", Offset = "0xD8F31C", VA = "0xD8F31C")]
	public ScreenFaderBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200025C")]
public class ScreenFaderClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScreenFaderBehaviour template;

	[Token(Token = "0x1700014D")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xD8F350", Offset = "0xD8F350", VA = "0xD8F350", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0xD8F358", Offset = "0xD8F358", VA = "0xD8F358", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0xD8F3F8", Offset = "0xD8F3F8", VA = "0xD8F3F8")]
	public ScreenFaderClip()
	{
	}
}
[Token(Token = "0x200025D")]
public class ScreenFaderMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image m_TrackBinding;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0xD8F45C", Offset = "0xD8F45C", VA = "0xD8F45C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0xD8F7A8", Offset = "0xD8F7A8", VA = "0xD8F7A8", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0xD8F880", Offset = "0xD8F880", VA = "0xD8F880")]
	public ScreenFaderMixerBehaviour()
	{
	}
}
[Token(Token = "0x200025E")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8CB57C", Offset = "0x8CB57C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8CB57C", Offset = "0x8CB57C")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x8CB57C", Offset = "0x8CB57C")]
public class ScreenFaderTrack : TrackAsset
{
	[Token(Token = "0x60011BC")]
	[Address(RVA = "0xD8F888", Offset = "0xD8F888", VA = "0xD8F888", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0xD8F920", Offset = "0xD8F920", VA = "0xD8F920", Slot = "18")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0xD8F928", Offset = "0xD8F928", VA = "0xD8F928")]
	public ScreenFaderTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200025F")]
public class TextSwitcherBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int fontSize;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string text;

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0xB31770", Offset = "0xB31770", VA = "0xB31770")]
	public TextSwitcherBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000260")]
public class TextSwitcherClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextSwitcherBehaviour template;

	[Token(Token = "0x1700014E")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xB317AC", Offset = "0xB317AC", VA = "0xB317AC", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0xB317B4", Offset = "0xB317B4", VA = "0xB317B4", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0xB31854", Offset = "0xB31854", VA = "0xB31854")]
	public TextSwitcherClip()
	{
	}
}
[Token(Token = "0x2000261")]
public class TextSwitcherMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_DefaultFontSize;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_DefaultText;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text m_TrackBinding;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0xB318B8", Offset = "0xB318B8", VA = "0xB318B8", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0xB31D6C", Offset = "0xB31D6C", VA = "0xB31D6C", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0xB31EA0", Offset = "0xB31EA0", VA = "0xB31EA0")]
	public TextSwitcherMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000262")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8CB62C", Offset = "0x8CB62C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8CB62C", Offset = "0x8CB62C")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x8CB62C", Offset = "0x8CB62C")]
public class TextSwitcherTrack : TrackAsset
{
	[Token(Token = "0x60011C6")]
	[Address(RVA = "0xB31EA8", Offset = "0xB31EA8", VA = "0xB31EA8", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0xB31F40", Offset = "0xB31F40", VA = "0xB31F40", Slot = "18")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0xB31F48", Offset = "0xB31F48", VA = "0xB31F48")]
	public TextSwitcherTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000263")]
public class TimeDilationBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeScale;

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0xB31FB0", Offset = "0xB31FB0", VA = "0xB31FB0")]
	public TimeDilationBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000264")]
public class TimeDilationClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimeDilationBehaviour template;

	[Token(Token = "0x1700014F")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xB31FC0", Offset = "0xB31FC0", VA = "0xB31FC0", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0xB31FC8", Offset = "0xB31FC8", VA = "0xB31FC8", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0xB32068", Offset = "0xB32068", VA = "0xB32068")]
	public TimeDilationClip()
	{
	}
}
[Token(Token = "0x2000265")]
public class TimeDilationMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float m_OldTimeScale;

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0xB320D8", Offset = "0xB320D8", VA = "0xB320D8", Slot = "15")]
	public override void OnPlayableCreate(Playable playable)
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0xB32100", Offset = "0xB32100", VA = "0xB32100", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0xB322A0", Offset = "0xB322A0", VA = "0xB322A0", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0xB322AC", Offset = "0xB322AC", VA = "0xB322AC")]
	public TimeDilationMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000266")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8CB6E0", Offset = "0x8CB6E0")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8CB6E0", Offset = "0x8CB6E0")]
public class TimeDilationTrack : TrackAsset
{
	[Token(Token = "0x60011D1")]
	[Address(RVA = "0xB322BC", Offset = "0xB322BC", VA = "0xB322BC", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0xB32354", Offset = "0xB32354", VA = "0xB32354")]
	public TimeDilationTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000267")]
public class TransformTweenBehaviour : PlayableBehaviour
{
	[Token(Token = "0x20005C9")]
	public enum TweenType
	{
		[Token(Token = "0x40021E0")]
		Linear,
		[Token(Token = "0x40021E1")]
		Deceleration,
		[Token(Token = "0x40021E2")]
		Harmonic,
		[Token(Token = "0x40021E3")]
		Custom
	}

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform startLocation;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform endLocation;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool tweenPosition;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool tweenRotation;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TweenType tweenType;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve customCurve;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 startingPosition;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Quaternion startingRotation;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AnimationCurve m_LinearCurve;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimationCurve m_DecelerationCurve;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnimationCurve m_HarmonicCurve;

	[Token(Token = "0x4001119")]
	private const float k_RightAngleInRads = (float)Math.PI / 2f;

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0xB32BEC", Offset = "0xB32BEC", VA = "0xB32BEC", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0xB32CA8", Offset = "0xB32CA8", VA = "0xB32CA8")]
	public float EvaluateCurrentCurve(float time)
	{
		return default(float);
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0xB32DAC", Offset = "0xB32DAC", VA = "0xB32DAC")]
	private bool IsCustomCurveNormalised()
	{
		return default(bool);
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0xB33038", Offset = "0xB33038", VA = "0xB33038")]
	public TransformTweenBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000268")]
public class TransformTweenClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TransformTweenBehaviour template;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<Transform> startLocation;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ExposedReference<Transform> endLocation;

	[Token(Token = "0x17000150")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xB33234", Offset = "0xB33234", VA = "0xB33234", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0xB3323C", Offset = "0xB3323C", VA = "0xB3323C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0xB33384", Offset = "0xB33384", VA = "0xB33384")]
	public TransformTweenClip()
	{
	}
}
[Token(Token = "0x2000269")]
public class TransformTweenMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0xB333E8", Offset = "0xB333E8", VA = "0xB333E8", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0xB33B90", Offset = "0xB33B90", VA = "0xB33B90", Slot = "16")]
	public override void OnPlayableDestroy(Playable playable)
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0xB33B7C", Offset = "0xB33B7C", VA = "0xB33B7C")]
	private static Quaternion AddQuaternions(Quaternion first, Quaternion second)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0xB33B68", Offset = "0xB33B68", VA = "0xB33B68")]
	private static Quaternion ScaleQuaternion(Quaternion rotation, float multiplier)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0xB33B98", Offset = "0xB33B98", VA = "0xB33B98")]
	private static float QuaternionMagnitude(Quaternion rotation)
	{
		return default(float);
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0xB33A6C", Offset = "0xB33A6C", VA = "0xB33A6C")]
	private static Quaternion NormalizeQuaternion(Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0xB33C84", Offset = "0xB33C84", VA = "0xB33C84")]
	public TransformTweenMixerBehaviour()
	{
	}
}
[Token(Token = "0x200026A")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8CB76C", Offset = "0x8CB76C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8CB76C", Offset = "0x8CB76C")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x8CB76C", Offset = "0x8CB76C")]
public class TransformTweenTrack : TrackAsset
{
	[Token(Token = "0x60011E1")]
	[Address(RVA = "0xB33C8C", Offset = "0xB33C8C", VA = "0xB33C8C", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0xB33D24", Offset = "0xB33D24", VA = "0xB33D24", Slot = "18")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0xB33D2C", Offset = "0xB33D2C", VA = "0xB33D2C")]
	public TransformTweenTrack()
	{
	}
}
[Token(Token = "0x200026B")]
public enum UIType
{
	[Token(Token = "0x400111F")]
	None,
	[Token(Token = "0x4001120")]
	Welcome,
	[Token(Token = "0x4001121")]
	Invocation,
	[Token(Token = "0x4001122")]
	Finish
}
[Token(Token = "0x200026C")]
public class TestTimeLineEvent : MonoBehaviour
{
	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent myEvent;

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0xB3096C", Offset = "0xB3096C", VA = "0xB3096C")]
	public void Changecolor()
	{
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0xB30A28", Offset = "0xB30A28", VA = "0xB30A28")]
	public void DoWiggle(float howLong)
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0xB30A68", Offset = "0xB30A68", VA = "0xB30A68")]
	public void DoLinkedEvent()
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0xB30A98", Offset = "0xB30A98", VA = "0xB30A98")]
	public TestTimeLineEvent()
	{
	}
}
[Token(Token = "0x200026D")]
public class TimeLord : MonoBehaviour
{
	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableDirector myDirector;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public double duration;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public double currentTime;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent endingEvent;

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0xB323BC", Offset = "0xB323BC", VA = "0xB323BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0xB3248C", Offset = "0xB3248C", VA = "0xB3248C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0xB32534", Offset = "0xB32534", VA = "0xB32534")]
	public void Pause()
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0xB32564", Offset = "0xB32564", VA = "0xB32564")]
	public void Play()
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0xB32594", Offset = "0xB32594", VA = "0xB32594")]
	public void ChangeTimePause(int theTime)
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0xB32600", Offset = "0xB32600", VA = "0xB32600")]
	public void ChangeTimePlay(int theTime)
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0xB3266C", Offset = "0xB3266C", VA = "0xB3266C")]
	public TimeLord()
	{
	}
}
[Token(Token = "0x200026E")]
public class SetCorrectCameraHeight : MonoBehaviour
{
	[Token(Token = "0x20005CA")]
	private enum TrackingSpace
	{
		[Token(Token = "0x40021E5")]
		Stationary,
		[Token(Token = "0x40021E6")]
		RoomScale
	}

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE690", Offset = "0x8DE690")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DE690", Offset = "0x8DE690")]
	private TrackingSpace m_TrackingSpace;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DE700", Offset = "0x8DE700")]
	private float m_StationaryCameraYOffset;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DE74C", Offset = "0x8DE74C")]
	private GameObject m_CameraFloorOffsetObject;

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0xD91AEC", Offset = "0xD91AEC", VA = "0xD91AEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0xD91BA4", Offset = "0xD91BA4", VA = "0xD91BA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0xD91BA8", Offset = "0xD91BA8", VA = "0xD91BA8")]
	private void SetCameraHeight()
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0xD91DA0", Offset = "0xD91DA0", VA = "0xD91DA0")]
	public SetCorrectCameraHeight()
	{
	}
}
[Token(Token = "0x200026F")]
public enum HandPoseId
{
	[Token(Token = "0x400112C")]
	Default,
	[Token(Token = "0x400112D")]
	Generic,
	[Token(Token = "0x400112E")]
	PingPongBall,
	[Token(Token = "0x400112F")]
	Controller
}
[Token(Token = "0x2000270")]
public class VRGrabHandPose : MonoBehaviour
{
	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool m_allowPointing;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool m_allowThumbsUp;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private HandPoseId m_poseId;

	[Token(Token = "0x17000151")]
	public bool AllowPointing
	{
		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xD5A308", Offset = "0xD5A308", VA = "0xD5A308")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000152")]
	public bool AllowThumbsUp
	{
		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xD5A310", Offset = "0xD5A310", VA = "0xD5A310")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000153")]
	public HandPoseId PoseId
	{
		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xD5A318", Offset = "0xD5A318", VA = "0xD5A318")]
		get
		{
			return default(HandPoseId);
		}
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0xD5A320", Offset = "0xD5A320", VA = "0xD5A320")]
	public VRGrabHandPose()
	{
	}
}
[Token(Token = "0x2000271")]
public class VRHandAnimator : MonoBehaviour
{
	[Token(Token = "0x4001133")]
	public const string ANIM_LAYER_NAME_POINT = "Point Layer";

	[Token(Token = "0x4001134")]
	public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

	[Token(Token = "0x4001135")]
	public const string ANIM_PARAM_NAME_FLEX = "Flex";

	[Token(Token = "0x4001136")]
	public const string ANIM_PARAM_NAME_POSE = "Pose";

	[Token(Token = "0x4001137")]
	public const float THRESH_COLLISION_FLEX = 200f;

	[Token(Token = "0x4001138")]
	public const float INPUT_RATE_CHANGE = 20f;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int hand;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Pvr_KeyCode button;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float closingHand;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float pointingFinger;

	[Token(Token = "0x400113D")]
	public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

	[Token(Token = "0x400113E")]
	public const float THUMB_DEBOUNCE_TIME = 0.15f;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Animator m_animator;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private VRGrabHandPose m_defaultGrabPose;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VRSimpleGrabSystem m_grabber;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Renderer> m_showAfterInputFocusAcquired;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_animLayerIndexThumb;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int m_animLayerIndexPoint;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_animParamIndexFlex;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int m_animParamIndexPose;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool m_isPointing;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool m_isGivingThumbsUp;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_pointBlend;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_thumbsUpBlend;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0xD5D1D4", Offset = "0xD5D1D4", VA = "0xD5D1D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0xD5D358", Offset = "0xD5D358", VA = "0xD5D358")]
	private void Update()
	{
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0xD5D418", Offset = "0xD5D418", VA = "0xD5D418")]
	private void UpdateCapTouchStates()
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0xD5D774", Offset = "0xD5D774", VA = "0xD5D774")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0xD5D778", Offset = "0xD5D778", VA = "0xD5D778")]
	private void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0xD5D91C", Offset = "0xD5D91C", VA = "0xD5D91C")]
	private void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0xD5D464", Offset = "0xD5D464", VA = "0xD5D464")]
	private float InputValueRateChange(bool isDown, float value)
	{
		return default(float);
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0xD5D504", Offset = "0xD5D504", VA = "0xD5D504")]
	private void UpdateAnimStates()
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0xD5DA6C", Offset = "0xD5DA6C", VA = "0xD5DA6C")]
	public VRHandAnimator()
	{
	}
}
[Token(Token = "0x2000272")]
public class EscapeAndRecenter : MonoBehaviour
{
	[Token(Token = "0x6001200")]
	[Address(RVA = "0xC8CF78", Offset = "0xC8CF78", VA = "0xC8CF78")]
	private void Start()
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0xC8CF7C", Offset = "0xC8CF7C", VA = "0xC8CF7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0xC8D03C", Offset = "0xC8D03C", VA = "0xC8D03C")]
	public void MakeRecenter()
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0xC8D09C", Offset = "0xC8D09C", VA = "0xC8D09C")]
	public EscapeAndRecenter()
	{
	}
}
[Token(Token = "0x2000273")]
public class Facing : MonoBehaviour
{
	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject faceTo;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool facePlayer;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isFacing;

	[Token(Token = "0x6001204")]
	[Address(RVA = "0xC0318C", Offset = "0xC0318C", VA = "0xC0318C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0xC03224", Offset = "0xC03224", VA = "0xC03224")]
	private void Update()
	{
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0xC03234", Offset = "0xC03234", VA = "0xC03234")]
	private void FaceObject()
	{
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0xC032A8", Offset = "0xC032A8", VA = "0xC032A8")]
	public Facing()
	{
	}
}
[Token(Token = "0x2000274")]
public class GetPivots : MonoBehaviour
{
	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform GrabObject;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform AnchorPoint;

	[Token(Token = "0x6001208")]
	[Address(RVA = "0xC08F00", Offset = "0xC08F00", VA = "0xC08F00")]
	private void Start()
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0xC08F0C", Offset = "0xC08F0C", VA = "0xC08F0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0xC09378", Offset = "0xC09378", VA = "0xC09378")]
	public GetPivots()
	{
	}
}
[Token(Token = "0x2000275")]
public class MovementSFX : MonoBehaviour
{
	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 holder;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float amount;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float timeScale;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float rotateSpeed;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ShouldRotate;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool RandomRotation;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool randomTimeScale;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 rotationDirection;

	[Token(Token = "0x600120B")]
	[Address(RVA = "0xBD5614", Offset = "0xBD5614", VA = "0xBD5614")]
	private void Start()
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0xBD5678", Offset = "0xBD5678", VA = "0xBD5678")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0xBD5818", Offset = "0xBD5818", VA = "0xBD5818")]
	public MovementSFX()
	{
	}
}
[Token(Token = "0x2000276")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CB820", Offset = "0x8CB820")]
public class SimpleLineConnector : MonoBehaviour
{
	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer myLine;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform LineTo;

	[Token(Token = "0x600120E")]
	[Address(RVA = "0xEDD12C", Offset = "0xEDD12C", VA = "0xEDD12C")]
	private void Start()
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0xEDD25C", Offset = "0xEDD25C", VA = "0xEDD25C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0xEDD334", Offset = "0xEDD334", VA = "0xEDD334")]
	public SimpleLineConnector()
	{
	}
}
[Token(Token = "0x2000277")]
public class ToggleObjects : MonoBehaviour
{
	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode myKey;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] ThingsToToggle;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isOn;

	[Token(Token = "0x6001211")]
	[Address(RVA = "0xB32AE8", Offset = "0xB32AE8", VA = "0xB32AE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0xB32AF4", Offset = "0xB32AF4", VA = "0xB32AF4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0xB32B30", Offset = "0xB32B30", VA = "0xB32B30")]
	private void ToggleThings()
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0xB32BE4", Offset = "0xB32BE4", VA = "0xB32BE4")]
	public ToggleObjects()
	{
	}
}
[Token(Token = "0x2000278")]
public class HapticHelper : MonoBehaviour
{
	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HapticHelper instance;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRHaptics.OVRHapticsChannel m_hapticsChannelL;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRHaptics.OVRHapticsChannel m_hapticsChannelR;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE7E8", Offset = "0x8DE7E8")]
	public AudioClip GoodAudio;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip BadAudio;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] ExtraAudioClips;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVRHapticsClip GoodClip;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private OVRHapticsClip BadClip;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRHapticsClip proceduralClip;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRHapticsClip ExtraClip;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE820", Offset = "0x8DE820")]
	public bool AlwaysPreempt;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE858", Offset = "0x8DE858")]
	public bool TestMode;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public OVRInput.Controller myController;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public OVRInput.Button ClipButton;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public OVRInput.Button ProceduralButton;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip ClipToTest;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE890", Offset = "0x8DE890")]
	public bool continuous;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE8C8", Offset = "0x8DE8C8")]
	public int pIntensity;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE8E4", Offset = "0x8DE8E4")]
	public int pLength;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool useSin;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float SinSpeed;

	[Token(Token = "0x6001215")]
	[Address(RVA = "0xC0E4F4", Offset = "0xC0E4F4", VA = "0xC0E4F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001216")]
	[Address(RVA = "0xC0E608", Offset = "0xC0E608", VA = "0xC0E608")]
	private void Start()
	{
	}

	[Token(Token = "0x6001217")]
	[Address(RVA = "0xC0E764", Offset = "0xC0E764", VA = "0xC0E764")]
	public void Update()
	{
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0xC0EB6C", Offset = "0xC0EB6C", VA = "0xC0EB6C")]
	public void PlayGoodClip(bool isLeft, bool preempt = false)
	{
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0xC0ECE4", Offset = "0xC0ECE4", VA = "0xC0ECE4")]
	public void PlayBadClip(bool isLeft, bool preempt = false)
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0xC0ED98", Offset = "0xC0ED98", VA = "0xC0ED98")]
	public void PlayExtraClips(bool isLeft, int index, bool preempt = false)
	{
	}

	[Token(Token = "0x600121B")]
	[Address(RVA = "0xC0E8E0", Offset = "0xC0E8E0", VA = "0xC0E8E0")]
	public void PlayHapticAudioClip(bool isLeft, AudioClip aClip, bool preempt = false)
	{
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0xC0EA48", Offset = "0xC0EA48", VA = "0xC0EA48")]
	public void ProceduralTone(bool Left, int intensity, int length = 25)
	{
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0xC0E984", Offset = "0xC0E984", VA = "0xC0E984")]
	public void GenerateSinPulse(bool Left, int intensity, float speed, int length = 25)
	{
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0xC0EC68", Offset = "0xC0EC68", VA = "0xC0EC68")]
	public void ClipPlayer(bool isLeft, OVRHapticsClip clip)
	{
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0xC0EC20", Offset = "0xC0EC20", VA = "0xC0EC20")]
	public void ClipPlayerNow(bool isLeft, OVRHapticsClip clip)
	{
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0xC0EE74", Offset = "0xC0EE74", VA = "0xC0EE74")]
	public HapticHelper()
	{
	}
}
[Token(Token = "0x2000279")]
public class PlayHapticEvent : MonoBehaviour
{
	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool playGood;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool playBad;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool playIndex;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool playProcedrual;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool playClip;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int index;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip aClip;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE900", Offset = "0x8DE900")]
	public bool continuous;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE938", Offset = "0x8DE938")]
	public int pIntensity;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DE954", Offset = "0x8DE954")]
	public int pLength;

	[Token(Token = "0x6001221")]
	[Address(RVA = "0xE9D3DC", Offset = "0xE9D3DC", VA = "0xE9D3DC")]
	private void OnTriggerEnter(Collider col)
	{
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0xE9D7D0", Offset = "0xE9D7D0", VA = "0xE9D7D0")]
	private void OnTriggerStay(Collider col)
	{
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0xE9D930", Offset = "0xE9D930", VA = "0xE9D930")]
	public PlayHapticEvent()
	{
	}
}
[Token(Token = "0x200027A")]
public class SetColorRandom : MonoBehaviour
{
	[Token(Token = "0x6001224")]
	[Address(RVA = "0xD91A04", Offset = "0xD91A04", VA = "0xD91A04")]
	public void SetColor()
	{
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0xD91AE0", Offset = "0xD91AE0", VA = "0xD91AE0")]
	public void Click()
	{
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0xD91AE4", Offset = "0xD91AE4", VA = "0xD91AE4")]
	public SetColorRandom()
	{
	}
}
[Token(Token = "0x200027B")]
public class VRInputComponent : MonoBehaviour
{
	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DE970", Offset = "0x8DE970")]
	public UnityEvent useEvent;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isButton;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool useCustomMessage;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string message;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool usesTriggers;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool useGrabNThrow;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string searchTag;

	[Token(Token = "0x6001227")]
	[Address(RVA = "0xD5DA7C", Offset = "0xD5DA7C", VA = "0xD5DA7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0xD5DB10", Offset = "0xD5DB10", VA = "0xD5DB10")]
	public void Use()
	{
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0xD5DBD8", Offset = "0xD5DBD8", VA = "0xD5DBD8")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0xD5DCD8", Offset = "0xD5DCD8", VA = "0xD5DCD8")]
	public VRInputComponent()
	{
	}
}
[Token(Token = "0x200027C")]
public class VRInputRay : MonoBehaviour
{
	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Pvr_KeyCode button;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hand;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool canDoInput;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rayDistance;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pointer;

	[Token(Token = "0x600122B")]
	[Address(RVA = "0xD5DCE0", Offset = "0xD5DCE0", VA = "0xD5DCE0")]
	private void Update()
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0xD5DCF0", Offset = "0xD5DCF0", VA = "0xD5DCF0")]
	private void InputControl()
	{
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0xD5DFA0", Offset = "0xD5DFA0", VA = "0xD5DFA0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0xD5DFB0", Offset = "0xD5DFB0", VA = "0xD5DFB0")]
	private void ShowRay()
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0xD5E17C", Offset = "0xD5E17C", VA = "0xD5E17C")]
	private void MovePointer(RaycastHit hit)
	{
	}

	[Token(Token = "0x6001230")]
	[Address(RVA = "0xD5E14C", Offset = "0xD5E14C", VA = "0xD5E14C")]
	private void HidePointer()
	{
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0xD5E2B4", Offset = "0xD5E2B4", VA = "0xD5E2B4")]
	public VRInputRay()
	{
	}
}
[Token(Token = "0x200027D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB884", Offset = "0x8CB884")]
public class AmplifyColorBase : MonoBehaviour
{
	[Token(Token = "0x4001189")]
	public const int LutSize = 32;

	[Token(Token = "0x400118A")]
	public const int LutWidth = 1024;

	[Token(Token = "0x400118B")]
	public const int LutHeight = 32;

	[Token(Token = "0x400118C")]
	private const int DepthCurveLutRange = 1024;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Tonemapping Tonemapper;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Exposure;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LinearWhitePoint;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DE9A8", Offset = "0x8DE9A8")]
	public bool ApplyDithering;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Quality QualityLevel;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float BlendAmount;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture LutTexture;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture LutBlendTexture;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture MaskTexture;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool UseDepthMask;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve DepthMaskCurve;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UseVolumes;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float ExitVolumeBlendTime;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform TriggerVolumeProxy;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LayerMask VolumeCollisionMask;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Camera ownerCamera;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Shader shaderBase;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Shader shaderBlend;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Shader shaderBlendCache;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Shader shaderMask;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Shader shaderMaskBlend;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Shader shaderDepthMask;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Shader shaderDepthMaskBlend;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Shader shaderProcessOnly;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private RenderTexture blendCacheLut;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Texture2D defaultLut;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Texture2D depthCurveLut;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Color32[] depthCurveColors;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private ColorSpace colorSpace;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Quality qualityLevel;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Material materialBase;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Material materialBlend;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Material materialBlendCache;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Material materialMask;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Material materialMaskBlend;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Material materialDepthMask;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Material materialDepthMaskBlend;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Material materialProcessOnly;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool blending;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float blendingTime;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float blendingTimeCountdown;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Action onFinishBlend;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private AnimationCurve prevDepthMaskCurve;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool volumesBlending;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float volumesBlendingTime;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float volumesBlendingTimeCountdown;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Texture volumesLutBlendTexture;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float volumesBlendAmount;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Texture worldLUT;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private AmplifyColorVolumeBase currentVolumeLut;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private RenderTexture midBlendLUT;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool blendingFromMidBlend;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private VolumeEffect worldVolumeEffects;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private VolumeEffect currentVolumeEffects;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private VolumeEffect blendVolumeEffects;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float worldExposure;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float currentExposure;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private float blendExposure;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float effectVolumesBlendAdjust;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private List<AmplifyColorVolumeBase> enteredVolumes;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private AmplifyColorTriggerProxyBase actualTriggerProxy;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	[HideInInspector]
	public VolumeEffectFlags EffectFlags;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[SerializeField]
	[HideInInspector]
	private string sharedInstanceID;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool silentError;

	[Token(Token = "0x17000154")]
	public Texture2D DefaultLut
	{
		[Token(Token = "0x6001232")]
		[Address(RVA = "0xF397E0", Offset = "0xF397E0", VA = "0xF397E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000155")]
	public bool IsBlending
	{
		[Token(Token = "0x6001233")]
		[Address(RVA = "0xF39B20", Offset = "0xF39B20", VA = "0xF39B20")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000156")]
	private float effectVolumesBlendAdjusted
	{
		[Token(Token = "0x6001234")]
		[Address(RVA = "0xF39B28", Offset = "0xF39B28", VA = "0xF39B28")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000157")]
	public string SharedInstanceID
	{
		[Token(Token = "0x6001235")]
		[Address(RVA = "0xF38894", Offset = "0xF38894", VA = "0xF38894")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000158")]
	public bool WillItBlend
	{
		[Token(Token = "0x6001236")]
		[Address(RVA = "0xF39BC8", Offset = "0xF39BC8", VA = "0xF39BC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0xF39C8C", Offset = "0xF39C8C", VA = "0xF39C8C")]
	public void NewSharedInstanceID()
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0xF39D14", Offset = "0xF39D14", VA = "0xF39D14")]
	private void ReportMissingShaders()
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0xF39D94", Offset = "0xF39D94", VA = "0xF39D94")]
	private void ReportNotSupported()
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0xF39E14", Offset = "0xF39E14", VA = "0xF39E14")]
	private bool CheckShader(Shader s)
	{
		return default(bool);
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0xF39ED0", Offset = "0xF39ED0", VA = "0xF39ED0")]
	private bool CheckShaders()
	{
		return default(bool);
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0xF39F50", Offset = "0xF39F50", VA = "0xF39F50")]
	private bool CheckSupport()
	{
		return default(bool);
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0xF39F8C", Offset = "0xF39F8C", VA = "0xF39F8C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0xF3A3DC", Offset = "0xF3A3DC", VA = "0xF3A3DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0xF3A610", Offset = "0xF3A610", VA = "0xF3A610")]
	private void VolumesBlendTo(Texture blendTargetLUT, float blendTimeInSec)
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0xF3A62C", Offset = "0xF3A62C", VA = "0xF3A62C")]
	public void BlendTo(Texture blendTargetLUT, float blendTimeInSec, Action onFinishBlend)
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0xF3A64C", Offset = "0xF3A64C", VA = "0xF3A64C")]
	private void CheckCamera()
	{
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0xF3A758", Offset = "0xF3A758", VA = "0xF3A758")]
	private void Start()
	{
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0xF3A7C0", Offset = "0xF3A7C0", VA = "0xF3A7C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001244")]
	[Address(RVA = "0xF3B318", Offset = "0xF3B318", VA = "0xF3B318")]
	public void EnterVolume(AmplifyColorVolumeBase volume)
	{
	}

	[Token(Token = "0x6001245")]
	[Address(RVA = "0xF3B3C8", Offset = "0xF3B3C8", VA = "0xF3B3C8")]
	public void ExitVolume(AmplifyColorVolumeBase volume)
	{
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0xF3ABDC", Offset = "0xF3ABDC", VA = "0xF3ABDC")]
	private void UpdateVolumes()
	{
	}

	[Token(Token = "0x6001247")]
	[Address(RVA = "0xF3B474", Offset = "0xF3B474", VA = "0xF3B474")]
	private void SetupShader()
	{
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0xF3A4B4", Offset = "0xF3A4B4", VA = "0xF3A4B4")]
	private void ReleaseMaterials()
	{
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0xF3986C", Offset = "0xF3986C", VA = "0xF3986C")]
	private Texture2D CreateDefaultLut()
	{
		return null;
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0xF3B584", Offset = "0xF3B584", VA = "0xF3B584")]
	private Texture2D CreateDepthCurveLut()
	{
		return null;
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0xF3B710", Offset = "0xF3B710", VA = "0xF3B710")]
	private void UpdateDepthCurveLut()
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0xF3B8A8", Offset = "0xF3B8A8", VA = "0xF3B8A8")]
	private void CheckUpdateDepthCurveLut()
	{
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0xF3BAA8", Offset = "0xF3BAA8", VA = "0xF3BAA8")]
	private void CreateHelperTextures()
	{
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0xF3BD2C", Offset = "0xF3BD2C", VA = "0xF3BD2C")]
	private bool CheckMaterialAndShader(Material material, string name)
	{
		return default(bool);
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0xF3A17C", Offset = "0xF3A17C", VA = "0xF3A17C")]
	private bool CreateMaterials()
	{
		return default(bool);
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0xF3BED4", Offset = "0xF3BED4", VA = "0xF3BED4")]
	private void SetMaterialKeyword(string keyword, bool state)
	{
	}

	[Token(Token = "0x6001251")]
	private void SafeRelease<T>(ref T obj) where T : UnityEngine.Object
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0xF3A578", Offset = "0xF3A578", VA = "0xF3A578")]
	private void ReleaseTextures()
	{
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0xF3C168", Offset = "0xF3C168", VA = "0xF3C168")]
	public static bool ValidateLutDimensions(Texture lut)
	{
		return default(bool);
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0xF3C2FC", Offset = "0xF3C2FC", VA = "0xF3C2FC")]
	private void UpdatePostEffectParams()
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0xF3C38C", Offset = "0xF3C38C", VA = "0xF3C38C")]
	private int ComputeShaderPass()
	{
		return default(int);
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0xF3C410", Offset = "0xF3C410", VA = "0xF3C410")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0xF3CFD4", Offset = "0xF3CFD4", VA = "0xF3CFD4")]
	public AmplifyColorBase()
	{
	}
}
[Token(Token = "0x200027E")]
[ImageEffectAllowedInSceneView]
[ImageEffectTransformsToLDR]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB8BC", Offset = "0x8CB8BC")]
public sealed class AmplifyColorEffect : AmplifyColorBase
{
	[Token(Token = "0x6001258")]
	[Address(RVA = "0xF3D1DC", Offset = "0xF3D1DC", VA = "0xF3D1DC")]
	public AmplifyColorEffect()
	{
	}
}
[Token(Token = "0x200027F")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CB928", Offset = "0x8CB928")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CB928", Offset = "0x8CB928")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB928", Offset = "0x8CB928")]
public class AmplifyColorRenderMask : AmplifyColorRenderMaskBase
{
	[Token(Token = "0x6001259")]
	[Address(RVA = "0xF3D1E0", Offset = "0xF3D1E0", VA = "0xF3D1E0")]
	public AmplifyColorRenderMask()
	{
	}
}
[Token(Token = "0x2000280")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CB9E8", Offset = "0x8CB9E8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CB9E8", Offset = "0x8CB9E8")]
public class AmplifyColorRenderMaskBase : MonoBehaviour
{
	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DEA28", Offset = "0x8DEA28")]
	public Color ClearColor;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DEA60", Offset = "0x8DEA60")]
	public RenderLayer[] RenderLayers;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DEA98", Offset = "0x8DEA98")]
	public bool DebugMask;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera referenceCamera;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Camera maskCamera;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AmplifyColorBase colorEffect;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int width;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int height;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderTexture maskTexture;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Shader colorMaskShader;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool singlePassStereo;

	[Token(Token = "0x600125A")]
	[Address(RVA = "0xF3D254", Offset = "0xF3D254", VA = "0xF3D254")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600125B")]
	[Address(RVA = "0xF3D4A0", Offset = "0xF3D4A0", VA = "0xF3D4A0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600125C")]
	[Address(RVA = "0xF3D4C4", Offset = "0xF3D4C4", VA = "0xF3D4C4")]
	private void DestroyCamera()
	{
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0xF3D590", Offset = "0xF3D590", VA = "0xF3D590")]
	private void DestroyRenderTextures()
	{
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0xF3D648", Offset = "0xF3D648", VA = "0xF3D648")]
	private void UpdateRenderTextures(bool singlePassStereo)
	{
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0xF3D964", Offset = "0xF3D964", VA = "0xF3D964")]
	private void UpdateCameraProperties()
	{
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0xF3DABC", Offset = "0xF3DABC", VA = "0xF3DABC")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0xF3D1E4", Offset = "0xF3D1E4", VA = "0xF3D1E4")]
	public AmplifyColorRenderMaskBase()
	{
	}
}
[Token(Token = "0x2000281")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CBA80", Offset = "0x8CBA80")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CBA80", Offset = "0x8CBA80")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBA80", Offset = "0x8CBA80")]
public class AmplifyColorTriggerProxy : AmplifyColorTriggerProxyBase
{
	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SphereCollider sphereCollider;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rigidBody;

	[Token(Token = "0x6001262")]
	[Address(RVA = "0xF3E138", Offset = "0xF3E138", VA = "0xF3E138")]
	private void Start()
	{
	}

	[Token(Token = "0x6001263")]
	[Address(RVA = "0xF3E220", Offset = "0xF3E220", VA = "0xF3E220")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001264")]
	[Address(RVA = "0xF3E30C", Offset = "0xF3E30C", VA = "0xF3E30C")]
	public AmplifyColorTriggerProxy()
	{
	}
}
[Token(Token = "0x2000282")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CBB30", Offset = "0x8CBB30")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CBB30", Offset = "0x8CBB30")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBB30", Offset = "0x8CBB30")]
public class AmplifyColorTriggerProxy2D : AmplifyColorTriggerProxyBase
{
	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CircleCollider2D circleCollider;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody2D rigidBody;

	[Token(Token = "0x6001265")]
	[Address(RVA = "0xF3E31C", Offset = "0xF3E31C", VA = "0xF3E31C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001266")]
	[Address(RVA = "0xF3E404", Offset = "0xF3E404", VA = "0xF3E404")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001267")]
	[Address(RVA = "0xF3E4F0", Offset = "0xF3E4F0", VA = "0xF3E4F0")]
	public AmplifyColorTriggerProxy2D()
	{
	}
}
[Token(Token = "0x2000283")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBBE0", Offset = "0x8CBBE0")]
public class AmplifyColorTriggerProxyBase : MonoBehaviour
{
	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Reference;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AmplifyColorBase OwnerEffect;

	[Token(Token = "0x6001268")]
	[Address(RVA = "0xF3E314", Offset = "0xF3E314", VA = "0xF3E314")]
	public AmplifyColorTriggerProxyBase()
	{
	}
}
[Token(Token = "0x2000284")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CBC18", Offset = "0x8CBC18")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBC18", Offset = "0x8CBC18")]
public class AmplifyColorVolume : AmplifyColorVolumeBase
{
	[Token(Token = "0x6001269")]
	[Address(RVA = "0xF3E4F8", Offset = "0xF3E4F8", VA = "0xF3E4F8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0xF3E644", Offset = "0xF3E644", VA = "0xF3E644")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0xF3E790", Offset = "0xF3E790", VA = "0xF3E790")]
	public AmplifyColorVolume()
	{
	}
}
[Token(Token = "0x2000285")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CBCA0", Offset = "0x8CBCA0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBCA0", Offset = "0x8CBCA0")]
public class AmplifyColorVolume2D : AmplifyColorVolumeBase
{
	[Token(Token = "0x600126C")]
	[Address(RVA = "0xF3E808", Offset = "0xF3E808", VA = "0xF3E808")]
	private void OnTriggerEnter2D(Collider2D other)
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0xF3E954", Offset = "0xF3E954", VA = "0xF3E954")]
	private void OnTriggerExit2D(Collider2D other)
	{
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0xF3EAA0", Offset = "0xF3EAA0", VA = "0xF3EAA0")]
	public AmplifyColorVolume2D()
	{
	}
}
[Token(Token = "0x2000286")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBD28", Offset = "0x8CBD28")]
public class AmplifyColorVolumeBase : MonoBehaviour
{
	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D LutTexture;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Exposure;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float EnterBlendTime;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Priority;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool ShowInSceneView;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public VolumeEffectContainer EffectContainer;

	[Token(Token = "0x600126F")]
	[Address(RVA = "0xF3EAA4", Offset = "0xF3EAA4", VA = "0xF3EAA4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0xF3ED10", Offset = "0xF3ED10", VA = "0xF3ED10")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0xF3E794", Offset = "0xF3E794", VA = "0xF3E794")]
	public AmplifyColorVolumeBase()
	{
	}
}
[Token(Token = "0x2000287")]
[ExecuteInEditMode]
public class ES2Init : MonoBehaviour
{
	[Token(Token = "0x6001272")]
	[Address(RVA = "0xC880B8", Offset = "0xC880B8", VA = "0xC880B8")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0xC894C0", Offset = "0xC894C0", VA = "0xC894C0")]
	public void Start()
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0xC880BC", Offset = "0xC880BC", VA = "0xC880BC")]
	public static void Init()
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0xC89898", Offset = "0xC89898", VA = "0xC89898")]
	public ES2Init()
	{
	}
}
[Token(Token = "0x2000288")]
public class ES2UniqueID : MonoBehaviour
{
	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public int id;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string prefabName;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<ES2UniqueID> uniqueIDList;

	[Token(Token = "0x6001276")]
	[Address(RVA = "0xC898A0", Offset = "0xC898A0", VA = "0xC898A0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0xC89A50", Offset = "0xC89A50", VA = "0xC89A50")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0xC89934", Offset = "0xC89934", VA = "0xC89934")]
	private static int GenerateUniqueID()
	{
		return default(int);
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0xC89ADC", Offset = "0xC89ADC", VA = "0xC89ADC")]
	public static ES2UniqueID FindUniqueID(Transform t)
	{
		return null;
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0xC89C7C", Offset = "0xC89C7C", VA = "0xC89C7C")]
	public static Transform FindTransform(int id)
	{
		return null;
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0xC89DEC", Offset = "0xC89DEC", VA = "0xC89DEC")]
	public ES2UniqueID()
	{
	}
}
[Token(Token = "0x2000289")]
public class UniqueGameLogic : MonoBehaviour
{
	[Token(Token = "0x20005CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD02C", Offset = "0x8CD02C")]
	private sealed class <DestroyOrCreateRoutine>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delaySeconds;

		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float runEverySeconds;

		[Token(Token = "0x170002E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025A2")]
			[Address(RVA = "0xD54BD8", Offset = "0xD54BD8", VA = "0xD54BD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025A4")]
			[Address(RVA = "0xD54C48", Offset = "0xD54C48", VA = "0xD54C48", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0xD54158", Offset = "0xD54158", VA = "0xD54158")]
		[DebuggerHidden]
		public <DestroyOrCreateRoutine>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0xD541E4", Offset = "0xD541E4", VA = "0xD541E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0xD541E8", Offset = "0xD541E8", VA = "0xD541E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0xD54BE0", Offset = "0xD54BE0", VA = "0xD54BE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD03C", Offset = "0x8CD03C")]
	private sealed class <MakeChildRoutine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delaySeconds;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float runEverySeconds;

		[Token(Token = "0x170002E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025A8")]
			[Address(RVA = "0xD54E6C", Offset = "0xD54E6C", VA = "0xD54E6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025AA")]
			[Address(RVA = "0xD54EDC", Offset = "0xD54EDC", VA = "0xD54EDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0xD54184", Offset = "0xD54184", VA = "0xD54184")]
		[DebuggerHidden]
		public <MakeChildRoutine>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0xD54C50", Offset = "0xD54C50", VA = "0xD54C50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0xD54C54", Offset = "0xD54C54", VA = "0xD54C54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0xD54E74", Offset = "0xD54E74", VA = "0xD54E74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD04C", Offset = "0x8CD04C")]
	private sealed class <ScaleRoutine>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delaySeconds;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float runEverySeconds;

		[Token(Token = "0x170002E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025AE")]
			[Address(RVA = "0xD55118", Offset = "0xD55118", VA = "0xD55118", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025B0")]
			[Address(RVA = "0xD55188", Offset = "0xD55188", VA = "0xD55188", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0xD541B0", Offset = "0xD541B0", VA = "0xD541B0")]
		[DebuggerHidden]
		public <ScaleRoutine>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0xD54EE4", Offset = "0xD54EE4", VA = "0xD54EE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0xD54EE8", Offset = "0xD54EE8", VA = "0xD54EE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0xD55120", Offset = "0xD55120", VA = "0xD55120", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0xD53F14", Offset = "0xD53F14", VA = "0xD53F14")]
	public void Start()
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0xD53F90", Offset = "0xD53F90", VA = "0xD53F90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EAAE0", Offset = "0x8EAAE0")]
	public IEnumerator DestroyOrCreateRoutine(float delaySeconds, float runEverySeconds)
	{
		return null;
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0xD540C0", Offset = "0xD540C0", VA = "0xD540C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EAB44", Offset = "0x8EAB44")]
	public IEnumerator MakeChildRoutine(float delaySeconds, float runEverySeconds)
	{
		return null;
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0xD54028", Offset = "0xD54028", VA = "0xD54028")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EABA8", Offset = "0x8EABA8")]
	public IEnumerator ScaleRoutine(float delaySeconds, float runEverySeconds)
	{
		return null;
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0xD541DC", Offset = "0xD541DC", VA = "0xD541DC")]
	public UniqueGameLogic()
	{
	}
}
[Token(Token = "0x200028A")]
public class UniqueObjectManager : MonoBehaviour
{
	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] sceneObjects;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] prefabs;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<GameObject> createdObjects;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static UniqueObjectManager mgr;

	[Token(Token = "0x17000159")]
	public static GameObject[] SceneObjects
	{
		[Token(Token = "0x6001287")]
		[Address(RVA = "0xD550A0", Offset = "0xD550A0", VA = "0xD550A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015A")]
	public static GameObject[] Prefabs
	{
		[Token(Token = "0x6001288")]
		[Address(RVA = "0xD54920", Offset = "0xD54920", VA = "0xD54920")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015B")]
	public static List<GameObject> CreatedObjects
	{
		[Token(Token = "0x6001289")]
		[Address(RVA = "0xD544BC", Offset = "0xD544BC", VA = "0xD544BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0xD54998", Offset = "0xD54998", VA = "0xD54998")]
	public static GameObject InstantiatePrefab(string prefabName, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0xD552F4", Offset = "0xD552F4", VA = "0xD552F4")]
	public static GameObject InstantiatePrefab(string prefabName)
	{
		return null;
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0xD54524", Offset = "0xD54524", VA = "0xD54524")]
	public static void DestroyObject(GameObject obj)
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0xD55190", Offset = "0xD55190", VA = "0xD55190")]
	public static GameObject FindPrefabWithName(string prefabName)
	{
		return null;
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0xD55400", Offset = "0xD55400", VA = "0xD55400")]
	public void Awake()
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0xD55490", Offset = "0xD55490", VA = "0xD55490")]
	public UniqueObjectManager()
	{
	}
}
[Token(Token = "0x200028B")]
public class UniqueSaveManager : MonoBehaviour
{
	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sceneObjectFile;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string createdObjectFile;

	[Token(Token = "0x600128C")]
	[Address(RVA = "0xD5550C", Offset = "0xD5550C", VA = "0xD5550C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0xD557A8", Offset = "0xD557A8", VA = "0xD557A8")]
	public void Start()
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0xD55510", Offset = "0xD55510", VA = "0xD55510")]
	private void Save()
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0xD55CE4", Offset = "0xD55CE4", VA = "0xD55CE4")]
	private void SaveObject(GameObject obj, int i, string file)
	{
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0xD55938", Offset = "0xD55938", VA = "0xD55938")]
	private void LoadObject(int i, string file)
	{
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0xD560B0", Offset = "0xD560B0", VA = "0xD560B0")]
	public UniqueSaveManager()
	{
	}
}
[Token(Token = "0x200028C")]
public class PrefabManager : MonoBehaviour
{
	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string filename;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int buttonPositionX;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> createdPrefabs;

	[Token(Token = "0x6001292")]
	[Address(RVA = "0xE9E1C0", Offset = "0xE9E1C0", VA = "0xE9E1C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0xE9E244", Offset = "0xE9E244", VA = "0xE9E244")]
	private void LoadAllPrefabs()
	{
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0xE9E308", Offset = "0xE9E308", VA = "0xE9E308")]
	private void LoadPrefab(int tag)
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0xE9E454", Offset = "0xE9E454", VA = "0xE9E454")]
	private void CreateRandomPrefab()
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0xE9E5A0", Offset = "0xE9E5A0", VA = "0xE9E5A0")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0xE9E7C8", Offset = "0xE9E7C8", VA = "0xE9E7C8")]
	private void OnApplicationPause(bool isPaused)
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0xE9E6DC", Offset = "0xE9E6DC", VA = "0xE9E6DC")]
	private void SavePrefab(GameObject prefabToSave, int tag)
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0xE9E7D4", Offset = "0xE9E7D4", VA = "0xE9E7D4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0xE9EA60", Offset = "0xE9EA60", VA = "0xE9EA60")]
	public PrefabManager()
	{
	}
}
[Token(Token = "0x200028D")]
public class MyExampleScript : MonoBehaviour
{
	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int[] intArray;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string myString;

	[Token(Token = "0x600129B")]
	[Address(RVA = "0xBD5AB0", Offset = "0xBD5AB0", VA = "0xBD5AB0")]
	public MyExampleScript()
	{
	}
}
[Token(Token = "0x200028E")]
public class UploadDownloadTexture : MonoBehaviour
{
	[Token(Token = "0x20005CE")]
	public enum Mode
	{
		[Token(Token = "0x40021F4")]
		Upload,
		[Token(Token = "0x40021F5")]
		Download
	}

	[Token(Token = "0x20005CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD05C", Offset = "0x8CD05C")]
	private sealed class <Upload>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UploadDownloadTexture <>4__this;

		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D texture;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ES2Web <web>5__2;

		[Token(Token = "0x170002E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025B4")]
			[Address(RVA = "0xD58C2C", Offset = "0xD58C2C", VA = "0xD58C2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025B6")]
			[Address(RVA = "0xD58C9C", Offset = "0xD58C9C", VA = "0xD58C9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0xD58174", Offset = "0xD58174", VA = "0xD58174")]
		[DebuggerHidden]
		public <Upload>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0xD58A38", Offset = "0xD58A38", VA = "0xD58A38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0xD58A3C", Offset = "0xD58A3C", VA = "0xD58A3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0xD58C34", Offset = "0xD58C34", VA = "0xD58C34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD06C", Offset = "0x8CD06C")]
	private sealed class <Download>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UploadDownloadTexture <>4__this;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ES2Web <web>5__2;

		[Token(Token = "0x170002EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025BA")]
			[Address(RVA = "0xD589C0", Offset = "0xD589C0", VA = "0xD589C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025BC")]
			[Address(RVA = "0xD58A30", Offset = "0xD58A30", VA = "0xD58A30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0xD581A0", Offset = "0xD581A0", VA = "0xD581A0")]
		[DebuggerHidden]
		public <Download>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0xD58730", Offset = "0xD58730", VA = "0xD58730", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0xD58734", Offset = "0xD58734", VA = "0xD58734", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0xD589C8", Offset = "0xD589C8", VA = "0xD589C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005D1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD07C", Offset = "0x8CD07C")]
	private sealed class <Delete>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UploadDownloadTexture <>4__this;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ES2Web <web>5__2;

		[Token(Token = "0x170002EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025C0")]
			[Address(RVA = "0xD586B8", Offset = "0xD586B8", VA = "0xD586B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025C2")]
			[Address(RVA = "0xD58728", Offset = "0xD58728", VA = "0xD58728", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0xD58240", Offset = "0xD58240", VA = "0xD58240")]
		[DebuggerHidden]
		public <Delete>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0xD5850C", Offset = "0xD5850C", VA = "0xD5850C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0xD58510", Offset = "0xD58510", VA = "0xD58510", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0xD586C0", Offset = "0xD586C0", VA = "0xD586C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mode mode;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string url;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string filename;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string textureTag;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string webUsername;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string webPassword;

	[Token(Token = "0x600129C")]
	[Address(RVA = "0xD57E0C", Offset = "0xD57E0C", VA = "0xD57E0C")]
	private void Start()
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0xD58068", Offset = "0xD58068", VA = "0xD58068")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EAC0C", Offset = "0x8EAC0C")]
	private IEnumerator Upload(Texture2D texture)
	{
		return null;
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0xD58100", Offset = "0xD58100", VA = "0xD58100")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EAC70", Offset = "0x8EAC70")]
	private IEnumerator Download()
	{
		return null;
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0xD581CC", Offset = "0xD581CC", VA = "0xD581CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EACD4", Offset = "0x8EACD4")]
	private IEnumerator Delete()
	{
		return null;
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0xD5826C", Offset = "0xD5826C", VA = "0xD5826C")]
	private ES2Settings CreateSettings()
	{
		return null;
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0xD57EF8", Offset = "0xD57EF8", VA = "0xD57EF8")]
	private Texture2D GetTexture()
	{
		return null;
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0xD58350", Offset = "0xD58350", VA = "0xD58350")]
	private void SetTexture(Texture2D texture)
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0xD58474", Offset = "0xD58474", VA = "0xD58474")]
	public UploadDownloadTexture()
	{
	}
}
[Token(Token = "0x200028F")]
[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x8CBD84", Offset = "0x8CBD84")]
public sealed class ES2_AudioClip : ES2Type
{
	[Token(Token = "0x60012A4")]
	[Address(RVA = "0xC89784", Offset = "0xC89784", VA = "0xC89784")]
	public ES2_AudioClip()
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0xC8BD70", Offset = "0xC8BD70", VA = "0xC8BD70", Slot = "4")]
	public override void Write(object data, ES2Writer writer)
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0xC8C018", Offset = "0xC8C018", VA = "0xC8C018", Slot = "5")]
	public override object Read(ES2Reader reader)
	{
		return null;
	}
}
[Token(Token = "0x2000290")]
public sealed class ES2_GameObject : ES2Type
{
	[Token(Token = "0x60012A7")]
	[Address(RVA = "0xC89814", Offset = "0xC89814", VA = "0xC89814")]
	public ES2_GameObject()
	{
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0xC8C264", Offset = "0xC8C264", VA = "0xC8C264", Slot = "4")]
	public override void Write(object data, ES2Writer writer)
	{
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0xC8C674", Offset = "0xC8C674", VA = "0xC8C674", Slot = "6")]
	public override void Read(ES2Reader reader, object c)
	{
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0xC8C870", Offset = "0xC8C870", VA = "0xC8C870", Slot = "5")]
	public override object Read(ES2Reader reader)
	{
		return null;
	}
}
[Token(Token = "0x2000291")]
public sealed class ES2_RawTexture2D : ES2Type
{
	[Token(Token = "0x60012AB")]
	[Address(RVA = "0xC8C8F4", Offset = "0xC8C8F4", VA = "0xC8C8F4")]
	public ES2_RawTexture2D()
	{
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0xC8C984", Offset = "0xC8C984", VA = "0xC8C984", Slot = "4")]
	public override void Write(object data, ES2Writer writer)
	{
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0xC8CBF4", Offset = "0xC8CBF4", VA = "0xC8CBF4", Slot = "5")]
	public override object Read(ES2Reader reader)
	{
		return null;
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0xC8CC80", Offset = "0xC8CC80", VA = "0xC8CC80", Slot = "6")]
	public override void Read(ES2Reader reader, object obj)
	{
	}
}
[Token(Token = "0x2000292")]
public class ES2UserType_UnityEngineCanvasRenderer : ES2Type
{
	[Token(Token = "0x60012AF")]
	[Address(RVA = "0xC89EB8", Offset = "0xC89EB8", VA = "0xC89EB8", Slot = "4")]
	public override void Write(object obj, ES2Writer writer)
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0xC89FA4", Offset = "0xC89FA4", VA = "0xC89FA4", Slot = "5")]
	public override object Read(ES2Reader reader)
	{
		return null;
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0xC8A020", Offset = "0xC8A020", VA = "0xC8A020", Slot = "6")]
	public override void Read(ES2Reader reader, object c)
	{
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0xC89574", Offset = "0xC89574", VA = "0xC89574")]
	public ES2UserType_UnityEngineCanvasRenderer()
	{
	}
}
[Token(Token = "0x2000293")]
public class ES2UserType_UnityEngineLineRenderer : ES2Type
{
	[Token(Token = "0x60012B3")]
	[Address(RVA = "0xC8A168", Offset = "0xC8A168", VA = "0xC8A168", Slot = "4")]
	public override void Write(object obj, ES2Writer writer)
	{
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0xC8ABA8", Offset = "0xC8ABA8", VA = "0xC8ABA8", Slot = "5")]
	public override object Read(ES2Reader reader)
	{
		return null;
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0xC8AC24", Offset = "0xC8AC24", VA = "0xC8AC24", Slot = "6")]
	public override void Read(ES2Reader reader, object c)
	{
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0xC895F8", Offset = "0xC895F8", VA = "0xC895F8")]
	public ES2UserType_UnityEngineLineRenderer()
	{
	}
}
[Token(Token = "0x2000294")]
public class ES2UserType_UnityEngineRectTransform : ES2Type
{
	[Token(Token = "0x60012B7")]
	[Address(RVA = "0xC8B61C", Offset = "0xC8B61C", VA = "0xC8B61C", Slot = "4")]
	public override void Write(object obj, ES2Writer writer)
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0xC8B708", Offset = "0xC8B708", VA = "0xC8B708", Slot = "5")]
	public override object Read(ES2Reader reader)
	{
		return null;
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0xC8B784", Offset = "0xC8B784", VA = "0xC8B784", Slot = "6")]
	public override void Read(ES2Reader reader, object c)
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0xC8967C", Offset = "0xC8967C", VA = "0xC8967C")]
	public ES2UserType_UnityEngineRectTransform()
	{
	}
}
[Token(Token = "0x2000295")]
public class ES2UserType_UnityEngineUIText : ES2Type
{
	[Token(Token = "0x60012BB")]
	[Address(RVA = "0xC8B8CC", Offset = "0xC8B8CC", VA = "0xC8B8CC", Slot = "4")]
	public override void Write(object obj, ES2Writer writer)
	{
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0xC8BAE8", Offset = "0xC8BAE8", VA = "0xC8BAE8", Slot = "5")]
	public override object Read(ES2Reader reader)
	{
		return null;
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0xC8BB64", Offset = "0xC8BB64", VA = "0xC8BB64", Slot = "6")]
	public override void Read(ES2Reader reader, object c)
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0xC89700", Offset = "0xC89700", VA = "0xC89700")]
	public ES2UserType_UnityEngineUIText()
	{
	}
}
[Token(Token = "0x2000296")]
public class HerdSimController : MonoBehaviour
{
	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 _roamingArea;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem _runPS;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem _deadPS;

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0xC0EE8C", Offset = "0xC0EE8C", VA = "0xC0EE8C")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0xC0EF80", Offset = "0xC0EF80", VA = "0xC0EF80")]
	public HerdSimController()
	{
	}
}
[Token(Token = "0x2000297")]
public class HerdSimCore : MonoBehaviour
{
	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HerdSimController _controller;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _scanner;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform _collider;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform _model;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer _renderer;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _hitPoints;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int _type;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _minSize;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _avoidAngle;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float _avoidDistance;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float _avoidSpeed;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float _stopDistance;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _rotateCounterR;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _rotateCounterL;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool _pushHalfTheTime;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool _pushToggle;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _pushDistance;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _pushForce;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _scan;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 _roamingArea;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float _walkSpeed;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float _runSpeed;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _damping;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int _idleProbablity;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float _runChance;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 _waypoint;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float _speed;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float _targetSpeed;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int _mode;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 _startPosition;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _reachedWaypoint;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int _lerpCounter;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool _scared;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform _scaredOf;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool _eating;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform _food;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float detectFoodDistance;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AnimationClip foodAnimation;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public FLookAnimator mySpine;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float _groundCheckInterval;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public string _groundTag;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 _ground;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Quaternion _groundRot;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool _grounded;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float _maxGroundAngle;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float _maxFall;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float _fakeGravity;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public LayerMask _herdLayerMask;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public HerdSimCore _leader;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Vector3 _leaderArea;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public int _leaderSize;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float _leaderAreaMultiplier;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int _maxHerdSize;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int _minHerdSize;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float _herdDistance;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int _herdSize;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public bool _dead;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Material _deadMaterial;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public bool _scaryCorpse;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public string _animIdle;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float _animIdleSpeed;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public string _animSleep;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float _animSleepSpeed;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public string _animWalk;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public float _animWalkSpeed;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public string _animRun;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float _animRunSpeed;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public string _animDead;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float _animDeadSpeed;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public float _idleToSleepSeconds;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float _sleepCounter;

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private bool _idle;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private int _updateCounter;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public int _updateDivisor;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _updateNextSeed;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private int _updateSeed;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float _newDelta;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public bool _enabled;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public LayerMask _groundLayerMask;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public LayerMask _pushyLayerMask;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public string _herdSimLayerName;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private int _groundIndex;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private int _herdSimIndex;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Transform _thisTR;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public bool _lean;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public AnimationClip _leanLeftAnimation;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public AnimationClip _leanRightAnimation;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private AnimationState _leanLeft;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private AnimationState _leanRight;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private float _leanRightTime;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private float _leanLeftTime;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private bool _avoiding;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x239")]
	private bool _avoidingLeft;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23A")]
	private bool _avoidingRight;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23B")]
	public bool foodLock;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public float eatCrossFadeBlending;

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0xC0EF88", Offset = "0xC0EF88", VA = "0xC0EF88")]
	public void Start()
	{
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0xC0FAF4", Offset = "0xC0FAF4", VA = "0xC0FAF4")]
	private bool EatingRoutine()
	{
		return default(bool);
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0xC0F890", Offset = "0xC0F890", VA = "0xC0F890")]
	private void LeanInit()
	{
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0xC0FCF4", Offset = "0xC0FCF4", VA = "0xC0FCF4")]
	private void Lean()
	{
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0xC100B0", Offset = "0xC100B0", VA = "0xC100B0")]
	public void Disable(bool disableModel, bool disableCollider)
	{
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0xC10218", Offset = "0xC10218", VA = "0xC10218")]
	public void Enable()
	{
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0xC103D4", Offset = "0xC103D4", VA = "0xC103D4")]
	public void Damage(float d)
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0xC10668", Offset = "0xC10668", VA = "0xC10668")]
	public void Effects()
	{
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0xC103F0", Offset = "0xC103F0", VA = "0xC103F0")]
	public void Death()
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0xC10950", Offset = "0xC10950", VA = "0xC10950")]
	public void Corpse()
	{
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0xC10D60", Offset = "0xC10D60", VA = "0xC10D60")]
	public void FindLeader()
	{
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0xC11330", Offset = "0xC11330", VA = "0xC11330")]
	public void Wander()
	{
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0xC0F3CC", Offset = "0xC0F3CC", VA = "0xC0F3CC")]
	public void Init()
	{
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0xC0FF00", Offset = "0xC0FF00", VA = "0xC0FF00")]
	private float AngleAmount()
	{
		return default(float);
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0xC118D4", Offset = "0xC118D4", VA = "0xC118D4")]
	public void AnimationHandler()
	{
	}

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0xC10B6C", Offset = "0xC10B6C", VA = "0xC10B6C")]
	public void Scare(Transform t)
	{
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0xC11D50", Offset = "0xC11D50", VA = "0xC11D50")]
	public void EndScare()
	{
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0xC11D7C", Offset = "0xC11D7C", VA = "0xC11D7C")]
	public void Food(Transform t)
	{
	}

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0xC11E08", Offset = "0xC11E08", VA = "0xC11E08")]
	public void Pushy()
	{
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0xC11C4C", Offset = "0xC11C4C", VA = "0xC11C4C")]
	public void UnFlock()
	{
	}

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0xC12230", Offset = "0xC12230", VA = "0xC12230")]
	public void WalkTimeOut()
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0xC1225C", Offset = "0xC1225C", VA = "0xC1225C")]
	public void SpineSystem()
	{
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0xC12384", Offset = "0xC12384", VA = "0xC12384")]
	public void Update()
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0xC0F4FC", Offset = "0xC0F4FC", VA = "0xC0F4FC")]
	public void GroundCheck()
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0xC13B58", Offset = "0xC13B58", VA = "0xC13B58")]
	private void NotAvoiding()
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0xC12F28", Offset = "0xC12F28", VA = "0xC12F28")]
	public bool Avoidance()
	{
		return default(bool);
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0xC13B64", Offset = "0xC13B64", VA = "0xC13B64")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0xC140A8", Offset = "0xC140A8", VA = "0xC140A8")]
	public HerdSimCore()
	{
	}
}
[Token(Token = "0x2000298")]
public class HerdSimDisabler : MonoBehaviour
{
	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _distanceDisable;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _distanceFrom;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _distanceFromMainCam;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _checkDisableEverSeconds;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _checkEnableEverSeconds;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _disableModel;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool _disableCollider;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool _disableOnStart;

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0xBB9F04", Offset = "0xBB9F04", VA = "0xBB9F04")]
	public void Start()
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0xBB9FF4", Offset = "0xBB9FF4", VA = "0xBB9FF4")]
	public void DisableOnStart()
	{
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0xBBA0AC", Offset = "0xBBA0AC", VA = "0xBBA0AC")]
	public void CheckDisable()
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0xBBA2A4", Offset = "0xBBA2A4", VA = "0xBBA2A4")]
	public void CheckEnable()
	{
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0xBBA484", Offset = "0xBBA484", VA = "0xBBA484")]
	public HerdSimDisabler()
	{
	}
}
[Token(Token = "0x2000299")]
public class HerdSimScary : MonoBehaviour
{
	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HerdSimCore _chase;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] _scareType;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _canChase;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _scaryInterval;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask _herdLayerMask;

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0xBBA4A0", Offset = "0xBBA4A0", VA = "0xBBA4A0")]
	public void Start()
	{
	}

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0xBBA4A4", Offset = "0xBBA4A4", VA = "0xBBA4A4")]
	public void Init()
	{
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0xBBA5BC", Offset = "0xBBA5BC", VA = "0xBBA5BC")]
	public void CheckChase()
	{
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0xBBA5D4", Offset = "0xBBA5D4", VA = "0xBBA5D4")]
	public void BeScary()
	{
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0xBBA980", Offset = "0xBBA980", VA = "0xBBA980")]
	public HerdSimScary()
	{
	}
}
[Token(Token = "0x200029A")]
public class FABRIK_IK : MonoBehaviour
{
	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Handle;

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0xC8D0A4", Offset = "0xC8D0A4", VA = "0xC8D0A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0xC8D0A8", Offset = "0xC8D0A8", VA = "0xC8D0A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0xC8D0AC", Offset = "0xC8D0AC", VA = "0xC8D0AC")]
	public FABRIK_IK()
	{
	}
}
[Token(Token = "0x200029B")]
public class RunTimeCombineAndRelease : MonoBehaviour
{
	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SimpleMeshCombine simpleMeshCombine;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float combineTime;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float releaseTime;

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0xB9CA34", Offset = "0xB9CA34", VA = "0xB9CA34")]
	public void Awake()
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0xB9CA8C", Offset = "0xB9CA8C", VA = "0xB9CA8C")]
	public void Start()
	{
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0xB9CB74", Offset = "0xB9CB74", VA = "0xB9CB74")]
	public void Combine()
	{
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0xB9CC00", Offset = "0xB9CC00", VA = "0xB9CC00")]
	public void Release()
	{
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0xB9CD3C", Offset = "0xB9CD3C", VA = "0xB9CD3C")]
	public RunTimeCombineAndRelease()
	{
	}
}
[Token(Token = "0x200029C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBD98", Offset = "0x8CBD98")]
public class SimpleMeshCombine : MonoBehaviour
{
	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] combinedGameOjects;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject combined;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string meshName;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool _canGenerateLightmapUV;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int vCount;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool generateLightmapUV;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject copyTarget;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool destroyOldColliders;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool keepStructure;

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0xEDD33C", Offset = "0xEDD33C", VA = "0xEDD33C")]
	public void EnableRenderers(bool e)
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0xEDD4D4", Offset = "0xEDD4D4", VA = "0xEDD4D4")]
	public MeshFilter[] FindEnabledMeshes()
	{
		return null;
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0xEDD7E8", Offset = "0xEDD7E8", VA = "0xEDD7E8")]
	public void CombineMeshes()
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0xEDE824", Offset = "0xEDE824", VA = "0xEDE824")]
	public int Contains(ArrayList l, Material n)
	{
		return default(int);
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0xEDE950", Offset = "0xEDE950", VA = "0xEDE950")]
	public SimpleMeshCombine()
	{
	}
}
[Token(Token = "0x200029D")]
public class SimpleMeshCombineMaster : MonoBehaviour
{
	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool generateLightmapUV;

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0xEDE9B0", Offset = "0xEDE9B0", VA = "0xEDE9B0")]
	public SimpleMeshCombineMaster()
	{
	}
}
[Token(Token = "0x200029E")]
public class MultiSpiral : MonoBehaviour
{
	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetStart;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform targetEnd;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotationOffset;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool autoCalculateCircle;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int startEffects;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] spiralWithRotationArray;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] spiralArray;

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0xBD582C", Offset = "0xBD582C", VA = "0xBD582C")]
	public void Start()
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0xBD59F4", Offset = "0xBD59F4", VA = "0xBD59F4")]
	public MultiSpiral()
	{
	}
}
[Token(Token = "0x200029F")]
public class SpiralGenerator : MonoBehaviour
{
	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color colorStart;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color colorEnd;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform targetStart;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform targetEnd;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float noise;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float noiseScale;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float noiseSpeed;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float LenghtOfLineRenderer;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool smooth;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float lenghtResolutionMultiplier;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material lineMaterial;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float offsetMaterialSpeed;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float offsetYMaterialSpeed;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float stretchMaterial;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float stretchYMaterial;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float widthStart;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float widthEnd;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float rotateSpeed;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float rotationOffset;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float sineDepth;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float sineDepthFrequency;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float sineHeight;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float sineHeightFrequency;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float sineLenght;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float sineLenghtFrequency;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float sineGrowMultiplier;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AnimationCurve growCurve;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float sineLenghtSpeed;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float sineHeightSpeed;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float sineDepthSpeed;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool runOnceThenDisable;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform start;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform end;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float vertexCount;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool _bend;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float _bendMultiplier;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AnimationCurve bendCurve;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool runSpiral;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Material lineRendererMat;

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0xB25C60", Offset = "0xB25C60", VA = "0xB25C60")]
	public void Start()
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0xB25C64", Offset = "0xB25C64", VA = "0xB25C64")]
	public void CreateSpiral()
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0xB2609C", Offset = "0xB2609C", VA = "0xB2609C")]
	public void Update()
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0xB2679C", Offset = "0xB2679C", VA = "0xB2679C")]
	public void PositionSpiral()
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0xB260D4", Offset = "0xB260D4", VA = "0xB260D4")]
	public void GenerateSpiral(float time)
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0xB26AE8", Offset = "0xB26AE8", VA = "0xB26AE8")]
	public SpiralGenerator()
	{
	}
}
[Token(Token = "0x20002A0")]
public class uMouseOrbit : MonoBehaviour
{
	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int zoomRate;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float x;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float y;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool rot;

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x1C8E800", Offset = "0x1C8E800", VA = "0x1C8E800")]
	public void Start()
	{
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x1C8E840", Offset = "0x1C8E840", VA = "0x1C8E840")]
	public void Update()
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x1C8EB6C", Offset = "0x1C8EB6C", VA = "0x1C8EB6C")]
	public uMouseOrbit()
	{
	}
}
[Token(Token = "0x20002A1")]
public class uSpectrumData : MonoBehaviour
{
	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float growSpeed;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool useFrequency;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float growFrequency;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float growFrequencySpeed;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int channel;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int numSamples;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int freq;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioListener _audio;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SpiralGenerator _spiral;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float multiBuffer;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float heightBuffer;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float depthBuffer;

	[Token(Token = "0x6001301")]
	[Address(RVA = "0x1C8EB88", Offset = "0x1C8EB88", VA = "0x1C8EB88")]
	public void Start()
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0x1C8EC78", Offset = "0x1C8EC78", VA = "0x1C8EC78")]
	public void Update()
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0x1C8EF08", Offset = "0x1C8EF08", VA = "0x1C8EF08")]
	public uSpectrumData()
	{
	}
}
[Token(Token = "0x20002A2")]
public class LODPreview : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005D2")]
	public class ShowcaseObject
	{
		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AutomaticLOD m_automaticLOD;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_position;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_angles;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 m_rotationAxis;

		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_description;

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0xBBED34", Offset = "0xBBED34", VA = "0xBBED34")]
		public ShowcaseObject()
		{
		}
	}

	[Token(Token = "0x20005D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD08C", Offset = "0x8CD08C")]
	private sealed class <ComputeLODWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LODPreview <>4__this;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fAmount;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AutomaticLOD <automaticLOD>5__3;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter <meshFilter>5__4;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SkinnedMeshRenderer <skin>5__5;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Mesh <newMesh>5__6;

		[Token(Token = "0x170002EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025C8")]
			[Address(RVA = "0xBBECBC", Offset = "0xBBECBC", VA = "0xBBECBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025CA")]
			[Address(RVA = "0xBBED2C", Offset = "0xBBED2C", VA = "0xBBED2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0xBBE424", Offset = "0xBBE424", VA = "0xBBE424")]
		[DebuggerHidden]
		public <ComputeLODWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0xBBE4D4", Offset = "0xBBE4D4", VA = "0xBBE4D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0xBBE548", Offset = "0xBBE548", VA = "0xBBE548", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0xBBE4F0", Offset = "0xBBE4F0", VA = "0xBBE4F0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0xBBECC4", Offset = "0xBBECC4", VA = "0xBBECC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShowcaseObject[] ShowcaseObjects;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material WireframeMaterial;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MouseSensitvity;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MouseReleaseSpeed;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AutomaticLOD m_selectedAutomaticLOD;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_nSelectedIndex;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool m_bWireframe;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_fRotationSpeed;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_fLastMouseX;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mesh m_newMesh;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_nLastProgress;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string m_strLastTitle;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string m_strLastMessage;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_fVertexAmount;

	[Token(Token = "0x6001304")]
	[Address(RVA = "0xBBCBD0", Offset = "0xBBCBD0", VA = "0xBBCBD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0xBBD000", Offset = "0xBBD000", VA = "0xBBD000")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x6001306")]
	[Address(RVA = "0xBBD0D0", Offset = "0xBBD0D0", VA = "0xBBD0D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0xBBD674", Offset = "0xBBD674", VA = "0xBBD674")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0xBBCD50", Offset = "0xBBCD50", VA = "0xBBCD50")]
	private void SetActiveObject(int index)
	{
	}

	[Token(Token = "0x6001309")]
	[Address(RVA = "0xBBE208", Offset = "0xBBE208", VA = "0xBBE208")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0xBBD380", Offset = "0xBBD380", VA = "0xBBD380")]
	private void SetWireframe(bool bEnabled)
	{
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0xBBE170", Offset = "0xBBE170", VA = "0xBBE170")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EAD38", Offset = "0x8EAD38")]
	private IEnumerator ComputeLODWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0xBBE450", Offset = "0xBBE450", VA = "0xBBE450")]
	public LODPreview()
	{
	}
}
[Token(Token = "0x20002A3")]
public class LODSampleLODScene : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005D4")]
	public class SceneCamera
	{
		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Camera m_camera;

		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_near;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_far;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Vector3 m_v3InitialCameraPosition;

		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public Vector3 m_v3ViewDir;

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0xBC062C", Offset = "0xBC062C", VA = "0xBC062C")]
		public SceneCamera()
		{
		}
	}

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SceneCamera[] SceneCameras;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material WireframeMaterial;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SceneCamera m_selectedCamera;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_bWireframe;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<AutomaticLOD> m_sceneLODObjects;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int m_nMaxLODLevels;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_fCurrentDistanceSlider;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int m_nCamMode;

	[Token(Token = "0x600130D")]
	[Address(RVA = "0xBBEDAC", Offset = "0xBBEDAC", VA = "0xBBEDAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0xBBF4C4", Offset = "0xBBF4C4", VA = "0xBBF4C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0xBBFAF0", Offset = "0xBBFAF0", VA = "0xBBFAF0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0xBBF2AC", Offset = "0xBBF2AC", VA = "0xBBF2AC")]
	private void SetActiveCamera(int index)
	{
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0xBBF5E8", Offset = "0xBBF5E8", VA = "0xBBF5E8")]
	private void UpdateCamera(float fPos)
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0xBBF064", Offset = "0xBBF064", VA = "0xBBF064")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0xBBF7FC", Offset = "0xBBF7FC", VA = "0xBBF7FC")]
	private void SetWireframe(bool bEnabled)
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0xBC0624", Offset = "0xBC0624", VA = "0xBC0624")]
	public LODSampleLODScene()
	{
	}
}
[Token(Token = "0x20002A4")]
public class LODSceneSelection : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005D5")]
	public class SceneOption
	{
		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_sceneName;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_sceneDisplayName;

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0xBC08C4", Offset = "0xBC08C4", VA = "0xBC08C4")]
		public SceneOption()
		{
		}
	}

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int BoxWidth;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int BoxHeight;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MarginH;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int MarginV;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SceneOption[] SceneOptions;

	[Token(Token = "0x6001315")]
	[Address(RVA = "0xBC0634", Offset = "0xBC0634", VA = "0xBC0634")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0xBC08B0", Offset = "0xBC08B0", VA = "0xBC08B0")]
	public LODSceneSelection()
	{
	}
}
[Token(Token = "0x20002A5")]
public class AutomaticLOD : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005D6")]
	public enum EvalMode
	{
		[Token(Token = "0x4002219")]
		CameraDistance,
		[Token(Token = "0x400221A")]
		ScreenCoverage
	}

	[Serializable]
	[Token(Token = "0x20005D7")]
	public enum LevelsToGenerate
	{
		[Token(Token = "0x400221C")]
		_1 = 1,
		[Token(Token = "0x400221D")]
		_2,
		[Token(Token = "0x400221E")]
		_3,
		[Token(Token = "0x400221F")]
		_4,
		[Token(Token = "0x4002220")]
		_5,
		[Token(Token = "0x4002221")]
		_6
	}

	[Serializable]
	[Token(Token = "0x20005D8")]
	public enum SwitchMode
	{
		[Token(Token = "0x4002223")]
		SwitchMesh,
		[Token(Token = "0x4002224")]
		SwitchGameObject
	}

	[Serializable]
	[Token(Token = "0x20005D9")]
	public class LODLevelData
	{
		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_fScreenCoverage;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m_fMaxCameraDistance;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_fMeshVerticesAmount;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int m_nColorEditorBarIndex;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh m_mesh;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_bUsesOriginalMesh;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject m_gameObject;

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0xF4273C", Offset = "0xF4273C", VA = "0xF4273C")]
		public LODLevelData GetCopy()
		{
			return null;
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0xF43970", Offset = "0xF43970", VA = "0xF43970")]
		public LODLevelData()
		{
		}
	}

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Mesh m_originalMesh;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public EvalMode m_evalMode;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public bool m_bEnablePrefabUsage;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public string m_strAssetPath;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float m_fMaxCameraDistance;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int m_nColorEditorBarNewIndex;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public List<LODLevelData> m_listLODLevels;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AutomaticLOD m_LODObjectRoot;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public List<AutomaticLOD> m_listDependentChildren;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool m_bExpandRelevanceSpheres;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RelevanceSphere[] m_aRelevanceSpheres;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Simplifier m_meshSimplifier;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool m_bGenerateIncludeChildren;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private LevelsToGenerate m_levelsToGenerate;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SwitchMode m_switchMode;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private bool m_bOverrideRootSettings;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	[SerializeField]
	[HideInInspector]
	private bool m_bLODDataDirty;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[HideInInspector]
	private AutomaticLOD m_LODObjectRootPersist;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool m_bUseAutomaticCameraLODSwitch;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int m_nCurrentLOD;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<Camera, int> m_cachedFrameLODLevel;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 m_localCenter;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3[] _corners;

	[Token(Token = "0x40012EE")]
	private const int k_MaxLODChecksPerFrame = 4;

	[Token(Token = "0x40012EF")]
	private const int k_MaxFrameCheckLoop = 100;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int s_currentCheckIndex;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int s_currentFrameCheckIndex;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int s_checkLoopLength;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int s_lastFrameComputedModulus;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int s_currentFrameInLoop;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int m_frameToCheck;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool b_performCheck;

	[Token(Token = "0x6001317")]
	[Address(RVA = "0xF3F9A4", Offset = "0xF3F9A4", VA = "0xF3F9A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0xF401A4", Offset = "0xF401A4", VA = "0xF401A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0xF40328", Offset = "0xF40328", VA = "0xF40328")]
	private void OnWillRenderObject()
	{
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0xF40868", Offset = "0xF40868", VA = "0xF40868")]
	public static bool HasValidMeshData(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0xF4096C", Offset = "0xF4096C", VA = "0xF4096C")]
	public static bool IsRootOrBelongsToLODTree(AutomaticLOD automaticLOD, AutomaticLOD root)
	{
		return default(bool);
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0xF40AD8", Offset = "0xF40AD8", VA = "0xF40AD8")]
	public int GetNumberOfLevelsToGenerate()
	{
		return default(int);
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0xF40AE0", Offset = "0xF40AE0", VA = "0xF40AE0")]
	public bool IsGenerateIncludeChildrenActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0xF40AE8", Offset = "0xF40AE8", VA = "0xF40AE8")]
	public bool IsRootAutomaticLOD()
	{
		return default(bool);
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0xF40B58", Offset = "0xF40B58", VA = "0xF40B58")]
	public bool HasDependentChildren()
	{
		return default(bool);
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0xF40BB8", Offset = "0xF40BB8", VA = "0xF40BB8")]
	public bool HasLODDataDirty()
	{
		return default(bool);
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0xF40BC0", Offset = "0xF40BC0", VA = "0xF40BC0")]
	public bool SetLODDataDirty(bool bDirty)
	{
		return default(bool);
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0xF40BD0", Offset = "0xF40BD0", VA = "0xF40BD0")]
	public int GetLODLevelCount()
	{
		return default(int);
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0xF40C30", Offset = "0xF40C30", VA = "0xF40C30")]
	public float ComputeScreenCoverage(Camera camera)
	{
		return default(float);
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0xF3FCE8", Offset = "0xF3FCE8", VA = "0xF3FCE8")]
	public Vector3 ComputeWorldCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0xF41820", Offset = "0xF41820", VA = "0xF41820")]
	public float ComputeViewSpaceBounds(Vector3 v3CameraPos, Vector3 v3CameraDir, Vector3 v3CameraUp, out Vector3 v3Min, out Vector3 v3Max, out Vector3 v3Center)
	{
		return default(float);
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0xF41E74", Offset = "0xF41E74", VA = "0xF41E74")]
	public void SetAutomaticCameraLODSwitch(bool bEnabled)
	{
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0xF41F00", Offset = "0xF41F00", VA = "0xF41F00")]
	private static void SetAutomaticCameraLODSwitchRecursive(AutomaticLOD root, GameObject gameObject, bool bEnabled)
	{
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0xF420C0", Offset = "0xF420C0", VA = "0xF420C0")]
	public void SetLODLevels(List<LODLevelData> listLODLevelData, EvalMode evalMode, float fMaxCameraDistance, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0xF42238", Offset = "0xF42238", VA = "0xF42238")]
	private static void SetLODLevelsRecursive(AutomaticLOD root, GameObject gameObject)
	{
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0xF42CAC", Offset = "0xF42CAC", VA = "0xF42CAC")]
	public void AddLODLevel(int nLevel, bool bBefore, bool bCreateMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0xF42D58", Offset = "0xF42D58", VA = "0xF42D58")]
	public static void AddLODLevelRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bBefore, bool bCreateMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0xF43978", Offset = "0xF43978", VA = "0xF43978")]
	public void RemoveLODLevel(int nLevel, bool bDeleteMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0xF43A1C", Offset = "0xF43A1C", VA = "0xF43A1C")]
	public static void RemoveLODLevelRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bDeleteMesh, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0xF4402C", Offset = "0xF4402C", VA = "0xF4402C")]
	public Simplifier GetMeshSimplifier()
	{
		return null;
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0xF44034", Offset = "0xF44034", VA = "0xF44034")]
	public void ComputeLODData(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0xF4407C", Offset = "0xF4407C", VA = "0xF4407C")]
	private void ComputeLODDataRecursive(AutomaticLOD root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0xF44A90", Offset = "0xF44A90", VA = "0xF44A90")]
	public bool HasLODData()
	{
		return default(bool);
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0xF404B4", Offset = "0xF404B4", VA = "0xF404B4")]
	public int GetLODLevelUsingCamera(Camera currentCamera)
	{
		return default(int);
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0xF44B30", Offset = "0xF44B30", VA = "0xF44B30")]
	public int GetCurrentLODLevel()
	{
		return default(int);
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0xF407D4", Offset = "0xF407D4", VA = "0xF407D4")]
	public void SwitchToLOD(int nLevel, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0xF44B38", Offset = "0xF44B38", VA = "0xF44B38")]
	private static void SwitchToLODRecursive(AutomaticLOD root, GameObject gameObject, int nLODLevel, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0xF45270", Offset = "0xF45270", VA = "0xF45270")]
	public void ComputeAllLODMeshes(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0xF45AB4", Offset = "0xF45AB4", VA = "0xF45AB4")]
	public void ComputeLODMesh(int nLevel, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0xF4538C", Offset = "0xF4538C", VA = "0xF4538C")]
	private static void ComputeLODMeshRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0xF45B58", Offset = "0xF45B58", VA = "0xF45B58")]
	public void RestoreOriginalMesh(bool bDeleteLODData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0xF45BEC", Offset = "0xF45BEC", VA = "0xF45BEC")]
	private static void RestoreOriginalMeshRecursive(AutomaticLOD root, GameObject gameObject, bool bDeleteLODData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0xF46064", Offset = "0xF46064", VA = "0xF46064")]
	public bool HasOriginalMeshActive(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0xF460F0", Offset = "0xF460F0", VA = "0xF460F0")]
	private static bool HasOriginalMeshActiveRecursive(AutomaticLOD root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0xF46400", Offset = "0xF46400", VA = "0xF46400")]
	public bool HasVertexData(int nLevel, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0xF46494", Offset = "0xF46494", VA = "0xF46494")]
	private static bool HasVertexDataRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0xF46794", Offset = "0xF46794", VA = "0xF46794")]
	public int GetOriginalVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0xF46830", Offset = "0xF46830", VA = "0xF46830")]
	private static void GetOriginalVertexCountRecursive(AutomaticLOD root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0xF46A4C", Offset = "0xF46A4C", VA = "0xF46A4C")]
	public int GetCurrentVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0xF46AE8", Offset = "0xF46AE8", VA = "0xF46AE8")]
	private static void GetCurrentVertexCountRecursive(AutomaticLOD root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0xF46E44", Offset = "0xF46E44", VA = "0xF46E44")]
	public int GetLODVertexCount(int nLevel, bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0xF46EF0", Offset = "0xF46EF0", VA = "0xF46EF0")]
	private static void GetLODVertexCountRecursive(AutomaticLOD root, GameObject gameObject, int nLevel, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0xF471F8", Offset = "0xF471F8", VA = "0xF471F8")]
	public void RemoveFromLODTree()
	{
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0xF44A04", Offset = "0xF44A04", VA = "0xF44A04")]
	public void FreeLODData(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0xF472B4", Offset = "0xF472B4", VA = "0xF472B4")]
	private static void FreeLODDataRecursive(AutomaticLOD root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0xF42840", Offset = "0xF42840", VA = "0xF42840")]
	private static Mesh CreateNewEmptyMesh(AutomaticLOD automaticLOD)
	{
		return null;
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0xF4779C", Offset = "0xF4779C", VA = "0xF4779C")]
	private static GameObject CreateBasicObjectCopy(GameObject gameObject, Mesh mesh, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0xF42938", Offset = "0xF42938", VA = "0xF42938")]
	private static void CheckForLODGameObjectSetup(AutomaticLOD root, AutomaticLOD automaticLOD, LODLevelData levelData, int level)
	{
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0xF47DB8", Offset = "0xF47DB8", VA = "0xF47DB8")]
	private static Component CopyComponent(Component original, GameObject destination)
	{
		return null;
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0xF411FC", Offset = "0xF411FC", VA = "0xF411FC")]
	private void BuildCornerData(ref Vector3[] av3Corners, Bounds bounds)
	{
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0xF400E8", Offset = "0xF400E8", VA = "0xF400E8")]
	private bool IsDependent()
	{
		return default(bool);
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0xF48104", Offset = "0xF48104", VA = "0xF48104")]
	public AutomaticLOD()
	{
	}
}
[Token(Token = "0x20002A6")]
public class SimplifyMeshPreview : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005DA")]
	public class ShowcaseObject
	{
		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MeshSimplify m_meshSimplify;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 m_position;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 m_angles;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 m_rotationAxis;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string m_description;

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0xB21BE4", Offset = "0xB21BE4", VA = "0xB21BE4")]
		public ShowcaseObject()
		{
		}
	}

	[Token(Token = "0x20005DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD09C", Offset = "0x8CD09C")]
	private sealed class <ComputeMeshWithVertices>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SimplifyMeshPreview <>4__this;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fAmount;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<GameObject, Material[]>.Enumerator <>7__wrap1;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshSimplify <meshSimplify>5__3;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshFilter <meshFilter>5__4;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SkinnedMeshRenderer <skin>5__5;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Mesh <newMesh>5__6;

		[Token(Token = "0x170002F0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025D4")]
			[Address(RVA = "0xB21B6C", Offset = "0xB21B6C", VA = "0xB21B6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025D6")]
			[Address(RVA = "0xB21BDC", Offset = "0xB21BDC", VA = "0xB21BDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0xB211DC", Offset = "0xB211DC", VA = "0xB211DC")]
		[DebuggerHidden]
		public <ComputeMeshWithVertices>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0xB21208", Offset = "0xB21208", VA = "0xB21208", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0xB2127C", Offset = "0xB2127C", VA = "0xB2127C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0xB21224", Offset = "0xB21224", VA = "0xB21224")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0xB21B74", Offset = "0xB21B74", VA = "0xB21B74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ShowcaseObject[] ShowcaseObjects;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material WireframeMaterial;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MouseSensitvity;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MouseReleaseSpeed;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<GameObject, Material[]> m_objectMaterials;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshSimplify m_selectedMeshSimplify;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_nSelectedIndex;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool m_bWireframe;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float m_fRotationSpeed;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_fLastMouseX;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Mesh m_newMesh;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int m_nLastProgress;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string m_strLastTitle;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string m_strLastMessage;

	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_fVertexAmount;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool m_bGUIEnabled;

	[Token(Token = "0x6001350")]
	[Address(RVA = "0xEDF3B8", Offset = "0xEDF3B8", VA = "0xEDF3B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0xEDF7CC", Offset = "0xEDF7CC", VA = "0xEDF7CC")]
	private void Progress(string strTitle, string strMessage, float fT)
	{
	}

	[Token(Token = "0x6001352")]
	[Address(RVA = "0xEDF89C", Offset = "0xEDF89C", VA = "0xEDF89C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0xEDFE5C", Offset = "0xEDFE5C", VA = "0xEDFE5C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0xEDF538", Offset = "0xEDF538", VA = "0xEDF538")]
	private void SetActiveObject(int index)
	{
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0xEE0B1C", Offset = "0xEE0B1C", VA = "0xEE0B1C")]
	private void AddMaterials(GameObject theGameObject, Dictionary<GameObject, Material[]> dicMaterials)
	{
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0xEDFB68", Offset = "0xEDFB68", VA = "0xEDFB68")]
	private void SetWireframe(bool bEnabled)
	{
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0xEE0A84", Offset = "0xEE0A84", VA = "0xEE0A84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EAD9C", Offset = "0x8EAD9C")]
	private IEnumerator ComputeMeshWithVertices(float fAmount)
	{
		return null;
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0xEE0D38", Offset = "0xEE0D38", VA = "0xEE0D38")]
	public SimplifyMeshPreview()
	{
	}
}
[Token(Token = "0x20002A7")]
public class MeshSimplify : MonoBehaviour
{
	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Mesh m_originalMesh;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Mesh m_simplifiedMesh;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool m_bEnablePrefabUsage;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public float m_fVertexAmount;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public string m_strAssetPath;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public MeshSimplify m_meshSimplifyRoot;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<MeshSimplify> m_listDependentChildren;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public bool m_bExpandRelevanceSpheres;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RelevanceSphere[] m_aRelevanceSpheres;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[HideInInspector]
	private Simplifier m_meshSimplifier;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[HideInInspector]
	private bool m_bGenerateIncludeChildren;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	[SerializeField]
	[HideInInspector]
	private bool m_bOverrideRootSettings;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	[SerializeField]
	[HideInInspector]
	private bool m_bUseEdgeLength;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	[SerializeField]
	[HideInInspector]
	private bool m_bUseCurvature;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	[HideInInspector]
	private bool m_bProtectTexture;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[SerializeField]
	[HideInInspector]
	private bool m_bLockBorder;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	[SerializeField]
	[HideInInspector]
	private bool m_bDataDirty;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	[SerializeField]
	[HideInInspector]
	private bool m_bExcludedFromTree;

	[Token(Token = "0x6001359")]
	[Address(RVA = "0xBCF494", Offset = "0xBCF494", VA = "0xBCF494")]
	public static bool HasValidMeshData(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0xBCF598", Offset = "0xBCF598", VA = "0xBCF598")]
	public static bool IsRootOrBelongsToTree(MeshSimplify meshSimplify, MeshSimplify root)
	{
		return default(bool);
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0xBCF70C", Offset = "0xBCF70C", VA = "0xBCF70C")]
	public bool IsGenerateIncludeChildrenActive()
	{
		return default(bool);
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0xBCF714", Offset = "0xBCF714", VA = "0xBCF714")]
	public bool HasDependentChildren()
	{
		return default(bool);
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0xBCF774", Offset = "0xBCF774", VA = "0xBCF774")]
	public bool HasDataDirty()
	{
		return default(bool);
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0xBCF77C", Offset = "0xBCF77C", VA = "0xBCF77C")]
	public bool SetDataDirty(bool bDirty)
	{
		return default(bool);
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0xBCF78C", Offset = "0xBCF78C", VA = "0xBCF78C")]
	public bool HasNonMeshSimplifyGameObjectsInTree()
	{
		return default(bool);
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0xBCF7BC", Offset = "0xBCF7BC", VA = "0xBCF7BC")]
	private bool HasNonMeshSimplifyGameObjectsInTreeRecursive(MeshSimplify root, GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0xBCF928", Offset = "0xBCF928", VA = "0xBCF928")]
	private void ConfigureSimplifier()
	{
	}

	[Token(Token = "0x6001362")]
	[Address(RVA = "0xBCFB34", Offset = "0xBCFB34", VA = "0xBCFB34")]
	public Simplifier GetMeshSimplifier()
	{
		return null;
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0xBCFB3C", Offset = "0xBCFB3C", VA = "0xBCFB3C")]
	public void ComputeData(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0xBCFB80", Offset = "0xBCFB80", VA = "0xBCFB80")]
	private static void ComputeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0xBD05CC", Offset = "0xBD05CC", VA = "0xBD05CC")]
	public bool HasData()
	{
		return default(bool);
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0xBD06A4", Offset = "0xBD06A4", VA = "0xBD06A4")]
	public bool HasSimplifiedMesh()
	{
		return default(bool);
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0xBD0748", Offset = "0xBD0748", VA = "0xBD0748")]
	public void ComputeMesh(bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0xBD078C", Offset = "0xBD078C", VA = "0xBD078C")]
	private static void ComputeMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren, [Optional] Simplifier.ProgressDelegate progress)
	{
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0xBD0CC0", Offset = "0xBD0CC0", VA = "0xBD0CC0")]
	public void AssignSimplifiedMesh(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0xBD0CF4", Offset = "0xBD0CF4", VA = "0xBD0CF4")]
	private static void AssignSimplifiedMeshRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0xBD0F70", Offset = "0xBD0F70", VA = "0xBD0F70")]
	public void RestoreOriginalMesh(bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0xBD0FB4", Offset = "0xBD0FB4", VA = "0xBD0FB4")]
	private static void RestoreOriginalMeshRecursive(MeshSimplify root, GameObject gameObject, bool bDeleteData, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0xBD1284", Offset = "0xBD1284", VA = "0xBD1284")]
	public bool HasOriginalMeshActive(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0xBD12B8", Offset = "0xBD12B8", VA = "0xBD12B8")]
	private static bool HasOriginalMeshActiveRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0xBD1580", Offset = "0xBD1580", VA = "0xBD1580")]
	public bool HasVertexData(bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0xBD15B4", Offset = "0xBD15B4", VA = "0xBD15B4")]
	private static bool HasVertexDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
		return default(bool);
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0xBD1790", Offset = "0xBD1790", VA = "0xBD1790")]
	public int GetOriginalVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6001372")]
	[Address(RVA = "0xBD17DC", Offset = "0xBD17DC", VA = "0xBD17DC")]
	private static void GetOriginalVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001373")]
	[Address(RVA = "0xBD19B0", Offset = "0xBD19B0", VA = "0xBD19B0")]
	public int GetSimplifiedVertexCount(bool bRecurseIntoChildren)
	{
		return default(int);
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0xBD19FC", Offset = "0xBD19FC", VA = "0xBD19FC")]
	private static void GetSimplifiedVertexCountRecursive(MeshSimplify root, GameObject gameObject, ref int nVertexCount, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0xBD1BD0", Offset = "0xBD1BD0", VA = "0xBD1BD0")]
	public void RemoveFromTree()
	{
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0xBD0598", Offset = "0xBD0598", VA = "0xBD0598")]
	public void FreeData(bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0xBD1CA8", Offset = "0xBD1CA8", VA = "0xBD1CA8")]
	private static void FreeDataRecursive(MeshSimplify root, GameObject gameObject, bool bRecurseIntoChildren)
	{
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0xBD0BC8", Offset = "0xBD0BC8", VA = "0xBD0BC8")]
	private static Mesh CreateNewEmptyMesh(MeshSimplify meshSimplify)
	{
		return null;
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0xBD1F7C", Offset = "0xBD1F7C", VA = "0xBD1F7C")]
	public MeshSimplify()
	{
	}
}
[Token(Token = "0x20002A8")]
public class FrameRateLimiter : MonoBehaviour
{
	[Token(Token = "0x600137A")]
	[Address(RVA = "0xC08A50", Offset = "0xC08A50", VA = "0xC08A50")]
	private void Start()
	{
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0xC08A90", Offset = "0xC08A90", VA = "0xC08A90")]
	public FrameRateLimiter()
	{
	}
}
[Token(Token = "0x20002A9")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBDD0", Offset = "0x8CBDD0")]
public class KillTimer : MonoBehaviour
{
	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float killDelay;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float killTimer;

	[Token(Token = "0x600137C")]
	[Address(RVA = "0xBBC978", Offset = "0xBBC978", VA = "0xBBC978")]
	private void Start()
	{
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0xBBC984", Offset = "0xBBC984", VA = "0xBBC984")]
	private void Update()
	{
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0xBBCA34", Offset = "0xBBCA34", VA = "0xBBCA34")]
	public KillTimer()
	{
	}
}
[Token(Token = "0x20002AA")]
internal class TestBallSpawnScalar : MonoBehaviour, IVisPrefabSpawnedTarget
{
	[Token(Token = "0x600137F")]
	[Address(RVA = "0xB308A0", Offset = "0xB308A0", VA = "0xB308A0", Slot = "4")]
	public void OnSpawned(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0xB30964", Offset = "0xB30964", VA = "0xB30964")]
	public TestBallSpawnScalar()
	{
	}
}
[Token(Token = "0x20002AB")]
public abstract class VisBaseController : MonoBehaviour, IVisManagerTarget
{
	[Token(Token = "0x20005DC")]
	public static class Defaults
	{
		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int controllerNameCounter;

		[Token(Token = "0x400223B")]
		public const string controllerName = "Default";

		[Token(Token = "0x400223C")]
		public const bool limitIncreaseRate = false;

		[Token(Token = "0x400223D")]
		public const float increaseRate = 1f;

		[Token(Token = "0x400223E")]
		public const bool limitDecreaseRate = true;

		[Token(Token = "0x400223F")]
		public const float decreaseRate = 1f;
	}

	[Token(Token = "0x400131B")]
	public const float mc_fTargetAdjustedDifferenceTime = 1f / 60f;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VisManager m_oVisManager;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private string m_szLastVisManagerName;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string controllerName;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool limitIncreaseRate;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float increaseRate;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool limitDecreaseRate;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float decreaseRate;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float m_fPreviousValue;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected float m_fValue;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float m_fValueDifference;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected float m_fAdjustedValueDifference;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_fMinValue;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_fMaxValue;

	[Token(Token = "0x1700015C")]
	public VisManager Manager
	{
		[Token(Token = "0x6001381")]
		[Address(RVA = "0xD69408", Offset = "0xD69408", VA = "0xD69408", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001382")]
		[Address(RVA = "0xD69410", Offset = "0xD69410", VA = "0xD69410", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x1700015D")]
	public string LastManagerName
	{
		[Token(Token = "0x6001383")]
		[Address(RVA = "0xD69554", Offset = "0xD69554", VA = "0xD69554", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015E")]
	public float MinValue
	{
		[Token(Token = "0x6001384")]
		[Address(RVA = "0xD6955C", Offset = "0xD6955C", VA = "0xD6955C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700015F")]
	public float MaxValue
	{
		[Token(Token = "0x6001385")]
		[Address(RVA = "0xD69564", Offset = "0xD69564", VA = "0xD69564")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0xD6956C", Offset = "0xD6956C", VA = "0xD6956C", Slot = "7")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0xD69634", Offset = "0xD69634", VA = "0xD69634", Slot = "8")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0xD69C2C", Offset = "0xD69C2C", VA = "0xD69C2C", Slot = "9")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0xD69CF0", Offset = "0xD69CF0", VA = "0xD69CF0", Slot = "10")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0xD69880", Offset = "0xD69880", VA = "0xD69880")]
	public bool ValidateManager(bool displayWarning)
	{
		return default(bool);
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0xD69B8C", Offset = "0xD69B8C", VA = "0xD69B8C")]
	public void EnsureRegistered()
	{
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0xD69D90", Offset = "0xD69D90", VA = "0xD69D90")]
	public void Update()
	{
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0xD69F34", Offset = "0xD69F34", VA = "0xD69F34", Slot = "11")]
	public virtual float GetCustomControllerValue()
	{
		return default(float);
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0xD69F3C", Offset = "0xD69F3C", VA = "0xD69F3C")]
	public float GetCurrentValue()
	{
		return default(float);
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0xD69F44", Offset = "0xD69F44", VA = "0xD69F44")]
	public float GetPreviousValue()
	{
		return default(float);
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0xD69F4C", Offset = "0xD69F4C", VA = "0xD69F4C")]
	public float GetValueDifference()
	{
		return default(float);
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0xD69F54", Offset = "0xD69F54", VA = "0xD69F54")]
	public float GetAdjustedValueDifference()
	{
		return default(float);
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0xD69F5C", Offset = "0xD69F5C", VA = "0xD69F5C", Slot = "12")]
	public virtual Rect DisplayDebugGUI(int x, int y, int barWidth, int barHeight, int separation, Texture debugTexture)
	{
		return default(Rect);
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0xD6A3D4", Offset = "0xD6A3D4", VA = "0xD6A3D4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0xD6A434", Offset = "0xD6A434", VA = "0xD6A434")]
	public static bool RestoreVisBaseControllerTarget(IVisBaseControllerTarget target)
	{
		return default(bool);
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0xD6A8EC", Offset = "0xD6A8EC", VA = "0xD6A8EC")]
	protected VisBaseController()
	{
	}
}
[Token(Token = "0x20002AC")]
public interface IVisBaseControllerTarget
{
	[Token(Token = "0x17000160")]
	VisBaseController Controller
	{
		[Token(Token = "0x6001396")]
		get;
		[Token(Token = "0x6001397")]
		set;
	}

	[Token(Token = "0x17000161")]
	string LastControllerName
	{
		[Token(Token = "0x6001398")]
		get;
	}
}
[Token(Token = "0x20002AD")]
public abstract class VisBaseModifier : MonoBehaviour, IVisManagerTarget, IVisBaseControllerTarget
{
	[Token(Token = "0x20005DD")]
	public static class Defaults
	{
	}

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VisManager m_oVisManager;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private string m_szLastVisManagerName;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private VisBaseController controller;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	private string m_szLastControllerName;

	[Token(Token = "0x17000162")]
	public VisManager Manager
	{
		[Token(Token = "0x6001399")]
		[Address(RVA = "0xD6A960", Offset = "0xD6A960", VA = "0xD6A960", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600139A")]
		[Address(RVA = "0xD6A968", Offset = "0xD6A968", VA = "0xD6A968", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000163")]
	public string LastManagerName
	{
		[Token(Token = "0x600139B")]
		[Address(RVA = "0xD6AA14", Offset = "0xD6AA14", VA = "0xD6AA14", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000164")]
	public VisBaseController Controller
	{
		[Token(Token = "0x600139C")]
		[Address(RVA = "0xD6AA1C", Offset = "0xD6AA1C", VA = "0xD6AA1C", Slot = "7")]
		get
		{
			return null;
		}
		[Token(Token = "0x600139D")]
		[Address(RVA = "0xD6AA24", Offset = "0xD6AA24", VA = "0xD6AA24", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x17000165")]
	public string LastControllerName
	{
		[Token(Token = "0x600139E")]
		[Address(RVA = "0xD6AAC4", Offset = "0xD6AAC4", VA = "0xD6AAC4", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0xD6AACC", Offset = "0xD6AACC", VA = "0xD6AACC", Slot = "10")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0xD6AAD0", Offset = "0xD6AAD0", VA = "0xD6AAD0", Slot = "11")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0xD6AAF8", Offset = "0xD6AAF8", VA = "0xD6AAF8", Slot = "12")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0xD6AAFC", Offset = "0xD6AAFC", VA = "0xD6AAFC")]
	public void Update()
	{
	}

	[Token(Token = "0x60013A3")]
	public abstract void OnValueUpdated(float current, float previous, float difference, float adjustedDifference);

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0xD6AC30", Offset = "0xD6AC30", VA = "0xD6AC30")]
	protected VisBaseModifier()
	{
	}
}
[Token(Token = "0x20002AE")]
public abstract class VisBasePropertyModifier : VisBaseModifier
{
	[Token(Token = "0x20005DE")]
	public new static class Defaults
	{
		[Token(Token = "0x4002240")]
		public const ControllerSourceValue controllerSourceValue = ControllerSourceValue.Current;

		[Token(Token = "0x4002241")]
		public const float minControllerValue = 0f;

		[Token(Token = "0x4002242")]
		public const float maxControllerValue = 1f;

		[Token(Token = "0x4002243")]
		public const float minPropertyValue = -1f;

		[Token(Token = "0x4002244")]
		public const float maxPropertyValue = 1f;

		[Token(Token = "0x4002245")]
		public const bool invertValue = false;

		[Token(Token = "0x4002246")]
		public const bool randomValue = true;
	}

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ControllerSourceValue controllerSourceValue;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minControllerValue;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxControllerValue;

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float minPropertyValue;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxPropertyValue;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool invertValue;

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0xD68BC0", Offset = "0xD68BC0", VA = "0xD68BC0", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0xD68BD8", Offset = "0xD68BD8", VA = "0xD68BD8", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0xD6AC38", Offset = "0xD6AC38", VA = "0xD6AC38", Slot = "13")]
	public override void OnValueUpdated(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x60013A8")]
	public abstract void SetProperty(float propertyValue);

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0xD68ED8", Offset = "0xD68ED8", VA = "0xD68ED8")]
	protected VisBasePropertyModifier()
	{
	}
}
[Token(Token = "0x20002AF")]
public abstract class VisBasePropertyTrigger : VisBaseTrigger
{
	[Token(Token = "0x20005DF")]
	public new static class Defaults
	{
		[Token(Token = "0x4002247")]
		public const ControllerSourceValue controllerSourceValue = ControllerSourceValue.Current;

		[Token(Token = "0x4002248")]
		public const float minControllerValue = 0f;

		[Token(Token = "0x4002249")]
		public const float maxControllerValue = 1f;

		[Token(Token = "0x400224A")]
		public const float minPropertyValue = -1f;

		[Token(Token = "0x400224B")]
		public const float maxPropertyValue = 1f;

		[Token(Token = "0x400224C")]
		public const bool invertValue = false;

		[Token(Token = "0x400224D")]
		public const bool randomValue = true;

		[Token(Token = "0x400224E")]
		public const bool limitIncreaseRate = false;

		[Token(Token = "0x400224F")]
		public const float increaseRate = 1f;

		[Token(Token = "0x4002250")]
		public const bool limitDecreaseRate = false;

		[Token(Token = "0x4002251")]
		public const float decreaseRate = 1f;

		[Token(Token = "0x4002252")]
		public const bool returnToRest = false;

		[Token(Token = "0x4002253")]
		public const float restValue = 0f;
	}

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public ControllerSourceValue controllerSourceValue;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minControllerValue;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxControllerValue;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minPropertyValue;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxPropertyValue;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool invertValue;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool randomValue;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool limitIncreaseRate;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float increaseRate;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool limitDecreaseRate;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float decreaseRate;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool returnToRest;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float restValue;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected float m_fTargetPropertyValue;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected float m_fCurrentPropertyValue;

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0xD68F88", Offset = "0xD68F88", VA = "0xD68F88", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0xD68FCC", Offset = "0xD68FCC", VA = "0xD68FCC", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0xD6AC94", Offset = "0xD6AC94", VA = "0xD6AC94", Slot = "13")]
	public override void Update()
	{
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0xD6AFB0", Offset = "0xD6AFB0", VA = "0xD6AFB0", Slot = "14")]
	public override void OnTriggered(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x60013AE")]
	public abstract void SetProperty(float propertyValue);

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0xD693BC", Offset = "0xD693BC", VA = "0xD693BC")]
	protected VisBasePropertyTrigger()
	{
	}
}
[Token(Token = "0x20002B0")]
public abstract class VisBaseTrigger : MonoBehaviour, IVisManagerTarget, IVisBaseControllerTarget
{
	[Token(Token = "0x20005E0")]
	public static class Defaults
	{
		[Token(Token = "0x4002254")]
		public const TriggerType triggerType = TriggerType.GreaterThanChangeThreshold;

		[Token(Token = "0x4002255")]
		public const float triggerThreshold = 0.1f;

		[Token(Token = "0x4002256")]
		public const float triggerReactivateDelay = 0.25f;

		[Token(Token = "0x4002257")]
		public const float triggerRandomReactivateDelay = 0f;
	}

	[Token(Token = "0x20005E1")]
	public enum TriggerType
	{
		[Token(Token = "0x4002259")]
		None,
		[Token(Token = "0x400225A")]
		LessThanValueThreshold,
		[Token(Token = "0x400225B")]
		GreaterThanValueThreshold,
		[Token(Token = "0x400225C")]
		LessThanChangeThreshold,
		[Token(Token = "0x400225D")]
		GreaterThanChangeThreshold
	}

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VisManager m_oVisManager;

	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private string m_szLastVisManagerName;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private VisBaseController controller;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	[SerializeField]
	private string m_szLastControllerName;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TriggerType triggerType;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float triggerThreshold;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float triggerReactivateDelay;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float triggerRandomReactivateDelay;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float m_fTriggerDelayTimer;

	[Token(Token = "0x17000166")]
	public VisManager Manager
	{
		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xD6B08C", Offset = "0xD6B08C", VA = "0xD6B08C", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xD6B094", Offset = "0xD6B094", VA = "0xD6B094", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000167")]
	public string LastManagerName
	{
		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xD6B140", Offset = "0xD6B140", VA = "0xD6B140", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000168")]
	public VisBaseController Controller
	{
		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xD6B148", Offset = "0xD6B148", VA = "0xD6B148", Slot = "7")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xD6B150", Offset = "0xD6B150", VA = "0xD6B150", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x17000169")]
	public string LastControllerName
	{
		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xD6B1F0", Offset = "0xD6B1F0", VA = "0xD6B1F0", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0xD687A4", Offset = "0xD687A4", VA = "0xD687A4", Slot = "10")]
	public virtual void Reset()
	{
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0xD687C4", Offset = "0xD687C4", VA = "0xD687C4", Slot = "11")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0xD6B1F8", Offset = "0xD6B1F8", VA = "0xD6B1F8", Slot = "12")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0xD6ADA4", Offset = "0xD6ADA4", VA = "0xD6ADA4", Slot = "13")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60013BA")]
	public abstract void OnTriggered(float current, float previous, float difference, float adjustedDifference);

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0xD68ABC", Offset = "0xD68ABC", VA = "0xD68ABC")]
	protected VisBaseTrigger()
	{
	}
}
[Token(Token = "0x20002B1")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBE08", Offset = "0x8CBE08")]
public class VisFrequencyController : VisBaseController, IVisDataGroupTarget
{
	[Token(Token = "0x20005E2")]
	public new static class Defaults
	{
		[Token(Token = "0x400225E")]
		public const VisDataValueType subValueType = VisDataValueType.Sum;

		[Token(Token = "0x400225F")]
		public const VisDataValueType finalValueType = VisDataValueType.Average;
	}

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private VisDataGroup dataGroup;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	[SerializeField]
	private string m_szLastDataGroupName;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VisDataValueType subValueType;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public VisDataValueType finalValueType;

	[Token(Token = "0x1700016A")]
	public VisDataGroup DataGroup
	{
		[Token(Token = "0x60013BC")]
		[Address(RVA = "0x1C80958", Offset = "0x1C80958", VA = "0x1C80958", Slot = "13")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013BD")]
		[Address(RVA = "0x1C80960", Offset = "0x1C80960", VA = "0x1C80960", Slot = "14")]
		set
		{
		}
	}

	[Token(Token = "0x1700016B")]
	public string LastDataGroupName
	{
		[Token(Token = "0x60013BE")]
		[Address(RVA = "0x1C80A00", Offset = "0x1C80A00", VA = "0x1C80A00", Slot = "15")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0x1C80A08", Offset = "0x1C80A08", VA = "0x1C80A08", Slot = "7")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0x1C80A34", Offset = "0x1C80A34", VA = "0x1C80A34", Slot = "9")]
	public override void Start()
	{
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x1C80B74", Offset = "0x1C80B74", VA = "0x1C80B74", Slot = "11")]
	public override float GetCustomControllerValue()
	{
		return default(float);
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x1C80C2C", Offset = "0x1C80C2C", VA = "0x1C80C2C", Slot = "12")]
	public override Rect DisplayDebugGUI(int x, int y, int barWidth, int barHeight, int separation, Texture debugTexture)
	{
		return default(Rect);
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x1C8131C", Offset = "0x1C8131C", VA = "0x1C8131C")]
	public VisFrequencyController()
	{
	}
}
[Token(Token = "0x20002B2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBE40", Offset = "0x8CBE40")]
public class VisRandomController : VisBaseController
{
	[Token(Token = "0x20005E3")]
	public new static class Defaults
	{
		[Token(Token = "0x4002260")]
		public const float delayTime = 1f;
	}

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float delayTime;

	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_fCurrentRandomValue;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_fNewValueTimer;

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0x1C876B0", Offset = "0x1C876B0", VA = "0x1C876B0", Slot = "7")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0x1C876B8", Offset = "0x1C876B8", VA = "0x1C876B8", Slot = "9")]
	public override void Start()
	{
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0x1C876C0", Offset = "0x1C876C0", VA = "0x1C876C0", Slot = "11")]
	public override float GetCustomControllerValue()
	{
		return default(float);
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0x1C87724", Offset = "0x1C87724", VA = "0x1C87724")]
	public VisRandomController()
	{
	}
}
[Token(Token = "0x20002B3")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBE78", Offset = "0x8CBE78")]
public class VisSineWaveController : VisBaseController
{
	[Token(Token = "0x20005E4")]
	public new static class Defaults
	{
		[Token(Token = "0x4002261")]
		public const float speedScalar = 1f;
	}

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float speedScalar;

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0x1C87734", Offset = "0x1C87734", VA = "0x1C87734", Slot = "7")]
	public override void Reset()
	{
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0x1C87760", Offset = "0x1C87760", VA = "0x1C87760", Slot = "9")]
	public override void Start()
	{
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0x1C87768", Offset = "0x1C87768", VA = "0x1C87768", Slot = "11")]
	public override float GetCustomControllerValue()
	{
		return default(float);
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0x1C877F8", Offset = "0x1C877F8", VA = "0x1C877F8")]
	public VisSineWaveController()
	{
	}
}
[Token(Token = "0x20002B4")]
public class VisDataContainer
{
	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float average;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float previousAverage;

	[Token(Token = "0x4001355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float averageDifference;

	[Token(Token = "0x4001356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float median;

	[Token(Token = "0x4001357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float previousMedian;

	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float medianDifference;

	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float sum;

	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float previousSum;

	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float sumDifference;

	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minimum;

	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float previousMinimum;

	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minimumDifference;

	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maximum;

	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float previousMaximum;

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maximumDifference;

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0x1C7C7A8", Offset = "0x1C7C7A8", VA = "0x1C7C7A8")]
	public float GetValue(VisDataValueType valueType)
	{
		return default(float);
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0x1C7C7F4", Offset = "0x1C7C7F4", VA = "0x1C7C7F4")]
	public float GetPreviousValue(VisDataValueType valueType)
	{
		return default(float);
	}

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0x1C7C840", Offset = "0x1C7C840", VA = "0x1C7C840")]
	public float GetValueDifference(VisDataValueType valueType)
	{
		return default(float);
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0x1C7C88C", Offset = "0x1C7C88C", VA = "0x1C7C88C")]
	public void UpdatePreviousValues()
	{
	}

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0x1C7C8B8", Offset = "0x1C7C8B8", VA = "0x1C7C8B8")]
	public void ResetCurrentValues()
	{
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0x1C7C8E0", Offset = "0x1C7C8E0", VA = "0x1C7C8E0")]
	public void ApplyBoostAndCutoff(float boost, float cutoff)
	{
	}

	[Token(Token = "0x60013D2")]
	[Address(RVA = "0x1C7CAB4", Offset = "0x1C7CAB4", VA = "0x1C7CAB4")]
	public void UpdateValueDifferences()
	{
	}

	[Token(Token = "0x60013D3")]
	[Address(RVA = "0x1C7CAF4", Offset = "0x1C7CAF4", VA = "0x1C7CAF4")]
	public VisDataContainer()
	{
	}
}
[Token(Token = "0x20002B5")]
public enum VisDataValueType
{
	[Token(Token = "0x4001363")]
	Average,
	[Token(Token = "0x4001364")]
	Median,
	[Token(Token = "0x4001365")]
	Sum,
	[Token(Token = "0x4001366")]
	Minimum,
	[Token(Token = "0x4001367")]
	Maximum
}
[Token(Token = "0x20002B6")]
public enum VisDataSource
{
	[Token(Token = "0x4001369")]
	Raw,
	[Token(Token = "0x400136A")]
	Spectrum
}
[Token(Token = "0x20002B7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBEB0", Offset = "0x8CBEB0")]
public sealed class VisDataGroup : MonoBehaviour, IVisManagerTarget
{
	[Token(Token = "0x20005E5")]
	public static class Defaults
	{
		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int dataGroupNameCounter;

		[Token(Token = "0x4002263")]
		public const string dataGroupName = "Default";

		[Token(Token = "0x4002264")]
		public const VisDataSource dataSource = VisDataSource.Spectrum;

		[Token(Token = "0x4002265")]
		public const int numberSubDataGroups = 5;

		[Token(Token = "0x4002266")]
		public const int frequencyRangeStartIndex = 0;

		[Token(Token = "0x4002267")]
		public const int frequencyRangeEndIndex = 256;

		[Token(Token = "0x4002268")]
		public const float boost = 1f;

		[Token(Token = "0x4002269")]
		public const float cutoff = 1f;
	}

	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private VisManager m_oVisManager;

	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private string m_szLastVisManagerName;

	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string dataGroupName;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VisDataSource dataSource;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int numberSubDataGroups;

	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int frequencyRangeStartIndex;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int frequencyRangeEndIndex;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float boost;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float cutoff;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color debugColor;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private VisDataContainer[] m_aoDataContainers;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<VisSubDataGroup> m_oSubDataGroups;

	[Token(Token = "0x1700016C")]
	public VisManager Manager
	{
		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x1C7CAFC", Offset = "0x1C7CAFC", VA = "0x1C7CAFC", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x1C7CB04", Offset = "0x1C7CB04", VA = "0x1C7CB04", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x1700016D")]
	public string LastManagerName
	{
		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x1C7D4A8", Offset = "0x1C7D4A8", VA = "0x1C7D4A8", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0x1C7D4B0", Offset = "0x1C7D4B0", VA = "0x1C7D4B0")]
	public void Reset()
	{
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0x1C7D574", Offset = "0x1C7D574", VA = "0x1C7D574")]
	public void Awake()
	{
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0x1C7DB5C", Offset = "0x1C7DB5C", VA = "0x1C7DB5C")]
	public void Start()
	{
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0x1C7E914", Offset = "0x1C7E914", VA = "0x1C7E914")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0x1C7D7B4", Offset = "0x1C7D7B4", VA = "0x1C7D7B4")]
	public bool ValidateManager(bool displayWarning)
	{
		return default(bool);
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0x1C7DAC0", Offset = "0x1C7DAC0", VA = "0x1C7DAC0")]
	public void EnsureRegistered()
	{
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0x1C7E9B0", Offset = "0x1C7E9B0", VA = "0x1C7E9B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60013DE")]
	[Address(RVA = "0x1C7F2BC", Offset = "0x1C7F2BC", VA = "0x1C7F2BC")]
	public float GetValue(VisDataValueType finalValueType, VisDataValueType subValueType)
	{
		return default(float);
	}

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0x1C7F370", Offset = "0x1C7F370", VA = "0x1C7F370")]
	public float GetPreviousValue(VisDataValueType finalValueType, VisDataValueType subValueType)
	{
		return default(float);
	}

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0x1C7F424", Offset = "0x1C7F424", VA = "0x1C7F424")]
	public float GetValueDifference(VisDataValueType finalValueType, VisDataValueType subValueType)
	{
		return default(float);
	}

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0x1C7F4D8", Offset = "0x1C7F4D8", VA = "0x1C7F4D8")]
	public Rect DisplayDebugGUI(int x, int y, int barWidth, int barHeight, int separation, Texture debugTexture)
	{
		return default(Rect);
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0x1C800C8", Offset = "0x1C800C8", VA = "0x1C800C8", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0x1C80128", Offset = "0x1C80128", VA = "0x1C80128")]
	public static bool RestoreVisDataGroupTarget(IVisDataGroupTarget target)
	{
		return default(bool);
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0x1C80660", Offset = "0x1C80660", VA = "0x1C80660")]
	public VisDataGroup()
	{
	}
}
[Token(Token = "0x20002B8")]
public interface IVisDataGroupTarget
{
	[Token(Token = "0x1700016E")]
	VisDataGroup DataGroup
	{
		[Token(Token = "0x60013E5")]
		get;
		[Token(Token = "0x60013E6")]
		set;
	}

	[Token(Token = "0x1700016F")]
	string LastDataGroupName
	{
		[Token(Token = "0x60013E7")]
		get;
	}
}
[Token(Token = "0x20002B9")]
public sealed class VisSubDataGroup : VisDataContainer
{
	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int frequencyRangeStartIndex;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int frequencyRangeEndIndex;

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0x1C7E8D4", Offset = "0x1C7E8D4", VA = "0x1C7E8D4")]
	public VisSubDataGroup(int startIndex, int endIndex)
	{
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0x1C7F0C0", Offset = "0x1C7F0C0", VA = "0x1C7F0C0")]
	public void Update(float[] spectrum)
	{
	}
}
[Token(Token = "0x20002BA")]
public interface IVisModifierTarget
{
	[Token(Token = "0x60013EA")]
	void OnValueUpdated(float current, float previous, float difference, float adjustedDifference);
}
[Token(Token = "0x20002BB")]
public interface IVisPrefabSpawnedTarget
{
	[Token(Token = "0x60013EB")]
	void OnSpawned(float current, float previous, float difference, float adjustedDifference);
}
[Token(Token = "0x20002BC")]
public interface IVisTriggerTarget
{
	[Token(Token = "0x60013EC")]
	void OnTriggered(float current, float previous, float difference, float adjustedDifference);
}
[Token(Token = "0x20002BD")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBEE8", Offset = "0x8CBEE8")]
public sealed class VisManager : MonoBehaviour
{
	[Token(Token = "0x20005E6")]
	public static class Defaults
	{
		[Token(Token = "0x400226A")]
		public const Channel channel = Channel.Left;

		[Token(Token = "0x400226B")]
		public const WindowSize windowSize = WindowSize._1024;

		[Token(Token = "0x400226C")]
		public const FFTWindow windowType = FFTWindow.Hamming;

		[Token(Token = "0x400226D")]
		public const bool useAudioListener = false;

		[Token(Token = "0x400226E")]
		public const bool displaySpectrumDebug = false;

		[Token(Token = "0x400226F")]
		public const bool displayDataGroupDebug = false;

		[Token(Token = "0x4002270")]
		public const bool displayControllerDebug = false;

		[Token(Token = "0x4002271")]
		public const int debugSpectrumBarWidth = 1;

		[Token(Token = "0x4002272")]
		public const int debugSpectrumBarHeight = 80;

		[Token(Token = "0x4002273")]
		public const int debugRawAudioBarHeight = 40;

		[Token(Token = "0x4002274")]
		public const int debugDataGroupBarWidth = 4;

		[Token(Token = "0x4002275")]
		public const int debugDataGroupBarHeight = 40;

		[Token(Token = "0x4002276")]
		public const int debugControllerBarWidth = 150;

		[Token(Token = "0x4002277")]
		public const int debugControllerBarHeight = 6;

		[Token(Token = "0x4002278")]
		public const int debugSeparation = 5;
	}

	[Token(Token = "0x20005E7")]
	public enum WindowSize
	{
		[Token(Token = "0x400227A")]
		_64 = 0x40,
		[Token(Token = "0x400227B")]
		_128 = 0x80,
		[Token(Token = "0x400227C")]
		_256 = 0x100,
		[Token(Token = "0x400227D")]
		_512 = 0x200,
		[Token(Token = "0x400227E")]
		_1024 = 0x400,
		[Token(Token = "0x400227F")]
		_2048 = 0x800,
		[Token(Token = "0x4002280")]
		_4096 = 0x1000,
		[Token(Token = "0x4002281")]
		_8192 = 0x2000
	}

	[Token(Token = "0x20005E8")]
	public enum Channel
	{
		[Token(Token = "0x4002283")]
		Left,
		[Token(Token = "0x4002284")]
		Right,
		[Token(Token = "0x4002285")]
		Average,
		[Token(Token = "0x4002286")]
		Min,
		[Token(Token = "0x4002287")]
		Max
	}

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Channel channel;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WindowSize windowSize;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FFTWindow windowType;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource audioSource;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool displaySpectrumDebug;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool displayDataGroupDebug;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool displayControllerDebug;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int debugSpectrumBarWidth;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int debugSpectrumBarHeight;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int debugRawAudioBarHeight;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int debugDataGroupBarWidth;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int debugDataGroupBarHeight;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int debugControllerBarWidth;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int debugControllerBarHeight;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int debugSeparation;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture debugTexture;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float[] m_afSpectrumData;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float[] m_afRawAudioData;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float[] m_afAuxiliaryData;

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<VisDataGroup> m_oDataGroups;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<VisBaseController> m_oControllers;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float m_fMaxDebugValue;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int m_nFrequencyRange;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float m_fFrequencyResolution;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool m_bUseAudioListener;

	[Token(Token = "0x17000170")]
	public ReadOnlyCollection<VisDataGroup> DataGroups
	{
		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x1C805D4", Offset = "0x1C805D4", VA = "0x1C805D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000171")]
	public ReadOnlyCollection<VisBaseController> Controllers
	{
		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x1C82CA0", Offset = "0x1C82CA0", VA = "0x1C82CA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000172")]
	public float FrequencyResolution
	{
		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x1C800C0", Offset = "0x1C800C0", VA = "0x1C800C0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0x1C82D2C", Offset = "0x1C82D2C", VA = "0x1C82D2C")]
	public void Reset()
	{
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0x1C82D68", Offset = "0x1C82D68", VA = "0x1C82D68")]
	public void Start()
	{
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0x1C83284", Offset = "0x1C83284", VA = "0x1C83284")]
	public void SetAudioSource(AudioSource _audioSource)
	{
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0x1C83154", Offset = "0x1C83154", VA = "0x1C83154")]
	public void CalculateFrequencyResolution()
	{
	}

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0x1C8328C", Offset = "0x1C8328C", VA = "0x1C8328C")]
	private void Update()
	{
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0x1C7CD20", Offset = "0x1C7CD20", VA = "0x1C7CD20")]
	public void AddDataGroup(VisDataGroup dataGroup)
	{
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0x1C840A0", Offset = "0x1C840A0", VA = "0x1C840A0")]
	public void AddController(VisBaseController controller)
	{
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0x1C7CC40", Offset = "0x1C7CC40", VA = "0x1C7CC40")]
	public void RemoveDataGroup(VisDataGroup dataGroup)
	{
	}

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0x1C845C8", Offset = "0x1C845C8", VA = "0x1C845C8")]
	public void RemoveController(VisBaseController controller)
	{
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0x1C846A8", Offset = "0x1C846A8", VA = "0x1C846A8")]
	public void ClearDataGroups()
	{
	}

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0x1C84708", Offset = "0x1C84708", VA = "0x1C84708")]
	public void ClearControllers()
	{
	}

	[Token(Token = "0x60013FB")]
	[Address(RVA = "0x1C7F0B8", Offset = "0x1C7F0B8", VA = "0x1C7F0B8")]
	public float[] GetSpectrumData()
	{
		return null;
	}

	[Token(Token = "0x60013FC")]
	[Address(RVA = "0x1C7F0B0", Offset = "0x1C7F0B0", VA = "0x1C7F0B0")]
	public float[] GetRawAudioData()
	{
		return null;
	}

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0x1C83E4C", Offset = "0x1C83E4C", VA = "0x1C83E4C")]
	public VisDataGroup GetDataGroupByName(string dataGroupName)
	{
		return null;
	}

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0x1C84374", Offset = "0x1C84374", VA = "0x1C84374")]
	public VisBaseController GetControllerByName(string controllerName)
	{
		return null;
	}

	[Token(Token = "0x60013FF")]
	[Address(RVA = "0x1C84470", Offset = "0x1C84470", VA = "0x1C84470")]
	public string EnsureUniqueControllerName(string name)
	{
		return null;
	}

	[Token(Token = "0x6001400")]
	[Address(RVA = "0x1C83F48", Offset = "0x1C83F48", VA = "0x1C83F48")]
	public string EnsureUniqueDataGroupName(string name)
	{
		return null;
	}

	[Token(Token = "0x6001401")]
	[Address(RVA = "0x1C84768", Offset = "0x1C84768", VA = "0x1C84768")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0x1C852C8", Offset = "0x1C852C8", VA = "0x1C852C8")]
	private Color GetDebugColor(int freqIndex, VisDataSource dataSource)
	{
		return default(Color);
	}

	[Token(Token = "0x6001403")]
	[Address(RVA = "0x1C854BC", Offset = "0x1C854BC", VA = "0x1C854BC", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6001404")]
	[Address(RVA = "0x1C8552C", Offset = "0x1C8552C", VA = "0x1C8552C")]
	public static bool RestoreVisManagerTarget(IVisManagerTarget target)
	{
		return default(bool);
	}

	[Token(Token = "0x6001405")]
	[Address(RVA = "0x1C85878", Offset = "0x1C85878", VA = "0x1C85878")]
	public VisManager()
	{
	}
}
[Token(Token = "0x20002BE")]
public interface IVisManagerTarget
{
	[Token(Token = "0x17000173")]
	VisManager Manager
	{
		[Token(Token = "0x6001406")]
		get;
		[Token(Token = "0x6001407")]
		set;
	}

	[Token(Token = "0x17000174")]
	string LastManagerName
	{
		[Token(Token = "0x6001408")]
		get;
	}
}
[Token(Token = "0x20002BF")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBF20", Offset = "0x8CBF20")]
public class VisAnimationStatePropertyModifier : VisBasePropertyModifier
{
	[Token(Token = "0x20005E9")]
	public new static class Defaults
	{
		[Token(Token = "0x4002288")]
		public const AnimationStateProperty targetProperty = AnimationStateProperty.NormalizedTime;

		[Token(Token = "0x4002289")]
		public const string targetAnimation = "Idle";
	}

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationStateProperty targetProperty;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string targetAnimation;

	[Token(Token = "0x6001409")]
	[Address(RVA = "0xD68B58", Offset = "0xD68B58", VA = "0xD68B58", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0xD68BD4", Offset = "0xD68BD4", VA = "0xD68BD4", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0xD68D5C", Offset = "0xD68D5C", VA = "0xD68D5C", Slot = "14")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0xD68E64", Offset = "0xD68E64", VA = "0xD68E64")]
	public VisAnimationStatePropertyModifier()
	{
	}
}
[Token(Token = "0x20002C0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBF58", Offset = "0x8CBF58")]
public class VisEmitterPropertyModifier : VisBasePropertyModifier
{
	[Token(Token = "0x20005EA")]
	public new static class Defaults
	{
		[Token(Token = "0x400228A")]
		public const EmitterProperty targetProperty = EmitterProperty.EmitterVelocityScale;
	}

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EmitterProperty targetProperty;

	[Token(Token = "0x600140D")]
	[Address(RVA = "0x1C8081C", Offset = "0x1C8081C", VA = "0x1C8081C", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600140E")]
	[Address(RVA = "0x1C80848", Offset = "0x1C80848", VA = "0x1C80848", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x600140F")]
	[Address(RVA = "0x1C80850", Offset = "0x1C80850", VA = "0x1C80850", Slot = "14")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x6001410")]
	[Address(RVA = "0x1C808C4", Offset = "0x1C808C4", VA = "0x1C808C4")]
	public VisEmitterPropertyModifier()
	{
	}
}
[Token(Token = "0x20002C1")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBF90", Offset = "0x8CBF90")]
public class VisGameObjectPropertyModifier : VisBasePropertyModifier
{
	[Token(Token = "0x20005EB")]
	public new static class Defaults
	{
		[Token(Token = "0x400228B")]
		public const GameObjectProperty targetProperty = GameObjectProperty.UniformScale;
	}

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObjectProperty targetProperty;

	[Token(Token = "0x6001411")]
	[Address(RVA = "0x1C8132C", Offset = "0x1C8132C", VA = "0x1C8132C", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001412")]
	[Address(RVA = "0x1C81358", Offset = "0x1C81358", VA = "0x1C81358", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0x1C81360", Offset = "0x1C81360", VA = "0x1C81360", Slot = "14")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0x1C825CC", Offset = "0x1C825CC", VA = "0x1C825CC")]
	public VisGameObjectPropertyModifier()
	{
	}
}
[Token(Token = "0x20002C2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CBFC8", Offset = "0x8CBFC8")]
public class VisLightPropertyModifier : VisBasePropertyModifier
{
	[Token(Token = "0x20005EC")]
	public new static class Defaults
	{
		[Token(Token = "0x400228C")]
		public const LightProperty targetProperty = LightProperty.Intensity;
	}

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LightProperty targetProperty;

	[Token(Token = "0x6001415")]
	[Address(RVA = "0x1C8272C", Offset = "0x1C8272C", VA = "0x1C8272C", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0x1C82758", Offset = "0x1C82758", VA = "0x1C82758", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0x1C82760", Offset = "0x1C82760", VA = "0x1C82760", Slot = "14")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x6001418")]
	[Address(RVA = "0x1C82BE4", Offset = "0x1C82BE4", VA = "0x1C82BE4")]
	public VisLightPropertyModifier()
	{
	}
}
[Token(Token = "0x20002C3")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC000", Offset = "0x8CC000")]
public class VisMaterialLerpModifier : VisBasePropertyModifier
{
	[Token(Token = "0x20005ED")]
	public new static class Defaults
	{
	}

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material lerpFromMaterial;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material lerpToMaterial;

	[Token(Token = "0x6001419")]
	[Address(RVA = "0x1C85940", Offset = "0x1C85940", VA = "0x1C85940", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0x1C85948", Offset = "0x1C85948", VA = "0x1C85948", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0x1C85950", Offset = "0x1C85950", VA = "0x1C85950", Slot = "14")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0x1C85B34", Offset = "0x1C85B34", VA = "0x1C85B34")]
	public VisMaterialLerpModifier()
	{
	}
}
[Token(Token = "0x20002C4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC038", Offset = "0x8CC038")]
public class VisMaterialPropertyModifier : VisBasePropertyModifier
{
	[Token(Token = "0x20005EE")]
	public new static class Defaults
	{
		[Token(Token = "0x400228D")]
		public const string targetProperty = "";

		[Token(Token = "0x400228E")]
		public const bool applyToMaterialIndex = false;

		[Token(Token = "0x400228F")]
		public const int materialIndex = 0;
	}

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string targetProperty;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool applyToMaterialIndex;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int materialIndex;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool specialTargetProperty;

	[Token(Token = "0x600141D")]
	[Address(RVA = "0x1C85D38", Offset = "0x1C85D38", VA = "0x1C85D38", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0x1C85D9C", Offset = "0x1C85D9C", VA = "0x1C85D9C", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x600141F")]
	[Address(RVA = "0x1C85F10", Offset = "0x1C85F10", VA = "0x1C85F10", Slot = "14")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x6001420")]
	[Address(RVA = "0x1C86688", Offset = "0x1C86688", VA = "0x1C86688")]
	public VisMaterialPropertyModifier()
	{
	}
}
[Token(Token = "0x20002C5")]
public delegate void ValueUpdatedDelegate(float current, float previous, float difference, float adjustedDifference);
[Token(Token = "0x20002C6")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC070", Offset = "0x8CC070")]
public class VisTargetModifier : VisBaseModifier
{
	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> targetGameObjects;

	[Token(Token = "0x14000034")]
	public event ValueUpdatedDelegate ValueUpdated
	{
		[Token(Token = "0x6001425")]
		[Address(RVA = "0x1C87D78", Offset = "0x1C87D78", VA = "0x1C87D78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EAE00", Offset = "0x8EAE00")]
		add
		{
		}
		[Token(Token = "0x6001426")]
		[Address(RVA = "0x1C87E64", Offset = "0x1C87E64", VA = "0x1C87E64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EAE10", Offset = "0x8EAE10")]
		remove
		{
		}
	}

	[Token(Token = "0x6001427")]
	[Address(RVA = "0x1C87F50", Offset = "0x1C87F50", VA = "0x1C87F50", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001428")]
	[Address(RVA = "0x1C88218", Offset = "0x1C88218", VA = "0x1C88218", Slot = "12")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0x1C87F78", Offset = "0x1C87F78", VA = "0x1C87F78")]
	public void CreateAllDelegates()
	{
	}

	[Token(Token = "0x600142A")]
	[Address(RVA = "0x1C88240", Offset = "0x1C88240", VA = "0x1C88240")]
	public void DestroyAllDelegates()
	{
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0x1C884E0", Offset = "0x1C884E0", VA = "0x1C884E0")]
	public void AddGameObject(GameObject gameObject)
	{
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0x1C887A8", Offset = "0x1C887A8", VA = "0x1C887A8")]
	public void RemoveGameObject(GameObject gameObject)
	{
	}

	[Token(Token = "0x600142D")]
	[Address(RVA = "0x1C88A10", Offset = "0x1C88A10", VA = "0x1C88A10", Slot = "13")]
	public override void OnValueUpdated(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0x1C88B18", Offset = "0x1C88B18", VA = "0x1C88B18")]
	public VisTargetModifier()
	{
	}
}
[Token(Token = "0x20002C7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC0A8", Offset = "0x8CC0A8")]
public class VisAddForceTrigger : VisBaseTrigger
{
	[Token(Token = "0x20005EF")]
	public new static class Defaults
	{
		[Token(Token = "0x4002290")]
		public const ControllerSourceValue controllerValue = ControllerSourceValue.Current;

		[Token(Token = "0x4002291")]
		public const float minControllerValue = 0f;

		[Token(Token = "0x4002292")]
		public const float maxControllerValue = 1f;

		[Token(Token = "0x4002293")]
		public const float minForceValue = 10f;

		[Token(Token = "0x4002294")]
		public const float maxForceValue = 200f;

		[Token(Token = "0x4002295")]
		public const bool invertValue = false;

		[Token(Token = "0x4002296")]
		public const bool randomValue = false;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 forceDirection;

		[Token(Token = "0x4002298")]
		public const ForceMode forceMode = ForceMode.Impulse;
	}

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public ControllerSourceValue controllerValue;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minControllerValue;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxControllerValue;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minForceValue;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxForceValue;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool invertValue;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool randomValue;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 forceDirection;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ForceMode forceMode;

	[Token(Token = "0x600142F")]
	[Address(RVA = "0xD68788", Offset = "0xD68788", VA = "0xD68788", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0xD687C0", Offset = "0xD687C0", VA = "0xD687C0", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0xD68890", Offset = "0xD68890", VA = "0xD68890", Slot = "14")]
	public override void OnTriggered(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0xD68A0C", Offset = "0xD68A0C", VA = "0xD68A0C")]
	public VisAddForceTrigger()
	{
	}
}
[Token(Token = "0x20002C8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC0E0", Offset = "0x8CC0E0")]
public class VisAnimationStatePropertyTrigger : VisBasePropertyTrigger
{
	[Token(Token = "0x20005F0")]
	public new static class Defaults
	{
		[Token(Token = "0x4002299")]
		public const AnimationStateProperty targetProperty = AnimationStateProperty.NormalizedTime;

		[Token(Token = "0x400229A")]
		public const string targetAnimation = "Idle";
	}

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationStateProperty targetProperty;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string targetAnimation;

	[Token(Token = "0x6001433")]
	[Address(RVA = "0xD68EF4", Offset = "0xD68EF4", VA = "0xD68EF4", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001434")]
	[Address(RVA = "0xD68FC8", Offset = "0xD68FC8", VA = "0xD68FC8", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0xD69208", Offset = "0xD69208", VA = "0xD69208", Slot = "15")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x6001436")]
	[Address(RVA = "0xD6931C", Offset = "0xD6931C", VA = "0xD6931C")]
	public VisAnimationStatePropertyTrigger()
	{
	}
}
[Token(Token = "0x20002C9")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC118", Offset = "0x8CC118")]
public class VisEmitParticlesTrigger : VisBaseTrigger
{
	[Token(Token = "0x20005F1")]
	public new static class Defaults
	{
	}

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int emitCount;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int emitCountVariance;

	[Token(Token = "0x6001437")]
	[Address(RVA = "0x1C80728", Offset = "0x1C80728", VA = "0x1C80728", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0x1C80730", Offset = "0x1C80730", VA = "0x1C80730", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0x1C80738", Offset = "0x1C80738", VA = "0x1C80738", Slot = "14")]
	public override void OnTriggered(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0x1C8080C", Offset = "0x1C8080C", VA = "0x1C8080C")]
	public VisEmitParticlesTrigger()
	{
	}
}
[Token(Token = "0x20002CA")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC150", Offset = "0x8CC150")]
public class VisEmitterPropertyTrigger : VisBasePropertyTrigger
{
	[Token(Token = "0x20005F2")]
	public new static class Defaults
	{
		[Token(Token = "0x400229B")]
		public const EmitterProperty targetProperty = EmitterProperty.EmitterVelocityScale;
	}

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public EmitterProperty targetProperty;

	[Token(Token = "0x600143B")]
	[Address(RVA = "0x1C808D4", Offset = "0x1C808D4", VA = "0x1C808D4", Slot = "15")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x600143C")]
	[Address(RVA = "0x1C80948", Offset = "0x1C80948", VA = "0x1C80948")]
	public VisEmitterPropertyTrigger()
	{
	}
}
[Token(Token = "0x20002CB")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC188", Offset = "0x8CC188")]
public class VisGameObjectPropertyTrigger : VisBasePropertyTrigger
{
	[Token(Token = "0x20005F3")]
	public new static class Defaults
	{
		[Token(Token = "0x400229C")]
		public const GameObjectProperty targetProperty = GameObjectProperty.UniformScale;
	}

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObjectProperty targetProperty;

	[Token(Token = "0x600143D")]
	[Address(RVA = "0x1C825DC", Offset = "0x1C825DC", VA = "0x1C825DC", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0x1C82608", Offset = "0x1C82608", VA = "0x1C82608", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0x1C82610", Offset = "0x1C82610", VA = "0x1C82610", Slot = "15")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0x1C82648", Offset = "0x1C82648", VA = "0x1C82648")]
	public VisGameObjectPropertyTrigger()
	{
	}
}
[Token(Token = "0x20002CC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC1C0", Offset = "0x8CC1C0")]
public class VisLightPropertyTrigger : VisBasePropertyTrigger
{
	[Token(Token = "0x20005F4")]
	public new static class Defaults
	{
		[Token(Token = "0x400229D")]
		public const LightProperty targetProperty = LightProperty.Intensity;
	}

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public LightProperty targetProperty;

	[Token(Token = "0x6001441")]
	[Address(RVA = "0x1C82BF4", Offset = "0x1C82BF4", VA = "0x1C82BF4", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0x1C82C20", Offset = "0x1C82C20", VA = "0x1C82C20", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0x1C82C28", Offset = "0x1C82C28", VA = "0x1C82C28", Slot = "15")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x6001444")]
	[Address(RVA = "0x1C82C90", Offset = "0x1C82C90", VA = "0x1C82C90")]
	public VisLightPropertyTrigger()
	{
	}
}
[Token(Token = "0x20002CD")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC1F8", Offset = "0x8CC1F8")]
public class VisMaterialLerpTrigger : VisBasePropertyTrigger
{
	[Token(Token = "0x20005F5")]
	public new static class Defaults
	{
	}

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material lerpFromMaterial;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material lerpToMaterial;

	[Token(Token = "0x6001445")]
	[Address(RVA = "0x1C85B3C", Offset = "0x1C85B3C", VA = "0x1C85B3C", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0x1C85B44", Offset = "0x1C85B44", VA = "0x1C85B44", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001447")]
	[Address(RVA = "0x1C85B4C", Offset = "0x1C85B4C", VA = "0x1C85B4C", Slot = "15")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0x1C85D30", Offset = "0x1C85D30", VA = "0x1C85D30")]
	public VisMaterialLerpTrigger()
	{
	}
}
[Token(Token = "0x20002CE")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC230", Offset = "0x8CC230")]
public class VisMaterialPropertyTrigger : VisBasePropertyTrigger
{
	[Token(Token = "0x20005F6")]
	public new static class Defaults
	{
		[Token(Token = "0x400229E")]
		public const string targetProperty = "";

		[Token(Token = "0x400229F")]
		public const bool applyToMaterialIndex = false;

		[Token(Token = "0x40022A0")]
		public const int materialIndex = 0;
	}

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string targetProperty;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool applyToMaterialIndex;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int materialIndex;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool specialTargetProperty;

	[Token(Token = "0x6001449")]
	[Address(RVA = "0x1C866E0", Offset = "0x1C866E0", VA = "0x1C866E0", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0x1C86744", Offset = "0x1C86744", VA = "0x1C86744", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0x1C868B8", Offset = "0x1C868B8", VA = "0x1C868B8", Slot = "15")]
	public override void SetProperty(float propertyValue)
	{
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0x1C87030", Offset = "0x1C87030", VA = "0x1C87030")]
	public VisMaterialPropertyTrigger()
	{
	}
}
[Token(Token = "0x20002CF")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC268", Offset = "0x8CC268")]
public class VisMessageTrigger : VisTargetTrigger
{
	[Token(Token = "0x20005F7")]
	public new static class Defaults
	{
		[Token(Token = "0x40022A1")]
		public const string messageName = "TriggerMessage";

		[Token(Token = "0x40022A2")]
		public const ControllerSourceValue messageParameter = ControllerSourceValue.Current;
	}

	[Token(Token = "0x20005F8")]
	public enum ControllerSourceValue
	{
		[Token(Token = "0x40022A4")]
		None,
		[Token(Token = "0x40022A5")]
		Current,
		[Token(Token = "0x40022A6")]
		Previous,
		[Token(Token = "0x40022A7")]
		Difference
	}

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string messageName;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ControllerSourceValue messageParameter;

	[Token(Token = "0x600144D")]
	[Address(RVA = "0x1C87088", Offset = "0x1C87088", VA = "0x1C87088", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x600144E")]
	[Address(RVA = "0x1C870EC", Offset = "0x1C870EC", VA = "0x1C870EC", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x600144F")]
	[Address(RVA = "0x1C8713C", Offset = "0x1C8713C", VA = "0x1C8713C", Slot = "13")]
	public override void Update()
	{
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0x1C8714C", Offset = "0x1C8714C", VA = "0x1C8714C", Slot = "14")]
	public override void OnTriggered(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x6001451")]
	[Address(RVA = "0x1C87458", Offset = "0x1C87458", VA = "0x1C87458")]
	public VisMessageTrigger()
	{
	}
}
[Token(Token = "0x20002D0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC2A0", Offset = "0x8CC2A0")]
public class VisSpawnPrefabTrigger : VisBaseTrigger
{
	[Token(Token = "0x20005F9")]
	public new static class Defaults
	{
		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 randomOffset;
	}

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject prefab;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 randomOffset;

	[Token(Token = "0x6001452")]
	[Address(RVA = "0x1C87808", Offset = "0x1C87808", VA = "0x1C87808", Slot = "10")]
	public override void Reset()
	{
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0x1C87888", Offset = "0x1C87888", VA = "0x1C87888", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001454")]
	[Address(RVA = "0x1C87890", Offset = "0x1C87890", VA = "0x1C87890", Slot = "14")]
	public override void OnTriggered(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x6001455")]
	[Address(RVA = "0x1C87C7C", Offset = "0x1C87C7C", VA = "0x1C87C7C")]
	public VisSpawnPrefabTrigger()
	{
	}
}
[Token(Token = "0x20002D1")]
public delegate void TriggeredDelegate(float current, float previous, float difference, float adjustedDifference);
[Token(Token = "0x20002D2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC2D8", Offset = "0x8CC2D8")]
public class VisTargetTrigger : VisBaseTrigger
{
	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<GameObject> targetGameObjects;

	[Token(Token = "0x14000035")]
	public event TriggeredDelegate Triggered
	{
		[Token(Token = "0x600145A")]
		[Address(RVA = "0x1C88B88", Offset = "0x1C88B88", VA = "0x1C88B88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EAE20", Offset = "0x8EAE20")]
		add
		{
		}
		[Token(Token = "0x600145B")]
		[Address(RVA = "0x1C88C74", Offset = "0x1C88C74", VA = "0x1C88C74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EAE30", Offset = "0x8EAE30")]
		remove
		{
		}
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0x1C87114", Offset = "0x1C87114", VA = "0x1C87114", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x600145D")]
	[Address(RVA = "0x1C89000", Offset = "0x1C89000", VA = "0x1C89000", Slot = "12")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600145E")]
	[Address(RVA = "0x1C87144", Offset = "0x1C87144", VA = "0x1C87144", Slot = "13")]
	public override void Update()
	{
	}

	[Token(Token = "0x600145F")]
	[Address(RVA = "0x1C88D60", Offset = "0x1C88D60", VA = "0x1C88D60")]
	public void CreateAllDelegates()
	{
	}

	[Token(Token = "0x6001460")]
	[Address(RVA = "0x1C89028", Offset = "0x1C89028", VA = "0x1C89028")]
	public void DestroyAllDelegates()
	{
	}

	[Token(Token = "0x6001461")]
	[Address(RVA = "0x1C892C8", Offset = "0x1C892C8", VA = "0x1C892C8")]
	public void AddGameObject(GameObject gameObject)
	{
	}

	[Token(Token = "0x6001462")]
	[Address(RVA = "0x1C89590", Offset = "0x1C89590", VA = "0x1C89590")]
	public void RemoveGameObject(GameObject gameObject)
	{
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0x1C87350", Offset = "0x1C87350", VA = "0x1C87350", Slot = "14")]
	public override void OnTriggered(float current, float previous, float difference, float adjustedDifference)
	{
	}

	[Token(Token = "0x6001464")]
	[Address(RVA = "0x1C874B4", Offset = "0x1C874B4", VA = "0x1C874B4")]
	public VisTargetTrigger()
	{
	}
}
[Token(Token = "0x20002D3")]
public enum ControllerSourceValue
{
	[Token(Token = "0x40013BC")]
	Current,
	[Token(Token = "0x40013BD")]
	Previous,
	[Token(Token = "0x40013BE")]
	Difference
}
[Token(Token = "0x20002D4")]
public static class VisHelper
{
	[Token(Token = "0x6001465")]
	[Address(RVA = "0x1C7E444", Offset = "0x1C7E444", VA = "0x1C7E444")]
	public static int Validate(int currentValue, int minValue, int maxValue, int defaultValue, UnityEngine.Object obj, string fieldName, bool error)
	{
		return default(int);
	}

	[Token(Token = "0x6001466")]
	[Address(RVA = "0x1C7DFAC", Offset = "0x1C7DFAC", VA = "0x1C7DFAC")]
	public static float Validate(float currentValue, float minValue, float maxValue, float defaultValue, UnityEngine.Object obj, string fieldName, bool error)
	{
		return default(float);
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0x1C82658", Offset = "0x1C82658", VA = "0x1C82658")]
	public static float ConvertBetweenRanges(float sourceValue, float sourceMin, float sourceMax, float destMin, float destMax, bool invertDestValue)
	{
		return default(float);
	}
}
[Token(Token = "0x20002D5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC310", Offset = "0x8CC310")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC310", Offset = "0x8CC310")]
public class VisMicrophone : MonoBehaviour
{
	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string microphoneDevice;

	[Token(Token = "0x6001468")]
	[Address(RVA = "0x1C87524", Offset = "0x1C87524", VA = "0x1C87524")]
	private void Start()
	{
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0x1C87590", Offset = "0x1C87590", VA = "0x1C87590")]
	public VisMicrophone()
	{
	}
}
[Token(Token = "0x20002D6")]
public enum GameObjectProperty
{
	[Token(Token = "0x40013C1")]
	XPosition,
	[Token(Token = "0x40013C2")]
	YPosition,
	[Token(Token = "0x40013C3")]
	ZPosition,
	[Token(Token = "0x40013C4")]
	XRotation,
	[Token(Token = "0x40013C5")]
	YRotation,
	[Token(Token = "0x40013C6")]
	ZRotation,
	[Token(Token = "0x40013C7")]
	XVelocity,
	[Token(Token = "0x40013C8")]
	YVelocity,
	[Token(Token = "0x40013C9")]
	ZVelocity,
	[Token(Token = "0x40013CA")]
	XAngularVelocity,
	[Token(Token = "0x40013CB")]
	YAngularVelocity,
	[Token(Token = "0x40013CC")]
	ZAngularVelocity,
	[Token(Token = "0x40013CD")]
	UniformScale,
	[Token(Token = "0x40013CE")]
	XScale,
	[Token(Token = "0x40013CF")]
	YScale,
	[Token(Token = "0x40013D0")]
	ZScale
}
[Token(Token = "0x20002D7")]
public enum EmitterProperty
{
	[Token(Token = "0x40013D2")]
	AngularVelocity,
	[Token(Token = "0x40013D3")]
	RandomAngularVelocity,
	[Token(Token = "0x40013D4")]
	EmitterVelocityScale,
	[Token(Token = "0x40013D5")]
	MinSize,
	[Token(Token = "0x40013D6")]
	MaxSize,
	[Token(Token = "0x40013D7")]
	MinEnergy,
	[Token(Token = "0x40013D8")]
	MaxEnergy,
	[Token(Token = "0x40013D9")]
	MinEmission,
	[Token(Token = "0x40013DA")]
	MaxEmission
}
[Token(Token = "0x20002D8")]
public enum LightProperty
{
	[Token(Token = "0x40013DC")]
	ColorRed,
	[Token(Token = "0x40013DD")]
	ColorGreen,
	[Token(Token = "0x40013DE")]
	ColorBlue,
	[Token(Token = "0x40013DF")]
	ColorRGB,
	[Token(Token = "0x40013E0")]
	ColorAlpha,
	[Token(Token = "0x40013E1")]
	Intensity,
	[Token(Token = "0x40013E2")]
	Range,
	[Token(Token = "0x40013E3")]
	SpotAngle,
	[Token(Token = "0x40013E4")]
	ShadowBias,
	[Token(Token = "0x40013E5")]
	ShadowSoftness_DEPRECATED,
	[Token(Token = "0x40013E6")]
	ShadowSoftnessFade_DEPRECATED,
	[Token(Token = "0x40013E7")]
	ShadowStrength
}
[Token(Token = "0x20002D9")]
public enum AnimationStateProperty
{
	[Token(Token = "0x40013E9")]
	Speed,
	[Token(Token = "0x40013EA")]
	NormalizedTime,
	[Token(Token = "0x40013EB")]
	Weight
}
[Token(Token = "0x20002DA")]
public static class VisPropertyHelper
{
	[Token(Token = "0x600146A")]
	[Address(RVA = "0x1C81398", Offset = "0x1C81398", VA = "0x1C81398")]
	public static void SetGameObjectProperty(GameObject gameObject, GameObjectProperty targetProperty, float propertyValue)
	{
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0x1C827C8", Offset = "0x1C827C8", VA = "0x1C827C8")]
	public static void SetLightProperty(Light light, LightProperty targetProperty, float propertyValue)
	{
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0x1C875E8", Offset = "0x1C875E8", VA = "0x1C875E8")]
	public static void SetAnimationStateProperty(AnimationState animationState, AnimationStateProperty targetProperty, float propertyValue)
	{
	}
}
namespace UltimateGameTools.MeshSimplifier
{
	[Serializable]
	[Token(Token = "0x20002DB")]
	public class MeshUniqueVertices
	{
		[Serializable]
		[Token(Token = "0x20005FA")]
		public class ListIndices
		{
			[Token(Token = "0x40022A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<int> m_listIndices;

			[Token(Token = "0x60025DB")]
			[Address(RVA = "0xB3B7D0", Offset = "0xB3B7D0", VA = "0xB3B7D0")]
			public ListIndices()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005FB")]
		public class SerializableBoneWeight
		{
			[Token(Token = "0x40022AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int _boneIndex0;

			[Token(Token = "0x40022AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int _boneIndex1;

			[Token(Token = "0x40022AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int _boneIndex2;

			[Token(Token = "0x40022AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int _boneIndex3;

			[Token(Token = "0x40022AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float _boneWeight0;

			[Token(Token = "0x40022AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float _boneWeight1;

			[Token(Token = "0x40022B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float _boneWeight2;

			[Token(Token = "0x40022B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float _boneWeight3;

			[Token(Token = "0x60025DC")]
			[Address(RVA = "0xB3B9EC", Offset = "0xB3B9EC", VA = "0xB3B9EC")]
			public SerializableBoneWeight(BoneWeight boneWeight)
			{
			}

			[Token(Token = "0x60025DD")]
			[Address(RVA = "0xB3BAAC", Offset = "0xB3BAAC", VA = "0xB3BAAC")]
			public BoneWeight ToBoneWeight()
			{
				return default(BoneWeight);
			}
		}

		[Token(Token = "0x20005FC")]
		public class UniqueVertex
		{
			[Token(Token = "0x40022B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nFixedX;

			[Token(Token = "0x40022B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int m_nFixedY;

			[Token(Token = "0x40022B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int m_nFixedZ;

			[Token(Token = "0x40022B5")]
			private const float fDecimalMultiplier = 100000f;

			[Token(Token = "0x60025DE")]
			[Address(RVA = "0xB3BB64", Offset = "0xB3BB64", VA = "0xB3BB64", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x60025DF")]
			[Address(RVA = "0xB3BC38", Offset = "0xB3BC38", VA = "0xB3BC38", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x60025E0")]
			[Address(RVA = "0xB3B844", Offset = "0xB3B844", VA = "0xB3B844")]
			public UniqueVertex(Vector3 v3Vertex)
			{
			}

			[Token(Token = "0x60025E1")]
			[Address(RVA = "0xB3BC98", Offset = "0xB3BC98", VA = "0xB3BC98")]
			public Vector3 ToVertex()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60025E2")]
			[Address(RVA = "0xB3BD48", Offset = "0xB3BD48", VA = "0xB3BD48")]
			public static bool operator ==(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x60025E3")]
			[Address(RVA = "0xB3BD80", Offset = "0xB3BD80", VA = "0xB3BD80")]
			public static bool operator !=(UniqueVertex a, UniqueVertex b)
			{
				return default(bool);
			}

			[Token(Token = "0x60025E4")]
			[Address(RVA = "0xB3BC4C", Offset = "0xB3BC4C", VA = "0xB3BC4C")]
			private void FromVertex(Vector3 vertex)
			{
			}

			[Token(Token = "0x60025E5")]
			[Address(RVA = "0xB3BDC4", Offset = "0xB3BDC4", VA = "0xB3BDC4")]
			private int CoordToFixed(float fCoord)
			{
				return default(int);
			}

			[Token(Token = "0x60025E6")]
			[Address(RVA = "0xB3BD24", Offset = "0xB3BD24", VA = "0xB3BD24")]
			private float FixedToCoord(int nFixed)
			{
				return default(float);
			}
		}

		[Token(Token = "0x20005FD")]
		private class RepeatedVertex
		{
			[Token(Token = "0x40022B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _nFaceIndex;

			[Token(Token = "0x40022B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int _nOriginalVertexIndex;

			[Token(Token = "0x170002F2")]
			public int FaceIndex
			{
				[Token(Token = "0x60025E7")]
				[Address(RVA = "0xB3BA9C", Offset = "0xB3BA9C", VA = "0xB3BA9C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170002F3")]
			public int OriginalVertexIndex
			{
				[Token(Token = "0x60025E8")]
				[Address(RVA = "0xB3BAA4", Offset = "0xB3BAA4", VA = "0xB3BAA4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60025E9")]
			[Address(RVA = "0xB3B894", Offset = "0xB3B894", VA = "0xB3B894")]
			public RepeatedVertex(int nFaceIndex, int nOriginalVertexIndex)
			{
			}
		}

		[Token(Token = "0x20005FE")]
		private class RepeatedVertexList
		{
			[Token(Token = "0x40022B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_nUniqueIndex;

			[Token(Token = "0x40022B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<RepeatedVertex> m_listRepeatedVertices;

			[Token(Token = "0x170002F4")]
			public int UniqueIndex
			{
				[Token(Token = "0x60025EA")]
				[Address(RVA = "0xB3B93C", Offset = "0xB3B93C", VA = "0xB3B93C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60025EB")]
			[Address(RVA = "0xB3B944", Offset = "0xB3B944", VA = "0xB3B944")]
			public RepeatedVertexList(int nUniqueIndex, RepeatedVertex repeatedVertex)
			{
			}

			[Token(Token = "0x60025EC")]
			[Address(RVA = "0xB3B8CC", Offset = "0xB3B8CC", VA = "0xB3B8CC")]
			public void Add(RepeatedVertex repeatedVertex)
			{
			}
		}

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<Vector3> m_listVertices;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Vector3> m_listVerticesWorld;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<SerializableBoneWeight> m_listBoneWeights;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ListIndices[] m_aFaceList;

		[Token(Token = "0x17000175")]
		public ListIndices[] SubmeshesFaceList
		{
			[Token(Token = "0x600146D")]
			[Address(RVA = "0xB3B00C", Offset = "0xB3B00C", VA = "0xB3B00C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000176")]
		public List<Vector3> ListVertices
		{
			[Token(Token = "0x600146E")]
			[Address(RVA = "0xB3B014", Offset = "0xB3B014", VA = "0xB3B014")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		public List<Vector3> ListVerticesWorld
		{
			[Token(Token = "0x600146F")]
			[Address(RVA = "0xB3B01C", Offset = "0xB3B01C", VA = "0xB3B01C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		public List<SerializableBoneWeight> ListBoneWeights
		{
			[Token(Token = "0x6001470")]
			[Address(RVA = "0xB3B024", Offset = "0xB3B024", VA = "0xB3B024")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xB3B02C", Offset = "0xB3B02C", VA = "0xB3B02C")]
		public void BuildData(Mesh sourceMesh, Vector3[] av3VerticesWorld)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xB3BA94", Offset = "0xB3BA94", VA = "0xB3BA94")]
		public MeshUniqueVertices()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002DC")]
	public class RelevanceSphere
	{
		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bExpanded;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 m_v3Position;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 m_v3Rotation;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 m_v3Scale;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_fRelevance;

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xB3BE5C", Offset = "0xB3BE5C", VA = "0xB3BE5C")]
		public RelevanceSphere()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xB3BED8", Offset = "0xB3BED8", VA = "0xB3BED8")]
		public void SetDefault(Transform target, float fRelevance)
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class Simplifier : MonoBehaviour
	{
		[Token(Token = "0x20005FF")]
		public delegate void ProgressDelegate(string strTitle, string strProgressMessage, float fT);

		[Token(Token = "0x2000600")]
		private class Triangle
		{
			[Token(Token = "0x40022BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vertex[] m_aVertices;

			[Token(Token = "0x40022BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool m_bUVData;

			[Token(Token = "0x40022BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int[] m_aUV;

			[Token(Token = "0x40022BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int[] m_aIndices;

			[Token(Token = "0x40022BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 m_v3Normal;

			[Token(Token = "0x40022BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int m_nSubMesh;

			[Token(Token = "0x170002F5")]
			public Vertex[] Vertices
			{
				[Token(Token = "0x60025F1")]
				[Address(RVA = "0xD5085C", Offset = "0xD5085C", VA = "0xD5085C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F6")]
			public bool HasUVData
			{
				[Token(Token = "0x60025F2")]
				[Address(RVA = "0xD516CC", Offset = "0xD516CC", VA = "0xD516CC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170002F7")]
			public int[] IndicesUV
			{
				[Token(Token = "0x60025F3")]
				[Address(RVA = "0xD5084C", Offset = "0xD5084C", VA = "0xD5084C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F8")]
			public Vector3 Normal
			{
				[Token(Token = "0x60025F4")]
				[Address(RVA = "0xD516D4", Offset = "0xD516D4", VA = "0xD516D4")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170002F9")]
			public int[] Indices
			{
				[Token(Token = "0x60025F5")]
				[Address(RVA = "0xD50854", Offset = "0xD50854", VA = "0xD50854")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025F6")]
			[Address(RVA = "0xD516E0", Offset = "0xD516E0", VA = "0xD516E0")]
			public Triangle(Simplifier simplifier, int nSubMesh, Vertex v0, Vertex v1, Vertex v2, bool bUVData, int nIndex1, int nIndex2, int nIndex3)
			{
			}

			[Token(Token = "0x60025F7")]
			[Address(RVA = "0xD51E2C", Offset = "0xD51E2C", VA = "0xD51E2C")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x60025F8")]
			[Address(RVA = "0xD52264", Offset = "0xD52264", VA = "0xD52264")]
			public bool HasVertex(Vertex v)
			{
				return default(bool);
			}

			[Token(Token = "0x60025F9")]
			[Address(RVA = "0xD51C38", Offset = "0xD51C38", VA = "0xD51C38")]
			public void ComputeNormal()
			{
			}

			[Token(Token = "0x60025FA")]
			[Address(RVA = "0xD52338", Offset = "0xD52338", VA = "0xD52338")]
			public int TexAt(Vertex vertex)
			{
				return default(int);
			}

			[Token(Token = "0x60025FB")]
			[Address(RVA = "0xD52440", Offset = "0xD52440", VA = "0xD52440")]
			public int TexAt(int i)
			{
				return default(int);
			}

			[Token(Token = "0x60025FC")]
			[Address(RVA = "0xD52494", Offset = "0xD52494", VA = "0xD52494")]
			public void SetTexAt(Vertex vertex, int uv)
			{
			}

			[Token(Token = "0x60025FD")]
			[Address(RVA = "0xD525B0", Offset = "0xD525B0", VA = "0xD525B0")]
			public void SetTexAt(int i, int uv)
			{
			}

			[Token(Token = "0x60025FE")]
			[Address(RVA = "0xD52610", Offset = "0xD52610", VA = "0xD52610")]
			public void ReplaceVertex(Vertex vold, Vertex vnew)
			{
			}
		}

		[Token(Token = "0x2000601")]
		private class TriangleList
		{
			[Token(Token = "0x40022C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Triangle> m_listTriangles;

			[Token(Token = "0x60025FF")]
			[Address(RVA = "0xD4F190", Offset = "0xD4F190", VA = "0xD4F190")]
			public TriangleList()
			{
			}
		}

		[Token(Token = "0x2000602")]
		private class Vertex
		{
			[Token(Token = "0x40022C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 m_v3Position;

			[Token(Token = "0x40022C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 m_v3PositionWorld;

			[Token(Token = "0x40022C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool m_bHasBoneWeight;

			[Token(Token = "0x40022C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public BoneWeight m_boneWeight;

			[Token(Token = "0x40022C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int m_nID;

			[Token(Token = "0x40022C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<Vertex> m_listNeighbors;

			[Token(Token = "0x40022C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<Triangle> m_listFaces;

			[Token(Token = "0x40022C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float m_fObjDist;

			[Token(Token = "0x40022C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vertex m_collapse;

			[Token(Token = "0x40022CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public int m_nHeapSpot;

			[Token(Token = "0x6002600")]
			[Address(RVA = "0xD52A14", Offset = "0xD52A14", VA = "0xD52A14")]
			public Vertex(Simplifier simplifier, Vector3 v, Vector3 v3World, bool bHasBoneWeight, BoneWeight boneWeight, int nID)
			{
			}

			[Token(Token = "0x6002601")]
			[Address(RVA = "0xD52B54", Offset = "0xD52B54", VA = "0xD52B54")]
			public void Destructor(Simplifier simplifier)
			{
			}

			[Token(Token = "0x6002602")]
			[Address(RVA = "0xD52134", Offset = "0xD52134", VA = "0xD52134")]
			public void RemoveIfNonNeighbor(Vertex n)
			{
			}

			[Token(Token = "0x6002603")]
			[Address(RVA = "0xD52CA8", Offset = "0xD52CA8", VA = "0xD52CA8")]
			public bool IsBorder()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000603")]
		private class VertexDataHashComparer : IEqualityComparer<VertexDataHash>
		{
			[Token(Token = "0x6002604")]
			[Address(RVA = "0xD530B4", Offset = "0xD530B4", VA = "0xD530B4", Slot = "4")]
			public bool Equals(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002605")]
			[Address(RVA = "0xD5324C", Offset = "0xD5324C", VA = "0xD5324C", Slot = "5")]
			public int GetHashCode(VertexDataHash vdata)
			{
				return default(int);
			}

			[Token(Token = "0x6002606")]
			[Address(RVA = "0xD50844", Offset = "0xD50844", VA = "0xD50844")]
			public VertexDataHashComparer()
			{
			}
		}

		[Token(Token = "0x2000604")]
		private class VertexDataHash
		{
			[Token(Token = "0x40022CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector3 _v3Vertex;

			[Token(Token = "0x40022CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Vector3 _v3Normal;

			[Token(Token = "0x40022CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector2 _v2Mapping1;

			[Token(Token = "0x40022CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2 _v2Mapping2;

			[Token(Token = "0x40022CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Color32 _color;

			[Token(Token = "0x40022D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private MeshUniqueVertices.UniqueVertex _uniqueVertex;

			[Token(Token = "0x170002FA")]
			public Vector3 Vertex
			{
				[Token(Token = "0x6002607")]
				[Address(RVA = "0xD5094C", Offset = "0xD5094C", VA = "0xD5094C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170002FB")]
			public Vector3 Normal
			{
				[Token(Token = "0x6002608")]
				[Address(RVA = "0xD52E04", Offset = "0xD52E04", VA = "0xD52E04")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170002FC")]
			public Vector2 UV1
			{
				[Token(Token = "0x6002609")]
				[Address(RVA = "0xD52E10", Offset = "0xD52E10", VA = "0xD52E10")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x170002FD")]
			public Vector2 UV2
			{
				[Token(Token = "0x600260A")]
				[Address(RVA = "0xD52E18", Offset = "0xD52E18", VA = "0xD52E18")]
				get
				{
					return default(Vector2);
				}
			}

			[Token(Token = "0x170002FE")]
			public Color32 Color
			{
				[Token(Token = "0x600260B")]
				[Address(RVA = "0xD52E20", Offset = "0xD52E20", VA = "0xD52E20")]
				get
				{
					return default(Color32);
				}
			}

			[Token(Token = "0x600260C")]
			[Address(RVA = "0xD50864", Offset = "0xD50864", VA = "0xD50864")]
			public VertexDataHash(Vector3 v3Vertex, Vector3 v3Normal, Vector2 v2Mapping1, Vector2 v2Mapping2, Color32 color)
			{
			}

			[Token(Token = "0x600260D")]
			[Address(RVA = "0xD52E28", Offset = "0xD52E28", VA = "0xD52E28", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600260E")]
			[Address(RVA = "0xD53004", Offset = "0xD53004", VA = "0xD53004", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x600260F")]
			[Address(RVA = "0xD53038", Offset = "0xD53038", VA = "0xD53038")]
			public static bool operator ==(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002610")]
			[Address(RVA = "0xD53070", Offset = "0xD53070", VA = "0xD53070")]
			public static bool operator !=(VertexDataHash a, VertexDataHash b)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000605")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD0AC", Offset = "0x8CD0AC")]
		private sealed class <ProgressiveMesh>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Simplifier <>4__this;

			[Token(Token = "0x40022D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Mesh sourceMesh;

			[Token(Token = "0x40022D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject gameObject;

			[Token(Token = "0x40022D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ProgressDelegate progress;

			[Token(Token = "0x40022D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x40022D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x40022D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <nVertices>5__2;

			[Token(Token = "0x170002FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002614")]
				[Address(RVA = "0xD51598", Offset = "0xD51598", VA = "0xD51598", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000300")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002616")]
				[Address(RVA = "0xD51608", Offset = "0xD51608", VA = "0xD51608", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002611")]
			[Address(RVA = "0xD509D0", Offset = "0xD509D0", VA = "0xD509D0")]
			[DebuggerHidden]
			public <ProgressiveMesh>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002612")]
			[Address(RVA = "0xD509FC", Offset = "0xD509FC", VA = "0xD509FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002613")]
			[Address(RVA = "0xD50A00", Offset = "0xD50A00", VA = "0xD50A00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002615")]
			[Address(RVA = "0xD515A0", Offset = "0xD515A0", VA = "0xD515A0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000606")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD0BC", Offset = "0x8CD0BC")]
		private sealed class <ComputeMeshWithVertexCount>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Simplifier <>4__this;

			[Token(Token = "0x40022DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int nVertices;

			[Token(Token = "0x40022DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Mesh meshOut;

			[Token(Token = "0x40022DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject gameObject;

			[Token(Token = "0x40022E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public ProgressDelegate progress;

			[Token(Token = "0x40022E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x40022E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Vertex> <listVertices>5__2;

			[Token(Token = "0x40022E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <nTotalVertices>5__3;

			[Token(Token = "0x17000301")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600261A")]
				[Address(RVA = "0xD4F204", Offset = "0xD4F204", VA = "0xD4F204", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000302")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600261C")]
				[Address(RVA = "0xD4F274", Offset = "0xD4F274", VA = "0xD4F274", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002617")]
			[Address(RVA = "0xD4E35C", Offset = "0xD4E35C", VA = "0xD4E35C")]
			[DebuggerHidden]
			public <ComputeMeshWithVertexCount>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002618")]
			[Address(RVA = "0xD4E388", Offset = "0xD4E388", VA = "0xD4E388", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002619")]
			[Address(RVA = "0xD4E38C", Offset = "0xD4E38C", VA = "0xD4E38C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600261B")]
			[Address(RVA = "0xD4F20C", Offset = "0xD4F20C", VA = "0xD4F20C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000607")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD0CC", Offset = "0x8CD0CC")]
		private sealed class <ConsolidateMesh>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Mesh meshIn;

			[Token(Token = "0x40022E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TriangleList[] aListTriangles;

			[Token(Token = "0x40022E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ProgressDelegate progress;

			[Token(Token = "0x40022E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x40022EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Mesh meshOut;

			[Token(Token = "0x40022EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GameObject gameObject;

			[Token(Token = "0x40022EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Vector3[] <av3NormalsIn>5__2;

			[Token(Token = "0x40022ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Vector4[] <av4TangentsIn>5__3;

			[Token(Token = "0x40022EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector2[] <av2Mapping1In>5__4;

			[Token(Token = "0x40022EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Vector2[] <av2Mapping2In>5__5;

			[Token(Token = "0x40022F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private Color[] <acolColorsIn>5__6;

			[Token(Token = "0x40022F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private Color32[] <aColors32In>5__7;

			[Token(Token = "0x40022F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private List<List<int>> <listlistIndicesOut>5__8;

			[Token(Token = "0x40022F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private List<Vector3> <listVerticesOut>5__9;

			[Token(Token = "0x40022F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private List<Vector3> <listNormalsOut>5__10;

			[Token(Token = "0x40022F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private List<Vector4> <listTangentsOut>5__11;

			[Token(Token = "0x40022F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			private List<Vector2> <listMapping1Out>5__12;

			[Token(Token = "0x40022F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private List<Vector2> <listMapping2Out>5__13;

			[Token(Token = "0x40022F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private List<Color32> <listColors32Out>5__14;

			[Token(Token = "0x40022F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private List<BoneWeight> <listBoneWeightsOut>5__15;

			[Token(Token = "0x40022FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private Dictionary<VertexDataHash, int> <dicVertexDataHash2Index>5__16;

			[Token(Token = "0x40022FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private bool <bUV1>5__17;

			[Token(Token = "0x40022FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
			private bool <bUV2>5__18;

			[Token(Token = "0x40022FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
			private bool <bNormal>5__19;

			[Token(Token = "0x40022FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
			private bool <bTangent>5__20;

			[Token(Token = "0x40022FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private int <nSubMesh>5__21;

			[Token(Token = "0x4002300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private List<int> <listIndicesOut>5__22;

			[Token(Token = "0x4002301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private string <strMesh>5__23;

			[Token(Token = "0x4002302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private int <i>5__24;

			[Token(Token = "0x17000303")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002620")]
				[Address(RVA = "0xD50958", Offset = "0xD50958", VA = "0xD50958", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000304")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002622")]
				[Address(RVA = "0xD509C8", Offset = "0xD509C8", VA = "0xD509C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600261D")]
			[Address(RVA = "0xD4F27C", Offset = "0xD4F27C", VA = "0xD4F27C")]
			[DebuggerHidden]
			public <ConsolidateMesh>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x600261E")]
			[Address(RVA = "0xD4F2A8", Offset = "0xD4F2A8", VA = "0xD4F2A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600261F")]
			[Address(RVA = "0xD4F2AC", Offset = "0xD4F2AC", VA = "0xD4F2AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002621")]
			[Address(RVA = "0xD50960", Offset = "0xD50960", VA = "0xD50960", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD0DC", Offset = "0x8CD0DC")]
		private sealed class <ComputeAllEdgeCollapseCosts>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProgressDelegate progress;

			[Token(Token = "0x4002306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string strProgressDisplayObjectName;

			[Token(Token = "0x4002307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Simplifier <>4__this;

			[Token(Token = "0x4002308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform transform;

			[Token(Token = "0x4002309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public RelevanceSphere[] aRelevanceSpheres;

			[Token(Token = "0x400230A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__2;

			[Token(Token = "0x17000305")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002626")]
				[Address(RVA = "0xD4E2E4", Offset = "0xD4E2E4", VA = "0xD4E2E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000306")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002628")]
				[Address(RVA = "0xD4E354", Offset = "0xD4E354", VA = "0xD4E354", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002623")]
			[Address(RVA = "0xD4D7DC", Offset = "0xD4D7DC", VA = "0xD4D7DC")]
			[DebuggerHidden]
			public <ComputeAllEdgeCollapseCosts>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6002624")]
			[Address(RVA = "0xD4D808", Offset = "0xD4D808", VA = "0xD4D808", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002625")]
			[Address(RVA = "0xD4D80C", Offset = "0xD4D80C", VA = "0xD4D80C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002627")]
			[Address(RVA = "0xD4E2EC", Offset = "0xD4E2EC", VA = "0xD4E2EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF110", Offset = "0x8DF110")]
		private static bool <Cancelled>k__BackingField;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF120", Offset = "0x8DF120")]
		private bool <CoroutineEnded>k__BackingField;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int m_nCoroutineFrameMiliseconds;

		[Token(Token = "0x40013F8")]
		private const float MAX_VERTEX_COLLAPSE_COST = 10000000f;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vertex> m_listVertices;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vertex> m_listHeap;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TriangleList[] m_aListTriangles;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private int m_nOriginalMeshVertexCount;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		private float m_fOriginalMeshSize;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private List<int> m_listVertexMap;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private List<int> m_listVertexPermutationBack;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private MeshUniqueVertices m_meshUniqueVertices;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private Mesh m_meshOriginal;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private bool m_bUseEdgeLength;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[SerializeField]
		[HideInInspector]
		private bool m_bUseCurvature;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[SerializeField]
		[HideInInspector]
		private bool m_bProtectTexture;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		[SerializeField]
		[HideInInspector]
		private bool m_bLockBorder;

		[Token(Token = "0x17000179")]
		public static bool Cancelled
		{
			[Token(Token = "0x6001475")]
			[Address(RVA = "0xB3C004", Offset = "0xB3C004", VA = "0xB3C004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EAE40", Offset = "0x8EAE40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001476")]
			[Address(RVA = "0xB3C06C", Offset = "0xB3C06C", VA = "0xB3C06C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EAE50", Offset = "0x8EAE50")]
			set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		public static int CoroutineFrameMiliseconds
		{
			[Token(Token = "0x6001477")]
			[Address(RVA = "0xB3C0DC", Offset = "0xB3C0DC", VA = "0xB3C0DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001478")]
			[Address(RVA = "0xB3C144", Offset = "0xB3C144", VA = "0xB3C144")]
			set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public bool CoroutineEnded
		{
			[Token(Token = "0x6001479")]
			[Address(RVA = "0xB21B64", Offset = "0xB21B64", VA = "0xB21B64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EAE60", Offset = "0x8EAE60")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600147A")]
			[Address(RVA = "0xB21A4C", Offset = "0xB21A4C", VA = "0xB21A4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EAE70", Offset = "0x8EAE70")]
			set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		public bool UseEdgeLength
		{
			[Token(Token = "0x600147B")]
			[Address(RVA = "0xB3C1B0", Offset = "0xB3C1B0", VA = "0xB3C1B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600147C")]
			[Address(RVA = "0xB3C1B8", Offset = "0xB3C1B8", VA = "0xB3C1B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		public bool UseCurvature
		{
			[Token(Token = "0x600147D")]
			[Address(RVA = "0xB3C1C4", Offset = "0xB3C1C4", VA = "0xB3C1C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600147E")]
			[Address(RVA = "0xB3C1CC", Offset = "0xB3C1CC", VA = "0xB3C1CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public bool ProtectTexture
		{
			[Token(Token = "0x600147F")]
			[Address(RVA = "0xB3C1D8", Offset = "0xB3C1D8", VA = "0xB3C1D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001480")]
			[Address(RVA = "0xB3C1E0", Offset = "0xB3C1E0", VA = "0xB3C1E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public bool LockBorder
		{
			[Token(Token = "0x6001481")]
			[Address(RVA = "0xB3C1EC", Offset = "0xB3C1EC", VA = "0xB3C1EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001482")]
			[Address(RVA = "0xB3C1F4", Offset = "0xB3C1F4", VA = "0xB3C1F4")]
			set
			{
			}
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xB3C200", Offset = "0xB3C200", VA = "0xB3C200")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EAE80", Offset = "0x8EAE80")]
		public IEnumerator ProgressiveMesh(GameObject gameObject, Mesh sourceMesh, RelevanceSphere[] aRelevanceSpheres, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xB21A60", Offset = "0xB21A60", VA = "0xB21A60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EAEE4", Offset = "0x8EAEE4")]
		public IEnumerator ComputeMeshWithVertexCount(GameObject gameObject, Mesh meshOut, int nVertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xB21A58", Offset = "0xB21A58", VA = "0xB21A58")]
		public int GetOriginalMeshUniqueVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xB3C300", Offset = "0xB3C300", VA = "0xB3C300")]
		public int GetOriginalMeshTriangleCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xB3C35C", Offset = "0xB3C35C", VA = "0xB3C35C")]
		public static Vector3[] GetWorldVertices(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xB3CF0C", Offset = "0xB3CF0C", VA = "0xB3CF0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EAF48", Offset = "0x8EAF48")]
		private IEnumerator ConsolidateMesh(GameObject gameObject, Mesh meshIn, Mesh meshOut, TriangleList[] aListTriangles, Vector3[] av3Vertices, string strProgressDisplayObjectName = "", [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xB3D00C", Offset = "0xB3D00C", VA = "0xB3D00C")]
		private int MapVertex(int nVertex, int nMax)
		{
			return default(int);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xB3D0B4", Offset = "0xB3D0B4", VA = "0xB3D0B4")]
		private float ComputeEdgeCollapseCost(Vertex u, Vertex v, float fRelevanceBias)
		{
			return default(float);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xB3D624", Offset = "0xB3D624", VA = "0xB3D624")]
		private void ComputeEdgeCostAtVertex(Vertex v, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xB3D9E0", Offset = "0xB3D9E0", VA = "0xB3D9E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EAFAC", Offset = "0x8EAFAC")]
		private IEnumerator ComputeAllEdgeCollapseCosts(string strProgressDisplayObjectName, Transform transform, RelevanceSphere[] aRelevanceSpheres, [Optional] ProgressDelegate progress)
		{
			return null;
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xB3DAC0", Offset = "0xB3DAC0", VA = "0xB3DAC0")]
		private void Collapse(Vertex u, Vertex v, bool bRecompute, Transform transform, RelevanceSphere[] aRelevanceSpheres)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xB3E504", Offset = "0xB3E504", VA = "0xB3E504")]
		private void AddVertices(List<Vector3> listVertices, List<Vector3> listVerticesWorld, List<MeshUniqueVertices.SerializableBoneWeight> listBoneWeights)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xB3E6E8", Offset = "0xB3E6E8", VA = "0xB3E6E8")]
		private void AddFaceListSubMesh(int nSubMesh, List<int> listTriangles, int[] anIndices, Vector2[] v2Mapping)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xB3E99C", Offset = "0xB3E99C", VA = "0xB3E99C")]
		private void ShareUV(Vector2[] aMapping, Triangle t)
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xB3ED3C", Offset = "0xB3ED3C", VA = "0xB3ED3C")]
		private Vertex MinimumCostEdge()
		{
			return null;
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xB3EE00", Offset = "0xB3EE00", VA = "0xB3EE00")]
		private float HeapValue(int i)
		{
			return default(float);
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xB3E118", Offset = "0xB3E118", VA = "0xB3E118")]
		private void HeapSortUp(int k)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xB3E2FC", Offset = "0xB3E2FC", VA = "0xB3E2FC")]
		private void HeapSortDown(int k)
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xB3EEEC", Offset = "0xB3EEEC", VA = "0xB3EEEC")]
		private void HeapAdd(Vertex v)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xB3ED40", Offset = "0xB3ED40", VA = "0xB3ED40")]
		private Vertex HeapPop()
		{
			return null;
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xB3EFA0", Offset = "0xB3EFA0", VA = "0xB3EFA0")]
		public Simplifier()
		{
		}
	}
}
namespace UB
{
	[Token(Token = "0x20002DE")]
	public class EffectBase : MonoBehaviour
	{
		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, RenderTexture> AlreadyRendered;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _insiderendering;

		[Token(Token = "0x17000180")]
		public static bool InsideRendering
		{
			[Token(Token = "0x6001499")]
			[Address(RVA = "0xB34344", Offset = "0xB34344", VA = "0xB34344")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600149A")]
			[Address(RVA = "0xB343AC", Offset = "0xB343AC", VA = "0xB343AC")]
			set
			{
			}
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xB3441C", Offset = "0xB3441C", VA = "0xB3441C")]
		public EffectBase()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	[ExecuteInEditMode]
	public class MirrorWithShader : EffectBase
	{
		[Serializable]
		[Token(Token = "0x2000609")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD0EC", Offset = "0x8CD0EC")]
		private sealed class <>c
		{
			[Token(Token = "0x400230B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400230C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Material, bool> <>9__27_0;

			[Token(Token = "0x600262A")]
			[Address(RVA = "0xB3780C", Offset = "0xB3780C", VA = "0xB3780C")]
			public <>c()
			{
			}

			[Token(Token = "0x600262B")]
			[Address(RVA = "0xB37814", Offset = "0xB37814", VA = "0xB37814")]
			internal bool <OnWillRenderObject>b__27_0(Material a)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string UniqueName;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool UpdateOnEditor;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public WorkType WorkType;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FollowVector UpVector;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool DisablePixelLights;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int TextureSize;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float ClipPlaneOffset;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Camera Camera;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LayerMask ReflectLayers;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject ReflectionCameraPrefab;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject _reflectionCameraPrefabInstance;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8DF360", Offset = "0x8DF360")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DF360", Offset = "0x8DF360")]
		public Shader Shader;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int Lod;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DF3B0", Offset = "0x8DF3B0")]
		public int Iterations;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float CustomFloatParam2;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _material;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Hashtable _reflectionCameras;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RenderTexture _reflectionTexture1;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RenderTexture _reflectionTexture2;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RenderTexture _reflectionTexture3;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _oldReflectionTextureSize;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Vector3 ZeroV3;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static Vector3 OneV3;

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xB344A4", Offset = "0xB344A4", VA = "0xB344A4")]
		public static Quaternion QuaternionFromMatrix(Matrix4x4 m)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xB345C0", Offset = "0xB345C0", VA = "0xB345C0")]
		public static Vector4 PosToV4(Vector3 v)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xB345F4", Offset = "0xB345F4", VA = "0xB345F4")]
		public static Vector3 ToV3(Vector4 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xB34628", Offset = "0xB34628", VA = "0xB34628")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xB346C8", Offset = "0xB346C8", VA = "0xB346C8")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xB34820", Offset = "0xB34820", VA = "0xB34820")]
		private void RenderMe(Material[] materials)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xB370FC", Offset = "0xB370FC", VA = "0xB370FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xB36688", Offset = "0xB36688", VA = "0xB36688")]
		private void UpdateCameraModes(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xB35A64", Offset = "0xB35A64", VA = "0xB35A64")]
		private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xB36F14", Offset = "0xB36F14", VA = "0xB36F14")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xB36C70", Offset = "0xB36C70", VA = "0xB36C70")]
		private void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xB37618", Offset = "0xB37618", VA = "0xB37618")]
		public MirrorWithShader()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public enum FollowVector
	{
		[Token(Token = "0x4001420")]
		RedX = 1,
		[Token(Token = "0x4001421")]
		RedX_Negative = 4,
		[Token(Token = "0x4001422")]
		GreenY = 2,
		[Token(Token = "0x4001423")]
		GreenY_Negative = 5,
		[Token(Token = "0x4001424")]
		BlueZ = 3,
		[Token(Token = "0x4001425")]
		BlueZ_Negative = 6
	}
	[Token(Token = "0x20002E1")]
	public enum WorkType
	{
		[Token(Token = "0x4001427")]
		Reflect = 1,
		[Token(Token = "0x4001428")]
		Direct,
		[Token(Token = "0x4001429")]
		Transparent
	}
	[Token(Token = "0x20002E2")]
	[ExecuteInEditMode]
	public class PortalWithShader : EffectBase
	{
		[Serializable]
		[Token(Token = "0x200060A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD0FC", Offset = "0x8CD0FC")]
		private sealed class <>c
		{
			[Token(Token = "0x400230D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400230E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Material, bool> <>9__21_0;

			[Token(Token = "0x600262D")]
			[Address(RVA = "0xB39C68", Offset = "0xB39C68", VA = "0xB39C68")]
			public <>c()
			{
			}

			[Token(Token = "0x600262E")]
			[Address(RVA = "0xB39C70", Offset = "0xB39C70", VA = "0xB39C70")]
			internal bool <OnWillRenderObject>b__21_0(Material a)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera MainCamera;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Camera PortalCamera;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Source;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform Destination;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DF3C8", Offset = "0x8DF3C8")]
		public int Iterations;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float CustomFloatParam2;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader Shader;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _material;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool DisablePixelLights;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int TextureSize;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LayerMask ReflectLayers;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Hashtable _reflectionCameras;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture _reflectionTexture1;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RenderTexture _reflectionTexture2;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture _reflectionTexture3;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _oldReflectionTextureSize;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Vector3 ZeroV3;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static Vector3 OneV3;

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xB37880", Offset = "0xB37880", VA = "0xB37880")]
		public static Quaternion QuaternionFromMatrix(Matrix4x4 m)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xB3799C", Offset = "0xB3799C", VA = "0xB3799C")]
		public static Vector4 PosToV4(Vector3 v)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xB379D0", Offset = "0xB379D0", VA = "0xB379D0")]
		public static Vector3 ToV3(Vector4 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xB37A04", Offset = "0xB37A04", VA = "0xB37A04")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xB37B5C", Offset = "0xB37B5C", VA = "0xB37B5C")]
		private void RenderMe(Material[] materials)
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xB39578", Offset = "0xB39578", VA = "0xB39578")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xB390E4", Offset = "0xB390E4", VA = "0xB390E4")]
		private void UpdateCameraModes(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xB3874C", Offset = "0xB3874C", VA = "0xB3874C")]
		private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xB39A94", Offset = "0xB39A94", VA = "0xB39A94")]
		public PortalWithShader()
		{
		}
	}
}
namespace Puppet3D
{
	[Token(Token = "0x20002E3")]
	[ExecuteInEditMode]
	public class DrivenKey : MonoBehaviour
	{
		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DrivenObject[] DriverColection;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool DriverEnabled;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Blend;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string BlendName;

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xEA0390", Offset = "0xEA0390", VA = "0xEA0390")]
		public void Run()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xEA08C4", Offset = "0xEA08C4", VA = "0xEA08C4")]
		public DrivenKey()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E4")]
	public class DrivenObject
	{
		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject[] DrivenGOs;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3[] StartPositions;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] EndPositions;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion[] StartRotations;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Quaternion[] EndRotations;

		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float Blend;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string BlendName;

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xEA0934", Offset = "0xEA0934", VA = "0xEA0934")]
		public DrivenObject(GameObject[] objs)
		{
		}
	}
	[Token(Token = "0x20002E5")]
	[ExecuteInEditMode]
	public class FABRIKControl : MonoBehaviour
	{
		[Token(Token = "0x200060B")]
		public class BoneInfo
		{
			[Token(Token = "0x400230F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Trans;

			[Token(Token = "0x4002310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 Pos;

			[Token(Token = "0x4002311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float L;

			[Token(Token = "0x4002312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform Source;

			[Token(Token = "0x4002313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Quaternion Offset;

			[Token(Token = "0x600262F")]
			[Address(RVA = "0xEA2F14", Offset = "0xEA2F14", VA = "0xEA2F14")]
			public BoneInfo(Transform TransSet, Transform SourceSet)
			{
			}
		}

		[Token(Token = "0x200060C")]
		public class BoneInfoChain
		{
			[Token(Token = "0x4002314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Effector;

			[Token(Token = "0x4002315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform Root;

			[Token(Token = "0x4002316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 EffectorPos;

			[Token(Token = "0x4002317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public IKControl ikControl;

			[Token(Token = "0x4002318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float ik;

			[Token(Token = "0x4002319")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<BoneInfo> _boneInfos;

			[Token(Token = "0x400231A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float _MinDistance;

			[Token(Token = "0x400231B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<BoneInfoChain> _childBoneChains;

			[Token(Token = "0x6002630")]
			[Address(RVA = "0xEA0E84", Offset = "0xEA0E84", VA = "0xEA0E84")]
			public BoneInfoChain(Transform root)
			{
			}

			[Token(Token = "0x6002631")]
			[Address(RVA = "0xEA157C", Offset = "0xEA157C", VA = "0xEA157C")]
			public void Print()
			{
			}

			[Token(Token = "0x6002632")]
			[Address(RVA = "0xEA1C44", Offset = "0xEA1C44", VA = "0xEA1C44")]
			public Vector3 Backward()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002633")]
			[Address(RVA = "0xEA230C", Offset = "0xEA230C", VA = "0xEA230C")]
			public void Forward(Vector3 newRootPos, bool isRoot = false)
			{
			}

			[Token(Token = "0x6002634")]
			[Address(RVA = "0xEA3278", Offset = "0xEA3278", VA = "0xEA3278")]
			private bool MinDistanceCheck()
			{
				return default(bool);
			}

			[Token(Token = "0x6002635")]
			[Address(RVA = "0xEA33A4", Offset = "0xEA33A4", VA = "0xEA33A4")]
			public bool IsTooFar()
			{
				return default(bool);
			}

			[Token(Token = "0x6002636")]
			[Address(RVA = "0xEA349C", Offset = "0xEA349C", VA = "0xEA349C")]
			private float SumDistances()
			{
				return default(float);
			}

			[Token(Token = "0x6002637")]
			[Address(RVA = "0xEA18F8", Offset = "0xEA18F8", VA = "0xEA18F8")]
			public void SetInitialBones()
			{
			}

			[Token(Token = "0x6002638")]
			[Address(RVA = "0xEA2AC4", Offset = "0xEA2AC4", VA = "0xEA2AC4")]
			public void SetBones()
			{
			}

			[Token(Token = "0x6002639")]
			[Address(RVA = "0xEA3570", Offset = "0xEA3570", VA = "0xEA3570")]
			public void StrechedSolve()
			{
			}
		}

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoneInfoChain BoneChain;

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xEA0DD4", Offset = "0xEA0DD4", VA = "0xEA0DD4")]
		public void Awake()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xEA0E7C", Offset = "0xEA0E7C", VA = "0xEA0E7C")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xEA0E80", Offset = "0xEA0E80", VA = "0xEA0E80")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xEA0DD8", Offset = "0xEA0DD8", VA = "0xEA0DD8")]
		public void Init()
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xEA1B74", Offset = "0xEA1B74", VA = "0xEA1B74")]
		public void Update()
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xEA2F0C", Offset = "0xEA2F0C", VA = "0xEA2F0C")]
		public FABRIKControl()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	[ExecuteInEditMode]
	public class GlobalControl : Control
	{
		[Serializable]
		[Token(Token = "0x200060D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD10C", Offset = "0x8CD10C")]
		private sealed class <>c
		{
			[Token(Token = "0x400231C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400231D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<SkinnedMeshRenderer, float>, int> <>9__37_0;

			[Token(Token = "0x400231E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<KeyValuePair<SkinnedMeshRenderer, float>, float> <>9__37_1;

			[Token(Token = "0x600263B")]
			[Address(RVA = "0xEA8EE4", Offset = "0xEA8EE4", VA = "0xEA8EE4")]
			public <>c()
			{
			}

			[Token(Token = "0x600263C")]
			[Address(RVA = "0xEA8EEC", Offset = "0xEA8EEC", VA = "0xEA8EEC")]
			internal int <CombineAllMeshes>b__37_0(KeyValuePair<SkinnedMeshRenderer, float> pair)
			{
				return default(int);
			}

			[Token(Token = "0x600263D")]
			[Address(RVA = "0xEA8F70", Offset = "0xEA8F70", VA = "0xEA8F70")]
			internal float <CombineAllMeshes>b__37_1(KeyValuePair<SkinnedMeshRenderer, float> pair)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool BonesVisiblity;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool ControlsVisiblity;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SplineControl> _SplineControls;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<IKControl> _Ikhandles;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<ParentControl> _ParentControls;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<IKFKBlend> _IKFKBlends;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<DrivenKey> _DrivenKeys;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DF3E4", Offset = "0x8DF3E4")]
		public float Body;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DF3FC", Offset = "0x8DF3FC")]
		public float ArmLeft;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DF414", Offset = "0x8DF414")]
		public float ArmRight;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DF42C", Offset = "0x8DF42C")]
		public float LegLeft;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DF444", Offset = "0x8DF444")]
		public float LegRight;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public List<Control> _Controls;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public List<Bone> _Bones;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool AutoRefresh;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		public bool ControlsEnabled;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		public bool lateUpdate;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public int _flipCorrection;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float HandleRadius;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform myTransform;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private SplineControl[] _SplineControlsArray;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private IKControl[] _IkhandlesArray;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ParentControl[] _ParentControlsArray;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Mesh _mesh;

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xEA3B4C", Offset = "0xEA3B4C", VA = "0xEA3B4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xEA44FC", Offset = "0xEA44FC", VA = "0xEA44FC")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xEA4654", Offset = "0xEA4654", VA = "0xEA4654")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xEA46AC", Offset = "0xEA46AC", VA = "0xEA46AC")]
		private void Start()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xEA4444", Offset = "0xEA4444", VA = "0xEA4444")]
		public void InitializeArrays()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xEA47B0", Offset = "0xEA47B0", VA = "0xEA47B0")]
		public void Init()
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xEA48E4", Offset = "0xEA48E4", VA = "0xEA48E4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xEA48E8", Offset = "0xEA48E8", VA = "0xEA48E8")]
		public void UpdateVisibility()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xEA4CD8", Offset = "0xEA4CD8", VA = "0xEA4CD8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xEA4E7C", Offset = "0xEA4E7C", VA = "0xEA4E7C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xEA5508", Offset = "0xEA5508", VA = "0xEA5508")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xEA4E94", Offset = "0xEA4E94", VA = "0xEA4E94")]
		public void Run()
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xEA3CB8", Offset = "0xEA3CB8", VA = "0xEA3CB8")]
		public void TraverseHierarchy(Transform root)
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xEA7574", Offset = "0xEA7574", VA = "0xEA7574")]
		private void CombineAllMeshes()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xEA60E4", Offset = "0xEA60E4", VA = "0xEA60E4")]
		private void FaceCamera()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xEA8CF8", Offset = "0xEA8CF8", VA = "0xEA8CF8")]
		public GlobalControl()
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public class IKControl : MonoBehaviour
	{
		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DF48C", Offset = "0x8DF48C")]
		public float IKFK;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool FKVisibility;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool IKVisibility;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Vector3 AimDirection;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Transform poleVector;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Vector3 UpDirection;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Vector3[] scaleStart;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Transform topJointTransformIK;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform middleJointTransformIK;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Transform bottomJointTransformIK;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector3 OffsetScale;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Transform IK_CTRL;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 root2IK;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 root2IK2MiddleJoint;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public int numberIkBonesIndex;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[HideInInspector]
		public int numberOfBones;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public int iterations;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[HideInInspector]
		public float damping;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Transform IKHandle;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public Transform endTransform;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public Transform startTransform;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public List<Vector3> bindPose;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public List<Transform> bindBones;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public bool limitBones;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		public Quaternion Offset;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[HideInInspector]
		public Quaternion topJointTransform_OffsetRotation;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public Quaternion topJointTransform_OffsetRotation2;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[HideInInspector]
		public Quaternion middleJointTransform_OffsetRotation;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[HideInInspector]
		public Vector3 bottomJointTransform_OffsetRotation;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public bool bottomJointTransformMatchesIK_CTRLRotation;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
		[HideInInspector]
		public bool debug;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float angle;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float topJointTransform_Length;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float middleJointTransform_Length;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float arm_Length;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private float IK_CTRLDistance;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float adyacent;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[HideInInspector]
		public bool DisableRotateAround;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		public Transform topJointTransform;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		public Transform middleJointTransform;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[HideInInspector]
		public Transform bottomJointTransform;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[HideInInspector]
		public Transform topJointTransformFK;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[HideInInspector]
		public Transform middleJointTransformFK;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[HideInInspector]
		public Transform bottomJointTransformFK;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[HideInInspector]
		public FK[] fks;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[HideInInspector]
		public List<Transform> angleLimitTransform;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[HideInInspector]
		public List<Vector2> angleLimits;

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xEA624C", Offset = "0xEA624C", VA = "0xEA624C")]
		public void CalculateIK()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xEA99C8", Offset = "0xEA99C8", VA = "0xEA99C8")]
		private bool IsNaN(Quaternion q)
		{
			return default(bool);
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xEA9A3C", Offset = "0xEA9A3C", VA = "0xEA9A3C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xEA9BC4", Offset = "0xEA9BC4", VA = "0xEA9BC4")]
		public void CalculateMultiIK()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xEA9D30", Offset = "0xEA9D30", VA = "0xEA9D30")]
		private void CalculateMultiIK_run()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xEA9DEC", Offset = "0xEA9DEC", VA = "0xEA9DEC")]
		private void RotateTowardsIK_CTRL(Transform startTransform)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xEAA1CC", Offset = "0xEAA1CC", VA = "0xEAA1CC")]
		public static float SignedAngle(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xEAA310", Offset = "0xEAA310", VA = "0xEAA310")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xEAA398", Offset = "0xEAA398", VA = "0xEAA398")]
		public IKControl()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	[ExecuteInEditMode]
	public class IKFKBlend : MonoBehaviour
	{
		[Token(Token = "0x200060E")]
		public enum IKFKType
		{
			[Token(Token = "0x4002320")]
			ArmL,
			[Token(Token = "0x4002321")]
			ArmR,
			[Token(Token = "0x4002322")]
			LegL,
			[Token(Token = "0x4002323")]
			LegR,
			[Token(Token = "0x4002324")]
			Body
		}

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DF6E4", Offset = "0x8DF6E4")]
		public float IKFK;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform IK;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform FK;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 PositionOffset;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Quaternion RotationOffset;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool ContrstrainPosition;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IKFKType GroupID;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 Pos;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float L;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform ConstrainedControl;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Vector3 _constrainedControlPosOffset;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Quaternion _constrainedControlRotOffset;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private Quaternion _constrainedControlRotOffsetDif;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Transform _globalControlTrans;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public Transform Handle;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool OverrideWithRig;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Quaternion _initialRotation;

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xEAA4EC", Offset = "0xEAA4EC", VA = "0xEAA4EC")]
		public void Awake()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xEAA524", Offset = "0xEAA524", VA = "0xEAA524")]
		public void Init()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xEA7128", Offset = "0xEA7128", VA = "0xEA7128")]
		public void Run()
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xEA5520", Offset = "0xEA5520", VA = "0xEA5520")]
		public void RunConstrianedControls()
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xEAA82C", Offset = "0xEAA82C", VA = "0xEAA82C")]
		public IKFKBlend()
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public class ParentControl : Control
	{
		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject bone;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 HandleScale;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Mesh OverrideMesh;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 OverrideMeshOffset;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool Point;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool Orient;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool Scale;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool ConstrianedPosition;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool ConstrianedOrient;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool MaintainOffset;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 OffsetPos;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 OffsetScale;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Quaternion OffsetOrient;

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xEA5D40", Offset = "0xEA5D40", VA = "0xEA5D40")]
		public void ParentControlRun()
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xEAAA04", Offset = "0xEAAA04", VA = "0xEAAA04")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xEAAD5C", Offset = "0xEAAD5C", VA = "0xEAAD5C")]
		public ParentControl()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	[ExecuteInEditMode]
	public class SkinWeightControl : MonoBehaviour
	{
		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Bone0;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Bone1;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject Bone2;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Bone3;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int boneIndex0;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int boneIndex1;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int boneIndex2;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int boneIndex3;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float Weight0;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float Weight1;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Weight2;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float Weight3;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Mesh mesh;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SkinnedMeshRenderer meshRenderer;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int vertNumber;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject[] handles;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector3[] verts;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh skinnedMesh;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool autoUpdate;

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xEAB1B8", Offset = "0xEAB1B8", VA = "0xEAB1B8")]
		private void Update()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xEAB1BC", Offset = "0xEAB1BC", VA = "0xEAB1BC")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xEAB688", Offset = "0xEAB688", VA = "0xEAB688")]
		public SkinWeightControl()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	[ExecuteInEditMode]
	public class SplineControl : MonoBehaviour
	{
		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> _splineCTRLS;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int numberBones;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector3> outCoordinates;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> bones;

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xEAB97C", Offset = "0xEAB97C", VA = "0xEAB97C")]
		private string GetUniqueName(string name)
		{
			return null;
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xEA57EC", Offset = "0xEA57EC", VA = "0xEA57EC")]
		public void Run()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xEABC60", Offset = "0xEABC60", VA = "0xEABC60")]
		public static bool CatmullRom(List<Transform> inCoordinates, out List<Vector3> outCoordinates, int samples)
		{
			return default(bool);
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xEABFE4", Offset = "0xEABFE4", VA = "0xEABFE4")]
		public static Vector3 PointOnCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xEAC0BC", Offset = "0xEAC0BC", VA = "0xEAC0BC")]
		public SplineControl()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	[ExecuteInEditMode]
	public class Bakedmesh : MonoBehaviour
	{
		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkinnedMeshRenderer skin;

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xE9F4D8", Offset = "0xE9F4D8", VA = "0xE9F4D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xE9F548", Offset = "0xE9F548", VA = "0xE9F548")]
		private void Update()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xE9FA34", Offset = "0xE9FA34", VA = "0xE9FA34")]
		public Bakedmesh()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class Guides : MonoBehaviour
	{
		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] Biped;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Bounds Bounds;

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xEA97C0", Offset = "0xEA97C0", VA = "0xEA97C0")]
		public Guides()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	[ExecuteInEditMode]
	public class StoreData : MonoBehaviour
	{
		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Transform> Data;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 OriginalSpritePosition;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public bool Editable;

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xEAC184", Offset = "0xEAC184", VA = "0xEAC184")]
		private void Update()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xEAC29C", Offset = "0xEAC29C", VA = "0xEAC29C")]
		public StoreData()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class Voxel
	{
		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Bone0;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Bone1;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Bone2;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Bone3;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Weight0;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Weight1;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Weight2;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Weight3;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3[] NeighbourIndexes;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Bounds bounds;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool Inside;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 Pos;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 Scale;

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xEAC3C4", Offset = "0xEAC3C4", VA = "0xEAC3C4")]
		public Voxel()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	[ExecuteInEditMode]
	public class Bone : MonoBehaviour
	{
		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh _mesh;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Radius;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color Color;

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xE9FA3C", Offset = "0xE9FA3C", VA = "0xE9FA3C")]
		private void Start()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xE9FB40", Offset = "0xE9FB40", VA = "0xE9FB40")]
		private void Update()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xE9FB44", Offset = "0xE9FB44", VA = "0xE9FB44")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xEA0340", Offset = "0xEA0340", VA = "0xEA0340")]
		private void OnHideGizmos()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xEA0344", Offset = "0xEA0344", VA = "0xEA0344")]
		public Bone()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	public class Control : MonoBehaviour
	{
		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool Active;

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xEA0380", Offset = "0xEA0380", VA = "0xEA0380")]
		public Control()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	[ExecuteInEditMode]
	public class FK : Control
	{
		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Transparency;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float HandleSize;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public IKControl IKHandle;

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xEA37F8", Offset = "0xEA37F8", VA = "0xEA37F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xEA37FC", Offset = "0xEA37FC", VA = "0xEA37FC")]
		private void Update()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xEA38D4", Offset = "0xEA38D4", VA = "0xEA38D4")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xEA38D8", Offset = "0xEA38D8", VA = "0xEA38D8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xEA3B34", Offset = "0xEA3B34", VA = "0xEA3B34")]
		public FK()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	[ExecuteInEditMode]
	public class Guide : MonoBehaviour
	{
		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Radius;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 HandlePos;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool SnapToCentre;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool Mirror;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Guide MirroredGuide;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Color _Color;

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xEA8FDC", Offset = "0xEA8FDC", VA = "0xEA8FDC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xEA9200", Offset = "0xEA9200", VA = "0xEA9200")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xEA959C", Offset = "0xEA959C", VA = "0xEA959C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xEA95A0", Offset = "0xEA95A0", VA = "0xEA95A0")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xEA97A4", Offset = "0xEA97A4", VA = "0xEA97A4")]
		public Guide()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class IK : Control
	{
		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float HandleSize;

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xEA97C8", Offset = "0xEA97C8", VA = "0xEA97C8")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xEA99B0", Offset = "0xEA99B0", VA = "0xEA99B0")]
		public IK()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	[ExecuteInEditMode]
	public class IKHidden : MonoBehaviour
	{
		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public IKControl IKHandle;

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xEAA924", Offset = "0xEAA924", VA = "0xEAA924")]
		private void Update()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xEAA9FC", Offset = "0xEAA9FC", VA = "0xEAA9FC")]
		public IKHidden()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	[ExecuteInEditMode]
	public class Pole : Control
	{
		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float HandleRadius;

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xEAAE28", Offset = "0xEAAE28", VA = "0xEAAE28")]
		private void Start()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xEAAE2C", Offset = "0xEAAE2C", VA = "0xEAAE2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xEAAE30", Offset = "0xEAAE30", VA = "0xEAAE30")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xEAAEA8", Offset = "0xEAAEA8", VA = "0xEAAEA8")]
		public Pole()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	[ExecuteInEditMode]
	public class Spline : Control
	{
		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 HandleSize;

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xEAB690", Offset = "0xEAB690", VA = "0xEAB690")]
		private void Start()
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xEAB694", Offset = "0xEAB694", VA = "0xEAB694")]
		private void Update()
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xEAB698", Offset = "0xEAB698", VA = "0xEAB698")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xEAB8FC", Offset = "0xEAB8FC", VA = "0xEAB8FC")]
		public Spline()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	[ExecuteInEditMode]
	public class VertexWeight : MonoBehaviour
	{
		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float HandleRadius;

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xEAC344", Offset = "0xEAC344", VA = "0xEAC344")]
		private void Start()
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xEAC348", Offset = "0xEAC348", VA = "0xEAC348")]
		private void Update()
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xEAC34C", Offset = "0xEAC34C", VA = "0xEAC34C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xEAC3B0", Offset = "0xEAC3B0", VA = "0xEAC3B0")]
		public VertexWeight()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class Puppet3DAnimatorController : MonoBehaviour
	{
		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator _animator;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string axisName;

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xEAAEC0", Offset = "0xEAAEC0", VA = "0xEAAEC0")]
		private void Start()
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xEAAF30", Offset = "0xEAAF30", VA = "0xEAAF30")]
		private void Update()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xEAB150", Offset = "0xEAB150", VA = "0xEAB150")]
		public Puppet3DAnimatorController()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class Puppet3DSortingLayer : MonoBehaviour
	{
		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Vector2 offsetAmount;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Vector2[] uvsDefault;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool initialized;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public Bounds bounds;

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xEAB1B0", Offset = "0xEAB1B0", VA = "0xEAB1B0")]
		public Puppet3DSortingLayer()
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x20002FB")]
	public static class DOTweenModuleAudio
	{
		[Token(Token = "0x200060F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD11C", Offset = "0x8CD11C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource target;

			[Token(Token = "0x600263E")]
			[Address(RVA = "0xC775DC", Offset = "0xC775DC", VA = "0xC775DC")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600263F")]
			[Address(RVA = "0xC77DA8", Offset = "0xC77DA8", VA = "0xC77DA8")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002640")]
			[Address(RVA = "0xC77DD8", Offset = "0xC77DD8", VA = "0xC77DD8")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD12C", Offset = "0x8CD12C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioSource target;

			[Token(Token = "0x6002641")]
			[Address(RVA = "0xC77718", Offset = "0xC77718", VA = "0xC77718")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002642")]
			[Address(RVA = "0xC77E18", Offset = "0xC77E18", VA = "0xC77E18")]
			internal float <DOPitch>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002643")]
			[Address(RVA = "0xC77E48", Offset = "0xC77E48", VA = "0xC77E48")]
			internal void <DOPitch>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000611")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD13C", Offset = "0x8CD13C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002327")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AudioMixer target;

			[Token(Token = "0x4002328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string floatName;

			[Token(Token = "0x6002644")]
			[Address(RVA = "0xC77874", Offset = "0xC77874", VA = "0xC77874")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002645")]
			[Address(RVA = "0xC77E88", Offset = "0xC77E88", VA = "0xC77E88")]
			internal float <DOSetFloat>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x6002646")]
			[Address(RVA = "0xC77ED4", Offset = "0xC77ED4", VA = "0xC77ED4")]
			internal void <DOSetFloat>b__1(float x)
			{
			}
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xC77480", Offset = "0xC77480", VA = "0xC77480")]
		public static Tweener DOFade(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xC775E4", Offset = "0xC775E4", VA = "0xC775E4")]
		public static Tweener DOPitch(this AudioSource target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xC77720", Offset = "0xC77720", VA = "0xC77720")]
		public static Tweener DOSetFloat(this AudioMixer target, string floatName, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0xC7787C", Offset = "0xC7787C", VA = "0xC7787C")]
		public static int DOComplete(this AudioMixer target, bool withCallbacks = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xC778F4", Offset = "0xC778F4", VA = "0xC778F4")]
		public static int DOKill(this AudioMixer target, bool complete = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xC7796C", Offset = "0xC7796C", VA = "0xC7796C")]
		public static int DOFlip(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xC779D4", Offset = "0xC779D4", VA = "0xC779D4")]
		public static int DOGoto(this AudioMixer target, float to, bool andPlay = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xC77A5C", Offset = "0xC77A5C", VA = "0xC77A5C")]
		public static int DOPause(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xC77AC4", Offset = "0xC77AC4", VA = "0xC77AC4")]
		public static int DOPlay(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xC77B2C", Offset = "0xC77B2C", VA = "0xC77B2C")]
		public static int DOPlayBackwards(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xC77B94", Offset = "0xC77B94", VA = "0xC77B94")]
		public static int DOPlayForward(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xC77BFC", Offset = "0xC77BFC", VA = "0xC77BFC")]
		public static int DORestart(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xC77C6C", Offset = "0xC77C6C", VA = "0xC77C6C")]
		public static int DORewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xC77CD8", Offset = "0xC77CD8", VA = "0xC77CD8")]
		public static int DOSmoothRewind(this AudioMixer target)
		{
			return default(int);
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xC77D40", Offset = "0xC77D40", VA = "0xC77D40")]
		public static int DOTogglePause(this AudioMixer target)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002FC")]
	public static class DOTweenModulePhysics
	{
		[Token(Token = "0x2000612")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD14C", Offset = "0x8CD14C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002329")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002647")]
			[Address(RVA = "0xC7808C", Offset = "0xC7808C", VA = "0xC7808C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002648")]
			[Address(RVA = "0xC79668", Offset = "0xC79668", VA = "0xC79668")]
			internal Vector3 <DOMove>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000613")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD15C", Offset = "0x8CD15C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400232A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002649")]
			[Address(RVA = "0xC78224", Offset = "0xC78224", VA = "0xC78224")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x600264A")]
			[Address(RVA = "0xC797F0", Offset = "0xC797F0", VA = "0xC797F0")]
			internal Vector3 <DOMoveX>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD16C", Offset = "0x8CD16C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400232B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x600264B")]
			[Address(RVA = "0xC783BC", Offset = "0xC783BC", VA = "0xC783BC")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600264C")]
			[Address(RVA = "0xC79820", Offset = "0xC79820", VA = "0xC79820")]
			internal Vector3 <DOMoveY>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000615")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD17C", Offset = "0x8CD17C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400232C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x600264D")]
			[Address(RVA = "0xC78554", Offset = "0xC78554", VA = "0xC78554")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600264E")]
			[Address(RVA = "0xC79850", Offset = "0xC79850", VA = "0xC79850")]
			internal Vector3 <DOMoveZ>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x2000616")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD18C", Offset = "0x8CD18C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400232D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x600264F")]
			[Address(RVA = "0xC786E0", Offset = "0xC786E0", VA = "0xC786E0")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002650")]
			[Address(RVA = "0xC79880", Offset = "0xC79880", VA = "0xC79880")]
			internal Quaternion <DORotate>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x2000617")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD19C", Offset = "0x8CD19C")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x400232E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002651")]
			[Address(RVA = "0xC78904", Offset = "0xC78904", VA = "0xC78904")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002652")]
			[Address(RVA = "0xC798B0", Offset = "0xC798B0", VA = "0xC798B0")]
			internal Quaternion <DOLookAt>b__0()
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x2000618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD1AC", Offset = "0x8CD1AC")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x400232F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x4002330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x4002331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x4002332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x4002333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x4002334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 endValue;

			[Token(Token = "0x4002335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Tween yTween;

			[Token(Token = "0x6002653")]
			[Address(RVA = "0xC78DE0", Offset = "0xC78DE0", VA = "0xC78DE0")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002654")]
			[Address(RVA = "0xC798E0", Offset = "0xC798E0", VA = "0xC798E0")]
			internal Vector3 <DOJump>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002655")]
			[Address(RVA = "0xC79910", Offset = "0xC79910", VA = "0xC79910")]
			internal void <DOJump>b__1()
			{
			}

			[Token(Token = "0x6002656")]
			[Address(RVA = "0xC7994C", Offset = "0xC7994C", VA = "0xC7994C")]
			internal Vector3 <DOJump>b__2()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002657")]
			[Address(RVA = "0xC7997C", Offset = "0xC7997C", VA = "0xC7997C")]
			internal Vector3 <DOJump>b__3()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002658")]
			[Address(RVA = "0xC799AC", Offset = "0xC799AC", VA = "0xC799AC")]
			internal void <DOJump>b__4()
			{
			}
		}

		[Token(Token = "0x2000619")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD1BC", Offset = "0x8CD1BC")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4002336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x6002659")]
			[Address(RVA = "0xC79010", Offset = "0xC79010", VA = "0xC79010")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x600265A")]
			[Address(RVA = "0xC79A94", Offset = "0xC79A94", VA = "0xC79A94")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200061A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD1CC", Offset = "0x8CD1CC")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x4002338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x600265B")]
			[Address(RVA = "0xC79298", Offset = "0xC79298", VA = "0xC79298")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x600265C")]
			[Address(RVA = "0xC79AC4", Offset = "0xC79AC4", VA = "0xC79AC4")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x600265D")]
			[Address(RVA = "0xC79AF4", Offset = "0xC79AF4", VA = "0xC79AF4")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x200061B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD1DC", Offset = "0x8CD1DC")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody target;

			[Token(Token = "0x600265E")]
			[Address(RVA = "0xC79454", Offset = "0xC79454", VA = "0xC79454")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x600265F")]
			[Address(RVA = "0xC79C1C", Offset = "0xC79C1C", VA = "0xC79C1C")]
			internal Vector3 <DOPath>b__0()
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x200061C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD1EC", Offset = "0x8CD1EC")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400233A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform trans;

			[Token(Token = "0x400233B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Rigidbody target;

			[Token(Token = "0x6002660")]
			[Address(RVA = "0xC79660", Offset = "0xC79660", VA = "0xC79660")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002661")]
			[Address(RVA = "0xC79698", Offset = "0xC79698", VA = "0xC79698")]
			internal Vector3 <DOLocalPath>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002662")]
			[Address(RVA = "0xC796C8", Offset = "0xC796C8", VA = "0xC796C8")]
			internal void <DOLocalPath>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xC77F18", Offset = "0xC77F18", VA = "0xC77F18")]
		public static Tweener DOMove(this Rigidbody target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xC78094", Offset = "0xC78094", VA = "0xC78094")]
		public static Tweener DOMoveX(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xC7822C", Offset = "0xC7822C", VA = "0xC7822C")]
		public static Tweener DOMoveY(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xC783C4", Offset = "0xC783C4", VA = "0xC783C4")]
		public static Tweener DOMoveZ(this Rigidbody target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xC7855C", Offset = "0xC7855C", VA = "0xC7855C")]
		public static Tweener DORotate(this Rigidbody target, Vector3 endValue, float duration, RotateMode mode = RotateMode.Fast)
		{
			return null;
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xC786E8", Offset = "0xC786E8", VA = "0xC786E8")]
		public static Tweener DOLookAt(this Rigidbody target, Vector3 towards, float duration, AxisConstraint axisConstraint = AxisConstraint.None, [Optional] Vector3? up)
		{
			return null;
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xC7890C", Offset = "0xC7890C", VA = "0xC7890C")]
		public static Sequence DOJump(this Rigidbody target, Vector3 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xC78DE8", Offset = "0xC78DE8", VA = "0xC78DE8")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xC79018", Offset = "0xC79018", VA = "0xC79018")]
		public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, Vector3[] path, float duration, PathType pathType = PathType.Linear, PathMode pathMode = PathMode.Full3D, int resolution = 10, [Optional] Color? gizmoColor)
		{
			return null;
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xC792A0", Offset = "0xC792A0", VA = "0xC792A0")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xC7945C", Offset = "0xC7945C", VA = "0xC7945C")]
		internal static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> DOLocalPath(this Rigidbody target, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode = PathMode.Full3D)
		{
			return null;
		}
	}
	[Token(Token = "0x20002FD")]
	public static class DOTweenModulePhysics2D
	{
		[Token(Token = "0x200061D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD1FC", Offset = "0x8CD1FC")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400233C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6002663")]
			[Address(RVA = "0xC79DB8", Offset = "0xC79DB8", VA = "0xC79DB8")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002664")]
			[Address(RVA = "0xC7A5EC", Offset = "0xC7A5EC", VA = "0xC7A5EC")]
			internal Vector2 <DOMove>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x200061E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD20C", Offset = "0x8CD20C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400233D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6002665")]
			[Address(RVA = "0xC79F3C", Offset = "0xC79F3C", VA = "0xC79F3C")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002666")]
			[Address(RVA = "0xC7A61C", Offset = "0xC7A61C", VA = "0xC7A61C")]
			internal Vector2 <DOMoveX>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x200061F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD21C", Offset = "0x8CD21C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400233E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6002667")]
			[Address(RVA = "0xC7A0C0", Offset = "0xC7A0C0", VA = "0xC7A0C0")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002668")]
			[Address(RVA = "0xC7A64C", Offset = "0xC7A64C", VA = "0xC7A64C")]
			internal Vector2 <DOMoveY>b__0()
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x2000620")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD22C", Offset = "0x8CD22C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400233F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x6002669")]
			[Address(RVA = "0xC7A20C", Offset = "0xC7A20C", VA = "0xC7A20C")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600266A")]
			[Address(RVA = "0xC7A67C", Offset = "0xC7A67C", VA = "0xC7A67C")]
			internal float <DORotate>b__0()
			{
				return default(float);
			}
		}

		[Token(Token = "0x2000621")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD23C", Offset = "0x8CD23C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4002340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Rigidbody2D target;

			[Token(Token = "0x4002341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x4002342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x4002343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x4002344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x4002345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 endValue;

			[Token(Token = "0x4002346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Tween yTween;

			[Token(Token = "0x600266B")]
			[Address(RVA = "0xC7A5E4", Offset = "0xC7A5E4", VA = "0xC7A5E4")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600266C")]
			[Address(RVA = "0xC7A6AC", Offset = "0xC7A6AC", VA = "0xC7A6AC")]
			internal Vector2 <DOJump>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600266D")]
			[Address(RVA = "0xC7A6DC", Offset = "0xC7A6DC", VA = "0xC7A6DC")]
			internal void <DOJump>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x600266E")]
			[Address(RVA = "0xC7A724", Offset = "0xC7A724", VA = "0xC7A724")]
			internal void <DOJump>b__2()
			{
			}

			[Token(Token = "0x600266F")]
			[Address(RVA = "0xC7A760", Offset = "0xC7A760", VA = "0xC7A760")]
			internal Vector2 <DOJump>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002670")]
			[Address(RVA = "0xC7A790", Offset = "0xC7A790", VA = "0xC7A790")]
			internal void <DOJump>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x6002671")]
			[Address(RVA = "0xC7A7D8", Offset = "0xC7A7D8", VA = "0xC7A7D8")]
			internal void <DOJump>b__5()
			{
			}
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xC79C4C", Offset = "0xC79C4C", VA = "0xC79C4C")]
		public static Tweener DOMove(this Rigidbody2D target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xC79DC0", Offset = "0xC79DC0", VA = "0xC79DC0")]
		public static Tweener DOMoveX(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xC79F44", Offset = "0xC79F44", VA = "0xC79F44")]
		public static Tweener DOMoveY(this Rigidbody2D target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xC7A0C8", Offset = "0xC7A0C8", VA = "0xC7A0C8")]
		public static Tweener DORotate(this Rigidbody2D target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xC7A214", Offset = "0xC7A214", VA = "0xC7A214")]
		public static Sequence DOJump(this Rigidbody2D target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}
	}
	[Token(Token = "0x20002FE")]
	public static class DOTweenModuleSprite
	{
		[Token(Token = "0x2000622")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD24C", Offset = "0x8CD24C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4002347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x6002672")]
			[Address(RVA = "0xC7AA8C", Offset = "0xC7AA8C", VA = "0xC7AA8C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002673")]
			[Address(RVA = "0xC7AFF0", Offset = "0xC7AFF0", VA = "0xC7AFF0")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002674")]
			[Address(RVA = "0xC7B020", Offset = "0xC7B020", VA = "0xC7B020")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000623")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD25C", Offset = "0x8CD25C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x4002348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SpriteRenderer target;

			[Token(Token = "0x6002675")]
			[Address(RVA = "0xC7ABC8", Offset = "0xC7ABC8", VA = "0xC7ABC8")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002676")]
			[Address(RVA = "0xC7B080", Offset = "0xC7B080", VA = "0xC7B080")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002677")]
			[Address(RVA = "0xC7B0B0", Offset = "0xC7B0B0", VA = "0xC7B0B0")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD26C", Offset = "0x8CD26C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x400234A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpriteRenderer target;

			[Token(Token = "0x6002678")]
			[Address(RVA = "0xC7AFE8", Offset = "0xC7AFE8", VA = "0xC7AFE8")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002679")]
			[Address(RVA = "0xC7B110", Offset = "0xC7B110", VA = "0xC7B110")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600267A")]
			[Address(RVA = "0xC7B11C", Offset = "0xC7B11C", VA = "0xC7B11C")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xC7A930", Offset = "0xC7A930", VA = "0xC7A930")]
		public static Tweener DOColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xC7AA94", Offset = "0xC7AA94", VA = "0xC7AA94")]
		public static Tweener DOFade(this SpriteRenderer target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xC7ABD0", Offset = "0xC7ABD0", VA = "0xC7ABD0")]
		public static Sequence DOGradientColor(this SpriteRenderer target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xC7ADBC", Offset = "0xC7ADBC", VA = "0xC7ADBC")]
		public static Tweener DOBlendableColor(this SpriteRenderer target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x20002FF")]
	public static class DOTweenModuleUI
	{
		[Token(Token = "0x2000625")]
		public static class Utils
		{
			[Token(Token = "0x600267B")]
			[Address(RVA = "0xC80A54", Offset = "0xC80A54", VA = "0xC80A54")]
			public static Vector2 SwitchToRectTransform(RectTransform from, RectTransform to)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x2000626")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD27C", Offset = "0x8CD27C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x400234B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CanvasGroup target;

			[Token(Token = "0x600267C")]
			[Address(RVA = "0xC7B32C", Offset = "0xC7B32C", VA = "0xC7B32C")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x600267D")]
			[Address(RVA = "0xC7EF1C", Offset = "0xC7EF1C", VA = "0xC7EF1C")]
			internal float <DOFade>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600267E")]
			[Address(RVA = "0xC7EF4C", Offset = "0xC7EF4C", VA = "0xC7EF4C")]
			internal void <DOFade>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000627")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD28C", Offset = "0x8CD28C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x400234C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x600267F")]
			[Address(RVA = "0xC7B490", Offset = "0xC7B490", VA = "0xC7B490")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002680")]
			[Address(RVA = "0xC7F4AC", Offset = "0xC7F4AC", VA = "0xC7F4AC")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002681")]
			[Address(RVA = "0xC7F4E4", Offset = "0xC7F4E4", VA = "0xC7F4E4")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD29C", Offset = "0x8CD29C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400234D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Graphic target;

			[Token(Token = "0x6002682")]
			[Address(RVA = "0xC7B5CC", Offset = "0xC7B5CC", VA = "0xC7B5CC")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002683")]
			[Address(RVA = "0xC7FE14", Offset = "0xC7FE14", VA = "0xC7FE14")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002684")]
			[Address(RVA = "0xC7FE4C", Offset = "0xC7FE4C", VA = "0xC7FE4C")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000629")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD2AC", Offset = "0x8CD2AC")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x400234E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6002685")]
			[Address(RVA = "0xC7B730", Offset = "0xC7B730", VA = "0xC7B730")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002686")]
			[Address(RVA = "0xC80598", Offset = "0xC80598", VA = "0xC80598")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002687")]
			[Address(RVA = "0xC805D0", Offset = "0xC805D0", VA = "0xC805D0")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200062A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD2BC", Offset = "0x8CD2BC")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400234F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x6002688")]
			[Address(RVA = "0xC7B86C", Offset = "0xC7B86C", VA = "0xC7B86C")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002689")]
			[Address(RVA = "0xC80638", Offset = "0xC80638", VA = "0xC80638")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600268A")]
			[Address(RVA = "0xC80670", Offset = "0xC80670", VA = "0xC80670")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200062B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD2CC", Offset = "0x8CD2CC")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4002350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image target;

			[Token(Token = "0x600268B")]
			[Address(RVA = "0xC7B9CC", Offset = "0xC7B9CC", VA = "0xC7B9CC")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600268C")]
			[Address(RVA = "0xC806D8", Offset = "0xC806D8", VA = "0xC806D8")]
			internal float <DOFillAmount>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x600268D")]
			[Address(RVA = "0xC80708", Offset = "0xC80708", VA = "0xC80708")]
			internal void <DOFillAmount>b__1(float x)
			{
			}
		}

		[Token(Token = "0x200062C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD2DC", Offset = "0x8CD2DC")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4002351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x600268E")]
			[Address(RVA = "0xC7BD1C", Offset = "0xC7BD1C", VA = "0xC7BD1C")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x600268F")]
			[Address(RVA = "0xC80748", Offset = "0xC80748", VA = "0xC80748")]
			internal Vector2 <DOFlexibleSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002690")]
			[Address(RVA = "0xC807D4", Offset = "0xC807D4", VA = "0xC807D4")]
			internal void <DOFlexibleSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200062D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD2EC", Offset = "0x8CD2EC")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6002691")]
			[Address(RVA = "0xC7BE78", Offset = "0xC7BE78", VA = "0xC7BE78")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002692")]
			[Address(RVA = "0xC8084C", Offset = "0xC8084C", VA = "0xC8084C")]
			internal Vector2 <DOMinSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002693")]
			[Address(RVA = "0xC808D8", Offset = "0xC808D8", VA = "0xC808D8")]
			internal void <DOMinSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200062E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD2FC", Offset = "0x8CD2FC")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayoutElement target;

			[Token(Token = "0x6002694")]
			[Address(RVA = "0xC7BFD4", Offset = "0xC7BFD4", VA = "0xC7BFD4")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002695")]
			[Address(RVA = "0xC80950", Offset = "0xC80950", VA = "0xC80950")]
			internal Vector2 <DOPreferredSize>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002696")]
			[Address(RVA = "0xC809DC", Offset = "0xC809DC", VA = "0xC809DC")]
			internal void <DOPreferredSize>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200062F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD30C", Offset = "0x8CD30C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4002354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x6002697")]
			[Address(RVA = "0xC7C138", Offset = "0xC7C138", VA = "0xC7C138")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002698")]
			[Address(RVA = "0xC7EF8C", Offset = "0xC7EF8C", VA = "0xC7EF8C")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x6002699")]
			[Address(RVA = "0xC7EFBC", Offset = "0xC7EFBC", VA = "0xC7EFBC")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD31C", Offset = "0x8CD31C")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4002355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x600269A")]
			[Address(RVA = "0xC7C274", Offset = "0xC7C274", VA = "0xC7C274")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x600269B")]
			[Address(RVA = "0xC7F01C", Offset = "0xC7F01C", VA = "0xC7F01C")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x600269C")]
			[Address(RVA = "0xC7F04C", Offset = "0xC7F04C", VA = "0xC7F04C")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000631")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD32C", Offset = "0x8CD32C")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4002356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Outline target;

			[Token(Token = "0x600269D")]
			[Address(RVA = "0xC7C3C0", Offset = "0xC7C3C0", VA = "0xC7C3C0")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x600269E")]
			[Address(RVA = "0xC7F0AC", Offset = "0xC7F0AC", VA = "0xC7F0AC")]
			internal Vector2 <DOScale>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x600269F")]
			[Address(RVA = "0xC7F0DC", Offset = "0xC7F0DC", VA = "0xC7F0DC")]
			internal void <DOScale>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000632")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD33C", Offset = "0x8CD33C")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4002357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026A0")]
			[Address(RVA = "0xC7C51C", Offset = "0xC7C51C", VA = "0xC7C51C")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x60026A1")]
			[Address(RVA = "0xC7F124", Offset = "0xC7F124", VA = "0xC7F124")]
			internal Vector2 <DOAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026A2")]
			[Address(RVA = "0xC7F154", Offset = "0xC7F154", VA = "0xC7F154")]
			internal void <DOAnchorPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000633")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD34C", Offset = "0x8CD34C")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4002358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026A3")]
			[Address(RVA = "0xC7C690", Offset = "0xC7C690", VA = "0xC7C690")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x60026A4")]
			[Address(RVA = "0xC7F19C", Offset = "0xC7F19C", VA = "0xC7F19C")]
			internal Vector2 <DOAnchorPosX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026A5")]
			[Address(RVA = "0xC7F1CC", Offset = "0xC7F1CC", VA = "0xC7F1CC")]
			internal void <DOAnchorPosX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD35C", Offset = "0x8CD35C")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4002359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026A6")]
			[Address(RVA = "0xC7C804", Offset = "0xC7C804", VA = "0xC7C804")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x60026A7")]
			[Address(RVA = "0xC7F214", Offset = "0xC7F214", VA = "0xC7F214")]
			internal Vector2 <DOAnchorPosY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026A8")]
			[Address(RVA = "0xC7F244", Offset = "0xC7F244", VA = "0xC7F244")]
			internal void <DOAnchorPosY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000635")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD36C", Offset = "0x8CD36C")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x400235A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026A9")]
			[Address(RVA = "0xC7C968", Offset = "0xC7C968", VA = "0xC7C968")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x60026AA")]
			[Address(RVA = "0xC7F28C", Offset = "0xC7F28C", VA = "0xC7F28C")]
			internal Vector3 <DOAnchorPos3D>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60026AB")]
			[Address(RVA = "0xC7F2BC", Offset = "0xC7F2BC", VA = "0xC7F2BC")]
			internal void <DOAnchorPos3D>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000636")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD37C", Offset = "0x8CD37C")]
		private sealed class <>c__DisplayClass17_0
		{
			[Token(Token = "0x400235B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026AC")]
			[Address(RVA = "0xC7CAE8", Offset = "0xC7CAE8", VA = "0xC7CAE8")]
			public <>c__DisplayClass17_0()
			{
			}

			[Token(Token = "0x60026AD")]
			[Address(RVA = "0xC7F314", Offset = "0xC7F314", VA = "0xC7F314")]
			internal Vector3 <DOAnchorPos3DX>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60026AE")]
			[Address(RVA = "0xC7F344", Offset = "0xC7F344", VA = "0xC7F344")]
			internal void <DOAnchorPos3DX>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000637")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD38C", Offset = "0x8CD38C")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x400235C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026AF")]
			[Address(RVA = "0xC7CC68", Offset = "0xC7CC68", VA = "0xC7CC68")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x60026B0")]
			[Address(RVA = "0xC7F39C", Offset = "0xC7F39C", VA = "0xC7F39C")]
			internal Vector3 <DOAnchorPos3DY>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60026B1")]
			[Address(RVA = "0xC7F3CC", Offset = "0xC7F3CC", VA = "0xC7F3CC")]
			internal void <DOAnchorPos3DY>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD39C", Offset = "0x8CD39C")]
		private sealed class <>c__DisplayClass19_0
		{
			[Token(Token = "0x400235D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026B2")]
			[Address(RVA = "0xC7CDE8", Offset = "0xC7CDE8", VA = "0xC7CDE8")]
			public <>c__DisplayClass19_0()
			{
			}

			[Token(Token = "0x60026B3")]
			[Address(RVA = "0xC7F424", Offset = "0xC7F424", VA = "0xC7F424")]
			internal Vector3 <DOAnchorPos3DZ>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60026B4")]
			[Address(RVA = "0xC7F454", Offset = "0xC7F454", VA = "0xC7F454")]
			internal void <DOAnchorPos3DZ>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000639")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD3AC", Offset = "0x8CD3AC")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x400235E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026B5")]
			[Address(RVA = "0xC7CF44", Offset = "0xC7CF44", VA = "0xC7CF44")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x60026B6")]
			[Address(RVA = "0xC7F54C", Offset = "0xC7F54C", VA = "0xC7F54C")]
			internal Vector2 <DOAnchorMax>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026B7")]
			[Address(RVA = "0xC7F57C", Offset = "0xC7F57C", VA = "0xC7F57C")]
			internal void <DOAnchorMax>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200063A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD3BC", Offset = "0x8CD3BC")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x400235F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026B8")]
			[Address(RVA = "0xC7D0A0", Offset = "0xC7D0A0", VA = "0xC7D0A0")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60026B9")]
			[Address(RVA = "0xC7F5C4", Offset = "0xC7F5C4", VA = "0xC7F5C4")]
			internal Vector2 <DOAnchorMin>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026BA")]
			[Address(RVA = "0xC7F5F4", Offset = "0xC7F5F4", VA = "0xC7F5F4")]
			internal void <DOAnchorMin>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200063B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD3CC", Offset = "0x8CD3CC")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x4002360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026BB")]
			[Address(RVA = "0xC7D1EC", Offset = "0xC7D1EC", VA = "0xC7D1EC")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x60026BC")]
			[Address(RVA = "0xC7F63C", Offset = "0xC7F63C", VA = "0xC7F63C")]
			internal Vector2 <DOPivot>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026BD")]
			[Address(RVA = "0xC7F66C", Offset = "0xC7F66C", VA = "0xC7F66C")]
			internal void <DOPivot>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200063C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD3DC", Offset = "0x8CD3DC")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4002361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026BE")]
			[Address(RVA = "0xC7D354", Offset = "0xC7D354", VA = "0xC7D354")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x60026BF")]
			[Address(RVA = "0xC7F6B4", Offset = "0xC7F6B4", VA = "0xC7F6B4")]
			internal Vector2 <DOPivotX>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026C0")]
			[Address(RVA = "0xC7F6E4", Offset = "0xC7F6E4", VA = "0xC7F6E4")]
			internal void <DOPivotX>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200063D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD3EC", Offset = "0x8CD3EC")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4002362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026C1")]
			[Address(RVA = "0xC7D4BC", Offset = "0xC7D4BC", VA = "0xC7D4BC")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x60026C2")]
			[Address(RVA = "0xC7F72C", Offset = "0xC7F72C", VA = "0xC7F72C")]
			internal Vector2 <DOPivotY>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026C3")]
			[Address(RVA = "0xC7F75C", Offset = "0xC7F75C", VA = "0xC7F75C")]
			internal void <DOPivotY>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200063E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD3FC", Offset = "0x8CD3FC")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4002363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026C4")]
			[Address(RVA = "0xC7D618", Offset = "0xC7D618", VA = "0xC7D618")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x60026C5")]
			[Address(RVA = "0xC7F7A4", Offset = "0xC7F7A4", VA = "0xC7F7A4")]
			internal Vector2 <DOSizeDelta>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026C6")]
			[Address(RVA = "0xC7F7D4", Offset = "0xC7F7D4", VA = "0xC7F7D4")]
			internal void <DOSizeDelta>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x200063F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD40C", Offset = "0x8CD40C")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4002364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026C7")]
			[Address(RVA = "0xC7D7D4", Offset = "0xC7D7D4", VA = "0xC7D7D4")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x60026C8")]
			[Address(RVA = "0xC7F81C", Offset = "0xC7F81C", VA = "0xC7F81C")]
			internal Vector3 <DOPunchAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60026C9")]
			[Address(RVA = "0xC7F8B4", Offset = "0xC7F8B4", VA = "0xC7F8B4")]
			internal void <DOPunchAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD41C", Offset = "0x8CD41C")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x4002365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026CA")]
			[Address(RVA = "0xC7D960", Offset = "0xC7D960", VA = "0xC7D960")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x60026CB")]
			[Address(RVA = "0xC7F96C", Offset = "0xC7F96C", VA = "0xC7F96C")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60026CC")]
			[Address(RVA = "0xC7FA04", Offset = "0xC7FA04", VA = "0xC7FA04")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000641")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD42C", Offset = "0x8CD42C")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4002366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x60026CD")]
			[Address(RVA = "0xC7DB38", Offset = "0xC7DB38", VA = "0xC7DB38")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x60026CE")]
			[Address(RVA = "0xC7FABC", Offset = "0xC7FABC", VA = "0xC7FABC")]
			internal Vector3 <DOShakeAnchorPos>b__0()
			{
				return default(Vector3);
			}

			[Token(Token = "0x60026CF")]
			[Address(RVA = "0xC7FB54", Offset = "0xC7FB54", VA = "0xC7FB54")]
			internal void <DOShakeAnchorPos>b__1(Vector3 x)
			{
			}
		}

		[Token(Token = "0x2000642")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD43C", Offset = "0x8CD43C")]
		private sealed class <>c__DisplayClass29_0
		{
			[Token(Token = "0x4002367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RectTransform target;

			[Token(Token = "0x4002368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float startPosY;

			[Token(Token = "0x4002369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool offsetYSet;

			[Token(Token = "0x400236A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float offsetY;

			[Token(Token = "0x400236B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Sequence s;

			[Token(Token = "0x400236C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector2 endValue;

			[Token(Token = "0x60026D0")]
			[Address(RVA = "0xC7DF14", Offset = "0xC7DF14", VA = "0xC7DF14")]
			public <>c__DisplayClass29_0()
			{
			}

			[Token(Token = "0x60026D1")]
			[Address(RVA = "0xC7FC0C", Offset = "0xC7FC0C", VA = "0xC7FC0C")]
			internal Vector2 <DOJumpAnchorPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026D2")]
			[Address(RVA = "0xC7FC3C", Offset = "0xC7FC3C", VA = "0xC7FC3C")]
			internal void <DOJumpAnchorPos>b__1(Vector2 x)
			{
			}

			[Token(Token = "0x60026D3")]
			[Address(RVA = "0xC7FC84", Offset = "0xC7FC84", VA = "0xC7FC84")]
			internal void <DOJumpAnchorPos>b__2()
			{
			}

			[Token(Token = "0x60026D4")]
			[Address(RVA = "0xC7FCC0", Offset = "0xC7FCC0", VA = "0xC7FCC0")]
			internal Vector2 <DOJumpAnchorPos>b__3()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026D5")]
			[Address(RVA = "0xC7FCF0", Offset = "0xC7FCF0", VA = "0xC7FCF0")]
			internal void <DOJumpAnchorPos>b__4(Vector2 x)
			{
			}

			[Token(Token = "0x60026D6")]
			[Address(RVA = "0xC7FD38", Offset = "0xC7FD38", VA = "0xC7FD38")]
			internal void <DOJumpAnchorPos>b__5()
			{
			}
		}

		[Token(Token = "0x2000643")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD44C", Offset = "0x8CD44C")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x400236D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x60026D7")]
			[Address(RVA = "0xC7E070", Offset = "0xC7E070", VA = "0xC7E070")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x60026D8")]
			[Address(RVA = "0xC7FEB4", Offset = "0xC7FEB4", VA = "0xC7FEB4")]
			internal Vector2 <DONormalizedPos>b__0()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60026D9")]
			[Address(RVA = "0xC7FF30", Offset = "0xC7FF30", VA = "0xC7FF30")]
			internal void <DONormalizedPos>b__1(Vector2 x)
			{
			}
		}

		[Token(Token = "0x2000644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD45C", Offset = "0x8CD45C")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x400236E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x60026DA")]
			[Address(RVA = "0xC7E1BC", Offset = "0xC7E1BC", VA = "0xC7E1BC")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x60026DB")]
			[Address(RVA = "0xC7FF98", Offset = "0xC7FF98", VA = "0xC7FF98")]
			internal float <DOHorizontalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60026DC")]
			[Address(RVA = "0xC7FFC8", Offset = "0xC7FFC8", VA = "0xC7FFC8")]
			internal void <DOHorizontalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000645")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD46C", Offset = "0x8CD46C")]
		private sealed class <>c__DisplayClass32_0
		{
			[Token(Token = "0x400236F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ScrollRect target;

			[Token(Token = "0x60026DD")]
			[Address(RVA = "0xC7E308", Offset = "0xC7E308", VA = "0xC7E308")]
			public <>c__DisplayClass32_0()
			{
			}

			[Token(Token = "0x60026DE")]
			[Address(RVA = "0xC80008", Offset = "0xC80008", VA = "0xC80008")]
			internal float <DOVerticalNormalizedPos>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60026DF")]
			[Address(RVA = "0xC80038", Offset = "0xC80038", VA = "0xC80038")]
			internal void <DOVerticalNormalizedPos>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000646")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD47C", Offset = "0x8CD47C")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4002370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Slider target;

			[Token(Token = "0x60026E0")]
			[Address(RVA = "0xC7E454", Offset = "0xC7E454", VA = "0xC7E454")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x60026E1")]
			[Address(RVA = "0xC80078", Offset = "0xC80078", VA = "0xC80078")]
			internal float <DOValue>b__0()
			{
				return default(float);
			}

			[Token(Token = "0x60026E2")]
			[Address(RVA = "0xC800B0", Offset = "0xC800B0", VA = "0xC800B0")]
			internal void <DOValue>b__1(float x)
			{
			}
		}

		[Token(Token = "0x2000647")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD48C", Offset = "0x8CD48C")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4002371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x60026E3")]
			[Address(RVA = "0xC7E5B8", Offset = "0xC7E5B8", VA = "0xC7E5B8")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x60026E4")]
			[Address(RVA = "0xC800F8", Offset = "0xC800F8", VA = "0xC800F8")]
			internal Color <DOColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60026E5")]
			[Address(RVA = "0xC80130", Offset = "0xC80130", VA = "0xC80130")]
			internal void <DOColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD49C", Offset = "0x8CD49C")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4002372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x60026E6")]
			[Address(RVA = "0xC7E6F4", Offset = "0xC7E6F4", VA = "0xC7E6F4")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x60026E7")]
			[Address(RVA = "0xC80198", Offset = "0xC80198", VA = "0xC80198")]
			internal Color <DOFade>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60026E8")]
			[Address(RVA = "0xC801D0", Offset = "0xC801D0", VA = "0xC801D0")]
			internal void <DOFade>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x2000649")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD4AC", Offset = "0x8CD4AC")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4002373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Text target;

			[Token(Token = "0x60026E9")]
			[Address(RVA = "0xC7E860", Offset = "0xC7E860", VA = "0xC7E860")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x60026EA")]
			[Address(RVA = "0xC80238", Offset = "0xC80238", VA = "0xC80238")]
			internal string <DOText>b__0()
			{
				return null;
			}

			[Token(Token = "0x60026EB")]
			[Address(RVA = "0xC80270", Offset = "0xC80270", VA = "0xC80270")]
			internal void <DOText>b__1(string x)
			{
			}
		}

		[Token(Token = "0x200064A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD4BC", Offset = "0x8CD4BC")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4002374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4002375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Graphic target;

			[Token(Token = "0x60026EC")]
			[Address(RVA = "0xC7EA9C", Offset = "0xC7EA9C", VA = "0xC7EA9C")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x60026ED")]
			[Address(RVA = "0xC802B0", Offset = "0xC802B0", VA = "0xC802B0")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60026EE")]
			[Address(RVA = "0xC802BC", Offset = "0xC802BC", VA = "0xC802BC")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200064B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD4CC", Offset = "0x8CD4CC")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x4002376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4002377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Image target;

			[Token(Token = "0x60026EF")]
			[Address(RVA = "0xC7ECD8", Offset = "0xC7ECD8", VA = "0xC7ECD8")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x60026F0")]
			[Address(RVA = "0xC803A8", Offset = "0xC803A8", VA = "0xC803A8")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60026F1")]
			[Address(RVA = "0xC803B4", Offset = "0xC803B4", VA = "0xC803B4")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x200064C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD4DC", Offset = "0x8CD4DC")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4002378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Color to;

			[Token(Token = "0x4002379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Text target;

			[Token(Token = "0x60026F2")]
			[Address(RVA = "0xC7EF14", Offset = "0xC7EF14", VA = "0xC7EF14")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x60026F3")]
			[Address(RVA = "0xC804A0", Offset = "0xC804A0", VA = "0xC804A0")]
			internal Color <DOBlendableColor>b__0()
			{
				return default(Color);
			}

			[Token(Token = "0x60026F4")]
			[Address(RVA = "0xC804AC", Offset = "0xC804AC", VA = "0xC804AC")]
			internal void <DOBlendableColor>b__1(Color x)
			{
			}
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xC7B1F8", Offset = "0xC7B1F8", VA = "0xC7B1F8")]
		public static Tweener DOFade(this CanvasGroup target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xC7B334", Offset = "0xC7B334", VA = "0xC7B334")]
		public static Tweener DOColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xC7B498", Offset = "0xC7B498", VA = "0xC7B498")]
		public static Tweener DOFade(this Graphic target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xC7B5D4", Offset = "0xC7B5D4", VA = "0xC7B5D4")]
		public static Tweener DOColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xC7B738", Offset = "0xC7B738", VA = "0xC7B738")]
		public static Tweener DOFade(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xC7B874", Offset = "0xC7B874", VA = "0xC7B874")]
		public static Tweener DOFillAmount(this Image target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xC7B9D4", Offset = "0xC7B9D4", VA = "0xC7B9D4")]
		public static Sequence DOGradientColor(this Image target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xC7BBC8", Offset = "0xC7BBC8", VA = "0xC7BBC8")]
		public static Tweener DOFlexibleSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xC7BD24", Offset = "0xC7BD24", VA = "0xC7BD24")]
		public static Tweener DOMinSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xC7BE80", Offset = "0xC7BE80", VA = "0xC7BE80")]
		public static Tweener DOPreferredSize(this LayoutElement target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xC7BFDC", Offset = "0xC7BFDC", VA = "0xC7BFDC")]
		public static Tweener DOColor(this Outline target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xC7C140", Offset = "0xC7C140", VA = "0xC7C140")]
		public static Tweener DOFade(this Outline target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xC7C27C", Offset = "0xC7C27C", VA = "0xC7C27C")]
		public static Tweener DOScale(this Outline target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xC7C3C8", Offset = "0xC7C3C8", VA = "0xC7C3C8")]
		public static Tweener DOAnchorPos(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xC7C524", Offset = "0xC7C524", VA = "0xC7C524")]
		public static Tweener DOAnchorPosX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xC7C698", Offset = "0xC7C698", VA = "0xC7C698")]
		public static Tweener DOAnchorPosY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xC7C80C", Offset = "0xC7C80C", VA = "0xC7C80C")]
		public static Tweener DOAnchorPos3D(this RectTransform target, Vector3 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xC7C970", Offset = "0xC7C970", VA = "0xC7C970")]
		public static Tweener DOAnchorPos3DX(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xC7CAF0", Offset = "0xC7CAF0", VA = "0xC7CAF0")]
		public static Tweener DOAnchorPos3DY(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xC7CC70", Offset = "0xC7CC70", VA = "0xC7CC70")]
		public static Tweener DOAnchorPos3DZ(this RectTransform target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xC7CDF0", Offset = "0xC7CDF0", VA = "0xC7CDF0")]
		public static Tweener DOAnchorMax(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xC7CF4C", Offset = "0xC7CF4C", VA = "0xC7CF4C")]
		public static Tweener DOAnchorMin(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xC7D0A8", Offset = "0xC7D0A8", VA = "0xC7D0A8")]
		public static Tweener DOPivot(this RectTransform target, Vector2 endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xC7D1F4", Offset = "0xC7D1F4", VA = "0xC7D1F4")]
		public static Tweener DOPivotX(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xC7D35C", Offset = "0xC7D35C", VA = "0xC7D35C")]
		public static Tweener DOPivotY(this RectTransform target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xC7D4C4", Offset = "0xC7D4C4", VA = "0xC7D4C4")]
		public static Tweener DOSizeDelta(this RectTransform target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xC7D620", Offset = "0xC7D620", VA = "0xC7D620")]
		public static Tweener DOPunchAnchorPos(this RectTransform target, Vector2 punch, float duration, int vibrato = 10, float elasticity = 1f, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xC7D7DC", Offset = "0xC7D7DC", VA = "0xC7D7DC")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, float strength = 100f, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xC7D968", Offset = "0xC7D968", VA = "0xC7D968")]
		public static Tweener DOShakeAnchorPos(this RectTransform target, float duration, Vector2 strength, int vibrato = 10, float randomness = 90f, bool snapping = false, bool fadeOut = true)
		{
			return null;
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xC7DB40", Offset = "0xC7DB40", VA = "0xC7DB40")]
		public static Sequence DOJumpAnchorPos(this RectTransform target, Vector2 endValue, float jumpPower, int numJumps, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xC7DF1C", Offset = "0xC7DF1C", VA = "0xC7DF1C")]
		public static Tweener DONormalizedPos(this ScrollRect target, Vector2 endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xC7E078", Offset = "0xC7E078", VA = "0xC7E078")]
		public static Tweener DOHorizontalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xC7E1C4", Offset = "0xC7E1C4", VA = "0xC7E1C4")]
		public static Tweener DOVerticalNormalizedPos(this ScrollRect target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xC7E310", Offset = "0xC7E310", VA = "0xC7E310")]
		public static Tweener DOValue(this Slider target, float endValue, float duration, bool snapping = false)
		{
			return null;
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xC7E45C", Offset = "0xC7E45C", VA = "0xC7E45C")]
		public static Tweener DOColor(this Text target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xC7E5C0", Offset = "0xC7E5C0", VA = "0xC7E5C0")]
		public static Tweener DOFade(this Text target, float endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xC7E6FC", Offset = "0xC7E6FC", VA = "0xC7E6FC")]
		public static Tweener DOText(this Text target, string endValue, float duration, bool richTextEnabled = true, ScrambleMode scrambleMode = ScrambleMode.None, [Optional] string scrambleChars)
		{
			return null;
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xC7E868", Offset = "0xC7E868", VA = "0xC7E868")]
		public static Tweener DOBlendableColor(this Graphic target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xC7EAA4", Offset = "0xC7EAA4", VA = "0xC7EAA4")]
		public static Tweener DOBlendableColor(this Image target, Color endValue, float duration)
		{
			return null;
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xC7ECE0", Offset = "0xC7ECE0", VA = "0xC7ECE0")]
		public static Tweener DOBlendableColor(this Text target, Color endValue, float duration)
		{
			return null;
		}
	}
	[Token(Token = "0x2000300")]
	public static class DOTweenModuleUnityVersion
	{
		[Token(Token = "0x600155C")]
		[Address(RVA = "0xC80D6C", Offset = "0xC80D6C", VA = "0xC80D6C")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, float duration)
		{
			return null;
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xC80F5C", Offset = "0xC80F5C", VA = "0xC80F5C")]
		public static Sequence DOGradientColor(this Material target, Gradient gradient, string property, float duration)
		{
			return null;
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xC8115C", Offset = "0xC8115C", VA = "0xC8115C")]
		public static CustomYieldInstruction WaitForCompletion(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xC8120C", Offset = "0xC8120C", VA = "0xC8120C")]
		public static CustomYieldInstruction WaitForRewind(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xC812BC", Offset = "0xC812BC", VA = "0xC812BC")]
		public static CustomYieldInstruction WaitForKill(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xC8136C", Offset = "0xC8136C", VA = "0xC8136C")]
		public static CustomYieldInstruction WaitForElapsedLoops(this Tween t, int elapsedLoops, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xC8142C", Offset = "0xC8142C", VA = "0xC8142C")]
		public static CustomYieldInstruction WaitForPosition(this Tween t, float position, bool returnCustomYieldInstruction)
		{
			return null;
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xC814EC", Offset = "0xC814EC", VA = "0xC814EC")]
		public static CustomYieldInstruction WaitForStart(this Tween t, bool returnCustomYieldInstruction)
		{
			return null;
		}
	}
	[Token(Token = "0x2000301")]
	public static class DOTweenCYInstruction
	{
		[Token(Token = "0x200064D")]
		public class WaitForCompletion : CustomYieldInstruction
		{
			[Token(Token = "0x400237A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x17000307")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60026F5")]
				[Address(RVA = "0xC770C8", Offset = "0xC770C8", VA = "0xC770C8", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60026F6")]
			[Address(RVA = "0xC77120", Offset = "0xC77120", VA = "0xC77120")]
			public WaitForCompletion(Tween tween)
			{
			}
		}

		[Token(Token = "0x200064E")]
		public class WaitForRewind : CustomYieldInstruction
		{
			[Token(Token = "0x400237B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x17000308")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60026F7")]
				[Address(RVA = "0xC7730C", Offset = "0xC7730C", VA = "0xC7730C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60026F8")]
			[Address(RVA = "0xC773C0", Offset = "0xC773C0", VA = "0xC773C0")]
			public WaitForRewind(Tween tween)
			{
			}
		}

		[Token(Token = "0x200064F")]
		public class WaitForKill : CustomYieldInstruction
		{
			[Token(Token = "0x400237C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x17000309")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60026F9")]
				[Address(RVA = "0xC771E4", Offset = "0xC771E4", VA = "0xC771E4", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60026FA")]
			[Address(RVA = "0xC77214", Offset = "0xC77214", VA = "0xC77214")]
			public WaitForKill(Tween tween)
			{
			}
		}

		[Token(Token = "0x2000650")]
		public class WaitForElapsedLoops : CustomYieldInstruction
		{
			[Token(Token = "0x400237D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x400237E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int elapsedLoops;

			[Token(Token = "0x1700030A")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60026FB")]
				[Address(RVA = "0xC7714C", Offset = "0xC7714C", VA = "0xC7714C", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60026FC")]
			[Address(RVA = "0xC771A8", Offset = "0xC771A8", VA = "0xC771A8")]
			public WaitForElapsedLoops(Tween tween, int elapsedLoops)
			{
			}
		}

		[Token(Token = "0x2000651")]
		public class WaitForPosition : CustomYieldInstruction
		{
			[Token(Token = "0x400237F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x4002380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly float position;

			[Token(Token = "0x1700030B")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60026FD")]
				[Address(RVA = "0xC77240", Offset = "0xC77240", VA = "0xC77240", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x60026FE")]
			[Address(RVA = "0xC772D0", Offset = "0xC772D0", VA = "0xC772D0")]
			public WaitForPosition(Tween tween, float position)
			{
			}
		}

		[Token(Token = "0x2000652")]
		public class WaitForStart : CustomYieldInstruction
		{
			[Token(Token = "0x4002381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Tween t;

			[Token(Token = "0x1700030C")]
			public override bool keepWaiting
			{
				[Token(Token = "0x60026FF")]
				[Address(RVA = "0xC773EC", Offset = "0xC773EC", VA = "0xC773EC", Slot = "7")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002700")]
			[Address(RVA = "0xC77454", Offset = "0xC77454", VA = "0xC77454")]
			public WaitForStart(Tween tween)
			{
			}
		}
	}
	[Token(Token = "0x2000302")]
	public static class DOTweenModuleUtils
	{
		[Token(Token = "0x2000653")]
		public static class Physics
		{
			[Token(Token = "0x6002701")]
			[Address(RVA = "0xC81640", Offset = "0xC81640", VA = "0xC81640")]
			public static void SetOrientationOnPath(PathOptions options, Tween t, Quaternion newRot, Transform trans)
			{
			}

			[Token(Token = "0x6002702")]
			[Address(RVA = "0xC8182C", Offset = "0xC8182C", VA = "0xC8182C")]
			public static bool HasRigidbody2D(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6002703")]
			[Address(RVA = "0xC818C0", Offset = "0xC818C0", VA = "0xC818C0")]
			public static bool HasRigidbody(Component target)
			{
				return default(bool);
			}

			[Token(Token = "0x6002704")]
			[Address(RVA = "0xC81954", Offset = "0xC81954", VA = "0xC81954")]
			public static TweenerCore<Vector3, DG.Tweening.Plugins.Core.PathCore.Path, PathOptions> CreateDOTweenPathTween(MonoBehaviour target, bool tweenRigidbody, bool isLocal, DG.Tweening.Plugins.Core.PathCore.Path path, float duration, PathMode pathMode)
			{
				return null;
			}
		}

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _initialized;

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xC8159C", Offset = "0xC8159C", VA = "0xC8159C")]
		public static void Init()
		{
		}
	}
}
namespace AmplifyColor
{
	[Token(Token = "0x2000303")]
	public enum Quality
	{
		[Token(Token = "0x40014F2")]
		Mobile,
		[Token(Token = "0x40014F3")]
		Standard
	}
	[Token(Token = "0x2000304")]
	public enum Tonemapping
	{
		[Token(Token = "0x40014F5")]
		Disabled,
		[Token(Token = "0x40014F6")]
		Photographic,
		[Token(Token = "0x40014F7")]
		FilmicHable,
		[Token(Token = "0x40014F8")]
		FilmicACES
	}
	[Serializable]
	[Token(Token = "0x2000305")]
	public struct RenderLayer
	{
		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public LayerMask mask;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color color;

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x9A382C", Offset = "0x9A382C", VA = "0x9A382C")]
		public RenderLayer(LayerMask mask, Color color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000306")]
	public class VersionInfo
	{
		[Token(Token = "0x40014FB")]
		public const byte Major = 1;

		[Token(Token = "0x40014FC")]
		public const byte Minor = 8;

		[Token(Token = "0x40014FD")]
		public const byte Release = 0;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string StageSuffix;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string TrialSuffix;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int m_major;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private int m_minor;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_release;

		[Token(Token = "0x17000181")]
		public int Number
		{
			[Token(Token = "0x6001568")]
			[Address(RVA = "0xF349A0", Offset = "0xF349A0", VA = "0xF349A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xF347A8", Offset = "0xF347A8", VA = "0xF347A8")]
		public static string StaticToString()
		{
			return null;
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xF348A0", Offset = "0xF348A0", VA = "0xF348A0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xF349C0", Offset = "0xF349C0", VA = "0xF349C0")]
		private VersionInfo()
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xF349F4", Offset = "0xF349F4", VA = "0xF349F4")]
		private VersionInfo(byte major, byte minor, byte release)
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xF34A40", Offset = "0xF34A40", VA = "0xF34A40")]
		public static VersionInfo Current()
		{
			return null;
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xF34AAC", Offset = "0xF34AAC", VA = "0xF34AAC")]
		public static bool Matches(VersionInfo version)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000307")]
	public class VolumeEffectField
	{
		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fieldName;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string fieldType;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float valueSingle;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color valueColor;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool valueBoolean;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 valueVector2;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 valueVector3;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector4 valueVector4;

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xF35684", Offset = "0xF35684", VA = "0xF35684")]
		public VolumeEffectField(string fieldName, string fieldType)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xF3734C", Offset = "0xF3734C", VA = "0xF3734C")]
		public VolumeEffectField(FieldInfo pi, Component c)
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xF3725C", Offset = "0xF3725C", VA = "0xF3725C")]
		public static bool IsValidType(string type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xF38AA4", Offset = "0xF38AA4", VA = "0xF38AA4")]
		public void UpdateValue(object val)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000308")]
	public class VolumeEffectComponent
	{
		[Token(Token = "0x2000654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD4EC", Offset = "0x8CD4EC")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x4002382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VolumeEffectFieldFlags fieldFlags;

			[Token(Token = "0x6002705")]
			[Address(RVA = "0xF37488", Offset = "0xF37488", VA = "0xF37488")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002706")]
			[Address(RVA = "0xF3780C", Offset = "0xF3780C", VA = "0xF3780C")]
			internal bool <UpdateComponent>b__0(VolumeEffectField s)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000655")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD4FC", Offset = "0x8CD4FC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<FieldInfo, bool> <>9__9_0;

			[Token(Token = "0x4002385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectField, string> <>9__10_0;

			[Token(Token = "0x6002708")]
			[Address(RVA = "0xF3777C", Offset = "0xF3777C", VA = "0xF3777C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002709")]
			[Address(RVA = "0xF37784", Offset = "0xF37784", VA = "0xF37784")]
			internal bool <ListAcceptableFields>b__9_0(FieldInfo f)
			{
				return default(bool);
			}

			[Token(Token = "0x600270A")]
			[Address(RVA = "0xF377E0", Offset = "0xF377E0", VA = "0xF377E0")]
			internal string <GetFieldNames>b__10_0(VolumeEffectField r)
			{
				return null;
			}
		}

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string componentName;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<VolumeEffectField> fields;

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xF35504", Offset = "0xF35504", VA = "0xF35504")]
		public VolumeEffectComponent(string name)
		{
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xF370F8", Offset = "0xF370F8", VA = "0xF370F8")]
		public VolumeEffectField AddField(FieldInfo pi, Component c)
		{
			return null;
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xF37100", Offset = "0xF37100", VA = "0xF37100")]
		public VolumeEffectField AddField(FieldInfo pi, Component c, int position)
		{
			return null;
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xF37418", Offset = "0xF37418", VA = "0xF37418")]
		public void RemoveEffectField(VolumeEffectField field)
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xF35B1C", Offset = "0xF35B1C", VA = "0xF35B1C")]
		public VolumeEffectComponent(Component c, VolumeEffectComponentFlags compFlags)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xF357D0", Offset = "0xF357D0", VA = "0xF357D0")]
		public void UpdateComponent(Component c, VolumeEffectComponentFlags compFlags)
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xF35588", Offset = "0xF35588", VA = "0xF35588")]
		public VolumeEffectField FindEffectField(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xF37490", Offset = "0xF37490", VA = "0xF37490")]
		public static FieldInfo[] ListAcceptableFields(Component c)
		{
			return null;
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xF37618", Offset = "0xF37618", VA = "0xF37618")]
		public string[] GetFieldNames()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000309")]
	public class VolumeEffect
	{
		[Serializable]
		[Token(Token = "0x2000656")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD50C", Offset = "0x8CD50C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Component, bool> <>9__10_0;

			[Token(Token = "0x4002388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectComponent, string> <>9__11_0;

			[Token(Token = "0x600270C")]
			[Address(RVA = "0xF36F90", Offset = "0xF36F90", VA = "0xF36F90")]
			public <>c()
			{
			}

			[Token(Token = "0x600270D")]
			[Address(RVA = "0xF36F98", Offset = "0xF36F98", VA = "0xF36F98")]
			internal bool <ListAcceptableComponents>b__10_0(Component comp)
			{
				return default(bool);
			}

			[Token(Token = "0x600270E")]
			[Address(RVA = "0xF370CC", Offset = "0xF370CC", VA = "0xF370CC")]
			internal string <GetComponentNames>b__11_0(VolumeEffectComponent r)
			{
				return null;
			}
		}

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AmplifyColorBase gameObject;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<VolumeEffectComponent> components;

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xF34B70", Offset = "0xF34B70", VA = "0xF34B70")]
		public VolumeEffect(AmplifyColorBase effect)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xF34BF4", Offset = "0xF34BF4", VA = "0xF34BF4")]
		public static VolumeEffect BlendValuesToVolumeEffect(VolumeEffectFlags flags, VolumeEffect volume1, VolumeEffect volume2, float blend)
		{
			return null;
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xF356BC", Offset = "0xF356BC", VA = "0xF356BC")]
		public VolumeEffectComponent AddComponent(Component c, VolumeEffectComponentFlags compFlags)
		{
			return null;
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xF35D98", Offset = "0xF35D98", VA = "0xF35D98")]
		public void RemoveEffectComponent(VolumeEffectComponent comp)
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xF35E08", Offset = "0xF35E08", VA = "0xF35E08")]
		public void UpdateVolume()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xF36004", Offset = "0xF36004", VA = "0xF36004")]
		public void SetValues(AmplifyColorBase targetColor)
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xF366B8", Offset = "0xF366B8", VA = "0xF366B8")]
		public void BlendValues(AmplifyColorBase targetColor, VolumeEffect other, float blendAmount)
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xF35408", Offset = "0xF35408", VA = "0xF35408")]
		public VolumeEffectComponent FindEffectComponent(string compName)
		{
			return null;
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xF36C7C", Offset = "0xF36C7C", VA = "0xF36C7C")]
		public static Component[] ListAcceptableComponents(AmplifyColorBase go)
		{
			return null;
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xF36E2C", Offset = "0xF36E2C", VA = "0xF36E2C")]
		public string[] GetComponentNames()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200030A")]
	public class VolumeEffectContainer
	{
		[Serializable]
		[Token(Token = "0x2000657")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD51C", Offset = "0x8CD51C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400238A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VolumeEffect, AmplifyColorBase> <>9__6_0;

			[Token(Token = "0x6002710")]
			[Address(RVA = "0xF38A70", Offset = "0xF38A70", VA = "0xF38A70")]
			public <>c()
			{
			}

			[Token(Token = "0x6002711")]
			[Address(RVA = "0xF38A78", Offset = "0xF38A78", VA = "0xF38A78")]
			internal AmplifyColorBase <GetStoredEffects>b__6_0(VolumeEffect r)
			{
				return null;
			}
		}

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<VolumeEffect> volumes;

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xF384C8", Offset = "0xF384C8", VA = "0xF384C8")]
		public VolumeEffectContainer()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xF3853C", Offset = "0xF3853C", VA = "0xF3853C")]
		public void AddColorEffect(AmplifyColorBase colorEffect)
		{
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xF38800", Offset = "0xF38800", VA = "0xF38800")]
		public VolumeEffect AddJustColorEffect(AmplifyColorBase colorEffect)
		{
			return null;
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xF385EC", Offset = "0xF385EC", VA = "0xF385EC")]
		public VolumeEffect FindVolumeEffect(AmplifyColorBase colorEffect)
		{
			return null;
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xF3889C", Offset = "0xF3889C", VA = "0xF3889C")]
		public void RemoveVolumeEffect(VolumeEffect volume)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xF3890C", Offset = "0xF3890C", VA = "0xF3890C")]
		public AmplifyColorBase[] GetStoredEffects()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200030B")]
	public class VolumeEffectFieldFlags
	{
		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fieldName;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string fieldType;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool blendFlag;

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xF37CA4", Offset = "0xF37CA4", VA = "0xF37CA4")]
		public VolumeEffectFieldFlags(FieldInfo pi)
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xF37AB0", Offset = "0xF37AB0", VA = "0xF37AB0")]
		public VolumeEffectFieldFlags(VolumeEffectField field)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200030C")]
	public class VolumeEffectComponentFlags
	{
		[Token(Token = "0x2000658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD52C", Offset = "0x8CD52C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x400238B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VolumeEffectField field;

			[Token(Token = "0x6002712")]
			[Address(RVA = "0xF37F98", Offset = "0xF37F98", VA = "0xF37F98")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002713")]
			[Address(RVA = "0xF3841C", Offset = "0xF3841C", VA = "0xF3841C")]
			internal bool <UpdateComponentFlags>b__0(VolumeEffectFieldFlags s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000659")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD53C", Offset = "0x8CD53C")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x400238C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FieldInfo pi;

			[Token(Token = "0x6002714")]
			[Address(RVA = "0xF381A4", Offset = "0xF381A4", VA = "0xF381A4")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6002715")]
			[Address(RVA = "0xF38468", Offset = "0xF38468", VA = "0xF38468")]
			internal bool <UpdateComponentFlags>b__0(VolumeEffectFieldFlags s)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200065A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD54C", Offset = "0x8CD54C")]
		private sealed class <>c
		{
			[Token(Token = "0x400238D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400238E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VolumeEffectFieldFlags, bool> <>9__8_0;

			[Token(Token = "0x400238F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectFieldFlags, string> <>9__8_1;

			[Token(Token = "0x6002717")]
			[Address(RVA = "0xF383BC", Offset = "0xF383BC", VA = "0xF383BC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002718")]
			[Address(RVA = "0xF383C4", Offset = "0xF383C4", VA = "0xF383C4")]
			internal bool <GetFieldNames>b__8_0(VolumeEffectFieldFlags r)
			{
				return default(bool);
			}

			[Token(Token = "0x6002719")]
			[Address(RVA = "0xF383F0", Offset = "0xF383F0", VA = "0xF383F0")]
			internal string <GetFieldNames>b__8_1(VolumeEffectFieldFlags r)
			{
				return null;
			}
		}

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string componentName;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<VolumeEffectFieldFlags> componentFields;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool blendFlag;

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xF37858", Offset = "0xF37858", VA = "0xF37858")]
		public VolumeEffectComponentFlags(string name)
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xF378DC", Offset = "0xF378DC", VA = "0xF378DC")]
		public VolumeEffectComponentFlags(VolumeEffectComponent comp)
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xF37B14", Offset = "0xF37B14", VA = "0xF37B14")]
		public VolumeEffectComponentFlags(Component c)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xF37D34", Offset = "0xF37D34", VA = "0xF37D34")]
		public void UpdateComponentFlags(VolumeEffectComponent comp)
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xF37FA0", Offset = "0xF37FA0", VA = "0xF37FA0")]
		public void UpdateComponentFlags(Component c)
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xF381AC", Offset = "0xF381AC", VA = "0xF381AC")]
		public string[] GetFieldNames()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200030D")]
	public class VolumeEffectFlags
	{
		[Token(Token = "0x200065B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD55C", Offset = "0x8CD55C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Component c;

			[Token(Token = "0x600271A")]
			[Address(RVA = "0xF38E24", Offset = "0xF38E24", VA = "0xF38E24")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x600271B")]
			[Address(RVA = "0xF39734", Offset = "0xF39734", VA = "0xF39734")]
			internal bool <AddComponent>b__0(VolumeEffectComponentFlags s)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200065C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD56C", Offset = "0x8CD56C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4002391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VolumeEffectComponent comp;

			[Token(Token = "0x600271C")]
			[Address(RVA = "0xF3907C", Offset = "0xF3907C", VA = "0xF3907C")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x600271D")]
			[Address(RVA = "0xF39794", Offset = "0xF39794", VA = "0xF39794")]
			internal bool <UpdateFlags>b__0(VolumeEffectComponentFlags s)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200065D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD57C", Offset = "0x8CD57C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<VolumeEffectComponentFlags, bool> <>9__7_0;

			[Token(Token = "0x4002394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<VolumeEffectComponentFlags, string> <>9__7_1;

			[Token(Token = "0x600271F")]
			[Address(RVA = "0xF396D4", Offset = "0xF396D4", VA = "0xF396D4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002720")]
			[Address(RVA = "0xF396DC", Offset = "0xF396DC", VA = "0xF396DC")]
			internal bool <GetComponentNames>b__7_0(VolumeEffectComponentFlags r)
			{
				return default(bool);
			}

			[Token(Token = "0x6002721")]
			[Address(RVA = "0xF39708", Offset = "0xF39708", VA = "0xF39708")]
			internal string <GetComponentNames>b__7_1(VolumeEffectComponentFlags r)
			{
				return null;
			}
		}

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<VolumeEffectComponentFlags> components;

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xF38C80", Offset = "0xF38C80", VA = "0xF38C80")]
		public VolumeEffectFlags()
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xF38CF4", Offset = "0xF38CF4", VA = "0xF38CF4")]
		public void AddComponent(Component c)
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xF38E2C", Offset = "0xF38E2C", VA = "0xF38E2C")]
		public void UpdateFlags(VolumeEffect effectVol)
		{
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xF39084", Offset = "0xF39084", VA = "0xF39084")]
		public static void UpdateCamFlags(AmplifyColorBase[] effects, AmplifyColorVolumeBase[] volumes)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xF391F0", Offset = "0xF391F0", VA = "0xF391F0")]
		public VolumeEffect GenerateEffectData(AmplifyColorBase go)
		{
			return null;
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xF393C8", Offset = "0xF393C8", VA = "0xF393C8")]
		public VolumeEffectComponentFlags FindComponentFlags(string compName)
		{
			return null;
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xF394C4", Offset = "0xF394C4", VA = "0xF394C4")]
		public string[] GetComponentNames()
		{
			return null;
		}
	}
}
namespace Tantawowa.TimelineEvents
{
	[Token(Token = "0x200030E")]
	public class EventInvocationInfo
	{
		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Behaviour TargetBehaviour;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MethodInfo MethodInfo;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Type[] SupportedTypes;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Key;

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xB28D78", Offset = "0xB28D78", VA = "0xB28D78")]
		public EventInvocationInfo(string key, Behaviour targetBehaviour, MethodInfo methodInfo)
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xB28DB8", Offset = "0xB28DB8", VA = "0xB28DB8")]
		public void Invoke(object value)
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xB28EAC", Offset = "0xB28EAC", VA = "0xB28EAC")]
		public void InvokEnum(int value)
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xB29048", Offset = "0xB29048", VA = "0xB29048")]
		public void InvokeNoArgs()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xB290A8", Offset = "0xB290A8", VA = "0xB290A8")]
		public void Invoke(bool isSingleArg, string value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200030F")]
	public class TimelineEventBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x200065E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD58C", Offset = "0x8CD58C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string methodName;

			[Token(Token = "0x4002396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool methodWitharg;

			[Token(Token = "0x6002722")]
			[Address(RVA = "0xB29FF8", Offset = "0xB29FF8", VA = "0xB29FF8")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002723")]
			[Address(RVA = "0xB2A358", Offset = "0xB2A358", VA = "0xB2A358")]
			internal bool <GetInvocationInfo>b__0(MethodInfo m)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string HandlerKey;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsMethodWithParam;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool InvokeEventsInEditMode;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject TargetObject;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ArgValue;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventInvocationInfo invocationInfo;

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xB29D2C", Offset = "0xB29D2C", VA = "0xB29D2C", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xB29D94", Offset = "0xB29D94", VA = "0xB29D94")]
		private void UpdateDelegates()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xB29DE8", Offset = "0xB29DE8", VA = "0xB29DE8")]
		private EventInvocationInfo GetInvocationInfo(bool isEnabled, string methodKey, EventInvocationInfo currentInfo, bool methodWitharg)
		{
			return null;
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xB2A000", Offset = "0xB2A000", VA = "0xB2A000")]
		private void GetBehaviourAndMethod(bool isEnabled, string key, ref Behaviour targetBehaviour, ref string methodName)
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xB2A350", Offset = "0xB2A350", VA = "0xB2A350")]
		public TimelineEventBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000310")]
	public class TimelineEventClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimelineEventBehaviour template;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF80C", Offset = "0x8DF80C")]
		private GameObject <TrackTargetObject>k__BackingField;

		[Token(Token = "0x17000182")]
		public GameObject TrackTargetObject
		{
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0xB2A474", Offset = "0xB2A474", VA = "0xB2A474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB540", Offset = "0x8EB540")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015A6")]
			[Address(RVA = "0xB2A47C", Offset = "0xB2A47C", VA = "0xB2A47C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB550", Offset = "0x8EB550")]
			set
			{
			}
		}

		[Token(Token = "0x17000183")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0xB2A484", Offset = "0xB2A484", VA = "0xB2A484", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xB2A48C", Offset = "0xB2A48C", VA = "0xB2A48C", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xB2A570", Offset = "0xB2A570", VA = "0xB2A570")]
		public TimelineEventClip()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class TimelineEventMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xB2A5D8", Offset = "0xB2A5D8", VA = "0xB2A5D8")]
		public TimelineEventMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x2000312")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8CC508", Offset = "0x8CC508")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8CC508", Offset = "0x8CC508")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x8CC508", Offset = "0x8CC508")]
	public class TimelineEventTrack : TrackAsset
	{
		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xB2A5E0", Offset = "0xB2A5E0", VA = "0xB2A5E0", Slot = "14")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xB2A9F8", Offset = "0xB2A9F8", VA = "0xB2A9F8")]
		public TimelineEventTrack()
		{
		}
	}
}
namespace Tantawowa.Extensions
{
	[Token(Token = "0x2000313")]
	public static class PrimitiveExtensions
	{
		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xB2883C", Offset = "0xB2883C", VA = "0xB2883C")]
		public static int ClampIndex(this int value, int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xB28858", Offset = "0xB28858", VA = "0xB28858")]
		public static bool IsValidAsType(this string input, Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AF")]
		public static T ConvertToType<T>(this string input)
		{
			return (T)null;
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xB28A3C", Offset = "0xB28A3C", VA = "0xB28A3C")]
		public static double RoundUpToNearest(this double passednumber, double roundto)
		{
			return default(double);
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xB28AC0", Offset = "0xB28AC0", VA = "0xB28AC0")]
		public static double RoundDownToNearest(this double passednumber, double roundto)
		{
			return default(double);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xB28B44", Offset = "0xB28B44", VA = "0xB28B44")]
		public static float RoundUpToNearest(this float passednumber, float roundto)
		{
			return default(float);
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xB28BC8", Offset = "0xB28BC8", VA = "0xB28BC8")]
		public static float RoundDownToNearest(this float passednumber, float roundto)
		{
			return default(float);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xB28C4C", Offset = "0xB28C4C", VA = "0xB28C4C")]
		public static int RoundUpToNearest(this int passednumber, int roundto)
		{
			return default(int);
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xB28CDC", Offset = "0xB28CDC", VA = "0xB28CDC")]
		public static int RoundDownToNearest(this int passednumber, int roundto)
		{
			return default(int);
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xB28D6C", Offset = "0xB28D6C", VA = "0xB28D6C")]
		public static int Flip(this int value)
		{
			return default(int);
		}
	}
}
namespace Tantawowa.Demo.DemoScripts
{
	[Token(Token = "0x2000314")]
	public enum RobotState
	{
		[Token(Token = "0x4001524")]
		Sleeping,
		[Token(Token = "0x4001525")]
		GoToWork,
		[Token(Token = "0x4001526")]
		GoHome
	}
	[Token(Token = "0x2000315")]
	public class Robot : MonoBehaviour
	{
		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int points;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private RobotState currentState;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMesh Message;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NavMeshAgent Agent;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NavMeshFollower NavMeshFollower;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform Work;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform Home;

		[Token(Token = "0x17000184")]
		public int Points
		{
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0xB2830C", Offset = "0xB2830C", VA = "0xB2830C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015B8")]
			[Address(RVA = "0xB28314", Offset = "0xB28314", VA = "0xB28314")]
			set
			{
			}
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xB283AC", Offset = "0xB283AC", VA = "0xB283AC")]
		public void AddScore(int points)
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xB283B8", Offset = "0xB283B8", VA = "0xB283B8")]
		public void ResetScore()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xB283C0", Offset = "0xB283C0", VA = "0xB283C0")]
		public void SetState(RobotState state)
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xB28554", Offset = "0xB28554", VA = "0xB28554")]
		private void Update()
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xB28748", Offset = "0xB28748", VA = "0xB28748")]
		public Robot()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class UIManager : MonoBehaviour
	{
		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> UIElements;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject Light;

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0xB28750", Offset = "0xB28750", VA = "0xB28750")]
		public void ChangeUI(UIType type)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0xB287FC", Offset = "0xB287FC", VA = "0xB287FC")]
		public void ToggleLight(bool isOn)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xB28834", Offset = "0xB28834", VA = "0xB28834")]
		public UIManager()
		{
		}
	}
}
namespace Game.General.Navigation
{
	[Token(Token = "0x2000317")]
	public class NavMeshFollower : MonoBehaviour
	{
		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<NavMeshFollower> OnArrive;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent Agent;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x17000185")]
		public Transform Target
		{
			[Token(Token = "0x60015C1")]
			[Address(RVA = "0xC08A98", Offset = "0xC08A98", VA = "0xC08A98")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C2")]
			[Address(RVA = "0xC08AA0", Offset = "0xC08AA0", VA = "0xC08AA0")]
			set
			{
			}
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xC08C64", Offset = "0xC08C64", VA = "0xC08C64")]
		private void Update()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xC08D58", Offset = "0xC08D58", VA = "0xC08D58")]
		public NavMeshFollower()
		{
		}
	}
}
namespace UnityEngine.Timeline
{
	[Token(Token = "0x2000318")]
	public class VideoPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VideoPlayer videoPlayer;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VideoClip videoClip;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mute;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double preloadTime;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double clipInTime;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool playedOnce;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool preparing;

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xD56118", Offset = "0xD56118", VA = "0xD56118")]
		public void PrepareVideo()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xD565AC", Offset = "0xD565AC", VA = "0xD565AC")]
		private void LoopPointReached(VideoPlayer vp)
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xD565BC", Offset = "0xD565BC", VA = "0xD565BC", Slot = "19")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xD56914", Offset = "0xD56914", VA = "0xD56914", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xD56A7C", Offset = "0xD56A7C", VA = "0xD56A7C", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xD56BB8", Offset = "0xD56BB8", VA = "0xD56BB8", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xD56E20", Offset = "0xD56E20", VA = "0xD56E20", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xD56E28", Offset = "0xD56E28", VA = "0xD56E28", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0xD56E60", Offset = "0xD56E60", VA = "0xD56E60", Slot = "16")]
		public override void OnPlayableDestroy(Playable playable)
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0xD569C8", Offset = "0xD569C8", VA = "0xD569C8")]
		public void PlayVideo()
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xD56B20", Offset = "0xD56B20", VA = "0xD56B20")]
		public void PauseVideo()
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xD56510", Offset = "0xD56510", VA = "0xD56510")]
		public void StopVideo()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xD56764", Offset = "0xD56764", VA = "0xD56764")]
		private void SyncVideoToPlayable(Playable playable)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xD56E64", Offset = "0xD56E64", VA = "0xD56E64")]
		public VideoPlayableBehaviour()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public sealed class VideoSchedulerPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerable<TimelineClip> m_Clips;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayableDirector m_Director;

		[Token(Token = "0x17000186")]
		internal PlayableDirector director
		{
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0xD56E80", Offset = "0xD56E80", VA = "0xD56E80")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D4")]
			[Address(RVA = "0xD56E88", Offset = "0xD56E88", VA = "0xD56E88")]
			set
			{
			}
		}

		[Token(Token = "0x17000187")]
		internal IEnumerable<TimelineClip> clips
		{
			[Token(Token = "0x60015D5")]
			[Address(RVA = "0xD56E90", Offset = "0xD56E90", VA = "0xD56E90")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015D6")]
			[Address(RVA = "0xD56E98", Offset = "0xD56E98", VA = "0xD56E98")]
			set
			{
			}
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xD56EA0", Offset = "0xD56EA0", VA = "0xD56EA0", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xD57334", Offset = "0xD57334", VA = "0xD57334")]
		public VideoSchedulerPlayableBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031A")]
	public class VideoScriptPlayableAsset : PlayableAsset
	{
		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExposedReference<VideoPlayer> videoPlayer;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[NotKeyable]
		public VideoClip videoClip;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[NotKeyable]
		public bool mute;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		[NotKeyable]
		public bool loop;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[NotKeyable]
		public double preloadTime;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[NotKeyable]
		public double clipInTime;

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xD5733C", Offset = "0xD5733C", VA = "0xD5733C", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xD574DC", Offset = "0xD574DC", VA = "0xD574DC")]
		public VideoScriptPlayableAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031B")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8CC5C4", Offset = "0x8CC5C4")]
	[AttributeAttribute(Name = "TrackMediaType", RVA = "0x8CC5C4", Offset = "0x8CC5C4")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8CC5C4", Offset = "0x8CC5C4")]
	public class VideoScriptPlayableTrack : TrackAsset
	{
		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xD574F8", Offset = "0xD574F8", VA = "0xD574F8", Slot = "14")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xD57634", Offset = "0xD57634", VA = "0xD57634")]
		public VideoScriptPlayableTrack()
		{
		}
	}
}
namespace Polybrush
{
	[Token(Token = "0x200031C")]
	[ExecuteInEditMode]
	public class z_AdditionalVertexStreams : MonoBehaviour
	{
		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh m_AdditionalVertexStreamMesh;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x17000188")]
		private MeshRenderer meshRenderer
		{
			[Token(Token = "0x60015DD")]
			[Address(RVA = "0xE9DE6C", Offset = "0xE9DE6C", VA = "0xE9DE6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xE9DF1C", Offset = "0xE9DF1C", VA = "0xE9DF1C")]
		private void Start()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xE9DF24", Offset = "0xE9DF24", VA = "0xE9DF24")]
		public void SetAdditionalVertexStreamsMesh(Mesh mesh)
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xE9DF60", Offset = "0xE9DF60", VA = "0xE9DF60")]
		public z_AdditionalVertexStreams()
		{
		}
	}
}
namespace BoundarySystem_Ext
{
	[Token(Token = "0x200031D")]
	internal static class Pvr_BoundaryAPI
	{
		[Token(Token = "0x4001545")]
		private const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xF494D4", Offset = "0xF494D4", VA = "0xF494D4")]
		public static extern void Pvr_StartSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xF49564", Offset = "0xF49564", VA = "0xF49564")]
		public static extern void Pvr_ShutdownSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xF495F4", Offset = "0xF495F4", VA = "0xF495F4")]
		private static extern int Pvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xF496F4", Offset = "0xF496F4", VA = "0xF496F4")]
		private static extern IntPtr Pvr_GetCameraData_Ext();

		[PreserveSig]
		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xF49784", Offset = "0xF49784", VA = "0xF49784")]
		public static extern void Pvr_ResetVrModebyForce();

		[PreserveSig]
		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xF49814", Offset = "0xF49814", VA = "0xF49814")]
		private static extern bool Pvr_ResumeBoundaryForSTS();

		[PreserveSig]
		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xF498AC", Offset = "0xF498AC", VA = "0xF498AC")]
		private static extern void Pvr_PauseBoundaryForSTS();

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xF4993C", Offset = "0xF4993C", VA = "0xF4993C")]
		public static int UPvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xF49948", Offset = "0xF49948", VA = "0xF49948")]
		public static IntPtr UPvr_GetCameraData_Ext()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xF49984", Offset = "0xF49984", VA = "0xF49984")]
		public static bool UPvr_ResumeBoundaryForSTS()
		{
			return default(bool);
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xF49988", Offset = "0xF49988", VA = "0xF49988")]
		public static void UPvr_PauseBoundaryForSTS()
		{
		}

		[Token(Token = "0x60015EC")]
		public static IntPtr StructToIntPtr<T>(T info)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60015ED")]
		public static T IntPtrToStruct<T>(IntPtr info)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x200031E")]
	internal static class Pvr_SafeAreaAlgoAPI
	{
		[Token(Token = "0x200065F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8CD59C", Offset = "0x8CD59C")]
		public delegate void SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr);

		[Token(Token = "0x2000660")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8CD5B0", Offset = "0x8CD5B0")]
		public delegate void SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr);

		[Token(Token = "0x2000661")]
		public struct GSAPoint3i
		{
			[Token(Token = "0x4002397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x4002398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x4002399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;
		}

		[Token(Token = "0x2000662")]
		public struct GSALine
		{
			[Token(Token = "0x400239A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr pointArray;

			[Token(Token = "0x400239B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pointCount;
		}

		[Token(Token = "0x2000663")]
		public struct GSALineCollection
		{
			[Token(Token = "0x400239C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr lineArray;

			[Token(Token = "0x400239D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lineCount;
		}

		[Token(Token = "0x2000664")]
		public struct GSALegalData
		{
			[Token(Token = "0x400239E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int overMaxRange;

			[Token(Token = "0x400239F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int includeBigGrap;

			[Token(Token = "0x40023A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bigGapNum;

			[Token(Token = "0x40023A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int centerOut;

			[Token(Token = "0x40023A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int removeNarrow;

			[Token(Token = "0x40023A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int overMaxRange_more;

			[Token(Token = "0x40023A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int validShrinkArea;
		}

		[Token(Token = "0x2000665")]
		public struct GSARect
		{
			[Token(Token = "0x40023A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i leftup;

			[Token(Token = "0x40023A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GSAPoint3i leftdown;

			[Token(Token = "0x40023A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GSAPoint3i rightup;

			[Token(Token = "0x40023A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GSAPoint3i rightdown;

			[Token(Token = "0x40023A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GSAPoint3i center;

			[Token(Token = "0x40023AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x40023AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x40023AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int isLegal;

			[Token(Token = "0x40023AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GSALegalData legalData;
		}

		[Token(Token = "0x4001546")]
		private const string LibFileName = "SafetyArea";

		[PreserveSig]
		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xF49CBC", Offset = "0xF49CBC", VA = "0xF49CBC")]
		private static extern int GSAInit(int width, int height);

		[PreserveSig]
		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xF49D6C", Offset = "0xF49D6C", VA = "0xF49D6C")]
		private static extern int GSAShutDown();

		[PreserveSig]
		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xF49DFC", Offset = "0xF49DFC", VA = "0xF49DFC")]
		private static extern int GSASetCallback(SafeAreaCallback cb);

		[PreserveSig]
		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xF49EA0", Offset = "0xF49EA0", VA = "0xF49EA0")]
		private static extern int GSASetCallbackShrink(SafeAreaCallbackShrink cb);

		[PreserveSig]
		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xF49F44", Offset = "0xF49F44", VA = "0xF49F44")]
		private static extern int GSAUpDateData(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xF49FE4", Offset = "0xF49FE4", VA = "0xF49FE4")]
		private static extern int GSASetConfigFilePath(IntPtr configPath);

		[PreserveSig]
		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xF4A084", Offset = "0xF4A084", VA = "0xF4A084")]
		private static extern bool GSAGetClosedAreaUpdateFlag();

		[PreserveSig]
		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xF4A11C", Offset = "0xF4A11C", VA = "0xF4A11C")]
		private static extern int GSALoadSafetyArea(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xF4A1BC", Offset = "0xF4A1BC", VA = "0xF4A1BC")]
		private static extern double GSABoundaryDetector(ref GSAPoint3i pointPtr);

		[PreserveSig]
		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xF4A25C", Offset = "0xF4A25C", VA = "0xF4A25C")]
		private static extern int GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xF4A30C", Offset = "0xF4A30C", VA = "0xF4A30C")]
		private static extern double GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir);

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xF4A3D4", Offset = "0xF4A3D4", VA = "0xF4A3D4")]
		public static int Pvr_GSAInit(int width, int height)
		{
			return default(int);
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xF4A3D8", Offset = "0xF4A3D8", VA = "0xF4A3D8")]
		public static int Pvr_GSASetCallback(SafeAreaCallback cb)
		{
			return default(int);
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xF4A3DC", Offset = "0xF4A3DC", VA = "0xF4A3DC")]
		public static int Pvr_GSASetCallbackShrink(SafeAreaCallbackShrink cb)
		{
			return default(int);
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xF4A3E0", Offset = "0xF4A3E0", VA = "0xF4A3E0")]
		public static int Pvr_GSAUpDateData(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xF4A3E4", Offset = "0xF4A3E4", VA = "0xF4A3E4")]
		public static bool Pvr_GSAGetClosedAreaUpdateFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xF4A3E8", Offset = "0xF4A3E8", VA = "0xF4A3E8")]
		public static int Pvr_GSASetConfigFilePath(string configPath)
		{
			return default(int);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xF4A470", Offset = "0xF4A470", VA = "0xF4A470")]
		public static int Pvr_GSALoadSafetyArea(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xF4A474", Offset = "0xF4A474", VA = "0xF4A474")]
		public static double Pvr_GSABoundaryDetector(ref GSAPoint3i point)
		{
			return default(double);
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xF4A478", Offset = "0xF4A478", VA = "0xF4A478")]
		public static int Pvr_GSAShutDown()
		{
			return default(int);
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xF4A47C", Offset = "0xF4A47C", VA = "0xF4A47C")]
		public static int Pvr_GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea)
		{
			return default(int);
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xF4A484", Offset = "0xF4A484", VA = "0xF4A484")]
		public static double Pvr_GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir)
		{
			return default(double);
		}
	}
	[Token(Token = "0x200031F")]
	public class Pvr_BoundarySystem
	{
		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_BoundarySystem instance;

		[Token(Token = "0x4001548")]
		public const int CameraImageWidth = 1280;

		[Token(Token = "0x4001549")]
		public const int CameraImageHeight = 400;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr CameraFramePtr;

		[Token(Token = "0x17000189")]
		public static Pvr_BoundarySystem Instance
		{
			[Token(Token = "0x6001604")]
			[Address(RVA = "0xF4998C", Offset = "0xF4998C", VA = "0xF4998C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xF49A54", Offset = "0xF49A54", VA = "0xF49A54")]
		public void OpenBoundary()
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xF49A58", Offset = "0xF49A58", VA = "0xF49A58")]
		public void CloseBoundary()
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xF49A5C", Offset = "0xF49A5C", VA = "0xF49A5C")]
		public void Reset6Dof()
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xF49A60", Offset = "0xF49A60", VA = "0xF49A60")]
		public float[] GetControllerFixedPoseData(int hand)
		{
			return null;
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xF49A08", Offset = "0xF49A08", VA = "0xF49A08")]
		public Pvr_BoundarySystem()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class Pvr_SafeAreaAlgoModule
	{
		[Token(Token = "0x2000666")]
		public struct ExtraInfo
		{
			[Token(Token = "0x40023AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overMaxRange;

			[Token(Token = "0x40023AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeBigGap;

			[Token(Token = "0x40023B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bigGapNum;

			[Token(Token = "0x40023B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool centerOut;

			[Token(Token = "0x40023B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool removeNarrow;

			[Token(Token = "0x40023B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool overMaxRange_more;

			[Token(Token = "0x40023B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int validShrinkArea;
		}

		[Token(Token = "0x2000667")]
		public struct BoundaryPlayerArea
		{
			[Token(Token = "0x40023B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 lowerleft;

			[Token(Token = "0x40023B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 upperleft;

			[Token(Token = "0x40023B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 upperRight;

			[Token(Token = "0x40023B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 lowerRight;

			[Token(Token = "0x40023B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 center;

			[Token(Token = "0x40023BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x40023BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x40023BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool isLegal;

			[Token(Token = "0x40023BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ExtraInfo extraInfo;
		}

		[Token(Token = "0x2000668")]
		public delegate void BoundarySystemCallback(BoundaryPlayerArea playAreaInfo, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x2000669")]
		public delegate void BoundarySystemCallbackShrink(List<Vector3> rectPoints, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_SafeAreaAlgoModule instance;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BoundarySystemCallback boundarySystemCallback;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoundarySystemCallbackShrink boundarySystemCallbackShrink;

		[Token(Token = "0x1700018A")]
		public static Pvr_SafeAreaAlgoModule Instance
		{
			[Token(Token = "0x600160A")]
			[Address(RVA = "0xF4BC74", Offset = "0xF4BC74", VA = "0xF4BC74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xF4BCFC", Offset = "0xF4BCFC", VA = "0xF4BCFC")]
		public void RegisterCallBack(BoundarySystemCallback callback)
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xF4BD04", Offset = "0xF4BD04", VA = "0xF4BD04")]
		public void RegisterCallBackShrink(BoundarySystemCallbackShrink callback)
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xF4BD0C", Offset = "0xF4BD0C", VA = "0xF4BD0C")]
		public bool Start()
		{
			return default(bool);
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xF4BE2C", Offset = "0xF4BE2C", VA = "0xF4BE2C")]
		public bool CommitNewLineData(bool isFistLine, Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xF4C1F8", Offset = "0xF4C1F8", VA = "0xF4C1F8")]
		public bool Shutdown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xF4C27C", Offset = "0xF4C27C", VA = "0xF4C27C")]
		public double QueryDistanceOfPoint(Vector3 point)
		{
			return default(double);
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xF4C2D0", Offset = "0xF4C2D0", VA = "0xF4C2D0")]
		public double QueryDistanceOfPoint(Vector3 point, bool isPlayArea, ref Vector3 closestPoint, ref Vector3 normalDir)
		{
			return default(double);
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xF4AED4", Offset = "0xF4AED4", VA = "0xF4AED4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8EB600", Offset = "0x8EB600")]
		private static void _SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xF4B5E4", Offset = "0xF4B5E4", VA = "0xF4B5E4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8EB664", Offset = "0x8EB664")]
		private static void _SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr)
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xF4BCF4", Offset = "0xF4BCF4", VA = "0xF4BCF4")]
		public Pvr_SafeAreaAlgoModule()
		{
		}
	}
}
namespace ONSPPropagationInterface
{
	[Token(Token = "0x2000321")]
	public enum FaceType : uint
	{
		[Token(Token = "0x400154F")]
		TRIANGLES,
		[Token(Token = "0x4001550")]
		QUADS
	}
	[Token(Token = "0x2000322")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4001552")]
		ABSORPTION,
		[Token(Token = "0x4001553")]
		TRANSMISSION,
		[Token(Token = "0x4001554")]
		SCATTERING
	}
	[Token(Token = "0x2000323")]
	public struct MeshGroup
	{
		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
	[Token(Token = "0x2000324")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x400155A")]
		Int8,
		[Token(Token = "0x400155B")]
		UInt8,
		[Token(Token = "0x400155C")]
		Int16,
		[Token(Token = "0x400155D")]
		UInt16,
		[Token(Token = "0x400155E")]
		Int32,
		[Token(Token = "0x400155F")]
		UInt32,
		[Token(Token = "0x4001560")]
		Int64,
		[Token(Token = "0x4001561")]
		UInt64,
		[Token(Token = "0x4001562")]
		Float16,
		[Token(Token = "0x4001563")]
		Float32,
		[Token(Token = "0x4001564")]
		Float64
	}
}
namespace ONSPPropagationInterface.FMOD
{
	[Token(Token = "0x2000325")]
	public class PropIFace
	{
		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr context_;

		[Token(Token = "0x4001566")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x1700018B")]
		private static IntPtr context
		{
			[Token(Token = "0x6001615")]
			[Address(RVA = "0xDEC070", Offset = "0xDEC070", VA = "0xDEC070")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001616")]
		[Address(RVA = "0xDEC130", Offset = "0xDEC130", VA = "0xDEC130")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context);

		[PreserveSig]
		[Token(Token = "0x6001617")]
		[Address(RVA = "0xDEC1CC", Offset = "0xDEC1CC", VA = "0xDEC1CC")]
		public static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xDEC278", Offset = "0xDEC278", VA = "0xDEC278")]
		public static int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001619")]
		[Address(RVA = "0xDEC2E8", Offset = "0xDEC2E8", VA = "0xDEC2E8")]
		public static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xDEC394", Offset = "0xDEC394", VA = "0xDEC394")]
		public static int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600161B")]
		[Address(RVA = "0xDEC3FC", Offset = "0xDEC3FC", VA = "0xDEC3FC")]
		public static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xDEC4A8", Offset = "0xDEC4A8", VA = "0xDEC4A8")]
		public static int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600161D")]
		[Address(RVA = "0xDEC510", Offset = "0xDEC510", VA = "0xDEC510")]
		public static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xDEC5AC", Offset = "0xDEC5AC", VA = "0xDEC5AC")]
		public static int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600161F")]
		[Address(RVA = "0xDEC610", Offset = "0xDEC610", VA = "0xDEC610")]
		public static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xDEC738", Offset = "0xDEC738", VA = "0xDEC738")]
		public static int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001621")]
		[Address(RVA = "0xDEC858", Offset = "0xDEC858", VA = "0xDEC858")]
		public static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xDEC90C", Offset = "0xDEC90C", VA = "0xDEC90C")]
		public static int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001623")]
		[Address(RVA = "0xDEC980", Offset = "0xDEC980", VA = "0xDEC980")]
		public static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xDECAC8", Offset = "0xDECAC8", VA = "0xDECAC8")]
		public static int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001625")]
		[Address(RVA = "0xDECB3C", Offset = "0xDECB3C", VA = "0xDECB3C")]
		public static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001626")]
		[Address(RVA = "0xDECC04", Offset = "0xDECC04", VA = "0xDECC04")]
		public static int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001627")]
		[Address(RVA = "0xDECC78", Offset = "0xDECC78", VA = "0xDECC78")]
		public static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xDECD40", Offset = "0xDECD40", VA = "0xDECD40")]
		public static int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001629")]
		[Address(RVA = "0xDECDB4", Offset = "0xDECDB4", VA = "0xDECDB4")]
		public static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xDECE60", Offset = "0xDECE60", VA = "0xDECE60")]
		public static int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600162B")]
		[Address(RVA = "0xDECEC8", Offset = "0xDECEC8", VA = "0xDECEC8")]
		public static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xDECF64", Offset = "0xDECF64", VA = "0xDECF64")]
		public static int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600162D")]
		[Address(RVA = "0xDECFC8", Offset = "0xDECFC8", VA = "0xDECFC8")]
		public static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xDED08C", Offset = "0xDED08C", VA = "0xDED08C")]
		public static int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600162F")]
		[Address(RVA = "0xDED118", Offset = "0xDED118", VA = "0xDED118")]
		public static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xDED1DC", Offset = "0xDED1DC", VA = "0xDED1DC")]
		public static int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001631")]
		[Address(RVA = "0xDED268", Offset = "0xDED268", VA = "0xDED268")]
		public static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xDED314", Offset = "0xDED314", VA = "0xDED314")]
		public static int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xDED388", Offset = "0xDED388", VA = "0xDED388")]
		public PropIFace()
		{
		}
	}
}
namespace ONSPPropagationInterface.Wwise
{
	[Token(Token = "0x2000326")]
	public class PropIFace
	{
		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr context_;

		[Token(Token = "0x4001568")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x1700018C")]
		private static IntPtr context
		{
			[Token(Token = "0x6001635")]
			[Address(RVA = "0xDEE474", Offset = "0xDEE474", VA = "0xDEE474")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001636")]
		[Address(RVA = "0xDEE534", Offset = "0xDEE534", VA = "0xDEE534")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context);

		[PreserveSig]
		[Token(Token = "0x6001637")]
		[Address(RVA = "0xDEE5D0", Offset = "0xDEE5D0", VA = "0xDEE5D0")]
		public static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xDEE67C", Offset = "0xDEE67C", VA = "0xDEE67C")]
		public static int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001639")]
		[Address(RVA = "0xDEE6EC", Offset = "0xDEE6EC", VA = "0xDEE6EC")]
		public static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xDEE798", Offset = "0xDEE798", VA = "0xDEE798")]
		public static int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600163B")]
		[Address(RVA = "0xDEE800", Offset = "0xDEE800", VA = "0xDEE800")]
		public static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xDEE8AC", Offset = "0xDEE8AC", VA = "0xDEE8AC")]
		public static int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600163D")]
		[Address(RVA = "0xDEE914", Offset = "0xDEE914", VA = "0xDEE914")]
		public static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xDEE9B0", Offset = "0xDEE9B0", VA = "0xDEE9B0")]
		public static int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600163F")]
		[Address(RVA = "0xDEEA14", Offset = "0xDEEA14", VA = "0xDEEA14")]
		public static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xDEEB3C", Offset = "0xDEEB3C", VA = "0xDEEB3C")]
		public static int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001641")]
		[Address(RVA = "0xDEEC5C", Offset = "0xDEEC5C", VA = "0xDEEC5C")]
		public static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xDEED10", Offset = "0xDEED10", VA = "0xDEED10")]
		public static int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001643")]
		[Address(RVA = "0xDEED84", Offset = "0xDEED84", VA = "0xDEED84")]
		public static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xDEEECC", Offset = "0xDEEECC", VA = "0xDEEECC")]
		public static int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001645")]
		[Address(RVA = "0xDEEF40", Offset = "0xDEEF40", VA = "0xDEEF40")]
		public static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xDEF008", Offset = "0xDEF008", VA = "0xDEF008")]
		public static int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001647")]
		[Address(RVA = "0xDEF07C", Offset = "0xDEF07C", VA = "0xDEF07C")]
		public static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xDEF144", Offset = "0xDEF144", VA = "0xDEF144")]
		public static int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001649")]
		[Address(RVA = "0xDEF1B8", Offset = "0xDEF1B8", VA = "0xDEF1B8")]
		public static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xDEF264", Offset = "0xDEF264", VA = "0xDEF264")]
		public static int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600164B")]
		[Address(RVA = "0xDEF2CC", Offset = "0xDEF2CC", VA = "0xDEF2CC")]
		public static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xDEF368", Offset = "0xDEF368", VA = "0xDEF368")]
		public static int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600164D")]
		[Address(RVA = "0xDEF3CC", Offset = "0xDEF3CC", VA = "0xDEF3CC")]
		public static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xDEF490", Offset = "0xDEF490", VA = "0xDEF490")]
		public static int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600164F")]
		[Address(RVA = "0xDEF51C", Offset = "0xDEF51C", VA = "0xDEF51C")]
		public static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xDEF5E0", Offset = "0xDEF5E0", VA = "0xDEF5E0")]
		public static int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001651")]
		[Address(RVA = "0xDEF66C", Offset = "0xDEF66C", VA = "0xDEF66C")]
		public static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xDEF718", Offset = "0xDEF718", VA = "0xDEF718")]
		public static int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xDEF78C", Offset = "0xDEF78C", VA = "0xDEF78C")]
		public PropIFace()
		{
		}
	}
}
namespace ONSPPropagationInterface.Unity_Native
{
	[Token(Token = "0x2000327")]
	public class PropIFace
	{
		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr context_;

		[Token(Token = "0x400156A")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x1700018D")]
		private static IntPtr context
		{
			[Token(Token = "0x6001655")]
			[Address(RVA = "0xDED3E0", Offset = "0xDED3E0", VA = "0xDED3E0")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001656")]
		[Address(RVA = "0xDED4A0", Offset = "0xDED4A0", VA = "0xDED4A0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context);

		[PreserveSig]
		[Token(Token = "0x6001657")]
		[Address(RVA = "0xDED53C", Offset = "0xDED53C", VA = "0xDED53C")]
		public static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xDED5E8", Offset = "0xDED5E8", VA = "0xDED5E8")]
		public static int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001659")]
		[Address(RVA = "0xDED658", Offset = "0xDED658", VA = "0xDED658")]
		public static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xDED704", Offset = "0xDED704", VA = "0xDED704")]
		public static int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600165B")]
		[Address(RVA = "0xDED76C", Offset = "0xDED76C", VA = "0xDED76C")]
		public static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xDE92E4", Offset = "0xDE92E4", VA = "0xDE92E4")]
		public static int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600165D")]
		[Address(RVA = "0xDED814", Offset = "0xDED814", VA = "0xDED814")]
		public static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xDE9C18", Offset = "0xDE9C18", VA = "0xDE9C18")]
		public static int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600165F")]
		[Address(RVA = "0xDED8B0", Offset = "0xDED8B0", VA = "0xDED8B0")]
		public static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xDEBE28", Offset = "0xDEBE28", VA = "0xDEBE28")]
		public static int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001661")]
		[Address(RVA = "0xDED9D8", Offset = "0xDED9D8", VA = "0xDED9D8")]
		public static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xDE9A98", Offset = "0xDE9A98", VA = "0xDE9A98")]
		public static int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001663")]
		[Address(RVA = "0xDEDA8C", Offset = "0xDEDA8C", VA = "0xDEDA8C")]
		public static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xDEDBD4", Offset = "0xDEDBD4", VA = "0xDEDBD4")]
		public static int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001665")]
		[Address(RVA = "0xDEDC48", Offset = "0xDEDC48", VA = "0xDEDC48")]
		public static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xDEDD10", Offset = "0xDEDD10", VA = "0xDEDD10")]
		public static int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001667")]
		[Address(RVA = "0xDEDD84", Offset = "0xDEDD84", VA = "0xDEDD84")]
		public static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xDEBF48", Offset = "0xDEBF48", VA = "0xDEBF48")]
		public static int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001669")]
		[Address(RVA = "0xDEDE4C", Offset = "0xDEDE4C", VA = "0xDEDE4C")]
		public static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xDEDEF4", Offset = "0xDEDEF4", VA = "0xDEDEF4")]
		public static int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600166B")]
		[Address(RVA = "0xDEDF5C", Offset = "0xDEDF5C", VA = "0xDEDF5C")]
		public static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xDEDFF8", Offset = "0xDEDFF8", VA = "0xDEDFF8")]
		public static int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600166D")]
		[Address(RVA = "0xDEE05C", Offset = "0xDEE05C", VA = "0xDEE05C")]
		public static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xDEE120", Offset = "0xDEE120", VA = "0xDEE120")]
		public static int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600166F")]
		[Address(RVA = "0xDEE1AC", Offset = "0xDEE1AC", VA = "0xDEE1AC")]
		public static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xDEE270", Offset = "0xDEE270", VA = "0xDEE270")]
		public static int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001671")]
		[Address(RVA = "0xDEE2FC", Offset = "0xDEE2FC", VA = "0xDEE2FC")]
		public static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xDEE3A8", Offset = "0xDEE3A8", VA = "0xDEE3A8")]
		public static int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xDEE41C", Offset = "0xDEE41C", VA = "0xDEE41C")]
		public PropIFace()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000328")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700018E")]
		public bool Highlight
		{
			[Token(Token = "0x6001675")]
			[Address(RVA = "0xB74F18", Offset = "0xB74F18", VA = "0xB74F18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001676")]
			[Address(RVA = "0xB74F20", Offset = "0xB74F20", VA = "0xB74F20")]
			set
			{
			}
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xB74F2C", Offset = "0xB74F2C", VA = "0xB74F2C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xB75154", Offset = "0xB75154", VA = "0xB75154", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xB7517C", Offset = "0xB7517C", VA = "0xB7517C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xB751A4", Offset = "0xB751A4", VA = "0xB751A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xB74FF8", Offset = "0xB74FF8", VA = "0xB74FF8")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xB7544C", Offset = "0xB7544C", VA = "0xB7544C")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700018F")]
		public bool InRange
		{
			[Token(Token = "0x600167E")]
			[Address(RVA = "0xB75548", Offset = "0xB75548", VA = "0xB75548")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600167F")]
			[Address(RVA = "0xB75550", Offset = "0xB75550", VA = "0xB75550")]
			set
			{
			}
		}

		[Token(Token = "0x17000190")]
		public bool Targeted
		{
			[Token(Token = "0x6001680")]
			[Address(RVA = "0xB75760", Offset = "0xB75760", VA = "0xB75760")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001681")]
			[Address(RVA = "0xB75768", Offset = "0xB75768", VA = "0xB75768")]
			set
			{
			}
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xB75774", Offset = "0xB75774", VA = "0xB75774", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xB7555C", Offset = "0xB7555C", VA = "0xB7555C")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xB759D4", Offset = "0xB759D4", VA = "0xB759D4")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xB75A6C", Offset = "0xB75A6C", VA = "0xB75A6C")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xB75B0C", Offset = "0xB75B0C", VA = "0xB75B0C")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x200032A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC674", Offset = "0x8CC674")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private GameObject m_player;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000191")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001687")]
			[Address(RVA = "0xB75B14", Offset = "0xB75B14", VA = "0xB75B14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001688")]
			[Address(RVA = "0xB75B1C", Offset = "0xB75B1C", VA = "0xB75B1C")]
			set
			{
			}
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xB75B38", Offset = "0xB75B38", VA = "0xB75B38", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xB75CE8", Offset = "0xB75CE8", VA = "0xB75CE8")]
		private void Update()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xB767AC", Offset = "0xB767AC", VA = "0xB767AC", Slot = "6")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xB76F60", Offset = "0xB76F60", VA = "0xB76F60", Slot = "7")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xB773C0", Offset = "0xB773C0", VA = "0xB773C0")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xB75FFC", Offset = "0xB75FFC", VA = "0xB75FFC")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xB774B8", Offset = "0xB774B8", VA = "0xB774B8")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xB77948", Offset = "0xB77948", VA = "0xB77948", Slot = "8")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xB77960", Offset = "0xB77960", VA = "0xB77960", Slot = "9")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xB77968", Offset = "0xB77968", VA = "0xB77968")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x200066A")]
		public enum CrosshairState
		{
			[Token(Token = "0x40023BF")]
			Disabled,
			[Token(Token = "0x40023C0")]
			Enabled,
			[Token(Token = "0x40023C1")]
			Targeted
		}

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xB77E1C", Offset = "0xB77E1C", VA = "0xB77E1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xB75900", Offset = "0xB75900", VA = "0xB75900")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xB77E8C", Offset = "0xB77E8C", VA = "0xB77E8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xB77EE4", Offset = "0xB77EE4", VA = "0xB77EE4")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xB77CA0", Offset = "0xB77CA0", VA = "0xB77CA0")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xB77D5C", Offset = "0xB77D5C", VA = "0xB77D5C")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xB77E14", Offset = "0xB77E14", VA = "0xB77E14")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x600169A")]
		[Address(RVA = "0xB79B20", Offset = "0xB79B20", VA = "0xB79B20")]
		private void Start()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xB79BEC", Offset = "0xB79BEC", VA = "0xB79BEC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0xB79BF8", Offset = "0xB79BF8", VA = "0xB79BF8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0xB79C04", Offset = "0xB79C04", VA = "0xB79C04")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool museSpherecast;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000192")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600169E")]
			[Address(RVA = "0xB77988", Offset = "0xB77988", VA = "0xB77988")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600169F")]
			[Address(RVA = "0xB77990", Offset = "0xB77990", VA = "0xB77990")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60016A0")]
			[Address(RVA = "0xB77A48", Offset = "0xB77A48", VA = "0xB77A48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016A1")]
			[Address(RVA = "0xB77A50", Offset = "0xB77A50", VA = "0xB77A50")]
			set
			{
			}
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xB77AF4", Offset = "0xB77AF4", VA = "0xB77AF4")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xB77C78", Offset = "0xB77C78", VA = "0xB77C78")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xB77C88", Offset = "0xB77C88", VA = "0xB77C88")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xB77C98", Offset = "0xB77C98", VA = "0xB77C98")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001591")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001592")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001593")]
		EUDT_None,
		[Token(Token = "0x4001594")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000330")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x200066B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD5C4", Offset = "0x8CD5C4")]
		private sealed class <WaitforOVROverlay>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700030D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002737")]
				[Address(RVA = "0xB79AA8", Offset = "0xB79AA8", VA = "0xB79AA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002739")]
				[Address(RVA = "0xB79B18", Offset = "0xB79B18", VA = "0xB79B18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002734")]
			[Address(RVA = "0xB78FAC", Offset = "0xB78FAC", VA = "0xB78FAC")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6002735")]
			[Address(RVA = "0xB797AC", Offset = "0xB797AC", VA = "0xB797AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002736")]
			[Address(RVA = "0xB797B0", Offset = "0xB797B0", VA = "0xB797B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002738")]
			[Address(RVA = "0xB79AB0", Offset = "0xB79AB0", VA = "0xB79AB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4001596")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4001597")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4001598")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle overlayRadioButton;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Toggle noneRadioButton;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DFA34", Offset = "0x8DFA34")]
		public GameObject mainCamera;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiCamera;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject uiGeoParent;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EUiDisplayType desiredUiType;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DFA6C", Offset = "0x8DFA6C")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float heightBetweenItems;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public int numLevels;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int numLoopsTrigger;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xB77EEC", Offset = "0xB77EEC", VA = "0xB77EEC")]
		private void Start()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xB789A8", Offset = "0xB789A8", VA = "0xB789A8")]
		private void Update()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xB78B04", Offset = "0xB78B04", VA = "0xB78B04")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xB78C90", Offset = "0xB78C90", VA = "0xB78C90")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xB78E20", Offset = "0xB78E20", VA = "0xB78E20")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xB78AD8", Offset = "0xB78AD8", VA = "0xB78AD8")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xB78F38", Offset = "0xB78F38", VA = "0xB78F38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EB6C8", Offset = "0x8EB6C8")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xB78FD8", Offset = "0xB78FD8", VA = "0xB78FD8")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xB78318", Offset = "0xB78318", VA = "0xB78318")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xB7913C", Offset = "0xB7913C", VA = "0xB7913C")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xB79014", Offset = "0xB79014", VA = "0xB79014")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xB7955C", Offset = "0xB7955C", VA = "0xB7955C")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xB79638", Offset = "0xB79638", VA = "0xB79638")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xB796BC", Offset = "0xB796BC", VA = "0xB796BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB72C", Offset = "0x8EB72C")]
		private void <Start>b__26_0(Toggle t)
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xB7970C", Offset = "0xB7970C", VA = "0xB7970C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB73C", Offset = "0x8EB73C")]
		private void <Start>b__26_1(Toggle t)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xB7975C", Offset = "0xB7975C", VA = "0xB7975C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB74C", Offset = "0x8EB74C")]
		private void <Start>b__26_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000331")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC6D8", Offset = "0x8CC6D8")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200066C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD5D4", Offset = "0x8CD5D4")]
		private sealed class <>c
		{
			[Token(Token = "0x40023C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40023C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x600273B")]
			[Address(RVA = "0xD01AB4", Offset = "0xD01AB4", VA = "0xD01AB4")]
			public <>c()
			{
			}

			[Token(Token = "0x600273C")]
			[Address(RVA = "0xD01ABC", Offset = "0xD01ABC", VA = "0xD01ABC")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40015AF")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40015B0")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40015B1")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40015B2")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40015B3")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40015B4")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40015B5")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40015B6")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40015B7")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40015B8")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40015B9")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xD00B88", Offset = "0xD00B88", VA = "0xD00B88")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xD00BE0", Offset = "0xD00BE0", VA = "0xD00BE0")]
		private void Start()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xD01088", Offset = "0xD01088", VA = "0xD01088")]
		private void Update()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xD011A8", Offset = "0xD011A8", VA = "0xD011A8")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xD01588", Offset = "0xD01588", VA = "0xD01588")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xD01720", Offset = "0xD01720", VA = "0xD01720")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xD018D0", Offset = "0xD018D0", VA = "0xD018D0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xD01244", Offset = "0xD01244", VA = "0xD01244")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xD012E4", Offset = "0xD012E4", VA = "0xD012E4")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xD00E4C", Offset = "0xD00E4C", VA = "0xD00E4C")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xD01A38", Offset = "0xD01A38", VA = "0xD01A38")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public enum HandPoseId
	{
		[Token(Token = "0x40015CC")]
		Default,
		[Token(Token = "0x40015CD")]
		Generic,
		[Token(Token = "0x40015CE")]
		PingPongBall,
		[Token(Token = "0x40015CF")]
		Controller
	}
	[Token(Token = "0x2000333")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000194")]
		public bool AllowPointing
		{
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0xD01A28", Offset = "0xD01A28", VA = "0xD01A28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000195")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60016C2")]
			[Address(RVA = "0xD01A30", Offset = "0xD01A30", VA = "0xD01A30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000196")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0xD01A20", Offset = "0xD01A20", VA = "0xD01A20")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xD01AF8", Offset = "0xD01AF8", VA = "0xD01AF8")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xD01B00", Offset = "0xD01B00", VA = "0xD01B00")]
		private void Update()
		{
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xD01DCC", Offset = "0xD01DCC", VA = "0xD01DCC")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xD01E3C", Offset = "0xD01E3C", VA = "0xD01E3C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xD01E8C", Offset = "0xD01E8C", VA = "0xD01E8C")]
		public TouchController()
		{
		}
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x2000335")]
	public class PvrControllerKey
	{
		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool PressedDown;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool PressedUp;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool LongPressed;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Click;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool Touch;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool TouchDown;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool TouchUp;

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0x15351C8", Offset = "0x15351C8", VA = "0x15351C8")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class ControllerHand
	{
		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PvrControllerKey App;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PvrControllerKey Touch;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrControllerKey Home;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PvrControllerKey X;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PvrControllerKey Y;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PvrControllerKey A;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PvrControllerKey B;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PvrControllerKey Left;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PvrControllerKey Right;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PvrControllerKey Thumbrest;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector2 TouchPadPosition;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int TriggerNum;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int GripValue;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Quaternion Rotation;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 Position;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Battery;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ControllerState ConnectState;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool isShowBoundary;

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0x1534FE0", Offset = "0x1534FE0", VA = "0x1534FE0")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public enum ControllerState
	{
		[Token(Token = "0x40015F6")]
		Error = -1,
		[Token(Token = "0x40015F7")]
		DisConnected,
		[Token(Token = "0x40015F8")]
		Connected
	}
	[Token(Token = "0x2000338")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x40015FA")]
		APP = 1,
		[Token(Token = "0x40015FB")]
		TOUCHPAD,
		[Token(Token = "0x40015FC")]
		HOME,
		[Token(Token = "0x40015FD")]
		VOLUMEUP,
		[Token(Token = "0x40015FE")]
		VOLUMEDOWN,
		[Token(Token = "0x40015FF")]
		TRIGGER,
		[Token(Token = "0x4001600")]
		A,
		[Token(Token = "0x4001601")]
		B,
		[Token(Token = "0x4001602")]
		X,
		[Token(Token = "0x4001603")]
		Y,
		[Token(Token = "0x4001604")]
		Left,
		[Token(Token = "0x4001605")]
		Right,
		[Token(Token = "0x4001606")]
		Thumbrest
	}
	[Token(Token = "0x2000339")]
	public enum SwipeDirection
	{
		[Token(Token = "0x4001608")]
		No,
		[Token(Token = "0x4001609")]
		SwipeUp,
		[Token(Token = "0x400160A")]
		SwipeDown,
		[Token(Token = "0x400160B")]
		SwipeLeft,
		[Token(Token = "0x400160C")]
		SwipeRight
	}
	[Token(Token = "0x200033A")]
	public enum TouchPadClick
	{
		[Token(Token = "0x400160E")]
		No,
		[Token(Token = "0x400160F")]
		ClickUp,
		[Token(Token = "0x4001610")]
		ClickDown,
		[Token(Token = "0x4001611")]
		ClickLeft,
		[Token(Token = "0x4001612")]
		ClickRight
	}
	[Token(Token = "0x200033B")]
	public struct Controller
	{
		[Token(Token = "0x4001613")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x152FDB0", Offset = "0x152FDB0", VA = "0x152FDB0")]
		public static Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x152FEC0", Offset = "0x152FEC0", VA = "0x152FEC0")]
		public static float UPvr_GetAxis1D(int hand, Pvr_KeyCode key)
		{
			return default(float);
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0x1530070", Offset = "0x1530070", VA = "0x1530070")]
		public static Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0x153032C", Offset = "0x153032C", VA = "0x153032C")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0x1530440", Offset = "0x1530440", VA = "0x1530440")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x153056C", Offset = "0x153056C", VA = "0x153056C")]
		public static Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x1530694", Offset = "0x1530694", VA = "0x1530694")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x1530774", Offset = "0x1530774", VA = "0x1530774")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x1530854", Offset = "0x1530854", VA = "0x1530854")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x1530934", Offset = "0x1530934", VA = "0x1530934")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x1530A14", Offset = "0x1530A14", VA = "0x1530A14")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x1531054", Offset = "0x1531054", VA = "0x1531054")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x1531694", Offset = "0x1531694", VA = "0x1531694")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x1531CD4", Offset = "0x1531CD4", VA = "0x1531CD4")]
		public static bool UPvr_GetTouch(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x15320A4", Offset = "0x15320A4", VA = "0x15320A4")]
		public static bool UPvr_GetTouchDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x1532474", Offset = "0x1532474", VA = "0x1532474")]
		public static bool UPvr_GetTouchUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0x1532844", Offset = "0x1532844", VA = "0x1532844")]
		public static bool UPvr_GetKeyClick(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0x1532E84", Offset = "0x1532E84", VA = "0x1532E84")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0x15334C4", Offset = "0x15334C4", VA = "0x15334C4")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x15336CC", Offset = "0x15336CC", VA = "0x15336CC")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x15337AC", Offset = "0x15337AC", VA = "0x15337AC")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x1533824", Offset = "0x1533824", VA = "0x1533824")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x1533910", Offset = "0x1533910", VA = "0x1533910")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x153398C", Offset = "0x153398C", VA = "0x153398C")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0x1533A04", Offset = "0x1533A04", VA = "0x1533A04")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0x1533A7C", Offset = "0x1533A7C", VA = "0x1533A7C")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0x1533B00", Offset = "0x1533B00", VA = "0x1533B00")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x1533B84", Offset = "0x1533B84", VA = "0x1533B84")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x1533C28", Offset = "0x1533C28", VA = "0x1533C28")]
		public static int UPvr_GetControllerBindingState(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x1533CAC", Offset = "0x1533CAC", VA = "0x1533CAC")]
		public static Vector3 UPvr_GetVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x1533D30", Offset = "0x1533D30", VA = "0x1533D30")]
		public static Vector3 UPvr_GetAngularVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x1533DB4", Offset = "0x1533DB4", VA = "0x1533DB4")]
		public static Vector3 UPvr_GetAcceleration(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x1533E38", Offset = "0x1533E38", VA = "0x1533E38")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x1533EB4", Offset = "0x1533EB4", VA = "0x1533EB4")]
		public static void UPvr_StopScanController()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x1533F30", Offset = "0x1533F30", VA = "0x1533F30")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x1534008", Offset = "0x1534008", VA = "0x1534008")]
		public static void UPvr_DisConnectController()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x1534084", Offset = "0x1534084", VA = "0x1534084")]
		public static void UPvr_ResetController(int hand)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x1534108", Offset = "0x1534108", VA = "0x1534108")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x1534184", Offset = "0x1534184", VA = "0x1534184")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x1534208", Offset = "0x1534208", VA = "0x1534208")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x153428C", Offset = "0x153428C", VA = "0x153428C")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x1534310", Offset = "0x1534310", VA = "0x1534310")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x153438C", Offset = "0x153438C", VA = "0x153438C")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0x1534408", Offset = "0x1534408", VA = "0x1534408")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0x153449C", Offset = "0x153449C", VA = "0x153449C")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0x1534520", Offset = "0x1534520", VA = "0x1534520")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x15345A4", Offset = "0x15345A4", VA = "0x15345A4")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x1534620", Offset = "0x1534620", VA = "0x1534620")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0x153469C", Offset = "0x153469C", VA = "0x153469C")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0x1534718", Offset = "0x1534718", VA = "0x1534718")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x153479C", Offset = "0x153479C", VA = "0x153479C")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x9B0AAC", Offset = "0x9B0AAC", VA = "0x9B0AAC")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x9B0AB0", Offset = "0x9B0AB0", VA = "0x9B0AB0")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x9B0AB4", Offset = "0x9B0AB4", VA = "0x9B0AB4")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x153499C", Offset = "0x153499C", VA = "0x153499C")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x1534A78", Offset = "0x1534A78", VA = "0x1534A78")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x1534B4C", Offset = "0x1534B4C", VA = "0x1534B4C")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x1534C10", Offset = "0x1534C10", VA = "0x1534C10")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x1534CD0", Offset = "0x1534CD0", VA = "0x1534CD0")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x1534D90", Offset = "0x1534D90", VA = "0x1534D90")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x1534E54", Offset = "0x1534E54", VA = "0x1534E54")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x1534ED8", Offset = "0x1534ED8", VA = "0x1534ED8")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x1534F5C", Offset = "0x1534F5C", VA = "0x1534F5C")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600170A")]
		[Address(RVA = "0x1534A7C", Offset = "0x1534A7C", VA = "0x1534A7C")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x600170B")]
		[Address(RVA = "0x1534B50", Offset = "0x1534B50", VA = "0x1534B50")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x600170C")]
		[Address(RVA = "0x1534C14", Offset = "0x1534C14", VA = "0x1534C14")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x600170D")]
		[Address(RVA = "0x1534CD4", Offset = "0x1534CD4", VA = "0x1534CD4")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x600170E")]
		[Address(RVA = "0x1534D94", Offset = "0x1534D94", VA = "0x1534D94")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x600170F")]
		[Address(RVA = "0x15349A0", Offset = "0x15349A0", VA = "0x15349A0")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
	[Token(Token = "0x200033C")]
	public enum ControllerVariety
	{
		[Token(Token = "0x4001615")]
		Controller0,
		[Token(Token = "0x4001616")]
		Controller1
	}
	[Token(Token = "0x200033D")]
	public enum ControllerDevice
	{
		[Token(Token = "0x4001618")]
		Goblin,
		[Token(Token = "0x4001619")]
		Neo,
		[Token(Token = "0x400161A")]
		G2,
		[Token(Token = "0x400161B")]
		Neo2,
		[Token(Token = "0x400161C")]
		Neo3,
		[Token(Token = "0x400161D")]
		NewController
	}
	[Token(Token = "0x200033E")]
	public enum PBS_SystemInfoEnum
	{
		[Token(Token = "0x400161F")]
		ELECTRIC_QUANTITY,
		[Token(Token = "0x4001620")]
		PUI_VERSION,
		[Token(Token = "0x4001621")]
		EQUIPMENT_MODEL,
		[Token(Token = "0x4001622")]
		EQUIPMENT_SN,
		[Token(Token = "0x4001623")]
		CUSTOMER_SN,
		[Token(Token = "0x4001624")]
		INTERNAL_STORAGE_SPACE_OF_THE_DEVICE,
		[Token(Token = "0x4001625")]
		DEVICE_BLUETOOTH_STATUS,
		[Token(Token = "0x4001626")]
		BLUETOOTH_NAME_CONNECTED,
		[Token(Token = "0x4001627")]
		BLUETOOTH_MAC_ADDRESS,
		[Token(Token = "0x4001628")]
		DEVICE_WIFI_STATUS,
		[Token(Token = "0x4001629")]
		WIFI_NAME_CONNECTED,
		[Token(Token = "0x400162A")]
		WLAN_MAC_ADDRESS,
		[Token(Token = "0x400162B")]
		DEVICE_IP
	}
	[Token(Token = "0x200033F")]
	public enum PBS_DeviceControlEnum
	{
		[Token(Token = "0x400162D")]
		DEVICE_CONTROL_REBOOT,
		[Token(Token = "0x400162E")]
		DEVICE_CONTROL_SHUTDOWN
	}
	[Token(Token = "0x2000340")]
	public enum PBS_PackageControlEnum
	{
		[Token(Token = "0x4001630")]
		PACKAGE_SILENCE_INSTALL,
		[Token(Token = "0x4001631")]
		PACKAGE_SILENCE_UNINSTALL
	}
	[Token(Token = "0x2000341")]
	public enum PBS_SwitchEnum
	{
		[Token(Token = "0x4001633")]
		S_ON,
		[Token(Token = "0x4001634")]
		S_OFF
	}
	[Token(Token = "0x2000342")]
	public enum PBS_HomeEventEnum
	{
		[Token(Token = "0x4001636")]
		SINGLE_CLICK,
		[Token(Token = "0x4001637")]
		DOUBLE_CLICK,
		[Token(Token = "0x4001638")]
		LONG_PRESS
	}
	[Token(Token = "0x2000343")]
	public enum PBS_HomeFunctionEnum
	{
		[Token(Token = "0x400163A")]
		VALUE_HOME_GO_TO_SETTING,
		[Token(Token = "0x400163B")]
		VALUE_HOME_BACK,
		[Token(Token = "0x400163C")]
		VALUE_HOME_RECENTER,
		[Token(Token = "0x400163D")]
		VALUE_HOME_OPEN_APP,
		[Token(Token = "0x400163E")]
		VALUE_HOME_DISABLE,
		[Token(Token = "0x400163F")]
		VALUE_HOME_GO_TO_HOME,
		[Token(Token = "0x4001640")]
		VALUE_HOME_SEND_BROADCAST,
		[Token(Token = "0x4001641")]
		VALUE_HOME_CLEAN_MEMORY
	}
	[Token(Token = "0x2000344")]
	public enum PBS_ScreenOffDelayTimeEnum
	{
		[Token(Token = "0x4001643")]
		THREE = 3,
		[Token(Token = "0x4001644")]
		TEN = 10,
		[Token(Token = "0x4001645")]
		THIRTY = 30,
		[Token(Token = "0x4001646")]
		SIXTY = 60,
		[Token(Token = "0x4001647")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4001648")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4001649")]
		NEVER = -1
	}
	[Token(Token = "0x2000345")]
	public enum PBS_SleepDelayTimeEnum
	{
		[Token(Token = "0x400164B")]
		FIFTEEN = 15,
		[Token(Token = "0x400164C")]
		THIRTY = 30,
		[Token(Token = "0x400164D")]
		SIXTY = 60,
		[Token(Token = "0x400164E")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x400164F")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4001650")]
		ONE_THOUSAND_AND_EIGHT_HUNDRED = 1800,
		[Token(Token = "0x4001651")]
		NEVER = -1
	}
	[Token(Token = "0x2000346")]
	public enum PBS_SystemFunctionSwitchEnum
	{
		[Token(Token = "0x4001653")]
		SFS_USB,
		[Token(Token = "0x4001654")]
		SFS_AUTOSLEEP,
		[Token(Token = "0x4001655")]
		SFS_SCREENON_CHARGING,
		[Token(Token = "0x4001656")]
		SFS_OTG_CHARGING,
		[Token(Token = "0x4001657")]
		SFS_RETURN_MENU_IN_2DMODE,
		[Token(Token = "0x4001658")]
		SFS_COMBINATION_KEY,
		[Token(Token = "0x4001659")]
		SFS_CALIBRATION_WITH_POWER_ON,
		[Token(Token = "0x400165A")]
		SFS_SYSTEM_UPDATE,
		[Token(Token = "0x400165B")]
		SFS_CAST_SERVICE,
		[Token(Token = "0x400165C")]
		SFS_EYE_PROTECTION,
		[Token(Token = "0x400165D")]
		SFS_SECURITY_ZONE_PERMANENTLY,
		[Token(Token = "0x400165E")]
		SFS_GLOBAL_CALIBRATION,
		[Token(Token = "0x400165F")]
		SFS_Auto_Calibration,
		[Token(Token = "0x4001660")]
		SFS_USB_BOOT
	}
	[Token(Token = "0x2000347")]
	public enum PBS_USBConfigModeEnum
	{
		[Token(Token = "0x4001662")]
		MTP,
		[Token(Token = "0x4001663")]
		CHARGE
	}
	[Token(Token = "0x2000348")]
	public struct ToBService
	{
		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<bool> BoolCallback;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<int> IntCallback;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<long> LongCallback;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass unityPlayer;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject currentActivity;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject tobHelper;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaClass tobHelperClass;

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x153E720", Offset = "0x153E720", VA = "0x153E720")]
		public static void UPvr_InitToBService()
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x153E864", Offset = "0x153E864", VA = "0x153E864")]
		public static void UPvr_SetUnityObjectName(string obj)
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x153E940", Offset = "0x153E940", VA = "0x153E940")]
		public static void UPvr_BindToBService()
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x153EA24", Offset = "0x153EA24", VA = "0x153EA24")]
		public static void UPvr_UnBindToBService()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x153EB08", Offset = "0x153EB08", VA = "0x153EB08")]
		private static AndroidJavaObject GetEnumType(Enum enumType)
		{
			return null;
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x153EC38", Offset = "0x153EC38", VA = "0x153EC38")]
		public static string UPvr_StateGetDeviceInfo(PBS_SystemInfoEnum type)
		{
			return null;
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x153EDC8", Offset = "0x153EDC8", VA = "0x153EDC8")]
		public static void UPvr_ControlSetDeviceAction(PBS_DeviceControlEnum deviceControl, Action<int> callback)
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0x153EEDC", Offset = "0x153EEDC", VA = "0x153EEDC")]
		public static void UPvr_ControlAPPManger(PBS_PackageControlEnum packageControl, string path, Action<int> callback)
		{
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0x153F0A8", Offset = "0x153F0A8", VA = "0x153F0A8")]
		public static void UPvr_ControlSetAutoConnectWIFI(string ssid, string pwd, Action<bool> callback)
		{
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0x153F25C", Offset = "0x153F25C", VA = "0x153F25C")]
		public static void UPvr_ControlClearAutoConnectWIFI(Action<bool> callback)
		{
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0x153F2D8", Offset = "0x153F2D8", VA = "0x153F2D8")]
		public static void UPvr_PropertySetHomeKey(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, Action<bool> callback)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0x153F46C", Offset = "0x153F46C", VA = "0x153F46C")]
		public static void UPvr_PropertySetHomeKeyAll(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, int timesetup, string pkg, string className, Action<bool> callback)
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x153F710", Offset = "0x153F710", VA = "0x153F710")]
		public static void UPvr_PropertyDisablePowerKey(bool isSingleTap, bool enable, Action<int> callback)
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x153F884", Offset = "0x153F884", VA = "0x153F884")]
		public static void UPvr_PropertySetScreenOffDelay(PBS_ScreenOffDelayTimeEnum timeEnum, Action<int> callback)
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x153F998", Offset = "0x153F998", VA = "0x153F998")]
		public static void UPvr_PropertySetSleepDelay(PBS_SleepDelayTimeEnum timeEnum)
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x153FA9C", Offset = "0x153FA9C", VA = "0x153FA9C")]
		public static void UPvr_SwitchSystemFunction(PBS_SystemFunctionSwitchEnum systemFunction, PBS_SwitchEnum switchEnum)
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x153FC78", Offset = "0x153FC78", VA = "0x153FC78")]
		public static void UPvr_SwitchSetUsbConfigurationOption(PBS_USBConfigModeEnum uSBConfigModeEnum)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x153FDE0", Offset = "0x153FDE0", VA = "0x153FDE0")]
		public static void UPvr_ScreenOn()
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x153FE54", Offset = "0x153FE54", VA = "0x153FE54")]
		public static void UPvr_ScreenOff()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x153FEC8", Offset = "0x153FEC8", VA = "0x153FEC8")]
		public static void UPvr_AcquireWakeLock()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x153FF3C", Offset = "0x153FF3C", VA = "0x153FF3C")]
		public static void UPvr_ReleaseWakeLock()
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x153FFB0", Offset = "0x153FFB0", VA = "0x153FFB0")]
		public static void UPvr_EnableEnterKey()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x1540024", Offset = "0x1540024", VA = "0x1540024")]
		public static void UPvr_DisableEnterKey()
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x1540098", Offset = "0x1540098", VA = "0x1540098")]
		public static void UPvr_EnableVolumeKey()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x154010C", Offset = "0x154010C", VA = "0x154010C")]
		public static void UPvr_DisableVolumeKey()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x1540180", Offset = "0x1540180", VA = "0x1540180")]
		public static void UPvr_EnableBackKey()
		{
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x15401F4", Offset = "0x15401F4", VA = "0x15401F4")]
		public static void UPvr_DisableBackKey()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x1540268", Offset = "0x1540268", VA = "0x1540268")]
		public static void UPvr_WriteConfigFileToDataLocal(string path, string content, Action<bool> callback)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x15403AC", Offset = "0x15403AC", VA = "0x15403AC")]
		public static void UPvr_ResetAllKeyToDefault(Action<bool> callback)
		{
		}
	}
	[Token(Token = "0x2000349")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x400166C")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x400166D")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x400166E")]
		SEENSOR_COUNT,
		[Token(Token = "0x400166F")]
		ABILITY6DOF,
		[Token(Token = "0x4001670")]
		PLATFORM_TYPE,
		[Token(Token = "0x4001671")]
		TRACKING_MODE,
		[Token(Token = "0x4001672")]
		LOG_LEVEL,
		[Token(Token = "0x4001673")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x4001674")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x4001675")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x4001676")]
		iShowFPS,
		[Token(Token = "0x4001677")]
		SensorMode,
		[Token(Token = "0x4001678")]
		LOGICFLOW,
		[Token(Token = "0x4001679")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x400167A")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x400167B")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x400167C")]
		iPhoneHMDModeEnabled,
		[Token(Token = "0x400167D")]
		isEnableBoundary,
		[Token(Token = "0x400167E")]
		Enable_Activity_Rotation,
		[Token(Token = "0x400167F")]
		GetDisplay_Orientation,
		[Token(Token = "0x4001680")]
		GetWaitFrameNum,
		[Token(Token = "0x4001681")]
		GetResetFrameNum,
		[Token(Token = "0x4001682")]
		EnableFFRBYSYS,
		[Token(Token = "0x4001683")]
		RotControllerMode
	}
	[Token(Token = "0x200034A")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x4001685")]
		IPD,
		[Token(Token = "0x4001686")]
		VFOV,
		[Token(Token = "0x4001687")]
		HFOV,
		[Token(Token = "0x4001688")]
		NECK_MODEL_X,
		[Token(Token = "0x4001689")]
		NECK_MODEL_Y,
		[Token(Token = "0x400168A")]
		NECK_MODEL_Z,
		[Token(Token = "0x400168B")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x200034B")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x400168D")]
		X_1 = 1,
		[Token(Token = "0x400168E")]
		X_2 = 2,
		[Token(Token = "0x400168F")]
		X_4 = 4,
		[Token(Token = "0x4001690")]
		X_8 = 8
	}
	[Token(Token = "0x200034C")]
	public enum PlatForm
	{
		[Token(Token = "0x4001692")]
		Android = 1,
		[Token(Token = "0x4001693")]
		IOS,
		[Token(Token = "0x4001694")]
		Win,
		[Token(Token = "0x4001695")]
		Notsupport
	}
	[Token(Token = "0x200034D")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x4001697")]
		BD_0 = 0,
		[Token(Token = "0x4001698")]
		BD_16 = 16,
		[Token(Token = "0x4001699")]
		BD_24 = 24
	}
	[Token(Token = "0x200034E")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x400169B")]
		Normal,
		[Token(Token = "0x400169C")]
		High
	}
	[Token(Token = "0x200034F")]
	public enum Sensorindex
	{
		[Token(Token = "0x400169E")]
		Default,
		[Token(Token = "0x400169F")]
		FirstSensor,
		[Token(Token = "0x40016A0")]
		SecondSensor
	}
	[Token(Token = "0x2000350")]
	public enum Eye
	{
		[Token(Token = "0x40016A2")]
		LeftEye,
		[Token(Token = "0x40016A3")]
		RightEye,
		[Token(Token = "0x40016A4")]
		BothEye
	}
	[Token(Token = "0x2000351")]
	public enum ResUtilsType
	{
		[Token(Token = "0x40016A6")]
		TYPE_TEXTSIZE,
		[Token(Token = "0x40016A7")]
		TYPE_COLOR,
		[Token(Token = "0x40016A8")]
		TYPE_TEXT,
		[Token(Token = "0x40016A9")]
		TYPE_FONT,
		[Token(Token = "0x40016AA")]
		TYPE_VALUE,
		[Token(Token = "0x40016AB")]
		TYPE_DRAWABLE,
		[Token(Token = "0x40016AC")]
		TYPE_OBJECT,
		[Token(Token = "0x40016AD")]
		TYPR_OBJECTARRAY
	}
	[Token(Token = "0x2000352")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x40016AF")]
		EyeLevel,
		[Token(Token = "0x40016B0")]
		FloorLevel,
		[Token(Token = "0x40016B1")]
		StageLevel
	}
	[Token(Token = "0x2000353")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x40016B3")]
		Low,
		[Token(Token = "0x40016B4")]
		Med,
		[Token(Token = "0x40016B5")]
		High,
		[Token(Token = "0x40016B6")]
		Top_High
	}
	[Token(Token = "0x2000354")]
	public enum StereoRenderingPathPico
	{
		[Token(Token = "0x40016B8")]
		MultiPass,
		[Token(Token = "0x40016B9")]
		SinglePass
	}
	[Token(Token = "0x2000355")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x40016BB")]
		kGazePointValid = 1,
		[Token(Token = "0x40016BC")]
		kGazeVectorValid = 2,
		[Token(Token = "0x40016BD")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x40016BE")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x40016BF")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x2000356")]
	public enum TrackingMode
	{
		[Token(Token = "0x40016C1")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x40016C2")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x40016C3")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x2000357")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 leftEyeGazePoint;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rightEyeGazePoint;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 combinedEyeGazePoint;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 leftEyeGazeVector;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rightEyeGazeVector;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 combinedEyeGazeVector;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 leftEyePositionGuide;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 rightEyePositionGuide;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 foveatedGazeDirection;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int foveatedGazeTrackingState;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public byte[] reserved;
	}
	[Token(Token = "0x2000358")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Direction;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsValid;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Origin;
	}
	[Token(Token = "0x2000359")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x200035A")]
	public struct ViewFrustum
	{
		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;
	}
	[Token(Token = "0x200035B")]
	public struct EyeSetting
	{
		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform eyelocalPosition;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Rect eyeRect;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeFov;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float eyeAspect;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader eyeShader;
	}
	[Token(Token = "0x200035C")]
	public struct Sensor
	{
		[Token(Token = "0x40016E7")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x600172D")]
		[Address(RVA = "0x1538104", Offset = "0x1538104", VA = "0x1538104")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x600172E")]
		[Address(RVA = "0x15381A4", Offset = "0x15381A4", VA = "0x15381A4")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x600172F")]
		[Address(RVA = "0x1538258", Offset = "0x1538258", VA = "0x1538258")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x6001730")]
		[Address(RVA = "0x15382F8", Offset = "0x15382F8", VA = "0x15382F8")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001731")]
		[Address(RVA = "0x1538398", Offset = "0x1538398", VA = "0x1538398")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001732")]
		[Address(RVA = "0x1538438", Offset = "0x1538438", VA = "0x1538438")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6001733")]
		[Address(RVA = "0x15384D8", Offset = "0x15384D8", VA = "0x15384D8")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x6001734")]
		[Address(RVA = "0x1538578", Offset = "0x1538578", VA = "0x1538578")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x6001735")]
		[Address(RVA = "0x1538670", Offset = "0x1538670", VA = "0x1538670")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x6001736")]
		[Address(RVA = "0x1538770", Offset = "0x1538770", VA = "0x1538770")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x6001737")]
		[Address(RVA = "0x1538800", Offset = "0x1538800", VA = "0x1538800")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x6001738")]
		[Address(RVA = "0x1538890", Offset = "0x1538890", VA = "0x1538890")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x6001739")]
		[Address(RVA = "0x1538958", Offset = "0x1538958", VA = "0x1538958")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x600173A")]
		[Address(RVA = "0x1538A20", Offset = "0x1538A20", VA = "0x1538A20")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x600173B")]
		[Address(RVA = "0x1538AB0", Offset = "0x1538AB0", VA = "0x1538AB0")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x600173C")]
		[Address(RVA = "0x1538B48", Offset = "0x1538B48", VA = "0x1538B48")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key);

		[PreserveSig]
		[Token(Token = "0x600173D")]
		[Address(RVA = "0x1538C58", Offset = "0x1538C58", VA = "0x1538C58")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[Token(Token = "0x600173E")]
		[Address(RVA = "0x1538D00", Offset = "0x1538D00", VA = "0x1538D00")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x1538D04", Offset = "0x1538D04", VA = "0x1538D04")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x1538D08", Offset = "0x1538D08", VA = "0x1538D08")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x1538F0C", Offset = "0x1538F0C", VA = "0x1538F0C")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x15390F8", Offset = "0x15390F8", VA = "0x15390F8")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x15390FC", Offset = "0x15390FC", VA = "0x15390FC")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x1539278", Offset = "0x1539278", VA = "0x1539278")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x153927C", Offset = "0x153927C", VA = "0x153927C")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x1539280", Offset = "0x1539280", VA = "0x1539280")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x1539300", Offset = "0x1539300", VA = "0x1539300")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x1539304", Offset = "0x1539304", VA = "0x1539304")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x1539308", Offset = "0x1539308", VA = "0x1539308")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x1539314", Offset = "0x1539314", VA = "0x1539314")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x1539318", Offset = "0x1539318", VA = "0x1539318")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x153931C", Offset = "0x153931C", VA = "0x153931C")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x1539320", Offset = "0x1539320", VA = "0x1539320")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x1538D0C", Offset = "0x1538D0C", VA = "0x1538D0C")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x15395A4", Offset = "0x15395A4", VA = "0x15395A4")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x1538F60", Offset = "0x1538F60", VA = "0x1538F60")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x1539100", Offset = "0x1539100", VA = "0x1539100")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x15397E0", Offset = "0x15397E0", VA = "0x15397E0")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x15397E4", Offset = "0x15397E4", VA = "0x15397E4")]
		public static void UPvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key)
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x1539D38", Offset = "0x1539D38", VA = "0x1539D38")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200035D")]
	public struct Render
	{
		[Token(Token = "0x40016E8")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6001755")]
		[Address(RVA = "0x1536238", Offset = "0x1536238", VA = "0x1536238")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x6001756")]
		[Address(RVA = "0x1536328", Offset = "0x1536328", VA = "0x1536328")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x6001757")]
		[Address(RVA = "0x15363D0", Offset = "0x15363D0", VA = "0x15363D0")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001758")]
		[Address(RVA = "0x1536470", Offset = "0x1536470", VA = "0x1536470")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x6001759")]
		[Address(RVA = "0x1536500", Offset = "0x1536500", VA = "0x1536500")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x600175A")]
		[Address(RVA = "0x15365B0", Offset = "0x15365B0", VA = "0x15365B0")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x600175B")]
		[Address(RVA = "0x153665C", Offset = "0x153665C", VA = "0x153665C")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x600175C")]
		[Address(RVA = "0x1536708", Offset = "0x1536708", VA = "0x1536708")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x600175D")]
		[Address(RVA = "0x15367F0", Offset = "0x15367F0", VA = "0x15367F0")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x600175E")]
		[Address(RVA = "0x15368F0", Offset = "0x15368F0", VA = "0x15368F0")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, float[] mvMatrix, float[] modelS, float[] modelR, float[] modelT, float[] cameraR, float[] cameraT, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x600175F")]
		[Address(RVA = "0x1536A50", Offset = "0x1536A50", VA = "0x1536A50")]
		private static extern bool Pvr_EnableFoveation(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001760")]
		[Address(RVA = "0x1536AF8", Offset = "0x1536AF8", VA = "0x1536AF8")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6001761")]
		[Address(RVA = "0x1536BF0", Offset = "0x1536BF0", VA = "0x1536BF0")]
		private static extern void Pvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY);

		[PreserveSig]
		[Token(Token = "0x6001762")]
		[Address(RVA = "0x1536CB8", Offset = "0x1536CB8", VA = "0x1536CB8")]
		private static extern void Pvr_SetFoveationParameters2(float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x6001763")]
		[Address(RVA = "0x1536D7C", Offset = "0x1536D7C", VA = "0x1536D7C")]
		private static extern void Pvr_SetFoveationLevel(EFoveationLevel level);

		[PreserveSig]
		[Token(Token = "0x6001764")]
		[Address(RVA = "0x1536E1C", Offset = "0x1536E1C", VA = "0x1536E1C")]
		private static extern EFoveationLevel Pvr_GetFoveationLevel();

		[PreserveSig]
		[Token(Token = "0x6001765")]
		[Address(RVA = "0x1536EAC", Offset = "0x1536EAC", VA = "0x1536EAC")]
		private static extern bool Pvr_GetIntSysProc(string property, ref int res);

		[PreserveSig]
		[Token(Token = "0x6001766")]
		[Address(RVA = "0x1536F78", Offset = "0x1536F78", VA = "0x1536F78")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6001767")]
		[Address(RVA = "0x1537018", Offset = "0x1537018", VA = "0x1537018")]
		private static extern void Pvr_SetCastingColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x6001768")]
		[Address(RVA = "0x15370B8", Offset = "0x15370B8", VA = "0x15370B8")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x6001769")]
		[Address(RVA = "0x1537168", Offset = "0x1537168", VA = "0x1537168")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x600176A")]
		[Address(RVA = "0x1537218", Offset = "0x1537218", VA = "0x1537218")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[PreserveSig]
		[Token(Token = "0x600176B")]
		[Address(RVA = "0x15372B8", Offset = "0x15372B8", VA = "0x15372B8")]
		private static extern void Pvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexData, ref IntPtr indexData);

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x1537388", Offset = "0x1537388", VA = "0x1537388")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x153738C", Offset = "0x153738C", VA = "0x153738C")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x1537390", Offset = "0x1537390", VA = "0x1537390")]
		public static void UPvr_EnableFoveation(bool enable)
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x1537458", Offset = "0x1537458", VA = "0x1537458")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8EB75C", Offset = "0x8EB75C")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x153745C", Offset = "0x153745C", VA = "0x153745C")]
		public static void UPvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY)
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x1537460", Offset = "0x1537460", VA = "0x1537460")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x1537584", Offset = "0x1537584", VA = "0x1537584")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x1537588", Offset = "0x1537588", VA = "0x1537588")]
		public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x15376DC", Offset = "0x15376DC", VA = "0x15376DC")]
		public static bool UPvr_GetIntSysProc(string property, ref int res)
		{
			return default(bool);
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x15376E0", Offset = "0x15376E0", VA = "0x15376E0")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x15376E4", Offset = "0x15376E4", VA = "0x15376E4")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x15376E8", Offset = "0x15376E8", VA = "0x15376E8")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x1537774", Offset = "0x1537774", VA = "0x1537774")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x1537778", Offset = "0x1537778", VA = "0x1537778")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x153794C", Offset = "0x153794C", VA = "0x153794C")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x1537950", Offset = "0x1537950", VA = "0x1537950")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, Matrix4x4 mvMatrix, Vector3 modelS, Quaternion modelR, Vector3 modelT, Quaternion cameraR, Vector3 cameraT, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x15380EC", Offset = "0x15380EC", VA = "0x15380EC")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x15380F0", Offset = "0x15380F0", VA = "0x15380F0")]
		public static void UPvr_SetCastingColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x15380F4", Offset = "0x15380F4", VA = "0x15380F4")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x15380F8", Offset = "0x15380F8", VA = "0x15380F8")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x15380FC", Offset = "0x15380FC", VA = "0x15380FC")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x1527890", Offset = "0x1527890", VA = "0x1527890")]
		public static void UPvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexDataPtr, ref IntPtr indexDataPtr)
		{
		}
	}
	[Token(Token = "0x200035E")]
	public struct System
	{
		[Token(Token = "0x40016E9")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x40016EA")]
		public const string UnitySDKVersion = "2.8.9.12";

		[PreserveSig]
		[Token(Token = "0x6001782")]
		[Address(RVA = "0x1539D3C", Offset = "0x1539D3C", VA = "0x1539D3C")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x6001783")]
		[Address(RVA = "0x1539DEC", Offset = "0x1539DEC", VA = "0x1539DEC")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x6001784")]
		[Address(RVA = "0x1539E7C", Offset = "0x1539E7C", VA = "0x1539E7C")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x6001785")]
		[Address(RVA = "0x1539F0C", Offset = "0x1539F0C", VA = "0x1539F0C")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x6001786")]
		[Address(RVA = "0x1539F9C", Offset = "0x1539F9C", VA = "0x1539F9C")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x6001787")]
		[Address(RVA = "0x153A02C", Offset = "0x153A02C", VA = "0x153A02C")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x6001788")]
		[Address(RVA = "0x153A0BC", Offset = "0x153A0BC", VA = "0x153A0BC")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x6001789")]
		[Address(RVA = "0x153A14C", Offset = "0x153A14C", VA = "0x153A14C")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x600178A")]
		[Address(RVA = "0x153A1EC", Offset = "0x153A1EC", VA = "0x153A1EC")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ, ref float foveatedGazeDirectionX, ref float foveatedGazeDirectionY, ref float foveatedGazeDirectionZ, ref int foveatedGazeTrackingState);

		[PreserveSig]
		[Token(Token = "0x600178B")]
		[Address(RVA = "0x153A344", Offset = "0x153A344", VA = "0x153A344")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x600178C")]
		[Address(RVA = "0x153A3EC", Offset = "0x153A3EC", VA = "0x153A3EC")]
		public static extern int Pvr_GetTrackingMode();

		[PreserveSig]
		[Token(Token = "0x600178D")]
		[Address(RVA = "0x153A47C", Offset = "0x153A47C", VA = "0x153A47C")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x600178E")]
		[Address(RVA = "0x153A50C", Offset = "0x153A50C", VA = "0x153A50C")]
		public static extern void UnityEventData(long data);

		[PreserveSig]
		[Token(Token = "0x600178F")]
		[Address(RVA = "0x153A5AC", Offset = "0x153A5AC", VA = "0x153A5AC")]
		public static extern bool Pvr_EnableSinglePass(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001790")]
		[Address(RVA = "0x153A654", Offset = "0x153A654", VA = "0x153A654")]
		public static extern void Pvr_SetAntiAliasing(int antiAliasing);

		[PreserveSig]
		[Token(Token = "0x6001791")]
		[Address(RVA = "0x153A6F4", Offset = "0x153A6F4", VA = "0x153A6F4")]
		public static extern void Pvr_SinglePassBeforeForwardOpaque();

		[PreserveSig]
		[Token(Token = "0x6001792")]
		[Address(RVA = "0x153A784", Offset = "0x153A784", VA = "0x153A784")]
		public static extern void Pvr_SetCurrentRenderTexture(uint textureId);

		[PreserveSig]
		[Token(Token = "0x6001793")]
		[Address(RVA = "0x153A824", Offset = "0x153A824", VA = "0x153A824")]
		public static extern bool Pvr_SetSinglePassDepthBufferWidthHeight(int width, int height);

		[PreserveSig]
		[Token(Token = "0x6001794")]
		[Address(RVA = "0x153A8DC", Offset = "0x153A8DC", VA = "0x153A8DC")]
		public static extern int PVR_setPerformanceLevels(int cpuLevel, int gpuLevel);

		[PreserveSig]
		[Token(Token = "0x6001795")]
		[Address(RVA = "0x153A98C", Offset = "0x153A98C", VA = "0x153A98C")]
		public static extern bool Pvr_SetIPD(float distance);

		[PreserveSig]
		[Token(Token = "0x6001796")]
		[Address(RVA = "0x153AA38", Offset = "0x153AA38", VA = "0x153AA38")]
		public static extern float Pvr_GetIPD();

		[PreserveSig]
		[Token(Token = "0x6001797")]
		[Address(RVA = "0x153AAC8", Offset = "0x153AAC8", VA = "0x153AAC8")]
		public static extern bool Pvr_SetTrackingIPDEnabled(bool enable);

		[PreserveSig]
		[Token(Token = "0x6001798")]
		[Address(RVA = "0x153AB70", Offset = "0x153AB70", VA = "0x153AB70")]
		public static extern bool Pvr_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x6001799")]
		[Address(RVA = "0x153AC08", Offset = "0x153AC08", VA = "0x153AC08")]
		public static extern bool Pvr_GetEyeTrackingAutoIPD(ref float autoIPD);

		[PreserveSig]
		[Token(Token = "0x600179A")]
		[Address(RVA = "0x15361A8", Offset = "0x15361A8", VA = "0x15361A8")]
		public static extern int PVR_GetHmdAudioStatus();

		[Token(Token = "0x600179B")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x1539328", Offset = "0x1539328", VA = "0x1539328")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x600179D")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x153ACB0", Offset = "0x153ACB0", VA = "0x153ACB0")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x153AF2C", Offset = "0x153AF2C", VA = "0x153AF2C")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x153AFC0", Offset = "0x153AFC0", VA = "0x153AFC0")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x153B008", Offset = "0x153B008", VA = "0x153B008")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x153B010", Offset = "0x153B010", VA = "0x153B010")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x153542C", Offset = "0x153542C", VA = "0x153542C")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x15357E4", Offset = "0x15357E4", VA = "0x15357E4")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x153B018", Offset = "0x153B018", VA = "0x153B018")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x153B084", Offset = "0x153B084", VA = "0x153B084")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x153B114", Offset = "0x153B114", VA = "0x153B114")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x153B1A4", Offset = "0x153B1A4", VA = "0x153B1A4")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x153B230", Offset = "0x153B230", VA = "0x153B230")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x153B4D8", Offset = "0x153B4D8", VA = "0x153B4D8")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x153B730", Offset = "0x153B730", VA = "0x153B730")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x153B7BC", Offset = "0x153B7BC", VA = "0x153B7BC")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x153B848", Offset = "0x153B848", VA = "0x153B848")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x153B8D4", Offset = "0x153B8D4", VA = "0x153B8D4")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x153B9F4", Offset = "0x153B9F4", VA = "0x153B9F4")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x153BA80", Offset = "0x153BA80", VA = "0x153BA80")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x153BBA4", Offset = "0x153BBA4", VA = "0x153BBA4")]
		public static bool UPvr_SetIPD(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x153BCFC", Offset = "0x153BCFC", VA = "0x153BCFC")]
		public static float UPvr_GetIPD()
		{
			return default(float);
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x153BDBC", Offset = "0x153BDBC", VA = "0x153BDBC")]
		public static bool UPvr_SetTrackingIPDEnabled(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x153BDC4", Offset = "0x153BDC4", VA = "0x153BDC4")]
		public static bool UPvr_GetTrackingIPDEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x153BDC8", Offset = "0x153BDC8", VA = "0x153BDC8")]
		public static bool UPvr_GetEyeTrackingAutoIPD(ref float autoipd)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x152F900", Offset = "0x152F900", VA = "0x152F900")]
		public static void UPvr_UnityEventData(long data)
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x153BDCC", Offset = "0x153BDCC", VA = "0x153BDCC")]
		public static long UPvr_GetEyeBufferData(int id)
		{
			return default(long);
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x153BE4C", Offset = "0x153BE4C", VA = "0x153BE4C")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x153BFAC", Offset = "0x153BFAC", VA = "0x153BFAC")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x153BFB0", Offset = "0x153BFB0", VA = "0x153BFB0")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x153C044", Offset = "0x153C044", VA = "0x153C044")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x153C0D8", Offset = "0x153C0D8", VA = "0x153C0D8")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x153C0DC", Offset = "0x153C0DC", VA = "0x153C0DC")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x153C0E0", Offset = "0x153C0E0", VA = "0x153C0E0")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x153C0E8", Offset = "0x153C0E8", VA = "0x153C0E8")]
		public static int UPvr_GetTrackingMode()
		{
			return default(int);
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x153C0EC", Offset = "0x153C0EC", VA = "0x153C0EC")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x153C0F0", Offset = "0x153C0F0", VA = "0x153C0F0")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x153C360", Offset = "0x153C360", VA = "0x153C360")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x153C5D4", Offset = "0x153C5D4", VA = "0x153C5D4")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x153C8F0", Offset = "0x153C8F0", VA = "0x153C8F0")]
		public static Vector3 UPvr_getEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x153CA50", Offset = "0x153CA50", VA = "0x153CA50")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x153CB68", Offset = "0x153CB68", VA = "0x153CB68")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x153CCD8", Offset = "0x153CCD8", VA = "0x153CCD8")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x153CFF8", Offset = "0x153CFF8", VA = "0x153CFF8")]
		public static bool UPvr_EnableSinglePass(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0x153D000", Offset = "0x153D000", VA = "0x153D000")]
		public static void UPvr_SetAntiAliasing(int antiAliasing)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0x153D004", Offset = "0x153D004", VA = "0x153D004")]
		public static void UPvr_SinglePassBeforeForwardOpaque()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0x153D008", Offset = "0x153D008", VA = "0x153D008")]
		public static void UPvr_SetCurrentRenderTexture(uint textureId)
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x153D00C", Offset = "0x153D00C", VA = "0x153D00C")]
		public static bool UPvr_SetSinglePassDepthBufferWidthHeight(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x153D010", Offset = "0x153D010", VA = "0x153D010")]
		public static int UPVR_setPerformanceLevels(int cpuLevel, int gpuLevel)
		{
			return default(int);
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x153D014", Offset = "0x153D014", VA = "0x153D014")]
		public static int UPvr_GetColorRes(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x153D208", Offset = "0x153D208", VA = "0x153D208")]
		public static int UPvr_GetConfigInt(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x153D3FC", Offset = "0x153D3FC", VA = "0x153D3FC")]
		public static string UPvr_GetConfigString(string name)
		{
			return null;
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x153D5F8", Offset = "0x153D5F8", VA = "0x153D5F8")]
		public static string UPvr_GetDrawableLocation(string name)
		{
			return null;
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x153D7F4", Offset = "0x153D7F4", VA = "0x153D7F4")]
		public static int UPvr_GetTextSize(string name)
		{
			return default(int);
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x153D9E8", Offset = "0x153D9E8", VA = "0x153D9E8")]
		public static string UPvr_GetLangString(string name)
		{
			return null;
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x153DBE4", Offset = "0x153DBE4", VA = "0x153DBE4")]
		public static string UPvr_GetStringValue(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x153DE58", Offset = "0x153DE58", VA = "0x153DE58")]
		public static int UPvr_GetIntValue(string id, int type)
		{
			return default(int);
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x153E0C4", Offset = "0x153E0C4", VA = "0x153E0C4")]
		public static float UPvr_GetFloatValue(string id)
		{
			return default(float);
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x153E2B8", Offset = "0x153E2B8", VA = "0x153E2B8")]
		public static string UPvr_GetObjectOrArray(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x153E52C", Offset = "0x153E52C", VA = "0x153E52C")]
		public static int UPvr_GetCharSpace(string id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200035F")]
	public struct BoundarySystem
	{
		[Token(Token = "0x200066D")]
		public enum BoundaryType
		{
			[Token(Token = "0x40023C8")]
			OuterBoundary,
			[Token(Token = "0x40023C9")]
			PlayArea
		}

		[Token(Token = "0x200066E")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x40023CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x40023CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x40023CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 ClosestPoint;

			[Token(Token = "0x40023CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x200066F")]
		public enum BoundaryTrackingNode
		{
			[Token(Token = "0x40023CF")]
			HandLeft,
			[Token(Token = "0x40023D0")]
			HandRight,
			[Token(Token = "0x40023D1")]
			Head
		}

		[Token(Token = "0x2000670")]
		public enum BoundaryTrackingState
		{
			[Token(Token = "0x40023D3")]
			PVR_NOREASON,
			[Token(Token = "0x40023D4")]
			PVRRELOCATION_IN_PROGRESS,
			[Token(Token = "0x40023D5")]
			PVRLOW_FEATURE_COUNT_ERROR,
			[Token(Token = "0x40023D6")]
			PVRLOW_LIGHT_ERROR,
			[Token(Token = "0x40023D7")]
			PVRBRIGHT_LIGHT_ERROR,
			[Token(Token = "0x40023D8")]
			PVRSTEREO_CAMERA_CALIBRATION_ERROR
		}

		[Token(Token = "0x40016EB")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x152E158", Offset = "0x152E158", VA = "0x152E158")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x152E1E8", Offset = "0x152E1E8", VA = "0x152E1E8")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x152E278", Offset = "0x152E278", VA = "0x152E278")]
		private static extern void Pvr_BoundarySetSTBackground(bool value);

		[PreserveSig]
		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x152E318", Offset = "0x152E318", VA = "0x152E318")]
		private static extern int Pvr_GetTrackingState();

		[PreserveSig]
		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x152E3A8", Offset = "0x152E3A8", VA = "0x152E3A8")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x152E440", Offset = "0x152E440", VA = "0x152E440")]
		private static extern bool Pvr_IsBoundaryEnable();

		[PreserveSig]
		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x152E4D8", Offset = "0x152E4D8", VA = "0x152E4D8")]
		private static extern bool Pvr_BoundaryGetConfigured();

		[PreserveSig]
		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x152E570", Offset = "0x152E570", VA = "0x152E570")]
		private static extern bool Pvr_BoundaryTestNode(int node, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x152E690", Offset = "0x152E690", VA = "0x152E690")]
		private static extern bool Pvr_BoundaryTestPoint(float x, float y, float z, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x60017E2")]
		[Address(RVA = "0x152E7D8", Offset = "0x152E7D8", VA = "0x152E7D8")]
		private static extern int Pvr_BoundaryGetGeometry(out IntPtr handle, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x152E884", Offset = "0x152E884", VA = "0x152E884")]
		private static extern int Pvr_BoundaryGetDimensions(ref float x, ref float y, ref float z, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x152E94C", Offset = "0x152E94C", VA = "0x152E94C")]
		private static extern bool Pvr_BoundaryGetEnabled();

		[PreserveSig]
		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x152E9E4", Offset = "0x152E9E4", VA = "0x152E9E4")]
		private static extern void Pvr_BoundarySetVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x152EA84", Offset = "0x152EA84", VA = "0x152EA84")]
		private static extern bool Pvr_BoundaryGetVisible();

		[PreserveSig]
		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x152EB1C", Offset = "0x152EB1C", VA = "0x152EB1C")]
		private static extern bool Pvr_EnableLWRP(bool enable);

		[PreserveSig]
		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x152EBC4", Offset = "0x152EBC4", VA = "0x152EBC4")]
		private static extern bool Pvr_SetViewportSize(int w, int h);

		[PreserveSig]
		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x152EC7C", Offset = "0x152EC7C", VA = "0x152EC7C")]
		private static extern void Pvr_BoundarySetSeeThroughVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x152ED1C", Offset = "0x152ED1C", VA = "0x152ED1C")]
		private static extern void PVR_SetCameraImageRect(int width, int height);

		[PreserveSig]
		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x152EDCC", Offset = "0x152EDCC", VA = "0x152EDCC")]
		private static extern void Pvr_SetGuardianSystemDisable(bool value);

		[PreserveSig]
		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x152EE6C", Offset = "0x152EE6C", VA = "0x152EE6C")]
		private static extern int Pvr_GetDialogState();

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x152EEFC", Offset = "0x152EEFC", VA = "0x152EEFC")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x152EF00", Offset = "0x152EF00", VA = "0x152EF00")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x152EF04", Offset = "0x152EF04", VA = "0x152EF04")]
		public static void UPvr_EnableSeeThroughManual(bool enable)
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x152EF0C", Offset = "0x152EF0C", VA = "0x152EF0C")]
		public static BoundaryTrackingState UPvr_GetTrackingState()
		{
			return default(BoundaryTrackingState);
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x152EF10", Offset = "0x152EF10", VA = "0x152EF10")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x152EF14", Offset = "0x152EF14", VA = "0x152EF14")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x152EF18", Offset = "0x152EF18", VA = "0x152EF18")]
		public static bool UPvr_BoundaryGetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x152EF1C", Offset = "0x152EF1C", VA = "0x152EF1C")]
		public static BoundaryTestResult UPvr_BoundaryTestNode(BoundaryTrackingNode node, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x152F060", Offset = "0x152F060", VA = "0x152F060")]
		public static BoundaryTestResult UPvr_BoundaryTestPoint(Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x152F1B0", Offset = "0x152F1B0", VA = "0x152F1B0")]
		public static Vector3[] UPvr_BoundaryGetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x152F408", Offset = "0x152F408", VA = "0x152F408")]
		public static Vector3 UPvr_BoundaryGetDimensions(BoundaryType boundaryType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0x152F464", Offset = "0x152F464", VA = "0x152F464")]
		public static bool UPvr_BoundaryGetEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0x152F468", Offset = "0x152F468", VA = "0x152F468")]
		public static void UPvr_BoundarySetVisible(bool value)
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0x152F470", Offset = "0x152F470", VA = "0x152F470")]
		public static bool UPvr_BoundaryGetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0x152F474", Offset = "0x152F474", VA = "0x152F474")]
		public static bool UPvr_EnableLWRP(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0x152F47C", Offset = "0x152F47C", VA = "0x152F47C")]
		public static bool UPvr_SetViewportSize(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0x152F480", Offset = "0x152F480", VA = "0x152F480")]
		public static void UPvr_StartCameraFrame()
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0x152F5C8", Offset = "0x152F5C8", VA = "0x152F5C8")]
		public static void UPvr_StopCameraFrame()
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0x152F710", Offset = "0x152F710", VA = "0x152F710")]
		public static void UPvr_BoundaryGetSeeThroughData(int cameraIndex, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x152F904", Offset = "0x152F904", VA = "0x152F904")]
		public static void UPvr_BoundarySetCameraImageRect(int width, int height)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x152FA40", Offset = "0x152FA40", VA = "0x152FA40")]
		public static void UPvr_BoundarySetSeeThroughVisible(bool value)
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x152FB68", Offset = "0x152FB68", VA = "0x152FB68")]
		public static void UPvr_SetGuardianSystemDisable(bool value)
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x152FC90", Offset = "0x152FC90", VA = "0x152FC90")]
		public static int UPvr_GetDialogState()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000360")]
	public struct PlatformSettings
	{
		[Token(Token = "0x6001804")]
		[Address(RVA = "0x15351F0", Offset = "0x15351F0", VA = "0x15351F0")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0x15354E0", Offset = "0x15354E0", VA = "0x15354E0")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0x1535870", Offset = "0x1535870", VA = "0x1535870")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8EB794", Offset = "0x8EB794")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0x1535B74", Offset = "0x1535B74", VA = "0x1535B74")]
		public static int UPvr_AppEntitlementCheckExtra(string appid)
		{
			return default(int);
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0x1535E8C", Offset = "0x1535E8C", VA = "0x1535E8C")]
		public static int UPvr_KeyEntitlementCheckExtra(string publicKey)
		{
			return default(int);
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x15361A4", Offset = "0x15361A4", VA = "0x15361A4")]
		public static int UPvr_GetHmdAudioStatus()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000361")]
	public enum DeviceCommand
	{
		[Token(Token = "0x40016ED")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x40016EE")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x2000362")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x40016F0")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x40016F1")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x40016F2")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x40016F3")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x40016F4")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x2000363")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x40016F5")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x600180A")]
		[Address(RVA = "0x1540428", Offset = "0x1540428", VA = "0x1540428")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x600180B")]
		[Address(RVA = "0x15404D8", Offset = "0x15404D8", VA = "0x15404D8")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x600180C")]
		[Address(RVA = "0x1540570", Offset = "0x1540570", VA = "0x1540570")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x600180D")]
		[Address(RVA = "0x1540600", Offset = "0x1540600", VA = "0x1540600")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x15406A8", Offset = "0x15406A8", VA = "0x15406A8")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0x15406AC", Offset = "0x15406AC", VA = "0x15406AC")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x15406B0", Offset = "0x15406B0", VA = "0x15406B0")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0x15406B4", Offset = "0x15406B4", VA = "0x15406B4")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0x1540960", Offset = "0x1540960", VA = "0x1540960")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0x1540B94", Offset = "0x1540B94", VA = "0x1540B94")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0x1540D24", Offset = "0x1540D24", VA = "0x1540D24")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x1540F74", Offset = "0x1540F74", VA = "0x1540F74")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x15410FC", Offset = "0x15410FC", VA = "0x15410FC")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x1541240", Offset = "0x1541240", VA = "0x1541240")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x1541454", Offset = "0x1541454", VA = "0x1541454")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x1541748", Offset = "0x1541748", VA = "0x1541748")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0x154199C", Offset = "0x154199C", VA = "0x154199C")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0x15406EC", Offset = "0x15406EC", VA = "0x15406EC")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0x1540980", Offset = "0x1540980", VA = "0x1540980")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0x1540B98", Offset = "0x1540B98", VA = "0x1540B98")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0x1540D28", Offset = "0x1540D28", VA = "0x1540D28")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0x1541BA0", Offset = "0x1541BA0", VA = "0x1541BA0")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0x1541DF4", Offset = "0x1541DF4", VA = "0x1541DF4")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0x1541FF8", Offset = "0x1541FF8", VA = "0x1541FF8")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0x1542170", Offset = "0x1542170", VA = "0x1542170")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x15422E8", Offset = "0x15422E8", VA = "0x15422E8")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x1542448", Offset = "0x1542448", VA = "0x1542448")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0x15425A8", Offset = "0x15425A8", VA = "0x15425A8")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0x154278C", Offset = "0x154278C", VA = "0x154278C")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0x1542794", Offset = "0x1542794", VA = "0x1542794")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0x1541100", Offset = "0x1541100", VA = "0x1541100")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0x1540F78", Offset = "0x1540F78", VA = "0x1540F78")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
namespace Pvr_UnitySDKAPI.Achievement
{
	[Token(Token = "0x2000364")]
	public static class Pvr_Callback
	{
		[Token(Token = "0x2000671")]
		private class RequestCallback
		{
			[Token(Token = "0x40023D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Pvr_Message.Callback messageCallback;

			[Token(Token = "0x600273D")]
			[Address(RVA = "0x152C9AC", Offset = "0x152C9AC", VA = "0x152C9AC")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x600273E")]
			[Address(RVA = "0x152C9B4", Offset = "0x152C9B4", VA = "0x152C9B4")]
			public RequestCallback(Pvr_Message.Callback callback)
			{
			}

			[Token(Token = "0x600273F")]
			[Address(RVA = "0x152C9E0", Offset = "0x152C9E0", VA = "0x152C9E0", Slot = "4")]
			public virtual void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x2000672")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x40023DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Pvr_Message<T>.Callback callback;

			[Token(Token = "0x6002740")]
			public RequestCallback(Pvr_Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6002741")]
			public override void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<long, Request> requestIDsToRequests;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Pvr_Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x152C334", Offset = "0x152C334", VA = "0x152C334")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x152C4CC", Offset = "0x152C4CC", VA = "0x152C4CC")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x152C7B0", Offset = "0x152C7B0", VA = "0x152C7B0")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x152C848", Offset = "0x152C848", VA = "0x152C848")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x152C5A8", Offset = "0x152C5A8", VA = "0x152C5A8")]
		internal static void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class Pvr_CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x152D124", Offset = "0x152D124", VA = "0x152D124")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x152D220", Offset = "0x152D220", VA = "0x152D220")]
		private void Update()
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x152D2AC", Offset = "0x152D2AC", VA = "0x152D2AC")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x152D308", Offset = "0x152D308", VA = "0x152D308")]
		public Pvr_CallbackRunner()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public abstract class Pvr_Message<T> : Pvr_Message
	{
		[Token(Token = "0x2000673")]
		public new delegate void Callback(Pvr_Message<T> message);

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x17000197")]
		public T Data
		{
			[Token(Token = "0x6001835")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x6001834")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001836")]
		protected abstract T GetDataFromMessage(AndroidJavaObject msg);
	}
	[Token(Token = "0x2000367")]
	public class Pvr_Message
	{
		[Token(Token = "0x2000674")]
		public delegate void Callback(Pvr_Message message);

		[Token(Token = "0x2000675")]
		public enum MessageType : uint
		{
			[Token(Token = "0x40023DC")]
			Unknown = 0u,
			[Token(Token = "0x40023DD")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x40023DE")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x40023DF")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x40023E0")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x40023E1")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x40023E2")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x40023E3")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x40023E4")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x40023E5")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x40023E6")]
			Achievements_WriteAchievementProgress = 121027549u,
			[Token(Token = "0x40023E7")]
			Achievements_VerifyAccessToken = 53284924u
		}

		[Token(Token = "0x2000676")]
		internal delegate Pvr_Message ExtraMessageTypesHandler(AndroidJavaObject messageHandle, MessageType message_type);

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long requestID;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFB24", Offset = "0x8DFB24")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x17000198")]
		public MessageType Type
		{
			[Token(Token = "0x6001838")]
			[Address(RVA = "0x152C900", Offset = "0x152C900", VA = "0x152C900")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x17000199")]
		public bool IsError
		{
			[Token(Token = "0x6001839")]
			[Address(RVA = "0x152D508", Offset = "0x152D508", VA = "0x152D508")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019A")]
		public long RequestID
		{
			[Token(Token = "0x600183A")]
			[Address(RVA = "0x152C8F8", Offset = "0x152C8F8", VA = "0x152C8F8")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x1700019B")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x6001843")]
			[Address(RVA = "0x152D734", Offset = "0x152D734", VA = "0x152D734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB7DC", Offset = "0x8EB7DC")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001842")]
			[Address(RVA = "0x152D6E0", Offset = "0x152D6E0", VA = "0x152D6E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB7CC", Offset = "0x8EB7CC")]
			set
			{
			}
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0x152D318", Offset = "0x152D318", VA = "0x152D318")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x152D518", Offset = "0x152D518", VA = "0x152D518", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0x152D520", Offset = "0x152D520", VA = "0x152D520", Slot = "5")]
		public virtual Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x152D528", Offset = "0x152D528", VA = "0x152D528", Slot = "6")]
		public virtual Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x152D530", Offset = "0x152D530", VA = "0x152D530", Slot = "7")]
		public virtual Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x152D538", Offset = "0x152D538", VA = "0x152D538", Slot = "8")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x152D540", Offset = "0x152D540", VA = "0x152D540")]
		internal static Pvr_Message ParseMessageHandle(AndroidJavaObject messageHandle)
		{
			return null;
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0x152C548", Offset = "0x152C548", VA = "0x152C548")]
		public static Pvr_Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x2000368")]
	public class MessageWithAchievementDefinitions : Pvr_Message<Pvr_AchievementDefinitionList>
	{
		[Token(Token = "0x6001844")]
		[Address(RVA = "0x152977C", Offset = "0x152977C", VA = "0x152977C")]
		public MessageWithAchievementDefinitions(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x15297DC", Offset = "0x15297DC", VA = "0x15297DC", Slot = "5")]
		public override Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x152982C", Offset = "0x152982C", VA = "0x152982C", Slot = "9")]
		protected override Pvr_AchievementDefinitionList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x2000369")]
	public class MessageWithAchievementProgressList : Pvr_Message<Pvr_AchievementProgressList>
	{
		[Token(Token = "0x6001847")]
		[Address(RVA = "0x1529A10", Offset = "0x1529A10", VA = "0x1529A10")]
		public MessageWithAchievementProgressList(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x1529A70", Offset = "0x1529A70", VA = "0x1529A70", Slot = "6")]
		public override Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x1529AC0", Offset = "0x1529AC0", VA = "0x1529AC0", Slot = "9")]
		protected override Pvr_AchievementProgressList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x200036A")]
	public class MessageWithAchievementUpdate : Pvr_Message<Pvr_AchievementUpdate>
	{
		[Token(Token = "0x600184A")]
		[Address(RVA = "0x1529CA4", Offset = "0x1529CA4", VA = "0x1529CA4")]
		public MessageWithAchievementUpdate(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x1529D04", Offset = "0x1529D04", VA = "0x1529D04", Slot = "7")]
		public override Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x1529D54", Offset = "0x1529D54", VA = "0x1529D54", Slot = "9")]
		protected override Pvr_AchievementUpdate GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x200036B")]
	public class MessageWithString : Pvr_Message<string>
	{
		[Token(Token = "0x600184D")]
		[Address(RVA = "0x1529E48", Offset = "0x1529E48", VA = "0x1529E48")]
		public MessageWithString(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x1529EA8", Offset = "0x1529EA8", VA = "0x1529EA8", Slot = "8")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x1529EF8", Offset = "0x1529EF8", VA = "0x1529EF8", Slot = "9")]
		protected override string GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x200036C")]
	public class Error
	{
		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x152973C", Offset = "0x152973C", VA = "0x152973C")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class Pvr_AchievementDefinition
	{
		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int BitfieldLength;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly long Target;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Title;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string Description;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UnlockedDescription;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string UnlockedIcon;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string LockedIcon;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly bool IsSecrect;

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x152C188", Offset = "0x152C188", VA = "0x152C188")]
		public Pvr_AchievementDefinition(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x200036E")]
	public class Pvr_AchievementDefinitionList : Pvr_DeserializableList<Pvr_AchievementDefinition>
	{
		[Token(Token = "0x6001852")]
		[Address(RVA = "0x152988C", Offset = "0x152988C", VA = "0x152988C")]
		public Pvr_AchievementDefinitionList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class Pvr_AchievementProgress
	{
		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Count;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x152C27C", Offset = "0x152C27C", VA = "0x152C27C")]
		public Pvr_AchievementProgress(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class Pvr_AchievementProgressList : Pvr_DeserializableList<Pvr_AchievementProgress>
	{
		[Token(Token = "0x6001854")]
		[Address(RVA = "0x1529B20", Offset = "0x1529B20", VA = "0x1529B20")]
		public Pvr_AchievementProgressList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class Pvr_AchievementUpdate
	{
		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x1529DB4", Offset = "0x1529DB4", VA = "0x1529DB4")]
		public Pvr_AchievementUpdate(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x2000372")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8CC73C", Offset = "0x8CC73C")]
	public class Pvr_DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> data;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string nextUrl;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string previousUrl;

		[Token(Token = "0x1700019C")]
		public int Count
		{
			[Token(Token = "0x6001856")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700019D")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x6001857")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019E")]
		public T Item
		{
			[Token(Token = "0x6001859")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x600185A")]
			set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public bool HasNextPage
		{
			[Token(Token = "0x6001865")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A0")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x6001866")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A1")]
		public string NextUrl
		{
			[Token(Token = "0x6001867")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A2")]
		public string PreviousUrl
		{
			[Token(Token = "0x6001868")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001858")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x600185B")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x600185C")]
		public void Clear()
		{
		}

		[Token(Token = "0x600185D")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x600185E")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x600185F")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001860")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6001861")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001862")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001863")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x6001864")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001869")]
		public Pvr_DeserializableList()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public sealed class AchievementCore
	{
		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x1527924", Offset = "0x1527924", VA = "0x1527924")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x152798C", Offset = "0x152798C", VA = "0x152798C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x1527990", Offset = "0x1527990", VA = "0x1527990")]
		public static void RegisterNetwork()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x1527B48", Offset = "0x1527B48", VA = "0x1527B48")]
		public static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x1527C44", Offset = "0x1527C44", VA = "0x1527C44")]
		public AchievementCore()
		{
		}
	}
	[Token(Token = "0x2000374")]
	public static class Achievements
	{
		[Token(Token = "0x6001870")]
		[Address(RVA = "0x1527CAC", Offset = "0x1527CAC", VA = "0x1527CAC")]
		public static Pvr_Request<Pvr_AchievementUpdate> Init()
		{
			return null;
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x15281A4", Offset = "0x15281A4", VA = "0x15281A4")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddCount(string name, long count)
		{
			return null;
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x1528454", Offset = "0x1528454", VA = "0x1528454")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x15286E4", Offset = "0x15286E4", VA = "0x15286E4")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x1528960", Offset = "0x1528960", VA = "0x1528960")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x1528B38", Offset = "0x1528B38", VA = "0x1528B38")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x1528DB4", Offset = "0x1528DB4", VA = "0x1528DB4")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x1528FE0", Offset = "0x1528FE0", VA = "0x1528FE0")]
		public static Pvr_Request<Pvr_AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x152920C", Offset = "0x152920C", VA = "0x152920C")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetNextAchievementDefinitionListPage(Pvr_AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x15295E8", Offset = "0x15295E8", VA = "0x15295E8")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetNextAchievementProgressListPage(Pvr_AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x2000375")]
	public sealed class Pvr_Request<T> : Request
	{
		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pvr_Message<T>.Callback callback_;

		[Token(Token = "0x600187A")]
		public Pvr_Request(long requestID)
		{
		}

		[Token(Token = "0x600187B")]
		public Pvr_Request<T> OnComplete(Pvr_Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x600187C")]
		public override void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class Request
	{
		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Pvr_Message.Callback callback_;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFB34", Offset = "0x8DFB34")]
		private long <RequestID>k__BackingField;

		[Token(Token = "0x170001A3")]
		public long RequestID
		{
			[Token(Token = "0x600187E")]
			[Address(RVA = "0x152C4C4", Offset = "0x152C4C4", VA = "0x152C4C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB7EC", Offset = "0x8EB7EC")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x600187F")]
			[Address(RVA = "0x152E038", Offset = "0x152E038", VA = "0x152E038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB7FC", Offset = "0x8EB7FC")]
			set
			{
			}
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x152E00C", Offset = "0x152E00C", VA = "0x152E00C")]
		public Request(long requestID)
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x152E040", Offset = "0x152E040", VA = "0x152E040")]
		public Request OnComplete(Pvr_Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x152E0BC", Offset = "0x152E0BC", VA = "0x152E0BC", Slot = "4")]
		public virtual void HandleMessage(Pvr_Message msg)
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x152D228", Offset = "0x152D228", VA = "0x152D228")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
	[Token(Token = "0x2000377")]
	public enum AchievementType
	{
		[Token(Token = "0x400171F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFB44", Offset = "0x8DFB44")]
		Unknown,
		[Token(Token = "0x4001720")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFB7C", Offset = "0x8DFB7C")]
		Simple,
		[Token(Token = "0x4001721")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFBB4", Offset = "0x8DFBB4")]
		Bitfield,
		[Token(Token = "0x4001722")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFBEC", Offset = "0x8DFBEC")]
		Count
	}
	[Token(Token = "0x2000378")]
	public class Pvr_AchievementAPI
	{
		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass achievementAPI;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass definitionArrayHandle;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass definitionHandle;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass progressArrayHandle;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaClass progressHandle;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaClass updateHandle;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject errorHandle;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject unityInterface;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string openId;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string accessToken;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string appId;

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x1527D70", Offset = "0x1527D70", VA = "0x1527D70")]
		internal static long Init()
		{
			return default(long);
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x15279EC", Offset = "0x15279EC", VA = "0x15279EC")]
		internal static void RegisterNetwork()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x1527BA4", Offset = "0x1527BA4", VA = "0x1527BA4")]
		internal static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x1529FDC", Offset = "0x1529FDC", VA = "0x1529FDC")]
		internal static AndroidJavaObject PopMessage()
		{
			return null;
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x152A084", Offset = "0x152A084", VA = "0x152A084")]
		internal static string pvr_Error_GetMessage(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x152A190", Offset = "0x152A190", VA = "0x152A190")]
		internal static int pvr_Error_GetHttpCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x152A29C", Offset = "0x152A29C", VA = "0x152A29C")]
		internal static int pvr_Error_GetCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x1528280", Offset = "0x1528280", VA = "0x1528280")]
		internal static long pvr_Achievements_AddCount(string name, long count)
		{
			return default(long);
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x1528530", Offset = "0x1528530", VA = "0x1528530")]
		internal static long pvr_Achievements_AddFields(string name, string fields)
		{
			return default(long);
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x15287A8", Offset = "0x15287A8", VA = "0x15287A8")]
		internal static long pvr_Achievements_GetAllDefinitions()
		{
			return default(long);
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x1528A24", Offset = "0x1528A24", VA = "0x1528A24")]
		internal static long pvr_Achievements_GetAllProgress()
		{
			return default(long);
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x1528C04", Offset = "0x1528C04", VA = "0x1528C04")]
		internal static long pvr_Achievements_GetDefinitionsByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x1528E80", Offset = "0x1528E80", VA = "0x1528E80")]
		internal static long pvr_Achievements_GetProgressByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x15290AC", Offset = "0x15290AC", VA = "0x15290AC")]
		internal static long pvr_Achievements_Unlock(string name)
		{
			return default(long);
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x1529360", Offset = "0x1529360", VA = "0x1529360")]
		internal static long pvr_HTTP_GetWithMessageType(string nextUrl, Pvr_Message.MessageType messageType)
		{
			return default(long);
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x152A3A8", Offset = "0x152A3A8", VA = "0x152A3A8")]
		internal static long pvr_Message_GetType(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x152A474", Offset = "0x152A474", VA = "0x152A474")]
		internal static bool pvr_Message_IsError(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x152A4F4", Offset = "0x152A4F4", VA = "0x152A4F4")]
		internal static long pvr_Message_GetRequestID(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x1529F5C", Offset = "0x1529F5C", VA = "0x1529F5C")]
		internal static string pvr_Message_GetString(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x152A574", Offset = "0x152A574", VA = "0x152A574")]
		internal static bool pvr_AchievementUpdate_GetJustUnlocked(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x152A680", Offset = "0x152A680", VA = "0x152A680")]
		internal static string pvr_AchievementUpdate_GetName(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x152A78C", Offset = "0x152A78C", VA = "0x152A78C")]
		internal static int pvr_AchievementProgressArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x152A898", Offset = "0x152A898", VA = "0x152A898")]
		internal static AndroidJavaObject pvr_AchievementProgressArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x152AA18", Offset = "0x152AA18", VA = "0x152AA18")]
		internal static string pvr_AchievementProgressArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x152AB24", Offset = "0x152AB24", VA = "0x152AB24")]
		internal static string pvr_AchievementProgress_GetBitfield(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x152AC30", Offset = "0x152AC30", VA = "0x152AC30")]
		internal static long pvr_AchievementProgress_GetCount(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x152AD3C", Offset = "0x152AD3C", VA = "0x152AD3C")]
		internal static bool pvr_AchievementProgress_GetIsUnlocked(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x152AE48", Offset = "0x152AE48", VA = "0x152AE48")]
		internal static string pvr_AchievementProgress_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x152AF54", Offset = "0x152AF54", VA = "0x152AF54")]
		internal static DateTime pvr_AchievementProgress_GetUnlockTime(AndroidJavaObject msg)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x152B09C", Offset = "0x152B09C", VA = "0x152B09C")]
		internal static DateTime DateTimeFromNative(long seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x152B10C", Offset = "0x152B10C", VA = "0x152B10C")]
		internal static int pvr_AchievementDefinitionArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x152B218", Offset = "0x152B218", VA = "0x152B218")]
		internal static AndroidJavaObject pvr_AchievementDefinitionArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x152B398", Offset = "0x152B398", VA = "0x152B398")]
		internal static string pvr_AchievementDefinitionArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x152B4A4", Offset = "0x152B4A4", VA = "0x152B4A4")]
		internal static AchievementType pvr_AchievementDefinition_GetType(AndroidJavaObject msg)
		{
			return default(AchievementType);
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x152B5FC", Offset = "0x152B5FC", VA = "0x152B5FC")]
		internal static string pvr_AchievementDefinition_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x152B708", Offset = "0x152B708", VA = "0x152B708")]
		internal static int pvr_AchievementDefinition_GetBitfieldLength(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x152B814", Offset = "0x152B814", VA = "0x152B814")]
		internal static long pvr_AchievementDefinition_GetTarget(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x152B920", Offset = "0x152B920", VA = "0x152B920")]
		internal static string pvr_AchievementDefinition_GetTitle(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x152BA2C", Offset = "0x152BA2C", VA = "0x152BA2C")]
		internal static string pvr_AchievementDefinition_GetUnlockedDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x152BB38", Offset = "0x152BB38", VA = "0x152BB38")]
		internal static string pvr_AchievementDefinition_GetLockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x152BC44", Offset = "0x152BC44", VA = "0x152BC44")]
		internal static bool pvr_AchievementDefinition_GetIsSecrect(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x152BD50", Offset = "0x152BD50", VA = "0x152BD50")]
		internal static string pvr_AchievementDefinition_GetUnlockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x152BE5C", Offset = "0x152BE5C", VA = "0x152BE5C")]
		internal static string pvr_AchievementDefinition_GetDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x152BF68", Offset = "0x152BF68", VA = "0x152BF68")]
		public Pvr_AchievementAPI()
		{
		}
	}
}
namespace Oculus.Platform
{
	[Token(Token = "0x2000379")]
	public class AbuseReportOptions
	{
		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xD0E614", Offset = "0xD0E614", VA = "0xD0E614")]
		public AbuseReportOptions()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xD0E718", Offset = "0xD0E718", VA = "0xD0E718")]
		public void SetPreventPeopleChooser(bool value)
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xD0E840", Offset = "0xD0E840", VA = "0xD0E840")]
		public void SetReportType(AbuseReportType value)
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xD0E968", Offset = "0xD0E968", VA = "0xD0E968")]
		public static explicit operator IntPtr(AbuseReportOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xD0E9B8", Offset = "0xD0E9B8", VA = "0xD0E9B8", Slot = "1")]
		~AbuseReportOptions()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public enum AbuseReportType
	{
		[Token(Token = "0x4001730")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFC24", Offset = "0x8DFC24")]
		Unknown,
		[Token(Token = "0x4001731")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFC5C", Offset = "0x8DFC5C")]
		Object,
		[Token(Token = "0x4001732")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFC94", Offset = "0x8DFC94")]
		User
	}
	[Token(Token = "0x200037B")]
	public enum AchievementType
	{
		[Token(Token = "0x4001734")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFCCC", Offset = "0x8DFCCC")]
		Unknown,
		[Token(Token = "0x4001735")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFD04", Offset = "0x8DFD04")]
		Simple,
		[Token(Token = "0x4001736")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFD3C", Offset = "0x8DFD3C")]
		Bitfield,
		[Token(Token = "0x4001737")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFD74", Offset = "0x8DFD74")]
		Count
	}
	[Token(Token = "0x200037C")]
	public class AndroidPlatform
	{
		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xD0EB18", Offset = "0xD0EB18", VA = "0xD0EB18")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xD0EC8C", Offset = "0xD0EC8C", VA = "0xD0EC8C")]
		public AndroidPlatform()
		{
		}
	}
	[Token(Token = "0x200037D")]
	public class ApplicationOptions
	{
		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xD0EC94", Offset = "0xD0EC94", VA = "0xD0EC94")]
		public ApplicationOptions()
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xD0ED98", Offset = "0xD0ED98", VA = "0xD0ED98")]
		public void SetDeeplinkMessage(string value)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xD0EEBC", Offset = "0xD0EEBC", VA = "0xD0EEBC")]
		public static explicit operator IntPtr(ApplicationOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xD0EF0C", Offset = "0xD0EF0C", VA = "0xD0EF0C", Slot = "1")]
		~ApplicationOptions()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class CAPI
	{
		[Token(Token = "0x2000677")]
		public struct ovrKeyValuePair
		{
			[Token(Token = "0x40023E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x40023E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private KeyValuePairType valueType_;

			[Token(Token = "0x40023EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stringValue_;

			[Token(Token = "0x40023EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int intValue_;

			[Token(Token = "0x40023EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public double doubleValue_;

			[Token(Token = "0x600274E")]
			[Address(RVA = "0x996810", Offset = "0x996810", VA = "0x996810")]
			public ovrKeyValuePair(string key, string value)
			{
			}

			[Token(Token = "0x600274F")]
			[Address(RVA = "0x996828", Offset = "0x996828", VA = "0x996828")]
			public ovrKeyValuePair(string key, int value)
			{
			}

			[Token(Token = "0x6002750")]
			[Address(RVA = "0x996844", Offset = "0x996844", VA = "0x996844")]
			public ovrKeyValuePair(string key, double value)
			{
			}
		}

		[Token(Token = "0x2000678")]
		public struct ovrMatchmakingCriterion
		{
			[Token(Token = "0x40023ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string key_;

			[Token(Token = "0x40023EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MatchmakingCriterionImportance importance_;

			[Token(Token = "0x40023EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr parameterArray;

			[Token(Token = "0x40023F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint parameterArrayCount;

			[Token(Token = "0x6002751")]
			[Address(RVA = "0x996910", Offset = "0x996910", VA = "0x996910")]
			public ovrMatchmakingCriterion(string key, MatchmakingCriterionImportance importance)
			{
			}
		}

		[Token(Token = "0x2000679")]
		public struct ovrMatchmakingCustomQueryData
		{
			[Token(Token = "0x40023F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr dataArray;

			[Token(Token = "0x40023F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint dataArrayCount;

			[Token(Token = "0x40023F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IntPtr criterionArray;

			[Token(Token = "0x40023F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public uint criterionArrayCount;
		}

		[Token(Token = "0x200067A")]
		public struct OculusInitParams
		{
			[Token(Token = "0x40023F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int sType;

			[Token(Token = "0x40023F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string email;

			[Token(Token = "0x40023F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string password;

			[Token(Token = "0x40023F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong appId;

			[Token(Token = "0x40023F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string uriPrefixOverride;
		}

		[Token(Token = "0x200067B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8CD5E4", Offset = "0x8CD5E4")]
		public delegate void FilterCallback([In][Out] short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels);

		[Token(Token = "0x4001739")]
		public const string DLL_NAME = "ovrplatformloader";

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static UTF8Encoding nativeStringEncoding;

		[Token(Token = "0x400173B")]
		public const int VoipFilterBufferSize = 480;

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xD0F06C", Offset = "0xD0F06C", VA = "0xD0F06C")]
		public static IntPtr ArrayOfStructsToIntPtr(Array ar)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xD0F230", Offset = "0xD0F230", VA = "0xD0F230")]
		public static ovrKeyValuePair[] DictionaryToOVRKeyValuePairs(Dictionary<string, object> dict)
		{
			return null;
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xD0F830", Offset = "0xD0F830", VA = "0xD0F830")]
		public static byte[] IntPtrToByteArray(IntPtr data, ulong size)
		{
			return null;
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xD0F8F4", Offset = "0xD0F8F4", VA = "0xD0F8F4")]
		public static Dictionary<string, string> DataStoreFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xD0FC24", Offset = "0xD0FC24", VA = "0xD0FC24")]
		public static string StringFromNative(IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xD0FD44", Offset = "0xD0FD44", VA = "0xD0FD44")]
		public static int GetNativeStringLengthNotIncludingNullTerminator(IntPtr pointer)
		{
			return default(int);
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xD0FDD0", Offset = "0xD0FDD0", VA = "0xD0FDD0")]
		public static DateTime DateTimeFromNative(ulong seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xD0FE40", Offset = "0xD0FE40", VA = "0xD0FE40")]
		public static byte[] BlobFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xD0FF38", Offset = "0xD0FF38", VA = "0xD0FF38")]
		public static byte[] FiledataFromNative(uint size, IntPtr pointer)
		{
			return null;
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xD0FFDC", Offset = "0xD0FFDC", VA = "0xD0FFDC")]
		public static IntPtr StringToNative(string s)
		{
			return default(IntPtr);
		}

		[PreserveSig]
		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xD0EBD0", Offset = "0xD0EBD0", VA = "0xD0EBD0")]
		public static extern bool ovr_UnityInitWrapper(string appId);

		[PreserveSig]
		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xD10180", Offset = "0xD10180", VA = "0xD10180")]
		public static extern void ovr_UnityInitGlobals(IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xD10220", Offset = "0xD10220", VA = "0xD10220")]
		public static extern ulong ovr_UnityInitWrapperAsynchronous(string appId);

		[PreserveSig]
		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xD102D8", Offset = "0xD102D8", VA = "0xD102D8")]
		public static extern bool ovr_UnityInitWrapperStandalone(string accessToken, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xD103A4", Offset = "0xD103A4", VA = "0xD103A4")]
		public static extern ulong ovr_Platform_InitializeStandaloneOculus(ref OculusInitParams init);

		[PreserveSig]
		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xD104A0", Offset = "0xD104A0", VA = "0xD104A0")]
		public static extern ulong ovr_PlatformInitializeWithAccessToken(ulong appId, string accessToken);

		[PreserveSig]
		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xD1056C", Offset = "0xD1056C", VA = "0xD1056C")]
		public static extern bool ovr_UnityInitWrapperWindows(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xD10638", Offset = "0xD10638", VA = "0xD10638")]
		public static extern ulong ovr_UnityInitWrapperWindowsAsynchronous(string appId, IntPtr loggingCB);

		[PreserveSig]
		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xD10700", Offset = "0xD10700", VA = "0xD10700")]
		public static extern bool ovr_SetDeveloperAccessToken(string accessToken);

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xD107BC", Offset = "0xD107BC", VA = "0xD107BC")]
		public static string ovr_GetLoggedInUserLocale()
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xD1081C", Offset = "0xD1081C", VA = "0xD1081C")]
		private static extern IntPtr ovr_GetLoggedInUserLocale_Native();

		[PreserveSig]
		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xD108AC", Offset = "0xD108AC", VA = "0xD108AC")]
		public static extern IntPtr ovr_PopMessage();

		[PreserveSig]
		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xD1093C", Offset = "0xD1093C", VA = "0xD1093C")]
		public static extern void ovr_FreeMessage(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xD109DC", Offset = "0xD109DC", VA = "0xD109DC")]
		public static extern uint ovr_NetworkingPeer_GetSendPolicy(IntPtr networkingPeer);

		[PreserveSig]
		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xD10A7C", Offset = "0xD10A7C", VA = "0xD10A7C")]
		public static extern IntPtr ovr_Voip_CreateEncoder();

		[PreserveSig]
		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xD10B0C", Offset = "0xD10B0C", VA = "0xD10B0C")]
		public static extern void ovr_Voip_DestroyEncoder(IntPtr encoder);

		[PreserveSig]
		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xD10BAC", Offset = "0xD10BAC", VA = "0xD10BAC")]
		public static extern IntPtr ovr_Voip_CreateDecoder();

		[PreserveSig]
		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xD10C3C", Offset = "0xD10C3C", VA = "0xD10C3C")]
		public static extern void ovr_Voip_DestroyDecoder(IntPtr decoder);

		[PreserveSig]
		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xD10CDC", Offset = "0xD10CDC", VA = "0xD10CDC")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, ulong compressedSize);

		[PreserveSig]
		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xD10D9C", Offset = "0xD10D9C", VA = "0xD10D9C")]
		public static extern IntPtr ovr_Microphone_Create();

		[PreserveSig]
		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xD10E2C", Offset = "0xD10E2C", VA = "0xD10E2C")]
		public static extern void ovr_Microphone_Destroy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xD10ECC", Offset = "0xD10ECC", VA = "0xD10ECC")]
		public static extern void ovr_Voip_SetSystemVoipPassthrough(bool passthrough);

		[PreserveSig]
		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xD10F6C", Offset = "0xD10F6C", VA = "0xD10F6C")]
		public static extern void ovr_Voip_SetSystemVoipMicrophoneMuted(VoipMuteState muted);

		[PreserveSig]
		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xD1100C", Offset = "0xD1100C", VA = "0xD1100C")]
		public static extern void ovr_UnityResetTestPlatform();

		[PreserveSig]
		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xD1109C", Offset = "0xD1109C", VA = "0xD1109C")]
		public static extern ulong ovr_HTTP_GetWithMessageType(string url, int messageType);

		[PreserveSig]
		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xD11164", Offset = "0xD11164", VA = "0xD11164")]
		public static extern void ovr_CrashApplication();

		[PreserveSig]
		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xD111F4", Offset = "0xD111F4", VA = "0xD111F4")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallback(FilterCallback cb);

		[PreserveSig]
		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xD11298", Offset = "0xD11298", VA = "0xD11298")]
		public static extern void ovr_Voip_SetMicrophoneFilterCallbackWithFixedSizeBuffer(FilterCallback cb, UIntPtr bufferSizeElements);

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xD1134C", Offset = "0xD1134C", VA = "0xD1134C")]
		public static void LogNewEvent(string eventName, Dictionary<string, string> values)
		{
		}

		[PreserveSig]
		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xD116CC", Offset = "0xD116CC", VA = "0xD116CC")]
		public static extern void ovr_Log_NewEvent(IntPtr eventName, IntPtr[] values, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xD1178C", Offset = "0xD1178C", VA = "0xD1178C")]
		public static extern IntPtr ovr_ApplicationLifecycle_GetLaunchDetails();

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xD1181C", Offset = "0xD1181C", VA = "0xD1181C")]
		public static ulong ovr_HTTP_StartTransfer(string url, ovrKeyValuePair[] headers)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xD11914", Offset = "0xD11914", VA = "0xD11914")]
		private static extern ulong ovr_HTTP_StartTransfer_Native(IntPtr url, ovrKeyValuePair[] headers, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xD11A90", Offset = "0xD11A90", VA = "0xD11A90")]
		public static extern bool ovr_HTTP_Write(ulong transferId, byte[] bytes, UIntPtr length);

		[PreserveSig]
		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xD11B58", Offset = "0xD11B58", VA = "0xD11B58")]
		public static extern void ovr_HTTP_WriteEOM(ulong transferId);

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xD11BF4", Offset = "0xD11BF4", VA = "0xD11BF4")]
		public static string ovr_Message_GetStringForJavascript(IntPtr message)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xD11C5C", Offset = "0xD11C5C", VA = "0xD11C5C")]
		private static extern IntPtr ovr_Message_GetStringForJavascript_Native(IntPtr message);

		[PreserveSig]
		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xD11CFC", Offset = "0xD11CFC", VA = "0xD11CFC")]
		public static extern void ovr_Net_Accept(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xD11D9C", Offset = "0xD11D9C", VA = "0xD11D9C")]
		public static extern bool ovr_Net_AcceptForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xD11E34", Offset = "0xD11E34", VA = "0xD11E34")]
		public static extern void ovr_Net_Close(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xD11ED4", Offset = "0xD11ED4", VA = "0xD11ED4")]
		public static extern void ovr_Net_CloseForCurrentRoom();

		[PreserveSig]
		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xD11F64", Offset = "0xD11F64", VA = "0xD11F64")]
		public static extern void ovr_Net_Connect(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xD12004", Offset = "0xD12004", VA = "0xD12004")]
		public static extern bool ovr_Net_IsConnected(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xD120AC", Offset = "0xD120AC", VA = "0xD120AC")]
		public static extern ulong ovr_Net_Ping(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60018F1")]
		[Address(RVA = "0xD1214C", Offset = "0xD1214C", VA = "0xD1214C")]
		public static extern IntPtr ovr_Net_ReadPacket();

		[PreserveSig]
		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xD121DC", Offset = "0xD121DC", VA = "0xD121DC")]
		public static extern bool ovr_Net_SendPacket(ulong userID, UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xD122B4", Offset = "0xD122B4", VA = "0xD122B4")]
		public static extern bool ovr_Net_SendPacketToCurrentRoom(UIntPtr length, byte[] bytes, SendPolicy policy);

		[PreserveSig]
		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xD1237C", Offset = "0xD1237C", VA = "0xD1237C")]
		public static extern int ovr_Party_PluginGetSharedMemHandle();

		[PreserveSig]
		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xD1240C", Offset = "0xD1240C", VA = "0xD1240C")]
		public static extern VoipMuteState ovr_Party_PluginGetVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xD1249C", Offset = "0xD1249C", VA = "0xD1249C")]
		public static extern bool ovr_Party_PluginGetVoipPassthrough();

		[PreserveSig]
		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xD12534", Offset = "0xD12534", VA = "0xD12534")]
		public static extern SystemVoipStatus ovr_Party_PluginGetVoipStatus();

		[PreserveSig]
		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xD125C4", Offset = "0xD125C4", VA = "0xD125C4")]
		public static extern void ovr_Voip_Accept(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xD12664", Offset = "0xD12664", VA = "0xD12664")]
		public static extern VoipDtxState ovr_Voip_GetIsConnectionUsingDtx(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xD12704", Offset = "0xD12704", VA = "0xD12704")]
		public static extern VoipBitrate ovr_Voip_GetLocalBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xD127A4", Offset = "0xD127A4", VA = "0xD127A4")]
		public static extern UIntPtr ovr_Voip_GetOutputBufferMaxSize();

		[PreserveSig]
		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xD12834", Offset = "0xD12834", VA = "0xD12834")]
		public static extern UIntPtr ovr_Voip_GetPCM(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xD128F4", Offset = "0xD128F4", VA = "0xD128F4")]
		public static extern UIntPtr ovr_Voip_GetPCMFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xD129B4", Offset = "0xD129B4", VA = "0xD129B4")]
		public static extern UIntPtr ovr_Voip_GetPCMSize(ulong senderID);

		[PreserveSig]
		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xD12A54", Offset = "0xD12A54", VA = "0xD12A54")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestamp(ulong senderID, short[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6001900")]
		[Address(RVA = "0xD12B2C", Offset = "0xD12B2C", VA = "0xD12B2C")]
		public static extern UIntPtr ovr_Voip_GetPCMWithTimestampFloat(ulong senderID, float[] outputBuffer, UIntPtr outputBufferNumElements, uint[] timestamp);

		[PreserveSig]
		[Token(Token = "0x6001901")]
		[Address(RVA = "0xD12C04", Offset = "0xD12C04", VA = "0xD12C04")]
		public static extern VoipBitrate ovr_Voip_GetRemoteBitrate(ulong peerID);

		[PreserveSig]
		[Token(Token = "0x6001902")]
		[Address(RVA = "0xD12CA4", Offset = "0xD12CA4", VA = "0xD12CA4")]
		public static extern uint ovr_Voip_GetSyncTimestamp(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001903")]
		[Address(RVA = "0xD12D44", Offset = "0xD12D44", VA = "0xD12D44")]
		public static extern long ovr_Voip_GetSyncTimestampDifference(uint lhs, uint rhs);

		[PreserveSig]
		[Token(Token = "0x6001904")]
		[Address(RVA = "0xD12DF4", Offset = "0xD12DF4", VA = "0xD12DF4")]
		public static extern VoipMuteState ovr_Voip_GetSystemVoipMicrophoneMuted();

		[PreserveSig]
		[Token(Token = "0x6001905")]
		[Address(RVA = "0xD12E84", Offset = "0xD12E84", VA = "0xD12E84")]
		public static extern SystemVoipStatus ovr_Voip_GetSystemVoipStatus();

		[PreserveSig]
		[Token(Token = "0x6001906")]
		[Address(RVA = "0xD12F14", Offset = "0xD12F14", VA = "0xD12F14")]
		public static extern void ovr_Voip_SetMicrophoneMuted(VoipMuteState state);

		[PreserveSig]
		[Token(Token = "0x6001907")]
		[Address(RVA = "0xD12FB4", Offset = "0xD12FB4", VA = "0xD12FB4")]
		public static extern void ovr_Voip_SetNewConnectionOptions(IntPtr voipOptions);

		[PreserveSig]
		[Token(Token = "0x6001908")]
		[Address(RVA = "0xD13054", Offset = "0xD13054", VA = "0xD13054")]
		public static extern void ovr_Voip_SetOutputSampleRate(VoipSampleRate rate);

		[PreserveSig]
		[Token(Token = "0x6001909")]
		[Address(RVA = "0xD130F4", Offset = "0xD130F4", VA = "0xD130F4")]
		public static extern void ovr_Voip_Start(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600190A")]
		[Address(RVA = "0xD13194", Offset = "0xD13194", VA = "0xD13194")]
		public static extern void ovr_Voip_Stop(ulong userID);

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xD13234", Offset = "0xD13234", VA = "0xD13234")]
		public static ulong ovr_Achievements_AddCount(string name, ulong count)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600190C")]
		[Address(RVA = "0xD132EC", Offset = "0xD132EC", VA = "0xD132EC")]
		private static extern ulong ovr_Achievements_AddCount_Native(IntPtr name, ulong count);

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xD1339C", Offset = "0xD1339C", VA = "0xD1339C")]
		public static ulong ovr_Achievements_AddFields(string name, string fields)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600190E")]
		[Address(RVA = "0xD13470", Offset = "0xD13470", VA = "0xD13470")]
		private static extern ulong ovr_Achievements_AddFields_Native(IntPtr name, IntPtr fields);

		[PreserveSig]
		[Token(Token = "0x600190F")]
		[Address(RVA = "0xD13520", Offset = "0xD13520", VA = "0xD13520")]
		public static extern ulong ovr_Achievements_GetAllDefinitions();

		[PreserveSig]
		[Token(Token = "0x6001910")]
		[Address(RVA = "0xD135B0", Offset = "0xD135B0", VA = "0xD135B0")]
		public static extern ulong ovr_Achievements_GetAllProgress();

		[PreserveSig]
		[Token(Token = "0x6001911")]
		[Address(RVA = "0xD13640", Offset = "0xD13640", VA = "0xD13640")]
		public static extern ulong ovr_Achievements_GetDefinitionsByName(string[] names, int count);

		[PreserveSig]
		[Token(Token = "0x6001912")]
		[Address(RVA = "0xD137B0", Offset = "0xD137B0", VA = "0xD137B0")]
		public static extern ulong ovr_Achievements_GetProgressByName(string[] names, int count);

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xD13920", Offset = "0xD13920", VA = "0xD13920")]
		public static ulong ovr_Achievements_Unlock(string name)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001914")]
		[Address(RVA = "0xD139C8", Offset = "0xD139C8", VA = "0xD139C8")]
		private static extern ulong ovr_Achievements_Unlock_Native(IntPtr name);

		[PreserveSig]
		[Token(Token = "0x6001915")]
		[Address(RVA = "0xD13A68", Offset = "0xD13A68", VA = "0xD13A68")]
		public static extern ulong ovr_Application_ExecuteCoordinatedLaunch(ulong appID, ulong roomID);

		[PreserveSig]
		[Token(Token = "0x6001916")]
		[Address(RVA = "0xD13B18", Offset = "0xD13B18", VA = "0xD13B18")]
		public static extern ulong ovr_Application_GetInstalledApplications();

		[PreserveSig]
		[Token(Token = "0x6001917")]
		[Address(RVA = "0xD13BA8", Offset = "0xD13BA8", VA = "0xD13BA8")]
		public static extern ulong ovr_Application_GetVersion();

		[PreserveSig]
		[Token(Token = "0x6001918")]
		[Address(RVA = "0xD13C38", Offset = "0xD13C38", VA = "0xD13C38")]
		public static extern ulong ovr_Application_LaunchOtherApp(ulong appID, IntPtr deeplink_options);

		[PreserveSig]
		[Token(Token = "0x6001919")]
		[Address(RVA = "0xD13CE8", Offset = "0xD13CE8", VA = "0xD13CE8")]
		public static extern ulong ovr_ApplicationLifecycle_GetRegisteredPIDs();

		[PreserveSig]
		[Token(Token = "0x600191A")]
		[Address(RVA = "0xD13D78", Offset = "0xD13D78", VA = "0xD13D78")]
		public static extern ulong ovr_ApplicationLifecycle_GetSessionKey();

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xD13E08", Offset = "0xD13E08", VA = "0xD13E08")]
		public static ulong ovr_ApplicationLifecycle_RegisterSessionKey(string sessionKey)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600191C")]
		[Address(RVA = "0xD13EB0", Offset = "0xD13EB0", VA = "0xD13EB0")]
		private static extern ulong ovr_ApplicationLifecycle_RegisterSessionKey_Native(IntPtr sessionKey);

		[PreserveSig]
		[Token(Token = "0x600191D")]
		[Address(RVA = "0xD13F50", Offset = "0xD13F50", VA = "0xD13F50")]
		public static extern ulong ovr_AssetFile_Delete(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x600191E")]
		[Address(RVA = "0xD13FF0", Offset = "0xD13FF0", VA = "0xD13FF0")]
		public static extern ulong ovr_AssetFile_DeleteById(ulong assetFileID);

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xD14090", Offset = "0xD14090", VA = "0xD14090")]
		public static ulong ovr_AssetFile_DeleteByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001920")]
		[Address(RVA = "0xD14138", Offset = "0xD14138", VA = "0xD14138")]
		private static extern ulong ovr_AssetFile_DeleteByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6001921")]
		[Address(RVA = "0xD141D8", Offset = "0xD141D8", VA = "0xD141D8")]
		public static extern ulong ovr_AssetFile_Download(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001922")]
		[Address(RVA = "0xD14278", Offset = "0xD14278", VA = "0xD14278")]
		public static extern ulong ovr_AssetFile_DownloadById(ulong assetFileID);

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xD14318", Offset = "0xD14318", VA = "0xD14318")]
		public static ulong ovr_AssetFile_DownloadByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001924")]
		[Address(RVA = "0xD143C0", Offset = "0xD143C0", VA = "0xD143C0")]
		private static extern ulong ovr_AssetFile_DownloadByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6001925")]
		[Address(RVA = "0xD14460", Offset = "0xD14460", VA = "0xD14460")]
		public static extern ulong ovr_AssetFile_DownloadCancel(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x6001926")]
		[Address(RVA = "0xD14500", Offset = "0xD14500", VA = "0xD14500")]
		public static extern ulong ovr_AssetFile_DownloadCancelById(ulong assetFileID);

		[Token(Token = "0x6001927")]
		[Address(RVA = "0xD145A0", Offset = "0xD145A0", VA = "0xD145A0")]
		public static ulong ovr_AssetFile_DownloadCancelByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001928")]
		[Address(RVA = "0xD14648", Offset = "0xD14648", VA = "0xD14648")]
		private static extern ulong ovr_AssetFile_DownloadCancelByName_Native(IntPtr assetFileName);

		[PreserveSig]
		[Token(Token = "0x6001929")]
		[Address(RVA = "0xD146E8", Offset = "0xD146E8", VA = "0xD146E8")]
		public static extern ulong ovr_AssetFile_GetList();

		[PreserveSig]
		[Token(Token = "0x600192A")]
		[Address(RVA = "0xD14778", Offset = "0xD14778", VA = "0xD14778")]
		public static extern ulong ovr_AssetFile_Status(ulong assetFileID);

		[PreserveSig]
		[Token(Token = "0x600192B")]
		[Address(RVA = "0xD14818", Offset = "0xD14818", VA = "0xD14818")]
		public static extern ulong ovr_AssetFile_StatusById(ulong assetFileID);

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xD148B8", Offset = "0xD148B8", VA = "0xD148B8")]
		public static ulong ovr_AssetFile_StatusByName(string assetFileName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600192D")]
		[Address(RVA = "0xD14960", Offset = "0xD14960", VA = "0xD14960")]
		private static extern ulong ovr_AssetFile_StatusByName_Native(IntPtr assetFileName);

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xD14A00", Offset = "0xD14A00", VA = "0xD14A00")]
		public static ulong ovr_Avatar_UpdateMetaData(string avatarMetaData, string imageFilePath)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600192F")]
		[Address(RVA = "0xD14AD4", Offset = "0xD14AD4", VA = "0xD14AD4")]
		private static extern ulong ovr_Avatar_UpdateMetaData_Native(IntPtr avatarMetaData, IntPtr imageFilePath);

		[PreserveSig]
		[Token(Token = "0x6001930")]
		[Address(RVA = "0xD14B84", Offset = "0xD14B84", VA = "0xD14B84")]
		public static extern ulong ovr_Cal_FinalizeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong finalized_application_ID);

		[PreserveSig]
		[Token(Token = "0x6001931")]
		[Address(RVA = "0xD14C54", Offset = "0xD14C54", VA = "0xD14C54")]
		public static extern ulong ovr_Cal_GetSuggestedApplications(ulong groupingObject, ulong[] userIDs, int numUserIDs);

		[PreserveSig]
		[Token(Token = "0x6001932")]
		[Address(RVA = "0xD14D14", Offset = "0xD14D14", VA = "0xD14D14")]
		public static extern ulong ovr_Cal_ProposeApplication(ulong groupingObject, ulong[] userIDs, int numUserIDs, ulong proposed_application_ID);

		[Token(Token = "0x6001933")]
		[Address(RVA = "0xD14DE4", Offset = "0xD14DE4", VA = "0xD14DE4")]
		public static ulong ovr_CloudStorage_Delete(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001934")]
		[Address(RVA = "0xD14EB8", Offset = "0xD14EB8", VA = "0xD14EB8")]
		private static extern ulong ovr_CloudStorage_Delete_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xD14F68", Offset = "0xD14F68", VA = "0xD14F68")]
		public static ulong ovr_CloudStorage_Load(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001936")]
		[Address(RVA = "0xD1503C", Offset = "0xD1503C", VA = "0xD1503C")]
		private static extern ulong ovr_CloudStorage_Load_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xD150EC", Offset = "0xD150EC", VA = "0xD150EC")]
		public static ulong ovr_CloudStorage_LoadBucketMetadata(string bucket)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001938")]
		[Address(RVA = "0xD15194", Offset = "0xD15194", VA = "0xD15194")]
		private static extern ulong ovr_CloudStorage_LoadBucketMetadata_Native(IntPtr bucket);

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xD15234", Offset = "0xD15234", VA = "0xD15234")]
		public static ulong ovr_CloudStorage_LoadConflictMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600193A")]
		[Address(RVA = "0xD15308", Offset = "0xD15308", VA = "0xD15308")]
		private static extern ulong ovr_CloudStorage_LoadConflictMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xD153B8", Offset = "0xD153B8", VA = "0xD153B8")]
		public static ulong ovr_CloudStorage_LoadHandle(string handle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600193C")]
		[Address(RVA = "0xD15460", Offset = "0xD15460", VA = "0xD15460")]
		private static extern ulong ovr_CloudStorage_LoadHandle_Native(IntPtr handle);

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xD15500", Offset = "0xD15500", VA = "0xD15500")]
		public static ulong ovr_CloudStorage_LoadMetadata(string bucket, string key)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600193E")]
		[Address(RVA = "0xD155D4", Offset = "0xD155D4", VA = "0xD155D4")]
		private static extern ulong ovr_CloudStorage_LoadMetadata_Native(IntPtr bucket, IntPtr key);

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xD15684", Offset = "0xD15684", VA = "0xD15684")]
		public static ulong ovr_CloudStorage_ResolveKeepLocal(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001940")]
		[Address(RVA = "0xD15778", Offset = "0xD15778", VA = "0xD15778")]
		private static extern ulong ovr_CloudStorage_ResolveKeepLocal_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xD15830", Offset = "0xD15830", VA = "0xD15830")]
		public static ulong ovr_CloudStorage_ResolveKeepRemote(string bucket, string key, string remoteHandle)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001942")]
		[Address(RVA = "0xD15924", Offset = "0xD15924", VA = "0xD15924")]
		private static extern ulong ovr_CloudStorage_ResolveKeepRemote_Native(IntPtr bucket, IntPtr key, IntPtr remoteHandle);

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xD159DC", Offset = "0xD159DC", VA = "0xD159DC")]
		public static ulong ovr_CloudStorage_Save(string bucket, string key, byte[] data, uint dataSize, long counter, string extraData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001944")]
		[Address(RVA = "0xD15AF8", Offset = "0xD15AF8", VA = "0xD15AF8")]
		private static extern ulong ovr_CloudStorage_Save_Native(IntPtr bucket, IntPtr key, byte[] data, uint dataSize, long counter, IntPtr extraData);

		[PreserveSig]
		[Token(Token = "0x6001945")]
		[Address(RVA = "0xD15BE0", Offset = "0xD15BE0", VA = "0xD15BE0")]
		public static extern ulong ovr_CloudStorage2_GetUserDirectoryPath();

		[PreserveSig]
		[Token(Token = "0x6001946")]
		[Address(RVA = "0xD15C70", Offset = "0xD15C70", VA = "0xD15C70")]
		public static extern ulong ovr_Entitlement_GetIsViewerEntitled();

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xD15D00", Offset = "0xD15D00", VA = "0xD15D00")]
		public static ulong ovr_GraphAPI_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001948")]
		[Address(RVA = "0xD15DA8", Offset = "0xD15DA8", VA = "0xD15DA8")]
		private static extern ulong ovr_GraphAPI_Get_Native(IntPtr url);

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xD15E48", Offset = "0xD15E48", VA = "0xD15E48")]
		public static ulong ovr_GraphAPI_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600194A")]
		[Address(RVA = "0xD15EF0", Offset = "0xD15EF0", VA = "0xD15EF0")]
		private static extern ulong ovr_GraphAPI_Post_Native(IntPtr url);

		[Token(Token = "0x600194B")]
		[Address(RVA = "0xD15F8C", Offset = "0xD15F8C", VA = "0xD15F8C")]
		public static ulong ovr_HTTP_Get(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600194C")]
		[Address(RVA = "0xD16034", Offset = "0xD16034", VA = "0xD16034")]
		private static extern ulong ovr_HTTP_Get_Native(IntPtr url);

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xD160D4", Offset = "0xD160D4", VA = "0xD160D4")]
		public static ulong ovr_HTTP_GetToFile(string url, string diskFile)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600194E")]
		[Address(RVA = "0xD161A8", Offset = "0xD161A8", VA = "0xD161A8")]
		private static extern ulong ovr_HTTP_GetToFile_Native(IntPtr url, IntPtr diskFile);

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xD16258", Offset = "0xD16258", VA = "0xD16258")]
		public static ulong ovr_HTTP_MultiPartPost(string url, string filepath_param_name, string filepath, string access_token, ovrKeyValuePair[] post_params)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001950")]
		[Address(RVA = "0xD163B8", Offset = "0xD163B8", VA = "0xD163B8")]
		private static extern ulong ovr_HTTP_MultiPartPost_Native(IntPtr url, IntPtr filepath_param_name, IntPtr filepath, IntPtr access_token, ovrKeyValuePair[] post_params, UIntPtr numItems);

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xD16564", Offset = "0xD16564", VA = "0xD16564")]
		public static ulong ovr_HTTP_Post(string url)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001952")]
		[Address(RVA = "0xD1660C", Offset = "0xD1660C", VA = "0xD1660C")]
		private static extern ulong ovr_HTTP_Post_Native(IntPtr url);

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xD166AC", Offset = "0xD166AC", VA = "0xD166AC")]
		public static ulong ovr_IAP_ConsumePurchase(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001954")]
		[Address(RVA = "0xD16754", Offset = "0xD16754", VA = "0xD16754")]
		private static extern ulong ovr_IAP_ConsumePurchase_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6001955")]
		[Address(RVA = "0xD167F4", Offset = "0xD167F4", VA = "0xD167F4")]
		public static extern ulong ovr_IAP_GetProductsBySKU(string[] skus, int count);

		[PreserveSig]
		[Token(Token = "0x6001956")]
		[Address(RVA = "0xD16964", Offset = "0xD16964", VA = "0xD16964")]
		public static extern ulong ovr_IAP_GetViewerPurchases();

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xD169F4", Offset = "0xD169F4", VA = "0xD169F4")]
		public static ulong ovr_IAP_LaunchCheckoutFlow(string sku)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001958")]
		[Address(RVA = "0xD16A9C", Offset = "0xD16A9C", VA = "0xD16A9C")]
		private static extern ulong ovr_IAP_LaunchCheckoutFlow_Native(IntPtr sku);

		[PreserveSig]
		[Token(Token = "0x6001959")]
		[Address(RVA = "0xD16B3C", Offset = "0xD16B3C", VA = "0xD16B3C")]
		public static extern ulong ovr_LanguagePack_GetCurrent();

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xD16BCC", Offset = "0xD16BCC", VA = "0xD16BCC")]
		public static ulong ovr_LanguagePack_SetCurrent(string tag)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600195B")]
		[Address(RVA = "0xD16C74", Offset = "0xD16C74", VA = "0xD16C74")]
		private static extern ulong ovr_LanguagePack_SetCurrent_Native(IntPtr tag);

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xD16D14", Offset = "0xD16D14", VA = "0xD16D14")]
		public static ulong ovr_Leaderboard_GetEntries(string leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600195D")]
		[Address(RVA = "0xD16DE4", Offset = "0xD16DE4", VA = "0xD16DE4")]
		private static extern ulong ovr_Leaderboard_GetEntries_Native(IntPtr leaderboardName, int limit, LeaderboardFilterType filter, LeaderboardStartAt startAt);

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xD16EAC", Offset = "0xD16EAC", VA = "0xD16EAC")]
		public static ulong ovr_Leaderboard_GetEntriesAfterRank(string leaderboardName, int limit, ulong afterRank)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600195F")]
		[Address(RVA = "0xD16F6C", Offset = "0xD16F6C", VA = "0xD16F6C")]
		private static extern ulong ovr_Leaderboard_GetEntriesAfterRank_Native(IntPtr leaderboardName, int limit, ulong afterRank);

		[PreserveSig]
		[Token(Token = "0x6001960")]
		[Address(RVA = "0xD17024", Offset = "0xD17024", VA = "0xD17024")]
		public static extern ulong ovr_Leaderboard_GetNextEntries(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001961")]
		[Address(RVA = "0xD170C4", Offset = "0xD170C4", VA = "0xD170C4")]
		public static extern ulong ovr_Leaderboard_GetPreviousEntries(IntPtr handle);

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xD17164", Offset = "0xD17164", VA = "0xD17164")]
		public static ulong ovr_Leaderboard_WriteEntry(string leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001963")]
		[Address(RVA = "0xD1723C", Offset = "0xD1723C", VA = "0xD1723C")]
		private static extern ulong ovr_Leaderboard_WriteEntry_Native(IntPtr leaderboardName, long score, byte[] extraData, uint extraDataLength, bool forceUpdate);

		[PreserveSig]
		[Token(Token = "0x6001964")]
		[Address(RVA = "0xD17314", Offset = "0xD17314", VA = "0xD17314")]
		public static extern ulong ovr_Livestreaming_GetStatus();

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xD173A4", Offset = "0xD173A4", VA = "0xD173A4")]
		public static ulong ovr_Livestreaming_IsAllowedForApplication(string packageName)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001966")]
		[Address(RVA = "0xD1744C", Offset = "0xD1744C", VA = "0xD1744C")]
		private static extern ulong ovr_Livestreaming_IsAllowedForApplication_Native(IntPtr packageName);

		[PreserveSig]
		[Token(Token = "0x6001967")]
		[Address(RVA = "0xD174EC", Offset = "0xD174EC", VA = "0xD174EC")]
		public static extern ulong ovr_Livestreaming_PauseStream();

		[PreserveSig]
		[Token(Token = "0x6001968")]
		[Address(RVA = "0xD1757C", Offset = "0xD1757C", VA = "0xD1757C")]
		public static extern ulong ovr_Livestreaming_ResumeStream();

		[PreserveSig]
		[Token(Token = "0x6001969")]
		[Address(RVA = "0xD1760C", Offset = "0xD1760C", VA = "0xD1760C")]
		public static extern ulong ovr_Livestreaming_StartPartyStream();

		[PreserveSig]
		[Token(Token = "0x600196A")]
		[Address(RVA = "0xD1769C", Offset = "0xD1769C", VA = "0xD1769C")]
		public static extern ulong ovr_Livestreaming_StartStream(LivestreamingAudience audience, LivestreamingMicrophoneStatus micStatus);

		[PreserveSig]
		[Token(Token = "0x600196B")]
		[Address(RVA = "0xD1774C", Offset = "0xD1774C", VA = "0xD1774C")]
		public static extern ulong ovr_Livestreaming_StopPartyStream();

		[PreserveSig]
		[Token(Token = "0x600196C")]
		[Address(RVA = "0xD177DC", Offset = "0xD177DC", VA = "0xD177DC")]
		public static extern ulong ovr_Livestreaming_StopStream();

		[PreserveSig]
		[Token(Token = "0x600196D")]
		[Address(RVA = "0xD1786C", Offset = "0xD1786C", VA = "0xD1786C")]
		public static extern ulong ovr_Livestreaming_UpdateCommentsOverlayVisibility(bool isVisible);

		[PreserveSig]
		[Token(Token = "0x600196E")]
		[Address(RVA = "0xD1790C", Offset = "0xD1790C", VA = "0xD1790C")]
		public static extern ulong ovr_Livestreaming_UpdateMicStatus(LivestreamingMicrophoneStatus micStatus);

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xD179AC", Offset = "0xD179AC", VA = "0xD179AC")]
		public static ulong ovr_Matchmaking_Browse(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001970")]
		[Address(RVA = "0xD17A64", Offset = "0xD17A64", VA = "0xD17A64")]
		private static extern ulong ovr_Matchmaking_Browse_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xD17B14", Offset = "0xD17B14", VA = "0xD17B14")]
		public static ulong ovr_Matchmaking_Browse2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001972")]
		[Address(RVA = "0xD17BCC", Offset = "0xD17BCC", VA = "0xD17BCC")]
		private static extern ulong ovr_Matchmaking_Browse2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xD17C7C", Offset = "0xD17C7C", VA = "0xD17C7C")]
		public static ulong ovr_Matchmaking_Cancel(string pool, string requestHash)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001974")]
		[Address(RVA = "0xD17D50", Offset = "0xD17D50", VA = "0xD17D50")]
		private static extern ulong ovr_Matchmaking_Cancel_Native(IntPtr pool, IntPtr requestHash);

		[PreserveSig]
		[Token(Token = "0x6001975")]
		[Address(RVA = "0xD17E00", Offset = "0xD17E00", VA = "0xD17E00")]
		public static extern ulong ovr_Matchmaking_Cancel2();

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xD17E90", Offset = "0xD17E90", VA = "0xD17E90")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom(string pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001977")]
		[Address(RVA = "0xD17F60", Offset = "0xD17F60", VA = "0xD17F60")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates, IntPtr customQueryData);

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xD18028", Offset = "0xD18028", VA = "0xD18028")]
		public static ulong ovr_Matchmaking_CreateAndEnqueueRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001979")]
		[Address(RVA = "0xD180E0", Offset = "0xD180E0", VA = "0xD180E0")]
		private static extern ulong ovr_Matchmaking_CreateAndEnqueueRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xD18190", Offset = "0xD18190", VA = "0xD18190")]
		public static ulong ovr_Matchmaking_CreateRoom(string pool, uint maxUsers, bool subscribeToUpdates)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600197B")]
		[Address(RVA = "0xD18250", Offset = "0xD18250", VA = "0xD18250")]
		private static extern ulong ovr_Matchmaking_CreateRoom_Native(IntPtr pool, uint maxUsers, bool subscribeToUpdates);

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xD18308", Offset = "0xD18308", VA = "0xD18308")]
		public static ulong ovr_Matchmaking_CreateRoom2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600197D")]
		[Address(RVA = "0xD183C0", Offset = "0xD183C0", VA = "0xD183C0")]
		private static extern ulong ovr_Matchmaking_CreateRoom2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xD18470", Offset = "0xD18470", VA = "0xD18470")]
		public static ulong ovr_Matchmaking_Enqueue(string pool, IntPtr customQueryData)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600197F")]
		[Address(RVA = "0xD18528", Offset = "0xD18528", VA = "0xD18528")]
		private static extern ulong ovr_Matchmaking_Enqueue_Native(IntPtr pool, IntPtr customQueryData);

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xD185D8", Offset = "0xD185D8", VA = "0xD185D8")]
		public static ulong ovr_Matchmaking_Enqueue2(string pool, IntPtr matchmakingOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001981")]
		[Address(RVA = "0xD18690", Offset = "0xD18690", VA = "0xD18690")]
		private static extern ulong ovr_Matchmaking_Enqueue2_Native(IntPtr pool, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6001982")]
		[Address(RVA = "0xD18740", Offset = "0xD18740", VA = "0xD18740")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom(ulong roomID, IntPtr customQueryData);

		[PreserveSig]
		[Token(Token = "0x6001983")]
		[Address(RVA = "0xD187F0", Offset = "0xD187F0", VA = "0xD187F0")]
		public static extern ulong ovr_Matchmaking_EnqueueRoom2(ulong roomID, IntPtr matchmakingOptions);

		[PreserveSig]
		[Token(Token = "0x6001984")]
		[Address(RVA = "0xD188A0", Offset = "0xD188A0", VA = "0xD188A0")]
		public static extern ulong ovr_Matchmaking_GetAdminSnapshot();

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xD18930", Offset = "0xD18930", VA = "0xD18930")]
		public static ulong ovr_Matchmaking_GetStats(string pool, uint maxLevel, MatchmakingStatApproach approach)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001986")]
		[Address(RVA = "0xD189F0", Offset = "0xD189F0", VA = "0xD189F0")]
		private static extern ulong ovr_Matchmaking_GetStats_Native(IntPtr pool, uint maxLevel, MatchmakingStatApproach approach);

		[PreserveSig]
		[Token(Token = "0x6001987")]
		[Address(RVA = "0xD18AA8", Offset = "0xD18AA8", VA = "0xD18AA8")]
		public static extern ulong ovr_Matchmaking_JoinRoom(ulong roomID, bool subscribeToUpdates);

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xD18B58", Offset = "0xD18B58", VA = "0xD18B58")]
		public static ulong ovr_Matchmaking_ReportResultInsecure(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x6001989")]
		[Address(RVA = "0xD18C10", Offset = "0xD18C10", VA = "0xD18C10")]
		private static extern ulong ovr_Matchmaking_ReportResultInsecure_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x600198A")]
		[Address(RVA = "0xD18D8C", Offset = "0xD18D8C", VA = "0xD18D8C")]
		public static extern ulong ovr_Matchmaking_StartMatch(ulong roomID);

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xD18E2C", Offset = "0xD18E2C", VA = "0xD18E2C")]
		public static ulong ovr_Media_ShareToFacebook(string postTextSuggestion, string filePath, MediaContentType contentType)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x600198C")]
		[Address(RVA = "0xD18F08", Offset = "0xD18F08", VA = "0xD18F08")]
		private static extern ulong ovr_Media_ShareToFacebook_Native(IntPtr postTextSuggestion, IntPtr filePath, MediaContentType contentType);

		[PreserveSig]
		[Token(Token = "0x600198D")]
		[Address(RVA = "0xD18FC0", Offset = "0xD18FC0", VA = "0xD18FC0")]
		public static extern ulong ovr_Notification_GetRoomInvites();

		[PreserveSig]
		[Token(Token = "0x600198E")]
		[Address(RVA = "0xD19050", Offset = "0xD19050", VA = "0xD19050")]
		public static extern ulong ovr_Notification_MarkAsRead(ulong notificationID);

		[PreserveSig]
		[Token(Token = "0x600198F")]
		[Address(RVA = "0xD190F0", Offset = "0xD190F0", VA = "0xD190F0")]
		public static extern ulong ovr_Party_Create();

		[PreserveSig]
		[Token(Token = "0x6001990")]
		[Address(RVA = "0xD19180", Offset = "0xD19180", VA = "0xD19180")]
		public static extern ulong ovr_Party_GatherInApplication(ulong partyID, ulong appID);

		[PreserveSig]
		[Token(Token = "0x6001991")]
		[Address(RVA = "0xD19230", Offset = "0xD19230", VA = "0xD19230")]
		public static extern ulong ovr_Party_Get(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6001992")]
		[Address(RVA = "0xD192D0", Offset = "0xD192D0", VA = "0xD192D0")]
		public static extern ulong ovr_Party_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x6001993")]
		[Address(RVA = "0xD19360", Offset = "0xD19360", VA = "0xD19360")]
		public static extern ulong ovr_Party_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001994")]
		[Address(RVA = "0xD19400", Offset = "0xD19400", VA = "0xD19400")]
		public static extern ulong ovr_Party_Invite(ulong partyID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001995")]
		[Address(RVA = "0xD194AC", Offset = "0xD194AC", VA = "0xD194AC")]
		public static extern ulong ovr_Party_Join(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6001996")]
		[Address(RVA = "0xD1954C", Offset = "0xD1954C", VA = "0xD1954C")]
		public static extern ulong ovr_Party_Leave(ulong partyID);

		[PreserveSig]
		[Token(Token = "0x6001997")]
		[Address(RVA = "0xD195EC", Offset = "0xD195EC", VA = "0xD195EC")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate(RoomJoinPolicy joinPolicy, uint maxUsers, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x6001998")]
		[Address(RVA = "0xD196A4", Offset = "0xD196A4", VA = "0xD196A4")]
		public static extern ulong ovr_Room_CreateAndJoinPrivate2(RoomJoinPolicy joinPolicy, uint maxUsers, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x6001999")]
		[Address(RVA = "0xD1975C", Offset = "0xD1975C", VA = "0xD1975C")]
		public static extern ulong ovr_Room_Get(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x600199A")]
		[Address(RVA = "0xD197FC", Offset = "0xD197FC", VA = "0xD197FC")]
		public static extern ulong ovr_Room_GetCurrent();

		[PreserveSig]
		[Token(Token = "0x600199B")]
		[Address(RVA = "0xD1988C", Offset = "0xD1988C", VA = "0xD1988C")]
		public static extern ulong ovr_Room_GetCurrentForUser(ulong userID);

		[PreserveSig]
		[Token(Token = "0x600199C")]
		[Address(RVA = "0xD1992C", Offset = "0xD1992C", VA = "0xD1992C")]
		public static extern ulong ovr_Room_GetInvitableUsers();

		[PreserveSig]
		[Token(Token = "0x600199D")]
		[Address(RVA = "0xD199BC", Offset = "0xD199BC", VA = "0xD199BC")]
		public static extern ulong ovr_Room_GetInvitableUsers2(IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x600199E")]
		[Address(RVA = "0xD19A5C", Offset = "0xD19A5C", VA = "0xD19A5C")]
		public static extern ulong ovr_Room_GetModeratedRooms();

		[PreserveSig]
		[Token(Token = "0x600199F")]
		[Address(RVA = "0xD19AEC", Offset = "0xD19AEC", VA = "0xD19AEC")]
		public static extern ulong ovr_Room_GetSocialRooms(ulong appID);

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xD19B8C", Offset = "0xD19B8C", VA = "0xD19B8C")]
		public static ulong ovr_Room_InviteUser(ulong roomID, string inviteToken)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xD19C48", Offset = "0xD19C48", VA = "0xD19C48")]
		private static extern ulong ovr_Room_InviteUser_Native(ulong roomID, IntPtr inviteToken);

		[PreserveSig]
		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xD19CF8", Offset = "0xD19CF8", VA = "0xD19CF8")]
		public static extern ulong ovr_Room_Join(ulong roomID, bool subscribeToUpdates);

		[PreserveSig]
		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xD19DA8", Offset = "0xD19DA8", VA = "0xD19DA8")]
		public static extern ulong ovr_Room_Join2(ulong roomID, IntPtr roomOptions);

		[PreserveSig]
		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xD19E58", Offset = "0xD19E58", VA = "0xD19E58")]
		public static extern ulong ovr_Room_KickUser(ulong roomID, ulong userID, int kickDurationSeconds);

		[PreserveSig]
		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xD19F0C", Offset = "0xD19F0C", VA = "0xD19F0C")]
		public static extern ulong ovr_Room_LaunchInvitableUserFlow(ulong roomID);

		[PreserveSig]
		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xD19FAC", Offset = "0xD19FAC", VA = "0xD19FAC")]
		public static extern ulong ovr_Room_Leave(ulong roomID);

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xD1A04C", Offset = "0xD1A04C", VA = "0xD1A04C")]
		public static ulong ovr_Room_SetDescription(ulong roomID, string description)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xD1A108", Offset = "0xD1A108", VA = "0xD1A108")]
		private static extern ulong ovr_Room_SetDescription_Native(ulong roomID, IntPtr description);

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xD1A1B8", Offset = "0xD1A1B8", VA = "0xD1A1B8")]
		public static ulong ovr_Room_UpdateDataStore(ulong roomID, ovrKeyValuePair[] data)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xD1A270", Offset = "0xD1A270", VA = "0xD1A270")]
		private static extern ulong ovr_Room_UpdateDataStore_Native(ulong roomID, ovrKeyValuePair[] data, UIntPtr numItems);

		[PreserveSig]
		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xD1A3E8", Offset = "0xD1A3E8", VA = "0xD1A3E8")]
		public static extern ulong ovr_Room_UpdateMembershipLockStatus(ulong roomID, RoomMembershipLockStatus membershipLockStatus);

		[PreserveSig]
		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xD1A498", Offset = "0xD1A498", VA = "0xD1A498")]
		public static extern ulong ovr_Room_UpdateOwner(ulong roomID, ulong userID);

		[PreserveSig]
		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xD1A548", Offset = "0xD1A548", VA = "0xD1A548")]
		public static extern ulong ovr_Room_UpdatePrivateRoomJoinPolicy(ulong roomID, RoomJoinPolicy newJoinPolicy);

		[PreserveSig]
		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xD1A5F8", Offset = "0xD1A5F8", VA = "0xD1A5F8")]
		public static extern ulong ovr_SystemPermissions_GetStatus(PermissionType permType);

		[PreserveSig]
		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xD1A698", Offset = "0xD1A698", VA = "0xD1A698")]
		public static extern ulong ovr_SystemPermissions_LaunchDeeplink(PermissionType permType);

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xD1A738", Offset = "0xD1A738", VA = "0xD1A738")]
		public static ulong ovr_User_CancelRecordingForReportFlow(string recordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xD1A7E0", Offset = "0xD1A7E0", VA = "0xD1A7E0")]
		private static extern ulong ovr_User_CancelRecordingForReportFlow_Native(IntPtr recordingUUID);

		[PreserveSig]
		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xD1A880", Offset = "0xD1A880", VA = "0xD1A880")]
		public static extern ulong ovr_User_Get(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xD1A920", Offset = "0xD1A920", VA = "0xD1A920")]
		public static extern ulong ovr_User_GetAccessToken();

		[PreserveSig]
		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xD1A9B0", Offset = "0xD1A9B0", VA = "0xD1A9B0")]
		public static extern ulong ovr_User_GetLinkedAccounts(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xD1AA50", Offset = "0xD1AA50", VA = "0xD1AA50")]
		public static extern ulong ovr_User_GetLoggedInUser();

		[PreserveSig]
		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xD1AAE0", Offset = "0xD1AAE0", VA = "0xD1AAE0")]
		public static extern ulong ovr_User_GetLoggedInUserFriends();

		[PreserveSig]
		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xD1AB70", Offset = "0xD1AB70", VA = "0xD1AB70")]
		public static extern ulong ovr_User_GetLoggedInUserFriendsAndRooms();

		[PreserveSig]
		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xD1AC00", Offset = "0xD1AC00", VA = "0xD1AC00")]
		public static extern ulong ovr_User_GetLoggedInUserRecentlyMetUsersAndRooms(IntPtr userOptions);

		[PreserveSig]
		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xD1ACA0", Offset = "0xD1ACA0", VA = "0xD1ACA0")]
		public static extern ulong ovr_User_GetOrgScopedID(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xD1AD40", Offset = "0xD1AD40", VA = "0xD1AD40")]
		public static extern ulong ovr_User_GetSdkAccounts();

		[PreserveSig]
		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xD1ADD0", Offset = "0xD1ADD0", VA = "0xD1ADD0")]
		public static extern ulong ovr_User_GetUserProof();

		[PreserveSig]
		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xD1AE60", Offset = "0xD1AE60", VA = "0xD1AE60")]
		public static extern ulong ovr_User_LaunchBlockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xD1AF00", Offset = "0xD1AF00", VA = "0xD1AF00")]
		public static extern ulong ovr_User_LaunchFriendRequestFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xD1AFA0", Offset = "0xD1AFA0", VA = "0xD1AFA0")]
		public static extern ulong ovr_User_LaunchProfile(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xD1B040", Offset = "0xD1B040", VA = "0xD1B040")]
		public static extern ulong ovr_User_LaunchReportFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xD1B0E0", Offset = "0xD1B0E0", VA = "0xD1B0E0")]
		public static extern ulong ovr_User_LaunchReportFlow2(ulong optionalUserID, IntPtr abuseReportOptions);

		[PreserveSig]
		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xD1B190", Offset = "0xD1B190", VA = "0xD1B190")]
		public static extern ulong ovr_User_LaunchUnblockFlow(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xD1B230", Offset = "0xD1B230", VA = "0xD1B230")]
		public static extern ulong ovr_User_NewEntitledTestUser();

		[PreserveSig]
		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xD1B2C0", Offset = "0xD1B2C0", VA = "0xD1B2C0")]
		public static extern ulong ovr_User_NewTestUser();

		[PreserveSig]
		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xD1B350", Offset = "0xD1B350", VA = "0xD1B350")]
		public static extern ulong ovr_User_NewTestUserFriends();

		[PreserveSig]
		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xD1B3E0", Offset = "0xD1B3E0", VA = "0xD1B3E0")]
		public static extern ulong ovr_User_StartRecordingForReportFlow();

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xD1B470", Offset = "0xD1B470", VA = "0xD1B470")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow(ulong optionalUserID, string optionalRecordingUUID)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xD1B52C", Offset = "0xD1B52C", VA = "0xD1B52C")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow_Native(ulong optionalUserID, IntPtr optionalRecordingUUID);

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xD1B5DC", Offset = "0xD1B5DC", VA = "0xD1B5DC")]
		public static ulong ovr_User_StopRecordingAndLaunchReportFlow2(ulong optionalUserID, string optionalRecordingUUID, IntPtr abuseReportOptions)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xD1B6A0", Offset = "0xD1B6A0", VA = "0xD1B6A0")]
		private static extern ulong ovr_User_StopRecordingAndLaunchReportFlow2_Native(ulong optionalUserID, IntPtr optionalRecordingUUID, IntPtr abuseReportOptions);

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xD1B758", Offset = "0xD1B758", VA = "0xD1B758")]
		public static ulong ovr_User_TestUserCreateDeviceManifest(string deviceID, ulong[] appIDs, int numAppIDs)
		{
			return default(ulong);
		}

		[PreserveSig]
		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xD1B818", Offset = "0xD1B818", VA = "0xD1B818")]
		private static extern ulong ovr_User_TestUserCreateDeviceManifest_Native(IntPtr deviceID, ulong[] appIDs, int numAppIDs);

		[PreserveSig]
		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xD1B8D8", Offset = "0xD1B8D8", VA = "0xD1B8D8")]
		public static extern ulong ovr_Voip_SetSystemVoipSuppressed(bool suppressed);

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xD1B978", Offset = "0xD1B978", VA = "0xD1B978")]
		public static string ovr_AbuseReportRecording_GetRecordingUuid(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xD1B9E0", Offset = "0xD1B9E0", VA = "0xD1B9E0")]
		private static extern IntPtr ovr_AbuseReportRecording_GetRecordingUuid_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xD1BA80", Offset = "0xD1BA80", VA = "0xD1BA80")]
		public static extern uint ovr_AchievementDefinition_GetBitfieldLength(IntPtr obj);

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xD1BB20", Offset = "0xD1BB20", VA = "0xD1BB20")]
		public static string ovr_AchievementDefinition_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xD1BB88", Offset = "0xD1BB88", VA = "0xD1BB88")]
		private static extern IntPtr ovr_AchievementDefinition_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xD1BC28", Offset = "0xD1BC28", VA = "0xD1BC28")]
		public static extern ulong ovr_AchievementDefinition_GetTarget(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xD1BCC8", Offset = "0xD1BCC8", VA = "0xD1BCC8")]
		public static extern AchievementType ovr_AchievementDefinition_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xD1BD68", Offset = "0xD1BD68", VA = "0xD1BD68")]
		public static extern IntPtr ovr_AchievementDefinitionArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xD1BE18", Offset = "0xD1BE18", VA = "0xD1BE18")]
		public static string ovr_AchievementDefinitionArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xD1BE80", Offset = "0xD1BE80", VA = "0xD1BE80")]
		private static extern IntPtr ovr_AchievementDefinitionArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xD1BF20", Offset = "0xD1BF20", VA = "0xD1BF20")]
		public static extern UIntPtr ovr_AchievementDefinitionArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xD1BFC0", Offset = "0xD1BFC0", VA = "0xD1BFC0")]
		public static extern bool ovr_AchievementDefinitionArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xD1C068", Offset = "0xD1C068", VA = "0xD1C068")]
		public static string ovr_AchievementProgress_GetBitfield(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xD1C0D0", Offset = "0xD1C0D0", VA = "0xD1C0D0")]
		private static extern IntPtr ovr_AchievementProgress_GetBitfield_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xD1C170", Offset = "0xD1C170", VA = "0xD1C170")]
		public static extern ulong ovr_AchievementProgress_GetCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xD1C210", Offset = "0xD1C210", VA = "0xD1C210")]
		public static extern bool ovr_AchievementProgress_GetIsUnlocked(IntPtr obj);

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xD1C2B8", Offset = "0xD1C2B8", VA = "0xD1C2B8")]
		public static string ovr_AchievementProgress_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xD1C320", Offset = "0xD1C320", VA = "0xD1C320")]
		private static extern IntPtr ovr_AchievementProgress_GetName_Native(IntPtr obj);

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xD1C3C0", Offset = "0xD1C3C0", VA = "0xD1C3C0")]
		public static DateTime ovr_AchievementProgress_GetUnlockTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xD1C428", Offset = "0xD1C428", VA = "0xD1C428")]
		private static extern ulong ovr_AchievementProgress_GetUnlockTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xD1C4C8", Offset = "0xD1C4C8", VA = "0xD1C4C8")]
		public static extern IntPtr ovr_AchievementProgressArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xD1C578", Offset = "0xD1C578", VA = "0xD1C578")]
		public static string ovr_AchievementProgressArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xD1C5E0", Offset = "0xD1C5E0", VA = "0xD1C5E0")]
		private static extern IntPtr ovr_AchievementProgressArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xD1C680", Offset = "0xD1C680", VA = "0xD1C680")]
		public static extern UIntPtr ovr_AchievementProgressArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xD1C720", Offset = "0xD1C720", VA = "0xD1C720")]
		public static extern bool ovr_AchievementProgressArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xD1C7C8", Offset = "0xD1C7C8", VA = "0xD1C7C8")]
		public static extern bool ovr_AchievementUpdate_GetJustUnlocked(IntPtr obj);

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xD1C870", Offset = "0xD1C870", VA = "0xD1C870")]
		public static string ovr_AchievementUpdate_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xD1C8D8", Offset = "0xD1C8D8", VA = "0xD1C8D8")]
		private static extern IntPtr ovr_AchievementUpdate_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xD1C978", Offset = "0xD1C978", VA = "0xD1C978")]
		public static extern ulong ovr_Application_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xD1CA18", Offset = "0xD1CA18", VA = "0xD1CA18")]
		public static extern int ovr_ApplicationVersion_GetCurrentCode(IntPtr obj);

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xD1CAB8", Offset = "0xD1CAB8", VA = "0xD1CAB8")]
		public static string ovr_ApplicationVersion_GetCurrentName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xD1CB20", Offset = "0xD1CB20", VA = "0xD1CB20")]
		private static extern IntPtr ovr_ApplicationVersion_GetCurrentName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xD1CBC0", Offset = "0xD1CBC0", VA = "0xD1CBC0")]
		public static extern int ovr_ApplicationVersion_GetLatestCode(IntPtr obj);

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xD1CC60", Offset = "0xD1CC60", VA = "0xD1CC60")]
		public static string ovr_ApplicationVersion_GetLatestName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xD1CCC8", Offset = "0xD1CCC8", VA = "0xD1CCC8")]
		private static extern IntPtr ovr_ApplicationVersion_GetLatestName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xD1CD68", Offset = "0xD1CD68", VA = "0xD1CD68")]
		public static extern ulong ovr_AssetDetails_GetAssetId(IntPtr obj);

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xD1CE08", Offset = "0xD1CE08", VA = "0xD1CE08")]
		public static string ovr_AssetDetails_GetAssetType(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xD1CE70", Offset = "0xD1CE70", VA = "0xD1CE70")]
		private static extern IntPtr ovr_AssetDetails_GetAssetType_Native(IntPtr obj);

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xD1CF10", Offset = "0xD1CF10", VA = "0xD1CF10")]
		public static string ovr_AssetDetails_GetDownloadStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xD1CF78", Offset = "0xD1CF78", VA = "0xD1CF78")]
		private static extern IntPtr ovr_AssetDetails_GetDownloadStatus_Native(IntPtr obj);

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xD1D018", Offset = "0xD1D018", VA = "0xD1D018")]
		public static string ovr_AssetDetails_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xD1D080", Offset = "0xD1D080", VA = "0xD1D080")]
		private static extern IntPtr ovr_AssetDetails_GetFilepath_Native(IntPtr obj);

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xD1D120", Offset = "0xD1D120", VA = "0xD1D120")]
		public static string ovr_AssetDetails_GetIapStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xD1D188", Offset = "0xD1D188", VA = "0xD1D188")]
		private static extern IntPtr ovr_AssetDetails_GetIapStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xD1D228", Offset = "0xD1D228", VA = "0xD1D228")]
		public static extern IntPtr ovr_AssetDetails_GetLanguage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xD1D2C8", Offset = "0xD1D2C8", VA = "0xD1D2C8")]
		public static extern IntPtr ovr_AssetDetailsArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xD1D378", Offset = "0xD1D378", VA = "0xD1D378")]
		public static extern UIntPtr ovr_AssetDetailsArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xD1D418", Offset = "0xD1D418", VA = "0xD1D418")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xD1D4B8", Offset = "0xD1D4B8", VA = "0xD1D4B8")]
		public static extern ulong ovr_AssetFileDeleteResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xD1D558", Offset = "0xD1D558", VA = "0xD1D558")]
		public static string ovr_AssetFileDeleteResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xD1D5C0", Offset = "0xD1D5C0", VA = "0xD1D5C0")]
		private static extern IntPtr ovr_AssetFileDeleteResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xD1D660", Offset = "0xD1D660", VA = "0xD1D660")]
		public static extern bool ovr_AssetFileDeleteResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xD1D708", Offset = "0xD1D708", VA = "0xD1D708")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xD1D7A8", Offset = "0xD1D7A8", VA = "0xD1D7A8")]
		public static extern ulong ovr_AssetFileDownloadCancelResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xD1D848", Offset = "0xD1D848", VA = "0xD1D848")]
		public static string ovr_AssetFileDownloadCancelResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xD1D8B0", Offset = "0xD1D8B0", VA = "0xD1D8B0")]
		private static extern IntPtr ovr_AssetFileDownloadCancelResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xD1D950", Offset = "0xD1D950", VA = "0xD1D950")]
		public static extern bool ovr_AssetFileDownloadCancelResult_GetSuccess(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xD1D9F8", Offset = "0xD1D9F8", VA = "0xD1D9F8")]
		public static extern ulong ovr_AssetFileDownloadResult_GetAssetId(IntPtr obj);

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xD1DA98", Offset = "0xD1DA98", VA = "0xD1DA98")]
		public static string ovr_AssetFileDownloadResult_GetFilepath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A08")]
		[Address(RVA = "0xD1DB00", Offset = "0xD1DB00", VA = "0xD1DB00")]
		private static extern IntPtr ovr_AssetFileDownloadResult_GetFilepath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A09")]
		[Address(RVA = "0xD1DBA0", Offset = "0xD1DBA0", VA = "0xD1DBA0")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetFileId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xD1DC40", Offset = "0xD1DC40", VA = "0xD1DC40")]
		public static extern ulong ovr_AssetFileDownloadUpdate_GetAssetId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xD1DCE0", Offset = "0xD1DCE0", VA = "0xD1DCE0")]
		public static extern uint ovr_AssetFileDownloadUpdate_GetBytesTotal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xD1DD80", Offset = "0xD1DD80", VA = "0xD1DD80")]
		public static extern int ovr_AssetFileDownloadUpdate_GetBytesTransferred(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xD1DE20", Offset = "0xD1DE20", VA = "0xD1DE20")]
		public static extern bool ovr_AssetFileDownloadUpdate_GetCompleted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xD1DEC8", Offset = "0xD1DEC8", VA = "0xD1DEC8")]
		public static extern int ovr_CalApplicationFinalized_GetCountdownMS(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xD1DF68", Offset = "0xD1DF68", VA = "0xD1DF68")]
		public static extern ulong ovr_CalApplicationFinalized_GetID(IntPtr obj);

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xD1E008", Offset = "0xD1E008", VA = "0xD1E008")]
		public static string ovr_CalApplicationFinalized_GetLaunchDetails(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xD1E070", Offset = "0xD1E070", VA = "0xD1E070")]
		private static extern IntPtr ovr_CalApplicationFinalized_GetLaunchDetails_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xD1E110", Offset = "0xD1E110", VA = "0xD1E110")]
		public static extern ulong ovr_CalApplicationProposed_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xD1E1B0", Offset = "0xD1E1B0", VA = "0xD1E1B0")]
		public static extern ulong ovr_CalApplicationSuggestion_GetID(IntPtr obj);

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xD1E250", Offset = "0xD1E250", VA = "0xD1E250")]
		public static string ovr_CalApplicationSuggestion_GetSocialContext(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xD1E2B8", Offset = "0xD1E2B8", VA = "0xD1E2B8")]
		private static extern IntPtr ovr_CalApplicationSuggestion_GetSocialContext_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xD1E358", Offset = "0xD1E358", VA = "0xD1E358")]
		public static extern IntPtr ovr_CalApplicationSuggestionArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xD1E408", Offset = "0xD1E408", VA = "0xD1E408")]
		public static extern UIntPtr ovr_CalApplicationSuggestionArray_GetSize(IntPtr obj);

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xD1E4A8", Offset = "0xD1E4A8", VA = "0xD1E4A8")]
		public static string ovr_CloudStorage2UserDirectoryPathResponse_GetPath(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xD1E510", Offset = "0xD1E510", VA = "0xD1E510")]
		private static extern IntPtr ovr_CloudStorage2UserDirectoryPathResponse_GetPath_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xD1E5B0", Offset = "0xD1E5B0", VA = "0xD1E5B0")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetLocal(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xD1E650", Offset = "0xD1E650", VA = "0xD1E650")]
		public static extern IntPtr ovr_CloudStorageConflictMetadata_GetRemote(IntPtr obj);

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xD1E6F0", Offset = "0xD1E6F0", VA = "0xD1E6F0")]
		public static string ovr_CloudStorageData_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xD1E758", Offset = "0xD1E758", VA = "0xD1E758")]
		private static extern IntPtr ovr_CloudStorageData_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xD1E7F8", Offset = "0xD1E7F8", VA = "0xD1E7F8")]
		public static byte[] ovr_CloudStorageData_GetData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xD1E914", Offset = "0xD1E914", VA = "0xD1E914")]
		private static extern IntPtr ovr_CloudStorageData_GetData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xD1E874", Offset = "0xD1E874", VA = "0xD1E874")]
		public static extern uint ovr_CloudStorageData_GetDataSize(IntPtr obj);

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xD1E9B4", Offset = "0xD1E9B4", VA = "0xD1E9B4")]
		public static string ovr_CloudStorageData_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xD1EA1C", Offset = "0xD1EA1C", VA = "0xD1EA1C")]
		private static extern IntPtr ovr_CloudStorageData_GetKey_Native(IntPtr obj);

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xD1EABC", Offset = "0xD1EABC", VA = "0xD1EABC")]
		public static string ovr_CloudStorageMetadata_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xD1EB24", Offset = "0xD1EB24", VA = "0xD1EB24")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetBucket_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xD1EBC4", Offset = "0xD1EBC4", VA = "0xD1EBC4")]
		public static extern long ovr_CloudStorageMetadata_GetCounter(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xD1EC64", Offset = "0xD1EC64", VA = "0xD1EC64")]
		public static extern uint ovr_CloudStorageMetadata_GetDataSize(IntPtr obj);

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xD1ED04", Offset = "0xD1ED04", VA = "0xD1ED04")]
		public static string ovr_CloudStorageMetadata_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xD1ED6C", Offset = "0xD1ED6C", VA = "0xD1ED6C")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetExtraData_Native(IntPtr obj);

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xD1EE0C", Offset = "0xD1EE0C", VA = "0xD1EE0C")]
		public static string ovr_CloudStorageMetadata_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xD1EE74", Offset = "0xD1EE74", VA = "0xD1EE74")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xD1EF14", Offset = "0xD1EF14", VA = "0xD1EF14")]
		public static extern ulong ovr_CloudStorageMetadata_GetSaveTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xD1EFB4", Offset = "0xD1EFB4", VA = "0xD1EFB4")]
		public static extern CloudStorageDataStatus ovr_CloudStorageMetadata_GetStatus(IntPtr obj);

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xD1F054", Offset = "0xD1F054", VA = "0xD1F054")]
		public static string ovr_CloudStorageMetadata_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xD1F0BC", Offset = "0xD1F0BC", VA = "0xD1F0BC")]
		private static extern IntPtr ovr_CloudStorageMetadata_GetVersionHandle_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xD1F15C", Offset = "0xD1F15C", VA = "0xD1F15C")]
		public static extern IntPtr ovr_CloudStorageMetadataArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xD1F20C", Offset = "0xD1F20C", VA = "0xD1F20C")]
		public static string ovr_CloudStorageMetadataArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xD1F274", Offset = "0xD1F274", VA = "0xD1F274")]
		private static extern IntPtr ovr_CloudStorageMetadataArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xD1F314", Offset = "0xD1F314", VA = "0xD1F314")]
		public static extern UIntPtr ovr_CloudStorageMetadataArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xD1F3B4", Offset = "0xD1F3B4", VA = "0xD1F3B4")]
		public static extern bool ovr_CloudStorageMetadataArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xD1F45C", Offset = "0xD1F45C", VA = "0xD1F45C")]
		public static string ovr_CloudStorageUpdateResponse_GetBucket(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xD1F4C4", Offset = "0xD1F4C4", VA = "0xD1F4C4")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetBucket_Native(IntPtr obj);

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xD1F564", Offset = "0xD1F564", VA = "0xD1F564")]
		public static string ovr_CloudStorageUpdateResponse_GetKey(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xD1F5CC", Offset = "0xD1F5CC", VA = "0xD1F5CC")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetKey_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xD1F66C", Offset = "0xD1F66C", VA = "0xD1F66C")]
		public static extern CloudStorageUpdateStatus ovr_CloudStorageUpdateResponse_GetStatus(IntPtr obj);

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xD1F70C", Offset = "0xD1F70C", VA = "0xD1F70C")]
		public static string ovr_CloudStorageUpdateResponse_GetVersionHandle(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xD1F774", Offset = "0xD1F774", VA = "0xD1F774")]
		private static extern IntPtr ovr_CloudStorageUpdateResponse_GetVersionHandle_Native(IntPtr obj);

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xD1F814", Offset = "0xD1F814", VA = "0xD1F814")]
		public static uint ovr_DataStore_Contains(IntPtr obj, string key)
		{
			return default(uint);
		}

		[PreserveSig]
		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xD1F8D0", Offset = "0xD1F8D0", VA = "0xD1F8D0")]
		private static extern uint ovr_DataStore_Contains_Native(IntPtr obj, IntPtr key);

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xD0FAEC", Offset = "0xD0FAEC", VA = "0xD0FAEC")]
		public static string ovr_DataStore_GetKey(IntPtr obj, int index)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xD1F980", Offset = "0xD1F980", VA = "0xD1F980")]
		private static extern IntPtr ovr_DataStore_GetKey_Native(IntPtr obj, int index);

		[PreserveSig]
		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xD0FA4C", Offset = "0xD0FA4C", VA = "0xD0FA4C")]
		public static extern UIntPtr ovr_DataStore_GetNumKeys(IntPtr obj);

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xD0FB64", Offset = "0xD0FB64", VA = "0xD0FB64")]
		public static string ovr_DataStore_GetValue(IntPtr obj, string key)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xD1FA30", Offset = "0xD1FA30", VA = "0xD1FA30")]
		private static extern IntPtr ovr_DataStore_GetValue_Native(IntPtr obj, IntPtr key);

		[PreserveSig]
		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xD1FAE0", Offset = "0xD1FAE0", VA = "0xD1FAE0")]
		public static extern int ovr_Error_GetCode(IntPtr obj);

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xD1FB7C", Offset = "0xD1FB7C", VA = "0xD1FB7C")]
		public static string ovr_Error_GetDisplayableMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xD1FBE4", Offset = "0xD1FBE4", VA = "0xD1FBE4")]
		private static extern IntPtr ovr_Error_GetDisplayableMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xD1FC84", Offset = "0xD1FC84", VA = "0xD1FC84")]
		public static extern int ovr_Error_GetHttpCode(IntPtr obj);

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xD1FD24", Offset = "0xD1FD24", VA = "0xD1FD24")]
		public static string ovr_Error_GetMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xD1FD8C", Offset = "0xD1FD8C", VA = "0xD1FD8C")]
		private static extern IntPtr ovr_Error_GetMessage_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xD1FE2C", Offset = "0xD1FE2C", VA = "0xD1FE2C")]
		public static extern IntPtr ovr_HttpTransferUpdate_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xD1FECC", Offset = "0xD1FECC", VA = "0xD1FECC")]
		public static extern ulong ovr_HttpTransferUpdate_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xD1FF6C", Offset = "0xD1FF6C", VA = "0xD1FF6C")]
		public static extern UIntPtr ovr_HttpTransferUpdate_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xD2000C", Offset = "0xD2000C", VA = "0xD2000C")]
		public static extern bool ovr_HttpTransferUpdate_IsCompleted(IntPtr obj);

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xD200B4", Offset = "0xD200B4", VA = "0xD200B4")]
		public static string ovr_InstalledApplication_GetApplicationId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xD2011C", Offset = "0xD2011C", VA = "0xD2011C")]
		private static extern IntPtr ovr_InstalledApplication_GetApplicationId_Native(IntPtr obj);

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xD201BC", Offset = "0xD201BC", VA = "0xD201BC")]
		public static string ovr_InstalledApplication_GetPackageName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xD20224", Offset = "0xD20224", VA = "0xD20224")]
		private static extern IntPtr ovr_InstalledApplication_GetPackageName_Native(IntPtr obj);

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xD202C4", Offset = "0xD202C4", VA = "0xD202C4")]
		public static string ovr_InstalledApplication_GetStatus(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xD2032C", Offset = "0xD2032C", VA = "0xD2032C")]
		private static extern IntPtr ovr_InstalledApplication_GetStatus_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xD203CC", Offset = "0xD203CC", VA = "0xD203CC")]
		public static extern int ovr_InstalledApplication_GetVersionCode(IntPtr obj);

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xD2046C", Offset = "0xD2046C", VA = "0xD2046C")]
		public static string ovr_InstalledApplication_GetVersionName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xD204D4", Offset = "0xD204D4", VA = "0xD204D4")]
		private static extern IntPtr ovr_InstalledApplication_GetVersionName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xD20574", Offset = "0xD20574", VA = "0xD20574")]
		public static extern IntPtr ovr_InstalledApplicationArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xD20624", Offset = "0xD20624", VA = "0xD20624")]
		public static extern UIntPtr ovr_InstalledApplicationArray_GetSize(IntPtr obj);

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xD206C4", Offset = "0xD206C4", VA = "0xD206C4")]
		public static string ovr_LanguagePackInfo_GetEnglishName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xD2072C", Offset = "0xD2072C", VA = "0xD2072C")]
		private static extern IntPtr ovr_LanguagePackInfo_GetEnglishName_Native(IntPtr obj);

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xD207CC", Offset = "0xD207CC", VA = "0xD207CC")]
		public static string ovr_LanguagePackInfo_GetNativeName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xD20834", Offset = "0xD20834", VA = "0xD20834")]
		private static extern IntPtr ovr_LanguagePackInfo_GetNativeName_Native(IntPtr obj);

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xD208D4", Offset = "0xD208D4", VA = "0xD208D4")]
		public static string ovr_LanguagePackInfo_GetTag(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xD2093C", Offset = "0xD2093C", VA = "0xD2093C")]
		private static extern IntPtr ovr_LanguagePackInfo_GetTag_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xD209DC", Offset = "0xD209DC", VA = "0xD209DC")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidBlock(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xD20A84", Offset = "0xD20A84", VA = "0xD20A84")]
		public static extern bool ovr_LaunchBlockFlowResult_GetDidCancel(IntPtr obj);

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xD20B2C", Offset = "0xD20B2C", VA = "0xD20B2C")]
		public static string ovr_LaunchDetails_GetDeeplinkMessage(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xD20B94", Offset = "0xD20B94", VA = "0xD20B94")]
		private static extern IntPtr ovr_LaunchDetails_GetDeeplinkMessage_Native(IntPtr obj);

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xD20C34", Offset = "0xD20C34", VA = "0xD20C34")]
		public static string ovr_LaunchDetails_GetLaunchSource(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xD20C9C", Offset = "0xD20C9C", VA = "0xD20C9C")]
		private static extern IntPtr ovr_LaunchDetails_GetLaunchSource_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xD20D3C", Offset = "0xD20D3C", VA = "0xD20D3C")]
		public static extern LaunchType ovr_LaunchDetails_GetLaunchType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xD20DDC", Offset = "0xD20DDC", VA = "0xD20DDC")]
		public static extern ulong ovr_LaunchDetails_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xD20E7C", Offset = "0xD20E7C", VA = "0xD20E7C")]
		public static extern IntPtr ovr_LaunchDetails_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xD20F1C", Offset = "0xD20F1C", VA = "0xD20F1C")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xD20FC4", Offset = "0xD20FC4", VA = "0xD20FC4")]
		public static extern bool ovr_LaunchFriendRequestFlowResult_GetDidSendRequest(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xD2106C", Offset = "0xD2106C", VA = "0xD2106C")]
		public static extern bool ovr_LaunchReportFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A69")]
		[Address(RVA = "0xD21114", Offset = "0xD21114", VA = "0xD21114")]
		public static extern ulong ovr_LaunchReportFlowResult_GetUserReportId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xD211B4", Offset = "0xD211B4", VA = "0xD211B4")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xD2125C", Offset = "0xD2125C", VA = "0xD2125C")]
		public static extern bool ovr_LaunchUnblockFlowResult_GetDidUnblock(IntPtr obj);

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xD21304", Offset = "0xD21304", VA = "0xD21304")]
		public static byte[] ovr_LeaderboardEntry_GetExtraData(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xD21420", Offset = "0xD21420", VA = "0xD21420")]
		private static extern IntPtr ovr_LeaderboardEntry_GetExtraData_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xD21380", Offset = "0xD21380", VA = "0xD21380")]
		public static extern uint ovr_LeaderboardEntry_GetExtraDataLength(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xD214C0", Offset = "0xD214C0", VA = "0xD214C0")]
		public static extern int ovr_LeaderboardEntry_GetRank(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xD21560", Offset = "0xD21560", VA = "0xD21560")]
		public static extern long ovr_LeaderboardEntry_GetScore(IntPtr obj);

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xD21600", Offset = "0xD21600", VA = "0xD21600")]
		public static DateTime ovr_LeaderboardEntry_GetTimestamp(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xD21668", Offset = "0xD21668", VA = "0xD21668")]
		private static extern ulong ovr_LeaderboardEntry_GetTimestamp_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xD21708", Offset = "0xD21708", VA = "0xD21708")]
		public static extern IntPtr ovr_LeaderboardEntry_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xD217A8", Offset = "0xD217A8", VA = "0xD217A8")]
		public static extern IntPtr ovr_LeaderboardEntryArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xD21858", Offset = "0xD21858", VA = "0xD21858")]
		public static string ovr_LeaderboardEntryArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xD218C0", Offset = "0xD218C0", VA = "0xD218C0")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetNextUrl_Native(IntPtr obj);

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xD21960", Offset = "0xD21960", VA = "0xD21960")]
		public static string ovr_LeaderboardEntryArray_GetPreviousUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xD219C8", Offset = "0xD219C8", VA = "0xD219C8")]
		private static extern IntPtr ovr_LeaderboardEntryArray_GetPreviousUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xD21A68", Offset = "0xD21A68", VA = "0xD21A68")]
		public static extern UIntPtr ovr_LeaderboardEntryArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xD21B08", Offset = "0xD21B08", VA = "0xD21B08")]
		public static extern ulong ovr_LeaderboardEntryArray_GetTotalCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xD21BA8", Offset = "0xD21BA8", VA = "0xD21BA8")]
		public static extern bool ovr_LeaderboardEntryArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xD21C50", Offset = "0xD21C50", VA = "0xD21C50")]
		public static extern bool ovr_LeaderboardEntryArray_HasPreviousPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xD21CF8", Offset = "0xD21CF8", VA = "0xD21CF8")]
		public static extern bool ovr_LeaderboardUpdateStatus_GetDidUpdate(IntPtr obj);

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xD21DA0", Offset = "0xD21DA0", VA = "0xD21DA0")]
		public static string ovr_LinkedAccount_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xD21E08", Offset = "0xD21E08", VA = "0xD21E08")]
		private static extern IntPtr ovr_LinkedAccount_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xD21EA8", Offset = "0xD21EA8", VA = "0xD21EA8")]
		public static extern ServiceProvider ovr_LinkedAccount_GetServiceProvider(IntPtr obj);

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xD21F48", Offset = "0xD21F48", VA = "0xD21F48")]
		public static string ovr_LinkedAccount_GetUserId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xD21FB0", Offset = "0xD21FB0", VA = "0xD21FB0")]
		private static extern IntPtr ovr_LinkedAccount_GetUserId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xD22050", Offset = "0xD22050", VA = "0xD22050")]
		public static extern IntPtr ovr_LinkedAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xD22100", Offset = "0xD22100", VA = "0xD22100")]
		public static extern UIntPtr ovr_LinkedAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xD221A0", Offset = "0xD221A0", VA = "0xD221A0")]
		public static extern bool ovr_LivestreamingApplicationStatus_GetStreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xD22248", Offset = "0xD22248", VA = "0xD22248")]
		public static extern LivestreamingStartStatus ovr_LivestreamingStartResult_GetStreamingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xD222E8", Offset = "0xD222E8", VA = "0xD222E8")]
		public static extern bool ovr_LivestreamingStatus_GetCommentsVisible(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xD22390", Offset = "0xD22390", VA = "0xD22390")]
		public static extern bool ovr_LivestreamingStatus_GetIsPaused(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xD22438", Offset = "0xD22438", VA = "0xD22438")]
		public static extern bool ovr_LivestreamingStatus_GetLivestreamingEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xD224E0", Offset = "0xD224E0", VA = "0xD224E0")]
		public static extern int ovr_LivestreamingStatus_GetLivestreamingType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xD22580", Offset = "0xD22580", VA = "0xD22580")]
		public static extern bool ovr_LivestreamingStatus_GetMicEnabled(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xD22628", Offset = "0xD22628", VA = "0xD22628")]
		public static extern int ovr_LivestreamingVideoStats_GetCommentCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xD226C8", Offset = "0xD226C8", VA = "0xD226C8")]
		public static extern int ovr_LivestreamingVideoStats_GetReactionCount(IntPtr obj);

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xD22768", Offset = "0xD22768", VA = "0xD22768")]
		public static string ovr_LivestreamingVideoStats_GetTotalViews(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xD227D0", Offset = "0xD227D0", VA = "0xD227D0")]
		private static extern IntPtr ovr_LivestreamingVideoStats_GetTotalViews_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xD22870", Offset = "0xD22870", VA = "0xD22870")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshot_GetCandidates(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xD22910", Offset = "0xD22910", VA = "0xD22910")]
		public static extern double ovr_MatchmakingAdminSnapshot_GetMyCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xD229B0", Offset = "0xD229B0", VA = "0xD229B0")]
		public static extern bool ovr_MatchmakingAdminSnapshotCandidate_GetCanMatch(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xD22A58", Offset = "0xD22A58", VA = "0xD22A58")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetMyTotalScore(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xD22AF8", Offset = "0xD22AF8", VA = "0xD22AF8")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirCurrentThreshold(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xD22B98", Offset = "0xD22B98", VA = "0xD22B98")]
		public static extern double ovr_MatchmakingAdminSnapshotCandidate_GetTheirTotalScore(IntPtr obj);

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xD22C38", Offset = "0xD22C38", VA = "0xD22C38")]
		public static string ovr_MatchmakingAdminSnapshotCandidate_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xD22CA0", Offset = "0xD22CA0", VA = "0xD22CA0")]
		private static extern IntPtr ovr_MatchmakingAdminSnapshotCandidate_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xD22D40", Offset = "0xD22D40", VA = "0xD22D40")]
		public static extern IntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xD22DF0", Offset = "0xD22DF0", VA = "0xD22DF0")]
		public static extern UIntPtr ovr_MatchmakingAdminSnapshotCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xD22E90", Offset = "0xD22E90", VA = "0xD22E90")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xD22F30", Offset = "0xD22F30", VA = "0xD22F30")]
		public static extern IntPtr ovr_MatchmakingBrowseResult_GetRooms(IntPtr obj);

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xD22FD0", Offset = "0xD22FD0", VA = "0xD22FD0")]
		public static string ovr_MatchmakingCandidate_GetEntryHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xD23038", Offset = "0xD23038", VA = "0xD23038")]
		private static extern IntPtr ovr_MatchmakingCandidate_GetEntryHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xD230D8", Offset = "0xD230D8", VA = "0xD230D8")]
		public static extern ulong ovr_MatchmakingCandidate_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xD23178", Offset = "0xD23178", VA = "0xD23178")]
		public static extern IntPtr ovr_MatchmakingCandidateArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xD23228", Offset = "0xD23228", VA = "0xD23228")]
		public static string ovr_MatchmakingCandidateArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xD23290", Offset = "0xD23290", VA = "0xD23290")]
		private static extern IntPtr ovr_MatchmakingCandidateArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xD23330", Offset = "0xD23330", VA = "0xD23330")]
		public static extern UIntPtr ovr_MatchmakingCandidateArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xD233D0", Offset = "0xD233D0", VA = "0xD233D0")]
		public static extern bool ovr_MatchmakingCandidateArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xD23478", Offset = "0xD23478", VA = "0xD23478")]
		public static extern IntPtr ovr_MatchmakingEnqueueResult_GetAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xD23518", Offset = "0xD23518", VA = "0xD23518")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetAverageWait(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xD235B8", Offset = "0xD235B8", VA = "0xD235B8")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMatchesInLastHourCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xD23658", Offset = "0xD23658", VA = "0xD23658")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetMaxExpectedWait(IntPtr obj);

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xD236F8", Offset = "0xD236F8", VA = "0xD236F8")]
		public static string ovr_MatchmakingEnqueueResult_GetPool(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xD23760", Offset = "0xD23760", VA = "0xD23760")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetPool_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xD23800", Offset = "0xD23800", VA = "0xD23800")]
		public static extern uint ovr_MatchmakingEnqueueResult_GetRecentMatchPercentage(IntPtr obj);

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xD238A0", Offset = "0xD238A0", VA = "0xD238A0")]
		public static string ovr_MatchmakingEnqueueResult_GetRequestHash(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xD23908", Offset = "0xD23908", VA = "0xD23908")]
		private static extern IntPtr ovr_MatchmakingEnqueueResult_GetRequestHash_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xD239A8", Offset = "0xD239A8", VA = "0xD239A8")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xD23A48", Offset = "0xD23A48", VA = "0xD23A48")]
		public static extern IntPtr ovr_MatchmakingEnqueueResultAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xD23AE8", Offset = "0xD23AE8", VA = "0xD23AE8")]
		public static extern ulong ovr_MatchmakingEnqueuedUser_GetAdditionalUserID(IntPtr obj, uint index);

		[PreserveSig]
		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xD23B98", Offset = "0xD23B98", VA = "0xD23B98")]
		public static extern uint ovr_MatchmakingEnqueuedUser_GetAdditionalUserIDsSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xD23C38", Offset = "0xD23C38", VA = "0xD23C38")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetCustomData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xD23CD8", Offset = "0xD23CD8", VA = "0xD23CD8")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUser_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xD23D78", Offset = "0xD23D78", VA = "0xD23D78")]
		public static extern IntPtr ovr_MatchmakingEnqueuedUserArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xD23E28", Offset = "0xD23E28", VA = "0xD23E28")]
		public static extern UIntPtr ovr_MatchmakingEnqueuedUserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xD23EC8", Offset = "0xD23EC8", VA = "0xD23EC8")]
		public static extern ulong ovr_MatchmakingNotification_GetAddedByUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xD23F68", Offset = "0xD23F68", VA = "0xD23F68")]
		public static extern IntPtr ovr_MatchmakingNotification_GetRoom(IntPtr obj);

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0xD24008", Offset = "0xD24008", VA = "0xD24008")]
		public static string ovr_MatchmakingNotification_GetTraceId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xD24070", Offset = "0xD24070", VA = "0xD24070")]
		private static extern IntPtr ovr_MatchmakingNotification_GetTraceId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xD24110", Offset = "0xD24110", VA = "0xD24110")]
		public static extern uint ovr_MatchmakingRoom_GetPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xD241B0", Offset = "0xD241B0", VA = "0xD241B0")]
		public static extern IntPtr ovr_MatchmakingRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xD24250", Offset = "0xD24250", VA = "0xD24250")]
		public static extern bool ovr_MatchmakingRoom_HasPingTime(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xD242F8", Offset = "0xD242F8", VA = "0xD242F8")]
		public static extern IntPtr ovr_MatchmakingRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xD243A8", Offset = "0xD243A8", VA = "0xD243A8")]
		public static extern UIntPtr ovr_MatchmakingRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xD24448", Offset = "0xD24448", VA = "0xD24448")]
		public static extern uint ovr_MatchmakingStats_GetDrawCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xD244E8", Offset = "0xD244E8", VA = "0xD244E8")]
		public static extern uint ovr_MatchmakingStats_GetLossCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xD24588", Offset = "0xD24588", VA = "0xD24588")]
		public static extern uint ovr_MatchmakingStats_GetSkillLevel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xD24628", Offset = "0xD24628", VA = "0xD24628")]
		public static extern uint ovr_MatchmakingStats_GetWinCount(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xD246C8", Offset = "0xD246C8", VA = "0xD246C8")]
		public static extern IntPtr ovr_Message_GetAbuseReportRecording(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xD24768", Offset = "0xD24768", VA = "0xD24768")]
		public static extern IntPtr ovr_Message_GetAchievementDefinitionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xD24808", Offset = "0xD24808", VA = "0xD24808")]
		public static extern IntPtr ovr_Message_GetAchievementProgressArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xD248A8", Offset = "0xD248A8", VA = "0xD248A8")]
		public static extern IntPtr ovr_Message_GetAchievementUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xD24948", Offset = "0xD24948", VA = "0xD24948")]
		public static extern IntPtr ovr_Message_GetApplicationVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xD249E8", Offset = "0xD249E8", VA = "0xD249E8")]
		public static extern IntPtr ovr_Message_GetAssetDetails(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xD24A88", Offset = "0xD24A88", VA = "0xD24A88")]
		public static extern IntPtr ovr_Message_GetAssetDetailsArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xD24B28", Offset = "0xD24B28", VA = "0xD24B28")]
		public static extern IntPtr ovr_Message_GetAssetFileDeleteResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xD24BC8", Offset = "0xD24BC8", VA = "0xD24BC8")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadCancelResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xD24C68", Offset = "0xD24C68", VA = "0xD24C68")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xD24D08", Offset = "0xD24D08", VA = "0xD24D08")]
		public static extern IntPtr ovr_Message_GetAssetFileDownloadUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xD24DA8", Offset = "0xD24DA8", VA = "0xD24DA8")]
		public static extern IntPtr ovr_Message_GetCalApplicationFinalized(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xD24E48", Offset = "0xD24E48", VA = "0xD24E48")]
		public static extern IntPtr ovr_Message_GetCalApplicationProposed(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0xD24EE8", Offset = "0xD24EE8", VA = "0xD24EE8")]
		public static extern IntPtr ovr_Message_GetCalApplicationSuggestionArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0xD24F88", Offset = "0xD24F88", VA = "0xD24F88")]
		public static extern IntPtr ovr_Message_GetCloudStorageConflictMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xD25028", Offset = "0xD25028", VA = "0xD25028")]
		public static extern IntPtr ovr_Message_GetCloudStorageData(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xD250C8", Offset = "0xD250C8", VA = "0xD250C8")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadata(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xD25168", Offset = "0xD25168", VA = "0xD25168")]
		public static extern IntPtr ovr_Message_GetCloudStorageMetadataArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0xD25208", Offset = "0xD25208", VA = "0xD25208")]
		public static extern IntPtr ovr_Message_GetCloudStorageUpdateResponse(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0xD252A8", Offset = "0xD252A8", VA = "0xD252A8")]
		public static extern IntPtr ovr_Message_GetError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xD25348", Offset = "0xD25348", VA = "0xD25348")]
		public static extern IntPtr ovr_Message_GetHttpTransferUpdate(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xD253E8", Offset = "0xD253E8", VA = "0xD253E8")]
		public static extern IntPtr ovr_Message_GetInstalledApplicationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xD25488", Offset = "0xD25488", VA = "0xD25488")]
		public static extern IntPtr ovr_Message_GetLaunchBlockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xD25528", Offset = "0xD25528", VA = "0xD25528")]
		public static extern IntPtr ovr_Message_GetLaunchFriendRequestFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xD255C8", Offset = "0xD255C8", VA = "0xD255C8")]
		public static extern IntPtr ovr_Message_GetLaunchReportFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xD25668", Offset = "0xD25668", VA = "0xD25668")]
		public static extern IntPtr ovr_Message_GetLaunchUnblockFlowResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xD25708", Offset = "0xD25708", VA = "0xD25708")]
		public static extern IntPtr ovr_Message_GetLeaderboardEntryArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xD257A8", Offset = "0xD257A8", VA = "0xD257A8")]
		public static extern IntPtr ovr_Message_GetLeaderboardUpdateStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xD25848", Offset = "0xD25848", VA = "0xD25848")]
		public static extern IntPtr ovr_Message_GetLinkedAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xD258E8", Offset = "0xD258E8", VA = "0xD258E8")]
		public static extern IntPtr ovr_Message_GetLivestreamingApplicationStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xD25988", Offset = "0xD25988", VA = "0xD25988")]
		public static extern IntPtr ovr_Message_GetLivestreamingStartResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xD25A28", Offset = "0xD25A28", VA = "0xD25A28")]
		public static extern IntPtr ovr_Message_GetLivestreamingStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xD25AC8", Offset = "0xD25AC8", VA = "0xD25AC8")]
		public static extern IntPtr ovr_Message_GetLivestreamingVideoStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xD25B68", Offset = "0xD25B68", VA = "0xD25B68")]
		public static extern IntPtr ovr_Message_GetMatchmakingAdminSnapshot(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xD25C08", Offset = "0xD25C08", VA = "0xD25C08")]
		public static extern IntPtr ovr_Message_GetMatchmakingBrowseResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xD25CA8", Offset = "0xD25CA8", VA = "0xD25CA8")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xD25D48", Offset = "0xD25D48", VA = "0xD25D48")]
		public static extern IntPtr ovr_Message_GetMatchmakingEnqueueResultAndRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xD25DE8", Offset = "0xD25DE8", VA = "0xD25DE8")]
		public static extern IntPtr ovr_Message_GetMatchmakingRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xD25E88", Offset = "0xD25E88", VA = "0xD25E88")]
		public static extern IntPtr ovr_Message_GetMatchmakingStats(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0xD25F28", Offset = "0xD25F28", VA = "0xD25F28")]
		public static extern IntPtr ovr_Message_GetNativeMessage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0xD25FC8", Offset = "0xD25FC8", VA = "0xD25FC8")]
		public static extern IntPtr ovr_Message_GetNetworkingPeer(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0xD26068", Offset = "0xD26068", VA = "0xD26068")]
		public static extern IntPtr ovr_Message_GetOrgScopedID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0xD26108", Offset = "0xD26108", VA = "0xD26108")]
		public static extern IntPtr ovr_Message_GetParty(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AED")]
		[Address(RVA = "0xD261A8", Offset = "0xD261A8", VA = "0xD261A8")]
		public static extern IntPtr ovr_Message_GetPartyID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0xD26248", Offset = "0xD26248", VA = "0xD26248")]
		public static extern IntPtr ovr_Message_GetPidArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0xD262E8", Offset = "0xD262E8", VA = "0xD262E8")]
		public static extern IntPtr ovr_Message_GetPingResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0xD26388", Offset = "0xD26388", VA = "0xD26388")]
		public static extern IntPtr ovr_Message_GetPlatformInitialize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xD26428", Offset = "0xD26428", VA = "0xD26428")]
		public static extern IntPtr ovr_Message_GetProductArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xD264C8", Offset = "0xD264C8", VA = "0xD264C8")]
		public static extern IntPtr ovr_Message_GetPurchase(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xD26568", Offset = "0xD26568", VA = "0xD26568")]
		public static extern IntPtr ovr_Message_GetPurchaseArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xD26608", Offset = "0xD26608", VA = "0xD26608")]
		public static extern ulong ovr_Message_GetRequestID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xD266A8", Offset = "0xD266A8", VA = "0xD266A8")]
		public static extern IntPtr ovr_Message_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xD26748", Offset = "0xD26748", VA = "0xD26748")]
		public static extern IntPtr ovr_Message_GetRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xD267E8", Offset = "0xD267E8", VA = "0xD267E8")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotification(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xD26888", Offset = "0xD26888", VA = "0xD26888")]
		public static extern IntPtr ovr_Message_GetRoomInviteNotificationArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xD26928", Offset = "0xD26928", VA = "0xD26928")]
		public static extern IntPtr ovr_Message_GetSdkAccountArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xD269C8", Offset = "0xD269C8", VA = "0xD269C8")]
		public static extern IntPtr ovr_Message_GetShareMediaResult(IntPtr obj);

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xD26A68", Offset = "0xD26A68", VA = "0xD26A68")]
		public static string ovr_Message_GetString(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xD26AD0", Offset = "0xD26AD0", VA = "0xD26AD0")]
		private static extern IntPtr ovr_Message_GetString_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xD26B70", Offset = "0xD26B70", VA = "0xD26B70")]
		public static extern IntPtr ovr_Message_GetSystemPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xD26C10", Offset = "0xD26C10", VA = "0xD26C10")]
		public static extern IntPtr ovr_Message_GetSystemVoipState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xD26CB0", Offset = "0xD26CB0", VA = "0xD26CB0")]
		public static extern IntPtr ovr_Message_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xD26D50", Offset = "0xD26D50", VA = "0xD26D50")]
		public static extern IntPtr ovr_Message_GetUserAndRoomArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xD26DF0", Offset = "0xD26DF0", VA = "0xD26DF0")]
		public static extern IntPtr ovr_Message_GetUserArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xD26E90", Offset = "0xD26E90", VA = "0xD26E90")]
		public static extern IntPtr ovr_Message_GetUserProof(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xD26F30", Offset = "0xD26F30", VA = "0xD26F30")]
		public static extern IntPtr ovr_Message_GetUserReportID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xD26FD0", Offset = "0xD26FD0", VA = "0xD26FD0")]
		public static extern bool ovr_Message_IsError(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xD27078", Offset = "0xD27078", VA = "0xD27078")]
		public static extern UIntPtr ovr_Microphone_GetNumSamplesAvailable(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xD27118", Offset = "0xD27118", VA = "0xD27118")]
		public static extern UIntPtr ovr_Microphone_GetOutputBufferMaxSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xD271B8", Offset = "0xD271B8", VA = "0xD271B8")]
		public static extern UIntPtr ovr_Microphone_GetPCM(IntPtr obj, short[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xD27278", Offset = "0xD27278", VA = "0xD27278")]
		public static extern UIntPtr ovr_Microphone_GetPCMFloat(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferNumElements);

		[PreserveSig]
		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xD27338", Offset = "0xD27338", VA = "0xD27338")]
		public static extern UIntPtr ovr_Microphone_ReadData(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xD273F8", Offset = "0xD273F8", VA = "0xD273F8")]
		public static extern void ovr_Microphone_SetAcceptableRecordingDelayHint(IntPtr obj, UIntPtr delayMs);

		[PreserveSig]
		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xD274A8", Offset = "0xD274A8", VA = "0xD274A8")]
		public static extern void ovr_Microphone_Start(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xD27548", Offset = "0xD27548", VA = "0xD27548")]
		public static extern void ovr_Microphone_Stop(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xD275E8", Offset = "0xD275E8", VA = "0xD275E8")]
		public static extern ulong ovr_NetworkingPeer_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xD27688", Offset = "0xD27688", VA = "0xD27688")]
		public static extern PeerConnectionState ovr_NetworkingPeer_GetState(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xD27728", Offset = "0xD27728", VA = "0xD27728")]
		public static extern ulong ovr_OrgScopedID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xD277C8", Offset = "0xD277C8", VA = "0xD277C8")]
		public static extern void ovr_Packet_Free(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xD27868", Offset = "0xD27868", VA = "0xD27868")]
		public static extern IntPtr ovr_Packet_GetBytes(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xD27908", Offset = "0xD27908", VA = "0xD27908")]
		public static extern SendPolicy ovr_Packet_GetSendPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xD279A8", Offset = "0xD279A8", VA = "0xD279A8")]
		public static extern ulong ovr_Packet_GetSenderID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xD27A48", Offset = "0xD27A48", VA = "0xD27A48")]
		public static extern UIntPtr ovr_Packet_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xD27AE8", Offset = "0xD27AE8", VA = "0xD27AE8")]
		public static extern ulong ovr_Party_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xD27B88", Offset = "0xD27B88", VA = "0xD27B88")]
		public static extern IntPtr ovr_Party_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xD27C28", Offset = "0xD27C28", VA = "0xD27C28")]
		public static extern IntPtr ovr_Party_GetLeader(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xD27CC8", Offset = "0xD27CC8", VA = "0xD27CC8")]
		public static extern IntPtr ovr_Party_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xD27D64", Offset = "0xD27D64", VA = "0xD27D64")]
		public static extern IntPtr ovr_Party_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0xD27E04", Offset = "0xD27E04", VA = "0xD27E04")]
		public static extern ulong ovr_PartyID_GetID(IntPtr obj);

		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0xD27EA0", Offset = "0xD27EA0", VA = "0xD27EA0")]
		public static string ovr_Pid_GetId(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xD27F08", Offset = "0xD27F08", VA = "0xD27F08")]
		private static extern IntPtr ovr_Pid_GetId_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xD27FA8", Offset = "0xD27FA8", VA = "0xD27FA8")]
		public static extern IntPtr ovr_PidArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xD28058", Offset = "0xD28058", VA = "0xD28058")]
		public static extern UIntPtr ovr_PidArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xD280F8", Offset = "0xD280F8", VA = "0xD280F8")]
		public static extern ulong ovr_PingResult_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xD28198", Offset = "0xD28198", VA = "0xD28198")]
		public static extern ulong ovr_PingResult_GetPingTimeUsec(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xD28238", Offset = "0xD28238", VA = "0xD28238")]
		public static extern bool ovr_PingResult_IsTimeout(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xD282E0", Offset = "0xD282E0", VA = "0xD282E0")]
		public static extern PlatformInitializeResult ovr_PlatformInitialize_GetResult(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xD28380", Offset = "0xD28380", VA = "0xD28380")]
		public static extern uint ovr_Price_GetAmountInHundredths(IntPtr obj);

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xD28420", Offset = "0xD28420", VA = "0xD28420")]
		public static string ovr_Price_GetCurrency(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xD28488", Offset = "0xD28488", VA = "0xD28488")]
		private static extern IntPtr ovr_Price_GetCurrency_Native(IntPtr obj);

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xD28528", Offset = "0xD28528", VA = "0xD28528")]
		public static string ovr_Price_GetFormatted(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xD28590", Offset = "0xD28590", VA = "0xD28590")]
		private static extern IntPtr ovr_Price_GetFormatted_Native(IntPtr obj);

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xD28630", Offset = "0xD28630", VA = "0xD28630")]
		public static string ovr_Product_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xD28698", Offset = "0xD28698", VA = "0xD28698")]
		private static extern IntPtr ovr_Product_GetDescription_Native(IntPtr obj);

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xD28738", Offset = "0xD28738", VA = "0xD28738")]
		public static string ovr_Product_GetFormattedPrice(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xD287A0", Offset = "0xD287A0", VA = "0xD287A0")]
		private static extern IntPtr ovr_Product_GetFormattedPrice_Native(IntPtr obj);

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xD28840", Offset = "0xD28840", VA = "0xD28840")]
		public static string ovr_Product_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xD288A8", Offset = "0xD288A8", VA = "0xD288A8")]
		private static extern IntPtr ovr_Product_GetName_Native(IntPtr obj);

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xD28948", Offset = "0xD28948", VA = "0xD28948")]
		public static string ovr_Product_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xD289B0", Offset = "0xD289B0", VA = "0xD289B0")]
		private static extern IntPtr ovr_Product_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xD28A50", Offset = "0xD28A50", VA = "0xD28A50")]
		public static extern IntPtr ovr_ProductArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xD28B00", Offset = "0xD28B00", VA = "0xD28B00")]
		public static string ovr_ProductArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xD28B68", Offset = "0xD28B68", VA = "0xD28B68")]
		private static extern IntPtr ovr_ProductArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xD28C08", Offset = "0xD28C08", VA = "0xD28C08")]
		public static extern UIntPtr ovr_ProductArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xD28CA8", Offset = "0xD28CA8", VA = "0xD28CA8")]
		public static extern bool ovr_ProductArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xD28D50", Offset = "0xD28D50", VA = "0xD28D50")]
		public static DateTime ovr_Purchase_GetExpirationTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xD28DB8", Offset = "0xD28DB8", VA = "0xD28DB8")]
		private static extern ulong ovr_Purchase_GetExpirationTime_Native(IntPtr obj);

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xD28E58", Offset = "0xD28E58", VA = "0xD28E58")]
		public static DateTime ovr_Purchase_GetGrantTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xD28EC0", Offset = "0xD28EC0", VA = "0xD28EC0")]
		private static extern ulong ovr_Purchase_GetGrantTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xD28F60", Offset = "0xD28F60", VA = "0xD28F60")]
		public static extern ulong ovr_Purchase_GetPurchaseID(IntPtr obj);

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xD29000", Offset = "0xD29000", VA = "0xD29000")]
		public static string ovr_Purchase_GetSKU(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xD29068", Offset = "0xD29068", VA = "0xD29068")]
		private static extern IntPtr ovr_Purchase_GetSKU_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xD29108", Offset = "0xD29108", VA = "0xD29108")]
		public static extern IntPtr ovr_PurchaseArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xD291B8", Offset = "0xD291B8", VA = "0xD291B8")]
		public static string ovr_PurchaseArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xD29220", Offset = "0xD29220", VA = "0xD29220")]
		private static extern IntPtr ovr_PurchaseArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xD292C0", Offset = "0xD292C0", VA = "0xD292C0")]
		public static extern UIntPtr ovr_PurchaseArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xD29360", Offset = "0xD29360", VA = "0xD29360")]
		public static extern bool ovr_PurchaseArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xD29408", Offset = "0xD29408", VA = "0xD29408")]
		public static extern ulong ovr_Room_GetApplicationID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xD294A8", Offset = "0xD294A8", VA = "0xD294A8")]
		public static extern IntPtr ovr_Room_GetDataStore(IntPtr obj);

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xD29548", Offset = "0xD29548", VA = "0xD29548")]
		public static string ovr_Room_GetDescription(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xD295B0", Offset = "0xD295B0", VA = "0xD295B0")]
		private static extern IntPtr ovr_Room_GetDescription_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xD29650", Offset = "0xD29650", VA = "0xD29650")]
		public static extern ulong ovr_Room_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xD296F0", Offset = "0xD296F0", VA = "0xD296F0")]
		public static extern IntPtr ovr_Room_GetInvitedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xD29790", Offset = "0xD29790", VA = "0xD29790")]
		public static extern bool ovr_Room_GetIsMembershipLocked(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xD29838", Offset = "0xD29838", VA = "0xD29838")]
		public static extern RoomJoinPolicy ovr_Room_GetJoinPolicy(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xD298D8", Offset = "0xD298D8", VA = "0xD298D8")]
		public static extern RoomJoinability ovr_Room_GetJoinability(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xD29978", Offset = "0xD29978", VA = "0xD29978")]
		public static extern IntPtr ovr_Room_GetMatchedUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xD29A18", Offset = "0xD29A18", VA = "0xD29A18")]
		public static extern uint ovr_Room_GetMaxUsers(IntPtr obj);

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xD29AB8", Offset = "0xD29AB8", VA = "0xD29AB8")]
		public static string ovr_Room_GetName(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xD29B20", Offset = "0xD29B20", VA = "0xD29B20")]
		private static extern IntPtr ovr_Room_GetName_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xD29BC0", Offset = "0xD29BC0", VA = "0xD29BC0")]
		public static extern IntPtr ovr_Room_GetOwner(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xD29C5C", Offset = "0xD29C5C", VA = "0xD29C5C")]
		public static extern RoomType ovr_Room_GetType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xD29CFC", Offset = "0xD29CFC", VA = "0xD29CFC")]
		public static extern IntPtr ovr_Room_GetUsers(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xD29D98", Offset = "0xD29D98", VA = "0xD29D98")]
		public static extern uint ovr_Room_GetVersion(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xD29E38", Offset = "0xD29E38", VA = "0xD29E38")]
		public static extern IntPtr ovr_RoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xD29EE8", Offset = "0xD29EE8", VA = "0xD29EE8")]
		public static string ovr_RoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xD29F50", Offset = "0xD29F50", VA = "0xD29F50")]
		private static extern IntPtr ovr_RoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xD29FF0", Offset = "0xD29FF0", VA = "0xD29FF0")]
		public static extern UIntPtr ovr_RoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xD2A090", Offset = "0xD2A090", VA = "0xD2A090")]
		public static extern bool ovr_RoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xD2A138", Offset = "0xD2A138", VA = "0xD2A138")]
		public static extern ulong ovr_RoomInviteNotification_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xD2A1D8", Offset = "0xD2A1D8", VA = "0xD2A1D8")]
		public static extern ulong ovr_RoomInviteNotification_GetRoomID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xD2A278", Offset = "0xD2A278", VA = "0xD2A278")]
		public static extern ulong ovr_RoomInviteNotification_GetSenderID(IntPtr obj);

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xD2A318", Offset = "0xD2A318", VA = "0xD2A318")]
		public static DateTime ovr_RoomInviteNotification_GetSentTime(IntPtr obj)
		{
			return default(DateTime);
		}

		[PreserveSig]
		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xD2A380", Offset = "0xD2A380", VA = "0xD2A380")]
		private static extern ulong ovr_RoomInviteNotification_GetSentTime_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xD2A420", Offset = "0xD2A420", VA = "0xD2A420")]
		public static extern IntPtr ovr_RoomInviteNotificationArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xD2A4D0", Offset = "0xD2A4D0", VA = "0xD2A4D0")]
		public static string ovr_RoomInviteNotificationArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xD2A538", Offset = "0xD2A538", VA = "0xD2A538")]
		private static extern IntPtr ovr_RoomInviteNotificationArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xD2A5D8", Offset = "0xD2A5D8", VA = "0xD2A5D8")]
		public static extern UIntPtr ovr_RoomInviteNotificationArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xD2A678", Offset = "0xD2A678", VA = "0xD2A678")]
		public static extern bool ovr_RoomInviteNotificationArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xD2A720", Offset = "0xD2A720", VA = "0xD2A720")]
		public static extern SdkAccountType ovr_SdkAccount_GetAccountType(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xD2A7C0", Offset = "0xD2A7C0", VA = "0xD2A7C0")]
		public static extern ulong ovr_SdkAccount_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xD2A860", Offset = "0xD2A860", VA = "0xD2A860")]
		public static extern IntPtr ovr_SdkAccountArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xD2A910", Offset = "0xD2A910", VA = "0xD2A910")]
		public static extern UIntPtr ovr_SdkAccountArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xD2A9B0", Offset = "0xD2A9B0", VA = "0xD2A9B0")]
		public static extern ShareMediaStatus ovr_ShareMediaResult_GetStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xD2AA50", Offset = "0xD2AA50", VA = "0xD2AA50")]
		public static extern bool ovr_SystemPermission_GetHasPermission(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xD2AAF8", Offset = "0xD2AAF8", VA = "0xD2AAF8")]
		public static extern PermissionGrantStatus ovr_SystemPermission_GetPermissionGrantStatus(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xD2AB98", Offset = "0xD2AB98", VA = "0xD2AB98")]
		public static extern VoipMuteState ovr_SystemVoipState_GetMicrophoneMuted(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xD2AC38", Offset = "0xD2AC38", VA = "0xD2AC38")]
		public static extern SystemVoipStatus ovr_SystemVoipState_GetStatus(IntPtr obj);

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xD2ACD8", Offset = "0xD2ACD8", VA = "0xD2ACD8")]
		public static string ovr_TestUser_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xD2AD40", Offset = "0xD2AD40", VA = "0xD2AD40")]
		private static extern IntPtr ovr_TestUser_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xD2ADE0", Offset = "0xD2ADE0", VA = "0xD2ADE0")]
		public static extern IntPtr ovr_TestUser_GetAppAccessArray(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xD2AE80", Offset = "0xD2AE80", VA = "0xD2AE80")]
		public static extern IntPtr ovr_TestUser_GetFbAppAccessArray(IntPtr obj);

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xD2AF20", Offset = "0xD2AF20", VA = "0xD2AF20")]
		public static string ovr_TestUser_GetFriendAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xD2AF88", Offset = "0xD2AF88", VA = "0xD2AF88")]
		private static extern IntPtr ovr_TestUser_GetFriendAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xD2B028", Offset = "0xD2B028", VA = "0xD2B028")]
		public static extern IntPtr ovr_TestUser_GetFriendAppAccessArray(IntPtr obj);

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xD2B0C8", Offset = "0xD2B0C8", VA = "0xD2B0C8")]
		public static string ovr_TestUser_GetUserAlias(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xD2B130", Offset = "0xD2B130", VA = "0xD2B130")]
		private static extern IntPtr ovr_TestUser_GetUserAlias_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xD2B1D0", Offset = "0xD2B1D0", VA = "0xD2B1D0")]
		public static extern ulong ovr_TestUser_GetUserFbid(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xD2B270", Offset = "0xD2B270", VA = "0xD2B270")]
		public static extern ulong ovr_TestUser_GetUserId(IntPtr obj);

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xD2B310", Offset = "0xD2B310", VA = "0xD2B310")]
		public static string ovr_TestUserAppAccess_GetAccessToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xD2B378", Offset = "0xD2B378", VA = "0xD2B378")]
		private static extern IntPtr ovr_TestUserAppAccess_GetAccessToken_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xD2B418", Offset = "0xD2B418", VA = "0xD2B418")]
		public static extern ulong ovr_TestUserAppAccess_GetAppId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xD2B4B8", Offset = "0xD2B4B8", VA = "0xD2B4B8")]
		public static extern ulong ovr_TestUserAppAccess_GetUserId(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xD2B558", Offset = "0xD2B558", VA = "0xD2B558")]
		public static extern IntPtr ovr_TestUserAppAccessArray_GetElement(IntPtr obj, UIntPtr index);

		[PreserveSig]
		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xD2B608", Offset = "0xD2B608", VA = "0xD2B608")]
		public static extern UIntPtr ovr_TestUserAppAccessArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xD2B6A8", Offset = "0xD2B6A8", VA = "0xD2B6A8")]
		public static extern ulong ovr_User_GetID(IntPtr obj);

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xD2B748", Offset = "0xD2B748", VA = "0xD2B748")]
		public static string ovr_User_GetImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xD2B7B0", Offset = "0xD2B7B0", VA = "0xD2B7B0")]
		private static extern IntPtr ovr_User_GetImageUrl_Native(IntPtr obj);

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xD2B850", Offset = "0xD2B850", VA = "0xD2B850")]
		public static string ovr_User_GetInviteToken(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xD2B8B8", Offset = "0xD2B8B8", VA = "0xD2B8B8")]
		private static extern IntPtr ovr_User_GetInviteToken_Native(IntPtr obj);

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xD2B958", Offset = "0xD2B958", VA = "0xD2B958")]
		public static string ovr_User_GetOculusID(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xD2B9C0", Offset = "0xD2B9C0", VA = "0xD2B9C0")]
		private static extern IntPtr ovr_User_GetOculusID_Native(IntPtr obj);

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xD2BA60", Offset = "0xD2BA60", VA = "0xD2BA60")]
		public static string ovr_User_GetPresence(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xD2BAC8", Offset = "0xD2BAC8", VA = "0xD2BAC8")]
		private static extern IntPtr ovr_User_GetPresence_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xD2BB68", Offset = "0xD2BB68", VA = "0xD2BB68")]
		public static extern UserPresenceStatus ovr_User_GetPresenceStatus(IntPtr obj);

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xD2BC08", Offset = "0xD2BC08", VA = "0xD2BC08")]
		public static string ovr_User_GetSmallImageUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xD2BC70", Offset = "0xD2BC70", VA = "0xD2BC70")]
		private static extern IntPtr ovr_User_GetSmallImageUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xD2BD10", Offset = "0xD2BD10", VA = "0xD2BD10")]
		public static extern IntPtr ovr_UserAndRoom_GetRoom(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xD2BDB0", Offset = "0xD2BDB0", VA = "0xD2BDB0")]
		public static extern IntPtr ovr_UserAndRoom_GetUser(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xD2BE50", Offset = "0xD2BE50", VA = "0xD2BE50")]
		public static extern IntPtr ovr_UserAndRoomArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xD2BF00", Offset = "0xD2BF00", VA = "0xD2BF00")]
		public static string ovr_UserAndRoomArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xD2BF68", Offset = "0xD2BF68", VA = "0xD2BF68")]
		private static extern IntPtr ovr_UserAndRoomArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xD2C008", Offset = "0xD2C008", VA = "0xD2C008")]
		public static extern UIntPtr ovr_UserAndRoomArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xD2C0A8", Offset = "0xD2C0A8", VA = "0xD2C0A8")]
		public static extern bool ovr_UserAndRoomArray_HasNextPage(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xD2C150", Offset = "0xD2C150", VA = "0xD2C150")]
		public static extern IntPtr ovr_UserArray_GetElement(IntPtr obj, UIntPtr index);

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xD2C200", Offset = "0xD2C200", VA = "0xD2C200")]
		public static string ovr_UserArray_GetNextUrl(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xD2C268", Offset = "0xD2C268", VA = "0xD2C268")]
		private static extern IntPtr ovr_UserArray_GetNextUrl_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xD2C308", Offset = "0xD2C308", VA = "0xD2C308")]
		public static extern UIntPtr ovr_UserArray_GetSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xD2C3A8", Offset = "0xD2C3A8", VA = "0xD2C3A8")]
		public static extern bool ovr_UserArray_HasNextPage(IntPtr obj);

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xD2C450", Offset = "0xD2C450", VA = "0xD2C450")]
		public static string ovr_UserProof_GetNonce(IntPtr obj)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xD2C4B8", Offset = "0xD2C4B8", VA = "0xD2C4B8")]
		private static extern IntPtr ovr_UserProof_GetNonce_Native(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xD2C558", Offset = "0xD2C558", VA = "0xD2C558")]
		public static extern bool ovr_UserReportID_GetDidCancel(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xD2C600", Offset = "0xD2C600", VA = "0xD2C600")]
		public static extern ulong ovr_UserReportID_GetID(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xD2C6A0", Offset = "0xD2C6A0", VA = "0xD2C6A0")]
		public static extern void ovr_VoipDecoder_Decode(IntPtr obj, byte[] compressedData, UIntPtr compressedSize);

		[PreserveSig]
		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xD2C760", Offset = "0xD2C760", VA = "0xD2C760")]
		public static extern UIntPtr ovr_VoipDecoder_GetDecodedPCM(IntPtr obj, float[] outputBuffer, UIntPtr outputBufferSize);

		[PreserveSig]
		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xD2C820", Offset = "0xD2C820", VA = "0xD2C820")]
		public static extern void ovr_VoipEncoder_AddPCM(IntPtr obj, float[] inputData, uint inputSize);

		[PreserveSig]
		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xD2C8E0", Offset = "0xD2C8E0", VA = "0xD2C8E0")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedData(IntPtr obj, byte[] outputBuffer, UIntPtr intputSize);

		[PreserveSig]
		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xD2C9A0", Offset = "0xD2C9A0", VA = "0xD2C9A0")]
		public static extern UIntPtr ovr_VoipEncoder_GetCompressedDataSize(IntPtr obj);

		[PreserveSig]
		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xD0E688", Offset = "0xD0E688", VA = "0xD0E688")]
		public static extern IntPtr ovr_AbuseReportOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xD0EA78", Offset = "0xD0EA78", VA = "0xD0EA78")]
		public static extern void ovr_AbuseReportOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xD0E790", Offset = "0xD0E790", VA = "0xD0E790")]
		public static extern void ovr_AbuseReportOptions_SetPreventPeopleChooser(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xD0E8B8", Offset = "0xD0E8B8", VA = "0xD0E8B8")]
		public static extern void ovr_AbuseReportOptions_SetReportType(IntPtr handle, AbuseReportType value);

		[PreserveSig]
		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xD0ED08", Offset = "0xD0ED08", VA = "0xD0ED08")]
		public static extern IntPtr ovr_ApplicationOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xD0EFCC", Offset = "0xD0EFCC", VA = "0xD0EFCC")]
		public static extern void ovr_ApplicationOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xD0EE10", Offset = "0xD0EE10", VA = "0xD0EE10")]
		public static void ovr_ApplicationOptions_SetDeeplinkMessage(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xD2CA40", Offset = "0xD2CA40", VA = "0xD2CA40")]
		private static extern void ovr_ApplicationOptions_SetDeeplinkMessage_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xD2CAF0", Offset = "0xD2CAF0", VA = "0xD2CAF0")]
		public static extern IntPtr ovr_MatchmakingOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xD2CB80", Offset = "0xD2CB80", VA = "0xD2CB80")]
		public static extern void ovr_MatchmakingOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xD2CC20", Offset = "0xD2CC20", VA = "0xD2CC20")]
		public static void ovr_MatchmakingOptions_SetCreateRoomDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xD2CCEC", Offset = "0xD2CCEC", VA = "0xD2CCEC")]
		private static extern void ovr_MatchmakingOptions_SetCreateRoomDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xD2CDA4", Offset = "0xD2CDA4", VA = "0xD2CDA4")]
		public static extern void ovr_MatchmakingOptions_ClearCreateRoomDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xD2CE44", Offset = "0xD2CE44", VA = "0xD2CE44")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomJoinPolicy(IntPtr handle, RoomJoinPolicy value);

		[PreserveSig]
		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xD2CEF4", Offset = "0xD2CEF4", VA = "0xD2CEF4")]
		public static extern void ovr_MatchmakingOptions_SetCreateRoomMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xD2CFA4", Offset = "0xD2CFA4", VA = "0xD2CFA4")]
		public static extern void ovr_MatchmakingOptions_AddEnqueueAdditionalUser(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xD2D054", Offset = "0xD2D054", VA = "0xD2D054")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueAdditionalUsers(IntPtr handle);

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xD2D0F4", Offset = "0xD2D0F4", VA = "0xD2D0F4")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt(IntPtr handle, string key, int value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xD2D1A8", Offset = "0xD2D1A8", VA = "0xD2D1A8")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsInt_Native(IntPtr handle, IntPtr key, int value);

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xD2D260", Offset = "0xD2D260", VA = "0xD2D260")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble(IntPtr handle, string key, double value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xD2D31C", Offset = "0xD2D31C", VA = "0xD2D31C")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsDouble_Native(IntPtr handle, IntPtr key, double value);

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xD2D3DC", Offset = "0xD2D3DC", VA = "0xD2D3DC")]
		public static void ovr_MatchmakingOptions_SetEnqueueDataSettingsString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xD2D4A8", Offset = "0xD2D4A8", VA = "0xD2D4A8")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueDataSettingsString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xD2D560", Offset = "0xD2D560", VA = "0xD2D560")]
		public static extern void ovr_MatchmakingOptions_ClearEnqueueDataSettings(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xD2D600", Offset = "0xD2D600", VA = "0xD2D600")]
		public static extern void ovr_MatchmakingOptions_SetEnqueueIsDebug(IntPtr handle, bool value);

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xD2D6B0", Offset = "0xD2D6B0", VA = "0xD2D6B0")]
		public static void ovr_MatchmakingOptions_SetEnqueueQueryKey(IntPtr handle, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xD2D75C", Offset = "0xD2D75C", VA = "0xD2D75C")]
		private static extern void ovr_MatchmakingOptions_SetEnqueueQueryKey_Native(IntPtr handle, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xD2D80C", Offset = "0xD2D80C", VA = "0xD2D80C")]
		public static extern IntPtr ovr_RoomOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xD2D89C", Offset = "0xD2D89C", VA = "0xD2D89C")]
		public static extern void ovr_RoomOptions_Destroy(IntPtr handle);

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xD2D93C", Offset = "0xD2D93C", VA = "0xD2D93C")]
		public static void ovr_RoomOptions_SetDataStoreString(IntPtr handle, string key, string value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xD2DA08", Offset = "0xD2DA08", VA = "0xD2DA08")]
		private static extern void ovr_RoomOptions_SetDataStoreString_Native(IntPtr handle, IntPtr key, IntPtr value);

		[PreserveSig]
		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xD2DAC0", Offset = "0xD2DAC0", VA = "0xD2DAC0")]
		public static extern void ovr_RoomOptions_ClearDataStore(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xD2DB60", Offset = "0xD2DB60", VA = "0xD2DB60")]
		public static extern void ovr_RoomOptions_SetExcludeRecentlyMet(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xD2DC10", Offset = "0xD2DC10", VA = "0xD2DC10")]
		public static extern void ovr_RoomOptions_SetMaxUserResults(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xD2DCC0", Offset = "0xD2DCC0", VA = "0xD2DCC0")]
		public static extern void ovr_RoomOptions_SetOrdering(IntPtr handle, UserOrdering value);

		[PreserveSig]
		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xD2DD70", Offset = "0xD2DD70", VA = "0xD2DD70")]
		public static extern void ovr_RoomOptions_SetRecentlyMetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xD2DE20", Offset = "0xD2DE20", VA = "0xD2DE20")]
		public static extern void ovr_RoomOptions_SetRoomId(IntPtr handle, ulong value);

		[PreserveSig]
		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xD2DED0", Offset = "0xD2DED0", VA = "0xD2DED0")]
		public static extern void ovr_RoomOptions_SetTurnOffUpdates(IntPtr handle, bool value);

		[PreserveSig]
		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xD2DF80", Offset = "0xD2DF80", VA = "0xD2DF80")]
		public static extern IntPtr ovr_UserOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xD2E010", Offset = "0xD2E010", VA = "0xD2E010")]
		public static extern void ovr_UserOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xD2E0B0", Offset = "0xD2E0B0", VA = "0xD2E0B0")]
		public static extern void ovr_UserOptions_SetMaxUsers(IntPtr handle, uint value);

		[PreserveSig]
		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xD2E160", Offset = "0xD2E160", VA = "0xD2E160")]
		public static extern void ovr_UserOptions_AddServiceProvider(IntPtr handle, ServiceProvider value);

		[PreserveSig]
		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xD2E210", Offset = "0xD2E210", VA = "0xD2E210")]
		public static extern void ovr_UserOptions_ClearServiceProviders(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xD2E2B0", Offset = "0xD2E2B0", VA = "0xD2E2B0")]
		public static extern void ovr_UserOptions_SetTimeWindow(IntPtr handle, TimeWindow value);

		[PreserveSig]
		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xD2E360", Offset = "0xD2E360", VA = "0xD2E360")]
		public static extern IntPtr ovr_VoipOptions_Create();

		[PreserveSig]
		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xD2E3F0", Offset = "0xD2E3F0", VA = "0xD2E3F0")]
		public static extern void ovr_VoipOptions_Destroy(IntPtr handle);

		[PreserveSig]
		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xD2E490", Offset = "0xD2E490", VA = "0xD2E490")]
		public static extern void ovr_VoipOptions_SetBitrateForNewConnections(IntPtr handle, VoipBitrate value);

		[PreserveSig]
		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xD2E540", Offset = "0xD2E540", VA = "0xD2E540")]
		public static extern void ovr_VoipOptions_SetCreateNewConnectionUseDtx(IntPtr handle, VoipDtxState value);

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xD2E5F0", Offset = "0xD2E5F0", VA = "0xD2E5F0")]
		public CAPI()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public enum CloudStorageDataStatus
	{
		[Token(Token = "0x400173D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFDAC", Offset = "0x8DFDAC")]
		Unknown,
		[Token(Token = "0x400173E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFDE4", Offset = "0x8DFDE4")]
		InSync,
		[Token(Token = "0x400173F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFE1C", Offset = "0x8DFE1C")]
		NeedsDownload,
		[Token(Token = "0x4001740")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFE54", Offset = "0x8DFE54")]
		RemoteDownloading,
		[Token(Token = "0x4001741")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFE8C", Offset = "0x8DFE8C")]
		NeedsUpload,
		[Token(Token = "0x4001742")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFEC4", Offset = "0x8DFEC4")]
		LocalUploading,
		[Token(Token = "0x4001743")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFEFC", Offset = "0x8DFEFC")]
		InConflict
	}
	[Token(Token = "0x2000380")]
	public enum CloudStorageUpdateStatus
	{
		[Token(Token = "0x4001745")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFF34", Offset = "0x8DFF34")]
		Unknown,
		[Token(Token = "0x4001746")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFF6C", Offset = "0x8DFF6C")]
		Ok,
		[Token(Token = "0x4001747")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFFA4", Offset = "0x8DFFA4")]
		BetterVersionStored,
		[Token(Token = "0x4001748")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8DFFDC", Offset = "0x8DFFDC")]
		ManualMergeRequired
	}
	[Token(Token = "0x2000381")]
	public interface IMicrophone
	{
		[Token(Token = "0x6001BCE")]
		void Start();

		[Token(Token = "0x6001BCF")]
		void Stop();

		[Token(Token = "0x6001BD0")]
		float[] Update();
	}
	[Token(Token = "0x2000382")]
	public interface IVoipPCMSource
	{
		[Token(Token = "0x6001BD1")]
		int GetPCM(float[] dest, int length);

		[Token(Token = "0x6001BD2")]
		void SetSenderID(ulong senderID);

		[Token(Token = "0x6001BD3")]
		void Update();

		[Token(Token = "0x6001BD4")]
		int PeekSizeElements();
	}
	[Token(Token = "0x2000383")]
	public enum KeyValuePairType
	{
		[Token(Token = "0x400174A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0014", Offset = "0x8E0014")]
		String,
		[Token(Token = "0x400174B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E004C", Offset = "0x8E004C")]
		Int,
		[Token(Token = "0x400174C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0084", Offset = "0x8E0084")]
		Double,
		[Token(Token = "0x400174D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E00BC", Offset = "0x8E00BC")]
		Unknown
	}
	[Token(Token = "0x2000384")]
	public enum LaunchType
	{
		[Token(Token = "0x400174F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E00F4", Offset = "0x8E00F4")]
		Unknown,
		[Token(Token = "0x4001750")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E012C", Offset = "0x8E012C")]
		Normal,
		[Token(Token = "0x4001751")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0164", Offset = "0x8E0164")]
		Invite,
		[Token(Token = "0x4001752")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E019C", Offset = "0x8E019C")]
		Coordinated,
		[Token(Token = "0x4001753")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E01D4", Offset = "0x8E01D4")]
		Deeplink
	}
	[Token(Token = "0x2000385")]
	public enum LeaderboardFilterType
	{
		[Token(Token = "0x4001755")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E020C", Offset = "0x8E020C")]
		None,
		[Token(Token = "0x4001756")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0244", Offset = "0x8E0244")]
		Friends,
		[Token(Token = "0x4001757")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E027C", Offset = "0x8E027C")]
		Unknown
	}
	[Token(Token = "0x2000386")]
	public enum LeaderboardStartAt
	{
		[Token(Token = "0x4001759")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E02B4", Offset = "0x8E02B4")]
		Top,
		[Token(Token = "0x400175A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E02EC", Offset = "0x8E02EC")]
		CenteredOnViewer,
		[Token(Token = "0x400175B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0324", Offset = "0x8E0324")]
		CenteredOnViewerOrTop,
		[Token(Token = "0x400175C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E035C", Offset = "0x8E035C")]
		Unknown
	}
	[Token(Token = "0x2000387")]
	public enum LivestreamingAudience
	{
		[Token(Token = "0x400175E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0394", Offset = "0x8E0394")]
		Unknown,
		[Token(Token = "0x400175F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E03CC", Offset = "0x8E03CC")]
		Public,
		[Token(Token = "0x4001760")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0404", Offset = "0x8E0404")]
		Friends,
		[Token(Token = "0x4001761")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E043C", Offset = "0x8E043C")]
		OnlyMe
	}
	[Token(Token = "0x2000388")]
	public enum LivestreamingMicrophoneStatus
	{
		[Token(Token = "0x4001763")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0474", Offset = "0x8E0474")]
		Unknown,
		[Token(Token = "0x4001764")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E04AC", Offset = "0x8E04AC")]
		MicrophoneOn,
		[Token(Token = "0x4001765")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E04E4", Offset = "0x8E04E4")]
		MicrophoneOff
	}
	[Token(Token = "0x2000389")]
	public enum LivestreamingStartStatus
	{
		[Token(Token = "0x4001767")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E051C", Offset = "0x8E051C")]
		Success = 1,
		[Token(Token = "0x4001768")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0554", Offset = "0x8E0554")]
		Unknown = 0,
		[Token(Token = "0x4001769")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E058C", Offset = "0x8E058C")]
		NoPackageSet = -1,
		[Token(Token = "0x400176A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E05C4", Offset = "0x8E05C4")]
		NoFbConnect = -2,
		[Token(Token = "0x400176B")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E05FC", Offset = "0x8E05FC")]
		NoSessionId = -3,
		[Token(Token = "0x400176C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0634", Offset = "0x8E0634")]
		MissingParameters = -4
	}
	[Token(Token = "0x200038A")]
	public enum MatchmakingCriterionImportance
	{
		[Token(Token = "0x400176E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E066C", Offset = "0x8E066C")]
		Required,
		[Token(Token = "0x400176F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E06A4", Offset = "0x8E06A4")]
		High,
		[Token(Token = "0x4001770")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E06DC", Offset = "0x8E06DC")]
		Medium,
		[Token(Token = "0x4001771")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0714", Offset = "0x8E0714")]
		Low,
		[Token(Token = "0x4001772")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E074C", Offset = "0x8E074C")]
		Unknown
	}
	[Token(Token = "0x200038B")]
	public class MatchmakingOptions
	{
		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xB5D5F4", Offset = "0xB5D5F4", VA = "0xB5D5F4")]
		public MatchmakingOptions()
		{
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xB5D66C", Offset = "0xB5D66C", VA = "0xB5D66C")]
		public void SetCreateRoomDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xB5D6F0", Offset = "0xB5D6F0", VA = "0xB5D6F0")]
		public void ClearCreateRoomDataStore()
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xB5D75C", Offset = "0xB5D75C", VA = "0xB5D75C")]
		public void SetCreateRoomJoinPolicy(RoomJoinPolicy value)
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xB5D7D8", Offset = "0xB5D7D8", VA = "0xB5D7D8")]
		public void SetCreateRoomMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xB5D854", Offset = "0xB5D854", VA = "0xB5D854")]
		public void AddEnqueueAdditionalUser(ulong userID)
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xB5D8D0", Offset = "0xB5D8D0", VA = "0xB5D8D0")]
		public void ClearEnqueueAdditionalUsers()
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xB5D93C", Offset = "0xB5D93C", VA = "0xB5D93C")]
		public void SetEnqueueDataSettings(string key, int value)
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xB5D9C0", Offset = "0xB5D9C0", VA = "0xB5D9C0")]
		public void SetEnqueueDataSettings(string key, double value)
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xB5DA4C", Offset = "0xB5DA4C", VA = "0xB5DA4C")]
		public void SetEnqueueDataSettings(string key, string value)
		{
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xB5DAD0", Offset = "0xB5DAD0", VA = "0xB5DAD0")]
		public void ClearEnqueueDataSettings()
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xB5DB3C", Offset = "0xB5DB3C", VA = "0xB5DB3C")]
		public void SetEnqueueIsDebug(bool value)
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xB5DBB8", Offset = "0xB5DBB8", VA = "0xB5DBB8")]
		public void SetEnqueueQueryKey(string value)
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xB5DC34", Offset = "0xB5DC34", VA = "0xB5DC34")]
		public static explicit operator IntPtr(MatchmakingOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xB5DC84", Offset = "0xB5DC84", VA = "0xB5DC84", Slot = "1")]
		~MatchmakingOptions()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public enum MatchmakingStatApproach
	{
		[Token(Token = "0x4001775")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0784", Offset = "0x8E0784")]
		Unknown,
		[Token(Token = "0x4001776")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E07BC", Offset = "0x8E07BC")]
		Trailing,
		[Token(Token = "0x4001777")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E07F4", Offset = "0x8E07F4")]
		Swingy
	}
	[Token(Token = "0x200038D")]
	public enum MediaContentType
	{
		[Token(Token = "0x4001779")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E082C", Offset = "0x8E082C")]
		Unknown,
		[Token(Token = "0x400177A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0864", Offset = "0x8E0864")]
		Photo
	}
	[Token(Token = "0x200038E")]
	public sealed class Packet : IDisposable
	{
		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly ulong size;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IntPtr packetHandle;

		[Token(Token = "0x170001A4")]
		public ulong SenderID
		{
			[Token(Token = "0x6001BE6")]
			[Address(RVA = "0xB608A4", Offset = "0xB608A4", VA = "0xB608A4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001A5")]
		public ulong Size
		{
			[Token(Token = "0x6001BE7")]
			[Address(RVA = "0xB60910", Offset = "0xB60910", VA = "0xB60910")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001A6")]
		public SendPolicy Policy
		{
			[Token(Token = "0x6001BE8")]
			[Address(RVA = "0xB60918", Offset = "0xB60918", VA = "0xB60918")]
			get
			{
				return default(SendPolicy);
			}
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xB60684", Offset = "0xB60684", VA = "0xB60684")]
		public Packet(IntPtr packetHandle)
		{
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xB60744", Offset = "0xB60744", VA = "0xB60744")]
		public ulong ReadBytes(byte[] destination)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xB60984", Offset = "0xB60984", VA = "0xB60984", Slot = "1")]
		~Packet()
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xB609F8", Offset = "0xB609F8", VA = "0xB609F8", Slot = "4")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public enum PeerConnectionState
	{
		[Token(Token = "0x400177E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E089C", Offset = "0x8E089C")]
		Unknown,
		[Token(Token = "0x400177F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E08D4", Offset = "0x8E08D4")]
		Connected,
		[Token(Token = "0x4001780")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E090C", Offset = "0x8E090C")]
		Timeout,
		[Token(Token = "0x4001781")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0944", Offset = "0x8E0944")]
		Closed
	}
	[Token(Token = "0x2000390")]
	public enum PermissionGrantStatus
	{
		[Token(Token = "0x4001783")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E097C", Offset = "0x8E097C")]
		Unknown,
		[Token(Token = "0x4001784")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E09B4", Offset = "0x8E09B4")]
		Granted,
		[Token(Token = "0x4001785")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E09EC", Offset = "0x8E09EC")]
		Denied,
		[Token(Token = "0x4001786")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0A24", Offset = "0x8E0A24")]
		Blocked
	}
	[Token(Token = "0x2000391")]
	public enum PermissionType
	{
		[Token(Token = "0x4001788")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0A5C", Offset = "0x8E0A5C")]
		Unknown,
		[Token(Token = "0x4001789")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0A94", Offset = "0x8E0A94")]
		Microphone,
		[Token(Token = "0x400178A")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0ACC", Offset = "0x8E0ACC")]
		WriteExternalStorage
	}
	[Token(Token = "0x2000392")]
	public enum PlatformInitializeResult
	{
		[Token(Token = "0x400178C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0B04", Offset = "0x8E0B04")]
		Success = 0,
		[Token(Token = "0x400178D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0B3C", Offset = "0x8E0B3C")]
		Uninitialized = -1,
		[Token(Token = "0x400178E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0B74", Offset = "0x8E0B74")]
		PreLoaded = -2,
		[Token(Token = "0x400178F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0BAC", Offset = "0x8E0BAC")]
		FileInvalid = -3,
		[Token(Token = "0x4001790")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0BE4", Offset = "0x8E0BE4")]
		SignatureInvalid = -4,
		[Token(Token = "0x4001791")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0C1C", Offset = "0x8E0C1C")]
		UnableToVerify = -5,
		[Token(Token = "0x4001792")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0C54", Offset = "0x8E0C54")]
		VersionMismatch = -6,
		[Token(Token = "0x4001793")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0C8C", Offset = "0x8E0C8C")]
		Unknown = -7,
		[Token(Token = "0x4001794")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0CC4", Offset = "0x8E0CC4")]
		InvalidCredentials = -8,
		[Token(Token = "0x4001795")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0CFC", Offset = "0x8E0CFC")]
		NotEntitled = -9
	}
	[Token(Token = "0x2000393")]
	public static class PlatformInternal
	{
		[Token(Token = "0x200067C")]
		public enum MessageTypeInternal : uint
		{
			[Token(Token = "0x40023FB")]
			Application_ExecuteCoordinatedLaunch = 645772532u,
			[Token(Token = "0x40023FC")]
			Application_GetInstalledApplications = 1376744524u,
			[Token(Token = "0x40023FD")]
			Avatar_UpdateMetaData = 2077219214u,
			[Token(Token = "0x40023FE")]
			Cal_FinalizeApplication = 497667029u,
			[Token(Token = "0x40023FF")]
			Cal_GetSuggestedApplications = 1450209301u,
			[Token(Token = "0x4002400")]
			Cal_ProposeApplication = 1317270237u,
			[Token(Token = "0x4002401")]
			CloudStorage2_GetUserDirectoryPath = 1990471406u,
			[Token(Token = "0x4002402")]
			GraphAPI_Get = 822018158u,
			[Token(Token = "0x4002403")]
			GraphAPI_Post = 1990567876u,
			[Token(Token = "0x4002404")]
			HTTP_Get = 1874211363u,
			[Token(Token = "0x4002405")]
			HTTP_GetToFile = 1317133401u,
			[Token(Token = "0x4002406")]
			HTTP_MultiPartPost = 1480774160u,
			[Token(Token = "0x4002407")]
			HTTP_Post = 1798743375u,
			[Token(Token = "0x4002408")]
			Livestreaming_IsAllowedForApplication = 191729014u,
			[Token(Token = "0x4002409")]
			Livestreaming_StartPartyStream = 2066701532u,
			[Token(Token = "0x400240A")]
			Livestreaming_StartStream = 1343932350u,
			[Token(Token = "0x400240B")]
			Livestreaming_StopPartyStream = 661065560u,
			[Token(Token = "0x400240C")]
			Livestreaming_StopStream = 1155796426u,
			[Token(Token = "0x400240D")]
			Livestreaming_UpdateCommentsOverlayVisibility = 528318516u,
			[Token(Token = "0x400240E")]
			Livestreaming_UpdateMicStatus = 475495815u,
			[Token(Token = "0x400240F")]
			Party_Create = 450042703u,
			[Token(Token = "0x4002410")]
			Party_GatherInApplication = 1921499523u,
			[Token(Token = "0x4002411")]
			Party_Get = 1586058173u,
			[Token(Token = "0x4002412")]
			Party_GetCurrentForUser = 1489764138u,
			[Token(Token = "0x4002413")]
			Party_Invite = 901104867u,
			[Token(Token = "0x4002414")]
			Party_Join = 1744993395u,
			[Token(Token = "0x4002415")]
			Party_Leave = 848430801u,
			[Token(Token = "0x4002416")]
			Room_CreateOrUpdateAndJoinNamed = 2089683601u,
			[Token(Token = "0x4002417")]
			Room_GetNamedRooms = 125660812u,
			[Token(Token = "0x4002418")]
			Room_GetSocialRooms = 1636310390u,
			[Token(Token = "0x4002419")]
			SystemPermissions_GetStatus = 493497353u,
			[Token(Token = "0x400241A")]
			SystemPermissions_LaunchDeeplink = 442139697u,
			[Token(Token = "0x400241B")]
			User_CancelRecordingForReportFlow = 65065289u,
			[Token(Token = "0x400241C")]
			User_GetLinkedAccounts = 1469314134u,
			[Token(Token = "0x400241D")]
			User_LaunchBlockFlow = 1876305192u,
			[Token(Token = "0x400241E")]
			User_LaunchReportFlow = 1449304081u,
			[Token(Token = "0x400241F")]
			User_LaunchReportFlow2 = 2139314275u,
			[Token(Token = "0x4002420")]
			User_LaunchUnblockFlow = 346172055u,
			[Token(Token = "0x4002421")]
			User_NewEntitledTestUser = 292822787u,
			[Token(Token = "0x4002422")]
			User_NewTestUser = 921194380u,
			[Token(Token = "0x4002423")]
			User_NewTestUserFriends = 517416647u,
			[Token(Token = "0x4002424")]
			User_StartRecordingForReportFlow = 1819161571u,
			[Token(Token = "0x4002425")]
			User_StopRecordingAndLaunchReportFlow = 1618513035u,
			[Token(Token = "0x4002426")]
			User_StopRecordingAndLaunchReportFlow2 = 432190251u,
			[Token(Token = "0x4002427")]
			User_TestUserCreateDeviceManifest = 1701884605u
		}

		[Token(Token = "0x200067D")]
		public static class HTTP
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xB60A90", Offset = "0xB60A90", VA = "0xB60A90")]
		public static void CrashApplication()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public sealed class PlatformSettings : ScriptableObject
	{
		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string ovrAppID;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string ovrMobileAppID;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool ovrUseStandalonePlatform;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool ovrEnableARM64Support;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformSettings instance;

		[Token(Token = "0x170001A7")]
		public static string AppID
		{
			[Token(Token = "0x6001BEC")]
			[Address(RVA = "0xB60AF0", Offset = "0xB60AF0", VA = "0xB60AF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BED")]
			[Address(RVA = "0xB60C30", Offset = "0xB60C30", VA = "0xB60C30")]
			set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public static string MobileAppID
		{
			[Token(Token = "0x6001BEE")]
			[Address(RVA = "0xB60C60", Offset = "0xB60C60", VA = "0xB60C60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BEF")]
			[Address(RVA = "0xB60C8C", Offset = "0xB60C8C", VA = "0xB60C8C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A9")]
		public static bool UseStandalonePlatform
		{
			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0xB60CBC", Offset = "0xB60CBC", VA = "0xB60CBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0xB60CE8", Offset = "0xB60CE8", VA = "0xB60CE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001AA")]
		public static bool EnableARM64Support
		{
			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0xB60D1C", Offset = "0xB60D1C", VA = "0xB60D1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001BF3")]
			[Address(RVA = "0xB60D48", Offset = "0xB60D48", VA = "0xB60D48")]
			set
			{
			}
		}

		[Token(Token = "0x170001AB")]
		public static PlatformSettings Instance
		{
			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0xB60B1C", Offset = "0xB60B1C", VA = "0xB60B1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BF5")]
			[Address(RVA = "0xB60D7C", Offset = "0xB60D7C", VA = "0xB60D7C")]
			set
			{
			}
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xB60DD0", Offset = "0xB60DD0", VA = "0xB60DD0")]
		public PlatformSettings()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public enum RoomJoinability
	{
		[Token(Token = "0x400179C")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0D74", Offset = "0x8E0D74")]
		Unknown,
		[Token(Token = "0x400179D")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0DAC", Offset = "0x8E0DAC")]
		AreIn,
		[Token(Token = "0x400179E")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0DE4", Offset = "0x8E0DE4")]
		AreKicked,
		[Token(Token = "0x400179F")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0E1C", Offset = "0x8E0E1C")]
		CanJoin,
		[Token(Token = "0x40017A0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0E54", Offset = "0x8E0E54")]
		IsFull,
		[Token(Token = "0x40017A1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0E8C", Offset = "0x8E0E8C")]
		NoViewer,
		[Token(Token = "0x40017A2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0EC4", Offset = "0x8E0EC4")]
		PolicyPrevents
	}
	[Token(Token = "0x2000396")]
	public enum RoomJoinPolicy
	{
		[Token(Token = "0x40017A4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0EFC", Offset = "0x8E0EFC")]
		None,
		[Token(Token = "0x40017A5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0F34", Offset = "0x8E0F34")]
		Everyone,
		[Token(Token = "0x40017A6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0F6C", Offset = "0x8E0F6C")]
		FriendsOfMembers,
		[Token(Token = "0x40017A7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0FA4", Offset = "0x8E0FA4")]
		FriendsOfOwner,
		[Token(Token = "0x40017A8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E0FDC", Offset = "0x8E0FDC")]
		InvitedUsers,
		[Token(Token = "0x40017A9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1014", Offset = "0x8E1014")]
		Unknown
	}
	[Token(Token = "0x2000397")]
	public enum RoomMembershipLockStatus
	{
		[Token(Token = "0x40017AB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E104C", Offset = "0x8E104C")]
		Unknown,
		[Token(Token = "0x40017AC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1084", Offset = "0x8E1084")]
		Lock,
		[Token(Token = "0x40017AD")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E10BC", Offset = "0x8E10BC")]
		Unlock
	}
	[Token(Token = "0x2000398")]
	public class RoomOptions
	{
		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xB60E30", Offset = "0xB60E30", VA = "0xB60E30")]
		public RoomOptions()
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xB60EA8", Offset = "0xB60EA8", VA = "0xB60EA8")]
		public void SetDataStore(string key, string value)
		{
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xB60F2C", Offset = "0xB60F2C", VA = "0xB60F2C")]
		public void ClearDataStore()
		{
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xB60F98", Offset = "0xB60F98", VA = "0xB60F98")]
		public void SetExcludeRecentlyMet(bool value)
		{
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xB61014", Offset = "0xB61014", VA = "0xB61014")]
		public void SetMaxUserResults(uint value)
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xB61090", Offset = "0xB61090", VA = "0xB61090")]
		public void SetOrdering(UserOrdering value)
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xB6110C", Offset = "0xB6110C", VA = "0xB6110C")]
		public void SetRecentlyMetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xB61188", Offset = "0xB61188", VA = "0xB61188")]
		public void SetRoomId(ulong value)
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xB61204", Offset = "0xB61204", VA = "0xB61204")]
		public void SetTurnOffUpdates(bool value)
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xB61280", Offset = "0xB61280", VA = "0xB61280")]
		public static explicit operator IntPtr(RoomOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xB612D0", Offset = "0xB612D0", VA = "0xB612D0", Slot = "1")]
		~RoomOptions()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public enum RoomType
	{
		[Token(Token = "0x40017B0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E10F4", Offset = "0x8E10F4")]
		Unknown,
		[Token(Token = "0x40017B1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E112C", Offset = "0x8E112C")]
		Matchmaking,
		[Token(Token = "0x40017B2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1164", Offset = "0x8E1164")]
		Moderated,
		[Token(Token = "0x40017B3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E119C", Offset = "0x8E119C")]
		Private,
		[Token(Token = "0x40017B4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E11D4", Offset = "0x8E11D4")]
		Solo
	}
	[Token(Token = "0x200039A")]
	public enum SdkAccountType
	{
		[Token(Token = "0x40017B6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E120C", Offset = "0x8E120C")]
		Unknown,
		[Token(Token = "0x40017B7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1244", Offset = "0x8E1244")]
		Oculus,
		[Token(Token = "0x40017B8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E127C", Offset = "0x8E127C")]
		FacebookGameroom
	}
	[Token(Token = "0x200039B")]
	public enum SendPolicy
	{
		[Token(Token = "0x40017BA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E12B4", Offset = "0x8E12B4")]
		Unreliable,
		[Token(Token = "0x40017BB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E12EC", Offset = "0x8E12EC")]
		Reliable,
		[Token(Token = "0x40017BC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1324", Offset = "0x8E1324")]
		Unknown
	}
	[Token(Token = "0x200039C")]
	public enum ServiceProvider
	{
		[Token(Token = "0x40017BE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E135C", Offset = "0x8E135C")]
		Unknown,
		[Token(Token = "0x40017BF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1394", Offset = "0x8E1394")]
		Dropbox,
		[Token(Token = "0x40017C0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E13CC", Offset = "0x8E13CC")]
		Facebook,
		[Token(Token = "0x40017C1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1404", Offset = "0x8E1404")]
		Google,
		[Token(Token = "0x40017C2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E143C", Offset = "0x8E143C")]
		Instagram,
		[Token(Token = "0x40017C3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1474", Offset = "0x8E1474")]
		RemoteMedia
	}
	[Token(Token = "0x200039D")]
	public enum ShareMediaStatus
	{
		[Token(Token = "0x40017C5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E14AC", Offset = "0x8E14AC")]
		Unknown,
		[Token(Token = "0x40017C6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E14E4", Offset = "0x8E14E4")]
		Shared,
		[Token(Token = "0x40017C7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E151C", Offset = "0x8E151C")]
		Canceled
	}
	[Token(Token = "0x200039E")]
	public sealed class StandalonePlatform
	{
		[Token(Token = "0x200067E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8CD5F8", Offset = "0x8CD5F8")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0xB72C50", Offset = "0xB72C50", VA = "0xB72C50")]
		public StandalonePlatform()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public sealed class StandalonePlatformSettings
	{
		[Token(Token = "0x170001AC")]
		public static string OculusPlatformTestUserEmail
		{
			[Token(Token = "0x6001C03")]
			[Address(RVA = "0xB7317C", Offset = "0xB7317C", VA = "0xB7317C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C04")]
			[Address(RVA = "0xB731CC", Offset = "0xB731CC", VA = "0xB731CC")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public static string OculusPlatformTestUserPassword
		{
			[Token(Token = "0x6001C05")]
			[Address(RVA = "0xB731D0", Offset = "0xB731D0", VA = "0xB731D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C06")]
			[Address(RVA = "0xB73220", Offset = "0xB73220", VA = "0xB73220")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public static string OculusPlatformTestUserAccessToken
		{
			[Token(Token = "0x6001C07")]
			[Address(RVA = "0xB73224", Offset = "0xB73224", VA = "0xB73224")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C08")]
			[Address(RVA = "0xB73274", Offset = "0xB73274", VA = "0xB73274")]
			set
			{
			}
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xB73278", Offset = "0xB73278", VA = "0xB73278")]
		public StandalonePlatformSettings()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public enum SystemVoipStatus
	{
		[Token(Token = "0x40017C9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1554", Offset = "0x8E1554")]
		Unknown,
		[Token(Token = "0x40017CA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E158C", Offset = "0x8E158C")]
		Unavailable,
		[Token(Token = "0x40017CB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E15C4", Offset = "0x8E15C4")]
		Suppressed,
		[Token(Token = "0x40017CC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E15FC", Offset = "0x8E15FC")]
		Active
	}
	[Token(Token = "0x20003A1")]
	public enum TimeWindow
	{
		[Token(Token = "0x40017CE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1634", Offset = "0x8E1634")]
		Unknown,
		[Token(Token = "0x40017CF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E166C", Offset = "0x8E166C")]
		OneHour,
		[Token(Token = "0x40017D0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E16A4", Offset = "0x8E16A4")]
		OneDay,
		[Token(Token = "0x40017D1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E16DC", Offset = "0x8E16DC")]
		OneWeek,
		[Token(Token = "0x40017D2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1714", Offset = "0x8E1714")]
		ThirtyDays,
		[Token(Token = "0x40017D3")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E174C", Offset = "0x8E174C")]
		NinetyDays
	}
	[Token(Token = "0x20003A2")]
	public class UserOptions
	{
		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xB73280", Offset = "0xB73280", VA = "0xB73280")]
		public UserOptions()
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xB732F8", Offset = "0xB732F8", VA = "0xB732F8")]
		public void SetMaxUsers(uint value)
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xB73374", Offset = "0xB73374", VA = "0xB73374")]
		public void AddServiceProvider(ServiceProvider value)
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xB733F0", Offset = "0xB733F0", VA = "0xB733F0")]
		public void ClearServiceProviders()
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xB7345C", Offset = "0xB7345C", VA = "0xB7345C")]
		public void SetTimeWindow(TimeWindow value)
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xB734D8", Offset = "0xB734D8", VA = "0xB734D8")]
		public static explicit operator IntPtr(UserOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xB73528", Offset = "0xB73528", VA = "0xB73528", Slot = "1")]
		~UserOptions()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public enum UserOrdering
	{
		[Token(Token = "0x40017D6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1784", Offset = "0x8E1784")]
		Unknown,
		[Token(Token = "0x40017D7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E17BC", Offset = "0x8E17BC")]
		None,
		[Token(Token = "0x40017D8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E17F4", Offset = "0x8E17F4")]
		PresenceAlphabetical
	}
	[Token(Token = "0x20003A4")]
	public enum UserPresenceStatus
	{
		[Token(Token = "0x40017DA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E182C", Offset = "0x8E182C")]
		Unknown,
		[Token(Token = "0x40017DB")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1864", Offset = "0x8E1864")]
		Online,
		[Token(Token = "0x40017DC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E189C", Offset = "0x8E189C")]
		Offline
	}
	[Token(Token = "0x20003A5")]
	public class VoipAudioSourceHiLevel : MonoBehaviour
	{
		[Token(Token = "0x200067F")]
		public class FilterReadDelegate : MonoBehaviour
		{
			[Token(Token = "0x4002428")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public VoipAudioSourceHiLevel parent;

			[Token(Token = "0x4002429")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float[] scratchBuffer;

			[Token(Token = "0x600275A")]
			[Address(RVA = "0xB73D68", Offset = "0xB73D68", VA = "0xB73D68")]
			private void Awake()
			{
			}

			[Token(Token = "0x600275B")]
			[Address(RVA = "0xB73E20", Offset = "0xB73E20", VA = "0xB73E20")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}

			[Token(Token = "0x600275C")]
			[Address(RVA = "0xB743F0", Offset = "0xB743F0", VA = "0xB743F0")]
			public FilterReadDelegate()
			{
			}
		}

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initialPlaybackDelayMS;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioSource audioSource;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float peakAmplitude;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IVoipPCMSource pcmSource;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int audioSystemPlaybackFrequency;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static bool verboseLogging;

		[Token(Token = "0x170001AF")]
		public ulong senderID
		{
			[Token(Token = "0x6001C11")]
			[Address(RVA = "0xB72B88", Offset = "0xB72B88", VA = "0xB72B88")]
			set
			{
			}
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xB735EC", Offset = "0xB735EC", VA = "0xB735EC")]
		protected void Stop()
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xB735F0", Offset = "0xB735F0", VA = "0xB735F0")]
		private VoipSampleRate SampleRateToEnum(int rate)
		{
			return default(VoipSampleRate);
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xB7362C", Offset = "0xB7362C", VA = "0xB7362C")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0xB73928", Offset = "0xB73928", VA = "0xB73928")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0xB73958", Offset = "0xB73958", VA = "0xB73958", Slot = "4")]
		protected virtual void CreatePCMSource()
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0xB739C0", Offset = "0xB739C0", VA = "0xB739C0")]
		protected static int MSToElements(int ms)
		{
			return default(int);
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0xB73A48", Offset = "0xB73A48", VA = "0xB73A48")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xB73D5C", Offset = "0xB73D5C", VA = "0xB73D5C")]
		public VoipAudioSourceHiLevel()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public enum VoipBitrate
	{
		[Token(Token = "0x40017E4")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E18D4", Offset = "0x8E18D4")]
		Unknown,
		[Token(Token = "0x40017E5")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E190C", Offset = "0x8E190C")]
		B16000,
		[Token(Token = "0x40017E6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1944", Offset = "0x8E1944")]
		B24000,
		[Token(Token = "0x40017E7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E197C", Offset = "0x8E197C")]
		B32000,
		[Token(Token = "0x40017E8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E19B4", Offset = "0x8E19B4")]
		B64000,
		[Token(Token = "0x40017E9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E19EC", Offset = "0x8E19EC")]
		B96000,
		[Token(Token = "0x40017EA")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1A24", Offset = "0x8E1A24")]
		B128000
	}
	[Token(Token = "0x20003A7")]
	public enum VoipDtxState
	{
		[Token(Token = "0x40017EC")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1A5C", Offset = "0x8E1A5C")]
		Unknown,
		[Token(Token = "0x40017ED")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1A94", Offset = "0x8E1A94")]
		Enabled,
		[Token(Token = "0x40017EE")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1ACC", Offset = "0x8E1ACC")]
		Disabled
	}
	[Token(Token = "0x20003A8")]
	public enum VoipMuteState
	{
		[Token(Token = "0x40017F0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1B04", Offset = "0x8E1B04")]
		Unknown,
		[Token(Token = "0x40017F1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1B3C", Offset = "0x8E1B3C")]
		Muted,
		[Token(Token = "0x40017F2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1B74", Offset = "0x8E1B74")]
		Unmuted
	}
	[Token(Token = "0x20003A9")]
	public class VoipOptions
	{
		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr Handle;

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xB743F8", Offset = "0xB743F8", VA = "0xB743F8")]
		public VoipOptions()
		{
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xB74470", Offset = "0xB74470", VA = "0xB74470")]
		public void SetBitrateForNewConnections(VoipBitrate value)
		{
		}

		[Token(Token = "0x6001C1D")]
		[Address(RVA = "0xB744EC", Offset = "0xB744EC", VA = "0xB744EC")]
		public void SetCreateNewConnectionUseDtx(VoipDtxState value)
		{
		}

		[Token(Token = "0x6001C1E")]
		[Address(RVA = "0xB74568", Offset = "0xB74568", VA = "0xB74568")]
		public static explicit operator IntPtr(VoipOptions options)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001C1F")]
		[Address(RVA = "0xB745B8", Offset = "0xB745B8", VA = "0xB745B8", Slot = "1")]
		~VoipOptions()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class VoipPCMSourceNative : IVoipPCMSource
	{
		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong senderID;

		[Token(Token = "0x6001C20")]
		[Address(RVA = "0xB7467C", Offset = "0xB7467C", VA = "0xB7467C", Slot = "4")]
		public int GetPCM(float[] dest, int length)
		{
			return default(int);
		}

		[Token(Token = "0x6001C21")]
		[Address(RVA = "0xB7473C", Offset = "0xB7473C", VA = "0xB7473C", Slot = "5")]
		public void SetSenderID(ulong senderID)
		{
		}

		[Token(Token = "0x6001C22")]
		[Address(RVA = "0xB74744", Offset = "0xB74744", VA = "0xB74744", Slot = "7")]
		public int PeekSizeElements()
		{
			return default(int);
		}

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xB747E4", Offset = "0xB747E4", VA = "0xB747E4", Slot = "6")]
		public void Update()
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xB739B8", Offset = "0xB739B8", VA = "0xB739B8")]
		public VoipPCMSourceNative()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public enum VoipSampleRate
	{
		[Token(Token = "0x40017F6")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1BAC", Offset = "0x8E1BAC")]
		Unknown,
		[Token(Token = "0x40017F7")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1BE4", Offset = "0x8E1BE4")]
		HZ24000,
		[Token(Token = "0x40017F8")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1C1C", Offset = "0x8E1C1C")]
		HZ44100,
		[Token(Token = "0x40017F9")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0x8E1C54", Offset = "0x8E1C54")]
		HZ48000
	}
	[Token(Token = "0x20003AC")]
	public class WindowsPlatform
	{
		[Token(Token = "0x2000680")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x8CD60C", Offset = "0x8CD60C")]
		public delegate void UnityLogDelegate(IntPtr tag, IntPtr msg);

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xB747E8", Offset = "0xB747E8", VA = "0xB747E8")]
		private void CPPLogCallback(IntPtr tag, IntPtr message)
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xB748C0", Offset = "0xB748C0", VA = "0xB748C0")]
		private IntPtr getCallbackPointer()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xB74900", Offset = "0xB74900", VA = "0xB74900")]
		public bool Initialize(string appId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xB749EC", Offset = "0xB749EC", VA = "0xB749EC")]
		public WindowsPlatform()
		{
		}
	}
}
namespace Oculus.Platform.Models
{
	[Token(Token = "0x20003AD")]
	public class AbuseReportRecording
	{
		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string RecordingUuid;

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xB5DD48", Offset = "0xB5DD48", VA = "0xB5DD48")]
		public AbuseReportRecording(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public class ApplicationVersion
	{
		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CurrentCode;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string CurrentName;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int LatestCode;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string LatestName;

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xB5DDD0", Offset = "0xB5DDD0", VA = "0xB5DDD0")]
		public ApplicationVersion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public class AssetDetails
	{
		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string AssetType;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string DownloadStatus;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Filepath;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string IapStatus;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly LanguagePackInfo LanguageOptional;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E1C8C", Offset = "0x8E1C8C")]
		public readonly LanguagePackInfo Language;

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xB5DE88", Offset = "0xB5DE88", VA = "0xB5DE88")]
		public AssetDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public class AssetFileDeleteResult
	{
		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xB5E04C", Offset = "0xB5E04C", VA = "0xB5E04C")]
		public AssetFileDeleteResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class AssetFileDownloadCancelResult
	{
		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Filepath;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Success;

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xB5E108", Offset = "0xB5E108", VA = "0xB5E108")]
		public AssetFileDownloadCancelResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class AssetFileDownloadResult
	{
		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetId;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Filepath;

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xB5E1C4", Offset = "0xB5E1C4", VA = "0xB5E1C4")]
		public AssetFileDownloadResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class AssetFileDownloadUpdate
	{
		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong AssetFileId;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong AssetId;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint BytesTotal;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly int BytesTransferred;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly bool Completed;

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xB5E25C", Offset = "0xB5E25C", VA = "0xB5E25C")]
		public AssetFileDownloadUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public class CalApplicationFinalized
	{
		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CountdownMS;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string LaunchDetails;

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xB5E328", Offset = "0xB5E328", VA = "0xB5E328")]
		public CalApplicationFinalized(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public class CalApplicationProposed
	{
		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xB5E3D0", Offset = "0xB5E3D0", VA = "0xB5E3D0")]
		public CalApplicationProposed(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003B6")]
	public class CalApplicationSuggestion
	{
		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string SocialContext;

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xB5E458", Offset = "0xB5E458", VA = "0xB5E458")]
		public CalApplicationSuggestion(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class CloudStorageConflictMetadata
	{
		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly CloudStorageMetadata Local;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly CloudStorageMetadata Remote;

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xB5E4F0", Offset = "0xB5E4F0", VA = "0xB5E4F0")]
		public CloudStorageConflictMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class CloudStorageData
	{
		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Data;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Key;

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xB5E6C8", Offset = "0xB5E6C8", VA = "0xB5E6C8")]
		public CloudStorageData(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public class CloudStorageMetadata
	{
		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Counter;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint DataSize;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string ExtraData;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Key;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly ulong SaveTime;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly CloudStorageDataStatus Status;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string VersionHandle;

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xB5E5D0", Offset = "0xB5E5D0", VA = "0xB5E5D0")]
		public CloudStorageMetadata(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public class CloudStorageUpdateResponse
	{
		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bucket;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Key;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly CloudStorageUpdateStatus Status;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string VersionHandle;

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xB5E780", Offset = "0xB5E780", VA = "0xB5E780")]
		public CloudStorageUpdateResponse(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class Error
	{
		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xB5E838", Offset = "0xB5E838", VA = "0xB5E838")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public class HttpTransferUpdate
	{
		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly byte[] Payload;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsCompleted;

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xB5E878", Offset = "0xB5E878", VA = "0xB5E878")]
		public HttpTransferUpdate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public class InstalledApplication
	{
		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string ApplicationId;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string PackageName;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Status;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly int VersionCode;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string VersionName;

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xB5E9C0", Offset = "0xB5E9C0", VA = "0xB5E9C0")]
		public InstalledApplication(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public class LanguagePackInfo
	{
		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string EnglishName;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string NativeName;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Tag;

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xB5DFA4", Offset = "0xB5DFA4", VA = "0xB5DFA4")]
		public LanguagePackInfo(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class LaunchBlockFlowResult
	{
		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidBlock;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidCancel;

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xB5EA88", Offset = "0xB5EA88", VA = "0xB5EA88")]
		public LaunchBlockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class LaunchDetails
	{
		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string DeeplinkMessage;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string LaunchSource;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly LaunchType LaunchType;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong RoomID;

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xB5EB28", Offset = "0xB5EB28", VA = "0xB5EB28")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8EB80C", Offset = "0x8EB80C")]
		public LaunchDetails(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public class LaunchFriendRequestFlowResult
	{
		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidSendRequest;

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xB5EBF4", Offset = "0xB5EBF4", VA = "0xB5EBF4")]
		public LaunchFriendRequestFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class LaunchReportFlowResult
	{
		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserReportId;

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xB5EC94", Offset = "0xB5EC94", VA = "0xB5EC94")]
		public LaunchReportFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class LaunchUnblockFlowResult
	{
		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool DidUnblock;

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xB5ED30", Offset = "0xB5ED30", VA = "0xB5ED30")]
		public LaunchUnblockFlowResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public class LeaderboardEntry
	{
		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly byte[] ExtraData;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly int Rank;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly long Score;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime Timestamp;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly User User;

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xB5EDD0", Offset = "0xB5EDD0", VA = "0xB5EDD0")]
		public LeaderboardEntry(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public class LinkedAccount
	{
		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string AccessToken;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ServiceProvider ServiceProvider;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string UserId;

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xB5EFA4", Offset = "0xB5EFA4", VA = "0xB5EFA4")]
		public LinkedAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public class LivestreamingApplicationStatus
	{
		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool StreamingEnabled;

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xB5F04C", Offset = "0xB5F04C", VA = "0xB5F04C")]
		public LivestreamingApplicationStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class LivestreamingStartResult
	{
		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly LivestreamingStartStatus StreamingResult;

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xB5F0D8", Offset = "0xB5F0D8", VA = "0xB5F0D8")]
		public LivestreamingStartResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class LivestreamingStatus
	{
		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CommentsVisible;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public readonly bool IsPaused;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public readonly bool LivestreamingEnabled;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int LivestreamingType;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool MicEnabled;

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xB5F160", Offset = "0xB5F160", VA = "0xB5F160")]
		public LivestreamingStatus(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class LivestreamingVideoStats
	{
		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int CommentCount;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int ReactionCount;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string TotalViews;

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xB5F238", Offset = "0xB5F238", VA = "0xB5F238")]
		public LivestreamingVideoStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public class MatchmakingAdminSnapshot
	{
		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly double MyCurrentThreshold;

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xB5F2E0", Offset = "0xB5F2E0", VA = "0xB5F2E0")]
		public MatchmakingAdminSnapshot(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class MatchmakingAdminSnapshotCandidate
	{
		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool CanMatch;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double MyTotalScore;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly double TheirCurrentThreshold;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly double TheirTotalScore;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string TraceId;

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xB5F368", Offset = "0xB5F368", VA = "0xB5F368")]
		public MatchmakingAdminSnapshotCandidate(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class MatchmakingBrowseResult
	{
		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult EnqueueResult;

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xB5F434", Offset = "0xB5F434", VA = "0xB5F434")]
		public MatchmakingBrowseResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class MatchmakingEnqueuedUser
	{
		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Dictionary<string, string> CustomData;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly User UserOptional;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E1CC4", Offset = "0x8E1CC4")]
		public readonly User User;

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xB5F8F0", Offset = "0xB5F8F0", VA = "0xB5F8F0")]
		public MatchmakingEnqueuedUser(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class MatchmakingEnqueueResult
	{
		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingAdminSnapshot AdminSnapshotOptional;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E1CFC", Offset = "0x8E1CFC")]
		public readonly MatchmakingAdminSnapshot AdminSnapshot;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly uint AverageWait;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly uint MatchesInLastHourCount;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly uint MaxExpectedWait;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Pool;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly uint RecentMatchPercentage;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string RequestHash;

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xB5F4E0", Offset = "0xB5F4E0", VA = "0xB5F4E0")]
		public MatchmakingEnqueueResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public class MatchmakingEnqueueResultAndRoom
	{
		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly MatchmakingEnqueueResult MatchmakingEnqueueResult;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Room Room;

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xB5F62C", Offset = "0xB5F62C", VA = "0xB5F62C")]
		public MatchmakingEnqueueResultAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class MatchmakingStats
	{
		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly uint DrawCount;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly uint LossCount;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly uint SkillLevel;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly uint WinCount;

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xB5F9D4", Offset = "0xB5F9D4", VA = "0xB5F9D4")]
		public MatchmakingStats(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class NetworkingPeer
	{
		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1D34", Offset = "0x8E1D34")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1D44", Offset = "0x8E1D44")]
		private PeerConnectionState <State>k__BackingField;

		[Token(Token = "0x170001B0")]
		public ulong ID
		{
			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0xB5FAD8", Offset = "0xB5FAD8", VA = "0xB5FAD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB844", Offset = "0x8EB844")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0xB5FAC8", Offset = "0xB5FAC8", VA = "0xB5FAC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB854", Offset = "0x8EB854")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public PeerConnectionState State
		{
			[Token(Token = "0x6001C50")]
			[Address(RVA = "0xB5FAE0", Offset = "0xB5FAE0", VA = "0xB5FAE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB864", Offset = "0x8EB864")]
			get
			{
				return default(PeerConnectionState);
			}
			[Token(Token = "0x6001C51")]
			[Address(RVA = "0xB5FAD0", Offset = "0xB5FAD0", VA = "0xB5FAD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB874", Offset = "0x8EB874")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xB5FA8C", Offset = "0xB5FA8C", VA = "0xB5FA8C")]
		public NetworkingPeer(ulong id, PeerConnectionState state)
		{
		}
	}
	[Token(Token = "0x20003D2")]
	public class OrgScopedID
	{
		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001C52")]
		[Address(RVA = "0xB5FAE8", Offset = "0xB5FAE8", VA = "0xB5FAE8")]
		public OrgScopedID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class Party
	{
		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E1D54", Offset = "0x8E1D54")]
		public readonly User LeaderOptional;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E1D8C", Offset = "0x8E1D8C")]
		public readonly User Leader;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly Room RoomOptional;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E1DC4", Offset = "0x8E1DC4")]
		public readonly Room Room;

		[Token(Token = "0x6001C53")]
		[Address(RVA = "0xB5FB70", Offset = "0xB5FB70", VA = "0xB5FB70")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8EB884", Offset = "0x8EB884")]
		public Party(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003D4")]
	public class PartyID
	{
		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xB5FD04", Offset = "0xB5FD04", VA = "0xB5FD04")]
		public PartyID(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class Pid
	{
		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Id;

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xB5FD8C", Offset = "0xB5FD8C", VA = "0xB5FD8C")]
		public Pid(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class PingResult
	{
		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1DFC", Offset = "0x8E1DFC")]
		private ulong <ID>k__BackingField;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong? pingTimeUsec;

		[Token(Token = "0x170001B2")]
		public ulong ID
		{
			[Token(Token = "0x6001C57")]
			[Address(RVA = "0xB5FE5C", Offset = "0xB5FE5C", VA = "0xB5FE5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB8BC", Offset = "0x8EB8BC")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001C58")]
			[Address(RVA = "0xB5FE54", Offset = "0xB5FE54", VA = "0xB5FE54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB8CC", Offset = "0x8EB8CC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public ulong PingTimeUsec
		{
			[Token(Token = "0x6001C59")]
			[Address(RVA = "0xB5FE64", Offset = "0xB5FE64", VA = "0xB5FE64")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001B4")]
		public bool IsTimeout
		{
			[Token(Token = "0x6001C5A")]
			[Address(RVA = "0xB5FEE0", Offset = "0xB5FEE0", VA = "0xB5FEE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xB5FE14", Offset = "0xB5FE14", VA = "0xB5FE14")]
		public PingResult(ulong id, ulong? pingTimeUsec)
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public class PlatformInitialize
	{
		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly PlatformInitializeResult Result;

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xB5FF3C", Offset = "0xB5FF3C", VA = "0xB5FF3C")]
		public PlatformInitialize(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class Product
	{
		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Description;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string FormattedPrice;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Name;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xB5FFC4", Offset = "0xB5FFC4", VA = "0xB5FFC4")]
		public Product(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class Purchase
	{
		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly DateTime ExpirationTime;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly DateTime GrantTime;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong ID;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Sku;

		[Token(Token = "0x6001C5D")]
		[Address(RVA = "0xB6007C", Offset = "0xB6007C", VA = "0xB6007C")]
		public Purchase(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class Room
	{
		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ApplicationID;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Dictionary<string, string> DataStore;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string Description;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ulong ID;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E1E0C", Offset = "0x8E1E0C")]
		public readonly bool IsMembershipLocked;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public readonly RoomJoinPolicy JoinPolicy;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly RoomJoinability Joinability;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E1E44", Offset = "0x8E1E44")]
		public readonly uint MaxUsers;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string Name;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly User OwnerOptional;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E1E7C", Offset = "0x8E1E7C")]
		public readonly User Owner;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly RoomType Type;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E1EB4", Offset = "0x8E1EB4")]
		public readonly uint Version;

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xB5F70C", Offset = "0xB5F70C", VA = "0xB5F70C")]
		public Room(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class RoomInviteNotification
	{
		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong RoomID;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ulong SenderID;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly DateTime SentTime;

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xB60134", Offset = "0xB60134", VA = "0xB60134")]
		public RoomInviteNotification(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class SdkAccount
	{
		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly SdkAccountType AccountType;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong UserId;

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xB601EC", Offset = "0xB601EC", VA = "0xB601EC")]
		public SdkAccount(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class ShareMediaResult
	{
		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ShareMediaStatus Status;

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xB60284", Offset = "0xB60284", VA = "0xB60284")]
		public ShareMediaResult(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class SystemPermission
	{
		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool HasPermission;

		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly PermissionGrantStatus PermissionGrantStatus;

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xB6030C", Offset = "0xB6030C", VA = "0xB6030C")]
		public SystemPermission(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class SystemVoipState
	{
		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly VoipMuteState MicrophoneMuted;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly SystemVoipStatus Status;

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xB603A8", Offset = "0xB603A8", VA = "0xB603A8")]
		public SystemVoipState(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class User
	{
		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ulong ID;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string ImageURL;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly string InviteToken;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string OculusID;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Presence;

		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly UserPresenceStatus PresenceStatus;

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string SmallImageUrl;

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xB5EEBC", Offset = "0xB5EEBC", VA = "0xB5EEBC")]
		public User(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public class UserAndRoom
	{
		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Room RoomOptional;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8E1EEC", Offset = "0x8E1EEC")]
		public readonly Room Room;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly User User;

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xB60440", Offset = "0xB60440", VA = "0xB60440")]
		public UserAndRoom(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class UserProof
	{
		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Value;

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0xB60560", Offset = "0xB60560", VA = "0xB60560")]
		public UserProof(IntPtr o)
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class UserReportID
	{
		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool DidCancel;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ulong ID;

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xB605E8", Offset = "0xB605E8", VA = "0xB605E8")]
		public UserReportID(IntPtr o)
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrVoiceChat
{
	[Token(Token = "0x20003E4")]
	public class P2PManager
	{
		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float UPDATE_DELAY;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_timeForNextUpdate;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly byte PACKET_SIZE;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		private static readonly byte PACKET_FORMAT;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly byte[] sendTransformBuffer;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] receiveTransformBuffer;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 receivedPosition;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 receivedPositionPrior;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion receivedRotation;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion receivedRotationPrior;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float receivedTime;

		[Token(Token = "0x170001B5")]
		public bool Connected
		{
			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0xB70910", Offset = "0xB70910", VA = "0xB70910")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B6")]
		public bool ShouldSendHeadUpdate
		{
			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0xB70920", Offset = "0xB70920", VA = "0xB70920")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xB706B4", Offset = "0xB706B4", VA = "0xB706B4")]
		public P2PManager(Transform initialHeadTransform)
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xB707B0", Offset = "0xB707B0", VA = "0xB707B0")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xB708FC", Offset = "0xB708FC", VA = "0xB708FC")]
		public void Disconnect()
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0xB70964", Offset = "0xB70964", VA = "0xB70964")]
		public void SendHeadTransform(Transform headTransform)
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0xB70B98", Offset = "0xB70B98", VA = "0xB70B98")]
		private void PackFloat(float f, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0xB70C40", Offset = "0xB70C40", VA = "0xB70C40")]
		public void GetRemoteHeadTransform(Transform headTransform)
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x2000681")]
		public enum State
		{
			[Token(Token = "0x400242B")]
			INITIALIZING,
			[Token(Token = "0x400242C")]
			WAITING_TO_CALL_OR_ANSWER,
			[Token(Token = "0x400242D")]
			WAITING_FOR_ANSWER,
			[Token(Token = "0x400242E")]
			CONNECTED_IN_A_ROOM,
			[Token(Token = "0x400242F")]
			HANGUP
		}

		[Token(Token = "0x2000682")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD620", Offset = "0x8CD620")]
		private sealed class <>c__DisplayClass28_0
		{
			[Token(Token = "0x4002430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RoomManager.Invite invite;

			[Token(Token = "0x6002761")]
			[Address(RVA = "0xB72800", Offset = "0xB72800", VA = "0xB72800")]
			public <>c__DisplayClass28_0()
			{
			}

			[Token(Token = "0x6002762")]
			[Address(RVA = "0xB72814", Offset = "0xB72814", VA = "0xB72814")]
			internal void <SetActiveInvites>b__0()
			{
			}
		}

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_invitesList;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_invitePrefab;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_remoteHead;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RoomManager m_roomManager;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private P2PManager m_p2pManager;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private VoipManager m_voipManager;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ulong m_myID;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string m_myOculusID;

		[Token(Token = "0x170001B7")]
		public static State CurrentState
		{
			[Token(Token = "0x6001C75")]
			[Address(RVA = "0xB718B4", Offset = "0xB718B4", VA = "0xB718B4")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x170001B8")]
		public static ulong MyID
		{
			[Token(Token = "0x6001C76")]
			[Address(RVA = "0xB70820", Offset = "0xB70820", VA = "0xB70820")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001B9")]
		public static string MyOculusID
		{
			[Token(Token = "0x6001C77")]
			[Address(RVA = "0xB7192C", Offset = "0xB7192C", VA = "0xB7192C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0xB70EC0", Offset = "0xB70EC0", VA = "0xB70EC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0xB710E4", Offset = "0xB710E4", VA = "0xB710E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0xB7172C", Offset = "0xB7172C", VA = "0xB7172C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0xB71730", Offset = "0xB71730", VA = "0xB71730")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xB71A50", Offset = "0xB71A50", VA = "0xB71A50")]
		public void CallFriendOnClick()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xB71AD8", Offset = "0xB71AD8", VA = "0xB71AD8")]
		public void HangupOnClick()
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xB71B04", Offset = "0xB71B04", VA = "0xB71B04")]
		public void QuitOnClick()
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xB71B0C", Offset = "0xB71B0C", VA = "0xB71B0C")]
		public static void AnswerCallOnClick(ulong roomID)
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xB712C4", Offset = "0xB712C4", VA = "0xB712C4")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xB71CB8", Offset = "0xB71CB8", VA = "0xB71CB8")]
		public static void SetBackgroundColorForState()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xB71FA0", Offset = "0xB71FA0", VA = "0xB71FA0")]
		public static void SetActiveInvites(List<RoomManager.Invite> invites)
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xB72808", Offset = "0xB72808", VA = "0xB72808")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class RoomManager
	{
		[Token(Token = "0x2000683")]
		public struct Invite
		{
			[Token(Token = "0x4002431")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly ulong RoomID;

			[Token(Token = "0x4002432")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly string OwnerID;

			[Token(Token = "0x6002763")]
			[Address(RVA = "0x996A60", Offset = "0x996A60", VA = "0x996A60")]
			public Invite(ulong roomID, string owner)
			{
			}
		}

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_roomID;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private User m_remoteUser;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float INVITE_POLL_FREQ_SECONDS;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_nextPollTime;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<ulong> m_pendingRoomRequests;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Invite> m_invites;

		[Token(Token = "0x170001BA")]
		public ulong RemoteUserID
		{
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0xB71BF4", Offset = "0xB71BF4", VA = "0xB71BF4")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001BB")]
		public string RemoteOculusID
		{
			[Token(Token = "0x6001C83")]
			[Address(RVA = "0xB7287C", Offset = "0xB7287C", VA = "0xB7287C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		public bool ShouldPollInviteList
		{
			[Token(Token = "0x6001C86")]
			[Address(RVA = "0xB70FCC", Offset = "0xB70FCC", VA = "0xB70FCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xB716F8", Offset = "0xB716F8", VA = "0xB716F8")]
		public RoomManager()
		{
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xB728E0", Offset = "0xB728E0", VA = "0xB728E0")]
		public bool CheckForLaunchInvite()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xB71AD4", Offset = "0xB71AD4", VA = "0xB71AD4")]
		public void CreateRoomAndLaunchInviteMenu()
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xB7100C", Offset = "0xB7100C", VA = "0xB7100C")]
		public void UpdateActiveInvitesList()
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xB71BF0", Offset = "0xB71BF0", VA = "0xB71BF0")]
		public void JoinExistingRoom(ulong roomID)
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xB71798", Offset = "0xB71798", VA = "0xB71798")]
		public void LeaveCurrentRoom()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class VoipManager
	{
		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_remoteID;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PeerConnectionState m_state;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly GameObject m_remoteHead;

		[Token(Token = "0x170001BD")]
		public bool Connected
		{
			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0xB71F90", Offset = "0xB71F90", VA = "0xB71F90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0xB71700", Offset = "0xB71700", VA = "0xB71700")]
		public VoipManager(GameObject remoteHead)
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0xB71C0C", Offset = "0xB71C0C", VA = "0xB71C0C")]
		public void ConnectTo(ulong userID)
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0xB71808", Offset = "0xB71808", VA = "0xB71808")]
		public void Disconnect()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0xB7294C", Offset = "0xB7294C", VA = "0xB7294C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0xB72B80", Offset = "0xB72B80", VA = "0xB72B80")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrHoops
{
	[Token(Token = "0x20003E9")]
	public class AchievementsManager
	{
		[Token(Token = "0x40018CE")]
		private const string LIKES_TO_WIN = "LIKES_TO_WIN";

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_likesToWinUnlocked;

		[Token(Token = "0x170001BE")]
		public bool LikesToWin
		{
			[Token(Token = "0x6001C91")]
			[Address(RVA = "0xB67244", Offset = "0xB67244", VA = "0xB67244")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0xB6724C", Offset = "0xB6724C", VA = "0xB6724C")]
		public void CheckForAchievmentUpdates()
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xB67250", Offset = "0xB67250", VA = "0xB67250")]
		public void RecordWinForLocalUser()
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xB67254", Offset = "0xB67254", VA = "0xB67254")]
		public AchievementsManager()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class AIPlayer : Player
	{
		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xB66E68", Offset = "0xB66E68", VA = "0xB66E68")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xB671D0", Offset = "0xB671D0", VA = "0xB671D0")]
		public AIPlayer()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class BallEjector : MonoBehaviour
	{
		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xB6725C", Offset = "0xB6725C", VA = "0xB6725C")]
		public BallEjector()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class Camera2DController : MonoBehaviour
	{
		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xB67264", Offset = "0xB67264", VA = "0xB67264")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xB67550", Offset = "0xB67550", VA = "0xB67550")]
		public Camera2DController()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class DetectBasket : MonoBehaviour
	{
		[Token(Token = "0x2000684")]
		private enum BasketPhase
		{
			[Token(Token = "0x4002434")]
			NONE,
			[Token(Token = "0x4002435")]
			TOP,
			[Token(Token = "0x4002436")]
			BOTH,
			[Token(Token = "0x4002437")]
			BOTTOM
		}

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BasketPhase m_phase;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Player m_owningPlayer;

		[Token(Token = "0x170001BF")]
		public Player Player
		{
			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0xB67558", Offset = "0xB67558", VA = "0xB67558")]
			set
			{
			}
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xB67560", Offset = "0xB67560", VA = "0xB67560")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xB67668", Offset = "0xB67668", VA = "0xB67668")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xB67864", Offset = "0xB67864", VA = "0xB67864")]
		public DetectBasket()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class FlyText : MonoBehaviour
	{
		[Token(Token = "0x40018D2")]
		private const float LIFESPAN = 3f;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 m_movePerFrame;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_eol;

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xB6786C", Offset = "0xB6786C", VA = "0xB6786C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xB6793C", Offset = "0xB6793C", VA = "0xB6793C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xB67AA0", Offset = "0xB67AA0", VA = "0xB67AA0")]
		public FlyText()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class GoalMover : MonoBehaviour
	{
		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float MAX_OFFSET;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_speed;

		[Token(Token = "0x40018D7")]
		private const float MOVE_TOLERANCE = 0.1f;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_expectedPosition;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_moveDirection;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_nextMoveDirection;

		[Token(Token = "0x170001C0")]
		public Vector3 ExpectedPosition
		{
			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0xB67B3C", Offset = "0xB67B3C", VA = "0xB67B3C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001CA2")]
			[Address(RVA = "0xB67B48", Offset = "0xB67B48", VA = "0xB67B48")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public Vector3 MoveDirection
		{
			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0xB67B54", Offset = "0xB67B54", VA = "0xB67B54")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0xB67B60", Offset = "0xB67B60", VA = "0xB67B60")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public Vector3 NextMoveDirection
		{
			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0xB67B6C", Offset = "0xB67B6C", VA = "0xB67B6C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0xB67B78", Offset = "0xB67B78", VA = "0xB67B78")]
			set
			{
			}
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xB67B84", Offset = "0xB67B84", VA = "0xB67B84")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xB67D1C", Offset = "0xB67D1C", VA = "0xB67D1C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xB680E8", Offset = "0xB680E8", VA = "0xB680E8")]
		public GoalMover()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public class LeaderboardManager
	{
		[Token(Token = "0x2000685")]
		public delegate void OnMostWinsLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x2000686")]
		public delegate void OnHighScoreLeaderboardUpdated(SortedDictionary<int, LeaderboardEntry> entries);

		[Token(Token = "0x40018DB")]
		private const string MOST_MATCHES_WON = "MOST_MATCHES_WON";

		[Token(Token = "0x40018DC")]
		private const string HIGHEST_MATCH_SCORE = "HIGHEST_MATCH_SCORE";

		[Token(Token = "0x40018DD")]
		private const int TOP_N_COUNT = 5;

		[Token(Token = "0x40018DE")]
		private const float LEADERBOARD_POLL_FREQ = 30f;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_nextCheckTime;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SortedDictionary<int, LeaderboardEntry> m_mostWins;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_foundLocalUserMostWinsEntry;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long m_numWins;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OnMostWinsLeaderboardUpdated m_mostWinsCallback;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SortedDictionary<int, LeaderboardEntry> m_highScores;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_foundLocalUserHighScore;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OnHighScoreLeaderboardUpdated m_highScoreCallback;

		[Token(Token = "0x170001C3")]
		public OnMostWinsLeaderboardUpdated MostWinsLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0xB68260", Offset = "0xB68260", VA = "0xB68260")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public OnHighScoreLeaderboardUpdated HighScoreLeaderboardUpdatedCallback
		{
			[Token(Token = "0x6001CAD")]
			[Address(RVA = "0xB68268", Offset = "0xB68268", VA = "0xB68268")]
			set
			{
			}
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xB68100", Offset = "0xB68100", VA = "0xB68100")]
		public void CheckForUpdates()
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xB68168", Offset = "0xB68168", VA = "0xB68168")]
		private void QueryMostWinsLeaderboard()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xB681E4", Offset = "0xB681E4", VA = "0xB681E4")]
		private void QueryHighScoreLeaderboard()
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xB68270", Offset = "0xB68270", VA = "0xB68270")]
		public void SubmitMatchScores(bool wonMatch, uint score)
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xB68284", Offset = "0xB68284", VA = "0xB68284")]
		public LeaderboardManager()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class LocalPlayer : Player
	{
		[Token(Token = "0x170001C5")]
		public override uint Score
		{
			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0xB69174", Offset = "0xB69174", VA = "0xB69174", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xB6949C", Offset = "0xB6949C", VA = "0xB6949C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xB69650", Offset = "0xB69650", VA = "0xB69650")]
		public LocalPlayer()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	public class MatchController : MonoBehaviour
	{
		[Token(Token = "0x2000687")]
		private enum State
		{
			[Token(Token = "0x4002439")]
			UNKNOWN,
			[Token(Token = "0x400243A")]
			NONE,
			[Token(Token = "0x400243B")]
			WAITING_TO_START_PRACTICE,
			[Token(Token = "0x400243C")]
			PRACTICING,
			[Token(Token = "0x400243D")]
			VIEWING_RESULTS_PRACTICE,
			[Token(Token = "0x400243E")]
			WAITING_FOR_MATCH,
			[Token(Token = "0x400243F")]
			WAITING_TO_SETUP_MATCH,
			[Token(Token = "0x4002440")]
			PLAYING_MATCH,
			[Token(Token = "0x4002441")]
			VIEWING_MATCH_RESULTS
		}

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_timerText;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_idleCameraTransform;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text m_matchmakeButtonText;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerArea[] m_playerAreas;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private uint PRACTICE_WARMUP_TIME;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private uint MATCH_WARMUP_TIME;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private uint MATCH_TIME;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private uint MATCH_COOLDOWN_TIME;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_mostWinsLeaderboard;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_highestScoresLeaderboard;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject m_leaderboardEntryPrefab;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_flytext;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private State m_currentState;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_nextStateTransitionTime;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_localSlot;

		[Token(Token = "0x170001C6")]
		public float MatchStartTime
		{
			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0xB69F1C", Offset = "0xB69F1C", VA = "0xB69F1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0xB69F3C", Offset = "0xB69F3C", VA = "0xB69F3C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xB69654", Offset = "0xB69654", VA = "0xB69654")]
		private void Start()
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xB69C44", Offset = "0xB69C44", VA = "0xB69C44")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xB69914", Offset = "0xB69914", VA = "0xB69914")]
		private void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xB69C68", Offset = "0xB69C68", VA = "0xB69C68")]
		private void UpdateCheckForNextTimedTransition()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0xB69D14", Offset = "0xB69D14", VA = "0xB69D14")]
		private void UpdateMatchTimer()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0xB69F44", Offset = "0xB69F44", VA = "0xB69F44")]
		private void SetupForIdle()
		{
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0xB6A268", Offset = "0xB6A268", VA = "0xB6A268")]
		private void SetupForPractice()
		{
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xB6AA3C", Offset = "0xB6AA3C", VA = "0xB6AA3C")]
		private Player MatchPlayerAddedCallback(int slot, User user)
		{
			return null;
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xB6A020", Offset = "0xB6A020", VA = "0xB6A020")]
		private void MoveCameraToIdlePosition()
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xB6A3AC", Offset = "0xB6A3AC", VA = "0xB6A3AC")]
		private void MoveCameraToMatchPosition()
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xB6AE6C", Offset = "0xB6AE6C", VA = "0xB6AE6C")]
		public void StartPracticeMatch()
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xB6AE84", Offset = "0xB6AE84", VA = "0xB6AE84")]
		public void PlayOnlineOrCancel()
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xB6AF54", Offset = "0xB6AF54", VA = "0xB6AF54")]
		private void OnMatchFoundCallback(bool success)
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xB6AF68", Offset = "0xB6AF68", VA = "0xB6AF68")]
		private float StartTimeOfferCallback(float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xB6B06C", Offset = "0xB6B06C", VA = "0xB6B06C")]
		private void MostWinsLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xB6B6DC", Offset = "0xB6B6DC", VA = "0xB6B6DC")]
		private void HighestScoreLeaderboardCallback(SortedDictionary<int, LeaderboardEntry> entries)
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0xB6A57C", Offset = "0xB6A57C", VA = "0xB6A57C")]
		private void CalculateMatchResults()
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0xB6AC3C", Offset = "0xB6AC3C", VA = "0xB6AC3C")]
		private void DisplayAchievementFlytext()
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0xB6BE14", Offset = "0xB6BE14", VA = "0xB6BE14")]
		public MatchController()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	public class MatchmakingManager
	{
		[Token(Token = "0x2000688")]
		public delegate void OnEnqueueResult(bool successful);

		[Token(Token = "0x2000689")]
		public delegate Player OnMatchPlayerAdded(int slot, User user);

		[Token(Token = "0x40018F7")]
		private const string NORMAL_POOL = "NORMAL_QUICKMATCH";

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong m_matchRoom;

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<ulong, User> m_remotePlayers;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OnEnqueueResult m_enqueueCallback;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OnMatchPlayerAdded m_playerCallback;

		[Token(Token = "0x170001C7")]
		public OnEnqueueResult EnqueueResultCallback
		{
			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0xB6BEF4", Offset = "0xB6BEF4", VA = "0xB6BEF4")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0xB6987C", Offset = "0xB6987C", VA = "0xB6987C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public OnMatchPlayerAdded MatchPlayerAddedCallback
		{
			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0xB6BEFC", Offset = "0xB6BEFC", VA = "0xB6BEFC")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0xB69894", Offset = "0xB69894", VA = "0xB69894")]
			set
			{
			}
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0xB6BE80", Offset = "0xB6BE80", VA = "0xB6BE80")]
		public MatchmakingManager()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xB6AF4C", Offset = "0xB6AF4C", VA = "0xB6AF4C")]
		public void QueueForMatch()
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xB6A8DC", Offset = "0xB6A8DC", VA = "0xB6A8DC")]
		public void EndMatch()
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xB6AF50", Offset = "0xB6AF50", VA = "0xB6AF50")]
		public void LeaveQueue()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class P2PManager
	{
		[Token(Token = "0x200068A")]
		private class RemotePlayerData
		{
			[Token(Token = "0x4002442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PeerConnectionState state;

			[Token(Token = "0x4002443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RemotePlayer player;

			[Token(Token = "0x4002444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float remoteTimeOffset;

			[Token(Token = "0x4002445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float lastReceivedBallsTime;

			[Token(Token = "0x4002446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly Dictionary<int, P2PNetworkBall> activeBalls;

			[Token(Token = "0x6002774")]
			[Address(RVA = "0xB6D22C", Offset = "0xB6D22C", VA = "0xB6D22C")]
			public RemotePlayerData()
			{
			}
		}

		[Token(Token = "0x200068B")]
		public delegate float StartTimeOffer(float remoteTime);

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<ulong, RemotePlayerData> m_remotePlayers;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_timeForNextBallUpdate;

		[Token(Token = "0x40018FE")]
		private const byte TIME_SYNC_MESSAGE = 1;

		[Token(Token = "0x40018FF")]
		private const uint TIME_SYNC_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4001900")]
		private const int TIME_SYNC_MESSAGE_COUNT = 7;

		[Token(Token = "0x4001901")]
		private const byte START_TIME_MESSAGE = 2;

		[Token(Token = "0x4001902")]
		private const uint START_TIME_MESSAGE_SIZE = 5u;

		[Token(Token = "0x4001903")]
		private const byte BACKBOARD_UPDATE_MESSAGE = 3;

		[Token(Token = "0x4001904")]
		private const uint BACKBOARD_UPDATE_MESSAGE_SIZE = 41u;

		[Token(Token = "0x4001905")]
		private const byte LOCAL_BALLS_UPDATE_MESSAGE = 4;

		[Token(Token = "0x4001906")]
		private const uint LOCAL_BALLS_UPDATE_MESSATE_SIZE_MAX = 353u;

		[Token(Token = "0x4001907")]
		private const float LOCAL_BALLS_UPDATE_DELAY = 0.1f;

		[Token(Token = "0x4001908")]
		private const byte SCORE_UPDATE_MESSAGE = 5;

		[Token(Token = "0x4001909")]
		private const uint SCORE_UPDATE_MESSAGE_SIZE = 5u;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, P2PNetworkBall> m_localBalls;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly byte[] readBuffer;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Dictionary<ulong, List<float>> m_remoteSyncTimeCache;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<ulong, float> m_remoteSentTimeCache;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private StartTimeOffer m_startTimeOfferCallback;

		[Token(Token = "0x170001C9")]
		public StartTimeOffer StartTimeOfferCallback
		{
			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0xB6DF28", Offset = "0xB6DF28", VA = "0xB6DF28")]
			private get
			{
				return null;
			}
			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0xB698AC", Offset = "0xB698AC", VA = "0xB698AC")]
			set
			{
			}
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xB6CA58", Offset = "0xB6CA58", VA = "0xB6CA58")]
		public P2PManager()
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xB6CB58", Offset = "0xB6CB58", VA = "0xB6CB58")]
		public void UpdateNetwork()
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xB6CFD8", Offset = "0xB6CFD8", VA = "0xB6CFD8")]
		public void AddRemotePlayer(RemotePlayer player)
		{
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0xB6BF04", Offset = "0xB6BF04", VA = "0xB6BF04")]
		public void DisconnectAll()
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0xB6D29C", Offset = "0xB6D29C", VA = "0xB6D29C")]
		private void SendTimeSyncMessage(ulong remoteID)
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0xB6D4A4", Offset = "0xB6D4A4", VA = "0xB6D4A4")]
		private void ReadTimeSyncMessage(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xB6DE64", Offset = "0xB6DE64", VA = "0xB6DE64")]
		private float ShiftRemoteTime(ulong remoteID, float remoteTime)
		{
			return default(float);
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xB6DC84", Offset = "0xB6DC84", VA = "0xB6DC84")]
		private void OfferMatchStartTime()
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xB6E380", Offset = "0xB6E380", VA = "0xB6E380")]
		private void ReceiveMatchStartTimeOffer(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xB6E420", Offset = "0xB6E420", VA = "0xB6E420")]
		public void SendBackboardUpdate(float time, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xB6E698", Offset = "0xB6E698", VA = "0xB6E698")]
		private void ReceiveBackboardUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xB6958C", Offset = "0xB6958C", VA = "0xB6958C")]
		public void AddNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xB6EA40", Offset = "0xB6EA40", VA = "0xB6EA40")]
		public void RemoveNetworkBall(GameObject ball)
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xB6CC10", Offset = "0xB6CC10", VA = "0xB6CC10")]
		private void SendLocalBallTransforms()
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xB6EC3C", Offset = "0xB6EC3C", VA = "0xB6EC3C")]
		private void ReceiveBallTransforms(ulong remoteID, byte[] msg, ulong msgLength)
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xB692FC", Offset = "0xB692FC", VA = "0xB692FC")]
		public void SendScoreUpdate(uint score)
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xB6F680", Offset = "0xB6F680", VA = "0xB6F680")]
		private void ReceiveScoredUpdate(ulong remoteID, byte[] msg)
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0xB6E648", Offset = "0xB6E648", VA = "0xB6E648")]
		private void PackVector3(Vector3 vec, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0xB6E7F8", Offset = "0xB6E7F8", VA = "0xB6E7F8")]
		private Vector3 UnpackVector3(byte[] buf, ref int offset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xB6F7D0", Offset = "0xB6F7D0", VA = "0xB6F7D0")]
		private void PackQuaternion(Quaternion quat, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xB6D3FC", Offset = "0xB6D3FC", VA = "0xB6D3FC")]
		private void PackFloat(float value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xB6DBF8", Offset = "0xB6DBF8", VA = "0xB6DBF8")]
		private float UnpackFloat(byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xB6E3EC", Offset = "0xB6E3EC", VA = "0xB6E3EC")]
		private float UnpackTime(ulong remoteID, byte[] buf, ref int offset)
		{
			return default(float);
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xB6EB6C", Offset = "0xB6EB6C", VA = "0xB6EB6C")]
		private void PackInt32(int value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xB6F0C8", Offset = "0xB6F0C8", VA = "0xB6F0C8")]
		private int UnpackInt32(byte[] buf, ref int offset)
		{
			return default(int);
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xB6F5E0", Offset = "0xB6F5E0", VA = "0xB6F5E0")]
		private void PackUint32(uint value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xB6F740", Offset = "0xB6F740", VA = "0xB6F740")]
		private uint UnpackUint32(byte[] buf, ref int offset)
		{
			return default(uint);
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xB6EB08", Offset = "0xB6EB08", VA = "0xB6EB08")]
		private void PackBool(bool value, byte[] buf, ref int offset)
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xB6F068", Offset = "0xB6F068", VA = "0xB6F068")]
		private bool UnpackBool(byte[] buf, ref int offset)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003F5")]
	public class P2PNetworkBall : MonoBehaviour
	{
		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float lastCollisionTime;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody rigidBody;

		[Token(Token = "0x170001CA")]
		public Vector3 velocity
		{
			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0xB6EC0C", Offset = "0xB6EC0C", VA = "0xB6EC0C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xB6F904", Offset = "0xB6F904", VA = "0xB6F904")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xB6EACC", Offset = "0xB6EACC", VA = "0xB6EACC")]
		public bool IsHeld()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xB6F414", Offset = "0xB6F414", VA = "0xB6F414")]
		public void ProcessRemoteUpdate(float remoteTime, bool isHeld, Vector3 pos, Vector3 vel)
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xB6F974", Offset = "0xB6F974", VA = "0xB6F974")]
		private Vector3 estimatePosition(Vector3 startPosition, Vector3 startVelocty, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xB6FAB0", Offset = "0xB6FAB0", VA = "0xB6FAB0")]
		private Vector3 estimateVelocity(Vector3 startVelocity, float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xB6FC00", Offset = "0xB6FC00", VA = "0xB6FC00")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xB6FC28", Offset = "0xB6FC28", VA = "0xB6FC28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xB6FC70", Offset = "0xB6FC70", VA = "0xB6FC70")]
		public P2PNetworkBall()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public class P2PNetworkGoal : MonoBehaviour
	{
		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GoalMover m_goal;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_lastSentMoveDirection;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_sendUpdates;

		[Token(Token = "0x170001CB")]
		public bool SendUpdates
		{
			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0xB6FC78", Offset = "0xB6FC78", VA = "0xB6FC78")]
			set
			{
			}
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xB6FC84", Offset = "0xB6FC84", VA = "0xB6FC84")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xB6FCF4", Offset = "0xB6FCF4", VA = "0xB6FCF4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xB6FDD4", Offset = "0xB6FDD4", VA = "0xB6FDD4")]
		public void SendBackboardUpdate()
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xB6E858", Offset = "0xB6E858", VA = "0xB6E858")]
		public void RemoteBackboardUpdate(float remoteTime, Vector3 pos, Vector3 moveDir, Vector3 nextMoveDir)
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xB6FEEC", Offset = "0xB6FEEC", VA = "0xB6FEEC")]
		public P2PNetworkGoal()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x200068C")]
		public enum State
		{
			[Token(Token = "0x4002448")]
			INITIALIZING,
			[Token(Token = "0x4002449")]
			WAITING_TO_PRACTICE_OR_MATCHMAKE,
			[Token(Token = "0x400244A")]
			MATCH_TRANSITION,
			[Token(Token = "0x400244B")]
			PLAYING_A_LOCAL_MATCH,
			[Token(Token = "0x400244C")]
			PLAYING_A_NETWORKED_MATCH
		}

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private P2PManager m_p2p;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private LeaderboardManager m_leaderboards;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AchievementsManager m_achievements;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private State m_currentState;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ulong m_myID;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string m_myOculusID;

		[Token(Token = "0x170001CC")]
		public static MatchmakingManager Matchmaking
		{
			[Token(Token = "0x6001D04")]
			[Address(RVA = "0xB6980C", Offset = "0xB6980C", VA = "0xB6980C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		public static P2PManager P2P
		{
			[Token(Token = "0x6001D05")]
			[Address(RVA = "0xB69294", Offset = "0xB69294", VA = "0xB69294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CE")]
		public static LeaderboardManager Leaderboards
		{
			[Token(Token = "0x6001D06")]
			[Address(RVA = "0xB698B4", Offset = "0xB698B4", VA = "0xB698B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CF")]
		public static AchievementsManager Achievements
		{
			[Token(Token = "0x6001D07")]
			[Address(RVA = "0xB6BDAC", Offset = "0xB6BDAC", VA = "0xB6BDAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D0")]
		public static State CurrentState
		{
			[Token(Token = "0x6001D08")]
			[Address(RVA = "0xB67804", Offset = "0xB67804", VA = "0xB67804")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x170001D1")]
		public static ulong MyID
		{
			[Token(Token = "0x6001D09")]
			[Address(RVA = "0xB6AB8C", Offset = "0xB6AB8C", VA = "0xB6AB8C")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001D2")]
		public static string MyOculusID
		{
			[Token(Token = "0x6001D0A")]
			[Address(RVA = "0xB6A964", Offset = "0xB6A964", VA = "0xB6A964")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xB6FEF4", Offset = "0xB6FEF4", VA = "0xB6FEF4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xB6FF3C", Offset = "0xB6FF3C", VA = "0xB6FF3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xB700CC", Offset = "0xB700CC", VA = "0xB700CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xB700D0", Offset = "0xB700D0", VA = "0xB700D0")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xB700D8", Offset = "0xB700D8", VA = "0xB700D8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xB6A19C", Offset = "0xB6A19C", VA = "0xB6A19C")]
		public static void TransitionToState(State newState)
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xB70104", Offset = "0xB70104", VA = "0xB70104")]
		public PlatformManager()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public abstract class Player : MonoBehaviour
	{
		[Token(Token = "0x400191C")]
		public const uint MAX_BALLS = 6u;

		[Token(Token = "0x400191D")]
		private const float INITIAL_FORCE = 870f;

		[Token(Token = "0x400191E")]
		private const float RESPAWN_SECONDS = 2f;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint m_score;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_scoreUI;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BallEjector m_ballEjector;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Queue<GameObject> m_balls;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_heldBall;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_nextSpawnTime;

		[Token(Token = "0x170001D3")]
		public virtual uint Score
		{
			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0xB692F4", Offset = "0xB692F4", VA = "0xB692F4", Slot = "4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0xB691C8", Offset = "0xB691C8", VA = "0xB691C8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public GameObject BallPrefab
		{
			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0xB7010C", Offset = "0xB7010C", VA = "0xB7010C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		protected bool HasBall
		{
			[Token(Token = "0x6001D10")]
			[Address(RVA = "0xB66ECC", Offset = "0xB66ECC", VA = "0xB66ECC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xB70114", Offset = "0xB70114", VA = "0xB70114")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xB6F154", Offset = "0xB6F154", VA = "0xB6F154")]
		public GameObject CreateBall()
		{
			return null;
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xB67154", Offset = "0xB67154", VA = "0xB67154")]
		protected GameObject CheckSpawnBall()
		{
			return null;
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xB66F3C", Offset = "0xB66F3C", VA = "0xB66F3C")]
		protected GameObject ShootBall()
		{
			return null;
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xB701F4", Offset = "0xB701F4", VA = "0xB701F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xB671D4", Offset = "0xB671D4", VA = "0xB671D4")]
		protected Player()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class PlayerArea : MonoBehaviour
	{
		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_ballPrefab;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_playerHead;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_nameText;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private P2PNetworkGoal m_p2pGoal;

		[Token(Token = "0x170001D6")]
		public Player Player
		{
			[Token(Token = "0x6001D17")]
			[Address(RVA = "0xB6BD4C", Offset = "0xB6BD4C", VA = "0xB6BD4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		public Text NameText
		{
			[Token(Token = "0x6001D18")]
			[Address(RVA = "0xB6BE0C", Offset = "0xB6BE0C", VA = "0xB6BE0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xB70330", Offset = "0xB70330", VA = "0xB70330")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D1A")]
		public T SetupForPlayer<T>(string name) where T : Player
		{
			return null;
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xB70460", Offset = "0xB70460", VA = "0xB70460")]
		public PlayerArea()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	public class RemotePlayer : Player
	{
		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private User m_user;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private P2PNetworkGoal m_goal;

		[Token(Token = "0x170001D8")]
		public User User
		{
			[Token(Token = "0x6001D1C")]
			[Address(RVA = "0xB6AC34", Offset = "0xB6AC34", VA = "0xB6AC34")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public ulong ID
		{
			[Token(Token = "0x6001D1D")]
			[Address(RVA = "0xB6D200", Offset = "0xB6D200", VA = "0xB6D200")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001DA")]
		public P2PNetworkGoal Goal
		{
			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0xB6E850", Offset = "0xB6E850", VA = "0xB6E850")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0xB70468", Offset = "0xB70468", VA = "0xB70468")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public override uint Score
		{
			[Token(Token = "0x6001D20")]
			[Address(RVA = "0xB70470", Offset = "0xB70470", VA = "0xB70470", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xB6F7CC", Offset = "0xB6F7CC", VA = "0xB6F7CC")]
		public void ReceiveRemoteScore(uint score)
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xB70474", Offset = "0xB70474", VA = "0xB70474")]
		public RemotePlayer()
		{
		}
	}
	[Token(Token = "0x20003FB")]
	public class VREyeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button m_currentButton;

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xB70478", Offset = "0xB70478", VA = "0xB70478")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xB706AC", Offset = "0xB706AC", VA = "0xB706AC")]
		public VREyeRaycaster()
		{
		}
	}
}
namespace Oculus.Platform.Samples.VrBoardGame
{
	[Token(Token = "0x20003FC")]
	public class BoardPosition : MonoBehaviour
	{
		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E2084", Offset = "0x8E2084")]
		public int x;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E20C4", Offset = "0x8E20C4")]
		public int y;

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xB62E64", Offset = "0xB62E64", VA = "0xB62E64")]
		public BoardPosition()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public class EyeCamera : MonoBehaviour
	{
		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EventSystem m_eventSystem;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SphereCollider m_gazeTracker;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Button m_currentButton;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GamePiece m_currentPiece;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoardPosition m_boardPosition;

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xB62E6C", Offset = "0xB62E6C", VA = "0xB62E6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xB638F4", Offset = "0xB638F4", VA = "0xB638F4")]
		public EyeCamera()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class GameBoard : MonoBehaviour
	{
		[Token(Token = "0x200068D")]
		private struct PositionInfo
		{
			[Token(Token = "0x400244D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject piece;

			[Token(Token = "0x400244E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pieceOwner;

			[Token(Token = "0x400244F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int powerPieceOwner;
		}

		[Token(Token = "0x4001936")]
		public const int LENGTH_X = 3;

		[Token(Token = "0x4001937")]
		public const int LENGTH_Y = 3;

		[Token(Token = "0x4001938")]
		public const int MAX_PLAYERS = 2;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color[] m_playerColors;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color m_proposedMoveColor;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] m_scores;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoardPosition[] m_positions;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly PositionInfo[,] m_pieces;

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xB638FC", Offset = "0xB638FC", VA = "0xB638FC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xB63BA4", Offset = "0xB63BA4", VA = "0xB63BA4")]
		public bool IsFull()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xB63CB4", Offset = "0xB63CB4", VA = "0xB63CB4")]
		public bool CanPlayerMoveToPostion(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xB63D98", Offset = "0xB63D98", VA = "0xB63D98")]
		public bool CanPlayerPowerUpPosition(int x, int y)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xB63E7C", Offset = "0xB63E7C", VA = "0xB63E7C")]
		public void AddPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xB64764", Offset = "0xB64764", VA = "0xB64764")]
		public GamePiece AddProposedPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xB64888", Offset = "0xB64888", VA = "0xB64888")]
		public void AddPowerPiece(int player, GameObject prefab, int x, int y)
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xB64B0C", Offset = "0xB64B0C", VA = "0xB64B0C")]
		public GamePiece AddProposedPowerPiece(GameObject prefab, BoardPosition pos)
		{
			return null;
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xB64170", Offset = "0xB64170", VA = "0xB64170")]
		private GamePiece Create(GameObject prefab, GameObject parent, BoardPosition pos, Vector3 off)
		{
			return null;
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xB64CDC", Offset = "0xB64CDC", VA = "0xB64CDC")]
		public int GetPlayerScore(int player)
		{
			return default(int);
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xB64348", Offset = "0xB64348", VA = "0xB64348")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xB64D30", Offset = "0xB64D30", VA = "0xB64D30")]
		public GameBoard()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class GameController : MonoBehaviour
	{
		[Token(Token = "0x200068E")]
		private enum GameState
		{
			[Token(Token = "0x4002451")]
			None,
			[Token(Token = "0x4002452")]
			PracticingMyTurn,
			[Token(Token = "0x4002453")]
			PracticingAiTurn,
			[Token(Token = "0x4002454")]
			OnlineMatchMyTurn,
			[Token(Token = "0x4002455")]
			OnlineMatchRemoteTurn
		}

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MatchmakingManager m_matchmaking;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameBoard m_board;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GamePiece m_pieceA;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GamePiece m_pieceB;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GamePiece m_powerPiece;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color m_unusableColor;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_unselectedColor;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color m_selectedColor;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color m_highlightedColor;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Text m_ballCountText;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Text m_player0Text;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Text m_player1Text;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameState m_state;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GamePiece m_interestedPiece;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GamePiece m_selectedPiece;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GamePiece m_proposedPiece;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private uint m_powerBallcount;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private string m_opponentName;

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xB64DF8", Offset = "0xB64DF8", VA = "0xB64DF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xB64F7C", Offset = "0xB64F7C", VA = "0xB64F7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xB64E20", Offset = "0xB64E20", VA = "0xB64E20")]
		private void TransitionToState(GameState state)
		{
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xB6556C", Offset = "0xB6556C", VA = "0xB6556C")]
		private void TransitionToNextState()
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xB64F80", Offset = "0xB64F80", VA = "0xB64F80")]
		private void PerFrameStateUpdate()
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xB65E34", Offset = "0xB65E34", VA = "0xB65E34")]
		public void PracticeButtonPressed()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xB65820", Offset = "0xB65820", VA = "0xB65820")]
		private void MakeAIMove(int player)
		{
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xB65F8C", Offset = "0xB65F8C", VA = "0xB65F8C")]
		public void StartOnlineMatch(string opponentName, bool localUserGoesFirst)
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xB65FF4", Offset = "0xB65FF4", VA = "0xB65FF4")]
		public void MakeRemoteMove(GamePiece.Piece piece, int x, int y)
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xB660C4", Offset = "0xB660C4", VA = "0xB660C4")]
		public void MarkRemoteTurnComplete()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xB660D8", Offset = "0xB660D8", VA = "0xB660D8")]
		public void RemoteMatchEnded()
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xB6350C", Offset = "0xB6350C", VA = "0xB6350C")]
		public void StartedLookingAtPiece(GamePiece piece)
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xB63504", Offset = "0xB63504", VA = "0xB63504")]
		public void StoppedLookingAtPiece()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xB63514", Offset = "0xB63514", VA = "0xB63514")]
		public void StartedLookingAtPosition(BoardPosition position)
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xB63820", Offset = "0xB63820", VA = "0xB63820")]
		public void ClearProposedMove()
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xB65A74", Offset = "0xB65A74", VA = "0xB65A74")]
		public void TrySelectPiece()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xB65B80", Offset = "0xB65B80", VA = "0xB65B80")]
		public void TryPlacePiece()
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xB66354", Offset = "0xB66354", VA = "0xB66354")]
		public void QuitButtonPressed()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xB6635C", Offset = "0xB6635C", VA = "0xB6635C")]
		public void AddPowerballs(uint count)
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xB64E28", Offset = "0xB64E28", VA = "0xB64E28")]
		private void UpdateScores()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xB65038", Offset = "0xB65038", VA = "0xB65038")]
		private void UpdateGamePieceColors()
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xB664DC", Offset = "0xB664DC", VA = "0xB664DC")]
		public GameController()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public class GamePiece : MonoBehaviour
	{
		[Token(Token = "0x200068F")]
		public enum Piece
		{
			[Token(Token = "0x4002457")]
			A,
			[Token(Token = "0x4002458")]
			B,
			[Token(Token = "0x4002459")]
			PowerBall
		}

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Piece m_type;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_prefabA;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_prefabB;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_prefabPower;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BoardPosition m_position;

		[Token(Token = "0x170001DC")]
		public Piece Type
		{
			[Token(Token = "0x6001D4A")]
			[Address(RVA = "0xB6615C", Offset = "0xB6615C", VA = "0xB6615C")]
			get
			{
				return default(Piece);
			}
		}

		[Token(Token = "0x170001DD")]
		public BoardPosition Position
		{
			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0xB66154", Offset = "0xB66154", VA = "0xB66154")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D4C")]
			[Address(RVA = "0xB64CD4", Offset = "0xB64CD4", VA = "0xB64CD4")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public GameObject Prefab
		{
			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0xB65F60", Offset = "0xB65F60", VA = "0xB65F60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xB6609C", Offset = "0xB6609C", VA = "0xB6609C")]
		public GameObject PrefabFor(Piece p)
		{
			return null;
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xB664E4", Offset = "0xB664E4", VA = "0xB664E4")]
		public GamePiece()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public class IAPManager : MonoBehaviour
	{
		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_priceText;

		[Token(Token = "0x4001957")]
		private const string CONSUMABLE_1 = "PowerballPack1";

		[Token(Token = "0x6001D50")]
		[Address(RVA = "0xB664EC", Offset = "0xB664EC", VA = "0xB664EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xB664F0", Offset = "0xB664F0", VA = "0xB664F0")]
		public void FetchProductPrices()
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xB6659C", Offset = "0xB6659C", VA = "0xB6659C")]
		public void FetchPurchasedProducts()
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xB665A0", Offset = "0xB665A0", VA = "0xB665A0")]
		public void BuyPowerBallsPressed()
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xB665A4", Offset = "0xB665A4", VA = "0xB665A4")]
		public IAPManager()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class MatchmakingManager : MonoBehaviour
	{
		[Token(Token = "0x2000690")]
		private enum MatchRoomState
		{
			[Token(Token = "0x400245B")]
			None,
			[Token(Token = "0x400245C")]
			Queued,
			[Token(Token = "0x400245D")]
			Configuring,
			[Token(Token = "0x400245E")]
			MyTurn,
			[Token(Token = "0x400245F")]
			RemoteTurn
		}

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameController m_gameController;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_matchButtonText;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_infoText;

		[Token(Token = "0x400195B")]
		private const string POOL = "VR_BOARD_GAME_POOL";

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ulong m_matchRoom;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private User m_remotePlayer;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_lastUpdateTime;

		[Token(Token = "0x400195F")]
		private const float POLL_FREQUENCY = 30f;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private MatchRoomState m_state;

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xB665AC", Offset = "0xB665AC", VA = "0xB665AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xB666C0", Offset = "0xB666C0", VA = "0xB666C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xB6676C", Offset = "0xB6676C", VA = "0xB6676C")]
		public void MatchButtonPressed()
		{
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xB65674", Offset = "0xB65674", VA = "0xB65674")]
		public void EndMatch(int localScore, int remoteScore)
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xB6682C", Offset = "0xB6682C", VA = "0xB6682C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xB665B4", Offset = "0xB665B4", VA = "0xB665B4")]
		private void TransitionToState(MatchRoomState state)
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xB66830", Offset = "0xB66830", VA = "0xB66830")]
		private void ProcessRoomData(Room room)
		{
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0xB66AAC", Offset = "0xB66AAC", VA = "0xB66AAC")]
		private void ProcessRemoteMove(string moveString)
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xB66164", Offset = "0xB66164", VA = "0xB66164")]
		public void SendLocalMove(GamePiece.Piece piece, int boardX, int boardY)
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xB66A54", Offset = "0xB66A54", VA = "0xB66A54")]
		private bool DoesLocalUserGoFirst()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xB66D40", Offset = "0xB66D40", VA = "0xB66D40")]
		public MatchmakingManager()
		{
		}
	}
	[Token(Token = "0x2000403")]
	public class PlatformManager : MonoBehaviour
	{
		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static PlatformManager s_instance;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ulong m_myID;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string m_myOculusID;

		[Token(Token = "0x170001DF")]
		public static ulong MyID
		{
			[Token(Token = "0x6001D62")]
			[Address(RVA = "0xB66784", Offset = "0xB66784", VA = "0xB66784")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x170001E0")]
		public static string MyOculusID
		{
			[Token(Token = "0x6001D63")]
			[Address(RVA = "0xB66404", Offset = "0xB66404", VA = "0xB66404")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xB66D48", Offset = "0xB66D48", VA = "0xB66D48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xB66E5C", Offset = "0xB66E5C", VA = "0xB66E5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xB66E60", Offset = "0xB66E60", VA = "0xB66E60")]
		public PlatformManager()
		{
		}
	}
}
namespace Oculus.Platform.Samples.NetChat
{
	[Token(Token = "0x2000404")]
	internal enum states
	{
		[Token(Token = "0x4001965")]
		NOT_INIT,
		[Token(Token = "0x4001966")]
		IDLE,
		[Token(Token = "0x4001967")]
		REQUEST_FIND,
		[Token(Token = "0x4001968")]
		FINDING_ROOM,
		[Token(Token = "0x4001969")]
		REQUEST_CREATE,
		[Token(Token = "0x400196A")]
		REQUEST_JOIN,
		[Token(Token = "0x400196B")]
		REQUEST_LEAVE,
		[Token(Token = "0x400196C")]
		IN_EMPTY_ROOM,
		[Token(Token = "0x400196D")]
		IN_FULL_ROOM
	}
	[Token(Token = "0x2000405")]
	public static class Constants
	{
		[Token(Token = "0x400196E")]
		public const int BUFFER_SIZE = 512;

		[Token(Token = "0x400196F")]
		public const string BOUT_POOL = "bout_pool";

		[Token(Token = "0x4001970")]
		public const string FILTER_POOL = "filter_pool";
	}
	[Token(Token = "0x2000406")]
	public class chatPacket
	{
		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E22B4", Offset = "0x8E22B4")]
		private int <packetID>k__BackingField;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E22C4", Offset = "0x8E22C4")]
		private string <textString>k__BackingField;

		[Token(Token = "0x170001E1")]
		public int packetID
		{
			[Token(Token = "0x6001D65")]
			[Address(RVA = "0xB62804", Offset = "0xB62804", VA = "0xB62804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB8DC", Offset = "0x8EB8DC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D66")]
			[Address(RVA = "0xB627EC", Offset = "0xB627EC", VA = "0xB627EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB8EC", Offset = "0x8EB8EC")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public string textString
		{
			[Token(Token = "0x6001D67")]
			[Address(RVA = "0xB6280C", Offset = "0xB6280C", VA = "0xB6280C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB8FC", Offset = "0x8EB8FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D68")]
			[Address(RVA = "0xB627F4", Offset = "0xB627F4", VA = "0xB627F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB90C", Offset = "0x8EB90C")]
			set
			{
			}
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xB62814", Offset = "0xB62814", VA = "0xB62814")]
		public byte[] Serialize()
		{
			return null;
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xB62B88", Offset = "0xB62B88", VA = "0xB62B88")]
		public static chatPacket Deserialize(byte[] data)
		{
			return null;
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xB627E4", Offset = "0xB627E4", VA = "0xB627E4")]
		public chatPacket()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public class DataEntry : MonoBehaviour
	{
		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text dataOutput;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private states currentState;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private User localUser;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private User remoteUser;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Room currentRoom;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int lastPacketID;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool ratedMatchStarted;

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xB61A1C", Offset = "0xB61A1C", VA = "0xB61A1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0xB61A34", Offset = "0xB61A34", VA = "0xB61A34")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0xB61B18", Offset = "0xB61B18", VA = "0xB61B18")]
		private void SubmitCommand(string command)
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xB6271C", Offset = "0xB6271C", VA = "0xB6271C")]
		private void printOutputLine(string newLine)
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xB61A30", Offset = "0xB61A30", VA = "0xB61A30")]
		private void checkEntitlement()
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xB61E9C", Offset = "0xB61E9C", VA = "0xB61E9C")]
		private void requestCreateRoom()
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xB61F94", Offset = "0xB61F94", VA = "0xB61F94")]
		private void requestCreateFilterRoom()
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xB62184", Offset = "0xB62184", VA = "0xB62184")]
		private void requestFindRoom()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xB6227C", Offset = "0xB6227C", VA = "0xB6227C")]
		private void requestFindFilteredRoom()
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xB6208C", Offset = "0xB6208C", VA = "0xB6208C")]
		private void requestFindMatch()
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xB62374", Offset = "0xB62374", VA = "0xB62374")]
		private void sendChat(string chatMessage)
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xB61E98", Offset = "0xB61E98", VA = "0xB61E98")]
		private void processNetPackets()
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0xB62464", Offset = "0xB62464", VA = "0xB62464")]
		private void requestLeaveRoom()
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xB62504", Offset = "0xB62504", VA = "0xB62504")]
		private void requestStartRatedMatch()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xB62594", Offset = "0xB62594", VA = "0xB62594")]
		private void requestReportResults()
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xB627FC", Offset = "0xB627FC", VA = "0xB627FC")]
		public DataEntry()
		{
		}
	}
}
namespace Oculus.Platform.Samples.EntitlementCheck
{
	[Token(Token = "0x2000408")]
	public class EntitlementCheck : MonoBehaviour
	{
		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool exitAppOnFailure;

		[Token(Token = "0x14000036")]
		public static event Action UserFailedEntitlementCheck
		{
			[Token(Token = "0x6001D7C")]
			[Address(RVA = "0xB61394", Offset = "0xB61394", VA = "0xB61394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB91C", Offset = "0x8EB91C")]
			add
			{
			}
			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0xB61490", Offset = "0xB61490", VA = "0xB61490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB92C", Offset = "0x8EB92C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public static event Action UserPassedEntitlementCheck
		{
			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0xB6158C", Offset = "0xB6158C", VA = "0xB6158C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB93C", Offset = "0x8EB93C")]
			add
			{
			}
			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0xB6168C", Offset = "0xB6168C", VA = "0xB6168C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EB94C", Offset = "0x8EB94C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xB6178C", Offset = "0xB6178C", VA = "0xB6178C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xB61790", Offset = "0xB61790", VA = "0xB61790")]
		private void HandleEntitlementCheckResult(bool result)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xB61A0C", Offset = "0xB61A0C", VA = "0xB61A0C")]
		public EntitlementCheck()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000409")]
	public static class AvatarLogger
	{
		[Token(Token = "0x400197D")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x400197E")]
		public const string Tab = "    ";

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xD09214", Offset = "0xD09214", VA = "0xD09214")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8EB95C", Offset = "0x8EB95C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8EB95C", Offset = "0x8EB95C")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xD0929C", Offset = "0xD0929C", VA = "0xD0929C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8EB9BC", Offset = "0x8EB9BC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8EB9BC", Offset = "0x8EB9BC")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xD09334", Offset = "0xD09334", VA = "0xD09334")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8EBA1C", Offset = "0x8EBA1C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8EBA1C", Offset = "0x8EBA1C")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xD093BC", Offset = "0xD093BC", VA = "0xD093BC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8EBA7C", Offset = "0x8EBA7C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8EBA7C", Offset = "0x8EBA7C")]
		public static void LogError(string logMsg)
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class CAPI
	{
		[Token(Token = "0x400197F")]
		private const string LibFile = "ovravatarloader";

		[PreserveSig]
		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xD09444", Offset = "0xD09444", VA = "0xD09444")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[PreserveSig]
		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xD094F4", Offset = "0xD094F4", VA = "0xD094F4")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xD09584", Offset = "0xD09584", VA = "0xD09584")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xD09614", Offset = "0xD09614", VA = "0xD09614")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xD096B4", Offset = "0xD096B4", VA = "0xD096B4")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xD0978C", Offset = "0xD0978C", VA = "0xD0978C")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xD0982C", Offset = "0xD0982C", VA = "0xD0982C")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xD09904", Offset = "0xD09904", VA = "0xD09904")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xD099A4", Offset = "0xD099A4", VA = "0xD099A4")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xD09A44", Offset = "0xD09A44", VA = "0xD09A44")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xD09AE4", Offset = "0xD09AE4", VA = "0xD09AE4")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xD09B84", Offset = "0xD09B84", VA = "0xD09B84")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xD09C34", Offset = "0xD09C34", VA = "0xD09C34")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xD09CE4", Offset = "0xD09CE4", VA = "0xD09CE4")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xD09D94", Offset = "0xD09D94", VA = "0xD09D94")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xD09E34", Offset = "0xD09E34", VA = "0xD09E34")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001D97")]
		[Address(RVA = "0xD09ED4", Offset = "0xD09ED4", VA = "0xD09ED4")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001D98")]
		[Address(RVA = "0xD09F84", Offset = "0xD09F84", VA = "0xD09F84")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xD0A024", Offset = "0xD0A024", VA = "0xD0A024")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xD0A0EC", Offset = "0xD0A0EC", VA = "0xD0A0EC")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xD0A124", Offset = "0xD0A124", VA = "0xD0A124")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xD0A1E4", Offset = "0xD0A1E4", VA = "0xD0A1E4")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xD0A2C4", Offset = "0xD0A2C4", VA = "0xD0A2C4")]
		public static extern void ovrAvatarPose_Update3DofHands(IntPtr avatar, IntPtr inputStateLeft, IntPtr inputStateRight, ovrAvatarControllerType type);

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xD0A38C", Offset = "0xD0A38C", VA = "0xD0A38C")]
		public static void ovrAvatarPose_UpdateSDK3DofHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xD0A82C", Offset = "0xD0A82C", VA = "0xD0A82C")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xD0A56C", Offset = "0xD0A56C", VA = "0xD0A56C")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0xD0A61C", Offset = "0xD0A61C", VA = "0xD0A61C")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0xD0A6CC", Offset = "0xD0A6CC", VA = "0xD0A6CC")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0xD0A77C", Offset = "0xD0A77C", VA = "0xD0A77C")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xD0A8DC", Offset = "0xD0A8DC", VA = "0xD0A8DC")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xD0A97C", Offset = "0xD0A97C", VA = "0xD0A97C")]
		public static ovrAvatarComponent ovrAvatarComponent_Get(IntPtr avatar, uint index)
		{
			return default(ovrAvatarComponent);
		}

		[PreserveSig]
		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xD0AA80", Offset = "0xD0AA80", VA = "0xD0AA80")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xD0AB30", Offset = "0xD0AB30", VA = "0xD0AB30")]
		public static ovrAvatarBaseComponent? ovrAvatarPose_GetBaseComponent(IntPtr avatar)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xD0AC6C", Offset = "0xD0AC6C", VA = "0xD0AC6C")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xD0AD0C", Offset = "0xD0AD0C", VA = "0xD0AD0C")]
		public static ovrAvatarBodyComponent? ovrAvatarPose_GetBodyComponent(IntPtr avatar)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xD0AE64", Offset = "0xD0AE64", VA = "0xD0AE64")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xD0AF04", Offset = "0xD0AF04", VA = "0xD0AF04")]
		public static ovrAvatarControllerComponent? ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xD0B05C", Offset = "0xD0B05C", VA = "0xD0B05C")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xD0B0FC", Offset = "0xD0B0FC", VA = "0xD0B0FC")]
		public static ovrAvatarControllerComponent? ovrAvatarPose_GetRightControllerComponent(IntPtr avatar)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xD0B254", Offset = "0xD0B254", VA = "0xD0B254")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xD0B2F4", Offset = "0xD0B2F4", VA = "0xD0B2F4")]
		public static ovrAvatarHandComponent? ovrAvatarPose_GetLeftHandComponent(IntPtr avatar)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xD0B44C", Offset = "0xD0B44C", VA = "0xD0B44C")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xD0B4EC", Offset = "0xD0B4EC", VA = "0xD0B4EC")]
		public static ovrAvatarHandComponent? ovrAvatarPose_GetRightHandComponent(IntPtr avatar)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xD0B644", Offset = "0xD0B644", VA = "0xD0B644")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xD0B6E4", Offset = "0xD0B6E4", VA = "0xD0B6E4")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xD0B784", Offset = "0xD0B784", VA = "0xD0B784")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xD0B83C", Offset = "0xD0B83C", VA = "0xD0B83C")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xD0B8DC", Offset = "0xD0B8DC", VA = "0xD0B8DC")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xD0BA78", Offset = "0xD0BA78", VA = "0xD0BA78")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xD0BB74", Offset = "0xD0BB74", VA = "0xD0BB74")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xD0B9D8", Offset = "0xD0B9D8", VA = "0xD0B9D8")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xD0BC14", Offset = "0xD0BC14", VA = "0xD0BC14")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xD0BCB4", Offset = "0xD0BCB4", VA = "0xD0BCB4")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xD0BEBC", Offset = "0xD0BEBC", VA = "0xD0BEBC")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xD0BF6C", Offset = "0xD0BF6C", VA = "0xD0BF6C")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xD0C0FC", Offset = "0xD0C0FC", VA = "0xD0C0FC")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xD0C1B4", Offset = "0xD0C1B4", VA = "0xD0C1B4")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xD0C2A0", Offset = "0xD0C2A0", VA = "0xD0C2A0")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xD0C340", Offset = "0xD0C340", VA = "0xD0C340")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xD0C3E0", Offset = "0xD0C3E0", VA = "0xD0C3E0")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xD0C4C8", Offset = "0xD0C4C8", VA = "0xD0C4C8")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xD0C568", Offset = "0xD0C568", VA = "0xD0C568")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xD0C650", Offset = "0xD0C650", VA = "0xD0C650")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xD0C6F0", Offset = "0xD0C6F0", VA = "0xD0C6F0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xD0C7A0", Offset = "0xD0C7A0", VA = "0xD0C7A0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xD0C850", Offset = "0xD0C850", VA = "0xD0C850")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xD0C900", Offset = "0xD0C900", VA = "0xD0C900")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xD0C9A0", Offset = "0xD0C9A0", VA = "0xD0C9A0")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xD0CA48", Offset = "0xD0CA48", VA = "0xD0CA48")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xD0CAF0", Offset = "0xD0CAF0", VA = "0xD0CAF0")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xD0CB90", Offset = "0xD0CB90", VA = "0xD0CB90")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xD0CC30", Offset = "0xD0CC30", VA = "0xD0CC30")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xD0CD04", Offset = "0xD0CD04", VA = "0xD0CD04")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xD0CDB4", Offset = "0xD0CDB4", VA = "0xD0CDB4")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xD0CE54", Offset = "0xD0CE54", VA = "0xD0CE54")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xD0CEF4", Offset = "0xD0CEF4", VA = "0xD0CEF4")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xD0CF94", Offset = "0xD0CF94", VA = "0xD0CF94")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xD0D04C", Offset = "0xD0D04C", VA = "0xD0D04C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xD0D104", Offset = "0xD0D104", VA = "0xD0D104")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xD0D1BC", Offset = "0xD0D1BC", VA = "0xD0D1BC")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xD0D25C", Offset = "0xD0D25C", VA = "0xD0D25C")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xD0D2FC", Offset = "0xD0D2FC", VA = "0xD0D2FC")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xD0D3E4", Offset = "0xD0D3E4", VA = "0xD0D3E4")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xD0D484", Offset = "0xD0D484", VA = "0xD0D484")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xD0D56C", Offset = "0xD0D56C", VA = "0xD0D56C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xD0D60C", Offset = "0xD0D60C", VA = "0xD0D60C")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xD0D794", Offset = "0xD0D794", VA = "0xD0D794")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xD0D9F8", Offset = "0xD0D9F8", VA = "0xD0D9F8")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xD0D6F4", Offset = "0xD0D6F4", VA = "0xD0D6F4")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xD0DAA8", Offset = "0xD0DAA8", VA = "0xD0DAA8")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xD0DB48", Offset = "0xD0DB48", VA = "0xD0DB48")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xD0DBF8", Offset = "0xD0DBF8", VA = "0xD0DBF8")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xD0DCA8", Offset = "0xD0DCA8", VA = "0xD0DCA8")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xD0DD58", Offset = "0xD0DD58", VA = "0xD0DD58")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xD0DE18", Offset = "0xD0DE18", VA = "0xD0DE18")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xD0DED8", Offset = "0xD0DED8", VA = "0xD0DED8")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xD0DF98", Offset = "0xD0DF98", VA = "0xD0DF98")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xD0E038", Offset = "0xD0E038", VA = "0xD0E038")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xD0E0D8", Offset = "0xD0E0D8", VA = "0xD0E0D8")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xD0E178", Offset = "0xD0E178", VA = "0xD0E178")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xD0E218", Offset = "0xD0E218", VA = "0xD0E218")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0xD0E2B8", Offset = "0xD0E2B8", VA = "0xD0E2B8")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001DED")]
		[Address(RVA = "0xD0E3FC", Offset = "0xD0E3FC", VA = "0xD0E3FC")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xD0E4B4", Offset = "0xD0E4B4", VA = "0xD0E4B4")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xD0E554", Offset = "0xD0E554", VA = "0xD0E554")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xD0E55C", Offset = "0xD0E55C", VA = "0xD0E55C")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xD0E60C", Offset = "0xD0E60C", VA = "0xD0E60C")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x200040B")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x8E22F4", Offset = "0x8E22F4")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xD00A74", Offset = "0xD00A74", VA = "0xD00A74")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xD00A78", Offset = "0xD00A78", VA = "0xD00A78")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xD00B80", Offset = "0xD00B80", VA = "0xD00B80")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2340", Offset = "0x8E2340")]
		public bool autoRetrigger;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8E2378", Offset = "0x8E2378")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E239C", Offset = "0x8E239C")]
		public Transform[] playPositions;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xDFA684", Offset = "0xDFA684", VA = "0xDFA684")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xDFA800", Offset = "0xDFA800", VA = "0xDFA800")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xDFAA88", Offset = "0xDFAA88", VA = "0xDFAA88")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xDFA860", Offset = "0xDFA860", VA = "0xDFA860")]
		public void Play()
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xDFAB6C", Offset = "0xDFAB6C", VA = "0xDFAB6C")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0xDFAD04", Offset = "0xDFAD04", VA = "0xDFAD04")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x200040D")]
	public enum PreloadSounds
	{
		[Token(Token = "0x400198D")]
		Default,
		[Token(Token = "0x400198E")]
		Preload,
		[Token(Token = "0x400198F")]
		ManualPreload
	}
	[Token(Token = "0x200040E")]
	public enum Fade
	{
		[Token(Token = "0x4001991")]
		In,
		[Token(Token = "0x4001992")]
		Out
	}
	[Serializable]
	[Token(Token = "0x200040F")]
	public class SoundGroup
	{
		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E23D4", Offset = "0x8E23D4")]
		public int maxPlayingSounds;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0xD00954", Offset = "0xD00954", VA = "0xD00954")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0xD009E8", Offset = "0xD009E8", VA = "0xD009E8")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0xCFE1E0", Offset = "0xCFE1E0", VA = "0xCFE1E0")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0xCFE538", Offset = "0xCFE538", VA = "0xCFE538")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0xCFFE58", Offset = "0xCFFE58", VA = "0xCFFE58")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000410")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x2000691")]
		public enum Fade
		{
			[Token(Token = "0x4002461")]
			In,
			[Token(Token = "0x4002462")]
			Out
		}

		[Token(Token = "0x2000692")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD630", Offset = "0x8CD630")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4002463")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6002779")]
			[Address(RVA = "0xCFDA80", Offset = "0xCFDA80", VA = "0xCFDA80")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x600277A")]
			[Address(RVA = "0xCFDA88", Offset = "0xCFDA88", VA = "0xCFDA88")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000693")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD640", Offset = "0x8CD640")]
		private sealed class <>c
		{
			[Token(Token = "0x4002464")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002465")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x600277C")]
			[Address(RVA = "0xCFD9E4", Offset = "0xCFD9E4", VA = "0xCFD9E4")]
			public <>c()
			{
			}

			[Token(Token = "0x600277D")]
			[Address(RVA = "0xCFD9EC", Offset = "0xCFD9EC", VA = "0xCFD9EC")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2400", Offset = "0x8E2400")]
		public bool makePersistent;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2438", Offset = "0x8E2438")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2470", Offset = "0x8E2470")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E24A8", Offset = "0x8E24A8")]
		public AudioMixer audioMixer;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E24E0", Offset = "0x8E24E0")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2518", Offset = "0x8E2518")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2550", Offset = "0x8E2550")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2588", Offset = "0x8E2588")]
		public bool verboseLogging;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E25C0", Offset = "0x8E25C0")]
		public int maxSoundEmitters;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E25F8", Offset = "0x8E25F8")]
		public float volumeSoundFX;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2630", Offset = "0x8E2630")]
		public float soundFxFadeSecs;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170001E3")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6001E00")]
			[Address(RVA = "0xDFADC0", Offset = "0xDFADC0", VA = "0xDFADC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E4")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6001E01")]
			[Address(RVA = "0xDFAEA4", Offset = "0xDFAEA4", VA = "0xDFAEA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		public static float NearFallOff
		{
			[Token(Token = "0x6001E02")]
			[Address(RVA = "0xDFAF0C", Offset = "0xDFAF0C", VA = "0xDFAF0C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E6")]
		public static float FarFallOff
		{
			[Token(Token = "0x6001E03")]
			[Address(RVA = "0xDFAF84", Offset = "0xDFAF84", VA = "0xDFAF84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001E7")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6001E04")]
			[Address(RVA = "0xDFAFFC", Offset = "0xDFAFFC", VA = "0xDFAFFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E8")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6001E05")]
			[Address(RVA = "0xDFB074", Offset = "0xDFB074", VA = "0xDFB074")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6001E06")]
			[Address(RVA = "0xDFB0EC", Offset = "0xDFB0EC", VA = "0xDFB0EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EA")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6001E11")]
			[Address(RVA = "0xDFD774", Offset = "0xDFD774", VA = "0xDFD774")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xDFB164", Offset = "0xDFB164", VA = "0xDFB164")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xDFB39C", Offset = "0xDFB39C", VA = "0xDFB39C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xDFB168", Offset = "0xDFB168", VA = "0xDFB168")]
		private void Init()
		{
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xDFC568", Offset = "0xDFC568", VA = "0xDFC568")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xDFB4F4", Offset = "0xDFB4F4", VA = "0xDFB4F4")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xDFCCFC", Offset = "0xDFCCFC", VA = "0xDFCCFC")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xDFCEAC", Offset = "0xDFCEAC", VA = "0xDFCEAC")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xDFD064", Offset = "0xDFD064", VA = "0xDFD064")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xDFD16C", Offset = "0xDFD16C", VA = "0xDFD16C")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xDFD230", Offset = "0xDFD230", VA = "0xDFD230")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xDFBCEC", Offset = "0xDFBCEC", VA = "0xDFBCEC")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xDFC56C", Offset = "0xDFC56C", VA = "0xDFC56C")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xDFD8F4", Offset = "0xDFD8F4", VA = "0xDFD8F4")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xDFD9F0", Offset = "0xDFD9F0", VA = "0xDFD9F0")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xDFDAF0", Offset = "0xDFDAF0", VA = "0xDFDAF0")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xDFD7DC", Offset = "0xDFD7DC", VA = "0xDFD7DC")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xDFDC88", Offset = "0xDFDC88", VA = "0xDFDC88")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xDFDD64", Offset = "0xDFDD64", VA = "0xDFDD64")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0xDFDEF8", Offset = "0xDFDEF8", VA = "0xDFDEF8")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0xDFAA98", Offset = "0xDFAA98", VA = "0xDFAA98")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0xDFAC30", Offset = "0xDFAC30", VA = "0xDFAC30")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0xDFDFD4", Offset = "0xDFDFD4", VA = "0xDFDFD4")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0xDFE0B8", Offset = "0xDFE0B8", VA = "0xDFE0B8")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xDFE184", Offset = "0xDFE184", VA = "0xDFE184")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xDFE2B0", Offset = "0xDFE2B0", VA = "0xDFE2B0")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xDFE370", Offset = "0xDFE370", VA = "0xDFE370")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xDFE44C", Offset = "0xDFE44C", VA = "0xDFE44C")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xDFF240", Offset = "0xDFF240", VA = "0xDFF240")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xDFFA2C", Offset = "0xDFFA2C", VA = "0xDFFA2C")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xDFFBD8", Offset = "0xDFFBD8", VA = "0xDFFBD8")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xE00A9C", Offset = "0xE00A9C", VA = "0xE00A9C")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xDFE620", Offset = "0xDFE620", VA = "0xDFE620")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xE00BC0", Offset = "0xE00BC0", VA = "0xE00BC0")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xE00CE4", Offset = "0xE00CE4", VA = "0xE00CE4")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xE00E1C", Offset = "0xE00E1C", VA = "0xE00E1C")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xE011B8", Offset = "0xE011B8", VA = "0xE011B8")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xE01328", Offset = "0xE01328", VA = "0xE01328")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xE01460", Offset = "0xE01460", VA = "0xE01460")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xE015A4", Offset = "0xE015A4", VA = "0xE015A4")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xE01680", Offset = "0xE01680", VA = "0xE01680")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0xE017D0", Offset = "0xE017D0", VA = "0xE017D0")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0xE01C8C", Offset = "0xE01C8C", VA = "0xE01C8C")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public enum EmitterChannel
	{
		[Token(Token = "0x40019BA")]
		None = -1,
		[Token(Token = "0x40019BB")]
		Reserved,
		[Token(Token = "0x40019BC")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000412")]
	public class MixerSnapshot
	{
		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0xCFDB88", Offset = "0xCFDB88", VA = "0xCFDB88")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float minDefaultVal;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxDefaultVal;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float min;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float max;

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0xCFDB2C", Offset = "0xCFDB2C", VA = "0xCFDB2C")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x2000694")]
		public enum FadeState
		{
			[Token(Token = "0x4002467")]
			Null,
			[Token(Token = "0x4002468")]
			FadingIn,
			[Token(Token = "0x4002469")]
			FadingOut,
			[Token(Token = "0x400246A")]
			Ducking
		}

		[Token(Token = "0x2000695")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD650", Offset = "0x8CD650")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400246B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400246C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400246D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400246E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x400246F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4002470")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x1700030F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002781")]
				[Address(RVA = "0xCFEF9C", Offset = "0xCFEF9C", VA = "0xCFEF9C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000310")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002783")]
				[Address(RVA = "0xCFF00C", Offset = "0xCFF00C", VA = "0xCFF00C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600277E")]
			[Address(RVA = "0xCFE978", Offset = "0xCFE978", VA = "0xCFE978")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x600277F")]
			[Address(RVA = "0xCFEE84", Offset = "0xCFEE84", VA = "0xCFEE84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002780")]
			[Address(RVA = "0xCFEE88", Offset = "0xCFEE88", VA = "0xCFEE88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002782")]
			[Address(RVA = "0xCFEFA4", Offset = "0xCFEFA4", VA = "0xCFEFA4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000696")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD660", Offset = "0x8CD660")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002474")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4002475")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4002476")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4002477")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4002478")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4002479")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000311")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002787")]
				[Address(RVA = "0xCFF508", Offset = "0xCFF508", VA = "0xCFF508", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000312")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002789")]
				[Address(RVA = "0xCFF578", Offset = "0xCFF578", VA = "0xCFF578", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002784")]
			[Address(RVA = "0xCFEE14", Offset = "0xCFEE14", VA = "0xCFEE14")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6002785")]
			[Address(RVA = "0xCFF364", Offset = "0xCFF364", VA = "0xCFF364", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002786")]
			[Address(RVA = "0xCFF368", Offset = "0xCFF368", VA = "0xCFF368", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002788")]
			[Address(RVA = "0xCFF510", Offset = "0xCFF510", VA = "0xCFF510", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000697")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD670", Offset = "0x8CD670")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400247A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400247B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400247C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x400247D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x400247E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x400247F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002480")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4002481")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4002482")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4002483")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4002484")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4002485")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000313")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600278D")]
				[Address(RVA = "0xCFF2EC", Offset = "0xCFF2EC", VA = "0xCFF2EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000314")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600278F")]
				[Address(RVA = "0xCFF35C", Offset = "0xCFF35C", VA = "0xCFF35C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600278A")]
			[Address(RVA = "0xCFEE40", Offset = "0xCFEE40", VA = "0xCFEE40")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x600278B")]
			[Address(RVA = "0xCFF014", Offset = "0xCFF014", VA = "0xCFF014", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600278C")]
			[Address(RVA = "0xCFF018", Offset = "0xCFF018", VA = "0xCFF018", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600278E")]
			[Address(RVA = "0xCFF2F4", Offset = "0xCFF2F4", VA = "0xCFF2F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170001EB")]
		public float volume
		{
			[Token(Token = "0x6001E35")]
			[Address(RVA = "0xCFDC28", Offset = "0xCFDC28", VA = "0xCFDC28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E36")]
			[Address(RVA = "0xCFDC58", Offset = "0xCFDC58", VA = "0xCFDC58")]
			set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public float pitch
		{
			[Token(Token = "0x6001E37")]
			[Address(RVA = "0xCFDC98", Offset = "0xCFDC98", VA = "0xCFDC98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E38")]
			[Address(RVA = "0xCFDCC8", Offset = "0xCFDCC8", VA = "0xCFDCC8")]
			set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public AudioClip clip
		{
			[Token(Token = "0x6001E39")]
			[Address(RVA = "0xCFDD08", Offset = "0xCFDD08", VA = "0xCFDD08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0xCFDD38", Offset = "0xCFDD38", VA = "0xCFDD38")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public float time
		{
			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0xCFDD70", Offset = "0xCFDD70", VA = "0xCFDD70")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0xCFDDA0", Offset = "0xCFDDA0", VA = "0xCFDDA0")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public float length
		{
			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0xCFDDE0", Offset = "0xCFDDE0", VA = "0xCFDDE0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F0")]
		public bool loop
		{
			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0xCFDEB8", Offset = "0xCFDEB8", VA = "0xCFDEB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0xCFDEE8", Offset = "0xCFDEE8", VA = "0xCFDEE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F1")]
		public bool mute
		{
			[Token(Token = "0x6001E40")]
			[Address(RVA = "0xCFDF20", Offset = "0xCFDF20", VA = "0xCFDF20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E41")]
			[Address(RVA = "0xCFDF50", Offset = "0xCFDF50", VA = "0xCFDF50")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6001E42")]
			[Address(RVA = "0xCFDF88", Offset = "0xCFDF88", VA = "0xCFDF88")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6001E43")]
			[Address(RVA = "0xCFDFB8", Offset = "0xCFDFB8", VA = "0xCFDFB8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F3")]
		public bool isPlaying
		{
			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xCFDFF0", Offset = "0xCFDFF0", VA = "0xCFDFF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0xCFE020", Offset = "0xCFE020", VA = "0xCFE020")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0xCFE1CC", Offset = "0xCFE1CC", VA = "0xCFE1CC")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0xCFE270", Offset = "0xCFE270", VA = "0xCFE270")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0xCFE278", Offset = "0xCFE278", VA = "0xCFE278")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0xCFE280", Offset = "0xCFE280", VA = "0xCFE280")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0xCFE288", Offset = "0xCFE288", VA = "0xCFE288")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0xCFE290", Offset = "0xCFE290", VA = "0xCFE290")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0xCFE340", Offset = "0xCFE340", VA = "0xCFE340")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0xCFE3A8", Offset = "0xCFE3A8", VA = "0xCFE3A8")]
		public void Play()
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0xCFE410", Offset = "0xCFE410", VA = "0xCFE410")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0xCFE450", Offset = "0xCFE450", VA = "0xCFE450")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0xCFE5C8", Offset = "0xCFE5C8", VA = "0xCFE5C8")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0xCFE63C", Offset = "0xCFE63C", VA = "0xCFE63C")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0xCFE74C", Offset = "0xCFE74C", VA = "0xCFE74C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0xCFE830", Offset = "0xCFE830", VA = "0xCFE830")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0xCFE880", Offset = "0xCFE880", VA = "0xCFE880")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0xCFE8AC", Offset = "0xCFE8AC", VA = "0xCFE8AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EBADC", Offset = "0x8EBADC")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xCFE9A4", Offset = "0xCFE9A4", VA = "0xCFE9A4")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xCFEAC8", Offset = "0xCFEAC8", VA = "0xCFEAC8")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xCFEC38", Offset = "0xCFEC38", VA = "0xCFEC38")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xCFECB8", Offset = "0xCFECB8", VA = "0xCFECB8")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xCFED64", Offset = "0xCFED64", VA = "0xCFED64")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xCFEA1C", Offset = "0xCFEA1C", VA = "0xCFEA1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EBB40", Offset = "0x8EBB40")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xCFEB4C", Offset = "0xCFEB4C", VA = "0xCFEB4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EBBA4", Offset = "0x8EBBA4")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xCFEE6C", Offset = "0xCFEE6C", VA = "0xCFEE6C")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40019D3")]
		Random,
		[Token(Token = "0x40019D4")]
		Sequential
	}
	[Token(Token = "0x2000416")]
	public enum FreqHint
	{
		[Token(Token = "0x40019D6")]
		None,
		[Token(Token = "0x40019D7")]
		Wide,
		[Token(Token = "0x40019D8")]
		Narrow
	}
	[Token(Token = "0x2000417")]
	public enum SoundPriority
	{
		[Token(Token = "0x40019DA")]
		VeryLow = -2,
		[Token(Token = "0x40019DB")]
		Low,
		[Token(Token = "0x40019DC")]
		Default,
		[Token(Token = "0x40019DD")]
		High,
		[Token(Token = "0x40019DE")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000418")]
	public class OSPProps
	{
		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2718", Offset = "0x8E2718")]
		public bool enableSpatialization;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2750", Offset = "0x8E2750")]
		public bool useFastOverride;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2788", Offset = "0x8E2788")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E2788", Offset = "0x8E2788")]
		public float gain;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E27DC", Offset = "0x8E27DC")]
		public bool enableInvSquare;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2814", Offset = "0x8E2814")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E2814", Offset = "0x8E2814")]
		public float volumetric;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E286C", Offset = "0x8E286C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8E286C", Offset = "0x8E286C")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xCFDB98", Offset = "0xCFDB98", VA = "0xCFDB98")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000419")]
	public class SoundFX
	{
		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E28CC", Offset = "0x8E28CC")]
		public string name;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2904", Offset = "0x8E2904")]
		public SoundFXNext playback;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E293C", Offset = "0x8E293C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E293C", Offset = "0x8E293C")]
		public float volume;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2990", Offset = "0x8E2990")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8E2990", Offset = "0x8E2990")]
		public Vector2 pitchVariance;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E29EC", Offset = "0x8E29EC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8E29EC", Offset = "0x8E29EC")]
		public Vector2 falloffDistance;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2A4C", Offset = "0x8E2A4C")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2A84", Offset = "0x8E2A84")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2ABC", Offset = "0x8E2ABC")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2AF4", Offset = "0x8E2AF4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E2AF4", Offset = "0x8E2AF4")]
		public float spread;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2B4C", Offset = "0x8E2B4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E2B4C", Offset = "0x8E2B4C")]
		public float pctChanceToPlay;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2BA0", Offset = "0x8E2BA0")]
		public SoundPriority priority;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2BD8", Offset = "0x8E2BD8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8E2BD8", Offset = "0x8E2BD8")]
		public Vector2 delay;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2C34", Offset = "0x8E2C34")]
		public bool looping;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2C6C", Offset = "0x8E2C6C")]
		public AudioClip[] soundClips;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170001F4")]
		public int Length
		{
			[Token(Token = "0x6001E60")]
			[Address(RVA = "0xCFFAF4", Offset = "0xCFFAF4", VA = "0xCFFAF4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F5")]
		public bool IsValid
		{
			[Token(Token = "0x6001E61")]
			[Address(RVA = "0xCFFB20", Offset = "0xCFFB20", VA = "0xCFFB20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001F6")]
		public SoundGroup Group
		{
			[Token(Token = "0x6001E62")]
			[Address(RVA = "0xCFFBE0", Offset = "0xCFFBE0", VA = "0xCFFBE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E63")]
			[Address(RVA = "0xCFFBE8", Offset = "0xCFFBE8", VA = "0xCFFBE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001E64")]
			[Address(RVA = "0xCFFBF0", Offset = "0xCFFBF0", VA = "0xCFFBF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F8")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6001E65")]
			[Address(RVA = "0xCFFBFC", Offset = "0xCFFBFC", VA = "0xCFFBFC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xCFF580", Offset = "0xCFF580", VA = "0xCFF580")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xCFFC14", Offset = "0xCFFC14", VA = "0xCFFC14")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xCFFD8C", Offset = "0xCFFD8C", VA = "0xCFFD8C")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xCFFE30", Offset = "0xCFFE30", VA = "0xCFFE30")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xCFFE78", Offset = "0xCFFE78", VA = "0xCFFE78")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xCFFFC8", Offset = "0xCFFFC8", VA = "0xCFFFC8")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xCFFFD4", Offset = "0xCFFFD4", VA = "0xCFFFD4")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xD000B4", Offset = "0xD000B4", VA = "0xD000B4")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xD001CC", Offset = "0xD001CC", VA = "0xD001CC")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xD0025C", Offset = "0xD0025C", VA = "0xD0025C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xD002F4", Offset = "0xD002F4", VA = "0xD002F4")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xD00384", Offset = "0xD00384", VA = "0xD00384")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xD00414", Offset = "0xD00414", VA = "0xD00414")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041A")]
	public class SoundFXRef
	{
		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170001F9")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6001E72")]
			[Address(RVA = "0xD00490", Offset = "0xD00490", VA = "0xD00490")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		public string name
		{
			[Token(Token = "0x6001E73")]
			[Address(RVA = "0xD0058C", Offset = "0xD0058C", VA = "0xD0058C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E74")]
			[Address(RVA = "0xD00594", Offset = "0xD00594", VA = "0xD00594")]
			set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public int Length
		{
			[Token(Token = "0x6001E76")]
			[Address(RVA = "0xD0059C", Offset = "0xD0059C", VA = "0xD0059C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001FC")]
		public bool IsValid
		{
			[Token(Token = "0x6001E77")]
			[Address(RVA = "0xD005EC", Offset = "0xD005EC", VA = "0xD005EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xD004C0", Offset = "0xD004C0", VA = "0xD004C0")]
		private void Init()
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xD0062C", Offset = "0xD0062C", VA = "0xD0062C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xD0066C", Offset = "0xD0066C", VA = "0xD0066C")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xD006B4", Offset = "0xD006B4", VA = "0xD006B4")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xD00704", Offset = "0xD00704", VA = "0xD00704")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xD0078C", Offset = "0xD0078C", VA = "0xD0078C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xD007D4", Offset = "0xD007D4", VA = "0xD007D4")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xD0082C", Offset = "0xD0082C", VA = "0xD0082C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xD0086C", Offset = "0xD0086C", VA = "0xD0086C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xD008B4", Offset = "0xD008B4", VA = "0xD008B4")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xD008F4", Offset = "0xD008F4", VA = "0xD008F4")]
		public SoundFXRef()
		{
		}
	}
}
namespace Observer
{
	[Token(Token = "0x200041B")]
	public static class Observer_Events
	{
		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xD01E94", Offset = "0xD01E94", VA = "0xD01E94")]
		public static Observer_CustomEvent CustomEvent(string type)
		{
			return null;
		}
	}
}
namespace MantisLODEditor
{
	[Token(Token = "0x200041C")]
	public class Mantis_Mesh
	{
		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh mesh;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int index;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string uuid;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int[][] origin_triangles;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int[] out_triangles;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int out_count;

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xBCD09C", Offset = "0xBCD09C", VA = "0xBCD09C")]
		public Mantis_Mesh()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041D")]
	public class ProgressiveMesh : ScriptableObject
	{
		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int max_lod_count;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] triangles;

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xBCD0D0", Offset = "0xBCD0D0", VA = "0xBCD0D0")]
		public ProgressiveMesh()
		{
		}
	}
	[Token(Token = "0x200041E")]
	internal class ProgressiveMeshRuntime : MonoBehaviour
	{
		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProgressiveMesh progressiveMesh;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text fpsHint;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text lodHint;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text triangleHint;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int minLod;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int maxLod;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Mesh[] cloned_meshes;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Mesh[] shared_meshes;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int current_lod;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Component[] allBasicRenderers;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float UpdateInterval;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float currentTimeToInterval;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool culled;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool working;

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xBCD12C", Offset = "0xBCD12C", VA = "0xBCD12C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xBCDD60", Offset = "0xBCDD60", VA = "0xBCDD60")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xBCDD64", Offset = "0xBCDD64", VA = "0xBCDD64")]
		private float ratio_of_screen()
		{
			return default(float);
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0xBCE3B0", Offset = "0xBCE3B0", VA = "0xBCE3B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0xBCED40", Offset = "0xBCED40", VA = "0xBCED40")]
		private int[] get_triangles_from_progressive_mesh(int lod0, int mesh_count0, int mat0)
		{
			return null;
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0xBCEADC", Offset = "0xBCEADC", VA = "0xBCEADC")]
		private void set_triangles(int lod)
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0xBCD130", Offset = "0xBCD130", VA = "0xBCD130")]
		private void get_all_meshes()
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0xBCEFAC", Offset = "0xBCEFAC", VA = "0xBCEFAC")]
		private void clean_all()
		{
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0xBCF3F4", Offset = "0xBCF3F4", VA = "0xBCF3F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0xBCF3F8", Offset = "0xBCF3F8", VA = "0xBCF3F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0xBCF3FC", Offset = "0xBCF3FC", VA = "0xBCF3FC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xBCF400", Offset = "0xBCF400", VA = "0xBCF400")]
		public ProgressiveMeshRuntime()
		{
		}
	}
}
namespace CurvedUI
{
	[Token(Token = "0x200041F")]
	public class CUI_AnimateCurvedFillOnStart : MonoBehaviour
	{
		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xCE4BF8", Offset = "0xCE4BF8", VA = "0xCE4BF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xCE4E10", Offset = "0xCE4E10", VA = "0xCE4E10")]
		public CUI_AnimateCurvedFillOnStart()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class CUI_CameraController : MonoBehaviour
	{
		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CUI_CameraController instance;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform CameraObject;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rotationMargin;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool runInEditorOnly;

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xCE4E18", Offset = "0xCE4E18", VA = "0xCE4E18")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xCE4E6C", Offset = "0xCE4E6C", VA = "0xCE4E6C")]
		public CUI_CameraController()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class CUI_ChangeValueOnHold : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool pressed;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool selected;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image bg;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color SelectedColor;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color NormalColor;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CanvasGroup IntroCG;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CanvasGroup MenuCG;

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xCE4E84", Offset = "0xCE4E84", VA = "0xCE4E84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0xCE4F0C", Offset = "0xCE4F0C", VA = "0xCE4F0C")]
		private void ChangeVal()
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0xCE50F0", Offset = "0xCE50F0", VA = "0xCE50F0", Slot = "4")]
		public void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xCE51C4", Offset = "0xCE51C4", VA = "0xCE51C4", Slot = "5")]
		public void OnPointerExit(PointerEventData data)
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xCE528C", Offset = "0xCE528C", VA = "0xCE528C")]
		public CUI_ChangeValueOnHold()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class CUI_DragBetweenCanvases : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 dragPoint;

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xCE5294", Offset = "0xCE5294", VA = "0xCE5294", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xCE5684", Offset = "0xCE5684", VA = "0xCE5684", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xCE5FFC", Offset = "0xCE5FFC", VA = "0xCE5FFC", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xCE5438", Offset = "0xCE5438", VA = "0xCE5438")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xCE6068", Offset = "0xCE6068", VA = "0xCE6068")]
		public CUI_DragBetweenCanvases()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class CUI_draggable : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 savedVector;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isDragged;

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0xCE8698", Offset = "0xCE8698", VA = "0xCE8698", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xCE8A90", Offset = "0xCE8A90", VA = "0xCE8A90", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xCE8A94", Offset = "0xCE8A94", VA = "0xCE8A94", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xCE8B0C", Offset = "0xCE8B0C", VA = "0xCE8B0C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xCE8844", Offset = "0xCE8844", VA = "0xCE8844")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xCE8C2C", Offset = "0xCE8C2C", VA = "0xCE8C2C")]
		public CUI_draggable()
		{
		}
	}
	[Token(Token = "0x2000424")]
	public class CUI_GunController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD680", Offset = "0x8CD680")]
		private sealed class <>c
		{
			[Token(Token = "0x4002486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__2_0;

			[Token(Token = "0x6002791")]
			[Address(RVA = "0xCE672C", Offset = "0xCE672C", VA = "0xCE672C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002792")]
			[Address(RVA = "0xCE6734", Offset = "0xCE6734", VA = "0xCE6734")]
			internal bool <Update>b__2_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings ControlledCanvas;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xCE6070", Offset = "0xCE6070", VA = "0xCE6070")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xCE66C0", Offset = "0xCE66C0", VA = "0xCE66C0")]
		public CUI_GunController()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class CUI_GunMovement : MonoBehaviour
	{
		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform pivot;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float sensitivity;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 lastMouse;

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xCE6818", Offset = "0xCE6818", VA = "0xCE6818")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xCE6844", Offset = "0xCE6844", VA = "0xCE6844")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xCE6B10", Offset = "0xCE6B10", VA = "0xCE6B10")]
		public CUI_GunMovement()
		{
		}
	}
	[Token(Token = "0x2000426")]
	public class CUI_inventory_paralax : MonoBehaviour
	{
		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform front;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform back;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 initFG;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initBG;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float change;

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xCE8C34", Offset = "0xCE8C34", VA = "0xCE8C34")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xCE8C98", Offset = "0xCE8C98", VA = "0xCE8C98")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xCE8F80", Offset = "0xCE8F80", VA = "0xCE8F80")]
		public CUI_inventory_paralax()
		{
		}
	}
	[Token(Token = "0x2000427")]
	public class CUI_OrientOnCurvedSpace : MonoBehaviour
	{
		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurvedUISettings mySettings;

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xCE6B24", Offset = "0xCE6B24", VA = "0xCE6B24")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xCE6B7C", Offset = "0xCE6B7C", VA = "0xCE6B7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xCE730C", Offset = "0xCE730C", VA = "0xCE730C")]
		public CUI_OrientOnCurvedSpace()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class CUI_PerlinNoisePosition : MonoBehaviour
	{
		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Range;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform rectie;

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xCE7314", Offset = "0xCE7314", VA = "0xCE7314")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xCE7388", Offset = "0xCE7388", VA = "0xCE7388")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xCE74E4", Offset = "0xCE74E4", VA = "0xCE74E4")]
		public CUI_PerlinNoisePosition()
		{
		}
	}
	[Token(Token = "0x2000429")]
	public class CUI_PerlinNoiseRotation : MonoBehaviour
	{
		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxrotation;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform rectie;

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xCE74F4", Offset = "0xCE74F4", VA = "0xCE74F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xCE7568", Offset = "0xCE7568", VA = "0xCE7568")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xCE7660", Offset = "0xCE7660", VA = "0xCE7660")]
		public CUI_PerlinNoiseRotation()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public class CUI_PickImageFromSet : MonoBehaviour
	{
		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CUI_PickImageFromSet picked;

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xCE7674", Offset = "0xCE7674", VA = "0xCE7674")]
		public void PickThis()
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xCE78D4", Offset = "0xCE78D4", VA = "0xCE78D4")]
		public CUI_PickImageFromSet()
		{
		}
	}
	[Token(Token = "0x200042B")]
	public class CUI_RaycastToCanvas : MonoBehaviour
	{
		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xCE78E0", Offset = "0xCE78E0", VA = "0xCE78E0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xCE7938", Offset = "0xCE7938", VA = "0xCE7938")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xCE7A8C", Offset = "0xCE7A8C", VA = "0xCE7A8C")]
		public CUI_RaycastToCanvas()
		{
		}
	}
	[Token(Token = "0x200042C")]
	public class CUI_RiseChildrenOverTime : MonoBehaviour
	{
		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float current;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Speed;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RiseBy;

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xCE7A94", Offset = "0xCE7A94", VA = "0xCE7A94")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xCE7A98", Offset = "0xCE7A98", VA = "0xCE7A98")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xCE7CF0", Offset = "0xCE7CF0", VA = "0xCE7CF0")]
		public CUI_RiseChildrenOverTime()
		{
		}
	}
	[Token(Token = "0x200042D")]
	public class CUI_TMPChecker : MonoBehaviour
	{
		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject testMsg;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject enabledMsg;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject disabledMsg;

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xCE7D04", Offset = "0xCE7D04", VA = "0xCE7D04")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xCE7DC4", Offset = "0xCE7DC4", VA = "0xCE7DC4")]
		public CUI_TMPChecker()
		{
		}
	}
	[Token(Token = "0x200042E")]
	public class CUI_ViveButtonState : MonoBehaviour
	{
		[Token(Token = "0x2000699")]
		private enum ViveButton
		{
			[Token(Token = "0x4002489")]
			Trigger,
			[Token(Token = "0x400248A")]
			TouchpadTouch,
			[Token(Token = "0x400248B")]
			TouchpadPress,
			[Token(Token = "0x400248C")]
			Grip,
			[Token(Token = "0x400248D")]
			Menu
		}

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color ActiveColor;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color InActiveColor;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ViveButton ShowStateFor;

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xCE7DCC", Offset = "0xCE7DCC", VA = "0xCE7DCC")]
		public CUI_ViveButtonState()
		{
		}
	}
	[Token(Token = "0x200042F")]
	public class CUI_ViveHapticPulse : MonoBehaviour
	{
		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float PulseStrength;

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xCE7E10", Offset = "0xCE7E10", VA = "0xCE7E10")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0xCE7E1C", Offset = "0xCE7E1C", VA = "0xCE7E1C")]
		public void SetPulseStrength(float newStr)
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0xCE7EA0", Offset = "0xCE7EA0", VA = "0xCE7EA0")]
		public void TriggerPulse()
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xCE7EA4", Offset = "0xCE7EA4", VA = "0xCE7EA4")]
		public CUI_ViveHapticPulse()
		{
		}
	}
	[Token(Token = "0x2000430")]
	public class CUI_WorldSpaceCursorFollow : MonoBehaviour
	{
		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xCE7EAC", Offset = "0xCE7EAC", VA = "0xCE7EAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xCE815C", Offset = "0xCE815C", VA = "0xCE815C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xCE8254", Offset = "0xCE8254", VA = "0xCE8254")]
		public CUI_WorldSpaceCursorFollow()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public class CUI_WorldSpaceMouseMultipleCanvases : MonoBehaviour
	{
		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CurvedUISettings> ControlledCanvases;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform WorldSpaceMouse;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CurvedUISettings MouseCanvas;

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xCE825C", Offset = "0xCE825C", VA = "0xCE825C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xCE8260", Offset = "0xCE8260", VA = "0xCE8260")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xCE8690", Offset = "0xCE8690", VA = "0xCE8690")]
		public CUI_WorldSpaceMouseMultipleCanvases()
		{
		}
	}
	[Token(Token = "0x2000432")]
	public class CurvedUIEventSystem : EventSystem
	{
		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CurvedUIEventSystem instance;

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xCE8F90", Offset = "0xCE8F90", VA = "0xCE8F90", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xCE8FF0", Offset = "0xCE8FF0", VA = "0xCE8FF0", Slot = "17")]
		protected override void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xCE8FFC", Offset = "0xCE8FFC", VA = "0xCE8FFC")]
		public CurvedUIEventSystem()
		{
		}
	}
	[Token(Token = "0x2000433")]
	public static class CurvedUIExtensionMethods
	{
		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xCE9064", Offset = "0xCE9064", VA = "0xCE9064")]
		public static bool AlmostEqual(this Vector3 a, Vector3 b, double accuracy = 0.01)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xCE74C8", Offset = "0xCE74C8", VA = "0xCE74C8")]
		public static float Remap(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xCE9130", Offset = "0xCE9130", VA = "0xCE9130")]
		public static float RemapAndClamp(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xCE91DC", Offset = "0xCE91DC", VA = "0xCE91DC")]
		public static float Remap(this int value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xCE91FC", Offset = "0xCE91FC", VA = "0xCE91FC")]
		public static double Remap(this double value, double from1, double to1, double from2, double to2)
		{
			return default(double);
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xCE9154", Offset = "0xCE9154", VA = "0xCE9154")]
		public static float Clamp(this float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xCE9218", Offset = "0xCE9218", VA = "0xCE9218")]
		public static float Clamp(this int value, int min, int max)
		{
			return default(float);
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xCE92A0", Offset = "0xCE92A0", VA = "0xCE92A0")]
		public static int Abs(this int value)
		{
			return default(int);
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xCE9308", Offset = "0xCE9308", VA = "0xCE9308")]
		public static float Abs(this float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xCE9374", Offset = "0xCE9374", VA = "0xCE9374")]
		public static int ToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xCE93E4", Offset = "0xCE93E4", VA = "0xCE93E4")]
		public static int FloorToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xCE9454", Offset = "0xCE9454", VA = "0xCE9454")]
		public static int CeilToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xCE6650", Offset = "0xCE6650", VA = "0xCE6650")]
		public static Vector3 ModifyX(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xCE6688", Offset = "0xCE6688", VA = "0xCE6688")]
		public static Vector3 ModifyY(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0xCE6618", Offset = "0xCE6618", VA = "0xCE6618")]
		public static Vector3 ModifyZ(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0xCE94C4", Offset = "0xCE94C4", VA = "0xCE94C4")]
		public static Vector2 ModifyVectorX(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0xCE9564", Offset = "0xCE9564", VA = "0xCE9564")]
		public static Vector2 ModifyVectorY(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xCE5BF0", Offset = "0xCE5BF0", VA = "0xCE5BF0")]
		public static void ResetTransform(this Transform trans)
		{
		}

		[Token(Token = "0x6001EE2")]
		public static T AddComponentIfMissing<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001EE3")]
		public static T AddComponentIfMissing<T>(this Component go) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x2000434")]
	public class CurvedUIHandSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject LaserBeam;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2E34", Offset = "0x8E2E34")]
		private bool autoSwitchHands;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private OVRInput.Controller activeCont;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool initialized;

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0xCE9604", Offset = "0xCE9604", VA = "0xCE9604")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xCE98F4", Offset = "0xCE98F4", VA = "0xCE98F4")]
		private void SwitchHandTo(CurvedUIInputModule.Hand newHand)
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xCE99E8", Offset = "0xCE99E8", VA = "0xCE99E8")]
		private bool IsButtonDownOnController(OVRInput.Controller cont, OVRInput.Controller cont2 = OVRInput.Controller.None)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xCE9B28", Offset = "0xCE9B28", VA = "0xCE9B28")]
		public CurvedUIHandSwitcher()
		{
		}
	}
	[Token(Token = "0x2000435")]
	public class CurvedUIInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x200069A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD690", Offset = "0x8CD690")]
		private sealed class <CaretBlinker>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400248E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400248F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUIInputFieldCaret <>4__this;

			[Token(Token = "0x17000315")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002796")]
				[Address(RVA = "0xCEABF8", Offset = "0xCEABF8", VA = "0xCEABF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000316")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002798")]
				[Address(RVA = "0xCEAC68", Offset = "0xCEAC68", VA = "0xCEAC68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002793")]
			[Address(RVA = "0xCEA668", Offset = "0xCEA668", VA = "0xCEA668")]
			[DebuggerHidden]
			public <CaretBlinker>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002794")]
			[Address(RVA = "0xCEAA94", Offset = "0xCEAA94", VA = "0xCEAA94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002795")]
			[Address(RVA = "0xCEAA98", Offset = "0xCEAA98", VA = "0xCEAA98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002797")]
			[Address(RVA = "0xCEAC00", Offset = "0xCEAC00", VA = "0xCEAC00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField myField;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lastCharDist;

		[Token(Token = "0x170001FD")]
		public Color CaretColor
		{
			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0xCEA9E4", Offset = "0xCEA9E4", VA = "0xCEA9E4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0xCEA9F0", Offset = "0xCEA9F0", VA = "0xCEA9F0")]
			set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public Color SelectionColor
		{
			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0xCEA9FC", Offset = "0xCEA9FC", VA = "0xCEA9FC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0xCEAA08", Offset = "0xCEAA08", VA = "0xCEAA08")]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0xCEAA14", Offset = "0xCEAA14", VA = "0xCEAA14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0xCEAA44", Offset = "0xCEAA44", VA = "0xCEAA44")]
			set
			{
			}
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xCE9B38", Offset = "0xCE9B38", VA = "0xCE9B38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xCE9B90", Offset = "0xCE9B90", VA = "0xCE9B90")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0xCE9FD4", Offset = "0xCE9FD4", VA = "0xCE9FD4", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0xCEA618", Offset = "0xCEA618", VA = "0xCEA618", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0xCEA5A4", Offset = "0xCEA5A4", VA = "0xCEA5A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EBD48", Offset = "0x8EBD48")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0xCEA0A8", Offset = "0xCEA0A8", VA = "0xCEA0A8")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xCE9BA0", Offset = "0xCE9BA0", VA = "0xCE9BA0")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xCEA694", Offset = "0xCEA694", VA = "0xCEA694")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xCEAA84", Offset = "0xCEAA84", VA = "0xCEAA84")]
		public CurvedUIInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public class CurvedUILaserBeam : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200069B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD6A0", Offset = "0x8CD6A0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__4_0;

			[Token(Token = "0x600279A")]
			[Address(RVA = "0xCEB288", Offset = "0xCEB288", VA = "0xCEB288")]
			public <>c()
			{
			}

			[Token(Token = "0x600279B")]
			[Address(RVA = "0xCEB290", Offset = "0xCEB290", VA = "0xCEB290")]
			internal bool <Update>b__4_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamDot;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool CollideWithMyLayerOnly;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool hideWhenNotAimingAtCanvas;

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xCEAC70", Offset = "0xCEAC70", VA = "0xCEAC70")]
		protected void Update()
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xCEB21C", Offset = "0xCEB21C", VA = "0xCEB21C")]
		public CurvedUILaserBeam()
		{
		}
	}
	[Token(Token = "0x2000437")]
	public class CurvedUIPointerEventData : PointerEventData
	{
		[Token(Token = "0x200069C")]
		public enum ControllerType
		{
			[Token(Token = "0x4002494")]
			NONE = -1,
			[Token(Token = "0x4002495")]
			VIVE
		}

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GameObject Controller;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Vector2 TouchPadAxis;

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0xCEB374", Offset = "0xCEB374", VA = "0xCEB374")]
		public CurvedUIPointerEventData(EventSystem eventSystem)
		{
		}
	}
	[Token(Token = "0x2000438")]
	public class CurvedUIRaycaster : GraphicRaycaster
	{
		[Serializable]
		[Token(Token = "0x200069D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD6B0", Offset = "0x8CD6B0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__17_0;

			[Token(Token = "0x4002498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Graphic> <>9__45_0;

			[Token(Token = "0x600279D")]
			[Address(RVA = "0xCF46B0", Offset = "0xCF46B0", VA = "0xCF46B0")]
			public <>c()
			{
			}

			[Token(Token = "0x600279E")]
			[Address(RVA = "0xCF46B8", Offset = "0xCF46B8", VA = "0xCF46B8")]
			internal bool <Update>b__17_0(GameObject obj)
			{
				return default(bool);
			}

			[Token(Token = "0x600279F")]
			[Address(RVA = "0xCF479C", Offset = "0xCF479C", VA = "0xCF479C")]
			internal int <GetObjectsHitByRay>b__45_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool showDebug;

		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool overrideEventData;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Canvas myCanvas;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 cyllinderMidPoint;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<GameObject> objectsUnderPointer;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 lastCanvasPos;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject colliderContainer;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PointerEventData lastFrameEventData;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<GameObject> selectablesUnderGaze;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<GameObject> selectablesUnderGazeLastFrame;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float objectsUnderGazeLastChangeTime;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool gazeClickExecuted;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool pointingAtCanvas;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
		private bool pointingAtCanvasLastFrame;

		[Token(Token = "0x17000200")]
		private Image GazeProgressImage
		{
			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0xCEC300", Offset = "0xCEC300", VA = "0xCEC300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000201")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6001F12")]
			[Address(RVA = "0xCF3CAC", Offset = "0xCF3CAC", VA = "0xCF3CAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xCEB3FC", Offset = "0xCEB3FC", VA = "0xCEB3FC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xCEB738", Offset = "0xCEB738", VA = "0xCEB738", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xCEBCFC", Offset = "0xCEBCFC", VA = "0xCEBCFC", Slot = "22")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0xCEC0CC", Offset = "0xCEC0CC", VA = "0xCEC0CC")]
		private void ProcessGazeTimedClick()
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0xCEC380", Offset = "0xCEC380", VA = "0xCEC380")]
		private void ResetGazeTimedClick()
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xCEC8FC", Offset = "0xCEC8FC", VA = "0xCEC8FC", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xCEDCD8", Offset = "0xCEDCD8", VA = "0xCEDCD8")]
		private LayerMask GetLayerMaskForMyLayer()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xCEDD58", Offset = "0xCEDD58", VA = "0xCEDD58", Slot = "23")]
		public virtual bool RaycastToCyllinderCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xCEE6A0", Offset = "0xCEE6A0", VA = "0xCEE6A0", Slot = "24")]
		public virtual bool RaycastToCyllinderVerticalCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xCEEE94", Offset = "0xCEEE94", VA = "0xCEEE94", Slot = "25")]
		public virtual bool RaycastToRingCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xCEF58C", Offset = "0xCEF58C", VA = "0xCEF58C", Slot = "26")]
		public virtual bool RaycastToSphereCanvas(Ray ray3D, out Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xCEB73C", Offset = "0xCEB73C", VA = "0xCEB73C")]
		protected void CreateCollider()
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xCF2254", Offset = "0xCF2254", VA = "0xCF2254")]
		private void SetupMeshColliderUsingMesh(Mesh meshie)
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xCF02EC", Offset = "0xCF02EC", VA = "0xCF02EC")]
		private GameObject CreateConvexCyllinderCollider(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xCF1474", Offset = "0xCF1474", VA = "0xCF1474")]
		private Mesh CreateCyllinderColliderMesh(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xCF231C", Offset = "0xCF231C", VA = "0xCF231C")]
		private Mesh CreateSphereColliderMesh()
		{
			return null;
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xCEE54C", Offset = "0xCEE54C", VA = "0xCEE54C")]
		private float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0xCF3144", Offset = "0xCF3144", VA = "0xCF3144")]
		private bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0xCF3214", Offset = "0xCF3214", VA = "0xCF3214", Slot = "27")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xCED624", Offset = "0xCED624", VA = "0xCED624")]
		protected void UpdateSelectedObjects(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xCF328C", Offset = "0xCF328C", VA = "0xCF328C")]
		protected void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget)
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xCF3950", Offset = "0xCF3950", VA = "0xCF3950")]
		protected static GameObject FindCommonRoot(GameObject g1, GameObject g2)
		{
			return null;
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xCF3B1C", Offset = "0xCF3B1C", VA = "0xCF3B1C")]
		private bool GetScreenSpacePointByRay(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xCF3CB4", Offset = "0xCF3CB4", VA = "0xCF3CB4")]
		public void RebuildCollider()
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xCE65A4", Offset = "0xCE65A4", VA = "0xCE65A4")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xCF3D28", Offset = "0xCF3D28", VA = "0xCF3D28")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 screenPos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xCF3E68", Offset = "0xCF3E68", VA = "0xCF3E68")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xCEC3AC", Offset = "0xCEC3AC", VA = "0xCEC3AC")]
		public void Click()
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xCF2D10", Offset = "0xCF2D10", VA = "0xCF2D10")]
		private void ModifyQuad(List<Vector3> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xCF4310", Offset = "0xCF4310", VA = "0xCF4310")]
		private Vector3 TesselateQuad(List<Vector3> quad, float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xCF4550", Offset = "0xCF4550", VA = "0xCF4550")]
		public CurvedUIRaycaster()
		{
		}
	}
	[Token(Token = "0x2000439")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8CC784", Offset = "0x8CC784")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC784", Offset = "0x8CC784")]
	public class CurvedUISettings : MonoBehaviour
	{
		[Token(Token = "0x200069E")]
		public enum CurvedUIShape
		{
			[Token(Token = "0x400249A")]
			CYLINDER,
			[Token(Token = "0x400249B")]
			RING,
			[Token(Token = "0x400249C")]
			SPHERE,
			[Token(Token = "0x400249D")]
			CYLINDER_VERTICAL
		}

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUIShape shape;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float quality;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool interactable;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool blocksRaycasts;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool raycastMyLayerOnly;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[SerializeField]
		private bool forceUseBoxCollider;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int angle;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool preserveAspect;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int vertAngle;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float ringFill;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int ringExternalDiamater;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool ringFlipVertical;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int baseCircleSegments;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 savedRectSize;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float savedRadius;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas myCanvas;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x17000202")]
		private RectTransform RectTransform
		{
			[Token(Token = "0x6001F25")]
			[Address(RVA = "0xCF48C4", Offset = "0xCF48C4", VA = "0xCF48C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000203")]
		public int BaseCircleSegments
		{
			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0xCF2AB4", Offset = "0xCF2AB4", VA = "0xCF2AB4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000204")]
		public int Angle
		{
			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0xCEDCC8", Offset = "0xCEDCC8", VA = "0xCEDCC8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F30")]
			[Address(RVA = "0xCF5A7C", Offset = "0xCF5A7C", VA = "0xCF5A7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public float Quality
		{
			[Token(Token = "0x6001F31")]
			[Address(RVA = "0xCF5A74", Offset = "0xCF5A74", VA = "0xCF5A74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F32")]
			[Address(RVA = "0xCF5A90", Offset = "0xCF5A90", VA = "0xCF5A90")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public CurvedUIShape Shape
		{
			[Token(Token = "0x6001F33")]
			[Address(RVA = "0xCEDCD0", Offset = "0xCEDCD0", VA = "0xCEDCD0")]
			get
			{
				return default(CurvedUIShape);
			}
			[Token(Token = "0x6001F34")]
			[Address(RVA = "0xCF5AAC", Offset = "0xCF5AAC", VA = "0xCF5AAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public int VerticalAngle
		{
			[Token(Token = "0x6001F35")]
			[Address(RVA = "0xCF02D4", Offset = "0xCF02D4", VA = "0xCF02D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F36")]
			[Address(RVA = "0xCF5ACC", Offset = "0xCF5ACC", VA = "0xCF5ACC")]
			set
			{
			}
		}

		[Token(Token = "0x17000208")]
		public float RingFill
		{
			[Token(Token = "0x6001F37")]
			[Address(RVA = "0xCE4E08", Offset = "0xCE4E08", VA = "0xCE4E08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F38")]
			[Address(RVA = "0xCE4DEC", Offset = "0xCE4DEC", VA = "0xCE4DEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000209")]
		public float SavedRadius
		{
			[Token(Token = "0x6001F39")]
			[Address(RVA = "0xCF5160", Offset = "0xCF5160", VA = "0xCF5160")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020A")]
		public int RingExternalDiameter
		{
			[Token(Token = "0x6001F3A")]
			[Address(RVA = "0xCEF57C", Offset = "0xCEF57C", VA = "0xCEF57C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F3B")]
			[Address(RVA = "0xCF5AEC", Offset = "0xCF5AEC", VA = "0xCF5AEC")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public bool RingFlipVertical
		{
			[Token(Token = "0x6001F3C")]
			[Address(RVA = "0xCEF584", Offset = "0xCEF584", VA = "0xCEF584")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F3D")]
			[Address(RVA = "0xCF5B0C", Offset = "0xCF5B0C", VA = "0xCF5B0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public bool PreserveAspect
		{
			[Token(Token = "0x6001F3E")]
			[Address(RVA = "0xCF02CC", Offset = "0xCF02CC", VA = "0xCF02CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F3F")]
			[Address(RVA = "0xCF5B38", Offset = "0xCF5B38", VA = "0xCF5B38")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public bool Interactable
		{
			[Token(Token = "0x6001F40")]
			[Address(RVA = "0xCED61C", Offset = "0xCED61C", VA = "0xCED61C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F41")]
			[Address(RVA = "0xCF5B64", Offset = "0xCF5B64", VA = "0xCF5B64")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public bool ForceUseBoxCollider
		{
			[Token(Token = "0x6001F42")]
			[Address(RVA = "0xCF02E4", Offset = "0xCF02E4", VA = "0xCF02E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F43")]
			[Address(RVA = "0xCF5B70", Offset = "0xCF5B70", VA = "0xCF5B70")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public bool BlocksRaycasts
		{
			[Token(Token = "0x6001F44")]
			[Address(RVA = "0xCF02DC", Offset = "0xCF02DC", VA = "0xCF02DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F45")]
			[Address(RVA = "0xCF5B7C", Offset = "0xCF5B7C", VA = "0xCF5B7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000210")]
		public bool RaycastMyLayerOnly
		{
			[Token(Token = "0x6001F46")]
			[Address(RVA = "0xCEDD50", Offset = "0xCEDD50", VA = "0xCEDD50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F47")]
			[Address(RVA = "0xCF5C6C", Offset = "0xCF5C6C", VA = "0xCF5C6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6001F49")]
			[Address(RVA = "0xCF5D5C", Offset = "0xCF5D5C", VA = "0xCF5D5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000212")]
		public CurvedUIInputModule.CUIControlMethod ControlMethod
		{
			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0xCF38F4", Offset = "0xCF38F4", VA = "0xCF38F4")]
			get
			{
				return default(CurvedUIInputModule.CUIControlMethod);
			}
			[Token(Token = "0x6001F4C")]
			[Address(RVA = "0xCF5F18", Offset = "0xCF5F18", VA = "0xCF5F18")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public bool GazeUseTimedClick
		{
			[Token(Token = "0x6001F50")]
			[Address(RVA = "0xCF62A0", Offset = "0xCF62A0", VA = "0xCF62A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F51")]
			[Address(RVA = "0xCF6310", Offset = "0xCF6310", VA = "0xCF6310")]
			set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public float GazeClickTimer
		{
			[Token(Token = "0x6001F52")]
			[Address(RVA = "0xCF6394", Offset = "0xCF6394", VA = "0xCF6394")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F53")]
			[Address(RVA = "0xCF6404", Offset = "0xCF6404", VA = "0xCF6404")]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public float GazeClickTimerDelay
		{
			[Token(Token = "0x6001F54")]
			[Address(RVA = "0xCF6504", Offset = "0xCF6504", VA = "0xCF6504")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F55")]
			[Address(RVA = "0xCF6574", Offset = "0xCF6574", VA = "0xCF6574")]
			set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public float GazeTimerProgress
		{
			[Token(Token = "0x6001F56")]
			[Address(RVA = "0xCF6674", Offset = "0xCF6674", VA = "0xCF6674")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xCF480C", Offset = "0xCF480C", VA = "0xCF480C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xCF4970", Offset = "0xCF4970", VA = "0xCF4970")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xCF4AF8", Offset = "0xCF4AF8", VA = "0xCF4AF8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xCF4BC0", Offset = "0xCF4BC0", VA = "0xCF4BC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xCF4C88", Offset = "0xCF4C88", VA = "0xCF4C88")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xCF4DF0", Offset = "0xCF4DF0", VA = "0xCF4DF0")]
		private void SetUIAngle(int newAngle)
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0xCF5030", Offset = "0xCF5030", VA = "0xCF5030")]
		private Vector3 CanvasToCyllinder(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xCF5194", Offset = "0xCF5194", VA = "0xCF5194")]
		private Vector3 CanvasToCyllinderVertical(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xCF52C4", Offset = "0xCF52C4", VA = "0xCF52C4")]
		private Vector3 CanvasToRing(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xCF53FC", Offset = "0xCF53FC", VA = "0xCF53FC")]
		private Vector3 CanvasToSphere(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xCF55E4", Offset = "0xCF55E4", VA = "0xCF55E4")]
		public void AddEffectToChildren()
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xCF5844", Offset = "0xCF5844", VA = "0xCF5844")]
		public Vector3 VertexPositionToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xCE6E38", Offset = "0xCE6E38", VA = "0xCE6E38")]
		public Vector3 CanvasToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xCE6F60", Offset = "0xCE6F60", VA = "0xCE6F60")]
		public Vector3 CanvasToCurvedCanvasNormal(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xCE5E30", Offset = "0xCE5E30", VA = "0xCE5E30")]
		public bool RaycastToCanvasSpace(Ray ray, out Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xCEB59C", Offset = "0xCEB59C", VA = "0xCEB59C")]
		public float GetCyllinderRadiusInCanvasSpace()
		{
			return default(float);
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xCF2ABC", Offset = "0xCF2ABC", VA = "0xCF2ABC")]
		public Vector2 GetTesslationSize(bool modifiedByQuality = true)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xCF5974", Offset = "0xCF5974", VA = "0xCF5974")]
		private float GetSegmentsByAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0xCF5C78", Offset = "0xCF5C78", VA = "0xCF5C78")]
		public void SetAllChildrenDirty(bool recalculateCurveOnly = false)
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xCF5E54", Offset = "0xCF5E54", VA = "0xCF5E54")]
		public void Click()
		{
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0xCEB130", Offset = "0xCEB130", VA = "0xCEB130")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0xCF602C", Offset = "0xCF602C", VA = "0xCF602C")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 pos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xCF6188", Offset = "0xCF6188", VA = "0xCF6188")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xCF66EC", Offset = "0xCF66EC", VA = "0xCF66EC")]
		public CurvedUISettings()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public class CurvedUIVertexEffect : BaseMeshEffect
	{
		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E2F90", Offset = "0x8E2F90")]
		public bool DoNotTesselate;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas myCanvas;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Graphic myGraphic;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text myText;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_tesselationRequired;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool curvingRequired;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool TransformMisaligned;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Matrix4x4 CanvasToWorld;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Matrix4x4 CanvasToLocal;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Matrix4x4 MyToWorld;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Matrix4x4 MyToLocal;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private List<UIVertex> m_tesselatedVerts;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private List<UIVertex> m_curvedVerts;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<UIVertex> m_vertsInQuads;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private UIVertex m_ret;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private UIVertex[] m_quad;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float[] m_weights;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedPos;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedUp;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedRectSize;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		[HideInInspector]
		private Color savedColor;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedTextUV0;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		[HideInInspector]
		private float savedFill;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private Vector2 _uv0;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private Vector2 _uv1;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private Vector3 _pos;

		[Token(Token = "0x17000217")]
		private bool tesselationRequired
		{
			[Token(Token = "0x6001F58")]
			[Address(RVA = "0xCF6748", Offset = "0xCF6748", VA = "0xCF6748")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F59")]
			[Address(RVA = "0xCF6750", Offset = "0xCF6750", VA = "0xCF6750")]
			set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public bool TesselationRequired
		{
			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0xCF9C30", Offset = "0xCF9C30", VA = "0xCF9C30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0xCE51B8", Offset = "0xCE51B8", VA = "0xCE51B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public bool CurvingRequired
		{
			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0xCF9C38", Offset = "0xCF9C38", VA = "0xCF9C38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0xCF5D50", Offset = "0xCF5D50", VA = "0xCF5D50")]
			set
			{
			}
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xCF675C", Offset = "0xCF675C", VA = "0xCF675C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xCF67D8", Offset = "0xCF67D8", VA = "0xCF67D8", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0xCF6994", Offset = "0xCF6994", VA = "0xCF6994", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0xCF70DC", Offset = "0xCF70DC", VA = "0xCF70DC", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0xCF7268", Offset = "0xCF7268", VA = "0xCF7268")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0xCF7274", Offset = "0xCF7274", VA = "0xCF7274")]
		private void FontTextureRebuiltCallback(Font fontie)
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0xCF7320", Offset = "0xCF7320", VA = "0xCF7320")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0xCF795C", Offset = "0xCF795C", VA = "0xCF795C", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xCF8220", Offset = "0xCF8220", VA = "0xCF8220")]
		private void CheckTextFontMaterial()
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xCE5D2C", Offset = "0xCE5D2C", VA = "0xCE5D2C")]
		public CurvedUISettings FindParentSettings(bool forceNew = false)
		{
			return null;
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xCF86F0", Offset = "0xCF86F0", VA = "0xCF86F0")]
		private UIVertex CurveVertex(UIVertex input, float cylinder_angle, float radius, Vector2 canvasSize)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xCF8518", Offset = "0xCF8518", VA = "0xCF8518")]
		private void TesselateGeometry(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xCF8E5C", Offset = "0xCF8E5C", VA = "0xCF8E5C")]
		private void ModifyQuad(List<UIVertex> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xCF8BE8", Offset = "0xCF8BE8", VA = "0xCF8BE8")]
		private void TrisToQuads(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xCF973C", Offset = "0xCF973C", VA = "0xCF973C")]
		private UIVertex TesselateQuad(float x, float y)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xCF5024", Offset = "0xCF5024", VA = "0xCF5024")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0xCF9C40", Offset = "0xCF9C40", VA = "0xCF9C40")]
		public CurvedUIVertexEffect()
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class CurvedUIViveController : MonoBehaviour
	{
		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0xCF9D20", Offset = "0xCF9D20", VA = "0xCF9D20")]
		public CurvedUIViveController()
		{
		}
	}
	[Token(Token = "0x200043C")]
	public struct ViveInputArgs
	{
		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float buttonPressure;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 touchpadAxis;
	}
	[Token(Token = "0x200043D")]
	public delegate void ViveInputEvent(object sender, ViveInputArgs e);
	[Token(Token = "0x200043E")]
	public delegate void ViveEvent(object sender);
	[Token(Token = "0x200043F")]
	[ExecuteInEditMode]
	public class CurvedUITMP : MonoBehaviour
	{
		[Token(Token = "0x6001F78")]
		[Address(RVA = "0xCF6730", Offset = "0xCF6730", VA = "0xCF6730")]
		public CurvedUITMP()
		{
		}
	}
	[Token(Token = "0x2000440")]
	public class CurvedUITMPInputFieldCaret : MonoBehaviour
	{
		[Token(Token = "0x6001F79")]
		[Address(RVA = "0xCF6738", Offset = "0xCF6738", VA = "0xCF6738")]
		public CurvedUITMPInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x2000441")]
	[ExecuteInEditMode]
	public class CurvedUITMPSubmesh : MonoBehaviour
	{
		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0xCF6740", Offset = "0xCF6740", VA = "0xCF6740")]
		public CurvedUITMPSubmesh()
		{
		}
	}
}
namespace Pegasus
{
	[Token(Token = "0x2000442")]
	public static class PegasusConstants
	{
		[Token(Token = "0x200069F")]
		public enum FlythroughType
		{
			[Token(Token = "0x400249F")]
			SingleShot,
			[Token(Token = "0x40024A0")]
			Looped
		}

		[Token(Token = "0x20006A0")]
		public enum FlythroughEndAction
		{
			[Token(Token = "0x40024A2")]
			StopFlythrough,
			[Token(Token = "0x40024A3")]
			QuitApplication,
			[Token(Token = "0x40024A4")]
			PlayNextPegasus
		}

		[Token(Token = "0x20006A1")]
		public enum FlythroughState
		{
			[Token(Token = "0x40024A6")]
			Stopped,
			[Token(Token = "0x40024A7")]
			Initialising,
			[Token(Token = "0x40024A8")]
			Started,
			[Token(Token = "0x40024A9")]
			Paused
		}

		[Token(Token = "0x20006A2")]
		public enum HeightCheckType
		{
			[Token(Token = "0x40024AB")]
			Collision,
			[Token(Token = "0x40024AC")]
			Terrain,
			[Token(Token = "0x40024AD")]
			None
		}

		[Token(Token = "0x20006A3")]
		public enum PoiHeightCheckType
		{
			[Token(Token = "0x40024AF")]
			ManagerSettings,
			[Token(Token = "0x40024B0")]
			Collision,
			[Token(Token = "0x40024B1")]
			Terrain,
			[Token(Token = "0x40024B2")]
			None
		}

		[Token(Token = "0x20006A4")]
		public enum PoiType
		{
			[Token(Token = "0x40024B4")]
			Manual,
			[Token(Token = "0x40024B5")]
			AutoGenerated
		}

		[Token(Token = "0x20006A5")]
		public enum LookatType
		{
			[Token(Token = "0x40024B7")]
			Path,
			[Token(Token = "0x40024B8")]
			Target
		}

		[Token(Token = "0x20006A6")]
		public enum SpeedType
		{
			[Token(Token = "0x40024BA")]
			ReallySlow,
			[Token(Token = "0x40024BB")]
			Slow,
			[Token(Token = "0x40024BC")]
			Medium,
			[Token(Token = "0x40024BD")]
			Fast,
			[Token(Token = "0x40024BE")]
			ReallyFast,
			[Token(Token = "0x40024BF")]
			Stratospheric,
			[Token(Token = "0x40024C0")]
			Custom
		}

		[Token(Token = "0x20006A7")]
		public enum EasingType
		{
			[Token(Token = "0x40024C2")]
			Linear,
			[Token(Token = "0x40024C3")]
			EaseIn,
			[Token(Token = "0x40024C4")]
			EaseOut,
			[Token(Token = "0x40024C5")]
			EaseInOut
		}

		[Token(Token = "0x20006A8")]
		public enum TargetFrameRate
		{
			[Token(Token = "0x40024C7")]
			NineFps,
			[Token(Token = "0x40024C8")]
			FifteenFps,
			[Token(Token = "0x40024C9")]
			TwentyFourFps,
			[Token(Token = "0x40024CA")]
			TwentyFiveFps,
			[Token(Token = "0x40024CB")]
			ThirtyFps,
			[Token(Token = "0x40024CC")]
			SixtyFps,
			[Token(Token = "0x40024CD")]
			NinetyFps,
			[Token(Token = "0x40024CE")]
			MaxFps
		}

		[Token(Token = "0x20006A9")]
		public enum PoiPegasusTriggerAction
		{
			[Token(Token = "0x40024D0")]
			PlayPegasus,
			[Token(Token = "0x40024D1")]
			PausePegasus,
			[Token(Token = "0x40024D2")]
			ResumePegasus,
			[Token(Token = "0x40024D3")]
			StopPegasus,
			[Token(Token = "0x40024D4")]
			DoNothing
		}

		[Token(Token = "0x20006AA")]
		public enum PoiHeliosTriggerAction
		{
			[Token(Token = "0x40024D6")]
			FadeIn,
			[Token(Token = "0x40024D7")]
			FadeOut,
			[Token(Token = "0x40024D8")]
			DoNothing
		}

		[Token(Token = "0x20006AB")]
		public enum PoiRotateTowardsTriggerAction
		{
			[Token(Token = "0x40024DA")]
			Rotate,
			[Token(Token = "0x40024DB")]
			DoNothing
		}

		[Token(Token = "0x20006AC")]
		public enum PoiAnimationTriggerAction
		{
			[Token(Token = "0x40024DD")]
			PlayAnimation,
			[Token(Token = "0x40024DE")]
			StopAnimation,
			[Token(Token = "0x40024DF")]
			DoNothing
		}

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MajorVersion;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string MinorVersion;

		[Token(Token = "0x4001A93")]
		public const float FlybyOffsetDefaultHeight = 1.8f;

		[Token(Token = "0x4001A94")]
		public const float FlybyOffsetLow = 5f;

		[Token(Token = "0x4001A95")]
		public const float FlybyOffsetHigh = 40f;

		[Token(Token = "0x4001A96")]
		public const float SpeedReallySlow = 0.01f;

		[Token(Token = "0x4001A97")]
		public const float SpeedSlow = 1.4f;

		[Token(Token = "0x4001A98")]
		public const float SpeedMedium = 8f;

		[Token(Token = "0x4001A99")]
		public const float SpeedFast = 25f;

		[Token(Token = "0x4001A9A")]
		public const float SpeedReallyFast = 70f;

		[Token(Token = "0x4001A9B")]
		public const float SpeedStratospheric = 250f;
	}
	[Token(Token = "0x2000443")]
	public class PegasusDefaults : ScriptableObject
	{
		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E3118", Offset = "0x8E3118")]
		public KeyCode m_keyPrevPoi;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public KeyCode m_keyNextPoi;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E3150", Offset = "0x8E3150")]
		public KeyCode m_keyUp;

		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public KeyCode m_keyDown;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KeyCode m_keyLeft;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public KeyCode m_keyRight;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public KeyCode m_keyForward;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode m_keyBackward;

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0xF62C30", Offset = "0xF62C30", VA = "0xF62C30")]
		public PegasusDefaults()
		{
		}
	}
	[Token(Token = "0x2000444")]
	public class PegasusManager : MonoBehaviour
	{
		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_target;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PegasusConstants.FlythroughType m_flythroughType;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public PegasusConstants.FlythroughEndAction m_flythroughEndAction;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PegasusConstants.TargetFrameRate m_targetFramerateType;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PegasusConstants.HeightCheckType m_heightCheckType;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool m_autoStartAtRuntime;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<PegasusPoi> m_poiList;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_minHeightAboveTerrain;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool m_displayDebug;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool m_alwaysShowGizmos;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PegasusConstants.FlythroughState m_currentState;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int m_currentSegmentIdx;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PegasusPoi m_currentSegment;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_currentSegmentDistanceTravelled;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_totalDistanceTravelled;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float m_totalDistanceTravelledPct;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float m_totalDistance;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TimeSpan m_totalDuration;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float m_currentVelocity;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 m_currentPosition;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Quaternion m_currentRotation;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool m_canUpdateNow;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public DateTime m_lastUpdateTime;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float m_frameUpdateTime;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float m_frameUpdateDistance;

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float m_rotationDamping;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float m_positionDamping;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public PegasusManager m_nextPegasus;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool m_alwaysShowPath;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool m_showScrubber;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		public bool m_showPOIHelpers;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float m_poiGizmoSize;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool m_showAdvanced;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float m_collisionHeightOffset;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public PegasusDefaults m_defaults;

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0xF62C50", Offset = "0xF62C50", VA = "0xF62C50")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0xF62F40", Offset = "0xF62F40", VA = "0xF62F40")]
		public void InitialiseFlythrough()
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0xF63F1C", Offset = "0xF63F1C", VA = "0xF63F1C")]
		private void RestartFlythrough()
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0xF64048", Offset = "0xF64048", VA = "0xF64048")]
		public void UpdateFlythroughMetaData()
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0xF64214", Offset = "0xF64214", VA = "0xF64214")]
		public void UpdateSegmentWithDependencies(PegasusPoi segment)
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0xF6438C", Offset = "0xF6438C", VA = "0xF6438C")]
		private void SafeInitialise(int idx, bool wrap, bool updateSegments)
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0xF63588", Offset = "0xF63588", VA = "0xF63588")]
		public void StartFlythrough(bool fullInitialise = false)
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0xF645FC", Offset = "0xF645FC", VA = "0xF645FC")]
		public void ResumeFlythrough()
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0xF646C8", Offset = "0xF646C8", VA = "0xF646C8")]
		public void PauseFlythrough()
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0xF6474C", Offset = "0xF6474C", VA = "0xF6474C")]
		public void StopFlythrough()
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0xF62E20", Offset = "0xF62E20", VA = "0xF62E20")]
		public void ChangeFramerate(PegasusConstants.TargetFrameRate newRate)
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0xF647D0", Offset = "0xF647D0", VA = "0xF647D0")]
		public void SelectPoi(PegasusPoi poi)
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0xF648DC", Offset = "0xF648DC", VA = "0xF648DC")]
		public void MovePoi(PegasusPoi poi, Vector3 movement)
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0xF64EC0", Offset = "0xF64EC0", VA = "0xF64EC0")]
		public void MovePoiLookat(PegasusPoi poi, Vector3 movement)
		{
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0xF6521C", Offset = "0xF6521C", VA = "0xF6521C")]
		public void MoveTargetNow()
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0xF6522C", Offset = "0xF6522C", VA = "0xF6522C")]
		public void MoveTargetTo(float percent)
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0xF658B0", Offset = "0xF658B0", VA = "0xF658B0")]
		public void MoveTargetToPoi(PegasusPoi targetPoi)
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0xF65B88", Offset = "0xF65B88", VA = "0xF65B88")]
		public void StepTargetBackward(float distMeters)
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0xF65BA8", Offset = "0xF65BA8", VA = "0xF65BA8")]
		public void StepTargetForward(float distMeters)
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0xF65BC8", Offset = "0xF65BC8", VA = "0xF65BC8")]
		public void CreateDebugObjects()
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0xF66150", Offset = "0xF66150", VA = "0xF66150")]
		public void DeleteDebugObjects()
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0xF64AAC", Offset = "0xF64AAC", VA = "0xF64AAC")]
		public Vector3 GetValidatedPoiPosition(Vector3 source, PegasusConstants.PoiHeightCheckType heightCheckOverride = PegasusConstants.PoiHeightCheckType.ManagerSettings)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xF66568", Offset = "0xF66568", VA = "0xF66568")]
		public Vector3 GetLowestPoiPosition(Vector3 source, PegasusConstants.PoiHeightCheckType heightCheckOverride = PegasusConstants.PoiHeightCheckType.ManagerSettings)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xF65048", Offset = "0xF65048", VA = "0xF65048")]
		public Vector3 GetValidatedLookatPosition(Vector3 source, PegasusConstants.PoiHeightCheckType heightCheckOverride = PegasusConstants.PoiHeightCheckType.ManagerSettings)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xF66728", Offset = "0xF66728", VA = "0xF66728")]
		public Vector3 GetLowestLookatPosition(Vector3 source, PegasusConstants.PoiHeightCheckType heightCheckOverride = PegasusConstants.PoiHeightCheckType.ManagerSettings)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xF668E0", Offset = "0xF668E0", VA = "0xF668E0")]
		public float GetValidatedLookatHeightRelativeToMinimum(Vector3 source, PegasusConstants.PoiHeightCheckType heightCheckOverride = PegasusConstants.PoiHeightCheckType.ManagerSettings)
		{
			return default(float);
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xF662C8", Offset = "0xF662C8", VA = "0xF662C8")]
		public Terrain GetTerrain(Vector3 location)
		{
			return null;
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xF66904", Offset = "0xF66904", VA = "0xF66904")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0xF66C34", Offset = "0xF66C34", VA = "0xF66C34")]
		private void CalculateFlythroughUpdates()
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0xF67194", Offset = "0xF67194", VA = "0xF67194")]
		public void AddPOI(Vector3 targetLocation, Vector3 lookatLocation)
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0xF67398", Offset = "0xF67398", VA = "0xF67398")]
		public PegasusPoi AddPoiAfter(PegasusPoi currentPoi)
		{
			return null;
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0xF67628", Offset = "0xF67628", VA = "0xF67628")]
		public PegasusPoi AddPoiBefore(PegasusPoi currentPoi)
		{
			return null;
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0xF6778C", Offset = "0xF6778C", VA = "0xF6778C")]
		public PegasusPoi GetFirstPOI()
		{
			return null;
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0xF67828", Offset = "0xF67828", VA = "0xF67828")]
		public PegasusPoi GetPOI(int poiIndex)
		{
			return null;
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0xF67654", Offset = "0xF67654", VA = "0xF67654")]
		public PegasusPoi GetPrevPOI(PegasusPoi currentPoi, bool wrap = true)
		{
			return null;
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0xF678FC", Offset = "0xF678FC", VA = "0xF678FC")]
		public PegasusPoi GetNextPOI(PegasusPoi currentPoi, bool wrap = true)
		{
			return null;
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0xF67A2C", Offset = "0xF67A2C", VA = "0xF67A2C")]
		public void SetPoiToMinHeight()
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0xF67BE4", Offset = "0xF67BE4", VA = "0xF67BE4")]
		public PegasusManager()
		{
		}
	}
	[Token(Token = "0x2000445")]
	public class PegasusPoi : MonoBehaviour
	{
		[Token(Token = "0x20006AD")]
		private delegate float Easing(float time, float duration = 1f);

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3188", Offset = "0x8E3188")]
		public PegasusConstants.PoiType m_poiType;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E31C0", Offset = "0x8E31C0")]
		public PegasusConstants.PoiHeightCheckType m_heightCheckType;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E31F8", Offset = "0x8E31F8")]
		public PegasusConstants.LookatType m_lookatType;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3230", Offset = "0x8E3230")]
		public float m_lookAtAngle;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3268", Offset = "0x8E3268")]
		public float m_lookAtDistance;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E32A0", Offset = "0x8E32A0")]
		public float m_lookAtHeight;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E32D8", Offset = "0x8E32D8")]
		public Vector3 m_lookatLocation;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3310", Offset = "0x8E3310")]
		public PegasusConstants.SpeedType m_startSpeedType;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3348", Offset = "0x8E3348")]
		public float m_startSpeed;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public PegasusConstants.EasingType m_rotationEasingType;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public PegasusConstants.EasingType m_velocityEasingType;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public PegasusConstants.EasingType m_positionEasingType;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public PegasusManager m_manager;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool m_alwaysShowGizmos;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public float m_segmentDistance;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public TimeSpan m_segmentStartTime;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public TimeSpan m_segmentDuration;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public int m_segmentIndex;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public bool m_isFirstPOI;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		[HideInInspector]
		public bool m_isLastPOI;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public PegasusPoi m_prevPoi;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public PegasusPoi m_nextPoi;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public List<Vector3> m_poiSteps;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public bool m_isSelected;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public List<TriggerBase> m_poiTriggers;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Easing m_velocityEasingCalculator;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Easing m_positionEasingCalculator;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Easing m_rotationEasingCalculator;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Quaternion m_rotationStart;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Quaternion m_rotationEnd;

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0xF67D6C", Offset = "0xF67D6C", VA = "0xF67D6C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0xF6836C", Offset = "0xF6836C", VA = "0xF6836C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0xF67D74", Offset = "0xF67D74", VA = "0xF67D74")]
		private void DrawGizmos(bool isSelected)
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0xF684E4", Offset = "0xF684E4", VA = "0xF684E4")]
		public bool IsSameObject(PegasusPoi poi)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0xF637A4", Offset = "0xF637A4", VA = "0xF637A4")]
		public void Initialise(bool updateSegments = true)
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0xF6452C", Offset = "0xF6452C", VA = "0xF6452C")]
		public void OnStartTriggers()
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0xF670B4", Offset = "0xF670B4", VA = "0xF670B4")]
		public void OnUpdateTriggers(float progress)
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0xF66FE4", Offset = "0xF66FE4", VA = "0xF66FE4")]
		public void OnEndTriggers()
		{
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0xF68E14", Offset = "0xF68E14", VA = "0xF68E14")]
		public float GetStartSpeed(PegasusConstants.SpeedType speedType)
		{
			return default(float);
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0xF685AC", Offset = "0xF685AC", VA = "0xF685AC")]
		public void UpdateSegment()
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xF68EC8", Offset = "0xF68EC8", VA = "0xF68EC8")]
		public void UpdateSegmentDuration()
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0xF644C0", Offset = "0xF644C0", VA = "0xF644C0")]
		public void CalculateProgress(float percent, out float velocity, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0xF68374", Offset = "0xF68374", VA = "0xF68374")]
		public Vector3 CalculatePositionSpline(float percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0xF654A4", Offset = "0xF654A4", VA = "0xF654A4")]
		public Vector3 CalculatePositionLinear(float percent)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0xF657F0", Offset = "0xF657F0", VA = "0xF657F0")]
		public float CalculateVelocity(float percent)
		{
			return default(float);
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0xF656FC", Offset = "0xF656FC", VA = "0xF656FC")]
		public Quaternion CalculateRotation(float percent)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0xF64C94", Offset = "0xF64C94", VA = "0xF64C94")]
		public void GetRelativeOffsets(Vector3 source, Vector3 target, out float targetDistance, out float targetHeight, out float targetAngle)
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0xF68E34", Offset = "0xF68E34", VA = "0xF68E34")]
		public static bool ApproximatelyEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0xF695C4", Offset = "0xF695C4", VA = "0xF695C4")]
		public static Vector3 RotatePointAroundPivot(Vector3 point, Vector3 pivot, Vector3 angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0xF696E8", Offset = "0xF696E8", VA = "0xF696E8")]
		private static float EaseLinear(float time, float duration = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0xF696F0", Offset = "0xF696F0", VA = "0xF696F0")]
		private static float EaseIn(float time, float duration = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0xF696FC", Offset = "0xF696FC", VA = "0xF696FC")]
		private static float EaseOut(float time, float duration = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0xF69710", Offset = "0xF69710", VA = "0xF69710")]
		private static float EaseInOut(float time, float duration = 1f)
		{
			return default(float);
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0xF69064", Offset = "0xF69064", VA = "0xF69064")]
		public static Vector3 CatmullRom(Vector3 value1, Vector3 value2, Vector3 value3, Vector3 value4, float amount)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0xF697E0", Offset = "0xF697E0", VA = "0xF697E0")]
		public static void CatmullRom(ref Vector3 value1, ref Vector3 value2, ref Vector3 value3, ref Vector3 value4, float amount, out Vector3 result)
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0xF69754", Offset = "0xF69754", VA = "0xF69754")]
		public static float CalcCatmullRom(float value1, float value2, float value3, float value4, float amount)
		{
			return default(float);
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0xF69880", Offset = "0xF69880", VA = "0xF69880")]
		public static Vector3 Hermite(Vector3 value1, Vector3 tangent1, Vector3 value2, Vector3 tangent2, float amount)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0xF699CC", Offset = "0xF699CC", VA = "0xF699CC")]
		public static void Hermite(ref Vector3 value1, ref Vector3 tangent1, ref Vector3 value2, ref Vector3 tangent2, float amount, out Vector3 result)
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0xF69944", Offset = "0xF69944", VA = "0xF69944")]
		public static float CalcHermite(float value1, float tangent1, float value2, float tangent2, float amount)
		{
			return default(float);
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0xF69A6C", Offset = "0xF69A6C", VA = "0xF69A6C")]
		public PegasusPoi()
		{
		}
	}
	[Token(Token = "0x2000446")]
	public class TriggerBase : MonoBehaviour
	{
		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_triggerAtStart;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool m_triggerOnUpdate;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool m_triggerAtEnd;

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0xF69D1C", Offset = "0xF69D1C", VA = "0xF69D1C", Slot = "4")]
		public virtual void OnStart(PegasusPoi poi)
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0xF69E54", Offset = "0xF69E54", VA = "0xF69E54", Slot = "5")]
		public virtual void OnUpdate(PegasusPoi poi, float progress)
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0xF69FB4", Offset = "0xF69FB4", VA = "0xF69FB4", Slot = "6")]
		public virtual void OnEnd(PegasusPoi poi)
		{
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0xF6A0EC", Offset = "0xF6A0EC", VA = "0xF6A0EC")]
		public TriggerBase()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public class TriggerControlAnimation : TriggerBase
	{
		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animation m_targetAnimation;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PegasusConstants.PoiAnimationTriggerAction m_actionOnStart;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PegasusConstants.PoiAnimationTriggerAction m_actionOnEnd;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int m_startAnimationIdx;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int m_endAnimation;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<AnimationState> m_animations;

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0xF6A100", Offset = "0xF6A100", VA = "0xF6A100")]
		private void Start()
		{
		}

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0xF6A404", Offset = "0xF6A404", VA = "0xF6A404", Slot = "4")]
		public override void OnStart(PegasusPoi poi)
		{
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0xF6A5E8", Offset = "0xF6A5E8", VA = "0xF6A5E8", Slot = "6")]
		public override void OnEnd(PegasusPoi poi)
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0xF6A7CC", Offset = "0xF6A7CC", VA = "0xF6A7CC")]
		public TriggerControlAnimation()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public class TriggerControlPegasus : TriggerBase
	{
		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PegasusConstants.PoiPegasusTriggerAction m_actionOnStart;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PegasusConstants.PoiPegasusTriggerAction m_actionOnEnd;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PegasusManager m_pegasus;

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0xF6A850", Offset = "0xF6A850", VA = "0xF6A850", Slot = "4")]
		public override void OnStart(PegasusPoi poi)
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0xF6ADC0", Offset = "0xF6ADC0", VA = "0xF6ADC0", Slot = "6")]
		public override void OnEnd(PegasusPoi poi)
		{
		}

		[Token(Token = "0x6001FCB")]
		[Address(RVA = "0xF6B330", Offset = "0xF6B330", VA = "0xF6B330")]
		public TriggerControlPegasus()
		{
		}
	}
}
namespace nightowl.HoloShaderPack
{
	[Token(Token = "0x2000449")]
	public class CodeExample1 : MonoBehaviour
	{
		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture Texture;

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x1C8B44C", Offset = "0x1C8B44C", VA = "0x1C8B44C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x1C8B4F4", Offset = "0x1C8B4F4", VA = "0x1C8B4F4")]
		public CodeExample1()
		{
		}
	}
	[Token(Token = "0x200044A")]
	public class CodeExample10 : MonoBehaviour
	{
		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float switchDelay;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float currentTime;

		[Token(Token = "0x6001FCE")]
		[Address(RVA = "0x1C8B4FC", Offset = "0x1C8B4FC", VA = "0x1C8B4FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x1C8B604", Offset = "0x1C8B604", VA = "0x1C8B604")]
		public CodeExample10()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public class CodeExample12 : MonoBehaviour
	{
		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x1C8B614", Offset = "0x1C8B614", VA = "0x1C8B614")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x1C8B838", Offset = "0x1C8B838", VA = "0x1C8B838")]
		public CodeExample12()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class CodeExample13 : MonoBehaviour
	{
		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color TargetColor;

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x1C8B840", Offset = "0x1C8B840", VA = "0x1C8B840")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x1C8B9EC", Offset = "0x1C8B9EC", VA = "0x1C8B9EC")]
		public CodeExample13()
		{
		}
	}
	[Token(Token = "0x200044D")]
	public class CodeExample14 : MonoBehaviour
	{
		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x1C8B9F4", Offset = "0x1C8B9F4", VA = "0x1C8B9F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x1C8BB04", Offset = "0x1C8BB04", VA = "0x1C8BB04")]
		public CodeExample14()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public class CodeExample15 : MonoBehaviour
	{
		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x1C8BB0C", Offset = "0x1C8BB0C", VA = "0x1C8BB0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x1C8BC24", Offset = "0x1C8BC24", VA = "0x1C8BC24")]
		public CodeExample15()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public class CodeExample16 : MonoBehaviour
	{
		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x1C8BC2C", Offset = "0x1C8BC2C", VA = "0x1C8BC2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x1C8BE50", Offset = "0x1C8BE50", VA = "0x1C8BE50")]
		public CodeExample16()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public class CodeExample17 : MonoBehaviour
	{
		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x1C8BE58", Offset = "0x1C8BE58", VA = "0x1C8BE58")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x1C8BF54", Offset = "0x1C8BF54", VA = "0x1C8BF54")]
		public CodeExample17()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class CodeExample18 : MonoBehaviour
	{
		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x1C8BF5C", Offset = "0x1C8BF5C", VA = "0x1C8BF5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x1C8C024", Offset = "0x1C8C024", VA = "0x1C8C024")]
		public CodeExample18()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class CodeExample19 : MonoBehaviour
	{
		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x1C8C02C", Offset = "0x1C8C02C", VA = "0x1C8C02C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x1C8C0D0", Offset = "0x1C8C0D0", VA = "0x1C8C0D0")]
		public CodeExample19()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class CodeExample2 : MonoBehaviour
	{
		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color TargetColor;

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x1C8C0D8", Offset = "0x1C8C0D8", VA = "0x1C8C0D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x1C8C200", Offset = "0x1C8C200", VA = "0x1C8C200")]
		public CodeExample2()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class CodeExample3 : MonoBehaviour
	{
		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TargetStrength;

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x1C8C208", Offset = "0x1C8C208", VA = "0x1C8C208")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x1C8C28C", Offset = "0x1C8C28C", VA = "0x1C8C28C")]
		public CodeExample3()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class CodeExample4 : MonoBehaviour
	{
		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TargetStrength;

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x1C8C294", Offset = "0x1C8C294", VA = "0x1C8C294")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x1C8C4F8", Offset = "0x1C8C4F8", VA = "0x1C8C4F8")]
		public CodeExample4()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class CodeExample5 : MonoBehaviour
	{
		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TargetStrength;

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x1C8C500", Offset = "0x1C8C500", VA = "0x1C8C500")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x1C8C668", Offset = "0x1C8C668", VA = "0x1C8C668")]
		public CodeExample5()
		{
		}
	}
	[Token(Token = "0x2000457")]
	public class CodeExample6 : MonoBehaviour
	{
		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x1C8C670", Offset = "0x1C8C670", VA = "0x1C8C670")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x1C8C894", Offset = "0x1C8C894", VA = "0x1C8C894")]
		public CodeExample6()
		{
		}
	}
	[Token(Token = "0x2000458")]
	public class CodeExample7 : MonoBehaviour
	{
		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color TargetColor;

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x1C8C89C", Offset = "0x1C8C89C", VA = "0x1C8C89C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x1C8C9C4", Offset = "0x1C8C9C4", VA = "0x1C8C9C4")]
		public CodeExample7()
		{
		}
	}
	[Token(Token = "0x2000459")]
	public class CodeExample8 : MonoBehaviour
	{
		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float TargetStrength;

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x1C8C9CC", Offset = "0x1C8C9CC", VA = "0x1C8C9CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x1C8CAC4", Offset = "0x1C8CAC4", VA = "0x1C8CAC4")]
		public CodeExample8()
		{
		}
	}
	[Token(Token = "0x200045A")]
	public class CodeExample9 : MonoBehaviour
	{
		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x1C8CACC", Offset = "0x1C8CACC", VA = "0x1C8CACC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x1C8CC0C", Offset = "0x1C8CC0C", VA = "0x1C8CC0C")]
		public CodeExample9()
		{
		}
	}
	[Token(Token = "0x200045B")]
	public class CodeExampleHelper : MonoBehaviour
	{
		[Token(Token = "0x1700021A")]
		public static float NormalizedTime
		{
			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0x1C8B968", Offset = "0x1C8B968", VA = "0x1C8B968")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x1C8CC14", Offset = "0x1C8CC14", VA = "0x1C8CC14")]
		public CodeExampleHelper()
		{
		}
	}
	[Token(Token = "0x200045C")]
	public class DissolveFlicker : MonoBehaviour
	{
		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material Material;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MinStrength;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MaxStrength;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaxStep;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float TickDelay;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float timer;

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x1C8CC1C", Offset = "0x1C8CC1C", VA = "0x1C8CC1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x1C8CC7C", Offset = "0x1C8CC7C", VA = "0x1C8CC7C")]
		private void UpdateDissolve()
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x1C8CD68", Offset = "0x1C8CD68", VA = "0x1C8CD68")]
		public DissolveFlicker()
		{
		}
	}
	[Token(Token = "0x200045D")]
	public class Scaler : MonoBehaviour
	{
		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MinScale;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxScale;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Speed;

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x1C8D438", Offset = "0x1C8D438", VA = "0x1C8D438")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x1C8D584", Offset = "0x1C8D584", VA = "0x1C8D584")]
		public Scaler()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class HoloShader
	{
		[Token(Token = "0x20006AE")]
		public enum Rim
		{
			[Token(Token = "0x40024E1")]
			Off,
			[Token(Token = "0x40024E2")]
			Rim,
			[Token(Token = "0x40024E3")]
			Inverted
		}

		[Token(Token = "0x20006AF")]
		public enum Scanline
		{
			[Token(Token = "0x40024E5")]
			Off,
			[Token(Token = "0x40024E6")]
			World,
			[Token(Token = "0x40024E7")]
			Local,
			[Token(Token = "0x40024E8")]
			Face
		}

		[Token(Token = "0x20006B0")]
		public enum Noise
		{
			[Token(Token = "0x40024EA")]
			Off,
			[Token(Token = "0x40024EB")]
			On,
			[Token(Token = "0x40024EC")]
			World,
			[Token(Token = "0x40024ED")]
			Local,
			[Token(Token = "0x40024EE")]
			Face
		}

		[Token(Token = "0x20006B1")]
		public enum Distortion
		{
			[Token(Token = "0x40024F0")]
			Off,
			[Token(Token = "0x40024F1")]
			Distirtion,
			[Token(Token = "0x40024F2")]
			Dissolve
		}

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] RIM;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] SCANLINE;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] NOISE;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string[] DISTORTION;

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x1C8C378", Offset = "0x1C8C378", VA = "0x1C8C378")]
		public static void EnableRim(Material material, Rim type)
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x1C8C714", Offset = "0x1C8C714", VA = "0x1C8C714")]
		public static void EnableScanline(Material material, Scanline type)
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x1C8B6B8", Offset = "0x1C8B6B8", VA = "0x1C8B6B8")]
		public static void EnableNoise(Material material, Noise type)
		{
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x1C8BCD0", Offset = "0x1C8BCD0", VA = "0x1C8BCD0")]
		public static void EnableDistortion(Material material, Distortion type)
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x1C8CD8C", Offset = "0x1C8CD8C", VA = "0x1C8CD8C")]
		public HoloShader()
		{
		}
	}
	[Token(Token = "0x200045F")]
	public class Rotate : MonoBehaviour
	{
		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Speed;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 Angle;

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x1C8D354", Offset = "0x1C8D354", VA = "0x1C8D354")]
		private void Update()
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x1C8D3B4", Offset = "0x1C8D3B4", VA = "0x1C8D3B4")]
		public Rotate()
		{
		}
	}
	[Token(Token = "0x2000460")]
	public class ScreenShotTool : MonoBehaviour
	{
		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x1C8D594", Offset = "0x1C8D594", VA = "0x1C8D594")]
		private void Update()
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x1C8D5FC", Offset = "0x1C8D5FC", VA = "0x1C8D5FC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x1C8D600", Offset = "0x1C8D600", VA = "0x1C8D600")]
		public ScreenShotTool()
		{
		}
	}
}
namespace FIMSpace.FSpine
{
	[Token(Token = "0x2000461")]
	public class FSpine_Demo_GroundMovement : MonoBehaviour
	{
		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E3480", Offset = "0x8E3480")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E3480", Offset = "0x8E3480")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E3480", Offset = "0x8E3480")]
		public float RotationYAxis;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E3528", Offset = "0x8E3528")]
		public float FittingSpeed;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RaycastHeightOffset;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RaycastCheckRange;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LookAheadRaycast;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float AheadBlend;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float YOffset;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E3540", Offset = "0x8E3540")]
		public LayerMask GroundLayerMask;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool RelativeLookUp;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E3554", Offset = "0x8E3554")]
		public float RelativeLookUpBias;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E356C", Offset = "0x8E356C")]
		private RaycastHit <LastRaycast>k__BackingField;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Quaternion helperRotation;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected float delta;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected bool fittingEnabled;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E357C", Offset = "0x8E357C")]
		public float BaseSpeed;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float RotateToTargetSpeed;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float SprintingSpeed;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float ActiveSpeed;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float AccelerationSpeed;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float DecelerationSpeed;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float JumpPower;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float gravity;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool MultiplySprintAnimation;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal float YVelocity;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected bool inAir;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected float gravityOffset;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		internal bool MoveForward;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		internal bool Sprint;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal float RotationOffset;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected string lastAnim;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Animator animator;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool animatorHaveAnimationSpeedProp;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected float initialYOffset;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Vector3 holdJumpPosition;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected float freezeJumpYPosition;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool oneAnimation;

		[Token(Token = "0x1700021B")]
		public RaycastHit LastRaycast
		{
			[Token(Token = "0x6002002")]
			[Address(RVA = "0xBF28CC", Offset = "0xBF28CC", VA = "0xBF28CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EBDAC", Offset = "0x8EBDAC")]
			get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x6002003")]
			[Address(RVA = "0xBF28E8", Offset = "0xBF28E8", VA = "0xBF28E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EBDBC", Offset = "0x8EBDBC")]
			protected set
			{
			}
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0xBF2904", Offset = "0xBF2904", VA = "0xBF2904")]
		private Vector3 GetUpVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0xBF2A0C", Offset = "0xBF2A0C", VA = "0xBF2A0C", Slot = "4")]
		protected virtual void FitToGround()
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0xBF3058", Offset = "0xBF3058", VA = "0xBF3058")]
		internal void RotationCalculations()
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0xBF3198", Offset = "0xBF3198", VA = "0xBF3198")]
		internal RaycastHit CastRay()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0xBF3014", Offset = "0xBF3014", VA = "0xBF3014")]
		internal void RefreshLastRaycast()
		{
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0xBF335C", Offset = "0xBF335C", VA = "0xBF335C", Slot = "5")]
		protected virtual void InitMovement()
		{
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0xBF358C", Offset = "0xBF358C", VA = "0xBF358C", Slot = "6")]
		protected virtual void UpdateMovement()
		{
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0xBF35F0", Offset = "0xBF35F0", VA = "0xBF35F0", Slot = "7")]
		protected virtual void HandleInput()
		{
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0xBF36E0", Offset = "0xBF36E0", VA = "0xBF36E0", Slot = "8")]
		protected virtual void HandleGravity()
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0xBF3A28", Offset = "0xBF3A28", VA = "0xBF3A28", Slot = "9")]
		protected virtual void HandleAnimations()
		{
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0xBF3C00", Offset = "0xBF3C00", VA = "0xBF3C00")]
		protected void RefreshHitGroundVars(RaycastHit hit)
		{
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0xBF3D0C", Offset = "0xBF3D0C", VA = "0xBF3D0C", Slot = "10")]
		protected virtual void HandleTransforming()
		{
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0xBF4178", Offset = "0xBF4178", VA = "0xBF4178", Slot = "11")]
		protected virtual void HitGround()
		{
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0xBF41CC", Offset = "0xBF41CC", VA = "0xBF41CC", Slot = "12")]
		public virtual void Jump()
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0xBF421C", Offset = "0xBF421C", VA = "0xBF421C", Slot = "13")]
		protected virtual void CrossfadeTo(string animation, float transitionTime = 0.25f)
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0xBF34D4", Offset = "0xBF34D4", VA = "0xBF34D4")]
		public static bool HasParameter(Animator animator, string paramName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002014")]
		[Address(RVA = "0xBF431C", Offset = "0xBF431C", VA = "0xBF431C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0xBF4328", Offset = "0xBF4328", VA = "0xBF4328")]
		private void Update()
		{
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0xBF4374", Offset = "0xBF4374", VA = "0xBF4374")]
		public FSpine_Demo_GroundMovement()
		{
		}
	}
	[Token(Token = "0x2000462")]
	public class FSpineAnimator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006B2")]
		public class FSpine_Point
		{
			[Token(Token = "0x40024F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 Position;

			[Token(Token = "0x40024F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion Rotation;

			[Token(Token = "0x60027A4")]
			[Address(RVA = "0x117CECC", Offset = "0x117CECC", VA = "0x117CECC")]
			public Vector3 TransformDirection(Vector3 dir)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60027A5")]
			[Address(RVA = "0x117A48C", Offset = "0x117A48C", VA = "0x117A48C")]
			public FSpine_Point()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006B3")]
		public class FSpine_FixingSet
		{
			[Token(Token = "0x40024F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Vector3> Current;

			[Token(Token = "0x40024F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Vector3> Initial;

			[Token(Token = "0x40024F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Vector3> Rounded;

			[Token(Token = "0x40024F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<Vector3> Reversed;

			[Token(Token = "0x40024F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<Vector3> RoundedReversed;

			[Token(Token = "0x40024FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<Vector3> Unified;

			[Token(Token = "0x60027A6")]
			[Address(RVA = "0x117DB8C", Offset = "0x117DB8C", VA = "0x117DB8C")]
			public List<Vector3> SetUnified(List<Vector3> toUnify)
			{
				return null;
			}

			[Token(Token = "0x60027A7")]
			[Address(RVA = "0x117A968", Offset = "0x117A968", VA = "0x117A968")]
			internal void AddToAllNormal(Vector3 v)
			{
			}

			[Token(Token = "0x60027A8")]
			[Address(RVA = "0x117A894", Offset = "0x117A894", VA = "0x117A894")]
			internal FSpine_FixingSet Init()
			{
				return null;
			}

			[Token(Token = "0x60027A9")]
			[Address(RVA = "0x117A88C", Offset = "0x117A88C", VA = "0x117A88C")]
			public FSpine_FixingSet()
			{
			}
		}

		[Token(Token = "0x20006B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD6C0", Offset = "0x8CD6C0")]
		private sealed class <InitTPoseStartOffset>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FSpineAnimator <>4__this;

			[Token(Token = "0x40024FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <counter>5__2;

			[Token(Token = "0x17000317")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027AD")]
				[Address(RVA = "0x117F3C0", Offset = "0x117F3C0", VA = "0x117F3C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000318")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027AF")]
				[Address(RVA = "0x117F430", Offset = "0x117F430", VA = "0x117F430", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027AA")]
			[Address(RVA = "0x117BFD8", Offset = "0x117BFD8", VA = "0x117BFD8")]
			[DebuggerHidden]
			public <InitTPoseStartOffset>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x60027AB")]
			[Address(RVA = "0x117F2D0", Offset = "0x117F2D0", VA = "0x117F2D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027AC")]
			[Address(RVA = "0x117F2D4", Offset = "0x117F2D4", VA = "0x117F2D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027AE")]
			[Address(RVA = "0x117F3C8", Offset = "0x117F3C8", VA = "0x117F3C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD6D0", Offset = "0x8CD6D0")]
		private sealed class <LateFixedUpdate>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002500")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002501")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FSpineAnimator <>4__this;

			[Token(Token = "0x17000319")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027B3")]
				[Address(RVA = "0x117F4E8", Offset = "0x117F4E8", VA = "0x117F4E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027B5")]
				[Address(RVA = "0x117F558", Offset = "0x117F558", VA = "0x117F558", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027B0")]
			[Address(RVA = "0x117CDA0", Offset = "0x117CDA0", VA = "0x117CDA0")]
			[DebuggerHidden]
			public <LateFixedUpdate>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x60027B1")]
			[Address(RVA = "0x117F438", Offset = "0x117F438", VA = "0x117F438", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027B2")]
			[Address(RVA = "0x117F43C", Offset = "0x117F43C", VA = "0x117F43C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027B4")]
			[Address(RVA = "0x117F4F0", Offset = "0x117F4F0", VA = "0x117F4F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E35B4", Offset = "0x8E35B4")]
		public List<Transform> SpineTransforms;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<FSpine_Point> proceduralPoints;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<FSpine_Point> ProceduralReferencePose;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<FSpine_Point> helperProceduralPoints;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<float> initialBoneDistances;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E35EC", Offset = "0x8E35EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E35EC", Offset = "0x8E35EC")]
		public float BlendToOriginal;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3650", Offset = "0x8E3650")]
		public bool LastBoneLeading;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool reversedChangeFlag;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 lookUp;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3688", Offset = "0x8E3688")]
		public bool InversedVerticalRotation;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E36C0", Offset = "0x8E36C0")]
		public bool ConnectWithAnimator;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E36F8", Offset = "0x8E36F8")]
		public bool AnimateLeadingBone;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3730", Offset = "0x8E3730")]
		public bool LeadingAnimateAfterMotion;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3768", Offset = "0x8E3768")]
		public bool PhysicalUpdate;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E37A0", Offset = "0x8E37A0")]
		public bool AnchorToThis;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E37D8", Offset = "0x8E37D8")]
		public Transform AnchorRoot;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3810", Offset = "0x8E3810")]
		public Vector3 CustomAnchorRotationOffset;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3848", Offset = "0x8E3848")]
		public bool QueueToLastUpdate;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3880", Offset = "0x8E3880")]
		public bool PositionsNotAnimated;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<bool> SelectivePosNotAnimated;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E38B8", Offset = "0x8E38B8")]
		public bool RotationsNotAnimated;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<bool> SelectiveRotNotAnimated;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int leadingBoneIndex;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int reverser;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int adjuster;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<FSpine_Point> staticCoordinates;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FSpine_FixingSet spineLookDirectionsSet;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E38F0", Offset = "0x8E38F0")]
		public List<Vector3> lookDirectionsAdditiveCorrection;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3928", Offset = "0x8E3928")]
		public List<Vector3> ManualRotationOffsets;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3960", Offset = "0x8E3960")]
		public List<Vector3> ManualPositionOffsets;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3998", Offset = "0x8E3998")]
		public bool RoundCorrection;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		private bool wasRoundCorrection;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E39D0", Offset = "0x8E39D0")]
		public bool UnifyCorrection;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
		private bool wasUnified;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3A08", Offset = "0x8E3A08")]
		public bool StartAfterTPose;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 previousScale;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform[] anchorHelpers;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform anchorsContainer;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool wasSourceAnimation;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool initialized;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 previousPos;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E3A40", Offset = "0x8E3A40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3A40", Offset = "0x8E3A40")]
		public float PosSmoother;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E3A94", Offset = "0x8E3A94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3A94", Offset = "0x8E3A94")]
		public float RotSmoother;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E3AE8", Offset = "0x8E3AE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3AE8", Offset = "0x8E3AE8")]
		public float AngleLimit;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E3B40", Offset = "0x8E3B40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3B40", Offset = "0x8E3B40")]
		public float LimitSmoother;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E3B94", Offset = "0x8E3B94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3B94", Offset = "0x8E3B94")]
		public float StraightenSpeed;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public bool TurboStraighten;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3BE8", Offset = "0x8E3BE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E3BE8", Offset = "0x8E3BE8")]
		public float GoBackSpeed;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3C3C", Offset = "0x8E3C3C")]
		public Vector3 MainPivotOffset;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[HideInInspector]
		public Transform mainPivotOffsetTransform;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3C84", Offset = "0x8E3C84")]
		public Vector3 SegmentsPivotOffset;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3CBC", Offset = "0x8E3CBC")]
		public float DistancesMultiplier;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Transform rotationRef;

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x11778B0", Offset = "0x11778B0", VA = "0x11778B0")]
		private void Init()
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0x1177950", Offset = "0x1177950", VA = "0x1177950")]
		protected void ComputePredefinedVariables()
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x117B284", Offset = "0x117B284", VA = "0x117B284", Slot = "4")]
		protected virtual void PrepareSpinePoints()
		{
		}

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x117BC3C", Offset = "0x117BC3C", VA = "0x117BC3C", Slot = "5")]
		protected virtual void ConfigureBonesTransforms()
		{
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x117BE38", Offset = "0x117BE38", VA = "0x117BE38")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x117BEA0", Offset = "0x117BEA0", VA = "0x117BEA0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x117BEF4", Offset = "0x117BEF4", VA = "0x117BEF4")]
		protected void Start()
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x117BF64", Offset = "0x117BF64", VA = "0x117BF64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EBDCC", Offset = "0x8EBDCC")]
		private IEnumerator InitTPoseStartOffset()
		{
			return null;
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x117C004", Offset = "0x117C004", VA = "0x117C004")]
		private void UpdateReverseHelpVariables()
		{
		}

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x1178674", Offset = "0x1178674", VA = "0x1178674")]
		private void ReposeSpine()
		{
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x117CD1C", Offset = "0x117CD1C", VA = "0x117CD1C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x117CD2C", Offset = "0x117CD2C", VA = "0x117CD2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EBE30", Offset = "0x8EBE30")]
		private IEnumerator LateFixedUpdate()
		{
			return null;
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x1178840", Offset = "0x1178840", VA = "0x1178840")]
		private void SpineMotion()
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x117C57C", Offset = "0x117C57C", VA = "0x117C57C")]
		private FSpine_Point GetLeadingBoneCoordinates()
		{
			return null;
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x117D068", Offset = "0x117D068", VA = "0x117D068", Slot = "6")]
		protected virtual void CalculateMotion()
		{
		}

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x117D87C", Offset = "0x117D87C", VA = "0x117D87C")]
		private void CalculateSpineBehaviourPosition(int index)
		{
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x117D158", Offset = "0x117D158", VA = "0x117D158")]
		private void CalculateSpineBehaviourRotation(int index)
		{
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x117CDCC", Offset = "0x117CDCC", VA = "0x117CDCC")]
		private void RefreshRefDirsOnReverse()
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x117A534", Offset = "0x117A534", VA = "0x117A534")]
		private void RefreshDistances()
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x117DB0C", Offset = "0x117DB0C", VA = "0x117DB0C")]
		private float SmootherValue(float val)
		{
			return default(float);
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x117CF80", Offset = "0x117CF80", VA = "0x117CF80")]
		protected Vector3 RoundPosDiff(Vector3 pos, int digits = 1)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x117AFC8", Offset = "0x117AFC8", VA = "0x117AFC8")]
		private Vector3 RoundToBiggestValue(Vector3 vec)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x117DCE0", Offset = "0x117DCE0", VA = "0x117DCE0")]
		private void DrawFatRay(Vector3 origin, Vector3 dir)
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x117DF48", Offset = "0x117DF48", VA = "0x117DF48")]
		private void DrawBoneLine(Vector3 origin, Vector3 dir)
		{
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x117AD70", Offset = "0x117AD70", VA = "0x117AD70")]
		public void RefreshSelectivePosNotAnimated()
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x117AE9C", Offset = "0x117AE9C", VA = "0x117AE9C")]
		public void RefreshSelectiveRotNotAnimated()
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x117AA70", Offset = "0x117AA70", VA = "0x117AA70")]
		public void RefreshManualPosOffs()
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x117ABF0", Offset = "0x117ABF0", VA = "0x117ABF0")]
		public void RefreshManualRotOffs()
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x117E1B0", Offset = "0x117E1B0", VA = "0x117E1B0")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x117E4A8", Offset = "0x117E4A8", VA = "0x117E4A8")]
		private void RestoreBasePivotChildren()
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x117E55C", Offset = "0x117E55C", VA = "0x117E55C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x117C090", Offset = "0x117C090", VA = "0x117C090")]
		private void RefreshDifferenceReference()
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x117E9C8", Offset = "0x117E9C8", VA = "0x117E9C8")]
		public void TryAutoCorrect([Optional] Transform head)
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x117F120", Offset = "0x117F120", VA = "0x117F120")]
		public void DevLog()
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x117F18C", Offset = "0x117F18C", VA = "0x117F18C")]
		public FSpineAnimator()
		{
		}
	}
	[Token(Token = "0x2000463")]
	public class FSpine_AnimatorPerchance : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006B6")]
		public class FSpine_Point
		{
			[Token(Token = "0x4002502")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 Position;

			[Token(Token = "0x4002503")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion Rotation;

			[Token(Token = "0x60027B6")]
			[Address(RVA = "0xBF2770", Offset = "0xBF2770", VA = "0xBF2770")]
			public Vector3 TransformDirection(Vector3 dir)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60027B7")]
			[Address(RVA = "0xBF2824", Offset = "0xBF2824", VA = "0xBF2824")]
			public FSpine_Point()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006B7")]
		public class FSpine_FixingSet
		{
			[Token(Token = "0x4002504")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Vector3> Current;

			[Token(Token = "0x4002505")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Vector3> Initial;

			[Token(Token = "0x4002506")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<Vector3> Rounded;

			[Token(Token = "0x4002507")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<Vector3> Reversed;

			[Token(Token = "0x4002508")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<Vector3> RoundedReversed;

			[Token(Token = "0x60027B8")]
			[Address(RVA = "0xBF258C", Offset = "0xBF258C", VA = "0xBF258C")]
			internal void AddToAllNormal(Vector3 v)
			{
			}

			[Token(Token = "0x60027B9")]
			[Address(RVA = "0xBF2694", Offset = "0xBF2694", VA = "0xBF2694")]
			internal FSpine_FixingSet Init()
			{
				return null;
			}

			[Token(Token = "0x60027BA")]
			[Address(RVA = "0xBF2768", Offset = "0xBF2768", VA = "0xBF2768")]
			public FSpine_FixingSet()
			{
			}
		}

		[Token(Token = "0x20006B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD6E0", Offset = "0x8CD6E0")]
		private sealed class <InitTPoseStartOffset>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002509")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400250A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400250B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FSpine_AnimatorPerchance <>4__this;

			[Token(Token = "0x400250C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <counter>5__2;

			[Token(Token = "0x1700031B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027BE")]
				[Address(RVA = "0xBF237C", Offset = "0xBF237C", VA = "0xBF237C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027C0")]
				[Address(RVA = "0xBF23EC", Offset = "0xBF23EC", VA = "0xBF23EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027BB")]
			[Address(RVA = "0xBF2270", Offset = "0xBF2270", VA = "0xBF2270")]
			[DebuggerHidden]
			public <InitTPoseStartOffset>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x60027BC")]
			[Address(RVA = "0xBF229C", Offset = "0xBF229C", VA = "0xBF229C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027BD")]
			[Address(RVA = "0xBF22A0", Offset = "0xBF22A0", VA = "0xBF22A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027BF")]
			[Address(RVA = "0xBF2384", Offset = "0xBF2384", VA = "0xBF2384", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD6F0", Offset = "0x8CD6F0")]
		private sealed class <ReactivateMe>d__77 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400250D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400250E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400250F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FSpine_AnimatorPerchance <>4__this;

			[Token(Token = "0x1700031D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027C4")]
				[Address(RVA = "0xBF2514", Offset = "0xBF2514", VA = "0xBF2514", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027C6")]
				[Address(RVA = "0xBF2584", Offset = "0xBF2584", VA = "0xBF2584", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027C1")]
			[Address(RVA = "0xBF23F4", Offset = "0xBF23F4", VA = "0xBF23F4")]
			[DebuggerHidden]
			public <ReactivateMe>d__77(int <>1__state)
			{
			}

			[Token(Token = "0x60027C2")]
			[Address(RVA = "0xBF2420", Offset = "0xBF2420", VA = "0xBF2420", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027C3")]
			[Address(RVA = "0xBF2424", Offset = "0xBF2424", VA = "0xBF2424", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027C5")]
			[Address(RVA = "0xBF251C", Offset = "0xBF251C", VA = "0xBF251C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3CF4", Offset = "0x8E3CF4")]
		public List<Transform> SpineTransforms;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<FSpine_Point> proceduralPoints;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<FSpine_Point> helperProceduralPoints;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<float> initialBoneDistances;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3D2C", Offset = "0x8E3D2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E3D2C", Offset = "0x8E3D2C")]
		public float BlendToOriginal;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3D90", Offset = "0x8E3D90")]
		public bool ReversedLeadBone;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool reversedChangeFlag;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3DC8", Offset = "0x8E3DC8")]
		public bool RolledBones;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lookUp;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool rolledChangeFlag;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3E00", Offset = "0x8E3E00")]
		public bool ConnectWithAnimator;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3E38", Offset = "0x8E3E38")]
		public bool AnchoredSpine;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3E70", Offset = "0x8E3E70")]
		public Transform AnchorRoot;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3EA8", Offset = "0x8E3EA8")]
		public bool QueueToLastUpdate;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3EE0", Offset = "0x8E3EE0")]
		public bool PositionsNotAnimated;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<bool> SelectivePosNotAnimated;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3F18", Offset = "0x8E3F18")]
		public bool RotationsNotAnimated;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<bool> SelectiveRotNotAnimated;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int leadingBoneIndex;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int endingBoneIndex;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int reverser;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<FSpine_Point> staticCoordinates;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<FSpine_Point> staticCoordinatesBaseRef;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<FSpine_Point> referencePoses;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FSpine_FixingSet spineLookDirectionsSet;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3F50", Offset = "0x8E3F50")]
		public List<Vector3> ManualRotationOffsets;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3F88", Offset = "0x8E3F88")]
		public List<Vector3> ManualPositionOffsets;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3FC0", Offset = "0x8E3FC0")]
		public bool RoundCorrection;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool wasRoundCorrection;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E3FF8", Offset = "0x8E3FF8")]
		public bool StartAfterTPose;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4030", Offset = "0x8E4030")]
		public bool RefinedCorrection;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Quaternion initialRotation;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 previousScale;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform[] anchorHelpers;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform anchorsContainer;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool wasSourceAnimation;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<float> StaticYOffsets;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool initialized;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Vector3 previousPos;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4068", Offset = "0x8E4068")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4068", Offset = "0x8E4068")]
		public float PosSmoother;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E40BC", Offset = "0x8E40BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E40BC", Offset = "0x8E40BC")]
		public float RotSmoother;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4110", Offset = "0x8E4110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4110", Offset = "0x8E4110")]
		public float AngleLimit;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4168", Offset = "0x8E4168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4168", Offset = "0x8E4168")]
		public float LimitSmoother;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E41BC", Offset = "0x8E41BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E41BC", Offset = "0x8E41BC")]
		public float StraightenSpeed;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public bool TurboStraighten;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4210", Offset = "0x8E4210")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4210", Offset = "0x8E4210")]
		public float GoBackSpeed;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4264", Offset = "0x8E4264")]
		public Vector3 PivotOffset;

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x117F560", Offset = "0x117F560", VA = "0x117F560")]
		private void Init()
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x117F600", Offset = "0x117F600", VA = "0x117F600")]
		protected void ComputePredefinedVariables()
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x118438C", Offset = "0x118438C", VA = "0x118438C", Slot = "4")]
		protected virtual void PrepareSpinePoints()
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x1184C54", Offset = "0x1184C54", VA = "0x1184C54", Slot = "5")]
		protected virtual void ConfigureBonesTransforms()
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x1184E50", Offset = "0x1184E50", VA = "0x1184E50")]
		protected void Start()
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x1184EC0", Offset = "0x1184EC0", VA = "0x1184EC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EBE94", Offset = "0x8EBE94")]
		private IEnumerator InitTPoseStartOffset()
		{
			return null;
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0x1184F34", Offset = "0x1184F34", VA = "0x1184F34")]
		private void UpdateReverseHelpVariables()
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x1184FE8", Offset = "0x1184FE8", VA = "0x1184FE8")]
		private void ReposeSpineAccord()
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x1183134", Offset = "0x1183134", VA = "0x1183134")]
		private void ReposeSpine()
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0x11804B4", Offset = "0x11804B4", VA = "0x11804B4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x1185250", Offset = "0x1185250", VA = "0x1185250", Slot = "6")]
		protected virtual void CalculateMotion()
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x1185998", Offset = "0x1185998", VA = "0x1185998")]
		private void CalculateSpineBehaviourPosition(int index)
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x1185340", Offset = "0x1185340", VA = "0x1185340")]
		private void CalculateSpineBehaviourRotation(int index)
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x1185C84", Offset = "0x1185C84", VA = "0x1185C84", Slot = "7")]
		protected virtual Quaternion CalculateTargetRotation([Optional] FSpine_Point otherSpinePoint, [Optional] FSpine_Point currentSpinePoint, int index = 0)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x1185030", Offset = "0x1185030", VA = "0x1185030")]
		private void RefreshRefDirsOnReverse()
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x1183820", Offset = "0x1183820", VA = "0x1183820")]
		private void RefreshDistances()
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x1185C04", Offset = "0x1185C04", VA = "0x1185C04")]
		private float SmootherValue(float val)
		{
			return default(float);
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x1185168", Offset = "0x1185168", VA = "0x1185168")]
		protected Vector3 RoundPosDiff(Vector3 pos, int digits = 1)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x11840D0", Offset = "0x11840D0", VA = "0x11840D0")]
		private Vector3 RoundToBiggestValue(Vector3 vec)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x1185E78", Offset = "0x1185E78", VA = "0x1185E78")]
		private void DrawFatRay(Vector3 origin, Vector3 dir)
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x11860E0", Offset = "0x11860E0", VA = "0x11860E0")]
		private void DrawFatLine(Vector3 origin, Vector3 dir)
		{
		}

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x1183E78", Offset = "0x1183E78", VA = "0x1183E78")]
		public void RefreshSelectivePosNotAnimated()
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x1183FA4", Offset = "0x1183FA4", VA = "0x1183FA4")]
		public void RefreshSelectiveRotNotAnimated()
		{
		}

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x1183B78", Offset = "0x1183B78", VA = "0x1183B78")]
		public void RefreshManualPosOffs()
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0x1183CF8", Offset = "0x1183CF8", VA = "0x1183CF8")]
		public void RefreshManualRotOffs()
		{
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x1186348", Offset = "0x1186348", VA = "0x1186348")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x1186528", Offset = "0x1186528", VA = "0x1186528")]
		public void TryAutoCorrect([Optional] Transform head)
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x1186B64", Offset = "0x1186B64", VA = "0x1186B64")]
		public void DevLog()
		{
		}

		[Token(Token = "0x6002056")]
		[Address(RVA = "0x1186B68", Offset = "0x1186B68", VA = "0x1186B68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EBEF8", Offset = "0x8EBEF8")]
		public IEnumerator ReactivateMe()
		{
			return null;
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x1186BDC", Offset = "0x1186BDC", VA = "0x1186BDC")]
		public FSpine_AnimatorPerchance()
		{
		}
	}
	[Token(Token = "0x2000464")]
	public class FSpine_DrawSkeleton : MonoBehaviour
	{
		[Token(Token = "0x6002058")]
		[Address(RVA = "0xBF445C", Offset = "0xBF445C", VA = "0xBF445C")]
		public FSpine_DrawSkeleton()
		{
		}
	}
	[Token(Token = "0x2000465")]
	public class FSpine_Reference : MonoBehaviour
	{
		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FSpineAnimator SpineReference;

		[Token(Token = "0x6002059")]
		[Address(RVA = "0xBF4464", Offset = "0xBF4464", VA = "0xBF4464")]
		public FSpine_Reference()
		{
		}
	}
}
namespace FIMSpace.FLook
{
	[Token(Token = "0x2000466")]
	public class FLookAnimator_Demo_TriggeredMomentTarget : MonoBehaviour
	{
		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeOfLooking;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 offset;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject generatedFollow;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer rend;

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x11774D8", Offset = "0x11774D8", VA = "0x11774D8")]
		private void Start()
		{
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0x1177530", Offset = "0x1177530", VA = "0x1177530")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600205C")]
		[Address(RVA = "0x1177694", Offset = "0x1177694", VA = "0x1177694")]
		private void Update()
		{
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x1177830", Offset = "0x1177830", VA = "0x1177830")]
		public FLookAnimator_Demo_TriggeredMomentTarget()
		{
		}
	}
	[Token(Token = "0x2000467")]
	public class FLookAnimator_DemoUI : MonoBehaviour
	{
		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle headSpine;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Slider rotationSpeed;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Slider animationBlend;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Toggle rotAsOffsets;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Toggle anchor;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Slider compensation;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E429C", Offset = "0x8E429C")]
		public FLookAnimator headLook;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FLookAnimator spineLook;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool switchingComponents;

		[Token(Token = "0x600205E")]
		[Address(RVA = "0x117711C", Offset = "0x117711C", VA = "0x117711C")]
		private void Update()
		{
		}

		[Token(Token = "0x600205F")]
		[Address(RVA = "0x1177468", Offset = "0x1177468", VA = "0x1177468")]
		private void SwitchingFinished()
		{
		}

		[Token(Token = "0x6002060")]
		[Address(RVA = "0x11774D0", Offset = "0x11774D0", VA = "0x11774D0")]
		public FLookAnimator_DemoUI()
		{
		}
	}
	[Token(Token = "0x2000468")]
	public class FLookAnimator : MonoBehaviour
	{
		[Token(Token = "0x20006BA")]
		public enum EFAxisFixOrder
		{
			[Token(Token = "0x4002511")]
			Parental,
			[Token(Token = "0x4002512")]
			FromBased,
			[Token(Token = "0x4002513")]
			FullManual,
			[Token(Token = "0x4002514")]
			ZYX
		}

		[Token(Token = "0x20006BB")]
		private enum EFHeadLookState
		{
			[Token(Token = "0x4002516")]
			Null,
			[Token(Token = "0x4002517")]
			Following,
			[Token(Token = "0x4002518")]
			OutOfMaxRotation,
			[Token(Token = "0x4002519")]
			ClampedAngle,
			[Token(Token = "0x400251A")]
			OutOfMaxDistance
		}

		[Token(Token = "0x20006BC")]
		private class CustomBackBone
		{
			[Token(Token = "0x400251B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x400251C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int index;

			[Token(Token = "0x60027C7")]
			[Address(RVA = "0x1176C80", Offset = "0x1176C80", VA = "0x1176C80")]
			public CustomBackBone(Transform t, int i)
			{
			}
		}

		[Token(Token = "0x20006BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD700", Offset = "0x8CD700")]
		private sealed class <SwitchLookingTransition>d__118 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400251D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400251E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400251F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FLookAnimator <>4__this;

			[Token(Token = "0x4002520")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float transitionTime;

			[Token(Token = "0x4002521")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool enableAnimation;

			[Token(Token = "0x4002522")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action callback;

			[Token(Token = "0x4002523")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <time>5__2;

			[Token(Token = "0x4002524")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <startBlend>5__3;

			[Token(Token = "0x1700031F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027CB")]
				[Address(RVA = "0x11770A4", Offset = "0x11770A4", VA = "0x11770A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000320")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027CD")]
				[Address(RVA = "0x1177114", Offset = "0x1177114", VA = "0x1177114", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027C8")]
			[Address(RVA = "0x11768D8", Offset = "0x11768D8", VA = "0x11768D8")]
			[DebuggerHidden]
			public <SwitchLookingTransition>d__118(int <>1__state)
			{
			}

			[Token(Token = "0x60027C9")]
			[Address(RVA = "0x1176F60", Offset = "0x1176F60", VA = "0x1176F60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027CA")]
			[Address(RVA = "0x1176F64", Offset = "0x1176F64", VA = "0x1176F64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027CC")]
			[Address(RVA = "0x11770AC", Offset = "0x11770AC", VA = "0x11770AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E42B0", Offset = "0x8E42B0")]
		public Transform ObjectToFollow;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform preObjectToFollow;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E42E8", Offset = "0x8E42E8")]
		public Transform LeadBone;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4320", Offset = "0x8E4320")]
		public Transform BaseTransform;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4358", Offset = "0x8E4358")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4358", Offset = "0x8E4358")]
		public float RotationSpeed;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E43B0", Offset = "0x8E43B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E43B0", Offset = "0x8E43B0")]
		public float UltraSmoother;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4404", Offset = "0x8E4404")]
		public bool Prevent180Error;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int BackBonesCount;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public Transform[] BackBonesTransforms;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<CustomBackBone> customBackBones;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E444C", Offset = "0x8E444C")]
		public bool StartAfterTPose;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int helpTPose;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4484", Offset = "0x8E4484")]
		public bool CurveSpread;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E44BC", Offset = "0x8E44BC")]
		public AnimationCurve BackBonesFalloff;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E44F4", Offset = "0x8E44F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E44F4", Offset = "0x8E44F4")]
		public float FaloffValue;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4548", Offset = "0x8E4548")]
		public float MaximumDistance;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E4580", Offset = "0x8E4580")]
		public Vector2 XRotationLimits;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E45B8", Offset = "0x8E45B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E45B8", Offset = "0x8E45B8")]
		public float XElasticRange;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector2 YRotationLimits;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4610", Offset = "0x8E4610")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4610", Offset = "0x8E4610")]
		public float YElasticRange;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E4668", Offset = "0x8E4668")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4668", Offset = "0x8E4668")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4668", Offset = "0x8E4668")]
		public float MaxRotationDiffrence;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E46F4", Offset = "0x8E46F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E46F4", Offset = "0x8E46F4")]
		public float DeltaAccelerationRange;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E474C", Offset = "0x8E474C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E474C", Offset = "0x8E474C")]
		public float ChangeTargetSpeed;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 LookDirection;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 HeadUpDirection;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E47A4", Offset = "0x8E47A4")]
		public Vector3 ManualFromAxis;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Vector3 ManualToAxis;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public Vector3 FromAuto;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Vector3 OffsetAuto;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public Vector3 ReferenceLookForward;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Vector3 ReferenceUp;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public Vector3 DynamicReferenceUp;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E47DC", Offset = "0x8E47DC")]
		public EFAxisFixOrder FixingPreset;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4814", Offset = "0x8E4814")]
		public Vector3 RotationOffset;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E484C", Offset = "0x8E484C")]
		public Vector3 BackBonesAddOffset;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4884", Offset = "0x8E4884")]
		public Vector3 RotCorrectionMultiplier;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E48BC", Offset = "0x8E48BC")]
		public bool DebugRays;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E48F4", Offset = "0x8E48F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E48F4", Offset = "0x8E48F4")]
		public float BlendToOriginal;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4948", Offset = "0x8E4948")]
		public Vector3 LookReferenceOffset;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4980", Offset = "0x8E4980")]
		public bool AnchorReferencePoint;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E49B8", Offset = "0x8E49B8")]
		public bool RefreshAnchor;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E49F0", Offset = "0x8E49F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E49F0", Offset = "0x8E49F0")]
		public float LeadBoneWeight;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4A44", Offset = "0x8E4A44")]
		public bool AnimateWithSource;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4A7C", Offset = "0x8E4A7C")]
		public bool MonitorAnimator;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E4AB4", Offset = "0x8E4AB4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E4AB4", Offset = "0x8E4AB4")]
		public List<Transform> CompensationBones;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4B34", Offset = "0x8E4B34")]
		public float CompensationWeight;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public bool CompensatePositions;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15D")]
		public bool CompensatePositionsNotAnimated;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4B4C", Offset = "0x8E4B4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4B4C", Offset = "0x8E4B4C")]
		public float WeightsMultiplier;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public int bonesNotAnimated;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private EFHeadLookState lookState;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Transform lookStartReferenceTransform;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float localAnimationWeight;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float deltaLerpAccelerator;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector2 lastDeltaVector;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float holdGoBack;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float changeTargetSmootherWeight;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private float changeTargetSmootherBones;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private Quaternion headLerpRot;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Quaternion headLerpRotUltra;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Quaternion[] lerpRotations;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Quaternion[] lerpRotationsUltra;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4BA0", Offset = "0x8E4BA0")]
		private float[] <RotationWeights>k__BackingField;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4BB0", Offset = "0x8E4BB0")]
		private Vector3 <LastLookStartPosition>k__BackingField;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4BC0", Offset = "0x8E4BC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4BC0", Offset = "0x8E4BC0")]
		public float BigAngleSmoother;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Quaternion[] defautLocalRots;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private Transform momentLookTransform;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private bool wasMomentLookTransform;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Quaternion[] compensationRotations;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private Vector3[] compensationPositions;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private bool targetExists;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
		private bool smoothingOutOfMaxRange;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private Quaternion targetLookRotation;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Quaternion[] newBonesRotations;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Quaternion[] poseReferenceRotations;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Quaternion[] lerpedReferenceRotations;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private Quaternion mainReferenceRotation;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private Quaternion lerpedMainReferenceRotation;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Quaternion[] staticRotations;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private Transform anchorHelper;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private Animator animator;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private int lastClipHash;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private bool initialized;

		[Token(Token = "0x1700021C")]
		public float[] RotationWeights
		{
			[Token(Token = "0x6002061")]
			[Address(RVA = "0x116E7F4", Offset = "0x116E7F4", VA = "0x116E7F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EBF5C", Offset = "0x8EBF5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002062")]
			[Address(RVA = "0x116E7FC", Offset = "0x116E7FC", VA = "0x116E7FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EBF6C", Offset = "0x8EBF6C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		public Vector3 LastLookStartPosition
		{
			[Token(Token = "0x6002063")]
			[Address(RVA = "0x116E804", Offset = "0x116E804", VA = "0x116E804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EBF7C", Offset = "0x8EBF7C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002064")]
			[Address(RVA = "0x116E814", Offset = "0x116E814", VA = "0x116E814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EBF8C", Offset = "0x8EBF8C")]
			private set
			{
			}
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0x116E824", Offset = "0x116E824", VA = "0x116E824")]
		private void Reset()
		{
		}

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x116E988", Offset = "0x116E988", VA = "0x116E988")]
		private void Init()
		{
		}

		[Token(Token = "0x6002067")]
		[Address(RVA = "0x116FF44", Offset = "0x116FF44", VA = "0x116FF44")]
		private void Start()
		{
		}

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x116FA28", Offset = "0x116FA28", VA = "0x116FA28")]
		private void ComputeBonesRotationsFixVariables()
		{
		}

		[Token(Token = "0x6002069")]
		[Address(RVA = "0x116FF54", Offset = "0x116FF54", VA = "0x116FF54")]
		private void Update()
		{
		}

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x1170154", Offset = "0x1170154", VA = "0x1170154", Slot = "4")]
		public virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600206B")]
		[Address(RVA = "0x1170EF0", Offset = "0x1170EF0", VA = "0x1170EF0")]
		private void BasicCalculations()
		{
		}

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x117415C", Offset = "0x117415C", VA = "0x117415C")]
		private void ChangeBonesRotations()
		{
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0x1174610", Offset = "0x1174610", VA = "0x1174610")]
		private Vector3? GetTargetPosition()
		{
			return null;
		}

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x117478C", Offset = "0x117478C", VA = "0x117478C")]
		private Vector3 CalculateTargetLookRotation(Vector3 lookPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x11715E4", Offset = "0x11715E4", VA = "0x11715E4")]
		private void CalculateLookAnimation()
		{
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x1175DE4", Offset = "0x1175DE4", VA = "0x1175DE4")]
		private Vector3 WrapVector(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x1175238", Offset = "0x1175238", VA = "0x1175238")]
		private Quaternion LookRotationParental(Vector3 startLookPosition, Vector3 targetPosition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x1174ACC", Offset = "0x1174ACC", VA = "0x1174ACC")]
		private Vector2 CalculateLimitationAndStuff(Vector3 angles)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0x1175DB0", Offset = "0x1175DB0", VA = "0x1175DB0")]
		public float AnglePositive(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x117602C", Offset = "0x117602C", VA = "0x117602C")]
		public void SwitchLooking([Optional] bool? enableLooking, float transitionTime = 0.2f, [Optional] Action callback)
		{
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x11764D4", Offset = "0x11764D4", VA = "0x11764D4")]
		public void SetLookTarget(Transform transform)
		{
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x11764E0", Offset = "0x11764E0", VA = "0x11764E0")]
		public GameObject SetMomentLookTarget([Optional] Transform parent, [Optional] Vector3? position, [Optional][MetadataOffset(Offset = "0x471FA4")] float? destroyTimer)
		{
			return null;
		}

		[Token(Token = "0x6002077")]
		[Address(RVA = "0x1176808", Offset = "0x1176808", VA = "0x1176808")]
		public void ForceDestroyMomentTarget()
		{
		}

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x1171598", Offset = "0x1171598", VA = "0x1171598")]
		public void SmoothChangeTarget(float value, float bonesSmoother = 0.8f, bool overrideIfSlower = false)
		{
		}

		[Token(Token = "0x6002079")]
		[Address(RVA = "0x11707F0", Offset = "0x11707F0", VA = "0x11707F0")]
		public void RememberCurrentBonesRotations(bool resetLerpRotations = false)
		{
		}

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x1175A08", Offset = "0x1175A08", VA = "0x1175A08")]
		private Vector3 ConvertFlippedAxes(Vector3 rotations)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600207B")]
		[Address(RVA = "0x1175E64", Offset = "0x1175E64", VA = "0x1175E64")]
		public static float AngleAroundAxis(Vector3 firstDirection, Vector3 secondDirection, Vector3 axis)
		{
			return default(float);
		}

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x116F96C", Offset = "0x116F96C", VA = "0x116F96C")]
		private Transform GetParentBone(int index)
		{
			return null;
		}

		[Token(Token = "0x600207D")]
		[Address(RVA = "0x116F46C", Offset = "0x116F46C", VA = "0x116F46C")]
		private void GetAdditionalBones(bool resetRotation = false)
		{
		}

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x1170AEC", Offset = "0x1170AEC", VA = "0x1170AEC")]
		private void ResetBonesLerps(bool onlyIfNull = false)
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0x116EFC4", Offset = "0x116EFC4", VA = "0x116EFC4")]
		private void CalculateBonesRotationsWeights()
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x1176400", Offset = "0x1176400", VA = "0x1176400")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EBF9C", Offset = "0x8EBF9C")]
		private IEnumerator SwitchLookingTransition(float transitionTime, bool enableAnimation, [Optional] Action callback)
		{
			return null;
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x1176904", Offset = "0x1176904", VA = "0x1176904")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x11769B0", Offset = "0x11769B0", VA = "0x11769B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002083")]
		[Address(RVA = "0x1176A8C", Offset = "0x1176A8C", VA = "0x1176A8C")]
		public void UpdateForCustomInspector()
		{
		}

		[Token(Token = "0x6002084")]
		[Address(RVA = "0x1176AB4", Offset = "0x1176AB4", VA = "0x1176AB4")]
		public void AddCustomBackbone(Transform t, int index)
		{
		}

		[Token(Token = "0x6002085")]
		[Address(RVA = "0x116E828", Offset = "0x116E828", VA = "0x116E828")]
		public void FindBaseTransform()
		{
		}

		[Token(Token = "0x6002086")]
		[Address(RVA = "0x1175C98", Offset = "0x1175C98", VA = "0x1175C98")]
		private Quaternion LinearInterpolateRotation(Quaternion start, Quaternion end, float value)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002087")]
		[Address(RVA = "0x1176CBC", Offset = "0x1176CBC", VA = "0x1176CBC")]
		public FLookAnimator()
		{
		}
	}
}
namespace FIMSpace.FTail
{
	[Token(Token = "0x2000469")]
	public class FLookAnimator_Demo_GroundMovement : MonoBehaviour
	{
		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E4C1C", Offset = "0x8E4C1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E4C1C", Offset = "0x8E4C1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E4C1C", Offset = "0x8E4C1C")]
		public float RotationYAxis;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4CC4", Offset = "0x8E4CC4")]
		public float FittingSpeed;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RaycastHeightOffset;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RaycastCheckRange;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float LookAheadRaycast;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float AheadBlend;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float YOffset;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E4CDC", Offset = "0x8E4CDC")]
		public LayerMask GroundLayerMask;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool RelativeLookUp;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4CF0", Offset = "0x8E4CF0")]
		public float RelativeLookUpBias;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4D08", Offset = "0x8E4D08")]
		private RaycastHit <LastRaycast>k__BackingField;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Quaternion helperRotation;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		protected float delta;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected bool fittingEnabled;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E4D18", Offset = "0x8E4D18")]
		public float BaseSpeed;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float RotateToTargetSpeed;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float SprintingSpeed;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float ActiveSpeed;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float AccelerationSpeed;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float DecelerationSpeed;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float JumpPower;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float gravity;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool MultiplySprintAnimation;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal float YVelocity;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected bool inAir;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected float gravityOffset;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		internal bool MoveForward;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		internal bool Sprint;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal float RotationOffset;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected string lastAnim;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected Animator animator;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected bool animatorHaveAnimationSpeedProp;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		protected float initialYOffset;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Vector3 holdJumpPosition;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected float freezeJumpYPosition;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool oneAnimation;

		[Token(Token = "0x1700021E")]
		public RaycastHit LastRaycast
		{
			[Token(Token = "0x6002088")]
			[Address(RVA = "0xBF446C", Offset = "0xBF446C", VA = "0xBF446C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC000", Offset = "0x8EC000")]
			get
			{
				return default(RaycastHit);
			}
			[Token(Token = "0x6002089")]
			[Address(RVA = "0xBF4488", Offset = "0xBF4488", VA = "0xBF4488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC010", Offset = "0x8EC010")]
			protected set
			{
			}
		}

		[Token(Token = "0x600208A")]
		[Address(RVA = "0xBF44A4", Offset = "0xBF44A4", VA = "0xBF44A4")]
		private Vector3 GetUpVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0xBF45AC", Offset = "0xBF45AC", VA = "0xBF45AC", Slot = "4")]
		protected virtual void FitToGround()
		{
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0xBF4BF8", Offset = "0xBF4BF8", VA = "0xBF4BF8")]
		internal void RotationCalculations()
		{
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0xBF4D38", Offset = "0xBF4D38", VA = "0xBF4D38")]
		internal RaycastHit CastRay()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0xBF4BB4", Offset = "0xBF4BB4", VA = "0xBF4BB4")]
		internal void RefreshLastRaycast()
		{
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0xBF4EFC", Offset = "0xBF4EFC", VA = "0xBF4EFC", Slot = "5")]
		protected virtual void InitMovement()
		{
		}

		[Token(Token = "0x6002090")]
		[Address(RVA = "0xBF512C", Offset = "0xBF512C", VA = "0xBF512C", Slot = "6")]
		protected virtual void UpdateMovement()
		{
		}

		[Token(Token = "0x6002091")]
		[Address(RVA = "0xBF5190", Offset = "0xBF5190", VA = "0xBF5190", Slot = "7")]
		protected virtual void HandleInput()
		{
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0xBF5280", Offset = "0xBF5280", VA = "0xBF5280", Slot = "8")]
		protected virtual void HandleGravity()
		{
		}

		[Token(Token = "0x6002093")]
		[Address(RVA = "0xBF55C8", Offset = "0xBF55C8", VA = "0xBF55C8", Slot = "9")]
		protected virtual void HandleAnimations()
		{
		}

		[Token(Token = "0x6002094")]
		[Address(RVA = "0xBF57A0", Offset = "0xBF57A0", VA = "0xBF57A0")]
		protected void RefreshHitGroundVars(RaycastHit hit)
		{
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0xBF58AC", Offset = "0xBF58AC", VA = "0xBF58AC", Slot = "10")]
		protected virtual void HandleTransforming()
		{
		}

		[Token(Token = "0x6002096")]
		[Address(RVA = "0xBF5D18", Offset = "0xBF5D18", VA = "0xBF5D18", Slot = "11")]
		protected virtual void HitGround()
		{
		}

		[Token(Token = "0x6002097")]
		[Address(RVA = "0xBF5D6C", Offset = "0xBF5D6C", VA = "0xBF5D6C", Slot = "12")]
		public virtual void Jump()
		{
		}

		[Token(Token = "0x6002098")]
		[Address(RVA = "0xBF5DBC", Offset = "0xBF5DBC", VA = "0xBF5DBC", Slot = "13")]
		protected virtual void CrossfadeTo(string animation, float transitionTime = 0.25f)
		{
		}

		[Token(Token = "0x6002099")]
		[Address(RVA = "0xBF5074", Offset = "0xBF5074", VA = "0xBF5074")]
		public static bool HasParameter(Animator animator, string paramName)
		{
			return default(bool);
		}

		[Token(Token = "0x600209A")]
		[Address(RVA = "0xBF5EF0", Offset = "0xBF5EF0", VA = "0xBF5EF0", Slot = "14")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0xBF5EFC", Offset = "0xBF5EFC", VA = "0xBF5EFC", Slot = "15")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0xBF5F48", Offset = "0xBF5F48", VA = "0xBF5F48")]
		public FLookAnimator_Demo_GroundMovement()
		{
		}
	}
	[Token(Token = "0x200046A")]
	public abstract class FTail_AnimatorBase : MonoBehaviour
	{
		[Token(Token = "0x20006BE")]
		protected class FTail_Point
		{
			[Token(Token = "0x4002525")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 Position;

			[Token(Token = "0x4002526")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Quaternion Rotation;

			[Token(Token = "0x60027CE")]
			[Address(RVA = "0xBF8634", Offset = "0xBF8634", VA = "0xBF8634")]
			public Vector3 TransformDirection(Vector3 dir)
			{
				return default(Vector3);
			}

			[Token(Token = "0x60027CF")]
			[Address(RVA = "0xBF7F50", Offset = "0xBF7F50", VA = "0xBF7F50")]
			public FTail_Point()
			{
			}
		}

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E4D50", Offset = "0x8E4D50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E4D50", Offset = "0x8E4D50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E4D50", Offset = "0x8E4D50")]
		public List<Transform> TailTransforms;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected List<FTail_Point> proceduralPoints;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E4DE4", Offset = "0x8E4DE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4DE4", Offset = "0x8E4DE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4DE4", Offset = "0x8E4DE4")]
		public float PositionSpeed;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4E60", Offset = "0x8E4E60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E4E60", Offset = "0x8E4E60")]
		public float RotationSpeed;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected List<Transform> editorGizmoTailList;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4EB8", Offset = "0x8E4EB8")]
		public bool UseAutoCorrectLookAxis;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool FullCorrection;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4EF0", Offset = "0x8E4EF0")]
		public bool RolledBones;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool AnimateCorrections;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float StretchMultiplier;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4F28", Offset = "0x8E4F28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E4F28", Offset = "0x8E4F28")]
		public Vector3 AxisCorrection;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 AxisLookBack;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool ExtraCorrectionOptions;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 ExtraFromDirection;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 ExtraToDirection;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4F88", Offset = "0x8E4F88")]
		public bool AddTailReferences;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4FC0", Offset = "0x8E4FC0")]
		public EFUpdateClock UpdateClock;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E4FF8", Offset = "0x8E4FF8")]
		public bool SmoothDeltaTime;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5030", Offset = "0x8E5030")]
		public bool RefreshHelpers;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5068", Offset = "0x8E5068")]
		public bool QueueToLastUpdate;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
		protected bool initialized;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected List<float> distances;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Transform rootTransform;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected List<Vector3> tailLookDirections;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected List<Vector3> lookBackDirections;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected List<Quaternion> lookBackOffsets;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected List<Quaternion> animatedCorrections;

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected bool preAutoCorrect;

		[Token(Token = "0x600209D")]
		[Address(RVA = "0xBF6090", Offset = "0xBF6090", VA = "0xBF6090", Slot = "4")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0xBF62A4", Offset = "0xBF62A4", VA = "0xBF62A4", Slot = "5")]
		protected virtual void CoputeHelperVariables()
		{
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0xBF71C0", Offset = "0xBF71C0", VA = "0xBF71C0", Slot = "6")]
		protected virtual void ConfigureBonesTransforms()
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0xBF7BAC", Offset = "0xBF7BAC", VA = "0xBF7BAC")]
		public void AutoGetTailTransforms()
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0xBF7DA8", Offset = "0xBF7DA8", VA = "0xBF7DA8", Slot = "7")]
		protected virtual void PrepareTailPoints()
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0xBF7FF8", Offset = "0xBF7FF8", VA = "0xBF7FF8")]
		protected void Start()
		{
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0xBF70C4", Offset = "0xBF70C4", VA = "0xBF70C4", Slot = "8")]
		protected virtual void CalculateOffsets()
		{
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0xBF8004", Offset = "0xBF8004", VA = "0xBF8004", Slot = "9")]
		protected virtual void MotionCalculations()
		{
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0xBF86E8", Offset = "0xBF86E8", VA = "0xBF86E8", Slot = "10")]
		protected virtual void SetTailTransformsFromPoints()
		{
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0xBF8894", Offset = "0xBF8894", VA = "0xBF8894", Slot = "11")]
		protected virtual Quaternion CalculateTargetRotation(Vector3 startLookPos, Vector3 currentPos, [Optional] FTail_Point previousTailPoint, [Optional] FTail_Point currentTailPoint, int lookDirectionFixIndex = 0)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0xBF74E4", Offset = "0xBF74E4", VA = "0xBF74E4", Slot = "12")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0xBF858C", Offset = "0xBF858C", VA = "0xBF858C")]
		protected void ApplyAutoCorrection()
		{
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0xBF7B78", Offset = "0xBF7B78", VA = "0xBF7B78")]
		public void QueueComponentToLastUpdate()
		{
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0xBF8DF8", Offset = "0xBF8DF8", VA = "0xBF8DF8", Slot = "13")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0xBF75C0", Offset = "0xBF75C0", VA = "0xBF75C0")]
		protected FTail_AnimatorBase()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public class FTail_Reference : MonoBehaviour
	{
		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FTail_AnimatorBase TailReference;

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0xBFC0FC", Offset = "0xBFC0FC", VA = "0xBFC0FC")]
		public FTail_Reference()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public class FTail_Animator : FTail_AnimatorBase
	{
		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool UseWaving;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E50A0", Offset = "0x8E50A0")]
		public bool CosinusAdd;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float WavingSpeed;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float WavingRange;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Vector3 WavingAxis;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Vector3 TailRotationOffset;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E50D8", Offset = "0x8E50D8")]
		public bool DisconnectTransforms;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Transform disconnectedContainer;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Transform localDisconnectedContainer;

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		protected float waveTime;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		protected float cosTime;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		protected Vector3 firstBoneInitialRotation;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private int RefreshCounter;

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0xBF6030", Offset = "0xBF6030", VA = "0xBF6030", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0xBF61F4", Offset = "0xBF61F4", VA = "0xBF61F4", Slot = "5")]
		protected override void CoputeHelperVariables()
		{
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0xBF6BBC", Offset = "0xBF6BBC", VA = "0xBF6BBC", Slot = "14")]
		protected virtual void WavingCalculations()
		{
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0xBF7044", Offset = "0xBF7044", VA = "0xBF7044", Slot = "8")]
		protected override void CalculateOffsets()
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0xBF70D0", Offset = "0xBF70D0", VA = "0xBF70D0", Slot = "6")]
		protected override void ConfigureBonesTransforms()
		{
		}

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0xBF71C4", Offset = "0xBF71C4", VA = "0xBF71C4")]
		protected Transform GetDisconnectedContainer()
		{
			return null;
		}

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0xBF7378", Offset = "0xBF7378", VA = "0xBF7378", Slot = "15")]
		internal virtual void Update()
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0xBF7398", Offset = "0xBF7398", VA = "0xBF7398", Slot = "16")]
		internal virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0xBF73F0", Offset = "0xBF73F0", VA = "0xBF73F0", Slot = "17")]
		internal virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0xBF7414", Offset = "0xBF7414", VA = "0xBF7414", Slot = "12")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0xBF74E8", Offset = "0xBF74E8", VA = "0xBF74E8")]
		public FTail_Animator()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class FTail_Animator2D : FTail_AnimatorUI
	{
		[Token(Token = "0x60020B8")]
		[Address(RVA = "0xBF76E0", Offset = "0xBF76E0", VA = "0xBF76E0", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0xBF76E8", Offset = "0xBF76E8", VA = "0xBF76E8", Slot = "18")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0xBF77A8", Offset = "0xBF77A8", VA = "0xBF77A8", Slot = "11")]
		protected override Quaternion CalculateTargetRotation(Vector3 startLookPos, Vector3 currentPos, [Optional] FTail_Point previousTailPoint, [Optional] FTail_Point currentTailPoint, int lookDirectionFixIndex = 0)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0xBF7B60", Offset = "0xBF7B60", VA = "0xBF7B60")]
		public FTail_Animator2D()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public class FTail_AnimatorBlending : FTail_Animator
	{
		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5110", Offset = "0x8E5110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5110", Offset = "0x8E5110")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5110", Offset = "0x8E5110")]
		public float BlendToOriginal;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5188", Offset = "0x8E5188")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5188", Offset = "0x8E5188")]
		public float BlendChainValue;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E51DC", Offset = "0x8E51DC")]
		public bool PositionsNotAnimated;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float smoothChainBlend;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<Vector3> staticPositions;

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0xBF8DFC", Offset = "0xBF8DFC", VA = "0xBF8DFC", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0xBF8E00", Offset = "0xBF8E00", VA = "0xBF8E00", Slot = "5")]
		protected override void CoputeHelperVariables()
		{
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0xBF8F4C", Offset = "0xBF8F4C", VA = "0xBF8F4C", Slot = "18")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0xBF8F58", Offset = "0xBF8F58", VA = "0xBF8F58", Slot = "15")]
		internal override void Update()
		{
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0xBF9084", Offset = "0xBF9084", VA = "0xBF9084", Slot = "17")]
		internal override void FixedUpdate()
		{
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0xBF9088", Offset = "0xBF9088", VA = "0xBF9088", Slot = "16")]
		internal override void LateUpdate()
		{
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0xBF9BD4", Offset = "0xBF9BD4", VA = "0xBF9BD4", Slot = "10")]
		protected override void SetTailTransformsFromPoints()
		{
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0xBF9BD8", Offset = "0xBF9BD8", VA = "0xBF9BD8")]
		public FTail_AnimatorBlending()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class FTail_AnimatorLegacy : FTail_Animator
	{
		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public SkinnedMeshRenderer BonesOwner;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5214", Offset = "0x8E5214")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5214", Offset = "0x8E5214")]
		public float BlendToOriginal;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected List<Transform> newSkinnedBones;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		protected List<Transform> previousSkinnedBones;

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0xBF9C54", Offset = "0xBF9C54", VA = "0xBF9C54")]
		private void Reset()
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0xBF9C60", Offset = "0xBF9C60", VA = "0xBF9C60", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0xBF9EEC", Offset = "0xBF9EEC", VA = "0xBF9EEC", Slot = "6")]
		protected override void ConfigureBonesTransforms()
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0xBFA9C8", Offset = "0xBFA9C8", VA = "0xBFA9C8", Slot = "9")]
		protected override void MotionCalculations()
		{
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0xBFB174", Offset = "0xBFB174", VA = "0xBFB174", Slot = "8")]
		protected override void CalculateOffsets()
		{
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0xBFA4AC", Offset = "0xBFA4AC", VA = "0xBFA4AC")]
		public void TryFindBonesOwner()
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0xBFB1AC", Offset = "0xBFB1AC", VA = "0xBFB1AC")]
		public FTail_AnimatorLegacy()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class FTail_AnimatorUI : FTail_Animator
	{
		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public bool Lock2D;

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0xBFB1B0", Offset = "0xBFB1B0", VA = "0xBFB1B0", Slot = "18")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0xBF7A34", Offset = "0xBF7A34", VA = "0xBF7A34", Slot = "11")]
		protected override Quaternion CalculateTargetRotation(Vector3 startLookPos, Vector3 currentPos, [Optional] FTail_Point previousTailPoint, [Optional] FTail_Point currentTailPoint, int lookDirectionFixIndex = 0)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0xBF7B6C", Offset = "0xBF7B6C", VA = "0xBF7B6C")]
		public FTail_AnimatorUI()
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class FTail_Demo_FixedUpdateLimit : FTail_Animator
	{
		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5268", Offset = "0x8E5268")]
		public bool UseXLimitation;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float WorldXDontGoUnder;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float PushTime;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float PushPower;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		protected Vector3 TrueTailRotationOffset;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		protected float pushTimer;

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0xBFB268", Offset = "0xBFB268", VA = "0xBFB268")]
		private void Reset()
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0xBFB274", Offset = "0xBFB274", VA = "0xBFB274", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0xBFB2AC", Offset = "0xBFB2AC", VA = "0xBFB2AC", Slot = "15")]
		internal override void Update()
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0xBFB2C8", Offset = "0xBFB2C8", VA = "0xBFB2C8", Slot = "17")]
		internal override void FixedUpdate()
		{
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0xBFB2E4", Offset = "0xBFB2E4", VA = "0xBFB2E4", Slot = "8")]
		protected override void CalculateOffsets()
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0xBFBCDC", Offset = "0xBFBCDC", VA = "0xBFBCDC")]
		private static float LimitAngle360(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0xBFBD14", Offset = "0xBFBD14", VA = "0xBFBD14")]
		public FTail_Demo_FixedUpdateLimit()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class FTail_Demo_LeverBlend : MonoBehaviour
	{
		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FBasic_PullableLever lever;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FTail_AnimatorBlending tailToBlend;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform TailSegmentsContainer;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool blendChain;

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0xBFBDA8", Offset = "0xBFBDA8", VA = "0xBFBDA8")]
		private void Update()
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0xBFBE14", Offset = "0xBFBE14", VA = "0xBFBE14")]
		public FTail_Demo_LeverBlend()
		{
		}
	}
	[Token(Token = "0x2000473")]
	public class FTail_Demo_LeverUsage : MonoBehaviour
	{
		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform TargetToMove;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 TargetLocalOffset;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 initPosition;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion initRotation;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FBasic_PullableLever lever;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool RotationLever;

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0xBFBE1C", Offset = "0xBFBE1C", VA = "0xBFBE1C")]
		private void Start()
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0xBFBEA0", Offset = "0xBFBEA0", VA = "0xBFBEA0")]
		private void Update()
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0xBFC0F4", Offset = "0xBFC0F4", VA = "0xBFC0F4")]
		public FTail_Demo_LeverUsage()
		{
		}
	}
}
namespace FIMSpace.Jiggling
{
	[Token(Token = "0x2000474")]
	public abstract class FJiggling_Base : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20006BF")]
		public class TrigonoParams
		{
			[Token(Token = "0x4002527")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float Value;

			[Token(Token = "0x4002528")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float Multiplier;

			[Token(Token = "0x4002529")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float TimeOffset;

			[Token(Token = "0x400252A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float RandomTimeMul;

			[Token(Token = "0x60027D0")]
			[Address(RVA = "0xBFCA98", Offset = "0xBFCA98", VA = "0xBFCA98")]
			public void Randomize()
			{
			}

			[Token(Token = "0x60027D1")]
			[Address(RVA = "0xBFCA90", Offset = "0xBFCA90", VA = "0xBFCA90")]
			public TrigonoParams()
			{
			}
		}

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E52A0", Offset = "0x8E52A0")]
		public float JiggleTiltValue;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E52D8", Offset = "0x8E52D8")]
		public float JiggleFrequency;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5310", Offset = "0x8E5310")]
		public float JiggleDecelerate;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5348", Offset = "0x8E5348")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5348", Offset = "0x8E5348")]
		public float AdditionalSpeedValue;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E539C", Offset = "0x8E539C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E539C", Offset = "0x8E539C")]
		public float ConstantJiggleValue;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected float time;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool animationFinished;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<TrigonoParams> trigParams;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E53F0", Offset = "0x8E53F0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E53F0", Offset = "0x8E53F0")]
		public int RandomLevel;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected float targetPowerValue;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected float easedPowerProgress;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected float currentJigglePower;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected bool reJiggled;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		protected bool initialized;

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0xBFC234", Offset = "0xBFC234", VA = "0xBFC234", Slot = "4")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0xBFC834", Offset = "0xBFC834", VA = "0xBFC834")]
		private void Awake()
		{
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0xBFC840", Offset = "0xBFC840", VA = "0xBFC840")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0xBFC880", Offset = "0xBFC880", VA = "0xBFC880", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0xBFC8C8", Offset = "0xBFC8C8", VA = "0xBFC8C8", Slot = "6")]
		protected virtual void OnAnimationFinish()
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0xBFC8CC", Offset = "0xBFC8CC", VA = "0xBFC8CC", Slot = "7")]
		public virtual void StartJiggle()
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0xBFC964", Offset = "0xBFC964", VA = "0xBFC964", Slot = "8")]
		protected virtual void ReJiggle()
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0xBFC970", Offset = "0xBFC970", VA = "0xBFC970", Slot = "9")]
		protected virtual void RandomizeVariables()
		{
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0xBFCB0C", Offset = "0xBFCB0C", VA = "0xBFCB0C", Slot = "10")]
		protected virtual void CalculateTrigonometricVariables(float timeMultiplier = 1f)
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0xBFC6DC", Offset = "0xBFC6DC", VA = "0xBFC6DC", Slot = "11")]
		protected virtual void CalculateJiggle()
		{
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0xBFCD98", Offset = "0xBFCD98", VA = "0xBFCD98")]
		public static float EaseInOutCubic(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0xBFC804", Offset = "0xBFC804", VA = "0xBFC804")]
		protected FJiggling_Base()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public class FJiggling_Active : FJiggling_Base
	{
		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5444", Offset = "0x8E5444")]
		public Transform TransformToAnimate;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E547C", Offset = "0x8E547C")]
		public Vector3 ScaleAxesMultiplier;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 RotationAxesMultiplier;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Quaternion initRotation;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Vector3 initScale;

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0xBFC104", Offset = "0xBFC104", VA = "0xBFC104", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0xBFC290", Offset = "0xBFC290", VA = "0xBFC290", Slot = "11")]
		protected override void CalculateJiggle()
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0xBFC728", Offset = "0xBFC728", VA = "0xBFC728")]
		public FJiggling_Active()
		{
		}
	}
	[Token(Token = "0x2000476")]
	public class FJiggling_Grow : FJiggling_Simple
	{
		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float GrowShrinkSpeed;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected float growProgress;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		protected bool shrinking;

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0xBFD1B8", Offset = "0xBFD1B8", VA = "0xBFD1B8")]
		public void ToggleGrowShrink()
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0xBFD1D8", Offset = "0xBFD1D8", VA = "0xBFD1D8", Slot = "13")]
		public virtual void StartGrowing()
		{
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0xBFD1E8", Offset = "0xBFD1E8", VA = "0xBFD1E8", Slot = "14")]
		public virtual void StartShrinking()
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0xBFD1FC", Offset = "0xBFD1FC", VA = "0xBFD1FC", Slot = "8")]
		protected override void ReJiggle()
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0xBFD200", Offset = "0xBFD200", VA = "0xBFD200", Slot = "11")]
		protected override void CalculateJiggle()
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0xBFDA6C", Offset = "0xBFDA6C", VA = "0xBFDA6C", Slot = "6")]
		protected override void OnAnimationFinish()
		{
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0xBFDA8C", Offset = "0xBFDA8C", VA = "0xBFDA8C")]
		protected void ResetInitialPosRot()
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0xBFDB1C", Offset = "0xBFDB1C", VA = "0xBFDB1C")]
		public FJiggling_Grow()
		{
		}
	}
	[Token(Token = "0x2000477")]
	public class FJiggling_Multi : FJiggling_Base
	{
		[Serializable]
		[Token(Token = "0x20006C0")]
		public class FJiggling_Element
		{
			[Token(Token = "0x400252B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Transform;

			[Token(Token = "0x400252C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 RotationAxesMul;

			[Token(Token = "0x400252D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 ScaleAxesMul;

			[Token(Token = "0x400252E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 InitPos;

			[Token(Token = "0x400252F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion InitRot;

			[Token(Token = "0x4002530")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 InitScale;

			[Token(Token = "0x4002531")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<TrigonoParams> trigParams;

			[Token(Token = "0x60027D2")]
			[Address(RVA = "0xBFF2FC", Offset = "0xBFF2FC", VA = "0xBFF2FC")]
			public FJiggling_Element(Transform target)
			{
			}
		}

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public List<FJiggling_Element> ToJiggle;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E54C4", Offset = "0x8E54C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E54C4", Offset = "0x8E54C4")]
		public bool SeparatedCalculations;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool BonesNotAnimatedByAnimator;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[HideInInspector]
		public bool ShowIndividualOptions;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5534", Offset = "0x8E5534")]
		public Vector3 ScaleAxesMultiplier;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 RotationAxesMultiplier;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E556C", Offset = "0x8E556C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E556C", Offset = "0x8E556C")]
		public float ReJigglePower;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected float reJiggleProgress;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float reJiggleValue;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected float reJiggleRandomOffset;

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0xBFDB28", Offset = "0xBFDB28", VA = "0xBFDB28", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0xBFDE24", Offset = "0xBFDE24", VA = "0xBFDE24", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0xBFDE28", Offset = "0xBFDE28", VA = "0xBFDE28")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0xBFE624", Offset = "0xBFE624", VA = "0xBFE624")]
		private void CalculateJigglingFor(int index)
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0xBFEAD4", Offset = "0xBFEAD4", VA = "0xBFEAD4")]
		protected void CalculateTrigonoFor(int i)
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xBFEC94", Offset = "0xBFEC94", VA = "0xBFEC94", Slot = "9")]
		protected override void RandomizeVariables()
		{
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xBFEEC4", Offset = "0xBFEEC4", VA = "0xBFEEC4")]
		public void AddNewElement(FJiggling_Element el)
		{
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xBFEFEC", Offset = "0xBFEFEC", VA = "0xBFEFEC")]
		public void RemoveElement(FJiggling_Element el)
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xBFF05C", Offset = "0xBFF05C", VA = "0xBFF05C")]
		public void RemoveElement(int index)
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xBFF0CC", Offset = "0xBFF0CC", VA = "0xBFF0CC")]
		public void ClearElements()
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xBFF12C", Offset = "0xBFF12C", VA = "0xBFF12C")]
		public bool ContainsElement(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xBFF234", Offset = "0xBFF234", VA = "0xBFF234")]
		public FJiggling_Multi()
		{
		}
	}
	[Token(Token = "0x2000478")]
	public class FJiggling_Rect : FJiggling_Simple
	{
		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected RectTransform RectTransformToAnimate;

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xBFF398", Offset = "0xBFF398", VA = "0xBFF398", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xBFF4C4", Offset = "0xBFF4C4", VA = "0xBFF4C4")]
		public FJiggling_Rect()
		{
		}
	}
	[Token(Token = "0x2000479")]
	public class FJiggling_Simple : FJiggling_Base
	{
		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform TransformToAnimate;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E55BC", Offset = "0x8E55BC")]
		public Vector3 ScaleAxesMultiplier;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Vector3 RotationAxesMultiplier;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Quaternion initRotation;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Vector3 initScale;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E55F4", Offset = "0x8E55F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E55F4", Offset = "0x8E55F4")]
		public float ReJigglePower;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float reJiggleProgress;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected float reJiggleValue;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected float reJiggleRandomOffset;

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0xBFCE40", Offset = "0xBFCE40", VA = "0xBFCE40", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0xBFF4C8", Offset = "0xBFF4C8", VA = "0xBFF4C8", Slot = "12")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0xBFF4F0", Offset = "0xBFF4F0", VA = "0xBFF4F0", Slot = "7")]
		public override void StartJiggle()
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0xBFF534", Offset = "0xBFF534", VA = "0xBFF534", Slot = "8")]
		protected override void ReJiggle()
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0xBFD464", Offset = "0xBFD464", VA = "0xBFD464", Slot = "11")]
		protected override void CalculateJiggle()
		{
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0xBFDA90", Offset = "0xBFDA90", VA = "0xBFDA90", Slot = "6")]
		protected override void OnAnimationFinish()
		{
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0xBFD030", Offset = "0xBFD030", VA = "0xBFD030")]
		public FJiggling_Simple()
		{
		}
	}
	[Token(Token = "0x200047A")]
	public class FJiggling_SimpleBones : FJiggling_Simple
	{
		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool NoRotationKeyframes;

		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion initialKeyRotation;

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xBFF548", Offset = "0xBFF548", VA = "0xBFF548", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xBFF598", Offset = "0xBFF598", VA = "0xBFF598", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xBFF59C", Offset = "0xBFF59C", VA = "0xBFF59C", Slot = "13")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xBFF63C", Offset = "0xBFF63C", VA = "0xBFF63C")]
		public FJiggling_SimpleBones()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class FJiggling_Demo_Limb : FJiggling_Simple
	{
		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool NoRotationKeyframes;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Quaternion initialKeyRotation;

		[Token(Token = "0x600210A")]
		[Address(RVA = "0xBFCDF0", Offset = "0xBFCDF0", VA = "0xBFCDF0", Slot = "4")]
		protected override void Init()
		{
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0xBFCF7C", Offset = "0xBFCF7C", VA = "0xBFCF7C", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0xBFCF80", Offset = "0xBFCF80", VA = "0xBFCF80", Slot = "13")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0xBFD020", Offset = "0xBFD020", VA = "0xBFD020")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xBFD02C", Offset = "0xBFD02C", VA = "0xBFD02C")]
		public FJiggling_Demo_Limb()
		{
		}
	}
	[Token(Token = "0x200047C")]
	public class FJiggling_Demo_TriggerJiggleOnClick : MonoBehaviour
	{
		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FJiggling_Base JiggleScript;

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xBFD114", Offset = "0xBFD114", VA = "0xBFD114")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xBFD1B0", Offset = "0xBFD1B0", VA = "0xBFD1B0")]
		public FJiggling_Demo_TriggerJiggleOnClick()
		{
		}
	}
}
namespace FIMSpace.Audio
{
	[Token(Token = "0x200047D")]
	public class FBasic_FheelekFighter : FBasic_FheelekController
	{
		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private AudioSource HitSource;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public AudioClip SwingAudioClip;

		[Token(Token = "0x6002111")]
		[Address(RVA = "0xC8F27C", Offset = "0xC8F27C", VA = "0xC8F27C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0xC8F348", Offset = "0xC8F348", VA = "0xC8F348", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0xC8F3E0", Offset = "0xC8F3E0", VA = "0xC8F3E0")]
		public void ESwing()
		{
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0xC8F41C", Offset = "0xC8F41C", VA = "0xC8F41C")]
		public void EHit()
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0xC8F420", Offset = "0xC8F420", VA = "0xC8F420")]
		public FBasic_FheelekFighter()
		{
		}
	}
}
namespace FIMSpace.Basics
{
	[Token(Token = "0x200047E")]
	public class FBasic_FlyMovement : MonoBehaviour
	{
		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5644", Offset = "0x8E5644")]
		public float MainSpeed;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E567C", Offset = "0x8E567C")]
		public Vector3 RangeValue;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E56B4", Offset = "0x8E56B4")]
		public float RangeMul;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E56EC", Offset = "0x8E56EC")]
		public float AddYSin;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float AddYSinTimeSpeed;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5724", Offset = "0x8E5724")]
		public float RotateForwardSpeed;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float time;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 offset;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 initPos;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 preOffsetNoYAdd;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 posOffsetNoYAdd;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 speeds;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 randomVector1;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 randomVector2;

		[Token(Token = "0x6002116")]
		[Address(RVA = "0x1164FE0", Offset = "0x1164FE0", VA = "0x1164FE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0x1165098", Offset = "0x1165098", VA = "0x1165098")]
		private void Update()
		{
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x11654FC", Offset = "0x11654FC", VA = "0x11654FC")]
		public FBasic_FlyMovement()
		{
		}
	}
	[Token(Token = "0x200047F")]
	public class FBasic_FollowTarget : MonoBehaviour
	{
		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E575C", Offset = "0x8E575C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E575C", Offset = "0x8E575C")]
		public float MoveSpeed;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform TargetTransform;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 PositionOffsetInTargetSpace;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public EFUpdateClock UpdateClock;

		[Token(Token = "0x6002119")]
		[Address(RVA = "0x1165588", Offset = "0x1165588", VA = "0x1165588")]
		private void Update()
		{
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0x1165808", Offset = "0x1165808", VA = "0x1165808")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x116581C", Offset = "0x116581C", VA = "0x116581C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x1165598", Offset = "0x1165598", VA = "0x1165598")]
		private void Follow()
		{
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0x1165830", Offset = "0x1165830", VA = "0x1165830")]
		public FBasic_FollowTarget()
		{
		}
	}
	[Token(Token = "0x2000480")]
	public class FBasic_HoldPosition : MonoBehaviour
	{
		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E57B4", Offset = "0x8E57B4")]
		public float HoldPower;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool ResetRigidbodyVelocity;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Vector3 initialPosition;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Rigidbody rigidbodyToHold;

		[Token(Token = "0x600211E")]
		[Address(RVA = "0x11660A0", Offset = "0x11660A0", VA = "0x11660A0", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0x116612C", Offset = "0x116612C", VA = "0x116612C", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0x116634C", Offset = "0x116634C", VA = "0x116634C")]
		public FBasic_HoldPosition()
		{
		}
	}
	[Token(Token = "0x2000481")]
	public class FBasic_SlideObjectTo : MonoBehaviour
	{
		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FEasing.EFease EaseFunction;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E57EC", Offset = "0x8E57EC")]
		public float Duration;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5824", Offset = "0x8E5824")]
		public Vector3 OffsetPosition;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E585C", Offset = "0x8E585C")]
		public Vector3 OffsetRotation;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected bool goToTarget;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float time;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 initPos;

		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Quaternion initRot;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected FEasing.Function func;

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x116BBA4", Offset = "0x116BBA4", VA = "0x116BBA4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x116BC24", Offset = "0x116BC24", VA = "0x116BC24", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0x116BEA8", Offset = "0x116BEA8", VA = "0x116BEA8")]
		public void ToggleMove()
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x116BF04", Offset = "0x116BF04", VA = "0x116BF04")]
		public void MoveToTarget()
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x116BF44", Offset = "0x116BF44", VA = "0x116BF44")]
		public void MoveBack()
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x116BF80", Offset = "0x116BF80", VA = "0x116BF80")]
		public FBasic_SlideObjectTo()
		{
		}
	}
	[Token(Token = "0x2000482")]
	public class FBasic_ObjectVibrate : MonoBehaviour
	{
		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5894", Offset = "0x8E5894")]
		public float VibrationRate;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E58CC", Offset = "0x8E58CC")]
		public float BaseRange;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5904", Offset = "0x8E5904")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5904", Offset = "0x8E5904")]
		public float SmoothTranslation;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] randomOffsets;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5958", Offset = "0x8E5958")]
		private Vector3 <initialPosition>k__BackingField;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5968", Offset = "0x8E5968")]
		private Vector3 <localPosition>k__BackingField;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float time;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float speed;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float range;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		internal float intensity;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 AxesMultiplier;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool ChangeObjectPosition;

		[Token(Token = "0x1700021F")]
		public Vector3 initialPosition
		{
			[Token(Token = "0x6002127")]
			[Address(RVA = "0x1167E60", Offset = "0x1167E60", VA = "0x1167E60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC020", Offset = "0x8EC020")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002128")]
			[Address(RVA = "0x1167E6C", Offset = "0x1167E6C", VA = "0x1167E6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC030", Offset = "0x8EC030")]
			private set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public Vector3 localPosition
		{
			[Token(Token = "0x6002129")]
			[Address(RVA = "0x1167E78", Offset = "0x1167E78", VA = "0x1167E78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC040", Offset = "0x8EC040")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600212A")]
			[Address(RVA = "0x1167E84", Offset = "0x1167E84", VA = "0x1167E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC050", Offset = "0x8EC050")]
			private set
			{
			}
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x1167E90", Offset = "0x1167E90", VA = "0x1167E90")]
		private void Start()
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x11680C0", Offset = "0x11680C0", VA = "0x11680C0")]
		private void Update()
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x1167F98", Offset = "0x1167F98", VA = "0x1167F98")]
		public void ChooseNewSeed()
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x11688A0", Offset = "0x11688A0", VA = "0x11688A0")]
		public FBasic_ObjectVibrate()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public class FBasic_PowerUpObject : MonoBehaviour
	{
		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5978", Offset = "0x8E5978")]
		public float YFloatingValue;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float FloatingSpeedRate;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RotationSpeed;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E59B0", Offset = "0x8E59B0")]
		public string TagToCollideWith;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 initPosition;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float randomOffset;

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x116894C", Offset = "0x116894C", VA = "0x116894C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x1168A00", Offset = "0x1168A00", VA = "0x1168A00")]
		private void Update()
		{
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x1168B8C", Offset = "0x1168B8C", VA = "0x1168B8C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x1168BFC", Offset = "0x1168BFC", VA = "0x1168BFC")]
		protected void Collect()
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x1168C78", Offset = "0x1168C78", VA = "0x1168C78")]
		public FBasic_PowerUpObject()
		{
		}
	}
	[Token(Token = "0x2000484")]
	public class FBasic_RotateSpinSin : MonoBehaviour
	{
		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E59E8", Offset = "0x8E59E8")]
		public Vector3 RotationAxis;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5A20", Offset = "0x8E5A20")]
		public float RotationRange;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5A58", Offset = "0x8E5A58")]
		public float SinSpeed;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float time;

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x116AF64", Offset = "0x116AF64", VA = "0x116AF64")]
		private void Start()
		{
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x116AF9C", Offset = "0x116AF9C", VA = "0x116AF9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x116B0EC", Offset = "0x116B0EC", VA = "0x116B0EC")]
		public FBasic_RotateSpinSin()
		{
		}
	}
	[Token(Token = "0x2000485")]
	public class FBasic_RotateTo : MonoBehaviour
	{
		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 TargetRotation;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationSpeed;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool UnscaledDeltaTime;

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform TargetTransform;

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x116B170", Offset = "0x116B170", VA = "0x116B170", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x116B418", Offset = "0x116B418", VA = "0x116B418")]
		public FBasic_RotateTo()
		{
		}
	}
	[Token(Token = "0x2000486")]
	public class FBasic_Rotator : MonoBehaviour
	{
		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 RotationAxis;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationSpeed;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool UnscaledDeltaTime;

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x116B47C", Offset = "0x116B47C", VA = "0x116B47C", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x116B5D8", Offset = "0x116B5D8", VA = "0x116B5D8")]
		public FBasic_Rotator()
		{
		}
	}
	[Token(Token = "0x2000487")]
	public class FBasic_Shared_PanelAnimations : MonoBehaviour
	{
		[Token(Token = "0x20006C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD710", Offset = "0x8CD710")]
		private sealed class <ClickAniamtion>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002532")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002533")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002534")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FBasic_Shared_PanelAnimations <>4__this;

			[Token(Token = "0x4002535")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x4002536")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector3 <currentPos>5__3;

			[Token(Token = "0x17000321")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027D6")]
				[Address(RVA = "0x116BB2C", Offset = "0x116BB2C", VA = "0x116BB2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000322")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027D8")]
				[Address(RVA = "0x116BB9C", Offset = "0x116BB9C", VA = "0x116BB9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027D3")]
			[Address(RVA = "0x116B784", Offset = "0x116B784", VA = "0x116B784")]
			[DebuggerHidden]
			public <ClickAniamtion>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60027D4")]
			[Address(RVA = "0x116B7C8", Offset = "0x116B7C8", VA = "0x116B7C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027D5")]
			[Address(RVA = "0x116B7CC", Offset = "0x116B7CC", VA = "0x116B7CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027D7")]
			[Address(RVA = "0x116BB34", Offset = "0x116BB34", VA = "0x116BB34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5A90", Offset = "0x8E5A90")]
		public float AnimationTime;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5AC8", Offset = "0x8E5AC8")]
		public float EaseExtraValue;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform buttonTransform;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 buttonInitPosition;

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x116B644", Offset = "0x116B644", VA = "0x116B644", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x116B6D8", Offset = "0x116B6D8", VA = "0x116B6D8", Slot = "5")]
		public virtual void Click()
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x116B710", Offset = "0x116B710", VA = "0x116B710")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EC060", Offset = "0x8EC060")]
		private IEnumerator ClickAniamtion()
		{
			return null;
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x116B7B0", Offset = "0x116B7B0", VA = "0x116B7B0")]
		public FBasic_Shared_PanelAnimations()
		{
		}
	}
	[Token(Token = "0x2000488")]
	public class FBasic_Spinner : FBasic_Rotator
	{
		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5B00", Offset = "0x8E5B00")]
		public float DeceleratePower;

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x116C014", Offset = "0x116C014", VA = "0x116C014")]
		private void Start()
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x116C01C", Offset = "0x116C01C", VA = "0x116C01C", Slot = "4")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x116C15C", Offset = "0x116C15C", VA = "0x116C15C")]
		public void Spin(float power = 500f)
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x116C164", Offset = "0x116C164", VA = "0x116C164")]
		public FBasic_Spinner()
		{
		}
	}
	[Token(Token = "0x2000489")]
	public class FBasic_TimedExecutor : MonoBehaviour
	{
		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5B38", Offset = "0x8E5B38")]
		public Vector2 RandomTimerRange;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent ToExecute;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float timer;

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x116CE68", Offset = "0x116CE68", VA = "0x116CE68")]
		private void Start()
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0x116CEC0", Offset = "0x116CEC0", VA = "0x116CEC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x116CE94", Offset = "0x116CE94", VA = "0x116CE94")]
		private void ResetTimer()
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0x116CF20", Offset = "0x116CF20", VA = "0x116CF20")]
		public FBasic_TimedExecutor()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public class FBasic_TranslateTransformSpace : MonoBehaviour
	{
		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 TranslationAxis;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TranslationSpeed;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool UnscaledDeltaTime;

		[Token(Token = "0x6002147")]
		[Address(RVA = "0x116CF68", Offset = "0x116CF68", VA = "0x116CF68", Slot = "4")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0x116D0F4", Offset = "0x116D0F4", VA = "0x116D0F4")]
		public FBasic_TranslateTransformSpace()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class FBasic_FreeCameraBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5B70", Offset = "0x8E5B70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5B70", Offset = "0x8E5B70")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5BD0", Offset = "0x8E5BD0")]
		public float AccelerationSmothnessValue;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5C08", Offset = "0x8E5C08")]
		public float RotationSmothnessValue;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MouseSensitivity;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float turboModeMultiply;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 speeds;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float ySpeed;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 rotation;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float turbo;

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x1165840", Offset = "0x1165840", VA = "0x1165840")]
		private void Start()
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0x1165900", Offset = "0x1165900", VA = "0x1165900")]
		private void Update()
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0x1166034", Offset = "0x1166034", VA = "0x1166034")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x116607C", Offset = "0x116607C", VA = "0x116607C")]
		public FBasic_FreeCameraBehaviour()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class FBasic_TPPCameraBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5C40", Offset = "0x8E5C40")]
		public Transform ToFollow;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5C78", Offset = "0x8E5C78")]
		public Vector3 FollowingOffset;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5CB0", Offset = "0x8E5CB0")]
		public Vector3 FollowingOffsetDirection;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5CE8", Offset = "0x8E5CE8")]
		public Vector2 DistanceRanges;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float targetDistance;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float animatedDistance;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 RotationRanges;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2 targetSphericRotation;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 animatedSphericRotation;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E5D20", Offset = "0x8E5D20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5D20", Offset = "0x8E5D20")]
		public float RotationSensitivity;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5D70", Offset = "0x8E5D70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5D70", Offset = "0x8E5D70")]
		public float RotationSpeed;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5DC8", Offset = "0x8E5DC8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E5DC8", Offset = "0x8E5DC8")]
		public float HardFollowValue;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5E1C", Offset = "0x8E5E1C")]
		public bool LockCursor;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool rotateCamera;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RaycastHit sightObstacleHit;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5E54", Offset = "0x8E5E54")]
		public LayerMask SightLayerMask;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 targetPosition;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5E8C", Offset = "0x8E5E8C")]
		public float CollisionOffset;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public EFUpdateClock UpdateClock;

		[Token(Token = "0x600214D")]
		[Address(RVA = "0x116C170", Offset = "0x116C170", VA = "0x116C170")]
		private void Start()
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x116C228", Offset = "0x116C228", VA = "0x116C228")]
		private void UpdateMethods()
		{
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0x116CC48", Offset = "0x116CC48", VA = "0x116CC48")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0x116CC5C", Offset = "0x116CC5C", VA = "0x116CC5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0x116CC6C", Offset = "0x116CC6C", VA = "0x116CC6C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0x116C264", Offset = "0x116C264", VA = "0x116C264")]
		private void InputCalculations()
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0x116C32C", Offset = "0x116C32C", VA = "0x116C32C")]
		private void ZoomCalculations()
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x116C450", Offset = "0x116C450", VA = "0x116C450")]
		private void FollowCalculations()
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x116C778", Offset = "0x116C778", VA = "0x116C778")]
		private void RaycastCalculations()
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x116CBF4", Offset = "0x116CBF4", VA = "0x116CBF4")]
		private void SwitchCalculations()
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x116CC80", Offset = "0x116CC80", VA = "0x116CC80")]
		private float HelperClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0x116C1D0", Offset = "0x116C1D0", VA = "0x116C1D0")]
		private void HelperSwitchCursor()
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x116CD30", Offset = "0x116CD30", VA = "0x116CD30")]
		public FBasic_TPPCameraBehaviour()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public abstract class FBasic_CharacterHorizontalBase : FBasic_CharacterMovementBase
	{
		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected float accelerationRight;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected Vector3 newVelocityRight;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Vector3 lastTargetVelocityRight;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected float horizontalValue;

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xC91690", Offset = "0xC91690", VA = "0xC91690", Slot = "8")]
		protected override void MovementCalculations()
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xC91C6C", Offset = "0xC91C6C", VA = "0xC91C6C", Slot = "13")]
		protected virtual void MoveRight(bool leftSide)
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0xC91D50", Offset = "0xC91D50", VA = "0xC91D50", Slot = "14")]
		protected virtual void StoppingSidewaysMovement()
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xC9187C", Offset = "0xC9187C", VA = "0xC9187C", Slot = "7")]
		protected override void RotationCalculations()
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0xC91BE8", Offset = "0xC91BE8", VA = "0xC91BE8")]
		protected FBasic_CharacterHorizontalBase()
		{
		}
	}
	[Token(Token = "0x200048E")]
	public abstract class FBasic_CharacterInputBase : MonoBehaviour
	{
		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected FBasic_CharacterMovementBase characterController;

		[Token(Token = "0x600215F")]
		[Address(RVA = "0xC9219C", Offset = "0xC9219C", VA = "0xC9219C", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xC921F4", Offset = "0xC921F4", VA = "0xC921F4", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xC92248", Offset = "0xC92248", VA = "0xC92248", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xC920E8", Offset = "0xC920E8", VA = "0xC920E8")]
		public void SetInputAxis(Vector2 inputAxis)
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0xC9215C", Offset = "0xC9215C", VA = "0xC9215C")]
		public void Jump()
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0xC92124", Offset = "0xC92124", VA = "0xC92124")]
		public void SetInputDirection(float yDirection)
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0xC92034", Offset = "0xC92034", VA = "0xC92034")]
		protected float CalculateClampedAxisValue(string axis = "Vertical")
		{
			return default(float);
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0xC92194", Offset = "0xC92194", VA = "0xC92194")]
		protected FBasic_CharacterInputBase()
		{
		}
	}
	[Token(Token = "0x200048F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC82C", Offset = "0x8CC82C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC82C", Offset = "0x8CC82C")]
	public abstract class FBasic_CharacterMovementBase : MonoBehaviour
	{
		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5EC4", Offset = "0x8E5EC4")]
		public float MaxSpeed;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool Grounded;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool Jumped;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float targetDirection;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected float animatedDirection;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool onlyForward;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float GravityPower;

		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5EFC", Offset = "0x8E5EFC")]
		public float AccelerationSpeed;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5F34", Offset = "0x8E5F34")]
		public float DecelerateSpeed;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected float accelerationForward;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected Vector3 newVelocityForward;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Vector3 lastTargetVelocityForward;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected float verticalValue;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected Vector2 inputAxes;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected float inputDirection;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected bool inputJump;

		[Token(Token = "0x6002167")]
		[Address(RVA = "0xC913D8", Offset = "0xC913D8", VA = "0xC913D8", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xC92464", Offset = "0xC92464", VA = "0xC92464", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xC92470", Offset = "0xC92470", VA = "0xC92470", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0xC9247C", Offset = "0xC9247C", VA = "0xC9247C", Slot = "7")]
		protected virtual void RotationCalculations()
		{
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0xC925C0", Offset = "0xC925C0", VA = "0xC925C0", Slot = "8")]
		protected virtual void MovementCalculations()
		{
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0xC9266C", Offset = "0xC9266C", VA = "0xC9266C", Slot = "9")]
		protected virtual Vector3 CalculateTargetVelocity(Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0xC9273C", Offset = "0xC9273C", VA = "0xC9273C", Slot = "10")]
		protected virtual void MoveForward(bool backward)
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0xC92854", Offset = "0xC92854", VA = "0xC92854", Slot = "11")]
		protected virtual void StoppingMovement()
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0xC92944", Offset = "0xC92944", VA = "0xC92944", Slot = "12")]
		protected virtual void Jump()
		{
		}

		[Token(Token = "0x6002170")]
		[Address(RVA = "0xC9229C", Offset = "0xC9229C", VA = "0xC9229C")]
		internal void SetInputAxis(Vector2 inputAxis)
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xC922B0", Offset = "0xC922B0", VA = "0xC922B0")]
		internal void SetInputDirection(float yDirection)
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0xC922A4", Offset = "0xC922A4", VA = "0xC922A4")]
		internal void SetJumpInput()
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xC919D0", Offset = "0xC919D0", VA = "0xC919D0")]
		protected float CalculateJumpYVelocity()
		{
			return default(float);
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xC91E40", Offset = "0xC91E40", VA = "0xC91E40")]
		protected FBasic_CharacterMovementBase()
		{
		}
	}
	[Token(Token = "0x2000490")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC8B8", Offset = "0x8CC8B8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC8B8", Offset = "0x8CC8B8")]
	public class FBasic_CharacterController : FBasic_CharacterHorizontalBase
	{
		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E5F6C", Offset = "0x8E5F6C")]
		private Rigidbody <CharacterRigidbody>k__BackingField;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected CharacterController characterController;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 translationVector;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected float yVelocity;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5F7C", Offset = "0x8E5F7C")]
		public bool SimpleMove;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E5FB4", Offset = "0x8E5FB4")]
		public float pushDownYVelocity;

		[Token(Token = "0x17000221")]
		public Rigidbody CharacterRigidbody
		{
			[Token(Token = "0x6002175")]
			[Address(RVA = "0xC912B4", Offset = "0xC912B4", VA = "0xC912B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC0C4", Offset = "0x8EC0C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002176")]
			[Address(RVA = "0xC912BC", Offset = "0xC912BC", VA = "0xC912BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC0D4", Offset = "0x8EC0D4")]
			protected set
			{
			}
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0xC912C4", Offset = "0xC912C4", VA = "0xC912C4", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0xC9141C", Offset = "0xC9141C", VA = "0xC9141C", Slot = "8")]
		protected override void MovementCalculations()
		{
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0xC9184C", Offset = "0xC9184C", VA = "0xC9184C", Slot = "7")]
		protected override void RotationCalculations()
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0xC91998", Offset = "0xC91998", VA = "0xC91998", Slot = "12")]
		protected override void Jump()
		{
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0xC91A64", Offset = "0xC91A64", VA = "0xC91A64")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x600217C")]
		[Address(RVA = "0xC91BD8", Offset = "0xC91BD8", VA = "0xC91BD8")]
		public FBasic_CharacterController()
		{
		}
	}
	[Token(Token = "0x2000491")]
	public class FBasic_CharacterInputAxis : FBasic_CharacterInputBase
	{
		[Token(Token = "0x600217D")]
		[Address(RVA = "0xC91F10", Offset = "0xC91F10", VA = "0xC91F10", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0xC9218C", Offset = "0xC9218C", VA = "0xC9218C")]
		public FBasic_CharacterInputAxis()
		{
		}
	}
	[Token(Token = "0x2000492")]
	public class FBasic_CharacterInputKeys : FBasic_CharacterInputBase
	{
		[Token(Token = "0x600217F")]
		[Address(RVA = "0xC922B8", Offset = "0xC922B8", VA = "0xC922B8", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0xC9245C", Offset = "0xC9245C", VA = "0xC9245C")]
		public FBasic_CharacterInputKeys()
		{
		}
	}
	[Token(Token = "0x2000493")]
	public class FBasic_FheelekController : FBasic_RigidbodyMovement
	{
		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E5FEC", Offset = "0x8E5FEC")]
		public float RotationSpeed;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool movingBackward;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected FBasic_FheelekAnimator fheelekAnimator;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float turbo;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Transform wheel;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform fBody;

		[Token(Token = "0x6002181")]
		[Address(RVA = "0x1163B94", Offset = "0x1163B94", VA = "0x1163B94", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6002182")]
		[Address(RVA = "0x1163DA0", Offset = "0x1163DA0", VA = "0x1163DA0", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0x11644E8", Offset = "0x11644E8", VA = "0x11644E8", Slot = "6")]
		protected override void FixedUpdate()
		{
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0x11646DC", Offset = "0x11646DC", VA = "0x11646DC", Slot = "7")]
		protected override void RotationCalculations()
		{
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0x116488C", Offset = "0x116488C", VA = "0x116488C", Slot = "10")]
		protected override void MoveForward(bool backward)
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x11649D8", Offset = "0x11649D8", VA = "0x11649D8", Slot = "12")]
		protected override void Jump()
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0x1164C98", Offset = "0x1164C98", VA = "0x1164C98", Slot = "11")]
		protected override void StoppingMovement()
		{
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0x1164ED8", Offset = "0x1164ED8", VA = "0x1164ED8")]
		public FBasic_FheelekController()
		{
		}
	}
	[Token(Token = "0x2000494")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC944", Offset = "0x8CC944")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC944", Offset = "0x8CC944")]
	public class FBasic_RigidbodyMovement : FBasic_CharacterHorizontalBase
	{
		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6024", Offset = "0x8E6024")]
		private Rigidbody <CharacterRigidbody>k__BackingField;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float SkinHeight;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		protected float fakeYVelocity;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool FacingWall;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool SideingWall;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected float diagonalMultiplier;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected CapsuleCollider capsuleCollider;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected Vector3 targetVelocity;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		protected bool jumpCollisionFrameOffset;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E6034", Offset = "0x8E6034")]
		public float PushDownYVelocity;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static LayerMask ChracterLayerMask;

		[Token(Token = "0x17000222")]
		public Rigidbody CharacterRigidbody
		{
			[Token(Token = "0x6002189")]
			[Address(RVA = "0x1163A14", Offset = "0x1163A14", VA = "0x1163A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC0E4", Offset = "0x8EC0E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600218A")]
			[Address(RVA = "0x1163D98", Offset = "0x1163D98", VA = "0x1163D98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC0F4", Offset = "0x8EC0F4")]
			protected set
			{
			}
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0x1163C8C", Offset = "0x1163C8C", VA = "0x1163C8C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x116455C", Offset = "0x116455C", VA = "0x116455C", Slot = "6")]
		protected override void FixedUpdate()
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x116A514", Offset = "0x116A514", VA = "0x116A514", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x11640F8", Offset = "0x11640F8", VA = "0x11640F8")]
		protected void CheckGroundPlacement()
		{
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x116A53C", Offset = "0x116A53C", VA = "0x116A53C", Slot = "8")]
		protected override void MovementCalculations()
		{
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0x116A6C4", Offset = "0x116A6C4", VA = "0x116A6C4", Slot = "7")]
		protected override void RotationCalculations()
		{
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x1164B28", Offset = "0x1164B28", VA = "0x1164B28", Slot = "12")]
		protected override void Jump()
		{
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0x116A6F8", Offset = "0x116A6F8", VA = "0x116A6F8")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x116AD64", Offset = "0x116AD64", VA = "0x116AD64")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0x116A920", Offset = "0x116A920", VA = "0x116A920")]
		private void CheckIfFacingWall(Collision collision)
		{
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0x1164F44", Offset = "0x1164F44", VA = "0x1164F44")]
		public FBasic_RigidbodyMovement()
		{
		}
	}
	[Token(Token = "0x2000495")]
	public abstract class FBasic_InteractionAreaBase : MonoBehaviour
	{
		[Token(Token = "0x20006C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD720", Offset = "0x8CD720")]
		private sealed class <UpdateIfInRange>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002537")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002538")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002539")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FBasic_InteractionAreaBase <>4__this;

			[Token(Token = "0x17000323")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027DC")]
				[Address(RVA = "0x1166768", Offset = "0x1166768", VA = "0x1166768", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000324")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027DE")]
				[Address(RVA = "0x11667D8", Offset = "0x11667D8", VA = "0x11667D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027D9")]
			[Address(RVA = "0x116656C", Offset = "0x116656C", VA = "0x116656C")]
			[DebuggerHidden]
			public <UpdateIfInRange>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x60027DA")]
			[Address(RVA = "0x1166700", Offset = "0x1166700", VA = "0x1166700", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027DB")]
			[Address(RVA = "0x1166704", Offset = "0x1166704", VA = "0x1166704", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027DD")]
			[Address(RVA = "0x1166770", Offset = "0x1166770", VA = "0x1166770", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected SphereCollider triggerArea;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E606C", Offset = "0x8E606C")]
		private bool <Entered>k__BackingField;

		[Token(Token = "0x17000223")]
		public bool Entered
		{
			[Token(Token = "0x6002197")]
			[Address(RVA = "0x116635C", Offset = "0x116635C", VA = "0x116635C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC104", Offset = "0x8EC104")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002198")]
			[Address(RVA = "0x1166364", Offset = "0x1166364", VA = "0x1166364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC114", Offset = "0x8EC114")]
			protected set
			{
			}
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x1166370", Offset = "0x1166370", VA = "0x1166370", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0x11664F0", Offset = "0x11664F0", VA = "0x11664F0", Slot = "5")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0x1166378", Offset = "0x1166378", VA = "0x1166378")]
		protected SphereCollider GetTrigger()
		{
			return null;
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0x11664F4", Offset = "0x11664F4", VA = "0x11664F4", Slot = "6")]
		protected virtual void UpdateIn()
		{
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0x11664F8", Offset = "0x11664F8", VA = "0x11664F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8EC124", Offset = "0x8EC124")]
		protected IEnumerator UpdateIfInRange()
		{
			return null;
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0x1166598", Offset = "0x1166598", VA = "0x1166598")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0x116664C", Offset = "0x116664C", VA = "0x116664C", Slot = "7")]
		protected virtual void OnEnter()
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x1166650", Offset = "0x1166650", VA = "0x1166650")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x11666F4", Offset = "0x11666F4", VA = "0x11666F4", Slot = "8")]
		protected virtual void OnExit()
		{
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x11666F8", Offset = "0x11666F8", VA = "0x11666F8")]
		protected FBasic_InteractionAreaBase()
		{
		}
	}
	[Token(Token = "0x2000496")]
	public class FBasic_InteractionAreaCanvas : FBasic_InteractionAreaBase
	{
		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Transform InteractionCanvasesContainer;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E607C", Offset = "0x8E607C")]
		public KeyCode InteractionKey;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E6090", Offset = "0x8E6090")]
		public Vector3 canvasObjectOffset;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E60A4", Offset = "0x8E60A4")]
		public UnityEvent EventOnInteraction;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string textInCanvas;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Canvas viewCanvas;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected RectTransform canvasRect;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected CanvasGroup canvasGroup;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected Text viewText;

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x11667E0", Offset = "0x11667E0", VA = "0x11667E0", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x1166F10", Offset = "0x1166F10", VA = "0x1166F10", Slot = "6")]
		protected override void UpdateIn()
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x11671AC", Offset = "0x11671AC", VA = "0x11671AC", Slot = "7")]
		protected override void OnEnter()
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x116752C", Offset = "0x116752C", VA = "0x116752C", Slot = "8")]
		protected override void OnExit()
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x1167560", Offset = "0x1167560", VA = "0x1167560")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x11676B8", Offset = "0x11676B8", VA = "0x11676B8")]
		public FBasic_InteractionAreaCanvas()
		{
		}
	}
	[Token(Token = "0x2000497")]
	public class FBasic_Pullable : FBasic_InteractionAreaCanvas
	{
		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E60B8", Offset = "0x8E60B8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E60B8", Offset = "0x8E60B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E60B8", Offset = "0x8E60B8")]
		public bool XAxis;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E612C", Offset = "0x8E612C")]
		public bool YAxis;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6164", Offset = "0x8E6164")]
		public bool ResetValue;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E619C", Offset = "0x8E619C")]
		public float Sensitivity;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E61D4", Offset = "0x8E61D4")]
		public float StartValueY;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E61EC", Offset = "0x8E61EC")]
		public float StartValueX;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6204", Offset = "0x8E6204")]
		private float <YValue>k__BackingField;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6214", Offset = "0x8E6214")]
		private float <YValueUnclamped>k__BackingField;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6224", Offset = "0x8E6224")]
		private float <XValue>k__BackingField;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6234", Offset = "0x8E6234")]
		private float <XValueUnclamped>k__BackingField;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected bool mouseEntered;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector2 holdStartPosition;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float holdStartValueY;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float holdStartValueX;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private CursorLockMode previousCursorLockMode;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool previousCursorVisibility;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool startedByMouseClick;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E6244", Offset = "0x8E6244")]
		private bool <Holding>k__BackingField;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6254", Offset = "0x8E6254")]
		public bool OverrideCanBePulledByMouse;

		[Token(Token = "0x17000224")]
		public float YValue
		{
			[Token(Token = "0x60021A9")]
			[Address(RVA = "0x1162218", Offset = "0x1162218", VA = "0x1162218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC188", Offset = "0x8EC188")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021AA")]
			[Address(RVA = "0x1169370", Offset = "0x1169370", VA = "0x1169370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC198", Offset = "0x8EC198")]
			private set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public float YValueUnclamped
		{
			[Token(Token = "0x60021AB")]
			[Address(RVA = "0x1169378", Offset = "0x1169378", VA = "0x1169378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC1A8", Offset = "0x8EC1A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021AC")]
			[Address(RVA = "0x1169380", Offset = "0x1169380", VA = "0x1169380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC1B8", Offset = "0x8EC1B8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public float XValue
		{
			[Token(Token = "0x60021AD")]
			[Address(RVA = "0x1169388", Offset = "0x1169388", VA = "0x1169388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC1C8", Offset = "0x8EC1C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021AE")]
			[Address(RVA = "0x1169390", Offset = "0x1169390", VA = "0x1169390")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC1D8", Offset = "0x8EC1D8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public float XValueUnclamped
		{
			[Token(Token = "0x60021AF")]
			[Address(RVA = "0x1169398", Offset = "0x1169398", VA = "0x1169398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC1E8", Offset = "0x8EC1E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021B0")]
			[Address(RVA = "0x11693A0", Offset = "0x11693A0", VA = "0x11693A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC1F8", Offset = "0x8EC1F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public bool Holding
		{
			[Token(Token = "0x60021B1")]
			[Address(RVA = "0x11693A8", Offset = "0x11693A8", VA = "0x11693A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC208", Offset = "0x8EC208")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60021B2")]
			[Address(RVA = "0x11693B0", Offset = "0x11693B0", VA = "0x11693B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC218", Offset = "0x8EC218")]
			protected set
			{
			}
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x11693BC", Offset = "0x11693BC", VA = "0x11693BC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0x1169484", Offset = "0x1169484", VA = "0x1169484", Slot = "9")]
		protected virtual void UpdatePullableOrientation()
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x1169488", Offset = "0x1169488", VA = "0x1169488")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x1169504", Offset = "0x1169504", VA = "0x1169504", Slot = "10")]
		protected virtual void MouseEnter()
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x1169510", Offset = "0x1169510", VA = "0x1169510", Slot = "11")]
		protected virtual void OnMouseDown()
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x1169540", Offset = "0x1169540", VA = "0x1169540", Slot = "12")]
		protected virtual void StartHolding()
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x1169640", Offset = "0x1169640", VA = "0x1169640", Slot = "6")]
		protected override void UpdateIn()
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x11697F4", Offset = "0x11697F4", VA = "0x11697F4", Slot = "8")]
		protected override void OnExit()
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x1169820", Offset = "0x1169820", VA = "0x1169820", Slot = "13")]
		protected virtual void StopHolding()
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x116989C", Offset = "0x116989C", VA = "0x116989C")]
		public FBasic_Pullable()
		{
		}
	}
	[Token(Token = "0x2000498")]
	public class FBasic_PullableKnob : FBasic_Pullable
	{
		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E628C", Offset = "0x8E628C")]
		private float <KnobValue>k__BackingField;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform body;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Material markerMaterial;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Material valueMaterial;

		[Token(Token = "0x17000229")]
		public float KnobValue
		{
			[Token(Token = "0x60021BD")]
			[Address(RVA = "0x11698B0", Offset = "0x11698B0", VA = "0x11698B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC228", Offset = "0x8EC228")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021BE")]
			[Address(RVA = "0x11698B8", Offset = "0x11698B8", VA = "0x11698B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC238", Offset = "0x8EC238")]
			private set
			{
			}
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x11698C0", Offset = "0x11698C0", VA = "0x11698C0", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x1169A28", Offset = "0x1169A28", VA = "0x1169A28", Slot = "9")]
		protected override void UpdatePullableOrientation()
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x1169B88", Offset = "0x1169B88", VA = "0x1169B88", Slot = "6")]
		protected override void UpdateIn()
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x1169C8C", Offset = "0x1169C8C", VA = "0x1169C8C", Slot = "8")]
		protected override void OnExit()
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x1169D40", Offset = "0x1169D40", VA = "0x1169D40", Slot = "12")]
		protected override void StartHolding()
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x1169E3C", Offset = "0x1169E3C", VA = "0x1169E3C", Slot = "13")]
		protected override void StopHolding()
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x1169F38", Offset = "0x1169F38", VA = "0x1169F38")]
		public FBasic_PullableKnob()
		{
		}
	}
	[Token(Token = "0x2000499")]
	public class FBasic_PullableLever : FBasic_Pullable
	{
		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E629C", Offset = "0x8E629C")]
		private float <LeverValueY>k__BackingField;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E62AC", Offset = "0x8E62AC")]
		private float <LeverValueX>k__BackingField;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Vector2 RotationRangesY;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public Vector2 RotationRangesX;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform LeverTransform;

		[Token(Token = "0x1700022A")]
		public float LeverValueY
		{
			[Token(Token = "0x60021C6")]
			[Address(RVA = "0x1169F4C", Offset = "0x1169F4C", VA = "0x1169F4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC248", Offset = "0x8EC248")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021C7")]
			[Address(RVA = "0x1169F54", Offset = "0x1169F54", VA = "0x1169F54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC258", Offset = "0x8EC258")]
			private set
			{
			}
		}

		[Token(Token = "0x1700022B")]
		public float LeverValueX
		{
			[Token(Token = "0x60021C8")]
			[Address(RVA = "0x1169F5C", Offset = "0x1169F5C", VA = "0x1169F5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC268", Offset = "0x8EC268")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021C9")]
			[Address(RVA = "0x1169F64", Offset = "0x1169F64", VA = "0x1169F64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC278", Offset = "0x8EC278")]
			private set
			{
			}
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x1169F6C", Offset = "0x1169F6C", VA = "0x1169F6C", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x116A010", Offset = "0x116A010", VA = "0x116A010", Slot = "9")]
		protected override void UpdatePullableOrientation()
		{
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x116A198", Offset = "0x116A198", VA = "0x116A198", Slot = "6")]
		protected override void UpdateIn()
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x116A294", Offset = "0x116A294", VA = "0x116A294", Slot = "12")]
		protected override void StartHolding()
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x116A390", Offset = "0x116A390", VA = "0x116A390", Slot = "13")]
		protected override void StopHolding()
		{
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x116A48C", Offset = "0x116A48C", VA = "0x116A48C")]
		public FBasic_PullableLever()
		{
		}
	}
	[Token(Token = "0x200049A")]
	public class FBasic_ProjectileBase : MonoBehaviour
	{
		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E62BC", Offset = "0x8E62BC")]
		public float FlySpeed;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E62F4", Offset = "0x8E62F4")]
		public float DistanceLimit;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 initPosition;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E632C", Offset = "0x8E632C")]
		private static LayerMask <ProjectiletHitMask>k__BackingField;

		[Token(Token = "0x1700022C")]
		public static LayerMask ProjectiletHitMask
		{
			[Token(Token = "0x60021D0")]
			[Address(RVA = "0x1168CE4", Offset = "0x1168CE4", VA = "0x1168CE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC288", Offset = "0x8EC288")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x60021D1")]
			[Address(RVA = "0x1168D34", Offset = "0x1168D34", VA = "0x1168D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8EC298", Offset = "0x8EC298")]
			protected set
			{
			}
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x1168D88", Offset = "0x1168D88", VA = "0x1168D88", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x116906C", Offset = "0x116906C", VA = "0x116906C", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0x1162128", Offset = "0x1162128", VA = "0x1162128", Slot = "6")]
		protected virtual void HitTarget(RaycastHit hit)
		{
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0x1168F88", Offset = "0x1168F88", VA = "0x1168F88")]
		internal Vector3 StepForward()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0x11621B8", Offset = "0x11621B8", VA = "0x11621B8")]
		public FBasic_ProjectileBase()
		{
		}
	}
	[Token(Token = "0x200049B")]
	public class FBasic_Shared_BulletHittable : MonoBehaviour
	{
		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnProjectileHit;

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x116B63C", Offset = "0x116B63C", VA = "0x116B63C")]
		public FBasic_Shared_BulletHittable()
		{
		}
	}
	[Token(Token = "0x200049C")]
	public abstract class FBasic_MaterialScriptBase : MonoBehaviour
	{
		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Material RendererMaterial;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Renderer ObjectRenderer;

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x1163078", Offset = "0x1163078", VA = "0x1163078")]
		protected Material GetRendererMaterial()
		{
			return null;
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x11634A0", Offset = "0x11634A0", VA = "0x11634A0")]
		protected FBasic_MaterialScriptBase()
		{
		}
	}
	[Token(Token = "0x200049D")]
	public class FBasic_AnimatorPlayState : MonoBehaviour
	{
		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string AnimationStateName;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int AnimationLayer;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E633C", Offset = "0x8E633C")]
		public Vector2 TimeOffset;

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0xC91130", Offset = "0xC91130", VA = "0xC91130")]
		private void Start()
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0xC91230", Offset = "0xC91230", VA = "0xC91230")]
		public FBasic_AnimatorPlayState()
		{
		}
	}
	[Token(Token = "0x200049E")]
	public class FBasic_CourutineHelper : MonoBehaviour
	{
		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x1161BE8", Offset = "0x1161BE8", VA = "0x1161BE8")]
		public FBasic_CourutineHelper()
		{
		}
	}
	[Token(Token = "0x200049F")]
	public class FBasic_DestroyAfter : MonoBehaviour
	{
		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SecondsToDestroy;

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x1162228", Offset = "0x1162228", VA = "0x1162228")]
		private void Start()
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x11622C0", Offset = "0x11622C0", VA = "0x11622C0")]
		public FBasic_DestroyAfter()
		{
		}
	}
	[Token(Token = "0x20004A0")]
	public class FBasic_DestroyOthersWithMe : MonoBehaviour
	{
		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<UnityEngine.Object> ToDestroyAfterDestroy;

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x11622D0", Offset = "0x11622D0", VA = "0x11622D0")]
		public void AddToDestroy(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x116236C", Offset = "0x116236C", VA = "0x116236C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x11624A4", Offset = "0x11624A4", VA = "0x11624A4")]
		public FBasic_DestroyOthersWithMe()
		{
		}
	}
	[Token(Token = "0x20004A1")]
	public class FBasic_DuplicateObjects : MonoBehaviour
	{
		[Token(Token = "0x20006C3")]
		public enum FEDuplicateDirection
		{
			[Token(Token = "0x400253B")]
			GoIterative,
			[Token(Token = "0x400253C")]
			GoFromCenter
		}

		[Token(Token = "0x20006C4")]
		public enum FEDuplicateOrigin
		{
			[Token(Token = "0x400253E")]
			FromToDuplicate,
			[Token(Token = "0x400253F")]
			FromComponent
		}

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6374", Offset = "0x8E6374")]
		public GameObject ToDuplicate;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E63AC", Offset = "0x8E63AC")]
		public Vector3 DuplicatesCount;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E63E4", Offset = "0x8E63E4")]
		public Vector3 Offsets;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E641C", Offset = "0x8E641C")]
		public bool PlaceOnGround;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public FEDuplicateDirection DuplicationType;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FEDuplicateOrigin DuplicationOrigin;

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x11624AC", Offset = "0x11624AC", VA = "0x11624AC")]
		public void Duplicate()
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x1162BD0", Offset = "0x1162BD0", VA = "0x1162BD0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x1162FD8", Offset = "0x1162FD8", VA = "0x1162FD8")]
		public FBasic_DuplicateObjects()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public class FBasic_FadeOutMaterialAndDestroy : FBasic_MaterialScriptBase
	{
		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string shaderParamName;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FadeSpeed;

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x1163074", Offset = "0x1163074", VA = "0x1163074")]
		private void Start()
		{
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x11632E8", Offset = "0x11632E8", VA = "0x11632E8")]
		private void Update()
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x1163440", Offset = "0x1163440", VA = "0x1163440")]
		public FBasic_FadeOutMaterialAndDestroy()
		{
		}
	}
	[Token(Token = "0x20004A3")]
	public class FBasic_MaterialFloatAnimate : FBasic_MaterialScriptBase
	{
		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6454", Offset = "0x8E6454")]
		public string TextureProperty;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float PropertyInitValue;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float RangeValue;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float AnimateSpeed;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float time;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float randomValue;

		[Token(Token = "0x60021E8")]
		[Address(RVA = "0x1167718", Offset = "0x1167718", VA = "0x1167718")]
		private void Start()
		{
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0x1167778", Offset = "0x1167778", VA = "0x1167778")]
		private void Update()
		{
		}

		[Token(Token = "0x60021EA")]
		[Address(RVA = "0x1167860", Offset = "0x1167860", VA = "0x1167860")]
		public FBasic_MaterialFloatAnimate()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	public class FBasic_MaterialOffset : FBasic_MaterialScriptBase
	{
		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E648C", Offset = "0x8E648C")]
		public string TextureProperty;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E64C4", Offset = "0x8E64C4")]
		public Vector2 OffsetSpeed;

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0x11678CC", Offset = "0x11678CC", VA = "0x11678CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0x11678D0", Offset = "0x11678D0", VA = "0x11678D0")]
		private void Update()
		{
		}

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0x11679E8", Offset = "0x11679E8", VA = "0x11679E8")]
		public FBasic_MaterialOffset()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	public class FBasic_MaterialRandomColor : FBasic_MaterialScriptBase
	{
		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E64FC", Offset = "0x8E64FC")]
		public string TextureProperty;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 HueRange;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 SaturationRange;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 ValueRange;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 AlphaRange;

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0x1167A6C", Offset = "0x1167A6C", VA = "0x1167A6C")]
		private void Start()
		{
		}

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0x1167B30", Offset = "0x1167B30", VA = "0x1167B30")]
		public FBasic_MaterialRandomColor()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public class FBasic_MaterialTiler : FBasic_MaterialScriptBase
	{
		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E6534", Offset = "0x8E6534")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E6534", Offset = "0x8E6534")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8E6534", Offset = "0x8E6534")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6534", Offset = "0x8E6534")]
		public string TextureProperty;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E65CC", Offset = "0x8E65CC")]
		public Vector2 ScaleValues;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6604", Offset = "0x8E6604")]
		public bool EqualDimensions;

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0x1167C28", Offset = "0x1167C28", VA = "0x1167C28")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0x1167C5C", Offset = "0x1167C5C", VA = "0x1167C5C")]
		private void TileMaterialToScale()
		{
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0x1167DDC", Offset = "0x1167DDC", VA = "0x1167DDC")]
		public FBasic_MaterialTiler()
		{
		}
	}
	[Token(Token = "0x20004A7")]
	public class FBasic_TriggerEvents : MonoBehaviour
	{
		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string EnteringTag;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnAwakeEvent;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnStartEvent;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OnTriggerEnterEvents;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnTriggerExitEvents;

		[Token(Token = "0x60021F3")]
		[Address(RVA = "0x116D158", Offset = "0x116D158", VA = "0x116D158")]
		private void Awake()
		{
		}

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0x116D16C", Offset = "0x116D16C", VA = "0x116D16C")]
		private void Start()
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0x116D180", Offset = "0x116D180", VA = "0x116D180")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0x116D1F8", Offset = "0x116D1F8", VA = "0x116D1F8")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0x116D270", Offset = "0x116D270", VA = "0x116D270")]
		public FBasic_TriggerEvents()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	public class FBasic_Demo_Cannon : MonoBehaviour
	{
		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E663C", Offset = "0x8E663C")]
		public Vector2 RandomTimerRange;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject BulletPrefab;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject MuzzlePrefab;

		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform ShotPoint;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float timer;

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0x1161BF0", Offset = "0x1161BF0", VA = "0x1161BF0")]
		private void Start()
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0x1161C48", Offset = "0x1161C48", VA = "0x1161C48")]
		private void Update()
		{
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0x1161CA0", Offset = "0x1161CA0", VA = "0x1161CA0")]
		public void Shot()
		{
		}

		[Token(Token = "0x60021FB")]
		[Address(RVA = "0x1161C1C", Offset = "0x1161C1C", VA = "0x1161C1C")]
		private void ResetTimer()
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0x1161EF0", Offset = "0x1161EF0", VA = "0x1161EF0")]
		public FBasic_Demo_Cannon()
		{
		}
	}
	[Token(Token = "0x20004A9")]
	public class FBasic_Demo_HideText : MonoBehaviour
	{
		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text text;

		[Token(Token = "0x60021FD")]
		[Address(RVA = "0x1161F38", Offset = "0x1161F38", VA = "0x1161F38")]
		private void Start()
		{
		}

		[Token(Token = "0x60021FE")]
		[Address(RVA = "0x1161F90", Offset = "0x1161F90", VA = "0x1161F90")]
		private void Update()
		{
		}

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x1162014", Offset = "0x1162014", VA = "0x1162014")]
		public FBasic_Demo_HideText()
		{
		}
	}
	[Token(Token = "0x20004AA")]
	public class FBasic_Demo_Projectile : FBasic_ProjectileBase
	{
		[Token(Token = "0x6002200")]
		[Address(RVA = "0x116201C", Offset = "0x116201C", VA = "0x116201C", Slot = "6")]
		protected override void HitTarget(RaycastHit hit)
		{
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0x11621A4", Offset = "0x11621A4", VA = "0x11621A4")]
		public FBasic_Demo_Projectile()
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public class FBasic_Demo_PullableExample : MonoBehaviour
	{
		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FBasic_Pullable TargetPullable;

		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FBasic_Rotator TargetRotator;

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x11621CC", Offset = "0x11621CC", VA = "0x11621CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x1162220", Offset = "0x1162220", VA = "0x1162220")]
		public FBasic_Demo_PullableExample()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	public enum EFUpdateClock
	{
		[Token(Token = "0x4001D86")]
		Update,
		[Token(Token = "0x4001D87")]
		LateUpdate,
		[Token(Token = "0x4001D88")]
		FixedUpdate
	}
	[Serializable]
	[Token(Token = "0x20004AD")]
	public class FBasic_FheelekAnimator
	{
		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool AnimationHolder;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected FBasic_FheelekController controller;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Animator animator;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected string lastAnimation;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool waitForIdle;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected float landingTimer;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected string defaultIdle;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected string defaultRun;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int locomotionLayer;

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x11634A8", Offset = "0x11634A8", VA = "0x11634A8")]
		public FBasic_FheelekAnimator(FBasic_FheelekController contr)
		{
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x1163558", Offset = "0x1163558", VA = "0x1163558")]
		internal void Animate(float acc)
		{
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x1163AA0", Offset = "0x1163AA0", VA = "0x1163AA0")]
		public void PlayAnimationHoldUntilIdle(string animation, float crossfadeTime = 0.2f, int animationLayer = 0)
		{
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x1163ACC", Offset = "0x1163ACC", VA = "0x1163ACC")]
		internal void SetDefaultIdle(string stateName)
		{
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x1163AD4", Offset = "0x1163AD4", VA = "0x1163AD4")]
		internal void SetDefaultRun(string stateName)
		{
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x1163A1C", Offset = "0x1163A1C", VA = "0x1163A1C")]
		protected void CrossfadeTo(string animation, float time = 0.25f, int animationLayer = 0)
		{
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x1163ADC", Offset = "0x1163ADC", VA = "0x1163ADC", Slot = "4")]
		public virtual void Jump()
		{
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x1163AE0", Offset = "0x1163AE0", VA = "0x1163AE0", Slot = "5")]
		protected virtual void Landing()
		{
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x1163A90", Offset = "0x1163A90", VA = "0x1163A90")]
		private void LerpValue(string parameter, float value)
		{
		}
	}
	[Token(Token = "0x20004AE")]
	public class FBasic_NotRepetiveSelector<T>
	{
		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int backRange;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<int> previousElements;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<T> elements;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int added;

		[Token(Token = "0x600220D")]
		public FBasic_NotRepetiveSelector(List<T> elements, int backRange)
		{
		}

		[Token(Token = "0x600220E")]
		public static List<T> ArrayToList(T[] elements)
		{
			return null;
		}

		[Token(Token = "0x600220F")]
		public T GetElementNotRepetive()
		{
			return (T)null;
		}

		[Token(Token = "0x6002210")]
		private int ChooseElementDontRepeat(List<T> elements, List<int> previousClips, int backCount)
		{
			return default(int);
		}
	}
}
namespace FIMSpace.Basics.Demo
{
	[Token(Token = "0x20004AF")]
	public class FBasic_Demo_CharacterChoosePanel : MonoBehaviour
	{
		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FBasic_CharacterInputKeys TargetController;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ToActivate;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int ChooseCamera;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FBasic_CharacterInputKeys mainController;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FBasic_CharacterInputKeys currentController;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static GameObject mainText;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FBasic_TPPCameraBehaviour tppCam;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FBasic_FreeCameraBehaviour freeCam;

		[Token(Token = "0x6002211")]
		[Address(RVA = "0xC8F428", Offset = "0xC8F428", VA = "0xC8F428")]
		private void Start()
		{
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0xC8F5B0", Offset = "0xC8F5B0", VA = "0xC8F5B0")]
		public void Switch()
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0xC8FA30", Offset = "0xC8FA30", VA = "0xC8FA30")]
		private void SwitchActiveText(bool restoreMain = false)
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0xC8FB58", Offset = "0xC8FB58", VA = "0xC8FB58")]
		public FBasic_Demo_CharacterChoosePanel()
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class FBasic_Demo_Controller : MonoBehaviour
	{
		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text descriptionText;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text numberText;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text nameText;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObject> dontDestroyOnLoad;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int currentScene;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<string> scenes;

		[Token(Token = "0x6002215")]
		[Address(RVA = "0xC8FB68", Offset = "0xC8FB68", VA = "0xC8FB68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0xC8FCD0", Offset = "0xC8FCD0", VA = "0xC8FCD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0xC8FFC0", Offset = "0xC8FFC0", VA = "0xC8FFC0")]
		public void NextScene()
		{
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0xC90088", Offset = "0xC90088", VA = "0xC90088")]
		public void PreviousScene()
		{
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0xC8FE3C", Offset = "0xC8FE3C", VA = "0xC8FE3C")]
		private void ResetTexts()
		{
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0xC90140", Offset = "0xC90140", VA = "0xC90140")]
		private string GetDescription(int scene)
		{
			return null;
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0xC91068", Offset = "0xC91068", VA = "0xC91068")]
		private string KeyColor(string input)
		{
			return null;
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0xC91008", Offset = "0xC91008", VA = "0xC91008")]
		private string ClassColor(string className)
		{
			return null;
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0xC910C8", Offset = "0xC910C8", VA = "0xC910C8")]
		private string MethodColor(string className)
		{
			return null;
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0xC91128", Offset = "0xC91128", VA = "0xC91128")]
		public FBasic_Demo_Controller()
		{
		}
	}
}
namespace FIMSpace.BonesStimulation
{
	[Token(Token = "0x20004B1")]
	public class FBonesStim_Demo_StimulatorsLever : MonoBehaviour
	{
		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FBasic_PullableLever Lever;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<FBonesStim_Vibrate> Vibrates;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<FBonesStim_Squasher> Squashers;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[] vibInits;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float[] sqInits;

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x116D2C8", Offset = "0x116D2C8", VA = "0x116D2C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x116D514", Offset = "0x116D514", VA = "0x116D514")]
		public void Update()
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x116D2CC", Offset = "0x116D2CC", VA = "0x116D2CC")]
		private void GetAllComponents()
		{
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x116D75C", Offset = "0x116D75C", VA = "0x116D75C")]
		public FBonesStim_Demo_StimulatorsLever()
		{
		}
	}
	[Token(Token = "0x20004B2")]
	public class FBonesStim_Squasher : MonoBehaviour
	{
		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Speed;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MainScalerMultiplier;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 AxesScaleMultiply;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float time;

		[Token(Token = "0x6002223")]
		[Address(RVA = "0x116D764", Offset = "0x116D764", VA = "0x116D764")]
		private void Start()
		{
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0x116D79C", Offset = "0x116D79C", VA = "0x116D79C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0x116D8EC", Offset = "0x116D8EC", VA = "0x116D8EC")]
		public FBonesStim_Squasher()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public class FBonesStim_Vibrate : MonoBehaviour
	{
		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E6674", Offset = "0x8E6674")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6674", Offset = "0x8E6674")]
		public float BaseSpeed;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E66D4", Offset = "0x8E66D4")]
		public float BaseRange;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E670C", Offset = "0x8E670C")]
		public Vector3 AxesMultiplier;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E6744", Offset = "0x8E6744")]
		public float PositionMultiplier;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float RotationMultiplier;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float ScaleMultiplier;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8E677C", Offset = "0x8E677C")]
		public bool BonePosIsNotAnimated;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool BoneRotIsNotAnimated;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool BoneScaleIsNotAnimated;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 initPos;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion initRot;

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 initScale;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] randomFloats;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 initPosition;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float time;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float trueSpeed;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float speed;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float range;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float intensity;

		[Token(Token = "0x6002226")]
		[Address(RVA = "0x116D960", Offset = "0x116D960", VA = "0x116D960")]
		private void Start()
		{
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0x116DBF0", Offset = "0x116DBF0", VA = "0x116DBF0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0x116E6A4", Offset = "0x116E6A4", VA = "0x116E6A4")]
		public void ExplosionShake(float value = 12f)
		{
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0x116E2FC", Offset = "0x116E2FC", VA = "0x116E2FC")]
		private void ChangePosition(Vector3 newTranslationsValue)
		{
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0x116E404", Offset = "0x116E404", VA = "0x116E404")]
		private void ChangeRotation(Vector3 newTranslationsValue)
		{
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0x116E57C", Offset = "0x116E57C", VA = "0x116E57C")]
		private void ChangeScale(Vector3 newTranslationsValue)
		{
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0x116DAC0", Offset = "0x116DAC0", VA = "0x116DAC0")]
		private void ChooseNewSeed()
		{
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x116E748", Offset = "0x116E748", VA = "0x116E748")]
		public FBonesStim_Vibrate()
		{
		}
	}
}
namespace FastShadowProjector
{
	[Token(Token = "0x20004B4")]
	public static class FSPDebugUtils
	{
		[Token(Token = "0x600222E")]
		[Address(RVA = "0xC0358C", Offset = "0xC0358C", VA = "0xC0358C")]
		public static void DrawCameraFrustumPlanes(Camera camera)
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public static class FSPUtils
	{
		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Action<Plane[], Matrix4x4> _calculateFrustumPlanes_Imp;

		[Token(Token = "0x600222F")]
		[Address(RVA = "0xC04100", Offset = "0xC04100", VA = "0xC04100")]
		public static void CalculateFrustumPlanes(Plane[] planes, Camera camera)
		{
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0xC03CB4", Offset = "0xC03CB4", VA = "0xC03CB4")]
		public static Vector3 Get3PlaneConcurrencePoint(Plane planeA, Plane planeB, Plane planeC)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0xC04578", Offset = "0xC04578", VA = "0xC04578")]
		public static float Determinant3x3(Vector3 col1, Vector3 col2, Vector3 col3)
		{
			return default(float);
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0xC04214", Offset = "0xC04214", VA = "0xC04214")]
		private static void CalculateFrustumPlanesNonAlloc(Plane[] planes, Matrix4x4 worldToProjectMatrix)
		{
		}
	}
}
namespace FSP_Samples
{
	[Token(Token = "0x20004B6")]
	public class CubeGen : MonoBehaviour
	{
		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject _cubePrefab;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _cubeCount;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _genWidth;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _angle;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float _groundOffset;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float _scale;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool _rotate;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _cubeGameObject;

		[Token(Token = "0x6002233")]
		[Address(RVA = "0xBFFD8C", Offset = "0xBFFD8C", VA = "0xBFFD8C")]
		private void Start()
		{
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0xBFFD90", Offset = "0xBFFD90", VA = "0xBFFD90")]
		private void Generate()
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0xC001E8", Offset = "0xC001E8", VA = "0xC001E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0xC00304", Offset = "0xC00304", VA = "0xC00304")]
		public CubeGen()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public class CubeMove : MonoBehaviour
	{
		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _initialPos;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion _initialRot;

		[Token(Token = "0x6002237")]
		[Address(RVA = "0xC00330", Offset = "0xC00330", VA = "0xC00330")]
		private void Start()
		{
		}

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xC00478", Offset = "0xC00478", VA = "0xC00478")]
		private void Update()
		{
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0xC0047C", Offset = "0xC0047C", VA = "0xC0047C")]
		public void Reset()
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0xC005F0", Offset = "0xC005F0", VA = "0xC005F0")]
		public CubeMove()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public class FloatAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _initialPos;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _angle;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _angleY;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float _xFloatDist;

		[Token(Token = "0x600223B")]
		[Address(RVA = "0xC00CEC", Offset = "0xC00CEC", VA = "0xC00CEC")]
		private void Start()
		{
		}

		[Token(Token = "0x600223C")]
		[Address(RVA = "0xC00D6C", Offset = "0xC00D6C", VA = "0xC00D6C")]
		private void Update()
		{
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0xC00FD0", Offset = "0xC00FD0", VA = "0xC00FD0")]
		public FloatAnimation()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public class FPSCounter
	{
		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double m_LastTickCount;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_FPS;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_FrameTime;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_DropFrameTime;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_LastDropTime;

		[Token(Token = "0x4001DD4")]
		private const float FPSDropThres = 0.002f;

		[Token(Token = "0x4001DD5")]
		private const float DropTimeout = 0.5f;

		[Token(Token = "0x4001DD6")]
		private const float AvgFactor = 0.1f;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_Dt;

		[Token(Token = "0x1700022D")]
		public float timeDelta
		{
			[Token(Token = "0x600223E")]
			[Address(RVA = "0xC005F8", Offset = "0xC005F8", VA = "0xC005F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600223F")]
		[Address(RVA = "0xC00600", Offset = "0xC00600", VA = "0xC00600")]
		public FPSCounter()
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0xC0062C", Offset = "0xC0062C", VA = "0xC0062C")]
		public void Update()
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xC00784", Offset = "0xC00784", VA = "0xC00784")]
		public float GetFPS()
		{
			return default(float);
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0xC0078C", Offset = "0xC0078C", VA = "0xC0078C")]
		public float GetDropFPS()
		{
			return default(float);
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0xC007B0", Offset = "0xC007B0", VA = "0xC007B0")]
		public float GetAverageFrameTime()
		{
			return default(float);
		}
	}
	[Token(Token = "0x20004BA")]
	public class FPSLabel : MonoBehaviour
	{
		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FPSCounter m_FPSCounter;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GUIText m_Label;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool m_ShowFPSDrop;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StringBuilder m_FPSTextBuilder;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private char[] m_FPSChars;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private char[] m_FPSDropChars;

		[Token(Token = "0x4001DDE")]
		private const int FPSTextLen = 10;

		[Token(Token = "0x4001DDF")]
		private const float LabelUpdateFrequency = 0.5f;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_TimeSinceLastLabelUpdate;

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xC007B8", Offset = "0xC007B8", VA = "0xC007B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0xC008A4", Offset = "0xC008A4", VA = "0xC008A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0xC00AA8", Offset = "0xC00AA8", VA = "0xC00AA8")]
		private void FloatToCharArray(char[] charArray, float number)
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xC00CAC", Offset = "0xC00CAC", VA = "0xC00CAC")]
		private int GetDecLen(float number)
		{
			return default(int);
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xC00CE4", Offset = "0xC00CE4", VA = "0xC00CE4")]
		public FPSLabel()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	public class Menu : MonoBehaviour
	{
		[Token(Token = "0x6002249")]
		[Address(RVA = "0xC00FE0", Offset = "0xC00FE0", VA = "0xC00FE0")]
		private void Start()
		{
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xC00FEC", Offset = "0xC00FEC", VA = "0xC00FEC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0xC01228", Offset = "0xC01228", VA = "0xC01228")]
		public Menu()
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class MovementAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001DE1")]
		private const float _animSpeed = 0.7f;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float _movementLength;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 _initialPos;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _angle;

		[Token(Token = "0x600224C")]
		[Address(RVA = "0xC01230", Offset = "0xC01230", VA = "0xC01230")]
		private void Start()
		{
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xC01274", Offset = "0xC01274", VA = "0xC01274")]
		private void Update()
		{
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xC013B4", Offset = "0xC013B4", VA = "0xC013B4")]
		public MovementAnimation()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	public class RollingCubes : MonoBehaviour
	{
		[Token(Token = "0x600224F")]
		[Address(RVA = "0xC013C4", Offset = "0xC013C4", VA = "0xC013C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0xC013C8", Offset = "0xC013C8", VA = "0xC013C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0xC013CC", Offset = "0xC013CC", VA = "0xC013CC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0xC015BC", Offset = "0xC015BC", VA = "0xC015BC")]
		public RollingCubes()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class ScaleAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _scaleUp;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _curScale;

		[Token(Token = "0x4001DE7")]
		private const float MaxScale = 0.7f;

		[Token(Token = "0x4001DE8")]
		private const float AnimationSpeed = 3f;

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xC015C4", Offset = "0xC015C4", VA = "0xC015C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0xC01604", Offset = "0xC01604", VA = "0xC01604")]
		private void Update()
		{
		}

		[Token(Token = "0x6002255")]
		[Address(RVA = "0xC01758", Offset = "0xC01758", VA = "0xC01758")]
		public ScaleAnimation()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public class ScalingSphere : MonoBehaviour
	{
		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ShadowTrigger shadowAreaTrigger;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool inShadow;

		[Token(Token = "0x6002256")]
		[Address(RVA = "0xC01768", Offset = "0xC01768", VA = "0xC01768")]
		private void Start()
		{
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0xC01878", Offset = "0xC01878", VA = "0xC01878")]
		private void Update()
		{
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0xC019D0", Offset = "0xC019D0", VA = "0xC019D0")]
		private void OnShadowEnter()
		{
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xC019DC", Offset = "0xC019DC", VA = "0xC019DC")]
		private void OnShadowStay()
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xC019E0", Offset = "0xC019E0", VA = "0xC019E0")]
		private void OnShadowExit()
		{
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0xC019E8", Offset = "0xC019E8", VA = "0xC019E8")]
		public ScalingSphere()
		{
		}
	}
	[Token(Token = "0x20004C0")]
	public class ShadowSwitch : MonoBehaviour
	{
		[Token(Token = "0x600225C")]
		[Address(RVA = "0xC019F0", Offset = "0xC019F0", VA = "0xC019F0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0xC01C64", Offset = "0xC01C64", VA = "0xC01C64")]
		public ShadowSwitch()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	public class SpinAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _angle;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float AnimationSpeed;

		[Token(Token = "0x600225E")]
		[Address(RVA = "0xC01C6C", Offset = "0xC01C6C", VA = "0xC01C6C")]
		private void Update()
		{
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xC01D80", Offset = "0xC01D80", VA = "0xC01D80")]
		public SpinAnimation()
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public class TerrainShadowSwitch : MonoBehaviour
	{
		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Terrain duplicateTerrain;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material terrainMat;

		[Token(Token = "0x6002260")]
		[Address(RVA = "0xC01D88", Offset = "0xC01D88", VA = "0xC01D88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xC01EC4", Offset = "0xC01EC4", VA = "0xC01EC4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6002262")]
		[Address(RVA = "0xC02064", Offset = "0xC02064", VA = "0xC02064")]
		public TerrainShadowSwitch()
		{
		}
	}
}
namespace CalmWater
{
	[Token(Token = "0x20004C3")]
	public class MaterialSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshRenderer WaterPlane;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material ClassicMat;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material DX11Mat;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MirrorReflection m;

		[Token(Token = "0x6002263")]
		[Address(RVA = "0xCE0768", Offset = "0xCE0768", VA = "0xCE0768")]
		private void Start()
		{
		}

		[Token(Token = "0x6002264")]
		[Address(RVA = "0xCE07D0", Offset = "0xCE07D0", VA = "0xCE07D0")]
		public void SetDX11Mat()
		{
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0xCE0830", Offset = "0xCE0830", VA = "0xCE0830")]
		public void SetClassicMat()
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0xCE088C", Offset = "0xCE088C", VA = "0xCE088C")]
		public MaterialSwitcher()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public class SceneSwitcher : MonoBehaviour
	{
		[Token(Token = "0x6002267")]
		[Address(RVA = "0xCE0894", Offset = "0xCE0894", VA = "0xCE0894")]
		public void SwitchLevel(string level)
		{
		}

		[Token(Token = "0x6002268")]
		[Address(RVA = "0xCE08A0", Offset = "0xCE08A0", VA = "0xCE08A0")]
		public SceneSwitcher()
		{
		}
	}
}
namespace UnityStandardAssets.Utility
{
	[Token(Token = "0x20004C5")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x4001DF3")]
		private const float fpsMeasurePeriod = 0.5f;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_FpsAccumulator;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_FpsNextPeriod;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_CurrentFps;

		[Token(Token = "0x4001DF7")]
		private const string display = "{0} FPS";

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_uiText;

		[Token(Token = "0x6002269")]
		[Address(RVA = "0xD5769C", Offset = "0xD5769C", VA = "0xD5769C")]
		private void Start()
		{
		}

		[Token(Token = "0x600226A")]
		[Address(RVA = "0xD57778", Offset = "0xD57778", VA = "0xD57778")]
		private void Update()
		{
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0xD57864", Offset = "0xD57864", VA = "0xD57864")]
		public FPSCounter()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8CC9D0", Offset = "0x8CC9D0")]
	public class FPSCounterVR : MonoBehaviour
	{
		[Token(Token = "0x4001DF9")]
		private const float fpsMeasurePeriod = 0.5f;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_FpsAccumulator;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_FpsNextPeriod;

		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_CurrentFps;

		[Token(Token = "0x4001DFD")]
		private const string display = "{0} FPS";

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text m_Text;

		[Token(Token = "0x600226C")]
		[Address(RVA = "0xD5786C", Offset = "0xD5786C", VA = "0xD5786C")]
		private void Start()
		{
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0xD578D8", Offset = "0xD578D8", VA = "0xD578D8")]
		private void Update()
		{
		}

		[Token(Token = "0x600226E")]
		[Address(RVA = "0xD579C4", Offset = "0xD579C4", VA = "0xD579C4")]
		public FPSCounterVR()
		{
		}
	}
}
namespace MLSpace
{
	[Token(Token = "0x20004C7")]
	public class CameraScript : MonoBehaviour
	{
		[Token(Token = "0x20006C5")]
		private enum Move
		{
			[Token(Token = "0x4002541")]
			None,
			[Token(Token = "0x4002542")]
			Forward,
			[Token(Token = "0x4002543")]
			Backward,
			[Token(Token = "0x4002544")]
			Left,
			[Token(Token = "0x4002545")]
			Right
		}

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E67B4", Offset = "0x8E67B4")]
		public float speed;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E67EC", Offset = "0x8E67EC")]
		public float angularSpeed;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_totalXAngleDeg;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_totalYAngleDeg;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Move m_move;

		[Token(Token = "0x600226F")]
		[Address(RVA = "0xBCBD20", Offset = "0xBCBD20", VA = "0xBCBD20")]
		public void OnBtnForwDown()
		{
		}

		[Token(Token = "0x6002270")]
		[Address(RVA = "0xBCBD2C", Offset = "0xBCBD2C", VA = "0xBCBD2C")]
		public void OnBtnBackDown()
		{
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0xBCBD38", Offset = "0xBCBD38", VA = "0xBCBD38")]
		public void OnBtnRightDown()
		{
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0xBCBD44", Offset = "0xBCBD44", VA = "0xBCBD44")]
		public void OnBtnLeftDown()
		{
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0xBCBD50", Offset = "0xBCBD50", VA = "0xBCBD50")]
		public void BtnStop()
		{
		}

		[Token(Token = "0x6002274")]
		[Address(RVA = "0xBCBD58", Offset = "0xBCBD58", VA = "0xBCBD58")]
		private void Start()
		{
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0xBCBE78", Offset = "0xBCBE78", VA = "0xBCBE78")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6002276")]
		[Address(RVA = "0xBCC1A8", Offset = "0xBCC1A8", VA = "0xBCC1A8")]
		public CameraScript()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class GameControl : MonoBehaviour
	{
		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject onMobileOnly;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text infoUI;

		[Token(Token = "0x6002277")]
		[Address(RVA = "0xBCC1BC", Offset = "0xBCC1BC", VA = "0xBCC1BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0xBCC1C0", Offset = "0xBCC1C0", VA = "0xBCC1C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0xBCC1EC", Offset = "0xBCC1EC", VA = "0xBCC1EC")]
		private void info()
		{
		}

		[Token(Token = "0x600227A")]
		[Address(RVA = "0xBCC298", Offset = "0xBCC298", VA = "0xBCC298")]
		public GameControl()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	public class RotateLight : MonoBehaviour
	{
		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6824", Offset = "0x8E6824")]
		public GameObject[] m_NightLights;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E685C", Offset = "0x8E685C")]
		public float rotateSpeed;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E6894", Offset = "0x8E6894")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E6894", Offset = "0x8E6894")]
		public int timeToLightsOn;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8E68E8", Offset = "0x8E68E8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8E68E8", Offset = "0x8E68E8")]
		public float timeToLightsOff;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Light m_SunLight;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_rotation;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_NightLightsEnabled;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool m_afternoon;

		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		private bool m_initialized;

		[Token(Token = "0x600227B")]
		[Address(RVA = "0xBCC2A0", Offset = "0xBCC2A0", VA = "0xBCC2A0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0xBCC444", Offset = "0xBCC444", VA = "0xBCC444")]
		private void Start()
		{
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0xBCC448", Offset = "0xBCC448", VA = "0xBCC448")]
		private void Update()
		{
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0xBCC768", Offset = "0xBCC768", VA = "0xBCC768")]
		private void EnableNightLights()
		{
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0xBCCA4C", Offset = "0xBCCA4C", VA = "0xBCCA4C")]
		private void DisableNightLights()
		{
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0xBCC73C", Offset = "0xBCC73C", VA = "0xBCC73C")]
		private float wrapAngle360(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0xBCCD2C", Offset = "0xBCCD2C", VA = "0xBCCD2C")]
		public RotateLight()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	public class ToggleText : MonoBehaviour
	{
		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text m_textUI;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_showInstr;

		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool m_initialized;

		[Token(Token = "0x6002282")]
		[Address(RVA = "0xBCCD48", Offset = "0xBCCD48", VA = "0xBCCD48")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0xBCCE20", Offset = "0xBCCE20", VA = "0xBCCE20")]
		private void Start()
		{
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0xBCCE24", Offset = "0xBCCE24", VA = "0xBCCE24")]
		private void Update()
		{
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0xBCCEDC", Offset = "0xBCCEDC", VA = "0xBCCEDC")]
		private void ShowInstr()
		{
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0xBCCFB8", Offset = "0xBCCFB8", VA = "0xBCCFB8")]
		private void ShowF1()
		{
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0xBCD094", Offset = "0xBCD094", VA = "0xBCD094")]
		public ToggleText()
		{
		}
	}
}
namespace VRStandardAssets.Utils
{
	[Token(Token = "0x20004CB")]
	public class VRFPSCounter : MonoBehaviour
	{
		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_DeltaTime;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text m_Text;

		[Token(Token = "0x4001E14")]
		private const float k_SmoothingCoef = 0.1f;

		[Token(Token = "0x6002288")]
		[Address(RVA = "0xD67548", Offset = "0xD67548", VA = "0xD67548")]
		private void Start()
		{
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0xD675A0", Offset = "0xD675A0", VA = "0xD675A0")]
		private void Update()
		{
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0xD67710", Offset = "0xD67710", VA = "0xD67710")]
		public VRFPSCounter()
		{
		}
	}
}
