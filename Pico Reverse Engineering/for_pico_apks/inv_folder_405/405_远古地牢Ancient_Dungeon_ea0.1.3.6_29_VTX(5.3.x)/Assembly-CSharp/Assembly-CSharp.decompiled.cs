using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Net.Sockets;
using System.Net.WebSockets;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;
using Bhaptics.Tact.Unity;
using Il2CppDummyDll;
using InGameCodeEditor;
using InGameCodeEditor.Lexer;
using Irc;
using MoonSharp.Interpreter;
using OWO;
using RLD;
using RootMotion.FinalIK;
using TMPro;
using Unity.AI.Navigation;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityEngine.XR.Interaction.Toolkit;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[CreateAssetMenu(fileName = "Data", menuName = "Bhaptics/Create Config", order = 1)]
public class BhapticsConfig : ScriptableObject
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Windows Settings")]
	public bool launchPlayerIfNotRunning;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Android Settings")]
	public BhapticsAndroidManager AndroidManagerPrefab;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("If you set it true, you don't need to define permissions and external bHaptics VR Player(beta) on SideQuest will be required.")]
	public bool UseOnlyBackgroundMode;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x1010AF8", Offset = "0x1010AF8", VA = "0x1010AF8")]
	public BhapticsConfig()
	{
	}
}
[Token(Token = "0x2000003")]
public class BhapticsLogger
{
	[Token(Token = "0x2000004")]
	public enum LogLevel
	{
		[Token(Token = "0x4000006")]
		Debug,
		[Token(Token = "0x4000007")]
		Info,
		[Token(Token = "0x4000008")]
		Error
	}

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LogLevel level;

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x1010B08", Offset = "0x1010B08", VA = "0x1010B08")]
	public static void LogDebug(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x1010BE0", Offset = "0x1010BE0", VA = "0x1010BE0")]
	public static void LogInfo(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x1010CBC", Offset = "0x1010CBC", VA = "0x1010CBC")]
	public static void LogError(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x1010D50", Offset = "0x1010D50", VA = "0x1010D50")]
	public BhapticsLogger()
	{
	}
}
[Token(Token = "0x2000005")]
public class BhapticsManager
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IHaptic Haptic;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Init;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x1010DA4", Offset = "0x1010DA4", VA = "0x1010DA4")]
	public static IHaptic GetHaptic()
	{
		return null;
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x1011104", Offset = "0x1011104", VA = "0x1011104")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x1011108", Offset = "0x1011108", VA = "0x1011108")]
	public static void Dispose()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1011304", Offset = "0x1011304", VA = "0x1011304")]
	public BhapticsManager()
	{
	}
}
[Token(Token = "0x2000006")]
public class BhapticsVisualizer : MonoBehaviour
{
	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VisualFeedback[] visualFeedback;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x101130C", Offset = "0x101130C", VA = "0x101130C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x1011364", Offset = "0x1011364", VA = "0x1011364")]
	private void Update()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x10114A8", Offset = "0x10114A8", VA = "0x10114A8")]
	public BhapticsVisualizer()
	{
	}
}
[Token(Token = "0x2000007")]
public class Bhaptics_Setup : MonoBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Bhaptics_Setup instance;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BhapticsConfig Config;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HapticClip[] hapticClipsOnAwake;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x10114B0", Offset = "0x10114B0", VA = "0x10114B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x10115AC", Offset = "0x10115AC", VA = "0x10115AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x101167C", Offset = "0x101167C", VA = "0x101167C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x1011680", Offset = "0x1011680", VA = "0x1011680")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x1011948", Offset = "0x1011948", VA = "0x1011948")]
	public Bhaptics_Setup()
	{
	}
}
[Token(Token = "0x2000008")]
public class FCP_ExampleScript : MonoBehaviour
{
	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlexibleColorPicker fcp;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color externalColor;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color internalColor;

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1011950", Offset = "0x1011950", VA = "0x1011950")]
	private void Start()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x101195C", Offset = "0x101195C", VA = "0x101195C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x1011AAC", Offset = "0x1011AAC", VA = "0x1011AAC")]
	public FCP_ExampleScript()
	{
	}
}
[Token(Token = "0x2000009")]
[ExecuteInEditMode]
public class FCP_SpriteMeshEditor : MonoBehaviour
{
	[Token(Token = "0x200000A")]
	public enum MeshType
	{
		[Token(Token = "0x4000019")]
		CenterPoint,
		[Token(Token = "0x400001A")]
		forward,
		[Token(Token = "0x400001B")]
		backward
	}

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int x;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int y;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshType meshType;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite sprite;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int bufferedHash;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x1011AB4", Offset = "0x1011AB4", VA = "0x1011AB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x1011BA0", Offset = "0x1011BA0", VA = "0x1011BA0")]
	private int GetSettingHash()
	{
		return default(int);
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x1011C74", Offset = "0x1011C74", VA = "0x1011C74")]
	private void MakeMesh(Sprite sprite, int x, int y, MeshType meshtype)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x10121A8", Offset = "0x10121A8", VA = "0x10121A8")]
	public FCP_SpriteMeshEditor()
	{
	}
}
[Token(Token = "0x200000B")]
public class FlexibleColorPicker : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200000C")]
	public struct Picker
	{
		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Image image;

		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Sprite dynamicSprite;

		[Token(Token = "0x4000037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite staticSpriteHor;

		[Token(Token = "0x4000038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite staticSpriteVer;

		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material dynamicMaterial;
	}

	[Token(Token = "0x200000D")]
	private enum PickerType
	{
		[Token(Token = "0x400003B")]
		Main,
		[Token(Token = "0x400003C")]
		R,
		[Token(Token = "0x400003D")]
		G,
		[Token(Token = "0x400003E")]
		B,
		[Token(Token = "0x400003F")]
		H,
		[Token(Token = "0x4000040")]
		S,
		[Token(Token = "0x4000041")]
		V,
		[Token(Token = "0x4000042")]
		A,
		[Token(Token = "0x4000043")]
		Preview,
		[Token(Token = "0x4000044")]
		PreviewAlpha
	}

	[Token(Token = "0x200000E")]
	public enum MainPickingMode
	{
		[Token(Token = "0x4000046")]
		HS,
		[Token(Token = "0x4000047")]
		HV,
		[Token(Token = "0x4000048")]
		SH,
		[Token(Token = "0x4000049")]
		SV,
		[Token(Token = "0x400004A")]
		VH,
		[Token(Token = "0x400004B")]
		VS
	}

	[Serializable]
	[Token(Token = "0x200000F")]
	public class AdvancedSettings
	{
		[Serializable]
		[Token(Token = "0x2000010")]
		public class PSettings
		{
			[Token(Token = "0x4000053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[Range(0f, 1f)]
			[Tooltip("Normalized minimum for this color value, for restricting the slider range")]
			public float min;

			[Token(Token = "0x4000054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[Tooltip("Normalized maximum for this color value, for restricting the slider range")]
			[Range(0f, 1f)]
			public float max;

			[Token(Token = "0x4000055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Tooltip("Make the picker associated with this value act static, even in a dynamic color picker setup")]
			public bool overrideStatic;

			[Token(Token = "0x6000054")]
			[Address(RVA = "0x1015D04", Offset = "0x1015D04", VA = "0x1015D04")]
			public PSettings()
			{
			}
		}

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PSettings r;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PSettings g;

		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PSettings b;

		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PSettings h;

		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PSettings s;

		[Token(Token = "0x4000051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PSettings v;

		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PSettings a;

		[Token(Token = "0x6000052")]
		[Address(RVA = "0x10148DC", Offset = "0x10148DC", VA = "0x10148DC")]
		public PSettings Get(int i)
		{
			return null;
		}

		[Token(Token = "0x6000053")]
		[Address(RVA = "0x1015D14", Offset = "0x1015D14", VA = "0x1015D14")]
		public AdvancedSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000011")]
	private class BufferedColor
	{
		[Token(Token = "0x4000056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color color;

		[Token(Token = "0x4000057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float bufferedHue;

		[Token(Token = "0x4000058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float bufferedSaturation;

		[Token(Token = "0x17000003")]
		public float r
		{
			[Token(Token = "0x6000055")]
			[Address(RVA = "0x10148A0", Offset = "0x10148A0", VA = "0x10148A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000004")]
		public float g
		{
			[Token(Token = "0x6000056")]
			[Address(RVA = "0x10148A8", Offset = "0x10148A8", VA = "0x10148A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000005")]
		public float b
		{
			[Token(Token = "0x6000057")]
			[Address(RVA = "0x10148B0", Offset = "0x10148B0", VA = "0x10148B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000006")]
		public float a
		{
			[Token(Token = "0x6000058")]
			[Address(RVA = "0x10148D4", Offset = "0x10148D4", VA = "0x10148D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000007")]
		public float h
		{
			[Token(Token = "0x6000059")]
			[Address(RVA = "0x1015D1C", Offset = "0x1015D1C", VA = "0x1015D1C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000008")]
		public float s
		{
			[Token(Token = "0x600005A")]
			[Address(RVA = "0x1015D24", Offset = "0x1015D24", VA = "0x1015D24")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000009")]
		public float v
		{
			[Token(Token = "0x600005B")]
			[Address(RVA = "0x10148B8", Offset = "0x10148B8", VA = "0x10148B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600005C")]
		[Address(RVA = "0x1015D2C", Offset = "0x1015D2C", VA = "0x1015D2C")]
		public BufferedColor()
		{
		}

		[Token(Token = "0x600005D")]
		[Address(RVA = "0x1012868", Offset = "0x1012868", VA = "0x1012868")]
		public BufferedColor(Color color)
		{
		}

		[Token(Token = "0x600005E")]
		[Address(RVA = "0x1015D54", Offset = "0x1015D54", VA = "0x1015D54")]
		public BufferedColor(Color color, float hue, float sat)
		{
		}

		[Token(Token = "0x600005F")]
		[Address(RVA = "0x1015D7C", Offset = "0x1015D7C", VA = "0x1015D7C")]
		public BufferedColor(Color color, BufferedColor source)
		{
		}

		[Token(Token = "0x6000060")]
		[Address(RVA = "0x10121B8", Offset = "0x10121B8", VA = "0x10121B8")]
		public void Set(Color color)
		{
		}

		[Token(Token = "0x6000061")]
		[Address(RVA = "0x1015DE4", Offset = "0x1015DE4", VA = "0x1015DE4")]
		public void Set(Color color, float bufferedHue, float bufferedSaturation)
		{
		}

		[Token(Token = "0x6000062")]
		[Address(RVA = "0x1013C68", Offset = "0x1013C68", VA = "0x1013C68")]
		public BufferedColor PickR(float value)
		{
			return null;
		}

		[Token(Token = "0x6000063")]
		[Address(RVA = "0x1013CF4", Offset = "0x1013CF4", VA = "0x1013CF4")]
		public BufferedColor PickG(float value)
		{
			return null;
		}

		[Token(Token = "0x6000064")]
		[Address(RVA = "0x1013D80", Offset = "0x1013D80", VA = "0x1013D80")]
		public BufferedColor PickB(float value)
		{
			return null;
		}

		[Token(Token = "0x6000065")]
		[Address(RVA = "0x1014024", Offset = "0x1014024", VA = "0x1014024")]
		public BufferedColor PickA(float value)
		{
			return null;
		}

		[Token(Token = "0x6000066")]
		[Address(RVA = "0x1013E0C", Offset = "0x1013E0C", VA = "0x1013E0C")]
		public BufferedColor PickH(float value)
		{
			return null;
		}

		[Token(Token = "0x6000067")]
		[Address(RVA = "0x1013EC4", Offset = "0x1013EC4", VA = "0x1013EC4")]
		public BufferedColor PickS(float value)
		{
			return null;
		}

		[Token(Token = "0x6000068")]
		[Address(RVA = "0x1013F80", Offset = "0x1013F80", VA = "0x1013F80")]
		public BufferedColor PickV(float value)
		{
			return null;
		}
	}

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("Connections to the FCP's picker images, this should not be adjusted unless in advanced use cases.")]
	public Picker[] pickers;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Tooltip("Connection to the FCP's hexadecimal input field.")]
	public InputField hexInput;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Tooltip("Connection to the FCP's mode dropdown menu.")]
	public Dropdown modeDropdown;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas canvas;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Tooltip("The (starting) 2D picking mode, i.e. the 2 color values that can be picked with the large square picker.")]
	public MainPickingMode mode;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Tooltip("Sprites to be used in static mode on the main picker, one for each 2D mode.")]
	public Sprite[] staticSpriteMain;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BufferedColor bufferedColor;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Picker focusedPicker;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PickerType focusedPickerType;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private MainPickingMode lastUpdatedMode;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool typeUpdate;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool triggeredStaticMode;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool materialsSeperated;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[Tooltip("Color set to the color picker on Start(). Before the start function, the standard public color variable is redirected to this value, so it may be changed at run time.")]
	public Color startingColor;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[Tooltip("Use static mode: picker images are replaced by static images in stead of adaptive Unity shaders.")]
	public bool staticMode;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	[Tooltip("Make sure FCP seperates its picker materials so that the dynamic mode works consistently, even when multiple FPCs are active at the same time. Turning this off yields a slight performance boost.")]
	public bool multiInstance;

	[Token(Token = "0x400002C")]
	private const float HUE_LOOP = 5.9999f;

	[Token(Token = "0x400002D")]
	private const string SHADER_MODE = "_Mode";

	[Token(Token = "0x400002E")]
	private const string SHADER_C1 = "_Color1";

	[Token(Token = "0x400002F")]
	private const string SHADER_C2 = "_Color2";

	[Token(Token = "0x4000030")]
	private const string SHADER_DOUBLE_MODE = "_DoubleMode";

	[Token(Token = "0x4000031")]
	private const string SHADER_HSV = "_HSV";

	[Token(Token = "0x4000032")]
	private const string SHADER_HSV_MIN = "_HSV_MIN";

	[Token(Token = "0x4000033")]
	private const string SHADER_HSV_MAX = "_HSV_MAX";

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Tooltip("More specific settings for color picker. Changes are not applied immediately, but require an FCP update to trigger.")]
	public AdvancedSettings advancedSettings;

	[Token(Token = "0x17000001")]
	private AdvancedSettings AS
	{
		[Token(Token = "0x600001A")]
		[Address(RVA = "0x10121B0", Offset = "0x10121B0", VA = "0x10121B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000002")]
	public Color color
	{
		[Token(Token = "0x600001B")]
		[Address(RVA = "0x1011A6C", Offset = "0x1011A6C", VA = "0x1011A6C")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600001C")]
		[Address(RVA = "0x1011A20", Offset = "0x1011A20", VA = "0x1011A20")]
		set
		{
		}
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x101270C", Offset = "0x101270C", VA = "0x101270C")]
	public Color GetColor()
	{
		return default(Color);
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x101274C", Offset = "0x101274C", VA = "0x101274C")]
	public void SetColor(Color color)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1012750", Offset = "0x1012750", VA = "0x1012750")]
	public Color GetColorFullAlpha()
	{
		return default(Color);
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x1012790", Offset = "0x1012790", VA = "0x1012790")]
	public void SetColorNoAlpha(Color color)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x10127AC", Offset = "0x10127AC", VA = "0x10127AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x10128CC", Offset = "0x10128CC", VA = "0x10128CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x1013028", Offset = "0x1013028", VA = "0x1013028")]
	private void Update()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x10130CC", Offset = "0x10130CC", VA = "0x10130CC")]
	public void SetPointerFocus(int i)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x1013204", Offset = "0x1013204", VA = "0x1013204")]
	public void PointerUpdate(BaseEventData e)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x1013430", Offset = "0x1013430", VA = "0x1013430")]
	public void PointerUpdateCustomErthu(Vector2 v)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x1013484", Offset = "0x1013484", VA = "0x1013484")]
	public void TypeHex(string input)
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x1013604", Offset = "0x1013604", VA = "0x1013604")]
	public void FinishTypeHex(string input)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x1013628", Offset = "0x1013628", VA = "0x1013628")]
	public void ChangeMode(int newMode)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x1013094", Offset = "0x1013094", VA = "0x1013094")]
	public void ChangeMode(MainPickingMode mode)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x10129AC", Offset = "0x10129AC", VA = "0x10129AC")]
	private void SeperateMaterials()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x101340C", Offset = "0x101340C", VA = "0x101340C")]
	private BufferedColor PickColor(BufferedColor color, PickerType type, Vector2 v)
	{
		return null;
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x10137A8", Offset = "0x10137A8", VA = "0x10137A8")]
	private BufferedColor PickColorMain(BufferedColor color, Vector2 v)
	{
		return null;
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x10137B0", Offset = "0x10137B0", VA = "0x10137B0")]
	private BufferedColor PickColor1D(BufferedColor color, PickerType type, Vector2 v)
	{
		return null;
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x1013838", Offset = "0x1013838", VA = "0x1013838")]
	private BufferedColor PickColorMain(BufferedColor color, MainPickingMode mode, Vector2 v)
	{
		return null;
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x1013C2C", Offset = "0x1013C2C", VA = "0x1013C2C")]
	private BufferedColor PickColor2D(BufferedColor color, PickerType type1, float value1, PickerType type2, float value2)
	{
		return null;
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x1013938", Offset = "0x1013938", VA = "0x1013938")]
	private BufferedColor PickColor1D(BufferedColor color, PickerType type, float value)
	{
		return null;
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x10121C0", Offset = "0x10121C0", VA = "0x10121C0")]
	private void UpdateMarkers()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x1014118", Offset = "0x1014118", VA = "0x1014118")]
	private void UpdateMarker(Picker picker, PickerType type, Vector2 v)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x10141B4", Offset = "0x10141B4", VA = "0x10141B4")]
	private void SetMarker(Image picker, Vector2 v, bool setX, bool setY)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x10143F4", Offset = "0x10143F4", VA = "0x10143F4")]
	private RectTransform GetMarker(Image picker, string search)
	{
		return null;
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x10140B0", Offset = "0x10140B0", VA = "0x10140B0")]
	private Vector2 GetValue(PickerType type)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x101462C", Offset = "0x101462C", VA = "0x101462C")]
	private float GetValue1D(PickerType type)
	{
		return default(float);
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x101453C", Offset = "0x101453C", VA = "0x101453C")]
	private Vector2 GetValue(MainPickingMode mode)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x1012268", Offset = "0x1012268", VA = "0x1012268")]
	private void UpdateTextures()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1014B34", Offset = "0x1014B34", VA = "0x1014B34")]
	private void UpdateStatic(PickerType type)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1014D34", Offset = "0x1014D34", VA = "0x1014D34")]
	private void UpdateDynamic(PickerType type)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x101514C", Offset = "0x101514C", VA = "0x101514C")]
	private int GetGradientMode(PickerType type)
	{
		return default(int);
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x101512C", Offset = "0x101512C", VA = "0x101512C")]
	private bool IsPickerAvailable(PickerType type)
	{
		return default(bool);
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x10136E8", Offset = "0x10136E8", VA = "0x10136E8")]
	private bool IsPickerAvailable(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x10125F4", Offset = "0x10125F4", VA = "0x10125F4")]
	private void UpdateHex()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x10134A8", Offset = "0x10134A8", VA = "0x10134A8")]
	private void TypeHex(string input, bool finish)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x1012B68", Offset = "0x1012B68", VA = "0x1012B68")]
	private void MakeModeOptions()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x101362C", Offset = "0x101362C", VA = "0x101362C")]
	private void UpdateMode(MainPickingMode mode)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x101547C", Offset = "0x101547C", VA = "0x101547C")]
	private static bool IsPreviewType(PickerType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1015130", Offset = "0x1015130", VA = "0x1015130")]
	private static bool IsAlphaType(PickerType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x10138E4", Offset = "0x10138E4", VA = "0x10138E4")]
	private static bool IsHorizontal(Picker p)
	{
		return default(bool);
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x10151C8", Offset = "0x10151C8", VA = "0x10151C8")]
	public static string GetSanitizedHex(string input, bool full)
	{
		return null;
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x1015498", Offset = "0x1015498", VA = "0x1015498")]
	private static bool IsValidHexChar(char c)
	{
		return default(bool);
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x101550C", Offset = "0x101550C", VA = "0x101550C")]
	public static Color ParseHex(string input)
	{
		return default(Color);
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x1015520", Offset = "0x1015520", VA = "0x1015520")]
	public static Color ParseHex(string input, Color defaultColor)
	{
		return default(Color);
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x1013288", Offset = "0x1013288", VA = "0x1013288")]
	public static Vector2 GetNormalizedPointerPosition(Canvas canvas, RectTransform rect, BaseEventData e)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x1015588", Offset = "0x1015588", VA = "0x1015588")]
	private static Vector2 GetNormScreenSpace(RectTransform rect, BaseEventData e)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x101571C", Offset = "0x101571C", VA = "0x101571C")]
	private static Vector2 GetNormWorldSpace(Canvas canvas, RectTransform rect, BaseEventData e)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x10159CC", Offset = "0x10159CC", VA = "0x10159CC")]
	public static Color HSVToRGB(Vector3 hsv)
	{
		return default(Color);
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x10159D0", Offset = "0x10159D0", VA = "0x10159D0")]
	public static Color HSVToRGB(float h, float s, float v)
	{
		return default(Color);
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x1015B0C", Offset = "0x1015B0C", VA = "0x1015B0C")]
	public static Vector3 RGBToHSV(Color color)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x1015B10", Offset = "0x1015B10", VA = "0x1015B10")]
	public static Vector3 RGBToHSV(float r, float g, float b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x1015CEC", Offset = "0x1015CEC", VA = "0x1015CEC")]
	public FlexibleColorPicker()
	{
	}
}
[Token(Token = "0x2000012")]
public class AchievementInterpreter : MonoBehaviour
{
	[Token(Token = "0x2000013")]
	public class AchievementDiskRepresentation : GenericRepresentation
	{
		[Token(Token = "0x400005A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string id;

		[Token(Token = "0x400005B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string name;

		[Token(Token = "0x400005C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string desc;

		[Token(Token = "0x400005D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string unlocksItem;

		[Token(Token = "0x400005E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool hideDescription;

		[Token(Token = "0x400005F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool worksOnLoadedRun;

		[Token(Token = "0x4000060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int insightReward;

		[Token(Token = "0x1700000A")]
		public bool Unlocked
		{
			[Token(Token = "0x600006D")]
			[Address(RVA = "0x1016078", Offset = "0x1016078", VA = "0x1016078")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600006C")]
			[Address(RVA = "0x1015FB8", Offset = "0x1015FB8", VA = "0x1015FB8")]
			set
			{
			}
		}

		[Token(Token = "0x600006E")]
		[Address(RVA = "0x1016134", Offset = "0x1016134", VA = "0x1016134")]
		public AchievementDiskRepresentation(string code, string fileName, string id, ModLoader.Mod modReference)
		{
		}

		[Token(Token = "0x600006F")]
		[Address(RVA = "0x10162C4", Offset = "0x10162C4", VA = "0x10162C4")]
		public string GetLocalizedName()
		{
			return null;
		}

		[Token(Token = "0x6000070")]
		[Address(RVA = "0x101631C", Offset = "0x101631C", VA = "0x101631C")]
		public string GetLocalizedDesc()
		{
			return null;
		}

		[Token(Token = "0x6000071")]
		[Address(RVA = "0x1016374", Offset = "0x1016374", VA = "0x1016374")]
		public void Unlock()
		{
		}
	}

	[Token(Token = "0x2000016")]
	[CompilerGenerated]
	private sealed class <ReadAchievementsFromDisk>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AchievementInterpreter <>4__this;

		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DataCoroutine<List<AchievementDiskRepresentation>> <data>5__2;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600007A")]
			[Address(RVA = "0x1016844", Offset = "0x1016844", VA = "0x1016844", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600007C")]
			[Address(RVA = "0x101688C", Offset = "0x101688C", VA = "0x101688C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000077")]
		[Address(RVA = "0x1015F88", Offset = "0x1015F88", VA = "0x1015F88")]
		[DebuggerHidden]
		public <ReadAchievementsFromDisk>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000078")]
		[Address(RVA = "0x1016618", Offset = "0x1016618", VA = "0x1016618", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000079")]
		[Address(RVA = "0x101661C", Offset = "0x101661C", VA = "0x101661C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600007B")]
		[Address(RVA = "0x101684C", Offset = "0x101684C", VA = "0x101684C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AchievementDiskRepresentation[] achievementsOnDisk;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x1015E28", Offset = "0x1015E28", VA = "0x1015E28")]
	public AchievementDiskRepresentation GetAchievementById(string id)
	{
		return null;
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x1015F14", Offset = "0x1015F14", VA = "0x1015F14")]
	[IteratorStateMachine(typeof(<ReadAchievementsFromDisk>d__3))]
	public IEnumerator ReadAchievementsFromDisk()
	{
		return null;
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x1015FB0", Offset = "0x1015FB0", VA = "0x1015FB0")]
	public AchievementInterpreter()
	{
	}
}
[Token(Token = "0x2000017")]
public class ADVRHapticsManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000018")]
	public class ADVRHaptic
	{
		[Serializable]
		[Token(Token = "0x2000019")]
		public class OWOClip
		{
			[Token(Token = "0x400006F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ushort sensationID;

			[Token(Token = "0x4000070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public OWOMuscle muscle;

			[Token(Token = "0x6000082")]
			[Address(RVA = "0x1017198", Offset = "0x1017198", VA = "0x1017198")]
			public OWOClip()
			{
			}
		}

		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip[] bhapticsClips;

		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OWOClip owoClip;

		[Token(Token = "0x6000081")]
		[Address(RVA = "0x1017190", Offset = "0x1017190", VA = "0x1017190")]
		public ADVRHaptic()
		{
		}
	}

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 debugOffset;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ADVRHaptic[] haptics;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, ADVRHaptic> _hapticDict;

	[NonSerialized]
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool initialized;

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x1016894", Offset = "0x1016894", VA = "0x1016894")]
	public void Initialize()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x101693C", Offset = "0x101693C", VA = "0x101693C")]
	public void PlayHaptic(string id)
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1016BB8", Offset = "0x1016BB8", VA = "0x1016BB8")]
	public void PlayHapticAtContact(string id, Vector3 contactPos)
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1017108", Offset = "0x1017108", VA = "0x1017108")]
	public ADVRHapticsManager()
	{
	}
}
[Token(Token = "0x200001A")]
public class ADVRSoundEffect : MonoBehaviour
{
	[Token(Token = "0x200001B")]
	public enum SOUND_MODE
	{
		[Token(Token = "0x400007F")]
		RANDOM,
		[Token(Token = "0x4000080")]
		COMBINE_ALL
	}

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string soundEffectID;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Sound Settings")]
	public SOUND_MODE soundMode;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] sounds;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 2f)]
	[Header("Volume and Pitch")]
	public float volume;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minPitch;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxPitch;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Header("Extra Settings")]
	[Range(0f, 360f)]
	public int spread;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool spatialize;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool checkOcclusion;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioMixerGroup goalMixerGroup;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool mono;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Range(0f, 255f)]
	public int priority;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int range;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x10171A0", Offset = "0x10171A0", VA = "0x10171A0")]
	public void PlaySoundAt(Vector3 position, float volume = 1f, float pitchMultiplier = 1f, [Optional] Transform followObject)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x10174C8", Offset = "0x10174C8", VA = "0x10174C8")]
	public void PlaySound(float volume = 1f)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1017558", Offset = "0x1017558", VA = "0x1017558")]
	public ADVRSoundEffect()
	{
	}
}
[Serializable]
[Token(Token = "0x200001C")]
public class ADSoundEffect
{
	[Token(Token = "0x200001D")]
	public enum SOUND_MODE
	{
		[Token(Token = "0x400008E")]
		RANDOM,
		[Token(Token = "0x400008F")]
		COMBINE_ALL
	}

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Header("Sound Settings")]
	public SOUND_MODE soundMode;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] sounds;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 2f)]
	public float volume;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minPitch;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxPitch;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 360f)]
	public int spread;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool spatialize;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool checkOcclusion;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioMixerGroup goalMixerGroup;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool mono;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 255f)]
	public int priority;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int range;

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1017584", Offset = "0x1017584", VA = "0x1017584")]
	public void PlaySoundAt(Vector3 position, float volume = 1f, float pitchMultiplier = 1f, [Optional] Transform followObject)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x10176A0", Offset = "0x10176A0", VA = "0x10176A0")]
	public void PlaySound(float volume = 1f)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1017730", Offset = "0x1017730", VA = "0x1017730")]
	public ADSoundEffect()
	{
	}
}
[Token(Token = "0x200001E")]
public class AudioManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200001F")]
	public class AudioSourceInfo
	{
		[Token(Token = "0x40000AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioSource audioSource;

		[Token(Token = "0x40000AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioLowPassFilter audioLowPass;

		[Token(Token = "0x6000098")]
		[Address(RVA = "0x1018954", Offset = "0x1018954", VA = "0x1018954")]
		public AudioSourceInfo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000020")]
	public class DungeonMusicInfo
	{
		[Token(Token = "0x40000AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CURRENT_FLOOR floor;

		[Token(Token = "0x40000AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip ambient;

		[Token(Token = "0x40000AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip music;

		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip intro;

		[Token(Token = "0x40000B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip boss;

		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip trapRoom;

		[Token(Token = "0x6000099")]
		[Address(RVA = "0x101895C", Offset = "0x101895C", VA = "0x101895C")]
		public DungeonMusicInfo()
		{
		}
	}

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AudioManager instance;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSourceInfo[] audioPool;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource ambientSource;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource musicSource;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject soundRepo;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Mixer Groups")]
	public AudioMixerGroup musicAndAmbianceGroup;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioMixerGroup sfxGroup;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Occlusion Settings")]
	public AnimationCurve lowPassDefaultCurve;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve lowPassOcclusionCurve;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Range(0f, 1f)]
	public float occlusionVolumeFactor;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Music Files")]
	public AudioClip shopMusic;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip trapRoomBasic;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip homebaseMusic;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip shopkeeperDeathMusic;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip shopkeeperFightMusic;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip afterBossTransition;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip beastStage1;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip beastStage2;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip beastStage3;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public AudioClip mainMenuTheme;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioClip idleTheme;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip challengeGhostMusic;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public DungeonMusicInfo[] dungeonMusicInfos;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int occlusionMask;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Dictionary<string, ADVRSoundEffect> soundDict;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float _startMusicVolume;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool _inCrossFade;

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x101775C", Offset = "0x101775C", VA = "0x101775C")]
	public ADVRSoundEffect CreateNewSoundEffect(string id, AudioClip[] sounds, float volume, bool spatialize, int range)
	{
		return null;
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1017898", Offset = "0x1017898", VA = "0x1017898")]
	private void Start()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x1017AF4", Offset = "0x1017AF4", VA = "0x1017AF4")]
	public DungeonMusicInfo GetDungeonMusicInfoForFloor(CURRENT_FLOOR floor)
	{
		return null;
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1017B4C", Offset = "0x1017B4C", VA = "0x1017B4C")]
	public void PlaySoundAt(string soundID, Vector3 position, float volume = 1f, float pitchMultiplier = 1f, [Optional] Transform followObject)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x1017C44", Offset = "0x1017C44", VA = "0x1017C44")]
	public bool DoesSoundExist(string soundID)
	{
		return default(bool);
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x10172BC", Offset = "0x10172BC", VA = "0x10172BC")]
	public void PlayRandomOneShotAt(Vector3 position, float volume, float minPitch, float maxPitch, AudioClip[] clips, int priority = 0, int distance = 18, bool mono = false, bool spatialize = false, [Optional] AudioMixerGroup goalMixer, bool checkOcclusion = false, int spread = 0, [Optional] Transform followObject)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x10173B4", Offset = "0x10173B4", VA = "0x10173B4")]
	public void PlayCombinedOneShotAt(Vector3 position, float volume, float minPitch, float maxPitch, AudioClip[] clips, int priority = 0, int distance = 18, bool mono = false, bool spatialize = false, [Optional] AudioMixerGroup goalMixer, bool checkOcclusion = false, int spread = 0, [Optional] Transform followObject)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x10181FC", Offset = "0x10181FC", VA = "0x10181FC")]
	public void CrossFadeMusicToInstant(AudioClip clip, bool loop = true)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1018320", Offset = "0x1018320", VA = "0x1018320")]
	public void CrossFadeMusicTo(AudioClip clip, float speed = 1.25f, bool loop = true)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1017CA4", Offset = "0x1017CA4", VA = "0x1017CA4")]
	public void PlayOneShotAt(Vector3 position, float volume, float minPitch, float maxPitch, AudioClip clip, int priority = 0, int distance = 18, bool mono = false, bool spatialize = false, [Optional] AudioMixerGroup goalMixer, bool checkOcclusion = false, int spread = 0, [Optional] Transform followObject)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1018464", Offset = "0x1018464", VA = "0x1018464")]
	private AudioSourceInfo GetAudioSourceNotInUse(int priority)
	{
		return null;
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x10185B8", Offset = "0x10185B8", VA = "0x10185B8")]
	public void UpdateMusic(CURRENT_FLOOR floor)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x1018724", Offset = "0x1018724", VA = "0x1018724")]
	public AudioClip GetCurrentFloorMusic()
	{
		return null;
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x1018834", Offset = "0x1018834", VA = "0x1018834")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x101894C", Offset = "0x101894C", VA = "0x101894C")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x2000029")]
public class BaseInteract : MonoBehaviour
{
	[Token(Token = "0x200002A")]
	public delegate void InteractEvent(BaseInteract b);

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Base Configuration")]
	public bool isUsable;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isGrabbable;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool ignoreCollisionsOnGrab;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform grabAttachPoint;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool canBePutInInventory;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float throwMultiplier;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PlayerHand> _handsInteracting;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _scaleBeforeInInv;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LivingBase _lb;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody _rb;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlayerHand _currentGrabbedHand;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Slot _currentInventorySlot;

	[Token(Token = "0x14000001")]
	public event InteractEvent UseStart
	{
		[Token(Token = "0x60000B7")]
		[Address(RVA = "0x10190B4", Offset = "0x10190B4", VA = "0x10190B4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000B8")]
		[Address(RVA = "0x1019150", Offset = "0x1019150", VA = "0x1019150")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event InteractEvent UseEnd
	{
		[Token(Token = "0x60000B9")]
		[Address(RVA = "0x10191EC", Offset = "0x10191EC", VA = "0x10191EC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000BA")]
		[Address(RVA = "0x1019288", Offset = "0x1019288", VA = "0x1019288")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event InteractEvent GripStart
	{
		[Token(Token = "0x60000BB")]
		[Address(RVA = "0x1019324", Offset = "0x1019324", VA = "0x1019324")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000BC")]
		[Address(RVA = "0x10193C0", Offset = "0x10193C0", VA = "0x10193C0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event InteractEvent GripEnd
	{
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x101945C", Offset = "0x101945C", VA = "0x101945C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000BE")]
		[Address(RVA = "0x10194F8", Offset = "0x10194F8", VA = "0x10194F8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event InteractEvent TouchStart
	{
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0x1019594", Offset = "0x1019594", VA = "0x1019594")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000C0")]
		[Address(RVA = "0x1019630", Offset = "0x1019630", VA = "0x1019630")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event InteractEvent TouchEnd
	{
		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x10196CC", Offset = "0x10196CC", VA = "0x10196CC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0x1019768", Offset = "0x1019768", VA = "0x1019768")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x1019804", Offset = "0x1019804", VA = "0x1019804", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1019C7C", Offset = "0x1019C7C", VA = "0x1019C7C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x101A584", Offset = "0x101A584", VA = "0x101A584")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x101AD40", Offset = "0x101AD40", VA = "0x101AD40")]
	public void ResetInteractingHands()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x101ADB0", Offset = "0x101ADB0", VA = "0x101ADB0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x101B858", Offset = "0x101B858", VA = "0x101B858", Slot = "5")]
	public virtual void OnUseEndLeft(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x101B870", Offset = "0x101B870", VA = "0x101B870", Slot = "6")]
	public virtual void OnUseEndRight(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x101B888", Offset = "0x101B888", VA = "0x101B888", Slot = "7")]
	public virtual void OnUseEnd(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x101B8C0", Offset = "0x101B8C0", VA = "0x101B8C0")]
	[ContextMenu("Simulate OnUseStart")]
	private void SimulateOnUseStart()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x101B8D4", Offset = "0x101B8D4", VA = "0x101B8D4", Slot = "8")]
	public virtual void OnUseStart(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x101B90C", Offset = "0x101B90C", VA = "0x101B90C", Slot = "9")]
	public virtual void OnUseStartLeft(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x101B924", Offset = "0x101B924", VA = "0x101B924", Slot = "10")]
	public virtual void OnUseStartRight(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x101B93C", Offset = "0x101B93C", VA = "0x101B93C", Slot = "11")]
	public virtual void OnUseStart()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x101B940", Offset = "0x101B940", VA = "0x101B940", Slot = "12")]
	public virtual void OnUseEnd()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x101B944", Offset = "0x101B944", VA = "0x101B944")]
	private void OnGripEndRight(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x101BE18", Offset = "0x101BE18", VA = "0x101BE18")]
	private void OnGripStartRight(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x101BADC", Offset = "0x101BADC", VA = "0x101BADC")]
	private void UnparentObjectGrip()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x101C548", Offset = "0x101C548", VA = "0x101C548")]
	private void OnGripStartLeft(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x101C71C", Offset = "0x101C71C", VA = "0x101C71C")]
	private void OnGripEndLeft(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x101C1A4", Offset = "0x101C1A4", VA = "0x101C1A4")]
	private void ParentObjectGrip(PlayerHand hand)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x101C8B4", Offset = "0x101C8B4", VA = "0x101C8B4", Slot = "13")]
	public virtual void OnTouchStart(bool left)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x101C8D4", Offset = "0x101C8D4", VA = "0x101C8D4", Slot = "14")]
	public virtual void OnTouchEnd(bool left)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x101C8F4", Offset = "0x101C8F4", VA = "0x101C8F4", Slot = "15")]
	public virtual void OnGripEnd(bool left)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x101C8F8", Offset = "0x101C8F8", VA = "0x101C8F8", Slot = "16")]
	public virtual void OnGripStart(bool left)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x101C8FC", Offset = "0x101C8FC", VA = "0x101C8FC")]
	public PlayerHand GetCurrentGrabbedHand()
	{
		return null;
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x101C144", Offset = "0x101C144", VA = "0x101C144")]
	public bool IsInInventory()
	{
		return default(bool);
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x101C904", Offset = "0x101C904", VA = "0x101C904")]
	public Slot GetCurrentInventorySlot()
	{
		return null;
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x101C90C", Offset = "0x101C90C", VA = "0x101C90C")]
	public List<PlayerHand> GetInteractingHands()
	{
		return null;
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x101C914", Offset = "0x101C914", VA = "0x101C914", Slot = "17")]
	public virtual void OnPutInSlot(Slot slot)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x101CC00", Offset = "0x101CC00", VA = "0x101CC00", Slot = "18")]
	public virtual void OnTakeFromSlot()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x101CCE4", Offset = "0x101CCE4", VA = "0x101CCE4")]
	public BaseInteract()
	{
	}
}
[Token(Token = "0x200002C")]
public class CameraSmooth : MonoBehaviour
{
	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cameraTarget;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera cameraSelf;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool enableSmooth;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool lockZ;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 12f)]
	public float lerpPositionRate;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(1f, 12f)]
	public float lerpRotationRate;

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x101CF88", Offset = "0x101CF88", VA = "0x101CF88")]
	public void Start()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x101D14C", Offset = "0x101D14C", VA = "0x101D14C")]
	public void Update()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x101D4F0", Offset = "0x101D4F0", VA = "0x101D4F0")]
	public CameraSmooth()
	{
	}
}
[Token(Token = "0x200002D")]
public class ChallengeInterpreter : MonoBehaviour
{
	[Token(Token = "0x200002E")]
	public class ChallengeDiskRepresentation : GenericRepresentation
	{
		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string id;

		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string name;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string desc;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int specialEventRequirement;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int[] allowedWeaponTypes;

		[Token(Token = "0x17000013")]
		public bool Completed
		{
			[Token(Token = "0x60000F2")]
			[Address(RVA = "0x101DE98", Offset = "0x101DE98", VA = "0x101DE98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60000F3")]
			[Address(RVA = "0x101DF54", Offset = "0x101DF54", VA = "0x101DF54")]
			set
			{
			}
		}

		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x101DC98", Offset = "0x101DC98", VA = "0x101DC98")]
		public ChallengeDiskRepresentation(string code, string fileName, string id, ModLoader.Mod modReference)
		{
		}

		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x101DDE8", Offset = "0x101DDE8", VA = "0x101DDE8")]
		public string GetLocalizedName()
		{
			return null;
		}

		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x101DE40", Offset = "0x101DE40", VA = "0x101DE40")]
		public string GetLocalizedDesc()
		{
			return null;
		}

		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x101E014", Offset = "0x101E014", VA = "0x101E014")]
		public bool IsUnlocked()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000030")]
	[CompilerGenerated]
	private sealed class <ReadChallengesFromDisk>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeInterpreter <>4__this;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DataCoroutine<List<ChallengeDiskRepresentation>> <data>5__2;

		[Token(Token = "0x17000014")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000FB")]
			[Address(RVA = "0x101E3E8", Offset = "0x101E3E8", VA = "0x101E3E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000FD")]
			[Address(RVA = "0x101E430", Offset = "0x101E430", VA = "0x101E430", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000F8")]
		[Address(RVA = "0x101DC68", Offset = "0x101DC68", VA = "0x101DC68")]
		[DebuggerHidden]
		public <ReadChallengesFromDisk>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60000F9")]
		[Address(RVA = "0x101E1BC", Offset = "0x101E1BC", VA = "0x101E1BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000FA")]
		[Address(RVA = "0x101E1C0", Offset = "0x101E1C0", VA = "0x101E1C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000FC")]
		[Address(RVA = "0x101E3F0", Offset = "0x101E3F0", VA = "0x101E3F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChallengeDiskRepresentation[] challengesOnDisk;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ChallengeDiskRepresentation currentSelectedChallenge;

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x101D50C", Offset = "0x101D50C", VA = "0x101D50C")]
	public GameObject PlaceStoryGhostAroundPlayerInDungeon(bool excludeVisited)
	{
		return null;
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x101DBF4", Offset = "0x101DBF4", VA = "0x101DBF4")]
	[IteratorStateMachine(typeof(<ReadChallengesFromDisk>d__4))]
	public IEnumerator ReadChallengesFromDisk()
	{
		return null;
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x101DC90", Offset = "0x101DC90", VA = "0x101DC90")]
	public ChallengeInterpreter()
	{
	}
}
[Token(Token = "0x2000031")]
[RequireComponent(typeof(Collider))]
public class ClimbableObject : MonoBehaviour
{
	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool highlightOnHover;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material _mat;

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x101E438", Offset = "0x101E438", VA = "0x101E438")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x101E4B4", Offset = "0x101E4B4", VA = "0x101E4B4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x101E58C", Offset = "0x101E58C", VA = "0x101E58C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x101E624", Offset = "0x101E624", VA = "0x101E624")]
	public ClimbableObject()
	{
	}
}
[Token(Token = "0x2000032")]
public class ControllerInputHandler : MonoBehaviour
{
	[Token(Token = "0x6000102")]
	[Address(RVA = "0x101E62C", Offset = "0x101E62C", VA = "0x101E62C")]
	public ControllerInputHandler()
	{
	}
}
[Token(Token = "0x2000033")]
public class InteractTeleportTo : MonoBehaviour
{
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform goal;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool disabledProgress;

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x101E634", Offset = "0x101E634", VA = "0x101E634")]
	private void Start()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x101E638", Offset = "0x101E638", VA = "0x101E638")]
	public InteractTeleportTo()
	{
	}
}
[Token(Token = "0x2000034")]
[RequireComponent(typeof(CharacterController))]
public class PlayerController : MonoBehaviour
{
	[Token(Token = "0x2000035")]
	public enum MovementType
	{
		[Token(Token = "0x4000127")]
		Walking,
		[Token(Token = "0x4000128")]
		Teleporting,
		[Token(Token = "0x4000129")]
		Climbing
	}

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Movement Settings")]
	public float walkSpeed;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float gravityAcceleration;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxGravityValue;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float flingDecelerationSpeed;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float flingGroundDrag;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimalRequiredFlingMagnitude;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask climbingTeleportMask;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float slopeDownwardsForce;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float slopeDownwardsDistanceMultiplier;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LayerMask slopeGroundMask;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float wallDragDeceleration;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Header("Teleport Settings")]
	public float maxTeleportForwardDistance;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxTeleportDownDistance;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float timeBetweenTeleports;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minDistanceToWall;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public LayerMask teleportMask;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Collision Settings")]
	public float headExtraOffset;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string collisionMask;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string noCollisionMask;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 teleportOffset;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("References")]
	public Transform playerHeadset;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform vrRoot;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public PlayerHand rightHand;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public PlayerHand leftHand;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject rightHandPhysicsObject;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject leftHandPhysicsObject;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ComfortVignette comfortVignette;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject teleportCircle;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 _climbingPoint;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private PlayerHand.HandType _climbingHand;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 _secondaryVelocity;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool _hasUsedSnapTurn;

	[NonSerialized]
	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	public bool useGravity;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float _currentGravity;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float _walkingMovementSpeed;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public LineRenderer teleportLineRenderer;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool _canTeleport;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 _previousHitPoint;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool _previousHitPointValid;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector3 _currentMoveDirection;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float _lastTeleportTime;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Ladder _highlightedLadder;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool _isInputEnabled;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private string _loadedPreset;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private PlayerInputAction _inputActions;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private PlayerHand.HandType _pointerHand;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool _isUiPointerEnabled;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private CharacterController _characterController;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private MovementType _currentMovementType;

	[Token(Token = "0x17000016")]
	public PlayerInputAction InputActions
	{
		[Token(Token = "0x6000105")]
		[Address(RVA = "0x101E640", Offset = "0x101E640", VA = "0x101E640")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000017")]
	public PlayerHand.HandType PointerHand
	{
		[Token(Token = "0x6000106")]
		[Address(RVA = "0x101E648", Offset = "0x101E648", VA = "0x101E648")]
		get
		{
			return default(PlayerHand.HandType);
		}
	}

	[Token(Token = "0x17000018")]
	public bool UiPointerEnabled
	{
		[Token(Token = "0x6000107")]
		[Address(RVA = "0x101E650", Offset = "0x101E650", VA = "0x101E650")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000108")]
		[Address(RVA = "0x101E658", Offset = "0x101E658", VA = "0x101E658")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public MovementType CurrentMovementType
	{
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x101E7D0", Offset = "0x101E7D0", VA = "0x101E7D0")]
		get
		{
			return default(MovementType);
		}
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x101E6F8", Offset = "0x101E6F8", VA = "0x101E6F8")]
	public void SetUIPointerLength(float length = 5f)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x101E7D8", Offset = "0x101E7D8", VA = "0x101E7D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x101F060", Offset = "0x101F060", VA = "0x101F060")]
	private void Start()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x101F114", Offset = "0x101F114", VA = "0x101F114")]
	public float GetWalkingMovementSpeed()
	{
		return default(float);
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x101E674", Offset = "0x101E674", VA = "0x101E674")]
	public void RefreshPointerHand()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x101F164", Offset = "0x101F164", VA = "0x101F164")]
	public void SetPointerHand(PlayerHand.HandType handType, bool bypassPointerEnabled = false)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x101F248", Offset = "0x101F248", VA = "0x101F248")]
	public void SetSlidingMovementSpeed(float newSpeed)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x101F250", Offset = "0x101F250", VA = "0x101F250")]
	public void RefreshInput()
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x101F7C4", Offset = "0x101F7C4", VA = "0x101F7C4")]
	public void EnableInput()
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1020020", Offset = "0x1020020", VA = "0x1020020")]
	private void GameLostPlayerFocus(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x101F268", Offset = "0x101F268", VA = "0x101F268")]
	public void DisableInput()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x1020088", Offset = "0x1020088", VA = "0x1020088")]
	public CharacterController GetCharacterController()
	{
		return null;
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1020090", Offset = "0x1020090", VA = "0x1020090")]
	private void AttemptClimbingLeft(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x10202CC", Offset = "0x10202CC", VA = "0x10202CC")]
	private void AttemptClimbingRight(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x10200A8", Offset = "0x10200A8", VA = "0x10200A8")]
	private void AttemptClimbing(PlayerHand.HandType handType, PlayerHand playerHand, InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x102097C", Offset = "0x102097C", VA = "0x102097C")]
	private void LeftTriggerPerformed(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1020988", Offset = "0x1020988", VA = "0x1020988")]
	private void RightTriggerPerformed(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1020994", Offset = "0x1020994", VA = "0x1020994")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x1020998", Offset = "0x1020998", VA = "0x1020998")]
	private void Update()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x10212E0", Offset = "0x10212E0", VA = "0x10212E0")]
	private void RotatePlayerCharacter()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1021480", Offset = "0x1021480", VA = "0x1021480")]
	private float GetRotationValue()
	{
		return default(float);
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x10217C8", Offset = "0x10217C8", VA = "0x10217C8")]
	public Vector2 GetRightJoystickValue()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x10218AC", Offset = "0x10218AC", VA = "0x10218AC")]
	public Vector2 GetLeftJoystickValue()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x1021950", Offset = "0x1021950", VA = "0x1021950")]
	private Vector2 GetJoystickValue(Vector2 _input)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x102183C", Offset = "0x102183C", VA = "0x102183C")]
	private float GetSnapTurnValue(float currentAxisValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x1020A28", Offset = "0x1020A28", VA = "0x1020A28")]
	private void MovePlayerCharacter()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x10222A8", Offset = "0x10222A8", VA = "0x10222A8")]
	public void ResetCurrentGravity()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x10222B0", Offset = "0x10222B0", VA = "0x10222B0")]
	public Vector3 GetCurrentMoveDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x1021F80", Offset = "0x1021F80", VA = "0x1021F80")]
	private void UpdateTeleportBeam()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x10222C0", Offset = "0x10222C0", VA = "0x10222C0")]
	private Vector3[] CalculateTeleportBeamArc(Vector3 initialPoint, Vector3 initialDirection)
	{
		return null;
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x1021F44", Offset = "0x1021F44", VA = "0x1021F44")]
	private void PerformTeleportMovement()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x1022D70", Offset = "0x1022D70", VA = "0x1022D70")]
	public void SetSecondaryVelocity(Vector3 newVelocity)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x1020728", Offset = "0x1020728", VA = "0x1020728")]
	public void StartClimbing(Vector3 climbingPoint, PlayerHand.HandType handType)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x1020864", Offset = "0x1020864", VA = "0x1020864")]
	private void StopClimbing(PlayerHand.HandType hand)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x1022D9C", Offset = "0x1022D9C", VA = "0x1022D9C")]
	public Vector3 GetSecondaryVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x1022D7C", Offset = "0x1022D7C", VA = "0x1022D7C")]
	public void AddImpactVelocity(Vector3 additionalVelocity)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x1022D10", Offset = "0x1022D10", VA = "0x1022D10")]
	public void TeleportPlayerToLocation(Vector3 position, bool skipOffset = false)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x10202E4", Offset = "0x10202E4", VA = "0x10202E4")]
	private void AttemptToTeleportBackInBounds(bool skipBoundsCheck = false)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x1021E4C", Offset = "0x1021E4C", VA = "0x1021E4C")]
	public Vector3 GetHandPosition(PlayerHand.HandType hand)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x101FE84", Offset = "0x101FE84", VA = "0x101FE84")]
	public void SetMovementModeBasedOnSettings()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x1021BA8", Offset = "0x1021BA8", VA = "0x1021BA8")]
	private float GetSnapTurnAngle()
	{
		return default(float);
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x1021B9C", Offset = "0x1021B9C", VA = "0x1021B9C")]
	private float GetSnapTurnDeadzone()
	{
		return default(float);
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1021F38", Offset = "0x1021F38", VA = "0x1021F38")]
	private float GetTeleportDeadzone()
	{
		return default(float);
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x10216BC", Offset = "0x10216BC", VA = "0x10216BC")]
	private PlayerHand.HandType RotationHand()
	{
		return default(PlayerHand.HandType);
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1021C94", Offset = "0x1021C94", VA = "0x1021C94")]
	private PlayerHand.HandType MovementHand()
	{
		return default(PlayerHand.HandType);
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1021D98", Offset = "0x1021D98", VA = "0x1021D98")]
	private float GetForwardForMovement()
	{
		return default(float);
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x1022DA8", Offset = "0x1022DA8", VA = "0x1022DA8")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000036")]
public class PlayerHand : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000037")]
	public class PlatformSpecificSetting
	{
		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SystemConfiguration configuration;

		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 positionOffset;

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 rotationOffset;

		[Token(Token = "0x600014A")]
		[Address(RVA = "0x1023864", Offset = "0x1023864", VA = "0x1023864")]
		public PlatformSpecificSetting()
		{
		}
	}

	[Token(Token = "0x2000038")]
	public enum HandType
	{
		[Token(Token = "0x400013E")]
		None,
		[Token(Token = "0x400013F")]
		Right,
		[Token(Token = "0x4000140")]
		Left,
		[Token(Token = "0x4000141")]
		Both
	}

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Settings")]
	public HandType handType;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody weaponAttachPoint;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody itemAttachPoint;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform handParent;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlatformSpecificSetting[] platformSpecificSettings;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandBase physicsCollider;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform pointer;

	[NonSerialized]
	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SphereCollider handInteractCollider;

	[NonSerialized]
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BaseInteract currentlyHeldObject;

	[NonSerialized]
	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BaseInteract hoversOverObject;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 _originalWeaponAttachmentRotation;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<ClimbableObject> _climbableObjects;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _uiLineTraceEnabled;

	[NonSerialized]
	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public VelocityEstimator velocityEstimator;

	[Token(Token = "0x1700001A")]
	public WeaponBase CurrentlyEquippedWeapon
	{
		[Token(Token = "0x6000139")]
		[Address(RVA = "0x101BFF0", Offset = "0x101BFF0", VA = "0x101BFF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001B")]
	public XRInteractorLineVisual LineInteractorVisual
	{
		[Token(Token = "0x600013A")]
		[Address(RVA = "0x1022EEC", Offset = "0x1022EEC", VA = "0x1022EEC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600013B")]
		[Address(RVA = "0x1022EF4", Offset = "0x1022EF4", VA = "0x1022EF4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public XRRayInteractor UiRayInteractor
	{
		[Token(Token = "0x600013C")]
		[Address(RVA = "0x1022EFC", Offset = "0x1022EFC", VA = "0x1022EFC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600013D")]
		[Address(RVA = "0x1022F04", Offset = "0x1022F04", VA = "0x1022F04")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public bool UiLineTracerEnabled
	{
		[Token(Token = "0x600013E")]
		[Address(RVA = "0x1022F0C", Offset = "0x1022F0C", VA = "0x1022F0C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600013F")]
		[Address(RVA = "0x101F11C", Offset = "0x101F11C", VA = "0x101F11C")]
		set
		{
		}
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1022F14", Offset = "0x1022F14", VA = "0x1022F14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x10230C0", Offset = "0x10230C0", VA = "0x10230C0")]
	private void Instance_GameHandlerInitialized()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x102319C", Offset = "0x102319C", VA = "0x102319C")]
	private void ApplyModelOffsets(SystemConfiguration systemConfiguration)
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x10233BC", Offset = "0x10233BC", VA = "0x10233BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x10234A0", Offset = "0x10234A0", VA = "0x10234A0")]
	public void SetWeaponAttachmentRotation(float angle)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x10234F0", Offset = "0x10234F0", VA = "0x10234F0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1023584", Offset = "0x1023584", VA = "0x1023584")]
	public void SetHandModelVisible(bool v)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1023628", Offset = "0x1023628", VA = "0x1023628")]
	public bool IsHandEmpty(bool hoverCheck = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x10204CC", Offset = "0x10204CC", VA = "0x10204CC")]
	public ClimbableObject GetBestClimbableObject()
	{
		return null;
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x10237DC", Offset = "0x10237DC", VA = "0x10237DC")]
	public PlayerHand()
	{
	}
}
[Token(Token = "0x200003A")]
public class PlayerInputAction : IInputActionCollection2, IInputActionCollection, IEnumerable<InputAction>, IEnumerable, IDisposable
{
	[Token(Token = "0x200003B")]
	public struct RightHandActions
	{
		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PlayerInputAction m_Wrapper;

		[Token(Token = "0x17000028")]
		public InputAction JoystickAxis
		{
			[Token(Token = "0x6000163")]
			[Address(RVA = "0x1021934", Offset = "0x1021934", VA = "0x1021934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		public InputAction HandVelocity
		{
			[Token(Token = "0x6000164")]
			[Address(RVA = "0x1023B44", Offset = "0x1023B44", VA = "0x1023B44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		public InputAction Trigger
		{
			[Token(Token = "0x6000165")]
			[Address(RVA = "0x101A54C", Offset = "0x101A54C", VA = "0x101A54C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002B")]
		public InputAction DevicePosition
		{
			[Token(Token = "0x6000166")]
			[Address(RVA = "0x1023B60", Offset = "0x1023B60", VA = "0x1023B60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		public InputAction DeviceRotation
		{
			[Token(Token = "0x6000167")]
			[Address(RVA = "0x1023B7C", Offset = "0x1023B7C", VA = "0x1023B7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002D")]
		public InputAction TrackingState
		{
			[Token(Token = "0x6000168")]
			[Address(RVA = "0x1023B98", Offset = "0x1023B98", VA = "0x1023B98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		public InputAction Haptic
		{
			[Token(Token = "0x6000169")]
			[Address(RVA = "0x1023BB4", Offset = "0x1023BB4", VA = "0x1023BB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		public InputAction Grip
		{
			[Token(Token = "0x600016A")]
			[Address(RVA = "0x101A568", Offset = "0x101A568", VA = "0x101A568")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		public InputAction SecondaryButton
		{
			[Token(Token = "0x600016B")]
			[Address(RVA = "0x1023BD0", Offset = "0x1023BD0", VA = "0x1023BD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		public InputAction PrimaryButton
		{
			[Token(Token = "0x600016C")]
			[Address(RVA = "0x1023BEC", Offset = "0x1023BEC", VA = "0x1023BEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		public InputAction PointerPosition
		{
			[Token(Token = "0x600016D")]
			[Address(RVA = "0x1023C08", Offset = "0x1023C08", VA = "0x1023C08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		public InputAction PointerRotation
		{
			[Token(Token = "0x600016E")]
			[Address(RVA = "0x1023C24", Offset = "0x1023C24", VA = "0x1023C24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		public bool enabled
		{
			[Token(Token = "0x6000172")]
			[Address(RVA = "0x1023CA4", Offset = "0x1023CA4", VA = "0x1023CA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000162")]
		[Address(RVA = "0x1023B3C", Offset = "0x1023B3C", VA = "0x1023B3C")]
		public RightHandActions(PlayerInputAction wrapper)
		{
		}

		[Token(Token = "0x600016F")]
		[Address(RVA = "0x1023C40", Offset = "0x1023C40", VA = "0x1023C40")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6000170")]
		[Address(RVA = "0x1023C5C", Offset = "0x1023C5C", VA = "0x1023C5C")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000171")]
		[Address(RVA = "0x1023C80", Offset = "0x1023C80", VA = "0x1023C80")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0x1023CC8", Offset = "0x1023CC8", VA = "0x1023CC8")]
		public static implicit operator InputActionMap(RightHandActions set)
		{
			return null;
		}

		[Token(Token = "0x6000174")]
		[Address(RVA = "0x1023CE0", Offset = "0x1023CE0", VA = "0x1023CE0")]
		public void SetCallbacks(IRightHandActions instance)
		{
		}
	}

	[Token(Token = "0x200003C")]
	public struct LeftHandActions
	{
		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PlayerInputAction m_Wrapper;

		[Token(Token = "0x17000035")]
		public InputAction JoystickAxis
		{
			[Token(Token = "0x6000176")]
			[Address(RVA = "0x102681C", Offset = "0x102681C", VA = "0x102681C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		public InputAction HandVelocity
		{
			[Token(Token = "0x6000177")]
			[Address(RVA = "0x1026838", Offset = "0x1026838", VA = "0x1026838")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000037")]
		public InputAction Trigger
		{
			[Token(Token = "0x6000178")]
			[Address(RVA = "0x1026854", Offset = "0x1026854", VA = "0x1026854")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		public InputAction DevicePosition
		{
			[Token(Token = "0x6000179")]
			[Address(RVA = "0x1026870", Offset = "0x1026870", VA = "0x1026870")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000039")]
		public InputAction DeviceRotation
		{
			[Token(Token = "0x600017A")]
			[Address(RVA = "0x102688C", Offset = "0x102688C", VA = "0x102688C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		public InputAction DeviceState
		{
			[Token(Token = "0x600017B")]
			[Address(RVA = "0x10268A8", Offset = "0x10268A8", VA = "0x10268A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003B")]
		public InputAction Haptic
		{
			[Token(Token = "0x600017C")]
			[Address(RVA = "0x10268C4", Offset = "0x10268C4", VA = "0x10268C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		public InputAction Grip
		{
			[Token(Token = "0x600017D")]
			[Address(RVA = "0x10268E0", Offset = "0x10268E0", VA = "0x10268E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003D")]
		public InputAction SecondaryButton
		{
			[Token(Token = "0x600017E")]
			[Address(RVA = "0x10268FC", Offset = "0x10268FC", VA = "0x10268FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		public InputAction PrimaryButton
		{
			[Token(Token = "0x600017F")]
			[Address(RVA = "0x1026918", Offset = "0x1026918", VA = "0x1026918")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003F")]
		public InputAction PointerPosition
		{
			[Token(Token = "0x6000180")]
			[Address(RVA = "0x1026934", Offset = "0x1026934", VA = "0x1026934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		public InputAction PointerRotation
		{
			[Token(Token = "0x6000181")]
			[Address(RVA = "0x1026950", Offset = "0x1026950", VA = "0x1026950")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000041")]
		public bool enabled
		{
			[Token(Token = "0x6000185")]
			[Address(RVA = "0x10269D0", Offset = "0x10269D0", VA = "0x10269D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000175")]
		[Address(RVA = "0x1026814", Offset = "0x1026814", VA = "0x1026814")]
		public LeftHandActions(PlayerInputAction wrapper)
		{
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0x102696C", Offset = "0x102696C", VA = "0x102696C")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0x1026988", Offset = "0x1026988", VA = "0x1026988")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0x10269AC", Offset = "0x10269AC", VA = "0x10269AC")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000186")]
		[Address(RVA = "0x10269F4", Offset = "0x10269F4", VA = "0x10269F4")]
		public static implicit operator InputActionMap(LeftHandActions set)
		{
			return null;
		}

		[Token(Token = "0x6000187")]
		[Address(RVA = "0x1026A0C", Offset = "0x1026A0C", VA = "0x1026A0C")]
		public void SetCallbacks(ILeftHandActions instance)
		{
		}
	}

	[Token(Token = "0x200003D")]
	public struct MouseActions
	{
		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PlayerInputAction m_Wrapper;

		[Token(Token = "0x17000042")]
		public InputAction LookX
		{
			[Token(Token = "0x6000189")]
			[Address(RVA = "0x1029548", Offset = "0x1029548", VA = "0x1029548")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000043")]
		public InputAction LookY
		{
			[Token(Token = "0x600018A")]
			[Address(RVA = "0x1029564", Offset = "0x1029564", VA = "0x1029564")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		public InputAction TriggerRightClick
		{
			[Token(Token = "0x600018B")]
			[Address(RVA = "0x1029580", Offset = "0x1029580", VA = "0x1029580")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000045")]
		public bool enabled
		{
			[Token(Token = "0x600018F")]
			[Address(RVA = "0x1029600", Offset = "0x1029600", VA = "0x1029600")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000188")]
		[Address(RVA = "0x1029540", Offset = "0x1029540", VA = "0x1029540")]
		public MouseActions(PlayerInputAction wrapper)
		{
		}

		[Token(Token = "0x600018C")]
		[Address(RVA = "0x102959C", Offset = "0x102959C", VA = "0x102959C")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x600018D")]
		[Address(RVA = "0x10295B8", Offset = "0x10295B8", VA = "0x10295B8")]
		public void Enable()
		{
		}

		[Token(Token = "0x600018E")]
		[Address(RVA = "0x10295DC", Offset = "0x10295DC", VA = "0x10295DC")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000190")]
		[Address(RVA = "0x1029624", Offset = "0x1029624", VA = "0x1029624")]
		public static implicit operator InputActionMap(MouseActions set)
		{
			return null;
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0x102963C", Offset = "0x102963C", VA = "0x102963C")]
		public void SetCallbacks(IMouseActions instance)
		{
		}
	}

	[Token(Token = "0x200003E")]
	public struct SpectatorCameraActions
	{
		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PlayerInputAction m_Wrapper;

		[Token(Token = "0x17000046")]
		public InputAction ToggleHUD
		{
			[Token(Token = "0x6000193")]
			[Address(RVA = "0x102A16C", Offset = "0x102A16C", VA = "0x102A16C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		public bool enabled
		{
			[Token(Token = "0x6000197")]
			[Address(RVA = "0x102A1EC", Offset = "0x102A1EC", VA = "0x102A1EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000192")]
		[Address(RVA = "0x102A164", Offset = "0x102A164", VA = "0x102A164")]
		public SpectatorCameraActions(PlayerInputAction wrapper)
		{
		}

		[Token(Token = "0x6000194")]
		[Address(RVA = "0x102A188", Offset = "0x102A188", VA = "0x102A188")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x6000195")]
		[Address(RVA = "0x102A1A4", Offset = "0x102A1A4", VA = "0x102A1A4")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000196")]
		[Address(RVA = "0x102A1C8", Offset = "0x102A1C8", VA = "0x102A1C8")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000198")]
		[Address(RVA = "0x102A210", Offset = "0x102A210", VA = "0x102A210")]
		public static implicit operator InputActionMap(SpectatorCameraActions set)
		{
			return null;
		}

		[Token(Token = "0x6000199")]
		[Address(RVA = "0x102A228", Offset = "0x102A228", VA = "0x102A228")]
		public void SetCallbacks(ISpectatorCameraActions instance)
		{
		}
	}

	[Token(Token = "0x200003F")]
	public struct PlayerActions
	{
		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PlayerInputAction m_Wrapper;

		[Token(Token = "0x17000048")]
		public InputAction PlayerPresence
		{
			[Token(Token = "0x600019B")]
			[Address(RVA = "0x102A638", Offset = "0x102A638", VA = "0x102A638")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000049")]
		public bool enabled
		{
			[Token(Token = "0x600019F")]
			[Address(RVA = "0x102A6B8", Offset = "0x102A6B8", VA = "0x102A6B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600019A")]
		[Address(RVA = "0x102A630", Offset = "0x102A630", VA = "0x102A630")]
		public PlayerActions(PlayerInputAction wrapper)
		{
		}

		[Token(Token = "0x600019C")]
		[Address(RVA = "0x102A654", Offset = "0x102A654", VA = "0x102A654")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x600019D")]
		[Address(RVA = "0x102A670", Offset = "0x102A670", VA = "0x102A670")]
		public void Enable()
		{
		}

		[Token(Token = "0x600019E")]
		[Address(RVA = "0x102A694", Offset = "0x102A694", VA = "0x102A694")]
		public void Disable()
		{
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x102A6DC", Offset = "0x102A6DC", VA = "0x102A6DC")]
		public static implicit operator InputActionMap(PlayerActions set)
		{
			return null;
		}

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x102A6F4", Offset = "0x102A6F4", VA = "0x102A6F4")]
		public void SetCallbacks(IPlayerActions instance)
		{
		}
	}

	[Token(Token = "0x2000040")]
	public interface IRightHandActions
	{
		[Token(Token = "0x60001A2")]
		void OnJoystickAxis(InputAction.CallbackContext context);

		[Token(Token = "0x60001A3")]
		void OnHandVelocity(InputAction.CallbackContext context);

		[Token(Token = "0x60001A4")]
		void OnTrigger(InputAction.CallbackContext context);

		[Token(Token = "0x60001A5")]
		void OnDevicePosition(InputAction.CallbackContext context);

		[Token(Token = "0x60001A6")]
		void OnDeviceRotation(InputAction.CallbackContext context);

		[Token(Token = "0x60001A7")]
		void OnTrackingState(InputAction.CallbackContext context);

		[Token(Token = "0x60001A8")]
		void OnHaptic(InputAction.CallbackContext context);

		[Token(Token = "0x60001A9")]
		void OnGrip(InputAction.CallbackContext context);

		[Token(Token = "0x60001AA")]
		void OnSecondaryButton(InputAction.CallbackContext context);

		[Token(Token = "0x60001AB")]
		void OnPrimaryButton(InputAction.CallbackContext context);

		[Token(Token = "0x60001AC")]
		void OnPointerPosition(InputAction.CallbackContext context);

		[Token(Token = "0x60001AD")]
		void OnPointerRotation(InputAction.CallbackContext context);
	}

	[Token(Token = "0x2000041")]
	public interface ILeftHandActions
	{
		[Token(Token = "0x60001AE")]
		void OnJoystickAxis(InputAction.CallbackContext context);

		[Token(Token = "0x60001AF")]
		void OnHandVelocity(InputAction.CallbackContext context);

		[Token(Token = "0x60001B0")]
		void OnTrigger(InputAction.CallbackContext context);

		[Token(Token = "0x60001B1")]
		void OnDevicePosition(InputAction.CallbackContext context);

		[Token(Token = "0x60001B2")]
		void OnDeviceRotation(InputAction.CallbackContext context);

		[Token(Token = "0x60001B3")]
		void OnDeviceState(InputAction.CallbackContext context);

		[Token(Token = "0x60001B4")]
		void OnHaptic(InputAction.CallbackContext context);

		[Token(Token = "0x60001B5")]
		void OnGrip(InputAction.CallbackContext context);

		[Token(Token = "0x60001B6")]
		void OnSecondaryButton(InputAction.CallbackContext context);

		[Token(Token = "0x60001B7")]
		void OnPrimaryButton(InputAction.CallbackContext context);

		[Token(Token = "0x60001B8")]
		void OnPointerPosition(InputAction.CallbackContext context);

		[Token(Token = "0x60001B9")]
		void OnPointerRotation(InputAction.CallbackContext context);
	}

	[Token(Token = "0x2000042")]
	public interface IMouseActions
	{
		[Token(Token = "0x60001BA")]
		void OnLookX(InputAction.CallbackContext context);

		[Token(Token = "0x60001BB")]
		void OnLookY(InputAction.CallbackContext context);

		[Token(Token = "0x60001BC")]
		void OnTriggerRightClick(InputAction.CallbackContext context);
	}

	[Token(Token = "0x2000043")]
	public interface ISpectatorCameraActions
	{
		[Token(Token = "0x60001BD")]
		void OnToggleHUD(InputAction.CallbackContext context);
	}

	[Token(Token = "0x2000044")]
	public interface IPlayerActions
	{
		[Token(Token = "0x60001BE")]
		void OnPlayerPresence(InputAction.CallbackContext context);
	}

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly InputActionMap m_RightHand;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IRightHandActions m_RightHandActionsCallbackInterface;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly InputAction m_RightHand_JoystickAxis;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly InputAction m_RightHand_HandVelocity;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly InputAction m_RightHand_Trigger;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly InputAction m_RightHand_DevicePosition;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private readonly InputAction m_RightHand_DeviceRotation;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly InputAction m_RightHand_TrackingState;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly InputAction m_RightHand_Haptic;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly InputAction m_RightHand_Grip;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly InputAction m_RightHand_SecondaryButton;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly InputAction m_RightHand_PrimaryButton;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly InputAction m_RightHand_PointerPosition;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly InputAction m_RightHand_PointerRotation;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly InputActionMap m_LeftHand;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ILeftHandActions m_LeftHandActionsCallbackInterface;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly InputAction m_LeftHand_JoystickAxis;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private readonly InputAction m_LeftHand_HandVelocity;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private readonly InputAction m_LeftHand_Trigger;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private readonly InputAction m_LeftHand_DevicePosition;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private readonly InputAction m_LeftHand_DeviceRotation;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private readonly InputAction m_LeftHand_DeviceState;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private readonly InputAction m_LeftHand_Haptic;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private readonly InputAction m_LeftHand_Grip;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private readonly InputAction m_LeftHand_SecondaryButton;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private readonly InputAction m_LeftHand_PrimaryButton;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private readonly InputAction m_LeftHand_PointerPosition;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private readonly InputAction m_LeftHand_PointerRotation;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private readonly InputActionMap m_Mouse;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private IMouseActions m_MouseActionsCallbackInterface;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private readonly InputAction m_Mouse_LookX;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private readonly InputAction m_Mouse_LookY;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private readonly InputAction m_Mouse_TriggerRightClick;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private readonly InputActionMap m_SpectatorCamera;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private ISpectatorCameraActions m_SpectatorCameraActionsCallbackInterface;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private readonly InputAction m_SpectatorCamera_ToggleHUD;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private readonly InputActionMap m_Player;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private IPlayerActions m_PlayerActionsCallbackInterface;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private readonly InputAction m_Player_PlayerPresence;

	[Token(Token = "0x1700001E")]
	public InputActionAsset asset
	{
		[Token(Token = "0x600014D")]
		[Address(RVA = "0x1023890", Offset = "0x1023890", VA = "0x1023890")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700001F")]
	public InputBinding? bindingMask
	{
		[Token(Token = "0x6000150")]
		[Address(RVA = "0x10238F4", Offset = "0x10238F4", VA = "0x10238F4", Slot = "7")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000151")]
		[Address(RVA = "0x102391C", Offset = "0x102391C", VA = "0x102391C", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public ReadOnlyArray<InputDevice>? devices
	{
		[Token(Token = "0x6000152")]
		[Address(RVA = "0x1023968", Offset = "0x1023968", VA = "0x1023968", Slot = "9")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000153")]
		[Address(RVA = "0x10239A8", Offset = "0x10239A8", VA = "0x10239A8", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public ReadOnlyArray<InputControlScheme> controlSchemes
	{
		[Token(Token = "0x6000154")]
		[Address(RVA = "0x10239F4", Offset = "0x10239F4", VA = "0x10239F4", Slot = "11")]
		get
		{
			return default(ReadOnlyArray<InputControlScheme>);
		}
	}

	[Token(Token = "0x17000022")]
	public IEnumerable<InputBinding> bindings
	{
		[Token(Token = "0x600015A")]
		[Address(RVA = "0x1023A64", Offset = "0x1023A64", VA = "0x1023A64", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000023")]
	public RightHandActions RightHand
	{
		[Token(Token = "0x600015D")]
		[Address(RVA = "0x101A52C", Offset = "0x101A52C", VA = "0x101A52C")]
		get
		{
			return default(RightHandActions);
		}
	}

	[Token(Token = "0x17000024")]
	public LeftHandActions LeftHand
	{
		[Token(Token = "0x600015E")]
		[Address(RVA = "0x101A50C", Offset = "0x101A50C", VA = "0x101A50C")]
		get
		{
			return default(LeftHandActions);
		}
	}

	[Token(Token = "0x17000025")]
	public MouseActions Mouse
	{
		[Token(Token = "0x600015F")]
		[Address(RVA = "0x101FE64", Offset = "0x101FE64", VA = "0x101FE64")]
		get
		{
			return default(MouseActions);
		}
	}

	[Token(Token = "0x17000026")]
	public SpectatorCameraActions SpectatorCamera
	{
		[Token(Token = "0x6000160")]
		[Address(RVA = "0x1023AFC", Offset = "0x1023AFC", VA = "0x1023AFC")]
		get
		{
			return default(SpectatorCameraActions);
		}
	}

	[Token(Token = "0x17000027")]
	public PlayerActions Player
	{
		[Token(Token = "0x6000161")]
		[Address(RVA = "0x1023B1C", Offset = "0x1023B1C", VA = "0x1023B1C")]
		get
		{
			return default(PlayerActions);
		}
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x101E83C", Offset = "0x101E83C", VA = "0x101E83C")]
	public PlayerInputAction()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1023898", Offset = "0x1023898", VA = "0x1023898", Slot = "17")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x1023A10", Offset = "0x1023A10", VA = "0x1023A10", Slot = "12")]
	public bool Contains(InputAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1023A2C", Offset = "0x1023A2C", VA = "0x1023A2C", Slot = "15")]
	public IEnumerator<InputAction> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1023A48", Offset = "0x1023A48", VA = "0x1023A48", Slot = "16")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x101FE48", Offset = "0x101FE48", VA = "0x101FE48", Slot = "13")]
	public void Enable()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x102006C", Offset = "0x102006C", VA = "0x102006C", Slot = "14")]
	public void Disable()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1023A80", Offset = "0x1023A80", VA = "0x1023A80", Slot = "5")]
	public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
	{
		return null;
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1023AA0", Offset = "0x1023AA0", VA = "0x1023AA0", Slot = "6")]
	public int FindBinding(InputBinding bindingMask, out InputAction action)
	{
		return default(int);
	}
}
[Token(Token = "0x2000045")]
public class PlayerMockController : MonoBehaviour
{
	[Token(Token = "0x2000046")]
	public enum CONTROL_MODE
	{
		[Token(Token = "0x4000182")]
		MOVING,
		[Token(Token = "0x4000183")]
		CONTROLLERS
	}

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controllerLeft;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controllerRight;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject head;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float moveSpeed;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float sprintFactor;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float mouseLookSensitivity;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float yMinLimit;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float yMaxLimit;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private CONTROL_MODE _controlMode;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _defaultControllerLeftPos;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 _defaultControllerRightPos;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlayerInputAction _inputActions;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CharacterController _characterController;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Camera _camera;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _x;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _y;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject _currentSelectedController;

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x102AAFC", Offset = "0x102AAFC", VA = "0x102AAFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x102ACCC", Offset = "0x102ACCC", VA = "0x102ACCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x102B88C", Offset = "0x102B88C", VA = "0x102B88C")]
	private float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x102B8C8", Offset = "0x102B8C8", VA = "0x102B8C8")]
	public PlayerMockController()
	{
	}
}
[Token(Token = "0x2000047")]
public class ControllerTextTest : MonoBehaviour
{
	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro txt;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool eventPressed;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool ovrPressed;

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x102B900", Offset = "0x102B900", VA = "0x102B900")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x102B958", Offset = "0x102B958", VA = "0x102B958")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x102B95C", Offset = "0x102B95C", VA = "0x102B95C")]
	public ControllerTextTest()
	{
	}
}
[Token(Token = "0x2000048")]
public class CybershoesInputTest : MonoBehaviour
{
	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro text;

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x102B964", Offset = "0x102B964", VA = "0x102B964")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x102BB3C", Offset = "0x102BB3C", VA = "0x102BB3C")]
	public CybershoesInputTest()
	{
	}
}
[Token(Token = "0x2000049")]
public class Diagnosticstest : MonoBehaviour
{
	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject obj1;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject obj2;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int amount;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public long avgObj1;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public long avgObj2;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int timesObj1;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int timesObj2;

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x102BB44", Offset = "0x102BB44", VA = "0x102BB44")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x102BEF0", Offset = "0x102BEF0", VA = "0x102BEF0")]
	public Diagnosticstest()
	{
	}
}
[Token(Token = "0x200004A")]
public class SpawnAllItems : MonoBehaviour
{
	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefabUpgrade;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offsetForEachItem;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int amountUntilNextRow;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 nextRowOffset;

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x102BF00", Offset = "0x102BF00", VA = "0x102BF00")]
	public void SpawnThemAll()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x102C160", Offset = "0x102C160", VA = "0x102C160")]
	public SpawnAllItems()
	{
	}
}
[Token(Token = "0x200004B")]
public class SpawnGameobject : ItemBase
{
	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform pointToSpawnAt;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject objToSpawn;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool precisePos;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public UnityEvent OnInteract;

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x102C170", Offset = "0x102C170", VA = "0x102C170", Slot = "11")]
	public override void OnUseStart()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x102C2C4", Offset = "0x102C2C4", VA = "0x102C2C4")]
	[ContextMenu("SPAWN")]
	private void Spawn()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x102C46C", Offset = "0x102C46C", VA = "0x102C46C")]
	public SpawnGameobject()
	{
	}
}
[Token(Token = "0x200004C")]
public class WorldGenTestArea : MonoBehaviour
{
	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI clusterID;

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x102C474", Offset = "0x102C474", VA = "0x102C474")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x102C998", Offset = "0x102C998", VA = "0x102C998")]
	public WorldGenTestArea()
	{
	}
}
[Serializable]
[Token(Token = "0x200004D")]
public class DropTableHandler : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200004E")]
	public class DropTableContainer
	{
		[Token(Token = "0x400019A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DropTable[] dropTables;

		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x102D588", Offset = "0x102D588", VA = "0x102D588")]
		public DropTableContainer()
		{
		}
	}

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject upgradeAll;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DropTableContainer dropTableContainer;

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x102C9A0", Offset = "0x102C9A0", VA = "0x102C9A0")]
	public DropTable[] GetDropTablesByName(string s)
	{
		return null;
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x102CAF0", Offset = "0x102CAF0", VA = "0x102CAF0")]
	public GameObject DropUpgradeAt(Vector3 pos, string pool, int tier = -1)
	{
		return null;
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x102CC20", Offset = "0x102CC20", VA = "0x102CC20")]
	public GameObject DropUpgradeId(Vector3 pos, string id)
	{
		return null;
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x102CD40", Offset = "0x102CD40", VA = "0x102CD40")]
	public void InitDropTables()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x102CE80", Offset = "0x102CE80", VA = "0x102CE80")]
	public void CreateDropTable(string _name)
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x102D03C", Offset = "0x102D03C", VA = "0x102D03C")]
	public void AddToDropTable(string _addTo, string _itemToAdd, float _prob, float _hardModeProb, int _minAmount, int _maxAmount)
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x102D1FC", Offset = "0x102D1FC", VA = "0x102D1FC")]
	public void ClearDropsFromTable(string pRemoveFrom)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x102D2B4", Offset = "0x102D2B4", VA = "0x102D2B4")]
	public void RemoveFromDropTable(string _removeFrom, string _itemToRemove)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x102D454", Offset = "0x102D454", VA = "0x102D454")]
	public DropTable.DropEntry GetDropEntry(string _dropTable, string _id)
	{
		return null;
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x102D580", Offset = "0x102D580", VA = "0x102D580")]
	public DropTableHandler()
	{
	}
}
[Token(Token = "0x2000052")]
public class AttackBeam : MonoBehaviour
{
	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxDistance;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float moveSpeed;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject particles;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeAliveAfterCollide;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource beamSoundSource;

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x102D630", Offset = "0x102D630", VA = "0x102D630")]
	public void DisableBeam()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x102D664", Offset = "0x102D664", VA = "0x102D664")]
	public void EnableBeam()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x102D718", Offset = "0x102D718", VA = "0x102D718")]
	public AttackBeam()
	{
	}
}
[Token(Token = "0x2000054")]
public class CrossbowBoltExplosion : MonoBehaviour
{
	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ADSoundEffect explosionSound;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float explosionForce;

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x102DC00", Offset = "0x102DC00", VA = "0x102DC00")]
	private void Start()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x102E4C0", Offset = "0x102E4C0", VA = "0x102E4C0")]
	public CrossbowBoltExplosion()
	{
	}
}
[Token(Token = "0x2000055")]
public class DamageArea : MonoBehaviour
{
	[Token(Token = "0x2000056")]
	public delegate void DamageEvent(float _damage);

	[Token(Token = "0x2000057")]
	[CompilerGenerated]
	private sealed class <DoHits>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DamageArea <>4__this;

		[Token(Token = "0x1700004C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001FC")]
			[Address(RVA = "0x102F2F8", Offset = "0x102F2F8", VA = "0x102F2F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001FE")]
			[Address(RVA = "0x102F340", Offset = "0x102F340", VA = "0x102F340", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x102EB4C", Offset = "0x102EB4C", VA = "0x102EB4C")]
		[DebuggerHidden]
		public <DoHits>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x102ED88", Offset = "0x102ED88", VA = "0x102ED88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x102ED8C", Offset = "0x102ED8C", VA = "0x102ED8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001FD")]
		[Address(RVA = "0x102F300", Offset = "0x102F300", VA = "0x102F300", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public int damage;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float damageIntervall;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool instakill;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ATTACKTYPE damageType;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool doEffectHit;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[Header("Detail Configuration")]
	public bool bulletsImmune;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool enemiesImmune;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool playerImmune;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float delayForDamageAfterSpawn;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<LivingBase, float> _objectsInArea;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _coroutineRunning;

	[Token(Token = "0x14000007")]
	public event DamageEvent OnDealDamage
	{
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x102E4D0", Offset = "0x102E4D0", VA = "0x102E4D0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x102E56C", Offset = "0x102E56C", VA = "0x102E56C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x102E608", Offset = "0x102E608", VA = "0x102E608")]
	public void ClearArea()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x102E658", Offset = "0x102E658", VA = "0x102E658")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x102EA58", Offset = "0x102EA58", VA = "0x102EA58")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x102E9E4", Offset = "0x102E9E4", VA = "0x102E9E4")]
	[IteratorStateMachine(typeof(<DoHits>d__18))]
	private IEnumerator DoHits()
	{
		return null;
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x102EB74", Offset = "0x102EB74", VA = "0x102EB74")]
	public DamageArea()
	{
	}
}
[Token(Token = "0x2000058")]
public class DamageAreaPit : MonoBehaviour
{
	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x102F348", Offset = "0x102F348", VA = "0x102F348")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x102F6CC", Offset = "0x102F6CC", VA = "0x102F6CC")]
	public DamageAreaPit()
	{
	}
}
[Token(Token = "0x2000059")]
public class Explosion : MonoBehaviour
{
	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ADSoundEffect explosionSound;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int damage;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float radius;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float explosionForce;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool damagePlayer;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool damagesEnemies;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool doWallCheck;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	public bool enableCritChance;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ATTACKTYPE attackType;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Runtime Variables")]
	public GameObject origin;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Light _light;

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x102F6D4", Offset = "0x102F6D4", VA = "0x102F6D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x102FFC4", Offset = "0x102FFC4", VA = "0x102FFC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x10300BC", Offset = "0x10300BC", VA = "0x10300BC")]
	public Explosion()
	{
	}
}
[Token(Token = "0x200005A")]
public class HandModelHealthIndicator : MonoBehaviour
{
	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh normalMesh;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh oneHealthMesh;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshFilter leftHand;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshFilter rightHand;

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x10300DC", Offset = "0x10300DC", VA = "0x10300DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1030194", Offset = "0x1030194", VA = "0x1030194")]
	private void HandModelHealthIndicator_HealthChangedEvent(LivingBase l, string t)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x1030270", Offset = "0x1030270", VA = "0x1030270")]
	public HandModelHealthIndicator()
	{
	}
}
[Token(Token = "0x200005B")]
[Obsolete]
public class ImpactInfo : MonoBehaviour
{
	[Token(Token = "0x6000207")]
	[Address(RVA = "0x1030278", Offset = "0x1030278", VA = "0x1030278")]
	public ImpactInfo()
	{
	}
}
[Token(Token = "0x200005C")]
[Obsolete]
public class KillArea : MonoBehaviour
{
	[Token(Token = "0x6000208")]
	[Address(RVA = "0x1030280", Offset = "0x1030280", VA = "0x1030280")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x1030348", Offset = "0x1030348", VA = "0x1030348")]
	public KillArea()
	{
	}
}
[Token(Token = "0x200005D")]
public class OnParticleHit : MonoBehaviour
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ADSoundEffect soundOnStart;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int damageOnHit;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ATTACKTYPE attacktype;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int particleCount;

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x1030350", Offset = "0x1030350", VA = "0x1030350")]
	public void Start()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x1030470", Offset = "0x1030470", VA = "0x1030470")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x1030588", Offset = "0x1030588", VA = "0x1030588")]
	public OnParticleHit()
	{
	}
}
[Token(Token = "0x200005E")]
public class ParticleDamage : MonoBehaviour
{
	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool damageDestroyProps;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool damagePlayer;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool damageEnemies;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int damage;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ATTACKTYPE attackType;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float effectTime;

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1030590", Offset = "0x1030590", VA = "0x1030590")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x10308D4", Offset = "0x10308D4", VA = "0x10308D4")]
	public ParticleDamage()
	{
	}
}
[Token(Token = "0x200005F")]
public class PlayerFog : MonoBehaviour
{
	[Token(Token = "0x40001D3")]
	public const float SCALE_PCVR = 55f;

	[Token(Token = "0x40001D4")]
	public const float SCALE_QUEST = 47f;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material fogMaterialPCVR;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material fogMaterialQuest;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mesh meshPCVR;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Mesh meshQuest;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform _goal;

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x10308F8", Offset = "0x10308F8", VA = "0x10308F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x1030A44", Offset = "0x1030A44", VA = "0x1030A44")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1030A90", Offset = "0x1030A90", VA = "0x1030A90")]
	public PlayerFog()
	{
	}
}
[Token(Token = "0x2000060")]
public class SpawnMultiBullets : MonoBehaviour
{
	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bulletToSpawn;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int amount;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int degreesDiff;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int speed;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LivingBase _livingBase;

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1030A98", Offset = "0x1030A98", VA = "0x1030A98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x1030B60", Offset = "0x1030B60", VA = "0x1030B60")]
	private void _livingBase_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1030C90", Offset = "0x1030C90", VA = "0x1030C90")]
	public SpawnMultiBullets()
	{
	}
}
[Token(Token = "0x2000061")]
public class WailingPitsActivator : MonoBehaviour
{
	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _active;

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x1030C98", Offset = "0x1030C98", VA = "0x1030C98")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x1030DA8", Offset = "0x1030DA8", VA = "0x1030DA8")]
	public WailingPitsActivator()
	{
	}
}
[Token(Token = "0x2000062")]
public class Water : MonoBehaviour
{
	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public float waterSpeedX;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float waterSpeedY;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool _bobbing;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bobbingScale;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material _mat;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 _offset;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x1030DB0", Offset = "0x1030DB0", VA = "0x1030DB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x1030E20", Offset = "0x1030E20", VA = "0x1030E20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x1030EDC", Offset = "0x1030EDC", VA = "0x1030EDC")]
	public Water()
	{
	}
}
[Token(Token = "0x2000063")]
public class EnemyRegistry : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000064")]
	public class EnemyRegistryEntry
	{
		[Serializable]
		[Token(Token = "0x2000065")]
		public class EnemyPossibility
		{
			[NonSerialized]
			[Token(Token = "0x40001ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EnemyRegistryEntry parent;

			[Token(Token = "0x40001EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject objToSpawn;

			[Token(Token = "0x40001EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[Range(0f, 1f)]
			public float probability;

			[Token(Token = "0x6000223")]
			[Address(RVA = "0x1031314", Offset = "0x1031314", VA = "0x1031314")]
			public EnemyPossibility()
			{
			}
		}

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string registryId;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float enemyProbability;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyPossibility[] possibilities;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public EnemyPossibility[] champions;

		[Token(Token = "0x6000222")]
		[Address(RVA = "0x1031A94", Offset = "0x1031A94", VA = "0x1031A94")]
		public EnemyRegistryEntry()
		{
		}
	}

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Entries")]
	public EnemyRegistryEntry[] enemyRegistryEntries;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, EnemyRegistryEntry> _enemyRegistryDict;

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x1030EF4", Offset = "0x1030EF4", VA = "0x1030EF4")]
	public float GetCurrentChampionProbability()
	{
		return default(float);
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x1031064", Offset = "0x1031064", VA = "0x1031064")]
	public void AddEnemyPossibilityTo(string entryId, GameObject _enemyObj, float _probability)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x1031324", Offset = "0x1031324", VA = "0x1031324")]
	public void InitializeRegistry()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x10314A0", Offset = "0x10314A0", VA = "0x10314A0")]
	public List<EnemyRegistryEntry> GetEntriesFromStringList(List<string> possibleEnemies)
	{
		return null;
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x1031798", Offset = "0x1031798", VA = "0x1031798")]
	public EnemyRegistryEntry.EnemyPossibility GetRandomEnemyFromArrayWithExclusion(EnemyRegistryEntry[] _enemies, float _championProbability, [Optional] string[] _excludedEntries, int seed = 0)
	{
		return null;
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x10318CC", Offset = "0x10318CC", VA = "0x10318CC")]
	public EnemyRegistryEntry.EnemyPossibility GetRandomEnemyFromList(List<EnemyRegistryEntry> _l, float championProbability, int seed)
	{
		return null;
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x1031A18", Offset = "0x1031A18", VA = "0x1031A18")]
	public EnemyRegistryEntry.EnemyPossibility GetWeightedPossibility(EnemyRegistryEntry.EnemyPossibility[] _p, System.Random _rnd)
	{
		return null;
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x1031A8C", Offset = "0x1031A8C", VA = "0x1031A8C")]
	public EnemyRegistry()
	{
	}
}
[Token(Token = "0x2000068")]
public abstract class AI : MonoBehaviour
{
	[Token(Token = "0x2000069")]
	public enum RECOGNITION_QUALITY
	{
		[Token(Token = "0x400020D")]
		EXTREME,
		[Token(Token = "0x400020E")]
		HIGH,
		[Token(Token = "0x400020F")]
		MEDIUM,
		[Token(Token = "0x4000210")]
		LOW
	}

	[Token(Token = "0x200006A")]
	public delegate void OnExclamationMark();

	[Token(Token = "0x200006B")]
	public delegate void OnSeeTarget_();

	[Token(Token = "0x200006C")]
	public delegate void OnLooseTarget_();

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent EventSeePlayer;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent EventLoosePlayer;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool disableOnDeath;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Collider collToDisableOnDeath;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Recognition")]
	public Transform eyesPos;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float recognitionDistance;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float looseDistance;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float timeToForget;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float stunTime;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ignoreRecognitionDistanceWhenAttacked;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public LayerMask occlusionMask;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RECOGNITION_QUALITY recognitionQuality;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform customTarget;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Exclamation Mark")]
	public bool showExclamationMark;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 exclamationOffset;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Override only if not in same Transform")]
	public EnemyBase enemyBase;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Rigidbody rigidb;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Animator animo;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float _stunGoalTime;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float _lastRecognitionCheck;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float _recognitionCheckTime;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float _forgetTimer;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Header("Runtime Vars")]
	public bool hasSeenTarget;

	[Token(Token = "0x14000008")]
	public event OnExclamationMark OnExclamation
	{
		[Token(Token = "0x6000228")]
		[Address(RVA = "0x1031B38", Offset = "0x1031B38", VA = "0x1031B38")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x1031BD4", Offset = "0x1031BD4", VA = "0x1031BD4")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event OnSeeTarget_ OnSeesTarget
	{
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x1031C70", Offset = "0x1031C70", VA = "0x1031C70")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600022B")]
		[Address(RVA = "0x1031D0C", Offset = "0x1031D0C", VA = "0x1031D0C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event OnLooseTarget_ OnLoosesTarget
	{
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x1031DA8", Offset = "0x1031DA8", VA = "0x1031DA8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x1031E44", Offset = "0x1031E44", VA = "0x1031E44")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x1031EE0", Offset = "0x1031EE0", VA = "0x1031EE0", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x1031EE4", Offset = "0x1031EE4", VA = "0x1031EE4", Slot = "5")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x1032354", Offset = "0x1032354", VA = "0x1032354")]
	public bool IsStunned()
	{
		return default(bool);
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x103237C", Offset = "0x103237C", VA = "0x103237C")]
	private void EnemyBase_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x1032418", Offset = "0x1032418", VA = "0x1032418")]
	private void PlayerLiving_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x10324B8", Offset = "0x10324B8", VA = "0x10324B8", Slot = "6")]
	public virtual void OnHitPlayer()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x103228C", Offset = "0x103228C", VA = "0x103228C")]
	private void InitRecognition()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x10324BC", Offset = "0x10324BC", VA = "0x10324BC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x1032508", Offset = "0x1032508", VA = "0x1032508", Slot = "7")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1032694", Offset = "0x1032694", VA = "0x1032694", Slot = "8")]
	public virtual void OnHit(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x10326C8", Offset = "0x10326C8", VA = "0x10326C8")]
	public void Stun(float _stunTime)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1032720", Offset = "0x1032720", VA = "0x1032720")]
	public void SetTrigger(string s)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x103273C", Offset = "0x103273C", VA = "0x103273C", Slot = "9")]
	public virtual void CheckForTarget()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x1032C30", Offset = "0x1032C30", VA = "0x1032C30")]
	public void SetAlwaysAttackTarget()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x1032C44", Offset = "0x1032C44", VA = "0x1032C44")]
	public Quaternion SmoothLookY(Vector3 newDirection, float strength = 4f)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x1032D98", Offset = "0x1032D98", VA = "0x1032D98")]
	public Quaternion SmoothLookXYZ(Vector3 newDirection, Vector3 up, float strength = 4f)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600023E")]
	public abstract void OnSeePlayer();

	[Token(Token = "0x600023F")]
	public abstract void OnLoosePlayer();

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1032F70", Offset = "0x1032F70", VA = "0x1032F70")]
	protected AI()
	{
	}
}
[Token(Token = "0x200006D")]
public class AI4WayShroom : AI
{
	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Configuration")]
	public GameObject projectile;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float projectileSpeed;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float timeBetweenShots;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform[] shootPositions;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float playerDirFactor;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Collider[] _colls;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float _shootTimer;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private LivingBase _lb;

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x10332AC", Offset = "0x10332AC", VA = "0x10332AC", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x1033348", Offset = "0x1033348", VA = "0x1033348")]
	private void Shoot()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x1033688", Offset = "0x1033688", VA = "0x1033688")]
	public void Update()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x10336F8", Offset = "0x10336F8", VA = "0x10336F8", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1033764", Offset = "0x1033764", VA = "0x1033764", Slot = "11")]
	public override void OnLoosePlayer()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x1033768", Offset = "0x1033768", VA = "0x1033768")]
	public AI4WayShroom()
	{
	}
}
[Token(Token = "0x200006E")]
public class AIBossBook : MonoBehaviour
{
	[Token(Token = "0x2000071")]
	[CompilerGenerated]
	private sealed class <BossRoutine>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIBossBook <>4__this;

		[Token(Token = "0x4000236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <_randomWave>5__2;

		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <_timeToWait>5__3;

		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <_waitFor>5__4;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000267")]
			[Address(RVA = "0x1034FE0", Offset = "0x1034FE0", VA = "0x1034FE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000269")]
			[Address(RVA = "0x1035028", Offset = "0x1035028", VA = "0x1035028", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0x1033D8C", Offset = "0x1033D8C", VA = "0x1033D8C")]
		[DebuggerHidden]
		public <BossRoutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x6000265")]
		[Address(RVA = "0x1034730", Offset = "0x1034730", VA = "0x1034730", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000266")]
		[Address(RVA = "0x1034734", Offset = "0x1034734", VA = "0x1034734", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000268")]
		[Address(RVA = "0x1034FE8", Offset = "0x1034FE8", VA = "0x1034FE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bulletToShoot;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shootPos;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro txtWaveIndicator;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject enemySpawnPosition;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem circleParticles;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem shootParticles;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject teleportParticles;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Wave Information")]
	public GameObject[] enemiesWave1;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] enemiesWave2;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] enemiesWave3;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] enemiesWave4;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] enemiesWave5;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Collider[] _colls;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private EnemyBase _eb;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _timesHit;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Animator _animo;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int _enemiesAlive;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool _canSmoothLook;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private HashSet<Vector3> occupiedPositions;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3[] _possiblePositions;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool _tmpHit;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool _inTeleport;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	private bool _hardMode;

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x1033780", Offset = "0x1033780", VA = "0x1033780")]
	private void Start()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x1033AB0", Offset = "0x1033AB0", VA = "0x1033AB0")]
	private void _eb_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x1033AB8", Offset = "0x1033AB8", VA = "0x1033AB8")]
	private void _eb_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x1033BC0", Offset = "0x1033BC0", VA = "0x1033BC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x1033A3C", Offset = "0x1033A3C", VA = "0x1033A3C")]
	[IteratorStateMachine(typeof(<BossRoutine>d__27))]
	private IEnumerator BossRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x1033DB4", Offset = "0x1033DB4", VA = "0x1033DB4")]
	public void Shoot()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x1033F28", Offset = "0x1033F28", VA = "0x1033F28")]
	private void TrySpawnEnemy(GameObject enemy)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x10344F4", Offset = "0x10344F4", VA = "0x10344F4")]
	private void SpawnedEnemyDeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x1034120", Offset = "0x1034120", VA = "0x1034120")]
	private Vector3 GetValidPositionInRoom(float radius, float minDistToBoss, float minDistToPlayer = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x1034504", Offset = "0x1034504", VA = "0x1034504")]
	private string ConvertToRoman(int v)
	{
		return null;
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x10345AC", Offset = "0x10345AC", VA = "0x10345AC")]
	public AIBossBook()
	{
	}
}
[Token(Token = "0x2000073")]
public class AIBossMushroom : MonoBehaviour
{
	[Token(Token = "0x2000074")]
	[CompilerGenerated]
	private sealed class <BossRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIBossMushroom <>4__this;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <_typeOfAttack>5__2;

		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <_timer>5__3;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000279")]
			[Address(RVA = "0x1036260", Offset = "0x1036260", VA = "0x1036260", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600027B")]
			[Address(RVA = "0x10362A8", Offset = "0x10362A8", VA = "0x10362A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000276")]
		[Address(RVA = "0x10356FC", Offset = "0x10356FC", VA = "0x10356FC")]
		[DebuggerHidden]
		public <BossRoutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000277")]
		[Address(RVA = "0x10359F0", Offset = "0x10359F0", VA = "0x10359F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000278")]
		[Address(RVA = "0x10359F4", Offset = "0x10359F4", VA = "0x10359F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600027A")]
		[Address(RVA = "0x1036268", Offset = "0x1036268", VA = "0x1036268", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeToStayOnGround;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 jumpVelocity;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject shootOnLand;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] shootPositions;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator _animo;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody _rb;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private EnemyBase _eb;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Collider[] _colliders;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _dashDistance;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _probabilityToSkipBullet;

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x1035454", Offset = "0x1035454", VA = "0x1035454")]
	private void Start()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x1035688", Offset = "0x1035688", VA = "0x1035688")]
	[IteratorStateMachine(typeof(<BossRoutine>d__11))]
	private IEnumerator BossRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x1035724", Offset = "0x1035724", VA = "0x1035724")]
	public void Dash()
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x103587C", Offset = "0x103587C", VA = "0x103587C")]
	public void Jump()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x10359AC", Offset = "0x10359AC", VA = "0x10359AC")]
	public AIBossMushroom()
	{
	}
}
[Token(Token = "0x2000076")]
[RequireComponent(typeof(AIWalkToEnemy))]
public abstract class AICantReachPlayer : MonoBehaviour
{
	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected AIWalkToEnemy _aiWalkToEnemy;

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x10368FC", Offset = "0x10368FC", VA = "0x10368FC", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000283")]
	public abstract void _aiWalkToEnemy_OnPathCalculated(bool foundPath);

	[Token(Token = "0x6000284")]
	public abstract void _aiWalkToEnemy_OnIgnorePlayerIfBelow();

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x1036A04", Offset = "0x1036A04", VA = "0x1036A04")]
	protected AICantReachPlayer()
	{
	}
}
[Token(Token = "0x2000077")]
public class AICantReachPlayerThrowObject : AICantReachPlayer
{
	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Configuration")]
	public string animationToTrigger;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject projectileToThrow;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform throwPosition;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float throwSpeed;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Sounds")]
	public string pickupSound;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string throwSound;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _inRoutine;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Animator _animo;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider[] _collsToIgnore;

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x1036A0C", Offset = "0x1036A0C", VA = "0x1036A0C", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x1036B34", Offset = "0x1036B34", VA = "0x1036B34")]
	private void AICantReachPlayerThrowObject_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x1036B40", Offset = "0x1036B40", VA = "0x1036B40", Slot = "6")]
	public override void _aiWalkToEnemy_OnIgnorePlayerIfBelow()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x1036BEC", Offset = "0x1036BEC", VA = "0x1036BEC", Slot = "5")]
	public override void _aiWalkToEnemy_OnPathCalculated(bool foundPath)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1036BF0", Offset = "0x1036BF0", VA = "0x1036BF0")]
	private void Update()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x1036D0C", Offset = "0x1036D0C", VA = "0x1036D0C")]
	public void Throw()
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x1036DA0", Offset = "0x1036DA0", VA = "0x1036DA0")]
	public void PlayPickupSound()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1036E28", Offset = "0x1036E28", VA = "0x1036E28")]
	public void PlayThrowSound()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1036EB0", Offset = "0x1036EB0", VA = "0x1036EB0")]
	public void TriggerPickupCube()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x1036F0C", Offset = "0x1036F0C", VA = "0x1036F0C")]
	public void EndRoutine()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x1036F14", Offset = "0x1036F14", VA = "0x1036F14")]
	public AICantReachPlayerThrowObject()
	{
	}
}
[Token(Token = "0x200007A")]
public class AICantReachPlayerWalkAway : AICantReachPlayer
{
	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Configuration")]
	public float timeToRunAway;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LivingBase _lb;

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x10373FC", Offset = "0x10373FC", VA = "0x10373FC", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x10374CC", Offset = "0x10374CC", VA = "0x10374CC")]
	private void _lb_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x10377EC", Offset = "0x10377EC", VA = "0x10377EC")]
	private void StopRunningAway()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x1037884", Offset = "0x1037884", VA = "0x1037884", Slot = "6")]
	public override void _aiWalkToEnemy_OnIgnorePlayerIfBelow()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x1037888", Offset = "0x1037888", VA = "0x1037888", Slot = "5")]
	public override void _aiWalkToEnemy_OnPathCalculated(bool foundPath)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x103788C", Offset = "0x103788C", VA = "0x103788C")]
	public AICantReachPlayerWalkAway()
	{
	}
}
[Token(Token = "0x200007C")]
public class AIChallengeGhost : AI
{
	[Serializable]
	[Token(Token = "0x200007D")]
	public class SpawnInfos
	{
		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CURRENT_FLOOR floor;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] possibleEnemies;

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x10384D8", Offset = "0x10384D8", VA = "0x10384D8")]
		public SpawnInfos()
		{
		}
	}

	[Token(Token = "0x200007E")]
	[CompilerGenerated]
	private sealed class <GetReferences>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIChallengeGhost <>4__this;

		[Token(Token = "0x1700005A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002BD")]
			[Address(RVA = "0x1038828", Offset = "0x1038828", VA = "0x1038828", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002BF")]
			[Address(RVA = "0x1038870", Offset = "0x1038870", VA = "0x1038870", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x1037C2C", Offset = "0x1037C2C", VA = "0x1037C2C")]
		[DebuggerHidden]
		public <GetReferences>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x10384E0", Offset = "0x10384E0", VA = "0x10384E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x10384E4", Offset = "0x10384E4", VA = "0x10384E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x1038830", Offset = "0x1038830", VA = "0x1038830", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200007F")]
	[CompilerGenerated]
	private sealed class <SpawnWispsRoutine>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIChallengeGhost <>4__this;

		[Token(Token = "0x1700005C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C3")]
			[Address(RVA = "0x1038D34", Offset = "0x1038D34", VA = "0x1038D34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002C5")]
			[Address(RVA = "0x1038D7C", Offset = "0x1038D7C", VA = "0x1038D7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x1038054", Offset = "0x1038054", VA = "0x1038054")]
		[DebuggerHidden]
		public <SpawnWispsRoutine>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x1038878", Offset = "0x1038878", VA = "0x1038878", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x103887C", Offset = "0x103887C", VA = "0x103887C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x1038D3C", Offset = "0x1038D3C", VA = "0x1038D3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000080")]
	[CompilerGenerated]
	private sealed class <ShootBulletsRoutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIChallengeGhost <>4__this;

		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <_shootPosAfterAnim>5__2;

		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <a>5__3;

		[Token(Token = "0x1700005E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002C9")]
			[Address(RVA = "0x1039244", Offset = "0x1039244", VA = "0x1039244", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002CB")]
			[Address(RVA = "0x103928C", Offset = "0x103928C", VA = "0x103928C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x10380F0", Offset = "0x10380F0", VA = "0x10380F0")]
		[DebuggerHidden]
		public <ShootBulletsRoutine>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x1038D84", Offset = "0x1038D84", VA = "0x1038D84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x1038D88", Offset = "0x1038D88", VA = "0x1038D88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x103924C", Offset = "0x103924C", VA = "0x103924C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000081")]
	[CompilerGenerated]
	private sealed class <SpawnSwordAttacks>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIChallengeGhost <>4__this;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <a>5__2;

		[Token(Token = "0x17000060")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002CF")]
			[Address(RVA = "0x1039C70", Offset = "0x1039C70", VA = "0x1039C70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000061")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D1")]
			[Address(RVA = "0x1039CB8", Offset = "0x1039CB8", VA = "0x1039CB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x10382B4", Offset = "0x10382B4", VA = "0x10382B4")]
		[DebuggerHidden]
		public <SpawnSwordAttacks>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x1039294", Offset = "0x1039294", VA = "0x1039294", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x1039298", Offset = "0x1039298", VA = "0x1039298", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x1039C78", Offset = "0x1039C78", VA = "0x1039C78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000082")]
	[CompilerGenerated]
	private sealed class <SwitchToAdventurer>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIChallengeGhost <>4__this;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002D5")]
			[Address(RVA = "0x1039E84", Offset = "0x1039E84", VA = "0x1039E84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002D7")]
			[Address(RVA = "0x1039ECC", Offset = "0x1039ECC", VA = "0x1039ECC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x1038350", Offset = "0x1038350", VA = "0x1038350")]
		[DebuggerHidden]
		public <SwitchToAdventurer>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x1039CC0", Offset = "0x1039CC0", VA = "0x1039CC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x1039CC4", Offset = "0x1039CC4", VA = "0x1039CC4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x1039E8C", Offset = "0x1039E8C", VA = "0x1039E8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000084")]
	[CompilerGenerated]
	private sealed class <SpawnAdventurerMinions>d__38 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIChallengeGhost <>4__this;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002DF")]
			[Address(RVA = "0x103A680", Offset = "0x103A680", VA = "0x103A680", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002E1")]
			[Address(RVA = "0x103A6C8", Offset = "0x103A6C8", VA = "0x103A6C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x1038378", Offset = "0x1038378", VA = "0x1038378")]
		[DebuggerHidden]
		public <SpawnAdventurerMinions>d__38(int <>1__state)
		{
		}

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x1039FCC", Offset = "0x1039FCC", VA = "0x1039FCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x1039FD0", Offset = "0x1039FD0", VA = "0x1039FD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x103A688", Offset = "0x103A688", VA = "0x103A688", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000085")]
	[CompilerGenerated]
	private sealed class <SwitchToGhost>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIChallengeGhost <>4__this;

		[Token(Token = "0x17000066")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002E5")]
			[Address(RVA = "0x103A908", Offset = "0x103A908", VA = "0x103A908", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002E7")]
			[Address(RVA = "0x103A950", Offset = "0x103A950", VA = "0x103A950", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002E2")]
		[Address(RVA = "0x10383B8", Offset = "0x10383B8", VA = "0x10383B8")]
		[DebuggerHidden]
		public <SwitchToGhost>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x103A6D0", Offset = "0x103A6D0", VA = "0x103A6D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x103A6D4", Offset = "0x103A6D4", VA = "0x103A6D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x103A910", Offset = "0x103A910", VA = "0x103A910", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Prefabs")]
	public GameObject[] wispPrefabs;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject swordPrefab;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject[] bulletPrefabs;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject npcGhost;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject enemySpawnPosition;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Header("Ghost Vars")]
	public int challengeID;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int amountWispsToSpawn;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int amountSwordsToSpawn;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int amountBulletsToSpawn;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Animator fallenAdventurerAnimator;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform shootPos;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Header("Adventurer Vars")]
	public SpawnInfos[] minionSpawnInfos;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public int minionsToSpawn;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public ParticleSystem magicParticles;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Collider[] _collsToIgnore;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private HumanBase _fallenAdventurerHumanBase;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector3 _startSpawnPosition;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private bool _fightStarted;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
	private bool _isShrunk;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13E")]
	private bool _inAttack;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int _swordsParried;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private int _adventurerDamageDealt;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int _basicAttacksCompleted;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int _minionsKilled;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private bool _adventurerSpawning;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<EnemyBase> _wispsAlive;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private string _speechbubbleToSpawn;

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x1037B98", Offset = "0x1037B98", VA = "0x1037B98", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x1037BB8", Offset = "0x1037BB8", VA = "0x1037BB8")]
	[IteratorStateMachine(typeof(<GetReferences>d__29))]
	private IEnumerator GetReferences()
	{
		return null;
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x1037C54", Offset = "0x1037C54", VA = "0x1037C54")]
	private void _fallenAdventurerHumanBase_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x1037E60", Offset = "0x1037E60", VA = "0x1037E60")]
	private void FallenAdventurer_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x1037FE0", Offset = "0x1037FE0", VA = "0x1037FE0")]
	[IteratorStateMachine(typeof(<SpawnWispsRoutine>d__32))]
	private IEnumerator SpawnWispsRoutine()
	{
		return null;
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x103807C", Offset = "0x103807C", VA = "0x103807C")]
	[IteratorStateMachine(typeof(<ShootBulletsRoutine>d__33))]
	private IEnumerator ShootBulletsRoutine()
	{
		return null;
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x1038118", Offset = "0x1038118", VA = "0x1038118", Slot = "11")]
	public override void OnLoosePlayer()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x103811C", Offset = "0x103811C", VA = "0x103811C", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x1038240", Offset = "0x1038240", VA = "0x1038240")]
	[IteratorStateMachine(typeof(<SpawnSwordAttacks>d__36))]
	private IEnumerator SpawnSwordAttacks()
	{
		return null;
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x10382DC", Offset = "0x10382DC", VA = "0x10382DC")]
	[IteratorStateMachine(typeof(<SwitchToAdventurer>d__37))]
	private IEnumerator SwitchToAdventurer()
	{
		return null;
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x1037EF8", Offset = "0x1037EF8", VA = "0x1037EF8")]
	[IteratorStateMachine(typeof(<SpawnAdventurerMinions>d__38))]
	private IEnumerator SpawnAdventurerMinions()
	{
		return null;
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x10383A0", Offset = "0x10383A0", VA = "0x10383A0")]
	private void SpawnAdventurerMinions_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x1037F6C", Offset = "0x1037F6C", VA = "0x1037F6C")]
	[IteratorStateMachine(typeof(<SwitchToGhost>d__40))]
	private IEnumerator SwitchToGhost()
	{
		return null;
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x10383E0", Offset = "0x10383E0", VA = "0x10383E0")]
	private void AIChallengeGhost_SwordParryEvent()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x1038424", Offset = "0x1038424", VA = "0x1038424")]
	public AIChallengeGhost()
	{
	}
}
[Token(Token = "0x2000086")]
public class AIChargeFlyToPlayer : AI
{
	[Token(Token = "0x2000087")]
	public enum FORWARD_MODE
	{
		[Token(Token = "0x40002AA")]
		FORWARD_AXIS,
		[Token(Token = "0x40002AB")]
		DIR_TO_PLAYER
	}

	[Token(Token = "0x2000088")]
	[CompilerGenerated]
	private sealed class <ChargeRoutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIChargeFlyToPlayer <>4__this;

		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <_timer>5__2;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002F2")]
			[Address(RVA = "0x103B108", Offset = "0x103B108", VA = "0x103B108", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002F4")]
			[Address(RVA = "0x103B150", Offset = "0x103B150", VA = "0x103B150", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x103AB44", Offset = "0x103AB44", VA = "0x103AB44")]
		[DebuggerHidden]
		public <ChargeRoutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x103ACE0", Offset = "0x103ACE0", VA = "0x103ACE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x103ACE4", Offset = "0x103ACE4", VA = "0x103ACE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x103B110", Offset = "0x103B110", VA = "0x103B110", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[Header("Configuration")]
	public float chargeSpeed;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float timeToChargeUp;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ADSoundEffect chargeSound;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ADSoundEffect letGoSound;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ParticleSystem chargeParticles;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public FORWARD_MODE forwardMode;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool _playedSound;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
	private bool _chargingUp;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float _afterChargeTimer;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private LivingBase _lb;

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x103A958", Offset = "0x103A958", VA = "0x103A958", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x103A9B0", Offset = "0x103A9B0", VA = "0x103A9B0", Slot = "11")]
	public override void OnLoosePlayer()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x103AA10", Offset = "0x103AA10", VA = "0x103AA10", Slot = "8")]
	public override void OnHit(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x103AA44", Offset = "0x103AA44", VA = "0x103AA44", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x103AAD0", Offset = "0x103AAD0", VA = "0x103AAD0")]
	[IteratorStateMachine(typeof(<ChargeRoutine>d__15))]
	private IEnumerator ChargeRoutine()
	{
		return null;
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x103AB6C", Offset = "0x103AB6C", VA = "0x103AB6C")]
	public void Update()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x103ACC0", Offset = "0x103ACC0", VA = "0x103ACC0")]
	public AIChargeFlyToPlayer()
	{
	}
}
[Token(Token = "0x2000089")]
public class AICompanionBeastArm : MonoBehaviour
{
	[Token(Token = "0x200008A")]
	[CompilerGenerated]
	private sealed class <HandleMovement>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AICompanionBeastArm <>4__this;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002FD")]
			[Address(RVA = "0x103BAFC", Offset = "0x103BAFC", VA = "0x103BAFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002FF")]
			[Address(RVA = "0x103BB44", Offset = "0x103BB44", VA = "0x103BB44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x103B454", Offset = "0x103B454", VA = "0x103B454")]
		[DebuggerHidden]
		public <HandleMovement>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x103B588", Offset = "0x103B588", VA = "0x103B588", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x103B58C", Offset = "0x103B58C", VA = "0x103B58C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x103BB04", Offset = "0x103BB04", VA = "0x103BB04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200008B")]
	[CompilerGenerated]
	private sealed class <CheckForEnemy>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AICompanionBeastArm <>4__this;

		[Token(Token = "0x1700006C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000303")]
			[Address(RVA = "0x103BFDC", Offset = "0x103BFDC", VA = "0x103BFDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000305")]
			[Address(RVA = "0x103C024", Offset = "0x103C024", VA = "0x103C024", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0x103B47C", Offset = "0x103B47C", VA = "0x103B47C")]
		[DebuggerHidden]
		public <CheckForEnemy>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0x103BB4C", Offset = "0x103BB4C", VA = "0x103BB4C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000302")]
		[Address(RVA = "0x103BB50", Offset = "0x103BB50", VA = "0x103BB50", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x103BFE4", Offset = "0x103BFE4", VA = "0x103BFE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefabToShoot;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform head;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float attackDelay;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform targetHelper;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private FABRIK _fabrik;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LivingBase _target;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _directionToTargetFromBody;

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x103B158", Offset = "0x103B158", VA = "0x103B158")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x103B3E0", Offset = "0x103B3E0", VA = "0x103B3E0")]
	[IteratorStateMachine(typeof(<HandleMovement>d__8))]
	private IEnumerator HandleMovement()
	{
		return null;
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x103B36C", Offset = "0x103B36C", VA = "0x103B36C")]
	[IteratorStateMachine(typeof(<CheckForEnemy>d__9))]
	private IEnumerator CheckForEnemy()
	{
		return null;
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x103B4A4", Offset = "0x103B4A4", VA = "0x103B4A4")]
	public AICompanionBeastArm()
	{
	}
}
[Token(Token = "0x200008C")]
public class AICompanionWisp : AIFlyToPlayer
{
	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static HashSet<EnemyBase> targets;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float detectRange;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public int maxWispsAtOnce;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool killOnCollide;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float timeBetweenHits;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public int contactDamage;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private LivingBase _lb;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private EnemyBase _target;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float _lastHit;

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x103C02C", Offset = "0x103C02C", VA = "0x103C02C", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x103C258", Offset = "0x103C258", VA = "0x103C258", Slot = "12")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x103C438", Offset = "0x103C438", VA = "0x103C438", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x103C738", Offset = "0x103C738", VA = "0x103C738")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x103CAE4", Offset = "0x103CAE4", VA = "0x103CAE4")]
	public AICompanionWisp()
	{
	}
}
[Token(Token = "0x200008D")]
public class AICorruptedShopkeeper : AI
{
	[Token(Token = "0x200008E")]
	[CompilerGenerated]
	private sealed class <TrySpawnCrystal>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AICorruptedShopkeeper <>4__this;

		[Token(Token = "0x1700006E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600031F")]
			[Address(RVA = "0x11211D4", Offset = "0x11211D4", VA = "0x11211D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000321")]
			[Address(RVA = "0x112121C", Offset = "0x112121C", VA = "0x112121C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0x11204D4", Offset = "0x11204D4", VA = "0x11204D4")]
		[DebuggerHidden]
		public <TrySpawnCrystal>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0x1120F18", Offset = "0x1120F18", VA = "0x1120F18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0x1120F1C", Offset = "0x1120F1C", VA = "0x1120F1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0x11211DC", Offset = "0x11211DC", VA = "0x11211DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200008F")]
	[CompilerGenerated]
	private sealed class <ExplosionRoutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AICorruptedShopkeeper <>4__this;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000325")]
			[Address(RVA = "0x112164C", Offset = "0x112164C", VA = "0x112164C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000327")]
			[Address(RVA = "0x1121694", Offset = "0x1121694", VA = "0x1121694", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0x1120CC4", Offset = "0x1120CC4", VA = "0x1120CC4")]
		[DebuggerHidden]
		public <ExplosionRoutine>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0x1121224", Offset = "0x1121224", VA = "0x1121224", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0x1121228", Offset = "0x1121228", VA = "0x1121228", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000326")]
		[Address(RVA = "0x1121654", Offset = "0x1121654", VA = "0x1121654", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000090")]
	[CompilerGenerated]
	private sealed class <AttackRoutine>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AICorruptedShopkeeper <>4__this;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <_tmpDmgLost>5__2;

		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <size>5__3;

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AttackBeam <_beam>5__4;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <_beamTime>5__5;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600032B")]
			[Address(RVA = "0x1122038", Offset = "0x1122038", VA = "0x1122038", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600032D")]
			[Address(RVA = "0x1122080", Offset = "0x1122080", VA = "0x1122080", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0x1120CEC", Offset = "0x1120CEC", VA = "0x1120CEC")]
		[DebuggerHidden]
		public <AttackRoutine>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000329")]
		[Address(RVA = "0x112169C", Offset = "0x112169C", VA = "0x112169C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0x11216A0", Offset = "0x11216A0", VA = "0x11216A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0x1122040", Offset = "0x1122040", VA = "0x1122040", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[Header("Combat")]
	public float attackDelay;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float explosionDelay;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public int damageUntilExplosion;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Header("Prefabs")]
	public GameObject projectile;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform shootPos;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject enemySpawnPosition;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject crystalPrefab;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ParticleSystem shootPosParticles;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject explosionPrefab;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject[] armorParts;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Collider[] nonArmorColliders;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject spawnObjectOnExplosion;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool _doesRoutine;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private LivingBase _lb;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int _damageLost;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private int _amountExplosions;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private DoorPropRoomActivator[] _doorsNearby;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Dictionary<GameObject, Vector3> spawnedCrystals;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool _inTeleport;

	[NonSerialized]
	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public DoorPropRoomActivator[] doorsClosedBecauseOfKill;

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x111FBD0", Offset = "0x111FBD0", VA = "0x111FBD0", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x111FD90", Offset = "0x111FD90", VA = "0x111FD90")]
	private void _lb_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x11200C8", Offset = "0x11200C8", VA = "0x11200C8")]
	private void _lb_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x11201C4", Offset = "0x11201C4", VA = "0x11201C4")]
	private void SetInvincible(bool i)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x1120298", Offset = "0x1120298", VA = "0x1120298", Slot = "11")]
	public override void OnLoosePlayer()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x112029C", Offset = "0x112029C", VA = "0x112029C", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x11203D0", Offset = "0x11203D0", VA = "0x11203D0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x111FD1C", Offset = "0x111FD1C", VA = "0x111FD1C")]
	[IteratorStateMachine(typeof(<TrySpawnCrystal>d__27))]
	private IEnumerator TrySpawnCrystal()
	{
		return null;
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x11204FC", Offset = "0x11204FC", VA = "0x11204FC")]
	private Vector3 GetValidPositionInShop(float radius, float mindDistToShopeeker, float minDistToPlayer = 0f, int _try = 0)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x1120C58", Offset = "0x1120C58", VA = "0x1120C58")]
	private void AICorruptedShopkeeper_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x11202E8", Offset = "0x11202E8", VA = "0x11202E8")]
	[IteratorStateMachine(typeof(<ExplosionRoutine>d__30))]
	private IEnumerator ExplosionRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x112035C", Offset = "0x112035C", VA = "0x112035C")]
	[IteratorStateMachine(typeof(<AttackRoutine>d__31))]
	private IEnumerator AttackRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x1120D14", Offset = "0x1120D14", VA = "0x1120D14")]
	private void AICorruptedShopkeeper_OnDealDamage(float _damage)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x1120E60", Offset = "0x1120E60", VA = "0x1120E60")]
	public AICorruptedShopkeeper()
	{
	}
}
[Token(Token = "0x2000092")]
[RequireComponent(typeof(AI))]
public class AIDashAttack : MonoBehaviour
{
	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dashAttackDistance;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float dashAttackTime;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float dashCooldown;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool canDestroyPropsOnDash;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem dashParticles;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string soundID;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AI _ai;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AIWalkToEnemy _aiWalkToEnemy;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody _rb;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private EnemyBase _eb;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Animator _animo;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _dashRoutineTimer;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private UnityEngine.Coroutine _currentRoutine;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool _currentlyDashing;

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x11223EC", Offset = "0x11223EC", VA = "0x11223EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x1122584", Offset = "0x1122584", VA = "0x1122584")]
	private void _eb_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x11226FC", Offset = "0x11226FC", VA = "0x11226FC")]
	public void GoInDashAnim()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x1122770", Offset = "0x1122770", VA = "0x1122770")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x1122894", Offset = "0x1122894", VA = "0x1122894")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1122904", Offset = "0x1122904", VA = "0x1122904")]
	public void DoDashAttack()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x1122A70", Offset = "0x1122A70", VA = "0x1122A70")]
	public AIDashAttack()
	{
	}
}
[Token(Token = "0x2000094")]
public class AIDerangedAdventurer : MonoBehaviour
{
	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int amountDmgForJumpAttackTrigger;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject spikeAttack;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LivingBase _lb;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator _animo;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _dmgReceived;

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1123184", Offset = "0x1123184", VA = "0x1123184")]
	private void Start()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x112347C", Offset = "0x112347C", VA = "0x112347C")]
	private void AIDerangedAdventurer_OnAnimationEvent(string type)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x1123650", Offset = "0x1123650", VA = "0x1123650")]
	private void _lb_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x112375C", Offset = "0x112375C", VA = "0x112375C")]
	public AIDerangedAdventurer()
	{
	}
}
[Token(Token = "0x2000096")]
public class AIExplodingBud : MonoBehaviour
{
	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public GameObject[] projectiles;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LivingBase living;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider mainColliderOfLiving;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ADSoundEffect shootSound;

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x1123930", Offset = "0x1123930", VA = "0x1123930")]
	private void Start()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x1123A64", Offset = "0x1123A64", VA = "0x1123A64")]
	private void Living_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x1123C64", Offset = "0x1123C64", VA = "0x1123C64")]
	public AIExplodingBud()
	{
	}
}
[Token(Token = "0x2000097")]
public class AIFireShootingSlime : MonoBehaviour
{
	[Token(Token = "0x2000098")]
	[CompilerGenerated]
	private sealed class <ShootProjectile>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIFireShootingSlime <>4__this;

		[Token(Token = "0x1700007A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000357")]
			[Address(RVA = "0x1124134", Offset = "0x1124134", VA = "0x1124134", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000359")]
			[Address(RVA = "0x112417C", Offset = "0x112417C", VA = "0x112417C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0x112402C", Offset = "0x112402C", VA = "0x112402C")]
		[DebuggerHidden]
		public <ShootProjectile>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x1124068", Offset = "0x1124068", VA = "0x1124068", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0x112406C", Offset = "0x112406C", VA = "0x112406C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x112413C", Offset = "0x112413C", VA = "0x112413C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public ParticleSystem shootParticles;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int jumpsBetweenNextShoot;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeAfterJumpToShoot;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ADSoundEffect shootSound;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _jumps;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator _animo;

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1123C6C", Offset = "0x1123C6C", VA = "0x1123C6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x1123EEC", Offset = "0x1123EEC", VA = "0x1123EEC")]
	private void _jump_JumpEvent()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x1123FB8", Offset = "0x1123FB8", VA = "0x1123FB8")]
	[IteratorStateMachine(typeof(<ShootProjectile>d__8))]
	private IEnumerator ShootProjectile()
	{
		return null;
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x1124054", Offset = "0x1124054", VA = "0x1124054")]
	public AIFireShootingSlime()
	{
	}
}
[Token(Token = "0x2000099")]
public class AIFireThrower : MonoBehaviour
{
	[Token(Token = "0x200009A")]
	[CompilerGenerated]
	private sealed class <CheckForThrow>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIFireThrower <>4__this;

		[Token(Token = "0x1700007C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000361")]
			[Address(RVA = "0x1124950", Offset = "0x1124950", VA = "0x1124950", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000363")]
			[Address(RVA = "0x1124998", Offset = "0x1124998", VA = "0x1124998", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600035E")]
		[Address(RVA = "0x1124370", Offset = "0x1124370", VA = "0x1124370")]
		[DebuggerHidden]
		public <CheckForThrow>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0x11243B8", Offset = "0x11243B8", VA = "0x11243B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0x11243BC", Offset = "0x11243BC", VA = "0x11243BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0x1124958", Offset = "0x1124958", VA = "0x1124958", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objToThrow;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform throwPos;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distanceToStartThrowing;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timeBetweenThrow;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float throwObjAfter;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AI _ai;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UnityEngine.Coroutine _checkRoutine;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Collider[] _ignoreColls;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private HumanBase _eb;

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x1124184", Offset = "0x1124184", VA = "0x1124184")]
	private void Start()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x11242AC", Offset = "0x11242AC", VA = "0x11242AC")]
	private void _ai_OnSeesTarget()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x11242FC", Offset = "0x11242FC", VA = "0x11242FC")]
	[IteratorStateMachine(typeof(<CheckForThrow>d__11))]
	private IEnumerator CheckForThrow()
	{
		return null;
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x1124398", Offset = "0x1124398", VA = "0x1124398")]
	public AIFireThrower()
	{
	}
}
[Token(Token = "0x200009B")]
public class AIFlightPattern : MonoBehaviour
{
	[Token(Token = "0x200009C")]
	public enum PATTERN
	{
		[Token(Token = "0x4000324")]
		CIRCLE,
		[Token(Token = "0x4000325")]
		INVERT_ON_WALLS
	}

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public Vector3 flightSpeed;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public PATTERN flightPattern;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody _rb;

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x11249A0", Offset = "0x11249A0", VA = "0x11249A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1124A6C", Offset = "0x1124A6C", VA = "0x1124A6C")]
	public AIFlightPattern()
	{
	}
}
[Token(Token = "0x200009D")]
public class AIFlightPatternHelper : MonoBehaviour
{
	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 forceMultiply;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody rigidb;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AIFlightPattern flightPattern;

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1124A88", Offset = "0x1124A88", VA = "0x1124A88")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x1124ADC", Offset = "0x1124ADC", VA = "0x1124ADC")]
	public AIFlightPatternHelper()
	{
	}
}
[Token(Token = "0x200009E")]
public class AIFlyingBook : AI
{
	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Flying Book Specific")]
	public GameObject bulletToShoot;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float shootDelay;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float bulletSpeed;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform shootPos;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform projectileVis;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int projectilesToShootAtOnce;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float projectileDegrees;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float xProjectileDegrees;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Header("Audio")]
	public ADSoundEffect shootingSound;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float _shootDelayCounter;

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1124AE4", Offset = "0x1124AE4", VA = "0x1124AE4", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1124B6C", Offset = "0x1124B6C", VA = "0x1124B6C", Slot = "11")]
	public override void OnLoosePlayer()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1124B80", Offset = "0x1124B80", VA = "0x1124B80", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1124B84", Offset = "0x1124B84", VA = "0x1124B84")]
	public void Update()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x1124EBC", Offset = "0x1124EBC", VA = "0x1124EBC")]
	public AIFlyingBook()
	{
	}
}
[Token(Token = "0x200009F")]
public class AIFlyToPlayer : AI
{
	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[Header("Fly Around Specific")]
	public float moveSpeed;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float accellerationStrength;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float cooldownStun;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float randomizeMovespeed;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float flappingSoundInterval;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float nextTargetDist;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ADSoundEffect flappingSound;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool flyAroundRandomly;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	public bool randomizePlayerTargetHeight;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[Header("Stop Logic")]
	public float stopDistance;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public UnityEvent OnReachedStopDistance;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float stunCooldown;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 target;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float _flappingSoundCounter;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	protected Vector3 _randPlayerTargetHeight;

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1124ED0", Offset = "0x1124ED0", VA = "0x1124ED0", Slot = "5")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x1125260", Offset = "0x1125260", VA = "0x1125260")]
	public void RefreshTargetPos()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1125280", Offset = "0x1125280", VA = "0x1125280", Slot = "11")]
	public override void OnLoosePlayer()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x11252F8", Offset = "0x11252F8", VA = "0x11252F8", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x11253A0", Offset = "0x11253A0", VA = "0x11253A0", Slot = "6")]
	public override void OnHitPlayer()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x11253A8", Offset = "0x11253A8", VA = "0x11253A8", Slot = "8")]
	public override void OnHit(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x112562C", Offset = "0x112562C", VA = "0x112562C", Slot = "12")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1124F48", Offset = "0x1124F48", VA = "0x1124F48")]
	public Vector3 GetNewTargetPos(int run = 0)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x1125E90", Offset = "0x1125E90", VA = "0x1125E90")]
	public AIFlyToPlayer()
	{
	}
}
[Token(Token = "0x20000A0")]
public class AIGhost : AI
{
	[Token(Token = "0x20000A1")]
	[CompilerGenerated]
	private sealed class <AttackRoutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIGhost <>4__this;

		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Collider> <_collsToIgnore>5__2;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <size>5__3;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <_animProjRotation>5__4;

		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject <_proj>5__5;

		[Token(Token = "0x1700007E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600037F")]
			[Address(RVA = "0x1126A4C", Offset = "0x1126A4C", VA = "0x1126A4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000381")]
			[Address(RVA = "0x1126A94", Offset = "0x1126A94", VA = "0x1126A94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600037C")]
		[Address(RVA = "0x11260E4", Offset = "0x11260E4", VA = "0x11260E4")]
		[DebuggerHidden]
		public <AttackRoutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0x1126128", Offset = "0x1126128", VA = "0x1126128", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600037E")]
		[Address(RVA = "0x112612C", Offset = "0x112612C", VA = "0x112612C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000380")]
		[Address(RVA = "0x1126A54", Offset = "0x1126A54", VA = "0x1126A54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Shoot Settings")]
	public GameObject projectile;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool spawnBulletForScaleAnim;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform projectileParent;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ADSoundEffect shootSound;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool ignoreYOffset;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Header("Charging up")]
	public ParticleSystem chargeParticles;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Header("Configuration")]
	public float attackDelay;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float projectileSpeed;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public int amountOfProjectiles;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float waitAfterAttack;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool doesRoutine;

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1125F2C", Offset = "0x1125F2C", VA = "0x1125F2C", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x1125F34", Offset = "0x1125F34", VA = "0x1125F34", Slot = "11")]
	public override void OnLoosePlayer()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x1125F38", Offset = "0x1125F38", VA = "0x1125F38", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x1125FE0", Offset = "0x1125FE0", VA = "0x1125FE0")]
	public void Update()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1125F6C", Offset = "0x1125F6C", VA = "0x1125F6C")]
	[IteratorStateMachine(typeof(<AttackRoutine>d__15))]
	private IEnumerator AttackRoutine()
	{
		return null;
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x112610C", Offset = "0x112610C", VA = "0x112610C")]
	public AIGhost()
	{
	}
}
[Token(Token = "0x20000A2")]
public class AIHumanoidAttack : AIWalkToEnemy
{
	[Serializable]
	[Token(Token = "0x20000A3")]
	public class AttackInfos
	{
		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string animationId;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float attackTime;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 animSwingDir;

		[Token(Token = "0x600038E")]
		[Address(RVA = "0x1127D68", Offset = "0x1127D68", VA = "0x1127D68")]
		public AttackInfos()
		{
		}
	}

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[Header("Attack Configuration")]
	public AttackInfos[] attackInfos;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public EnemySword enemySword;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public bool parryDoesBulletTime;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	public bool onlyDamageWhenParried;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public AimIK ik;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Vector3 animatedSwingDirection;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public ADSoundEffect stepSound;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public ADSoundEffect attackSound;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject parryHint;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int _currentAttack;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float _attackTimeCounter;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Collider _enemySwordCollider;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private LivingBase _livingBase;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float _canDamageCounter;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private Vector3 _currentAimDir;

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x1126A9C", Offset = "0x1126A9C", VA = "0x1126A9C", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1126E88", Offset = "0x1126E88", VA = "0x1126E88")]
	private void _livingBase_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x1126F60", Offset = "0x1126F60", VA = "0x1126F60")]
	public void PlayStepSound()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x1126FA0", Offset = "0x1126FA0", VA = "0x1126FA0")]
	public void PlayAttackSound()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x1126FE0", Offset = "0x1126FE0", VA = "0x1126FE0")]
	private void EnemySword_SwordClashEvent()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x11271B4", Offset = "0x11271B4", VA = "0x11271B4")]
	public void EnableSword()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x1126E68", Offset = "0x1126E68", VA = "0x1126E68")]
	public void DisableSword()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x11271D4", Offset = "0x11271D4", VA = "0x11271D4")]
	public void SetCurrentAttack(int id)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x112725C", Offset = "0x112725C", VA = "0x112725C", Slot = "13")]
	public override void Update()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x11279FC", Offset = "0x11279FC", VA = "0x11279FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x1127B0C", Offset = "0x1127B0C", VA = "0x1127B0C", Slot = "12")]
	protected override void OnReachedStopDistance()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x1127CFC", Offset = "0x1127CFC", VA = "0x1127CFC")]
	public AIHumanoidAttack()
	{
	}
}
[Token(Token = "0x20000A4")]
public class AIJumpToEnemy : AIWalkToEnemy
{
	[Token(Token = "0x20000A5")]
	public delegate void OnJump();

	[Token(Token = "0x20000A6")]
	public delegate void OnLand();

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[Header("Jump Specific")]
	public float jumpStrength;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public string triggerJump;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public ADSoundEffect jumpSound;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public ADSoundEffect landSound;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float timeBetweenJumps;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float boxCastExtends;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public bool shouldRotateTowardsTargetWhileInAir;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float _jumpDelayCounter;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private bool _justLanded;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public UnityEvent EventOnLand;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool _jumpedOnce;

	[Token(Token = "0x1400000B")]
	public event OnJump JumpEvent
	{
		[Token(Token = "0x600038F")]
		[Address(RVA = "0x1123E4C", Offset = "0x1123E4C", VA = "0x1123E4C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000390")]
		[Address(RVA = "0x1127D7C", Offset = "0x1127D7C", VA = "0x1127D7C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event OnLand LandEvent
	{
		[Token(Token = "0x6000391")]
		[Address(RVA = "0x1127E1C", Offset = "0x1127E1C", VA = "0x1127E1C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000392")]
		[Address(RVA = "0x1127EBC", Offset = "0x1127EBC", VA = "0x1127EBC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1127F5C", Offset = "0x1127F5C", VA = "0x1127F5C", Slot = "13")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x1127FD0", Offset = "0x1127FD0", VA = "0x1127FD0", Slot = "15")]
	public override void MoveRoutine(Vector3 goalPoint)
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x11282F0", Offset = "0x11282F0", VA = "0x11282F0", Slot = "16")]
	public virtual void OnEnemyJump()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x11282B8", Offset = "0x11282B8", VA = "0x11282B8")]
	private bool IsJumpEnemyGrounded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x11282A4", Offset = "0x11282A4", VA = "0x11282A4")]
	public bool ShouldRotateTowardsTarget()
	{
		return default(bool);
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x11282F4", Offset = "0x11282F4", VA = "0x11282F4", Slot = "14")]
	public override void OnNoPath(bool seesPlayer)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1128734", Offset = "0x1128734", VA = "0x1128734")]
	public AIJumpToEnemy()
	{
	}
}
[Token(Token = "0x20000A7")]
public class AIMagicStone : AI
{
	[Token(Token = "0x20000A8")]
	[CompilerGenerated]
	private sealed class <Launch>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIMagicStone <>4__this;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <_dirToPlayer>5__2;

		[Token(Token = "0x17000080")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003AC")]
			[Address(RVA = "0x1128EC8", Offset = "0x1128EC8", VA = "0x1128EC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003AE")]
			[Address(RVA = "0x1128F10", Offset = "0x1128F10", VA = "0x1128F10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x1128C28", Offset = "0x1128C28", VA = "0x1128C28")]
		[DebuggerHidden]
		public <Launch>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x1128C58", Offset = "0x1128C58", VA = "0x1128C58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x1128C5C", Offset = "0x1128C5C", VA = "0x1128C5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x1128ED0", Offset = "0x1128ED0", VA = "0x1128ED0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float attackMoveSpeed;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _launched;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private LivingBase _lb;

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1128918", Offset = "0x1128918", VA = "0x1128918", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x112897C", Offset = "0x112897C", VA = "0x112897C", Slot = "11")]
	public override void OnLoosePlayer()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x1128980", Offset = "0x1128980", VA = "0x1128980", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x1128984", Offset = "0x1128984", VA = "0x1128984")]
	public void Update()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x1128B74", Offset = "0x1128B74", VA = "0x1128B74")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x1128B00", Offset = "0x1128B00", VA = "0x1128B00")]
	[IteratorStateMachine(typeof(<Launch>d__8))]
	private IEnumerator Launch()
	{
		return null;
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x1128C50", Offset = "0x1128C50", VA = "0x1128C50")]
	public AIMagicStone()
	{
	}
}
[Token(Token = "0x20000A9")]
public class AIMimic : AI
{
	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Mimic Specific")]
	public AIJumpToEnemy jumpToEnemy;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ADSoundEffect soundAwaken;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _open;

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x1128F18", Offset = "0x1128F18", VA = "0x1128F18", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1128FA8", Offset = "0x1128FA8", VA = "0x1128FA8", Slot = "11")]
	public override void OnLoosePlayer()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x1129000", Offset = "0x1129000", VA = "0x1129000", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x1129080", Offset = "0x1129080", VA = "0x1129080", Slot = "8")]
	public override void OnHit(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x1129114", Offset = "0x1129114", VA = "0x1129114")]
	public AIMimic()
	{
	}
}
[Token(Token = "0x20000AA")]
[RequireComponent(typeof(AI))]
public class AINotifyNearbyEnemies : MonoBehaviour
{
	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public float notifyRadius;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float notifyDelay;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool hasNotified;

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x112911C", Offset = "0x112911C", VA = "0x112911C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x11291D4", Offset = "0x11291D4", VA = "0x11291D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x112928C", Offset = "0x112928C", VA = "0x112928C")]
	private void AINotifyNearbyEnemies_OnSeesPlayer()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x11292F8", Offset = "0x11292F8", VA = "0x11292F8")]
	private void Notify()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x112980C", Offset = "0x112980C", VA = "0x112980C")]
	public AINotifyNearbyEnemies()
	{
	}
}
[Token(Token = "0x20000AC")]
[RequireComponent(typeof(AIJumpToEnemy))]
public class AIPhaseJumpToEnemy : MonoBehaviour
{
	[Token(Token = "0x20000AD")]
	[CompilerGenerated]
	private sealed class <PhaseRoutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIPhaseJumpToEnemy <>4__this;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <_dir>5__2;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <_distance>5__3;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <_distMovedBack>5__4;

		[Token(Token = "0x17000082")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C3")]
			[Address(RVA = "0x112A1A0", Offset = "0x112A1A0", VA = "0x112A1A0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000083")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C5")]
			[Address(RVA = "0x112A1E8", Offset = "0x112A1E8", VA = "0x112A1E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x1129A54", Offset = "0x1129A54", VA = "0x1129A54")]
		[DebuggerHidden]
		public <PhaseRoutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x1129A90", Offset = "0x1129A90", VA = "0x1129A90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x1129A94", Offset = "0x1129A94", VA = "0x1129A94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x112A1A8", Offset = "0x112A1A8", VA = "0x112A1A8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float phaseDistance;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float phaseTime;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem phaseParticles;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string dashSoundId;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isPhasing;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AIJumpToEnemy _aiJumpToEnemy;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody _rb;

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x1129918", Offset = "0x1129918", VA = "0x1129918")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x11299A8", Offset = "0x11299A8", VA = "0x11299A8")]
	private void AIPhaseJumpToEnemy_JumpEvent()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x11299E0", Offset = "0x11299E0", VA = "0x11299E0")]
	[IteratorStateMachine(typeof(<PhaseRoutine>d__9))]
	private IEnumerator PhaseRoutine()
	{
		return null;
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x1129A7C", Offset = "0x1129A7C", VA = "0x1129A7C")]
	public AIPhaseJumpToEnemy()
	{
	}
}
[Token(Token = "0x20000AE")]
public class AIPossessedArmor : MonoBehaviour
{
	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider enemySwordCollider;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material swordEnabled;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material swordDisabled;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer enemySword;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem particles;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _enabled;

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x112A1F0", Offset = "0x112A1F0", VA = "0x112A1F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x112A438", Offset = "0x112A438", VA = "0x112A438")]
	public AIPossessedArmor()
	{
	}
}
[Token(Token = "0x20000AF")]
public class AIPossessedAxe : MonoBehaviour
{
	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float homingFactor;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxAttackSpeed;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject idleSoundObject;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject spinningSoundObject;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator _animo;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _inAttack;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody _rigidb;

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x112A448", Offset = "0x112A448", VA = "0x112A448")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x112A614", Offset = "0x112A614", VA = "0x112A614")]
	private void AIPossessedAxe_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x112A620", Offset = "0x112A620", VA = "0x112A620")]
	private void AIPossessedAxe_OnSeesTarget()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x112A76C", Offset = "0x112A76C", VA = "0x112A76C")]
	public void DoAttack()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x112A804", Offset = "0x112A804", VA = "0x112A804")]
	public AIPossessedAxe()
	{
	}
}
[Token(Token = "0x20000B0")]
public class AIPossessedPlant : AI
{
	[Token(Token = "0x20000B1")]
	[CompilerGenerated]
	private sealed class <DoMeleeAttack>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIPossessedPlant <>4__this;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <_goalPos>5__2;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 <_startPos>5__3;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <_movePercentage>5__4;

		[Token(Token = "0x17000084")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003DB")]
			[Address(RVA = "0x112B398", Offset = "0x112B398", VA = "0x112B398", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003DD")]
			[Address(RVA = "0x112B3E0", Offset = "0x112B3E0", VA = "0x112B3E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x112B030", Offset = "0x112B030", VA = "0x112B030")]
		[DebuggerHidden]
		public <DoMeleeAttack>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x112B0C8", Offset = "0x112B0C8", VA = "0x112B0C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x112B0CC", Offset = "0x112B0CC", VA = "0x112B0CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x112B3A0", Offset = "0x112B3A0", VA = "0x112B3A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Configuration")]
	public ParticleSystem shootParticles;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float projectileSpeed;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float timeBetweenShots;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float distUntilMeleeAttack;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform shootPosition;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform headMoveTarget;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float meleeMoveSpeed;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Collider[] _colls;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float _lastShotTime;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private LivingBase _lb;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private FABRIK _fabrik;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool _inMeleeAttack;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 _correctedShootPos;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 _goalForward;

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x112A818", Offset = "0x112A818", VA = "0x112A818", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x112A97C", Offset = "0x112A97C", VA = "0x112A97C")]
	private void _lb_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x112AA90", Offset = "0x112AA90", VA = "0x112AA90")]
	private void Shoot()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x112ABD0", Offset = "0x112ABD0", VA = "0x112ABD0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x112AC00", Offset = "0x112AC00", VA = "0x112AC00")]
	public void Update()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x112ACFC", Offset = "0x112ACFC", VA = "0x112ACFC", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x112AFBC", Offset = "0x112AFBC", VA = "0x112AFBC")]
	[IteratorStateMachine(typeof(<DoMeleeAttack>d__20))]
	private IEnumerator DoMeleeAttack()
	{
		return null;
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x112B058", Offset = "0x112B058", VA = "0x112B058", Slot = "11")]
	public override void OnLoosePlayer()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x112B05C", Offset = "0x112B05C", VA = "0x112B05C")]
	public AIPossessedPlant()
	{
	}
}
[Token(Token = "0x20000B4")]
public class AIRandDirectionBud : AI
{
	[Token(Token = "0x20000B5")]
	[CompilerGenerated]
	private sealed class <ShootRoutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIRandDirectionBud <>4__this;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <_scale>5__2;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject>.Enumerator <>7__wrap2;

		[Token(Token = "0x1700008A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003F5")]
			[Address(RVA = "0x112CA24", Offset = "0x112CA24", VA = "0x112CA24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003F7")]
			[Address(RVA = "0x112CA6C", Offset = "0x112CA6C", VA = "0x112CA6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x112B818", Offset = "0x112B818", VA = "0x112B818")]
		[DebuggerHidden]
		public <ShootRoutine>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x112BBE0", Offset = "0x112BBE0", VA = "0x112BBE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x112BBFC", Offset = "0x112BBFC", VA = "0x112BBFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x112C9D4", Offset = "0x112C9D4", VA = "0x112C9D4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x112CA2C", Offset = "0x112CA2C", VA = "0x112CA2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[Header("Configuration")]
	public int amountToShoot;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float shootInterval;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject shootProjectile;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float unitCircleRadius;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Vector3 shootOffset;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float timeBetweenSpawnAndShoot;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float timeToGrow;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float shootSpeed;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float delayBetweenSingleProjectileShoot;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool doAnimation;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public ParticleSystem shootParticles;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ParticleSystem chargeParticles;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Header("Audio")]
	public ADSoundEffect growSound;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public ADSoundEffect shootSound;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float _shootTimer;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Collider _thisColl;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private RotateWhenIdle _rotWhenIdle;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private LivingBase _living;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private List<GameObject> _projectiles;

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x112B6F8", Offset = "0x112B6F8", VA = "0x112B6F8")]
	public void Update()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x112B7A4", Offset = "0x112B7A4", VA = "0x112B7A4")]
	[IteratorStateMachine(typeof(<ShootRoutine>d__20))]
	private IEnumerator ShootRoutine()
	{
		return null;
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x112B840", Offset = "0x112B840", VA = "0x112B840", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x112B9DC", Offset = "0x112B9DC", VA = "0x112B9DC")]
	private void _living_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x112BBB4", Offset = "0x112BBB4", VA = "0x112BBB4", Slot = "11")]
	public override void OnLoosePlayer()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x112BBB8", Offset = "0x112BBB8", VA = "0x112BBB8", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x112BBBC", Offset = "0x112BBBC", VA = "0x112BBBC")]
	public AIRandDirectionBud()
	{
	}
}
[Token(Token = "0x20000B6")]
public class AIRotatingBeam : AI
{
	[Token(Token = "0x20000B7")]
	[CompilerGenerated]
	private sealed class <TargetingRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AIRotatingBeam <>4__this;

		[Token(Token = "0x1700008C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003FF")]
			[Address(RVA = "0x112CED4", Offset = "0x112CED4", VA = "0x112CED4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000401")]
			[Address(RVA = "0x112CF1C", Offset = "0x112CF1C", VA = "0x112CF1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x112CB24", Offset = "0x112CB24", VA = "0x112CB24")]
		[DebuggerHidden]
		public <TargetingRoutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x112CB5C", Offset = "0x112CB5C", VA = "0x112CB5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x112CB60", Offset = "0x112CB60", VA = "0x112CB60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x112CEDC", Offset = "0x112CEDC", VA = "0x112CEDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Configuration")]
	public AttackBeam[] attackBeams;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float rotationSpeed;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool _isTargeting;

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x112CA74", Offset = "0x112CA74", VA = "0x112CA74", Slot = "11")]
	public override void OnLoosePlayer()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x112CA78", Offset = "0x112CA78", VA = "0x112CA78", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x112CAB0", Offset = "0x112CAB0", VA = "0x112CAB0")]
	[IteratorStateMachine(typeof(<TargetingRoutine>d__5))]
	private IEnumerator TargetingRoutine()
	{
		return null;
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x112CB4C", Offset = "0x112CB4C", VA = "0x112CB4C")]
	public AIRotatingBeam()
	{
	}
}
[Token(Token = "0x20000B8")]
public class AISharpShark : MonoBehaviour
{
	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float diveDistance;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float waitAfterAttack;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem particlesInModel;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator _animo;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _inAttack;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AI[] _ais;

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x112CF24", Offset = "0x112CF24", VA = "0x112CF24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x112CFB4", Offset = "0x112CFB4", VA = "0x112CFB4")]
	public void DoAttack()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x112D1F8", Offset = "0x112D1F8", VA = "0x112D1F8")]
	public void OnAttackFinish()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x112D318", Offset = "0x112D318", VA = "0x112D318")]
	public AISharpShark()
	{
	}
}
[Token(Token = "0x20000BA")]
public class AIShootingSlime : MonoBehaviour
{
	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public GameObject bulletToShoot;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] shootPositions;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int jumpsBetweenNextShoot;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float timeAfterJumpToShoot;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float projectileSpeed;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float projectileDistance;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ADSoundEffect shootSound;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _jumps;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Collider _collToIgnore;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animator _animo;

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x112D4B0", Offset = "0x112D4B0", VA = "0x112D4B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x112D5F4", Offset = "0x112D5F4", VA = "0x112D5F4")]
	private void _jump_JumpEvent()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x112D6D0", Offset = "0x112D6D0", VA = "0x112D6D0")]
	private void ShootProjectile()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x112D890", Offset = "0x112D890", VA = "0x112D890")]
	public AIShootingSlime()
	{
	}
}
[Token(Token = "0x20000BB")]
public class AISkeletonBoss : AI
{
	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Attack Configuration")]
	public GameObject stoneAttack;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform shootPos;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject projectileToShoot;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float timeBetweenAttacks;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ParticleSystem shootParticles;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Header("Teleport Configuration")]
	public Vector3 teleportExtends;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float minTeleportDistance;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public ParticleSystem teleportParticles;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject spawnOnTeleport;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject teleportImplode;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Collider[] _collsToIgnore;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float _lastAttackTime;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int _timesHit;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool _attackFinished;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private LivingBase _lb;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector3[] _possiblePositions;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private string _lastAttack;

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x112D8A4", Offset = "0x112D8A4", VA = "0x112D8A4", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x112DDA4", Offset = "0x112DDA4", VA = "0x112DDA4")]
	private void _lb_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x112DE84", Offset = "0x112DE84", VA = "0x112DE84")]
	private void AISkeletonBoss_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x112DEFC", Offset = "0x112DEFC", VA = "0x112DEFC")]
	public void ResetAttackState()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x112DF08", Offset = "0x112DF08", VA = "0x112DF08")]
	public void SummonStones()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x112E198", Offset = "0x112E198", VA = "0x112E198")]
	public void ShootProjectile()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x112E2D8", Offset = "0x112E2D8", VA = "0x112E2D8")]
	public void SetShootParticles(int i)
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x112E304", Offset = "0x112E304", VA = "0x112E304")]
	public void Teleport()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x112E398", Offset = "0x112E398", VA = "0x112E398")]
	private Vector3 GetValidPositionInRoom(float radius, float minDistToBoss, float minDistToPlayer = 0f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x112E54C", Offset = "0x112E54C", VA = "0x112E54C")]
	private string GetNextAttack()
	{
		return null;
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x112E620", Offset = "0x112E620", VA = "0x112E620", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x112E6E8", Offset = "0x112E6E8", VA = "0x112E6E8", Slot = "11")]
	public override void OnLoosePlayer()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x112E6EC", Offset = "0x112E6EC", VA = "0x112E6EC")]
	public AISkeletonBoss()
	{
	}
}
[Token(Token = "0x20000C0")]
public class AISkeletonChampion : AIWalkToEnemy
{
	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[Header("Skele Champion Specific")]
	public float timeBetweenJumpAttacks;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float _timerJumpAttack;

	[Token(Token = "0x6000431")]
	[Address(RVA = "0x112EFAC", Offset = "0x112EFAC", VA = "0x112EFAC", Slot = "12")]
	protected override void OnReachedStopDistance()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x112F020", Offset = "0x112F020", VA = "0x112F020", Slot = "13")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x112F090", Offset = "0x112F090", VA = "0x112F090")]
	public AISkeletonChampion()
	{
	}
}
[Token(Token = "0x20000C1")]
public class AISkeletonDefault : AIWalkToEnemy
{
	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[Header("Skele Default Specific")]
	public float timeBetweenJumpAttacks;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float jumpAttackDistance;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float _timerJumpAttack;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool _hasReachedJumpAttackDist;

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x112F0CC", Offset = "0x112F0CC", VA = "0x112F0CC", Slot = "12")]
	protected override void OnReachedStopDistance()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x112F0D0", Offset = "0x112F0D0", VA = "0x112F0D0", Slot = "13")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x112F288", Offset = "0x112F288", VA = "0x112F288")]
	public AISkeletonDefault()
	{
	}
}
[Token(Token = "0x20000C2")]
public class AISkeletonTheMine : AISkeletonDefault
{
	[Token(Token = "0x20000C3")]
	[CompilerGenerated]
	private sealed class <PickaxeThrowRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AISkeletonTheMine <>4__this;

		[Token(Token = "0x17000094")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000440")]
			[Address(RVA = "0x112FB64", Offset = "0x112FB64", VA = "0x112FB64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000442")]
			[Address(RVA = "0x112FBAC", Offset = "0x112FBAC", VA = "0x112FBAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x112F734", Offset = "0x112F734", VA = "0x112F734")]
		[DebuggerHidden]
		public <PickaxeThrowRoutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0x112F7A0", Offset = "0x112F7A0", VA = "0x112F7A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0x112F7A4", Offset = "0x112F7A4", VA = "0x112F7A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0x112FB6C", Offset = "0x112FB6C", VA = "0x112FB6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[Header("Skele Mine Specific")]
	public GameObject pickaxeToThrow;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject decoyPickaxe;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float delayToThrowPickaxe;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float throwSpeed;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private int _pickaxeThrownState;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Collider[] _skeleColls;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Vector3 _pickaxePos;

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x112F2CC", Offset = "0x112F2CC", VA = "0x112F2CC", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x112F3BC", Offset = "0x112F3BC", VA = "0x112F3BC")]
	private void AISkeletonTheMine_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x112F3C4", Offset = "0x112F3C4", VA = "0x112F3C4", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x112F6F8", Offset = "0x112F6F8", VA = "0x112F6F8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x112F684", Offset = "0x112F684", VA = "0x112F684")]
	[IteratorStateMachine(typeof(<PickaxeThrowRoutine>d__11))]
	private IEnumerator PickaxeThrowRoutine()
	{
		return null;
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x112F75C", Offset = "0x112F75C", VA = "0x112F75C")]
	public AISkeletonTheMine()
	{
	}
}
[Token(Token = "0x20000C4")]
public class AIStoneBook : AI
{
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Stone Book Specific")]
	public GameObject bulletToShoot;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float shootDelay;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform shootPos;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int projectilesToShootAtOnce;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Header("Audio")]
	public ADSoundEffect shootingSound;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float _shootDelayCounter;

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x112FBB4", Offset = "0x112FBB4", VA = "0x112FBB4", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x112FC3C", Offset = "0x112FC3C", VA = "0x112FC3C", Slot = "11")]
	public override void OnLoosePlayer()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x112FC50", Offset = "0x112FC50", VA = "0x112FC50", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x112FC54", Offset = "0x112FC54", VA = "0x112FC54")]
	public void Fire()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x112FDA8", Offset = "0x112FDA8", VA = "0x112FDA8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x112FFCC", Offset = "0x112FFCC", VA = "0x112FFCC")]
	public AIStoneBook()
	{
	}
}
[Token(Token = "0x20000C5")]
public class AITargetBeam : AI
{
	[Token(Token = "0x20000C6")]
	[CompilerGenerated]
	private sealed class <TargetingRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AITargetBeam <>4__this;

		[Token(Token = "0x17000096")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000451")]
			[Address(RVA = "0x1130608", Offset = "0x1130608", VA = "0x1130608", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000453")]
			[Address(RVA = "0x1130650", Offset = "0x1130650", VA = "0x1130650", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0x1130230", Offset = "0x1130230", VA = "0x1130230")]
		[DebuggerHidden]
		public <TargetingRoutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x11304D0", Offset = "0x11304D0", VA = "0x11304D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0x11304D4", Offset = "0x11304D4", VA = "0x11304D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0x1130610", Offset = "0x1130610", VA = "0x1130610", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Configuration")]
	public AttackBeam[] attackBeams;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float targetingStrength;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private bool _isTargeting;

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x112FFDC", Offset = "0x112FFDC", VA = "0x112FFDC", Slot = "11")]
	public override void OnLoosePlayer()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x112FFE0", Offset = "0x112FFE0", VA = "0x112FFE0", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x11301BC", Offset = "0x11301BC", VA = "0x11301BC")]
	[IteratorStateMachine(typeof(<TargetingRoutine>d__5))]
	private IEnumerator TargetingRoutine()
	{
		return null;
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x1130258", Offset = "0x1130258", VA = "0x1130258")]
	private void RotateTowardsPlayer()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x11304C8", Offset = "0x11304C8", VA = "0x11304C8")]
	public AITargetBeam()
	{
	}
}
[Token(Token = "0x20000C7")]
public class AITheMinePossessedSkullExplodingHead : MonoBehaviour
{
	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject explosionObject;

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x1130658", Offset = "0x1130658", VA = "0x1130658")]
	private void Start()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x1130710", Offset = "0x1130710", VA = "0x1130710")]
	private void AITheMinePossessedSkullExplodingHead_DismemberEvent(GameObject g)
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x11307A4", Offset = "0x11307A4", VA = "0x11307A4")]
	public AITheMinePossessedSkullExplodingHead()
	{
	}
}
[Token(Token = "0x20000C9")]
public class AIWalkToEnemy : AI
{
	[Token(Token = "0x20000CA")]
	public delegate void ReachedStopDistance();

	[Token(Token = "0x20000CB")]
	public delegate void IgnorePlayerIfBelow();

	[Token(Token = "0x20000CC")]
	public delegate void PathCalculated(bool foundPath);

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[Header("Configuration")]
	public float moveSpeed;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float animatorSpeedRandomize;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float stopAtDistance;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float minDistanceToWaypointForNext;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public bool usesRootMotion;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
	public bool ignoresPlayerIfBelow;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
	public bool ignoreYPositionOnPath;

	[NonSerialized]
	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public NavMeshPath navPath;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 startPos;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public UnityEvent EventReachedStopDistance;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Header("Animation")]
	public bool updateIsGrounded;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float animationSpeed;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[Header("Helper Stuff")]
	public bool freezeRotX;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	public bool freezeRotZ;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float smoothLookStrength;

	[NonSerialized]
	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool isIgnoringPlayerBecauseBelow;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int currentCornerIndex;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float stunTimer;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool _hasAtStopDist;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	private bool _hasSeesTarget;

	[Token(Token = "0x1400000D")]
	public event ReachedStopDistance OnReachedStoppingDistance
	{
		[Token(Token = "0x600045E")]
		[Address(RVA = "0x11309F8", Offset = "0x11309F8", VA = "0x11309F8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600045F")]
		[Address(RVA = "0x1130A98", Offset = "0x1130A98", VA = "0x1130A98")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event IgnorePlayerIfBelow OnIgnorePlayerIfBelow
	{
		[Token(Token = "0x6000460")]
		[Address(RVA = "0x1130B38", Offset = "0x1130B38", VA = "0x1130B38")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000461")]
		[Address(RVA = "0x1130BD8", Offset = "0x1130BD8", VA = "0x1130BD8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event PathCalculated OnPathCalculated
	{
		[Token(Token = "0x6000462")]
		[Address(RVA = "0x1130C78", Offset = "0x1130C78", VA = "0x1130C78")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000463")]
		[Address(RVA = "0x1130D18", Offset = "0x1130D18", VA = "0x1130D18")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x1130DB8", Offset = "0x1130DB8", VA = "0x1130DB8")]
	public void ClearPath()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x1126D1C", Offset = "0x1126D1C", VA = "0x1126D1C", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x1130EFC", Offset = "0x1130EFC", VA = "0x1130EFC", Slot = "5")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x1130F04", Offset = "0x1130F04", VA = "0x1130F04", Slot = "8")]
	public override void OnHit(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x1127CC0", Offset = "0x1127CC0", VA = "0x1127CC0", Slot = "12")]
	protected virtual void OnReachedStopDistance()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x112740C", Offset = "0x112740C", VA = "0x112740C", Slot = "13")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x1130E6C", Offset = "0x1130E6C", VA = "0x1130E6C")]
	public bool HasParameter(string paramName)
	{
		return default(bool);
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x1128730", Offset = "0x1128730", VA = "0x1128730", Slot = "14")]
	public virtual void OnNoPath(bool seesPlayer)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x1127334", Offset = "0x1127334", VA = "0x1127334")]
	public bool InReachDistance()
	{
		return default(bool);
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x1130F44", Offset = "0x1130F44", VA = "0x1130F44", Slot = "15")]
	public virtual void MoveRoutine(Vector3 goalPoint)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x112F42C", Offset = "0x112F42C", VA = "0x112F42C", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x1131220", Offset = "0x1131220", VA = "0x1131220")]
	public bool IsCustomTargetPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x1131394", Offset = "0x1131394", VA = "0x1131394")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x1131440", Offset = "0x1131440", VA = "0x1131440", Slot = "11")]
	public override void OnLoosePlayer()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x1127D34", Offset = "0x1127D34", VA = "0x1127D34")]
	public AIWalkToEnemy()
	{
	}
}
[Token(Token = "0x20000CD")]
public class AnimationEventEmitParticles : MonoBehaviour
{
	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem particles;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int amount;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.EmissionModule emissionModule;

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x113187C", Offset = "0x113187C", VA = "0x113187C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x11318AC", Offset = "0x11318AC", VA = "0x11318AC")]
	public void Emit()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x11318D0", Offset = "0x11318D0", VA = "0x11318D0")]
	public AnimationEventEmitParticles()
	{
	}
}
[Token(Token = "0x20000CE")]
public class BouncyBullet : BulletBase
{
	[Token(Token = "0x6000482")]
	[Address(RVA = "0x11318D8", Offset = "0x11318D8", VA = "0x11318D8", Slot = "17")]
	public override void OnCollisionOrTrigger(Rigidbody r)
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x1131C84", Offset = "0x1131C84", VA = "0x1131C84")]
	public BouncyBullet()
	{
	}
}
[Token(Token = "0x20000CF")]
public class BulletBase : LivingBase
{
	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[Header("Bullet Specific")]
	public int bulletDamage;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float distanceTillDestroy;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool destroyOnCollide;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	public bool invertVelocityOnHit;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float homingFactor;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform homingTarget;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Light connectedLight;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public ATTACKTYPE attackType;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public bool rotateTowardsVelocity;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
	public bool ignoreTriggerInteractions;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float onDeathDelay;

	[NonSerialized]
	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public float maxSpeed;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public EnemyBase origin;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected bool _inverted;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	[Header("Runtime Variables")]
	public bool shotFromPlayer;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ParticleSystem.EmissionModule emissionModule;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float _distanceTraveled;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private ParticleSystem _ps;

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x1131CC4", Offset = "0x1131CC4", VA = "0x1131CC4", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x1131DD0", Offset = "0x1131DD0", VA = "0x1131DD0", Slot = "16")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x1131E14", Offset = "0x1131E14", VA = "0x1131E14")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x11323C8", Offset = "0x11323C8", VA = "0x11323C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x11324F0", Offset = "0x11324F0", VA = "0x11324F0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x1132528", Offset = "0x1132528", VA = "0x1132528", Slot = "17")]
	public virtual void OnCollisionOrTrigger(Rigidbody r)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x1132950", Offset = "0x1132950", VA = "0x1132950")]
	public void InvertVelocity()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x1132B20", Offset = "0x1132B20", VA = "0x1132B20", Slot = "14")]
	public override void OnDeath(GameObject source)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x1131CA4", Offset = "0x1131CA4", VA = "0x1131CA4")]
	public BulletBase()
	{
	}
}
[Token(Token = "0x20000D1")]
public class CrystalElementalAttack : MonoBehaviour
{
	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float[] possibleZRots;

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x1133388", Offset = "0x1133388", VA = "0x1133388")]
	private void Start()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x11333F8", Offset = "0x11333F8", VA = "0x11333F8")]
	public CrystalElementalAttack()
	{
	}
}
[Token(Token = "0x20000D2")]
public class ThrowableBase : LivingBase
{
	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[Header("Throwable Specific")]
	public int throwDamage;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool thrownFromPlayer;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float knockback;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject spawnOnDeath;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ATTACKTYPE attacktype;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public bool doContactDamage;

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x1133400", Offset = "0x1133400", VA = "0x1133400")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x11335F4", Offset = "0x11335F4", VA = "0x11335F4", Slot = "14")]
	public override void OnDeath(GameObject source)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x1133750", Offset = "0x1133750", VA = "0x1133750")]
	public ThrowableBase()
	{
	}
}
[Token(Token = "0x20000D3")]
public class DestroyIfYTooLow : MonoBehaviour
{
	[Token(Token = "0x6000499")]
	[Address(RVA = "0x1133760", Offset = "0x1133760", VA = "0x1133760")]
	private void Start()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x11337F4", Offset = "0x11337F4", VA = "0x11337F4")]
	public DestroyIfYTooLow()
	{
	}
}
[Token(Token = "0x20000D5")]
public class DropOnDeath : MonoBehaviour
{
	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LivingBase livingToWatch;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 dropOffset;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string dropTableName;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected int hash;

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x1133990", Offset = "0x1133990", VA = "0x1133990")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1133AFC", Offset = "0x1133AFC", VA = "0x1133AFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x1133B30", Offset = "0x1133B30", VA = "0x1133B30")]
	public void OverrideHash(int h)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1133B38", Offset = "0x1133B38", VA = "0x1133B38")]
	public int GetHash()
	{
		return default(int);
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x1133B40", Offset = "0x1133B40", VA = "0x1133B40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x1133C7C", Offset = "0x1133C7C", VA = "0x1133C7C", Slot = "4")]
	public virtual void DropTable_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x1133D14", Offset = "0x1133D14", VA = "0x1133D14")]
	public DropOnDeath()
	{
	}
}
[Token(Token = "0x20000D6")]
public class DropOnDeathAdvanced : DropOnDeath
{
	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Header("Offset Settings")]
	public Vector3 maxOffsetFromCenter;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Rigidbody Settings")]
	public Vector3 localForceInDirection;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[Header("Living Settings")]
	public bool inheritHashFromDrop;

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1133D1C", Offset = "0x1133D1C", VA = "0x1133D1C", Slot = "4")]
	public override void DropTable_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x1134038", Offset = "0x1134038", VA = "0x1134038")]
	public DropOnDeathAdvanced()
	{
	}
}
[Token(Token = "0x20000D7")]
public class EffectHandler : MonoBehaviour
{
	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Effect Settings")]
	public ATTACKTYPE[] immuneToAttacks;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float effectHitInterval;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LivingBase _lb;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ATTACKTYPE _effectActive;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _effectDmg;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _effectDurationTimer;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _effectHitTimer;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _effectGO;

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x1134040", Offset = "0x1134040", VA = "0x1134040")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x11340A0", Offset = "0x11340A0", VA = "0x11340A0")]
	public void ApplyEffect(ATTACKTYPE _effect, int _dmg, float _time = 4f)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x11343DC", Offset = "0x11343DC", VA = "0x11343DC")]
	private void StopParticles()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x113433C", Offset = "0x113433C", VA = "0x113433C")]
	private void RemoveEffectSafely(float _time)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x11344BC", Offset = "0x11344BC", VA = "0x11344BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x11346B4", Offset = "0x11346B4", VA = "0x11346B4")]
	public void DoEffectHit(float dmg, ATTACKTYPE effect)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x11349C8", Offset = "0x11349C8", VA = "0x11349C8")]
	public EffectHandler()
	{
	}
}
[Token(Token = "0x20000D8")]
public class EmissiveEntity : MonoBehaviour
{
	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color emissionColor;

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x11D519C", Offset = "0x11D519C", VA = "0x11D519C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x11D5220", Offset = "0x11D5220", VA = "0x11D5220")]
	public EmissiveEntity()
	{
	}
}
[Token(Token = "0x20000D9")]
public class AIPoisonSpitter : AI
{
	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ParticleSystem spitParticles;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float timeBetweenAttacks;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float _shotTime;

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x11D5228", Offset = "0x11D5228", VA = "0x11D5228", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x11D52C0", Offset = "0x11D52C0", VA = "0x11D52C0")]
	private void EnemyBase_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x11D5368", Offset = "0x11D5368", VA = "0x11D5368")]
	public void EnableParticles(int enable)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x11D542C", Offset = "0x11D542C", VA = "0x11D542C", Slot = "10")]
	public override void OnSeePlayer()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x11D54B0", Offset = "0x11D54B0", VA = "0x11D54B0", Slot = "11")]
	public override void OnLoosePlayer()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x11D54B4", Offset = "0x11D54B4", VA = "0x11D54B4")]
	public AIPoisonSpitter()
	{
	}
}
[Token(Token = "0x20000DA")]
[RequireComponent(typeof(AIWalkToEnemy))]
public class AIRunAwayFromPlayer : MonoBehaviour
{
	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform customTarget;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeToStayAliveOnRun;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool _seenPlayer;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _stayAliveTimer;

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x11D54C4", Offset = "0x11D54C4", VA = "0x11D54C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x11D557C", Offset = "0x11D557C", VA = "0x11D557C")]
	private void AIRunAwayFromPlayer_OnSeesTarget()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x11D5588", Offset = "0x11D5588", VA = "0x11D5588")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x11D5818", Offset = "0x11D5818", VA = "0x11D5818")]
	public AIRunAwayFromPlayer()
	{
	}
}
[Token(Token = "0x20000DB")]
public class ArmoredPart : MonoBehaviour
{
	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public ArmorPiece armorPieceToWatch;

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x11D5828", Offset = "0x11D5828", VA = "0x11D5828")]
	public bool CanHitPart()
	{
		return default(bool);
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x11D58B0", Offset = "0x11D58B0", VA = "0x11D58B0")]
	public ArmoredPart()
	{
	}
}
[Token(Token = "0x20000DC")]
public class ArmorPiece : LivingBase
{
	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("Armor Piece Specific")]
	public LivingBase livingToWatch;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject objToAttachToOnDeath;

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x11D58B8", Offset = "0x11D58B8", VA = "0x11D58B8", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x11D5994", Offset = "0x11D5994", VA = "0x11D5994", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x11D5A70", Offset = "0x11D5A70", VA = "0x11D5A70", Slot = "12")]
	public override void OnHitEvent(GameObject source, int dmg, ATTACKTYPE type)
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x11D5B2C", Offset = "0x11D5B2C", VA = "0x11D5B2C")]
	private void LivingToWatch_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x11D5C08", Offset = "0x11D5C08", VA = "0x11D5C08")]
	public ArmorPiece()
	{
	}
}
[Token(Token = "0x20000DD")]
public class AttachToCeiling : MonoBehaviour
{
	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x11D5C10", Offset = "0x11D5C10", VA = "0x11D5C10")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x11D5E30", Offset = "0x11D5E30", VA = "0x11D5E30")]
	public AttachToCeiling()
	{
	}
}
[Token(Token = "0x20000DE")]
[RequireComponent(typeof(LivingBase))]
public class BloatUpAfterDead : MonoBehaviour
{
	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float bloatUpFinalScale;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float bloatUpSpeed;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeUntilBloatStart;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string explosionSound;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject spawnOnExplode;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color bloatEmissionColor;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LivingBase _lb;

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x11D5E38", Offset = "0x11D5E38", VA = "0x11D5E38")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x11D5F00", Offset = "0x11D5F00", VA = "0x11D5F00")]
	private void BloatUpAfterDead_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x11D5F94", Offset = "0x11D5F94", VA = "0x11D5F94")]
	public BloatUpAfterDead()
	{
	}
}
[Token(Token = "0x20000E0")]
public class BossBeastArm : MonoBehaviour
{
	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LivingBase _lb;

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x11D64DC", Offset = "0x11D64DC", VA = "0x11D64DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x11D65E0", Offset = "0x11D65E0", VA = "0x11D65E0")]
	private void BossBeastArm_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x11D66F4", Offset = "0x11D66F4", VA = "0x11D66F4")]
	public BossBeastArm()
	{
	}
}
[Token(Token = "0x20000E2")]
public class BossBeastArmHead : MonoBehaviour
{
	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer eyeQuad;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject arcAttack;

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x11D69EC", Offset = "0x11D69EC", VA = "0x11D69EC")]
	public void ShootBeam()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x11D6A80", Offset = "0x11D6A80", VA = "0x11D6A80")]
	public BossBeastArmHead()
	{
	}
}
[Token(Token = "0x20000E4")]
public class BossBeastDamageCross : MonoBehaviour
{
	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer[] crossRendis;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x11D6EA8", Offset = "0x11D6EA8", VA = "0x11D6EA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x11D6F3C", Offset = "0x11D6F3C", VA = "0x11D6F3C")]
	public BossBeastDamageCross()
	{
	}
}
[Token(Token = "0x20000E6")]
public class BossBeastPossiblePhase2Position : MonoBehaviour
{
	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x11D7380", Offset = "0x11D7380", VA = "0x11D7380")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x11D7384", Offset = "0x11D7384", VA = "0x11D7384")]
	private void Update()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x11D7388", Offset = "0x11D7388", VA = "0x11D7388")]
	public BossBeastPossiblePhase2Position()
	{
	}
}
[Token(Token = "0x20000E7")]
public class BossBeastSpawnEnemy : MonoBehaviour
{
	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] possibleEnemies;

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x11D7390", Offset = "0x11D7390", VA = "0x11D7390")]
	public void SpawnEnemy()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x11D7424", Offset = "0x11D7424", VA = "0x11D7424")]
	public BossBeastSpawnEnemy()
	{
	}
}
[Token(Token = "0x20000E9")]
public class BossBeastStage1 : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000EA")]
	public class Arm
	{
		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform moveGoal;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FABRIK fabrik;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossBeastArmHead head;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LivingBase livingBase;

		[Token(Token = "0x6000500")]
		[Address(RVA = "0x11D7EF4", Offset = "0x11D7EF4", VA = "0x11D7EF4")]
		public Arm()
		{
		}
	}

	[Token(Token = "0x20000EC")]
	[CompilerGenerated]
	private sealed class <WaitUntilPlayerIsClose>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossBeastStage1 <>4__this;

		[Token(Token = "0x170000A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000508")]
			[Address(RVA = "0x11D8304", Offset = "0x11D8304", VA = "0x11D8304", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600050A")]
			[Address(RVA = "0x11D834C", Offset = "0x11D834C", VA = "0x11D834C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0x11D7D70", Offset = "0x11D7D70", VA = "0x11D7D70")]
		[DebuggerHidden]
		public <WaitUntilPlayerIsClose>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x11D7FF4", Offset = "0x11D7FF4", VA = "0x11D7FF4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x11D7FF8", Offset = "0x11D7FF8", VA = "0x11D7FF8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x11D830C", Offset = "0x11D830C", VA = "0x11D830C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000ED")]
	[CompilerGenerated]
	private sealed class <BossRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossBeastStage1 <>4__this;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <_beamsCounter>5__2;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 <_playerPos>5__3;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <_radiusAroundPlayer>5__4;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WorldGeneratorEvolved <_wg>5__5;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <_crossesSpawned>5__6;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <a>5__7;

		[Token(Token = "0x170000AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600050E")]
			[Address(RVA = "0x11D8B88", Offset = "0x11D8B88", VA = "0x11D8B88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000510")]
			[Address(RVA = "0x11D8BD0", Offset = "0x11D8BD0", VA = "0x11D8BD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x11D7D98", Offset = "0x11D7D98", VA = "0x11D7D98")]
		[DebuggerHidden]
		public <BossRoutine>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x11D8354", Offset = "0x11D8354", VA = "0x11D8354", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x11D8358", Offset = "0x11D8358", VA = "0x11D8358", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x11D8B90", Offset = "0x11D8B90", VA = "0x11D8B90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Arm[] arms;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform attackMovePos;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float armAttackSpeed;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject projToShoot;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject beastStage2;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject crossPrefab;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator _animo;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 _spawnedAtPosition;

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x11D7690", Offset = "0x11D7690", VA = "0x11D7690")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x11D7CDC", Offset = "0x11D7CDC", VA = "0x11D7CDC")]
	public void StartBossRoutine()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x11D7C68", Offset = "0x11D7C68", VA = "0x11D7C68")]
	[IteratorStateMachine(typeof(<WaitUntilPlayerIsClose>d__11))]
	private IEnumerator WaitUntilPlayerIsClose()
	{
		return null;
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x11D7CFC", Offset = "0x11D7CFC", VA = "0x11D7CFC")]
	[IteratorStateMachine(typeof(<BossRoutine>d__12))]
	public IEnumerator BossRoutine()
	{
		return null;
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x11D7DC0", Offset = "0x11D7DC0", VA = "0x11D7DC0")]
	private void _lb_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x11D7EE0", Offset = "0x11D7EE0", VA = "0x11D7EE0")]
	private void _lb_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x11D7EE4", Offset = "0x11D7EE4", VA = "0x11D7EE4")]
	public BossBeastStage1()
	{
	}
}
[Token(Token = "0x20000EF")]
public class BossBeastStage2 : MonoBehaviour
{
	[Token(Token = "0x20000F0")]
	[CompilerGenerated]
	private sealed class <Stage2Routine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossBeastStage2 <>4__this;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material <_mouthMat>5__2;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <_baseColor>5__3;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color <_startColor>5__4;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color <_goalColor>5__5;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float <_goDarkTime>5__6;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float <_goBrightTime>5__7;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float <_t>5__8;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int <a>5__9;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 <_startSize>5__10;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 <_goalSize>5__11;

		[Token(Token = "0x170000AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600051C")]
			[Address(RVA = "0x11D9BF0", Offset = "0x11D9BF0", VA = "0x11D9BF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600051E")]
			[Address(RVA = "0x11D9C38", Offset = "0x11D9C38", VA = "0x11D9C38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x11D9170", Offset = "0x11D9170", VA = "0x11D9170")]
		[DebuggerHidden]
		public <Stage2Routine>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x11D9260", Offset = "0x11D9260", VA = "0x11D9260", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x11D9264", Offset = "0x11D9264", VA = "0x11D9264", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x11D9BF8", Offset = "0x11D9BF8", VA = "0x11D9BF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F1")]
	[CompilerGenerated]
	private sealed class <MoveToNextPos>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 goal;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BossBeastStage2 <>4__this;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <_goalXZ>5__2;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <_velocity>5__3;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <_timeToMove>5__4;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <_moveCounter>5__5;

		[Token(Token = "0x170000AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000522")]
			[Address(RVA = "0x11D9F5C", Offset = "0x11D9F5C", VA = "0x11D9F5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000524")]
			[Address(RVA = "0x11D9FA4", Offset = "0x11D9FA4", VA = "0x11D9FA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x11D9230", Offset = "0x11D9230", VA = "0x11D9230")]
		[DebuggerHidden]
		public <MoveToNextPos>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0x11D9C40", Offset = "0x11D9C40", VA = "0x11D9C40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0x11D9C44", Offset = "0x11D9C44", VA = "0x11D9C44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x11D9F64", Offset = "0x11D9F64", VA = "0x11D9F64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem beamParticles;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer[] mouthQuads;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer[] eyeQuads;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform eyePupil;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject arcAttackProjectile;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject beastStage3;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LookAtPlayer _lookAtPlayer;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private BossBeastPossiblePhase2Position[] _possiblePhase2Positions;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _currentlyMoving;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 _spawnedAtPosition;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _hasBeenHit;

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x11D8C48", Offset = "0x11D8C48", VA = "0x11D8C48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x11D8E9C", Offset = "0x11D8E9C", VA = "0x11D8E9C")]
	private void BossBeastStage2_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x11D8EA8", Offset = "0x11D8EA8", VA = "0x11D8EA8")]
	private void BossBeastStage2_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x11D8E28", Offset = "0x11D8E28", VA = "0x11D8E28")]
	[IteratorStateMachine(typeof(<Stage2Routine>d__14))]
	private IEnumerator Stage2Routine()
	{
		return null;
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x11D9198", Offset = "0x11D9198", VA = "0x11D9198")]
	[IteratorStateMachine(typeof(<MoveToNextPos>d__15))]
	private IEnumerator MoveToNextPos(Vector3 goal)
	{
		return null;
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x11D9258", Offset = "0x11D9258", VA = "0x11D9258")]
	public BossBeastStage2()
	{
	}
}
[Token(Token = "0x20000F2")]
public class BossBeastStage3 : MonoBehaviour
{
	[Token(Token = "0x20000F3")]
	[CompilerGenerated]
	private sealed class <DeathRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossBeastStage3 <>4__this;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material <_mouthMat>5__2;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <_baseColor>5__3;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color <_goalColor>5__4;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <_t>5__5;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SpecialEventGraph.SpecialEventEntry <_storyEvent>5__6;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject <_wonrun>5__7;

		[Token(Token = "0x170000B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000532")]
			[Address(RVA = "0x11DBCA8", Offset = "0x11DBCA8", VA = "0x11DBCA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000534")]
			[Address(RVA = "0x11DBCF0", Offset = "0x11DBCF0", VA = "0x11DBCF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0x11DA4BC", Offset = "0x11DA4BC", VA = "0x11DA4BC")]
		[DebuggerHidden]
		public <DeathRoutine>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0x11DAED0", Offset = "0x11DAED0", VA = "0x11DAED0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0x11DAED4", Offset = "0x11DAED4", VA = "0x11DAED4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0x11DBCB0", Offset = "0x11DBCB0", VA = "0x11DBCB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F5")]
	[CompilerGenerated]
	private sealed class <BossRoutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossBeastStage3 <>4__this;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BossBeastPossiblePhase2Position[] <_possiblePositions>5__2;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BossBeastPossiblePhase2Position <_closestPos>5__3;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <_dirToPlayer>5__4;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float <_moveSpeed>5__5;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <_distMoved>5__6;

		[Token(Token = "0x170000B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600053B")]
			[Address(RVA = "0x11DC6BC", Offset = "0x11DC6BC", VA = "0x11DC6BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600053D")]
			[Address(RVA = "0x11DC704", Offset = "0x11DC704", VA = "0x11DC704", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x11DAD0C", Offset = "0x11DAD0C", VA = "0x11DAD0C")]
		[DebuggerHidden]
		public <BossRoutine>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x11DBD78", Offset = "0x11DBD78", VA = "0x11DBD78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x11DBD7C", Offset = "0x11DBD7C", VA = "0x11DBD7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x11DC6C4", Offset = "0x11DC6C4", VA = "0x11DC6C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000F6")]
	[CompilerGenerated]
	private sealed class <MoveToPos>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 goal;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BossBeastStage3 <>4__this;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <_goalXZ>5__2;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <_velocity>5__3;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float <_timeToMove>5__4;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <_moveCounter>5__5;

		[Token(Token = "0x170000B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000541")]
			[Address(RVA = "0x11DCA60", Offset = "0x11DCA60", VA = "0x11DCA60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000543")]
			[Address(RVA = "0x11DCAA8", Offset = "0x11DCAA8", VA = "0x11DCAA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x11DADCC", Offset = "0x11DADCC", VA = "0x11DADCC")]
		[DebuggerHidden]
		public <MoveToPos>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x11DC70C", Offset = "0x11DC70C", VA = "0x11DC70C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x11DC710", Offset = "0x11DC710", VA = "0x11DC710", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x11DCA68", Offset = "0x11DCA68", VA = "0x11DCA68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer[] mouthEyeQuads;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject wonRunArea;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject journalPagePrefab;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LivingBase _lb;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _currentlyMoving;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool _inDash;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool _hasBeenHit;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	private bool _hasReadMainStoryPage;

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x11D9FAC", Offset = "0x11D9FAC", VA = "0x11D9FAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x11DA160", Offset = "0x11DA160", VA = "0x11DA160")]
	private void _lb_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x11DA228", Offset = "0x11DA228", VA = "0x11DA228")]
	private void BossBeastStage3_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x11DA448", Offset = "0x11DA448", VA = "0x11DA448")]
	[IteratorStateMachine(typeof(<DeathRoutine>d__11))]
	private IEnumerator DeathRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x11DA4E4", Offset = "0x11DA4E4", VA = "0x11DA4E4")]
	public void PlaceMainStoryPageAroundPlayerInDungeon(SpecialEventGraph.SpecialEventEntry _event)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x11DAC48", Offset = "0x11DAC48", VA = "0x11DAC48")]
	private void LoreEvent_UseStart(BaseInteract b)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x11DA0EC", Offset = "0x11DA0EC", VA = "0x11DA0EC")]
	[IteratorStateMachine(typeof(<BossRoutine>d__14))]
	private IEnumerator BossRoutine()
	{
		return null;
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x11DAD34", Offset = "0x11DAD34", VA = "0x11DAD34")]
	[IteratorStateMachine(typeof(<MoveToPos>d__15))]
	private IEnumerator MoveToPos(Vector3 goal)
	{
		return null;
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x11DADF4", Offset = "0x11DADF4", VA = "0x11DADF4")]
	public BossBeastStage3()
	{
	}
}
[Token(Token = "0x20000F7")]
public class BossBeastTeleportToOutsideRoom : MonoBehaviour
{
	[Token(Token = "0x6000544")]
	[Address(RVA = "0x11DCAB0", Offset = "0x11DCAB0", VA = "0x11DCAB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x11DCAB4", Offset = "0x11DCAB4", VA = "0x11DCAB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x11DCAB8", Offset = "0x11DCAB8", VA = "0x11DCAB8")]
	public BossBeastTeleportToOutsideRoom()
	{
	}
}
[Token(Token = "0x20000F8")]
public class BossKingSlime : MonoBehaviour
{
	[Token(Token = "0x20000F9")]
	[CompilerGenerated]
	private sealed class <DashAttack>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossKingSlime <>4__this;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <_timer>5__2;

		[Token(Token = "0x170000B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000550")]
			[Address(RVA = "0x11DD4EC", Offset = "0x11DD4EC", VA = "0x11DD4EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000552")]
			[Address(RVA = "0x11DD534", Offset = "0x11DD534", VA = "0x11DD534", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0x11DD008", Offset = "0x11DD008", VA = "0x11DD008")]
		[DebuggerHidden]
		public <DashAttack>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0x11DD1C0", Offset = "0x11DD1C0", VA = "0x11DD1C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0x11DD1C4", Offset = "0x11DD1C4", VA = "0x11DD1C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0x11DD4F4", Offset = "0x11DD4F4", VA = "0x11DD4F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject enemyToSpawnOnHit;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject enemyToSpawnOnHitHard;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int hitEventsUntilDash;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private EnemyBase _eb;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator _animo;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody _rb;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _hitsReceived;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _inDash;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AIJumpToEnemy _aiJumpToEnemy;

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x11DCAC0", Offset = "0x11DCAC0", VA = "0x11DCAC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x11DCD88", Offset = "0x11DCD88", VA = "0x11DCD88")]
	private void BossKingSlime_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x11DCF94", Offset = "0x11DCF94", VA = "0x11DCF94")]
	[IteratorStateMachine(typeof(<DashAttack>d__11))]
	private IEnumerator DashAttack()
	{
		return null;
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x11DD030", Offset = "0x11DD030", VA = "0x11DD030")]
	public void Dash()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x11DD188", Offset = "0x11DD188", VA = "0x11DD188")]
	public BossKingSlime()
	{
	}
}
[Token(Token = "0x20000FB")]
public class BossKillerplantHead : MonoBehaviour
{
	[Token(Token = "0x20000FC")]
	[CompilerGenerated]
	private sealed class <SpawnPoisonSpitProjectiles>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossKillerplantHead <>4__this;

		[Token(Token = "0x170000BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000561")]
			[Address(RVA = "0x11DE134", Offset = "0x11DE134", VA = "0x11DE134", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000563")]
			[Address(RVA = "0x11DE17C", Offset = "0x11DE17C", VA = "0x11DE17C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x11DDEF8", Offset = "0x11DDEF8", VA = "0x11DDEF8")]
		[DebuggerHidden]
		public <SpawnPoisonSpitProjectiles>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0x11DDF28", Offset = "0x11DDF28", VA = "0x11DDF28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x11DDF2C", Offset = "0x11DDF2C", VA = "0x11DDF2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x11DE13C", Offset = "0x11DE13C", VA = "0x11DE13C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform positionToFollow;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shootPos;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem spitParticles;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject spitDamageObject;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ADSoundEffect soundSpitting;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public LookAtPlayer _lookAtPlayer;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _keepHeadPos;

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x11DDB90", Offset = "0x11DDB90", VA = "0x11DDB90")]
	private void Awake()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x11DDBE8", Offset = "0x11DDBE8", VA = "0x11DDBE8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x11DDC8C", Offset = "0x11DDC8C", VA = "0x11DDC8C")]
	public void SetSpitting(int stage)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x11DDE84", Offset = "0x11DDE84", VA = "0x11DDE84")]
	[IteratorStateMachine(typeof(<SpawnPoisonSpitProjectiles>d__10))]
	private IEnumerator SpawnPoisonSpitProjectiles()
	{
		return null;
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x11DDF20", Offset = "0x11DDF20", VA = "0x11DDF20")]
	public BossKillerplantHead()
	{
	}
}
[Token(Token = "0x20000FD")]
public class BossInfo : MonoBehaviour
{
	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string bossName;

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x11DE184", Offset = "0x11DE184", VA = "0x11DE184")]
	public string GetLocalizedBossName()
	{
		return null;
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x11DE1DC", Offset = "0x11DE1DC", VA = "0x11DE1DC")]
	public BossInfo()
	{
	}
}
[Token(Token = "0x20000FE")]
public class CeilingSafetyRestrictions : MonoBehaviour
{
	[Token(Token = "0x6000566")]
	[Address(RVA = "0x11DE234", Offset = "0x11DE234", VA = "0x11DE234")]
	private void Start()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x11DE238", Offset = "0x11DE238", VA = "0x11DE238")]
	public CeilingSafetyRestrictions()
	{
	}
}
[Token(Token = "0x20000FF")]
public class ChallengeGhostSword : MonoBehaviour
{
	[Token(Token = "0x2000100")]
	public delegate void OnParrySword();

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject breakParticles;

	[Token(Token = "0x14000010")]
	public event OnParrySword SwordParryEvent
	{
		[Token(Token = "0x6000568")]
		[Address(RVA = "0x11DE240", Offset = "0x11DE240", VA = "0x11DE240")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000569")]
		[Address(RVA = "0x11DE2DC", Offset = "0x11DE2DC", VA = "0x11DE2DC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x11DE378", Offset = "0x11DE378", VA = "0x11DE378")]
	private void Start()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x11DE438", Offset = "0x11DE438", VA = "0x11DE438")]
	private void PlaySwingSound()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x11DE4D0", Offset = "0x11DE4D0", VA = "0x11DE4D0")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x11DE788", Offset = "0x11DE788", VA = "0x11DE788")]
	public ChallengeGhostSword()
	{
	}
}
[Token(Token = "0x2000101")]
public class DamageMultiplier : MonoBehaviour
{
	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float multiplier;

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x11DE89C", Offset = "0x11DE89C", VA = "0x11DE89C")]
	public DamageMultiplier()
	{
	}
}
[Token(Token = "0x2000102")]
public class DismemberObject : MonoBehaviour
{
	[Token(Token = "0x2000103")]
	public delegate void OnDismember(GameObject g);

	[Token(Token = "0x2000104")]
	[CompilerGenerated]
	private sealed class <IDismember>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DismemberObject <>4__this;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <_savedPos>5__2;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion <_savedRot>5__3;

		[Token(Token = "0x170000BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000581")]
			[Address(RVA = "0x11DFA20", Offset = "0x11DFA20", VA = "0x11DFA20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000583")]
			[Address(RVA = "0x11DFA68", Offset = "0x11DFA68", VA = "0x11DFA68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x11DEAE8", Offset = "0x11DEAE8", VA = "0x11DEAE8")]
		[DebuggerHidden]
		public <IDismember>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0x11DEC74", Offset = "0x11DEC74", VA = "0x11DEC74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x11DEC78", Offset = "0x11DEC78", VA = "0x11DEC78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x11DFA28", Offset = "0x11DFA28", VA = "0x11DFA28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public int timesToHitToDismember;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject particlesOnDismember;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator mainAnimator;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DismemberObject[] dismemberChildren;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MonoBehaviour[] stuffToDisableOnDismember;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject[] gameObjectsToDisableOnDismember;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int massToInit;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool changeLayerToOnlyStaticAndGround;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float extraRandDismemberForce;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MeshRenderer _meshRend;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _dismembered;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material _thisMaterial;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Only Set if Kill on Dismember")]
	public bool killEnemyOnDismember;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public LivingBase livingBase;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _timesHit;

	[Token(Token = "0x14000011")]
	public event OnDismember DismemberEvent
	{
		[Token(Token = "0x6000573")]
		[Address(RVA = "0x11DE8AC", Offset = "0x11DE8AC", VA = "0x11DE8AC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000574")]
		[Address(RVA = "0x11DE948", Offset = "0x11DE948", VA = "0x11DE948")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x11DE9E4", Offset = "0x11DE9E4", VA = "0x11DE9E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x11DEA3C", Offset = "0x11DEA3C", VA = "0x11DEA3C")]
	[ContextMenu("DISMEMBER")]
	public void Dismember()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x11DEA74", Offset = "0x11DEA74", VA = "0x11DEA74")]
	[IteratorStateMachine(typeof(<IDismember>d__20))]
	private IEnumerator IDismember()
	{
		return null;
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x11DEB10", Offset = "0x11DEB10", VA = "0x11DEB10")]
	public void TryDismember()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x11DEB38", Offset = "0x11DEB38", VA = "0x11DEB38")]
	public DismemberObject()
	{
	}
}
[Serializable]
[Token(Token = "0x2000105")]
public class DropTable
{
	[Serializable]
	[Token(Token = "0x2000106")]
	public class DropEntry
	{
		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string objectId;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float probability;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		public float hardModeProbability;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int minAmount;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int maxAmount;

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x11DFD1C", Offset = "0x11DFD1C", VA = "0x11DFD1C")]
		public DropEntry()
		{
		}
	}

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string[] dropTableNames;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool forceDrop;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<DropEntry> dropEntries;

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x11DFA70", Offset = "0x11DFA70", VA = "0x11DFA70")]
	public ItemBase GetDrop(int seed = 0)
	{
		return null;
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x11DFB28", Offset = "0x11DFB28", VA = "0x11DFB28")]
	private string GetWeightedItem(int seed)
	{
		return null;
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x11DFC94", Offset = "0x11DFC94", VA = "0x11DFC94")]
	public DropTable()
	{
	}
}
[Token(Token = "0x2000107")]
public class EnemyBase : LivingBase
{
	[Token(Token = "0x2000108")]
	public enum HIT_FLASH_TYPE
	{
		[Token(Token = "0x4000554")]
		DEFAULT_RED,
		[Token(Token = "0x4000555")]
		GHOSTLY,
		[Token(Token = "0x4000556")]
		NONE,
		[Token(Token = "0x4000557")]
		EMISSIVE
	}

	[Token(Token = "0x2000109")]
	public enum KnockbackType
	{
		[Token(Token = "0x4000559")]
		DEFAULT,
		[Token(Token = "0x400055A")]
		FORCE_PUSH
	}

	[Token(Token = "0x200010C")]
	[CompilerGenerated]
	private sealed class <HandleHitFlashGhostly>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyBase <>4__this;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <_colDefault>5__2;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <_colRed>5__3;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float <_time>5__4;

		[Token(Token = "0x170000C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005A8")]
			[Address(RVA = "0x11E1DD0", Offset = "0x11E1DD0", VA = "0x11E1DD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005AA")]
			[Address(RVA = "0x11E1E18", Offset = "0x11E1E18", VA = "0x11E1E18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x11E083C", Offset = "0x11E083C", VA = "0x11E083C")]
		[DebuggerHidden]
		public <HandleHitFlashGhostly>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x11E1AB0", Offset = "0x11E1AB0", VA = "0x11E1AB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x11E1AB4", Offset = "0x11E1AB4", VA = "0x11E1AB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x11E1DD8", Offset = "0x11E1DD8", VA = "0x11E1DD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200010D")]
	[CompilerGenerated]
	private sealed class <HandleHitFlashRed>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyBase <>4__this;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <col>5__2;

		[Token(Token = "0x170000C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005AE")]
			[Address(RVA = "0x11E20F8", Offset = "0x11E20F8", VA = "0x11E20F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B0")]
			[Address(RVA = "0x11E2140", Offset = "0x11E2140", VA = "0x11E2140", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x11E0864", Offset = "0x11E0864", VA = "0x11E0864")]
		[DebuggerHidden]
		public <HandleHitFlashRed>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x11E1E20", Offset = "0x11E1E20", VA = "0x11E1E20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x11E1E24", Offset = "0x11E1E24", VA = "0x11E1E24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x11E2100", Offset = "0x11E2100", VA = "0x11E2100", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200010F")]
	[CompilerGenerated]
	private sealed class <HandleHitFlashEmissive>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyBase <>4__this;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <col>5__2;

		[Token(Token = "0x170000C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005B8")]
			[Address(RVA = "0x11E26A8", Offset = "0x11E26A8", VA = "0x11E26A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005BA")]
			[Address(RVA = "0x11E26F0", Offset = "0x11E26F0", VA = "0x11E26F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x11E088C", Offset = "0x11E088C", VA = "0x11E088C")]
		[DebuggerHidden]
		public <HandleHitFlashEmissive>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x11E2274", Offset = "0x11E2274", VA = "0x11E2274", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x11E2278", Offset = "0x11E2278", VA = "0x11E2278", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x11E26B0", Offset = "0x11E26B0", VA = "0x11E26B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[Header("Spawn Infos")]
	public Vector3 spawnOffset;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[Range(0f, 1f)]
	[Header("Enemy Infos")]
	public float knockbackResistance;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float minKnockbackDistance;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool knockbackOnlyWithSword;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public int touchDamage;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int projectileDamage;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool killOnPlayerTouch;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
	public bool damageOtherEnemies;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF6")]
	public bool instakillOnMeeleDamage;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF7")]
	public bool destroyPropsOnTouch;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[Header("Basic Animation")]
	public HIT_FLASH_TYPE hitFlashType;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public string triggerHit;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public string triggerHitLeft;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string triggerHitRight;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string triggerHitBehind;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public string movespeed;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool rotateOnHitToHitPosition;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Animator animo;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private MeshRenderer[] rendis;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Color[] _originalEmissionColors;

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x11DFD24", Offset = "0x11DFD24", VA = "0x11DFD24", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x11DFF54", Offset = "0x11DFF54", VA = "0x11DFF54", Slot = "5")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x11DFFCC", Offset = "0x11DFFCC", VA = "0x11DFFCC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x11E0270", Offset = "0x11E0270", VA = "0x11E0270")]
	[ContextMenu("Update LivingID and DropID to living name")]
	public void DEBUG_UPDATE_NAMES()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x11E034C", Offset = "0x11E034C", VA = "0x11E034C")]
	private void EnemyBase_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x11E0544", Offset = "0x11E0544", VA = "0x11E0544", Slot = "16")]
	public override void Update()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x11E054C", Offset = "0x11E054C", VA = "0x11E054C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x11E0694", Offset = "0x11E0694", VA = "0x11E0694")]
	public void UpdateAnimatorPosition()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x11E06EC", Offset = "0x11E06EC", VA = "0x11E06EC")]
	public void Knockback(float distance, Vector3 origin, float speed = 5f, ATTACKTYPE attackType = ATTACKTYPE.UNDEFINED, KnockbackType type = KnockbackType.DEFAULT)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x11E04D0", Offset = "0x11E04D0", VA = "0x11E04D0")]
	[IteratorStateMachine(typeof(<HandleHitFlashGhostly>d__30))]
	private IEnumerator HandleHitFlashGhostly()
	{
		return null;
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x11E03E8", Offset = "0x11E03E8", VA = "0x11E03E8")]
	[IteratorStateMachine(typeof(<HandleHitFlashRed>d__31))]
	private IEnumerator HandleHitFlashRed()
	{
		return null;
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x11E045C", Offset = "0x11E045C", VA = "0x11E045C")]
	[IteratorStateMachine(typeof(<HandleHitFlashEmissive>d__33))]
	private IEnumerator HandleHitFlashEmissive()
	{
		return null;
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x11E08B4", Offset = "0x11E08B4", VA = "0x11E08B4", Slot = "17")]
	public virtual void HandleHitAnimation(HitEventInfos _infos)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x11E0D90", Offset = "0x11E0D90", VA = "0x11E0D90")]
	private string AnimExists(string s)
	{
		return null;
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x11E0DAC", Offset = "0x11E0DAC", VA = "0x11E0DAC", Slot = "14")]
	public override void OnDeath(GameObject source)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x11E0ECC", Offset = "0x11E0ECC", VA = "0x11E0ECC")]
	public float DistanceToPlayer()
	{
		return default(float);
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x11E1090", Offset = "0x11E1090", VA = "0x11E1090")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x11E1240", Offset = "0x11E1240", VA = "0x11E1240")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x11E1358", Offset = "0x11E1358", VA = "0x11E1358", Slot = "18")]
	public virtual void OnHitPlayer(PlayerLiving p)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x11E0114", Offset = "0x11E0114", VA = "0x11E0114")]
	public void UpdateAllMeshRenderers()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x11E13F0", Offset = "0x11E13F0", VA = "0x11E13F0")]
	public EnemyBase()
	{
	}
}
[Token(Token = "0x2000110")]
public class EnemyBat : EnemyBase
{
	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[Header("Bat Specific")]
	public Collider collisionSphere;

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x11E26F8", Offset = "0x11E26F8", VA = "0x11E26F8", Slot = "14")]
	public override void OnDeath(GameObject source)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x11E2748", Offset = "0x11E2748", VA = "0x11E2748", Slot = "18")]
	public override void OnHitPlayer(PlayerLiving p)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x11E2770", Offset = "0x11E2770", VA = "0x11E2770")]
	public EnemyBat()
	{
	}
}
[Token(Token = "0x2000111")]
public class EnemyBeholder : EnemyBase
{
	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x11E2774", Offset = "0x11E2774", VA = "0x11E2774", Slot = "14")]
	public override void OnDeath(GameObject source)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x11E2860", Offset = "0x11E2860", VA = "0x11E2860")]
	public EnemyBeholder()
	{
	}
}
[Token(Token = "0x2000112")]
public class EnemyExplodingGoo : MonoBehaviour
{
	[Token(Token = "0x2000113")]
	[CompilerGenerated]
	private sealed class <GrowNExplode>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemyExplodingGoo <>4__this;

		[Token(Token = "0x170000C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005C8")]
			[Address(RVA = "0x11E2FC0", Offset = "0x11E2FC0", VA = "0x11E2FC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005CA")]
			[Address(RVA = "0x11E3008", Offset = "0x11E3008", VA = "0x11E3008", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x11E2D80", Offset = "0x11E2D80", VA = "0x11E2D80")]
		[DebuggerHidden]
		public <GrowNExplode>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x11E2DB0", Offset = "0x11E2DB0", VA = "0x11E2DB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x11E2DB4", Offset = "0x11E2DB4", VA = "0x11E2DB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x11E2FC8", Offset = "0x11E2FC8", VA = "0x11E2FC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ADSoundEffect growSound;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EnemyBase _eb;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _growing;

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x11E2864", Offset = "0x11E2864", VA = "0x11E2864")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x11E28EC", Offset = "0x11E28EC", VA = "0x11E28EC")]
	private void CheckIfPlayerIsTooNearOnSpawn()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x11E2A6C", Offset = "0x11E2A6C", VA = "0x11E2A6C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x11E2D0C", Offset = "0x11E2D0C", VA = "0x11E2D0C")]
	[IteratorStateMachine(typeof(<GrowNExplode>d__6))]
	private IEnumerator GrowNExplode()
	{
		return null;
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x11E2DA8", Offset = "0x11E2DA8", VA = "0x11E2DA8")]
	public EnemyExplodingGoo()
	{
	}
}
[Token(Token = "0x2000114")]
public class EnemyMimic : EnemyBase
{
	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool _opened;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Rigidbody _rb;

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x11E3010", Offset = "0x11E3010", VA = "0x11E3010", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x11E30A4", Offset = "0x11E30A4", VA = "0x11E30A4", Slot = "12")]
	public override void OnHitEvent(GameObject source, int dmg, ATTACKTYPE type)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x11E3100", Offset = "0x11E3100", VA = "0x11E3100")]
	public EnemyMimic()
	{
	}
}
[Token(Token = "0x2000115")]
public class EnemyMistKnight : EnemyBase
{
	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x11E3104", Offset = "0x11E3104", VA = "0x11E3104")]
	public EnemyMistKnight()
	{
	}
}
[Token(Token = "0x2000116")]
public class EnemyStomp : MonoBehaviour
{
	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject stompObject;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform stompPos;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string stompSoundId;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator _animo;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _animCounter;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 _currentFootPos;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x11E3108", Offset = "0x11E3108", VA = "0x11E3108")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x11E3160", Offset = "0x11E3160", VA = "0x11E3160")]
	public void DoStomp()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x11E31CC", Offset = "0x11E31CC", VA = "0x11E31CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x11E323C", Offset = "0x11E323C", VA = "0x11E323C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x11E32C0", Offset = "0x11E32C0", VA = "0x11E32C0")]
	public void SpawnStompObject()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x11E3574", Offset = "0x11E3574", VA = "0x11E3574")]
	public EnemyStomp()
	{
	}
}
[Token(Token = "0x2000117")]
public class EnemyStoneSlime : MonoBehaviour
{
	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject spikeAttack;

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x11E357C", Offset = "0x11E357C", VA = "0x11E357C")]
	public void SpawnAttack()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x11E38D4", Offset = "0x11E38D4", VA = "0x11E38D4")]
	public EnemyStoneSlime()
	{
	}
}
[Token(Token = "0x2000118")]
public class EnemySword : WeaponBase
{
	[Token(Token = "0x2000119")]
	public delegate void OnSwordClash();

	[Token(Token = "0x200011A")]
	public delegate void OnEntityHit(Collision other, float dmg, LivingBase _l);

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ADSoundEffect swingSound;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Range(0f, 1f)]
	public float volume;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int damageOnPlayer;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LivingBase livingToWatch;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool unparentOnStart;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private ParticleSystem.EmissionModule emissionModule;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private PlayerLiving pl;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private ParticleSystem _enemyHitParticlesInstance;

	[Token(Token = "0x14000012")]
	public event OnSwordClash SwordClashEvent
	{
		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x11E38DC", Offset = "0x11E38DC", VA = "0x11E38DC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x11E3978", Offset = "0x11E3978", VA = "0x11E3978")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event OnEntityHit EntityHitEvent
	{
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x11E3A14", Offset = "0x11E3A14", VA = "0x11E3A14")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x11E3AB0", Offset = "0x11E3AB0", VA = "0x11E3AB0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x11E3B4C", Offset = "0x11E3B4C", VA = "0x11E3B4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x11E3B80", Offset = "0x11E3B80", VA = "0x11E3B80")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x11E3C8C", Offset = "0x11E3C8C", VA = "0x11E3C8C")]
	private void LivingToWatch_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x11E3D08", Offset = "0x11E3D08", VA = "0x11E3D08")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x11E3DC0", Offset = "0x11E3DC0", VA = "0x11E3DC0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x11E44F8", Offset = "0x11E44F8", VA = "0x11E44F8", Slot = "15")]
	public virtual void OnHitEntity(Collision other, float dmg, LivingBase e)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x11E4658", Offset = "0x11E4658", VA = "0x11E4658", Slot = "12")]
	public override void UpdateWeaponColors(Color region0, Color region1, Color region2, Color region3, Color region4, Color region5, Color region6, bool history = true)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x11E465C", Offset = "0x11E465C", VA = "0x11E465C", Slot = "13")]
	public override void SetTrailEmission(Color c, float intensity, float weight = 0.8f)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x11E4660", Offset = "0x11E4660", VA = "0x11E4660", Slot = "14")]
	public override void SetTrailColor(Color c, float weight = 0.8f)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x11E4664", Offset = "0x11E4664", VA = "0x11E4664")]
	public EnemySword()
	{
	}
}
[Token(Token = "0x200011B")]
public class HumanBase : EnemyBase
{
	[Serializable]
	[Token(Token = "0x200011C")]
	public struct ArmorInfo
	{
		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ArmorPiece armorPiece;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int health;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[Range(0f, 1f)]
		public float probToBeEnabled;
	}

	[Token(Token = "0x200011D")]
	[CompilerGenerated]
	private sealed class <CheckForAttack>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HumanBase <>4__this;

		[Token(Token = "0x170000C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005FE")]
			[Address(RVA = "0x11E5818", Offset = "0x11E5818", VA = "0x11E5818", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000600")]
			[Address(RVA = "0x11E5860", Offset = "0x11E5860", VA = "0x11E5860", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x11E4BAC", Offset = "0x11E4BAC", VA = "0x11E4BAC")]
		[DebuggerHidden]
		public <CheckForAttack>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x11E5758", Offset = "0x11E5758", VA = "0x11E5758", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x11E575C", Offset = "0x11E575C", VA = "0x11E575C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x11E5820", Offset = "0x11E5820", VA = "0x11E5820", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[Header("Human Infos")]
	public float attackDistance;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float distToStartSmoothLook;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float smoothLookStrength;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public ADSoundEffect stepSound;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[HideInInspector]
	public bool canDealDamage;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float _playerDistance;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private AI _ai;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[Header("Armor Setup")]
	public ArmorInfo[] armorInfos;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[Header("Sweeping Mechanics")]
	public GameObject[] partsThatEnableSweep;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float minHitStrengthForSweep;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private bool _hasFallenDownParameter;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private HitReaction _hitReaction;

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x11E497C", Offset = "0x11E497C", VA = "0x11E497C", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x11E4B6C", Offset = "0x11E4B6C", VA = "0x11E4B6C")]
	public void PlayStepSound()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x11E4AF8", Offset = "0x11E4AF8", VA = "0x11E4AF8")]
	[IteratorStateMachine(typeof(<CheckForAttack>d__15))]
	private IEnumerator CheckForAttack()
	{
		return null;
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x11E4BD4", Offset = "0x11E4BD4", VA = "0x11E4BD4", Slot = "14")]
	public override void OnDeath(GameObject source)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x11E4CAC", Offset = "0x11E4CAC", VA = "0x11E4CAC", Slot = "13")]
	public override void OnDeath(GameObject source, float timeTillDestroy)
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0x11E4D9C", Offset = "0x11E4D9C", VA = "0x11E4D9C")]
	public void CanDealDamage(int b)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x11E4E0C", Offset = "0x11E4E0C", VA = "0x11E4E0C", Slot = "12")]
	public override void OnHitEvent(GameObject source, int dmg, ATTACKTYPE type)
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x11E4E14", Offset = "0x11E4E14", VA = "0x11E4E14", Slot = "11")]
	public override float DoHit(GameObject _source, int _damage, ATTACKTYPE _attackType, Vector3 _hitPos, bool _critical = false)
	{
		return default(float);
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x11E4FB4", Offset = "0x11E4FB4", VA = "0x11E4FB4")]
	public void OnStandUp()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x11E500C", Offset = "0x11E500C", VA = "0x11E500C", Slot = "17")]
	public override void HandleHitAnimation(HitEventInfos _infos)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x11E5088", Offset = "0x11E5088", VA = "0x11E5088", Slot = "19")]
	public virtual void CheckForSweep(GameObject _hitPart, Vector3 _swordVelocity, float _dmg, Vector3 _hitPos)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x11E54F8", Offset = "0x11E54F8", VA = "0x11E54F8", Slot = "16")]
	public override void Update()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x11E5714", Offset = "0x11E5714", VA = "0x11E5714")]
	public HumanBase()
	{
	}
}
[Token(Token = "0x200011F")]
public class InterruptAttack : MonoBehaviour
{
	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider colliderToCheck;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animo;

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x11E5960", Offset = "0x11E5960", VA = "0x11E5960")]
	private void Start()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x11E59B8", Offset = "0x11E59B8", VA = "0x11E59B8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x11E5B48", Offset = "0x11E5B48", VA = "0x11E5B48")]
	public InterruptAttack()
	{
	}
}
[Token(Token = "0x2000120")]
public class LivingBaseParticles : MonoBehaviour
{
	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Death Particles / Objects")]
	public GameObject deathParticles;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material deathParticlesOverrideMat;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 deathParticlesOffset;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float destroyAfter;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Hit Particles / Objects")]
	public GameObject hitParticles;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material hitParticlesOverrideMat;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LivingBase _lb;

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x11E5B50", Offset = "0x11E5B50", VA = "0x11E5B50")]
	private void Start()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x11E5CEC", Offset = "0x11E5CEC", VA = "0x11E5CEC")]
	private void _lb_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x11E5D9C", Offset = "0x11E5D9C", VA = "0x11E5D9C")]
	private void _lb_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x11E5FC0", Offset = "0x11E5FC0", VA = "0x11E5FC0")]
	public LivingBaseParticles()
	{
	}
}
[Token(Token = "0x2000121")]
public class LivingBaseProcedures : MonoBehaviour
{
	[Token(Token = "0x2000122")]
	public enum ON_EVENT
	{
		[Token(Token = "0x40005B9")]
		ON_DEATH,
		[Token(Token = "0x40005BA")]
		ON_HIT
	}

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ON_EVENT[] eventsToSubscribeTo;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("RigidBody Settings")]
	public RigidbodyConstraints rigidbodyConstraints;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool turnOffKinematic;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool enableGravity;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Behaviour Settings")]
	public MonoBehaviour[] monoBehavioursToDisable;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("GameObject Settings")]
	public GameObject[] gameObjectsToDisable;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Particle Settings")]
	public bool stopAllParticlesInHierarchy;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[Header("Animator Settings")]
	public bool stopAllAnimatorsInHierarchy;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LivingBase _lb;

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x11E5FD0", Offset = "0x11E5FD0", VA = "0x11E5FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x11E6164", Offset = "0x11E6164", VA = "0x11E6164")]
	private void Evaluate()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x11E63AC", Offset = "0x11E63AC", VA = "0x11E63AC")]
	public void SpawnObject(GameObject obj)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x11E64BC", Offset = "0x11E64BC", VA = "0x11E64BC")]
	private void _lb_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x11E64C0", Offset = "0x11E64C0", VA = "0x11E64C0")]
	private void _lb_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x11E64C4", Offset = "0x11E64C4", VA = "0x11E64C4")]
	public LivingBaseProcedures()
	{
	}
}
[Token(Token = "0x2000123")]
public class MagicShield : MonoBehaviour
{
	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float knockbackDist;

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x11E64CC", Offset = "0x11E64CC", VA = "0x11E64CC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x11E66C8", Offset = "0x11E66C8", VA = "0x11E66C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x11E6880", Offset = "0x11E6880", VA = "0x11E6880")]
	public MagicShield()
	{
	}
}
[Token(Token = "0x2000124")]
public class RagdollCreator : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000125")]
	public class ConnectorInfo
	{
		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject connector;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform connectsTo;

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x11E6B04", Offset = "0x11E6B04", VA = "0x11E6B04")]
		public ConnectorInfo()
		{
		}
	}

	[Token(Token = "0x2000126")]
	[CompilerGenerated]
	private sealed class <CreateRagdoll>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RagdollCreator <>4__this;

		[Token(Token = "0x170000CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000620")]
			[Address(RVA = "0x11E75DC", Offset = "0x11E75DC", VA = "0x11E75DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000622")]
			[Address(RVA = "0x11E7624", Offset = "0x11E7624", VA = "0x11E7624", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x11E6AC4", Offset = "0x11E6AC4", VA = "0x11E6AC4")]
		[DebuggerHidden]
		public <CreateRagdoll>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x11E6B0C", Offset = "0x11E6B0C", VA = "0x11E6B0C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x11E6B10", Offset = "0x11E6B10", VA = "0x11E6B10", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x11E75E4", Offset = "0x11E75E4", VA = "0x11E75E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public Rigidbody rbToRemoveOnCreate;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject baseObj;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float knockbackMultiplier;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool isHumanoid;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int massToInit;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MonoBehaviour[] scriptsToDisable;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Joint[] jointsToBreak;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject[] objectsToDestroy;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Animator animatorToDisable;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Connector Info")]
	public ConnectorInfo[] connectors;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool forceOnEnemyLayer;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LivingBase livingBase;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject _ragdollBaseObject;

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x11E6890", Offset = "0x11E6890", VA = "0x11E6890")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x11E6960", Offset = "0x11E6960", VA = "0x11E6960")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x11E6A30", Offset = "0x11E6A30", VA = "0x11E6A30")]
	private void LivingBase_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x11E6A50", Offset = "0x11E6A50", VA = "0x11E6A50")]
	[IteratorStateMachine(typeof(<CreateRagdoll>d__17))]
	private IEnumerator CreateRagdoll()
	{
		return null;
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x11E6AEC", Offset = "0x11E6AEC", VA = "0x11E6AEC")]
	public RagdollCreator()
	{
	}
}
[Token(Token = "0x2000127")]
[RequireComponent(typeof(LivingBase))]
public class RagdollCreatorHumanoid : MonoBehaviour
{
	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public Animator animatorToDisable;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MonoBehaviour[] behavioursToDisable;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rigidbody[] rigidbodiesToRemove;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider[] collidersToRemove;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool setOnOnlyStaticAndGroundLayer;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float knockbackStrength;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody[] rbsToKnockback;

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x11E762C", Offset = "0x11E762C", VA = "0x11E762C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x11E76E4", Offset = "0x11E76E4", VA = "0x11E76E4")]
	private void RagdollCreatorHumanoid_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x11E76E8", Offset = "0x11E76E8", VA = "0x11E76E8")]
	public void CreateRagdoll()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x11E7B94", Offset = "0x11E7B94", VA = "0x11E7B94")]
	public RagdollCreatorHumanoid()
	{
	}
}
[Token(Token = "0x2000128")]
public class WizardBase : EnemyBase
{
	[Token(Token = "0x2000129")]
	[CompilerGenerated]
	private sealed class <FireBulletAtPlayer>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WizardBase <>4__this;

		[Token(Token = "0x170000CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600062E")]
			[Address(RVA = "0x11E816C", Offset = "0x11E816C", VA = "0x11E816C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000630")]
			[Address(RVA = "0x11E81B4", Offset = "0x11E81B4", VA = "0x11E81B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0x11E7D30", Offset = "0x11E7D30", VA = "0x11E7D30")]
		[DebuggerHidden]
		public <FireBulletAtPlayer>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x11E7D5C", Offset = "0x11E7D5C", VA = "0x11E7D5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0x11E7D60", Offset = "0x11E7D60", VA = "0x11E7D60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0x11E8174", Offset = "0x11E8174", VA = "0x11E8174", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[Header("Wizard Infos")]
	public GameObject bulletToShoot;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float bulletFrequency;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float bulletSpeed;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float attackDistance;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float stopAttackDistance;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool seesPlayer;

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x11E7BAC", Offset = "0x11E7BAC", VA = "0x11E7BAC", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x11E7C48", Offset = "0x11E7C48", VA = "0x11E7C48", Slot = "16")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x11E7BD4", Offset = "0x11E7BD4", VA = "0x11E7BD4")]
	[IteratorStateMachine(typeof(<FireBulletAtPlayer>d__8))]
	private IEnumerator FireBulletAtPlayer()
	{
		return null;
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x11E7D58", Offset = "0x11E7D58", VA = "0x11E7D58")]
	public WizardBase()
	{
	}
}
[Token(Token = "0x200012A")]
public class DiggingAdventurer : MonoBehaviour
{
	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator _animo;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _initialForward;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _interactionFinished;

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x11E81BC", Offset = "0x11E81BC", VA = "0x11E81BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x11E823C", Offset = "0x11E823C", VA = "0x11E823C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x11E86E4", Offset = "0x11E86E4", VA = "0x11E86E4")]
	public void FinishInteraction()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x11E8590", Offset = "0x11E8590", VA = "0x11E8590")]
	private Quaternion SmoothLookY(Vector3 newDirection, float strength = 4f)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x11E86F0", Offset = "0x11E86F0", VA = "0x11E86F0")]
	public DiggingAdventurer()
	{
	}
}
[Token(Token = "0x200012B")]
public class EnemyBaseReference : MonoBehaviour
{
	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnemyBase enemy;

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x11E86F8", Offset = "0x11E86F8", VA = "0x11E86F8")]
	public EnemyBaseReference()
	{
	}
}
[Token(Token = "0x200012C")]
public class HandattachHelper : MonoBehaviour
{
	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 handRotation;

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x11E8700", Offset = "0x11E8700", VA = "0x11E8700")]
	public void Update()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x11E883C", Offset = "0x11E883C", VA = "0x11E883C")]
	public HandattachHelper()
	{
	}
}
[Token(Token = "0x200012D")]
public class HitReactionReference : MonoBehaviour
{
	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HitReaction hitReaction;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float hitForce;

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x11E8844", Offset = "0x11E8844", VA = "0x11E8844")]
	public void DoHitReaction(Collider hitCollider, Vector3 forceDir, Vector3 hitPoint)
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x11E8874", Offset = "0x11E8874", VA = "0x11E8874")]
	public HitReactionReference()
	{
	}
}
[Token(Token = "0x200012E")]
public class LookAtPlayer : MonoBehaviour
{
	[Token(Token = "0x200012F")]
	[CompilerGenerated]
	private sealed class <LookTest>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LookAtPlayer <>4__this;

		[Token(Token = "0x170000D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000645")]
			[Address(RVA = "0x11E911C", Offset = "0x11E911C", VA = "0x11E911C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000647")]
			[Address(RVA = "0x11E9164", Offset = "0x11E9164", VA = "0x11E9164", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x11E8B4C", Offset = "0x11E8B4C", VA = "0x11E8B4C")]
		[DebuggerHidden]
		public <LookTest>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x11E8CA0", Offset = "0x11E8CA0", VA = "0x11E8CA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x11E8CA4", Offset = "0x11E8CA4", VA = "0x11E8CA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x11E9124", Offset = "0x11E9124", VA = "0x11E9124", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distanceToBeginLooking;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool turnBodyWhenLookingToFar;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool clampRotation;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotationSpeed;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform customTarget;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LivingBase livingToWatch;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion _initialRotation;

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x11E8884", Offset = "0x11E8884", VA = "0x11E8884")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x11E89F4", Offset = "0x11E89F4", VA = "0x11E89F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x11E8AC4", Offset = "0x11E8AC4", VA = "0x11E8AC4")]
	public void StopLooking()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x11E8AF4", Offset = "0x11E8AF4", VA = "0x11E8AF4")]
	private void LivingToWatch_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x11E8980", Offset = "0x11E8980", VA = "0x11E8980")]
	[IteratorStateMachine(typeof(<LookTest>d__11))]
	private IEnumerator LookTest()
	{
		return null;
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x11E8B74", Offset = "0x11E8B74", VA = "0x11E8B74")]
	public Quaternion SmoothLook(Vector3 newDirection)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x11E8C88", Offset = "0x11E8C88", VA = "0x11E8C88")]
	public LookAtPlayer()
	{
	}
}
[Token(Token = "0x2000130")]
public class Shopkeeper : MonoBehaviour
{
	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject bossToSpawn;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bossSpawnParticlesCharge;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LivingBase _lb;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _lastTimeAlert;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private DoorPropRoomActivator[] _doorsNearby;

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x11E916C", Offset = "0x11E916C", VA = "0x11E916C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x11E92C8", Offset = "0x11E92C8", VA = "0x11E92C8")]
	private void PlayerLiving_RoomEntered(RoomCreator.RoomFile _r)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x11E9520", Offset = "0x11E9520", VA = "0x11E9520")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x11E95E0", Offset = "0x11E95E0", VA = "0x11E95E0")]
	private void DestroyedObjectInShop(LivingBase l)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x11E98E0", Offset = "0x11E98E0", VA = "0x11E98E0")]
	private void Shopkeeper_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x11E9E3C", Offset = "0x11E9E3C", VA = "0x11E9E3C")]
	public Shopkeeper()
	{
	}
}
[Token(Token = "0x2000133")]
public class ShopkeeperBlackmarket : MonoBehaviour
{
	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] buyareas;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem[] witherParticles;

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x11EBD08", Offset = "0x11EBD08", VA = "0x11EBD08")]
	private void Start()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x11EBF90", Offset = "0x11EBF90", VA = "0x11EBF90")]
	private void Shopkeeper_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x11EC084", Offset = "0x11EC084", VA = "0x11EC084")]
	public ShopkeeperBlackmarket()
	{
	}
}
[Token(Token = "0x2000134")]
public class Coin : GetSuckedInByPlayer
{
	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float timeOnLastPickup;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("Configuration")]
	public int coinAmount;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int keyAmount;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ADSoundEffect pickupSoundCoin;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ADSoundEffect pickupSoundKey;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float timeBetweenPickupSounds;

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x11EC08C", Offset = "0x11EC08C", VA = "0x11EC08C", Slot = "5")]
	public override void OnSuckIn()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x11EC290", Offset = "0x11EC290", VA = "0x11EC290")]
	private void HandleObjectCollect(string type, int amount, ADSoundEffect soundEffect, Action<int> amountCallback)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x11EC890", Offset = "0x11EC890", VA = "0x11EC890")]
	public Coin()
	{
	}
}
[Token(Token = "0x2000136")]
public class CoinSpawner : MonoBehaviour
{
	[Token(Token = "0x2000137")]
	[CompilerGenerated]
	private sealed class <Spawn>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CoinSpawner <>4__this;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <a>5__2;

		[Token(Token = "0x170000D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600066F")]
			[Address(RVA = "0x11ED25C", Offset = "0x11ED25C", VA = "0x11ED25C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000671")]
			[Address(RVA = "0x11ED2A4", Offset = "0x11ED2A4", VA = "0x11ED2A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x11ECFA8", Offset = "0x11ECFA8", VA = "0x11ECFA8")]
		[DebuggerHidden]
		public <Spawn>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x11ECFE0", Offset = "0x11ECFE0", VA = "0x11ECFE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0x11ECFE4", Offset = "0x11ECFE4", VA = "0x11ECFE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x11ED264", Offset = "0x11ED264", VA = "0x11ED264", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject coinPrefab;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int amount;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float spitOutForce;

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x11ECEF4", Offset = "0x11ECEF4", VA = "0x11ECEF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x11ECF88", Offset = "0x11ECF88", VA = "0x11ECF88")]
	[ContextMenu("SPAWN")]
	public void SpawnCoins()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x11ECF14", Offset = "0x11ECF14", VA = "0x11ECF14")]
	[IteratorStateMachine(typeof(<Spawn>d__5))]
	private IEnumerator Spawn()
	{
		return null;
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x11ECFD0", Offset = "0x11ECFD0", VA = "0x11ECFD0")]
	public CoinSpawner()
	{
	}
}
[Token(Token = "0x2000138")]
public class CounterLock : Lock
{
	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[Header("Lock Specific")]
	public int charges;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private TextMeshPro chargeText;

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x11ED2AC", Offset = "0x11ED2AC", VA = "0x11ED2AC", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x11ED334", Offset = "0x11ED334", VA = "0x11ED334", Slot = "11")]
	public override void OnUseStart()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x11ED85C", Offset = "0x11ED85C", VA = "0x11ED85C")]
	public CounterLock()
	{
	}
}
[Token(Token = "0x2000139")]
[RequireComponent(typeof(RotateWhenIdle))]
[RequireComponent(typeof(Rigidbody))]
public abstract class GetSuckedInByPlayer : MonoBehaviour
{
	[Token(Token = "0x200013A")]
	[CompilerGenerated]
	private sealed class <MoveTowardsPlayer>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GetSuckedInByPlayer <>4__this;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <desiredPos>5__2;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <speedMulti>5__3;

		[Token(Token = "0x170000D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600067D")]
			[Address(RVA = "0x11EDCD4", Offset = "0x11EDCD4", VA = "0x11EDCD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600067F")]
			[Address(RVA = "0x11EDD1C", Offset = "0x11EDD1C", VA = "0x11EDD1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x11ED9D4", Offset = "0x11ED9D4", VA = "0x11ED9D4")]
		[DebuggerHidden]
		public <MoveTowardsPlayer>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x11ED9FC", Offset = "0x11ED9FC", VA = "0x11ED9FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x11EDA00", Offset = "0x11EDA00", VA = "0x11EDA00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x11EDCDC", Offset = "0x11EDCDC", VA = "0x11EDCDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RotateWhenIdle rotateWhenIdle;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rigidb;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool coroutineRunning;

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x11ED874", Offset = "0x11ED874", VA = "0x11ED874", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x11ED904", Offset = "0x11ED904", VA = "0x11ED904")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x11ED960", Offset = "0x11ED960", VA = "0x11ED960")]
	[IteratorStateMachine(typeof(<MoveTowardsPlayer>d__5))]
	private IEnumerator MoveTowardsPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000678")]
	public abstract void OnSuckIn();

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x11EC898", Offset = "0x11EC898", VA = "0x11EC898")]
	protected GetSuckedInByPlayer()
	{
	}
}
[Token(Token = "0x200013B")]
public class Lock : ItemBase
{
	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Header("Lock Specific")]
	public GameObject destroyParticles;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool isBloodLock;

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x11EDD24", Offset = "0x11EDD24", VA = "0x11EDD24", Slot = "11")]
	public override void OnUseStart()
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x11EE004", Offset = "0x11EE004", VA = "0x11EE004", Slot = "16")]
	public override void OnGripStart(bool left)
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x11ED86C", Offset = "0x11ED86C", VA = "0x11ED86C")]
	public Lock()
	{
	}
}
[Token(Token = "0x200013C")]
public enum ATTACKTYPE
{
	[Token(Token = "0x400061E")]
	SWORD = 0,
	[Token(Token = "0x400061F")]
	ENVIRONMENT = 3,
	[Token(Token = "0x4000620")]
	POISON = 4,
	[Token(Token = "0x4000621")]
	FIRE = 5,
	[Token(Token = "0x4000622")]
	LIGHTING = 6,
	[Token(Token = "0x4000623")]
	UNDEFINED = 7,
	[Token(Token = "0x4000624")]
	THROWING_KNIFE = 8,
	[Token(Token = "0x4000625")]
	DONT_SCALE_NEWGAME = 9,
	[Token(Token = "0x4000626")]
	BULLET = 10,
	[Token(Token = "0x4000627")]
	EXPLODING_BULLET = 11,
	[Token(Token = "0x4000628")]
	EXPLOSION = 12,
	[Token(Token = "0x4000629")]
	ENEMY_TOUCH = 13,
	[Token(Token = "0x400062A")]
	FLOATING_PARTICLES = 14,
	[Token(Token = "0x400062B")]
	PIT = 15,
	[Token(Token = "0x400062C")]
	SPIKES = 16,
	[Token(Token = "0x400062D")]
	PROJECTILE_TRAP = 17
}
[Token(Token = "0x200013D")]
public class HitEventInfos
{
	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject gameObject;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ATTACKTYPE attacktype;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 contactPos;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 hitVelocity;

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x11EE010", Offset = "0x11EE010", VA = "0x11EE010")]
	public HitEventInfos(GameObject _source, ATTACKTYPE _attackType)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x11EE04C", Offset = "0x11EE04C", VA = "0x11EE04C")]
	public HitEventInfos(GameObject _source, ATTACKTYPE _attackType, Vector3 _contactPos, Vector3 _hitVelocity)
	{
	}
}
[Token(Token = "0x200013E")]
public class LivingBase : MonoBehaviour
{
	[Token(Token = "0x200013F")]
	public delegate void OnHit(HitEventInfos infos, int dmg);

	[Token(Token = "0x2000140")]
	public delegate void OnDie(LivingBase l);

	[Token(Token = "0x2000141")]
	public delegate void OnHealthChanged(LivingBase l, string type);

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Living Infos")]
	public MeshRenderer[] visibleBonesForChinaRegulation;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string livingId;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hitCooldown;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showHitSplashs;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 hitSplashOffset;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool destroyOnDeath;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Health")]
	public int maxHealth;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _health;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _etherealHealth;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Header("Extras")]
	public bool invincible;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string[] damageOnlyFromTag;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float isGroundedMinCheckDelay;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 objectCenter;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Dismemberment/Ragdoll/Hit Impact")]
	public DismemberObject[] objToDismemberOnDeath;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public PhysicMaterial hitImpactType;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Sound Settings")]
	public float idleSoundInterval;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float idleIntervalRandomize;

	[NonSerialized]
	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Rigidbody rigidb;

	[NonSerialized]
	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float hitCooldownTimerPrimary;

	[NonSerialized]
	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float hitCooldownTimerSecondary;

	[NonSerialized]
	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float hitCooldownTimerTertiary;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected MeshRenderer meshRend;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float _idleSoundCounter;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private EffectHandler _effectHandler;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _hasIdleSound;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool _isGrounded;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float _lastGroundedCheck;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool _killed;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool _onDeathExecuted;

	[Token(Token = "0x170000DA")]
	public int health
	{
		[Token(Token = "0x6000685")]
		[Address(RVA = "0x11EE0C4", Offset = "0x11EE0C4", VA = "0x11EE0C4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000686")]
		[Address(RVA = "0x11EE0CC", Offset = "0x11EE0CC", VA = "0x11EE0CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000DB")]
	public int etherealHealth
	{
		[Token(Token = "0x6000687")]
		[Address(RVA = "0x11EE13C", Offset = "0x11EE13C", VA = "0x11EE13C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000688")]
		[Address(RVA = "0x11EE144", Offset = "0x11EE144", VA = "0x11EE144")]
		set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public int RealHealth
	{
		[Token(Token = "0x6000689")]
		[Address(RVA = "0x11EBCAC", Offset = "0x11EBCAC", VA = "0x11EBCAC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x14000014")]
	public event OnHit HitEvent
	{
		[Token(Token = "0x600068A")]
		[Address(RVA = "0x11EE1B8", Offset = "0x11EE1B8", VA = "0x11EE1B8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600068B")]
		[Address(RVA = "0x11EE254", Offset = "0x11EE254", VA = "0x11EE254")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event OnDie DeathEvent
	{
		[Token(Token = "0x600068C")]
		[Address(RVA = "0x11EBEF4", Offset = "0x11EBEF4", VA = "0x11EBEF4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600068D")]
		[Address(RVA = "0x11EE2F0", Offset = "0x11EE2F0", VA = "0x11EE2F0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event OnHealthChanged HealthChangedEvent
	{
		[Token(Token = "0x600068E")]
		[Address(RVA = "0x11EE38C", Offset = "0x11EE38C", VA = "0x11EE38C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600068F")]
		[Address(RVA = "0x11EE428", Offset = "0x11EE428", VA = "0x11EE428")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x11EE4C4", Offset = "0x11EE4C4", VA = "0x11EE4C4", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x11EE694", Offset = "0x11EE694", VA = "0x11EE694", Slot = "5")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x11EE700", Offset = "0x11EE700", VA = "0x11EE700")]
	public bool IsEnemy()
	{
		return default(bool);
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x11EE778", Offset = "0x11EE778", VA = "0x11EE778")]
	public bool IsChampion()
	{
		return default(bool);
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x11EE7D4", Offset = "0x11EE7D4", VA = "0x11EE7D4")]
	public Vector3 GetMeshCenterInWorld()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x11EECC4", Offset = "0x11EECC4", VA = "0x11EECC4", Slot = "6")]
	public virtual Vector3 GetCenterInWorld()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x11EECF0", Offset = "0x11EECF0", VA = "0x11EECF0")]
	public void SmoothLook(Vector3 newDirection, float strength = 3f)
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x11EEE24", Offset = "0x11EEE24", VA = "0x11EEE24")]
	public bool IsGrounded(bool forceRefresh = false, float checkDistance = 0.05f, bool boxMode = false, float boxExtends = 0.5f, QueryTriggerInteraction _triggerInteraction = QueryTriggerInteraction.UseGlobal)
	{
		return default(bool);
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x11EF04C", Offset = "0x11EF04C", VA = "0x11EF04C", Slot = "7")]
	public virtual void ScaleTo(float goalScale, float time = 1f)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x11EF164", Offset = "0x11EF164", VA = "0x11EF164")]
	public void Heal(int amount, bool isEthereal = false)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x11EF1AC", Offset = "0x11EF1AC", VA = "0x11EF1AC")]
	public void InvokeHitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x11EF1C8", Offset = "0x11EF1C8", VA = "0x11EF1C8")]
	public void PlaySound(string s)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x11EF258", Offset = "0x11EF258", VA = "0x11EF258")]
	public void PlaySoundWithLivingID(string s)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x11EF27C", Offset = "0x11EF27C", VA = "0x11EF27C")]
	public bool IsBoss()
	{
		return default(bool);
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x11ED784", Offset = "0x11ED784", VA = "0x11ED784")]
	public float DoHit(GameObject source, int dmg, int playerdmg = 1)
	{
		return default(float);
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x11EF308", Offset = "0x11EF308", VA = "0x11EF308", Slot = "8")]
	public virtual bool IsHitValid(GameObject _source, int _damage, ATTACKTYPE _attacktype, Vector3 _hitPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x11EF310", Offset = "0x11EF310", VA = "0x11EF310", Slot = "9")]
	public virtual float DoHitWithPlayerCriticalChance(GameObject _source, int _damage, ATTACKTYPE _attackType, Vector3 _hitPos, float _criticalDamageMultiplier = 2f)
	{
		return default(float);
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x11EF480", Offset = "0x11EF480", VA = "0x11EF480", Slot = "10")]
	public virtual float DoHitWithCriticalChance(GameObject _source, int _damage, ATTACKTYPE _attackType, Vector3 _hitPos, float _criticalChance, float _criticalDamageMultiplier = 2f)
	{
		return default(float);
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x11EF5D8", Offset = "0x11EF5D8", VA = "0x11EF5D8", Slot = "11")]
	public virtual float DoHit(GameObject _source, int _damage, ATTACKTYPE _attackType, Vector3 _hitPos, bool _critical = false)
	{
		return default(float);
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x11EFB44", Offset = "0x11EFB44", VA = "0x11EFB44")]
	public void RemoveHealth(int _val)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x11EFBA0", Offset = "0x11EFBA0", VA = "0x11EFBA0", Slot = "12")]
	public virtual void OnHitEvent(GameObject source, int dmg, ATTACKTYPE _attackType)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x11EFBA4", Offset = "0x11EFBA4", VA = "0x11EFBA4", Slot = "13")]
	public virtual void OnDeath(GameObject source, float timeTillDestroy)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x11F02C8", Offset = "0x11F02C8", VA = "0x11F02C8", Slot = "14")]
	public virtual void OnDeath(GameObject source)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x11F02DC", Offset = "0x11F02DC", VA = "0x11F02DC")]
	public void ApplyEffect(ATTACKTYPE type, float dmg, float time)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x11F0468", Offset = "0x11F0468", VA = "0x11F0468", Slot = "15")]
	public virtual void DoEffectHit(float dmg, ATTACKTYPE type)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x11F0514", Offset = "0x11F0514", VA = "0x11F0514")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x11F0538", Offset = "0x11F0538", VA = "0x11F0538", Slot = "16")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x11F07CC", Offset = "0x11F07CC", VA = "0x11F07CC")]
	[ContextMenu("DEBUG KILL")]
	private void Debug_Kill()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x11F0850", Offset = "0x11F0850", VA = "0x11F0850")]
	[ContextMenu("DEBUG HIT")]
	private void Debug_Hit()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x11F08E0", Offset = "0x11F08E0", VA = "0x11F08E0")]
	[ContextMenu("DEBUG POISON")]
	private void Debug_Poison()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x11F0908", Offset = "0x11F0908", VA = "0x11F0908")]
	[ContextMenu("DEBUG SET ON FIRE")]
	private void Debug_SetOnFire()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x11F0930", Offset = "0x11F0930", VA = "0x11F0930")]
	public Vector3 GetLightningEffectPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x11F096C", Offset = "0x11F096C", VA = "0x11F096C")]
	public void SetInvincibleFor(float time)
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x11F0988", Offset = "0x11F0988", VA = "0x11F0988")]
	public LivingBase()
	{
	}
}
[Token(Token = "0x2000145")]
public class LivingBaseExtender : LivingBase
{
	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public LivingBase extendsLiving;

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x11F1074", Offset = "0x11F1074", VA = "0x11F1074", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x11F108C", Offset = "0x11F108C", VA = "0x11F108C", Slot = "11")]
	public override float DoHit(GameObject _source, int _damage, ATTACKTYPE _attackType, Vector3 _hitPos, bool _critical = false)
	{
		return default(float);
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x11F10B0", Offset = "0x11F10B0", VA = "0x11F10B0", Slot = "14")]
	public override void OnDeath(GameObject source)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x11F10D4", Offset = "0x11F10D4", VA = "0x11F10D4", Slot = "13")]
	public override void OnDeath(GameObject source, float timeTillDestroy)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x11F10F8", Offset = "0x11F10F8", VA = "0x11F10F8", Slot = "15")]
	public override void DoEffectHit(float dmg, ATTACKTYPE type)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x11F111C", Offset = "0x11F111C", VA = "0x11F111C", Slot = "7")]
	public override void ScaleTo(float goalScale, float time = 1f)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x11F113C", Offset = "0x11F113C", VA = "0x11F113C", Slot = "8")]
	public override bool IsHitValid(GameObject _source, int _damage, ATTACKTYPE _attacktype, Vector3 _hitPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x11F115C", Offset = "0x11F115C", VA = "0x11F115C", Slot = "12")]
	public override void OnHitEvent(GameObject source, int dmg, ATTACKTYPE _attackType)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x11F117C", Offset = "0x11F117C", VA = "0x11F117C")]
	public LivingBaseExtender()
	{
	}
}
[Token(Token = "0x2000146")]
public class PlayerLiving : LivingBase
{
	[Token(Token = "0x2000147")]
	public enum PLAYER_STATE
	{
		[Token(Token = "0x40006A3")]
		WALKING,
		[Token(Token = "0x40006A4")]
		CLIMBING
	}

	[Token(Token = "0x2000148")]
	public class PlayerStat
	{
		[Token(Token = "0x2000149")]
		public delegate void OnValueChanged(PlayerStat _stat);

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string statId;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string statNameIngame;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxValue;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minValue;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Dictionary<string, List<float>> statAddends;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Dictionary<string, List<float>> statMultipliers;

		[Token(Token = "0x14000018")]
		public event OnValueChanged ValueChanged
		{
			[Token(Token = "0x600070C")]
			[Address(RVA = "0x11F2ECC", Offset = "0x11F2ECC", VA = "0x11F2ECC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600070D")]
			[Address(RVA = "0x11F7C1C", Offset = "0x11F7C1C", VA = "0x11F7C1C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x11F2B58", Offset = "0x11F2B58", VA = "0x11F2B58")]
		public PlayerStat(string id, float defaultValue)
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x11F2C68", Offset = "0x11F2C68", VA = "0x11F2C68")]
		public PlayerStat(string id, float defaultValue, float min, float max)
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0x11F3F08", Offset = "0x11F3F08", VA = "0x11F3F08")]
		public void SavePlayerStatForSavedRun()
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x11F40A0", Offset = "0x11F40A0", VA = "0x11F40A0")]
		public void LoadPlayerStatsFromSavedRun()
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x11F7CB8", Offset = "0x11F7CB8", VA = "0x11F7CB8")]
		private void CallValueChangedEvents()
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x11F7F00", Offset = "0x11F7F00", VA = "0x11F7F00", Slot = "4")]
		public virtual void ClearAllCustomAddendsAndMultipliers()
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x11F7F24", Offset = "0x11F7F24", VA = "0x11F7F24")]
		protected void ClearStatDictionary(Dictionary<string, List<float>> statDictionary)
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x11F8284", Offset = "0x11F8284", VA = "0x11F8284", Slot = "5")]
		public virtual void RegisterAddend(string key, float addend)
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0x11F8460", Offset = "0x11F8460", VA = "0x11F8460", Slot = "6")]
		public virtual void RemoveAddendAt(string key, int index)
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x11F855C", Offset = "0x11F855C", VA = "0x11F855C", Slot = "7")]
		public virtual void RemoveMultiplierAt(string key, int index)
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x11F8658", Offset = "0x11F8658", VA = "0x11F8658", Slot = "8")]
		public virtual void RemoveAddend(string key, float addend)
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x11F8760", Offset = "0x11F8760", VA = "0x11F8760", Slot = "9")]
		public virtual void RemoveMultiplier(string key, float multiplier)
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x11F8868", Offset = "0x11F8868", VA = "0x11F8868", Slot = "10")]
		public virtual void ChangeAddend(string key, float addend)
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x11F89FC", Offset = "0x11F89FC", VA = "0x11F89FC", Slot = "11")]
		public virtual void ChangeMultiplier(string key, float multiplier)
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x11F8B90", Offset = "0x11F8B90", VA = "0x11F8B90", Slot = "12")]
		public virtual void ClearAddend(string key)
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x11F8C1C", Offset = "0x11F8C1C", VA = "0x11F8C1C", Slot = "13")]
		public virtual void ClearMultiplier(string key)
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x11F8CA8", Offset = "0x11F8CA8", VA = "0x11F8CA8", Slot = "14")]
		public virtual void RegisterMultiplier(string key, float multiplier)
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x11F8E84", Offset = "0x11F8E84", VA = "0x11F8E84", Slot = "15")]
		public virtual void RegisterAddMult(string key, float value, float multiplier)
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x11F8ED0", Offset = "0x11F8ED0", VA = "0x11F8ED0", Slot = "16")]
		public virtual float GetValueFloat()
		{
			return default(float);
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x11F9224", Offset = "0x11F9224", VA = "0x11F9224", Slot = "17")]
		public virtual int GetValueInt()
		{
			return default(int);
		}
	}

	[Token(Token = "0x200014B")]
	public class PlayerStatEvasion : PlayerStat
	{
		[Token(Token = "0x6000729")]
		[Address(RVA = "0x11F2D8C", Offset = "0x11F2D8C", VA = "0x11F2D8C")]
		public PlayerStatEvasion(string id, float defaultValue)
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0x11F93D0", Offset = "0x11F93D0", VA = "0x11F93D0")]
		private float IncreaseEvasionByRule(float currentEvasion, float increase)
		{
			return default(float);
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x11F94A4", Offset = "0x11F94A4", VA = "0x11F94A4", Slot = "16")]
		public override float GetValueFloat()
		{
			return default(float);
		}
	}

	[Token(Token = "0x200014C")]
	public delegate void OnRoomEntered(RoomCreator.RoomFile _r);

	[Token(Token = "0x200014E")]
	[CompilerGenerated]
	private sealed class <BulletTimeRoutine>d__114 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _scale;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float _time;

		[Token(Token = "0x170000E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000736")]
			[Address(RVA = "0x11F9958", Offset = "0x11F9958", VA = "0x11F9958", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000738")]
			[Address(RVA = "0x11F99A0", Offset = "0x11F99A0", VA = "0x11F99A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x11F55D0", Offset = "0x11F55D0", VA = "0x11F55D0")]
		[DebuggerHidden]
		public <BulletTimeRoutine>d__114(int <>1__state)
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x11F9864", Offset = "0x11F9864", VA = "0x11F9864", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x11F9868", Offset = "0x11F9868", VA = "0x11F9868", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x11F9960", Offset = "0x11F9960", VA = "0x11F9960", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000151")]
	[CompilerGenerated]
	private sealed class <OnDeathEnum>d__126 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerLiving <>4__this;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000744")]
			[Address(RVA = "0x11FA960", Offset = "0x11FA960", VA = "0x11FA960", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000746")]
			[Address(RVA = "0x11FA9A8", Offset = "0x11FA9A8", VA = "0x11FA9A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x11F6B7C", Offset = "0x11F6B7C", VA = "0x11F6B7C")]
		[DebuggerHidden]
		public <OnDeathEnum>d__126(int <>1__state)
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x11F9C04", Offset = "0x11F9C04", VA = "0x11F9C04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x11F9C08", Offset = "0x11F9C08", VA = "0x11F9C08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x11FA968", Offset = "0x11FA968", VA = "0x11FA968", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("Player Config")]
	public PlayerHitEffect playerHitEffect;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public CURRENT_FLOOR startFloor;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject gameOverUI;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[Header("Player Infos")]
	public ClimbingWallHelper climbWallHelper;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public ClimbingFadeHelper fadeHelper;

	[NonSerialized]
	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public PLAYER_STATE playerState;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int _currentCash;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private int _currentKeys;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public int currentKills;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public PlayerStat PrimaryDamage;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public PlayerStat PrimaryCritChance;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public PlayerStat SecondaryDamage;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public PlayerStat SecondaryCritChance;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public PlayerStat Luck;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public PlayerStatEvasion EvasionChance;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public PlayerStat ShopDiscount;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public PlayerStat MoveSpeed;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float knockbackDistance;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int freeStoreItems;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public int newGamePlusLevel;

	[NonSerialized]
	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float hardModeChanceToDuplicateEnemy;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float _probabilityForChampionEnemy;

	[NonSerialized]
	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public bool inMenu;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float globalDifficulty;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public float runPlayTime;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool _noclip;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	[HideInInspector]
	public bool isFlying;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public CharacterController characterController;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public CapsuleCollider livingTrigger;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public CapsuleCollider livingParticleCollide;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[Header("Sound Settings")]
	public ADSoundEffect soundHeartbeat;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public ADSoundEffect stoneStep;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public ADSoundEffect woodStep;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public ADSoundEffect grassStep;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public PhysicMaterial stepStoneMaterial;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public PhysicMaterial stepWoodMaterial;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public PhysicMaterial stepGrassMaterial;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public PhysicMaterial stepSnowMaterial;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[Range(0f, 1f)]
	public float stepVolume;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public float stepSoundDistance;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	[Header("Runtime Stats")]
	public List<int> statsNewItemsFoundThisRun;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public List<int> statsAchievementsUnlockedThisRun;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public List<int> statsJournalPagesCollectedThisRun;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public int statsEnemiesKilledThisRun;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public int statsFloorsCompletedThisRun;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public int statsMoneySpentThisRun;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public bool inHardMode;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public float timeOfRunStart;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private Vector3 _lastStepSoundPos;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Vector3 _currentStepSoundPos;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	private bool _hasThrowingKnife;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x225")]
	private bool _currentlyPressingTrigger;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private float _heartbeatCounter;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	private bool _daggerInLeftHand;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private int _enemiesLeftInRoom;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private EnemySpawnPosition[] _trackedSpawnPositions;

	[NonSerialized]
	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public RoomCreator.RoomFile roomWherePlayerIs;

	[NonSerialized]
	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public bool challengeStarted;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x249")]
	private bool _inShop;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24A")]
	private bool _inBoss;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private string[] _airEnemiesOvergrownToDuplicate;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private string[] _groundEnemiesOvergrownToDuplicate;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private string[] _groundEnemiesInfestedToDuplicate;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private string[] _airEnemiesInfestedToDuplicate;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private string[] _groundEnemiesLibraryToDuplicate;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private string[] _airEnemiesLibraryToDuplicate;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private string[] _groundEnemiesMinesToDuplicate;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	private string[] _airEnemiesMinesToDuplicate;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	private Vector3[] _possibleSpawnVectors;

	[Token(Token = "0x170000DF")]
	public int CurrentCash
	{
		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x11F11A0", Offset = "0x11F11A0", VA = "0x11F11A0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x11EC9C0", Offset = "0x11EC9C0", VA = "0x11EC9C0")]
		set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public int CurrentKeys
	{
		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x11F11A8", Offset = "0x11F11A8", VA = "0x11F11A8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x11ECC94", Offset = "0x11ECC94", VA = "0x11ECC94")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public int BeastBlood
	{
		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x11F15D0", Offset = "0x11F15D0", VA = "0x11F15D0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x11F1668", Offset = "0x11F1668", VA = "0x11F1668")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public int Insight
	{
		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x11F1704", Offset = "0x11F1704", VA = "0x11F1704")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x11F179C", Offset = "0x11F179C", VA = "0x11F179C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public int TotalDeaths
	{
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x11F1838", Offset = "0x11F1838", VA = "0x11F1838")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E4")]
	public int TotalRuns
	{
		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x11F18D0", Offset = "0x11F18D0", VA = "0x11F18D0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E5")]
	public int TotalWins
	{
		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x11F18EC", Offset = "0x11F18EC", VA = "0x11F18EC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000E6")]
	public float ProbabilityForChampionEnemy
	{
		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x11F22C4", Offset = "0x11F22C4", VA = "0x11F22C4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x11F22CC", Offset = "0x11F22CC", VA = "0x11F22CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public bool Noclip
	{
		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x11F2544", Offset = "0x11F2544", VA = "0x11F2544")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x11F254C", Offset = "0x11F254C", VA = "0x11F254C")]
		set
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event OnRoomEntered RoomEntered
	{
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x11F11B0", Offset = "0x11F11B0", VA = "0x11F11B0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x11F1250", Offset = "0x11F1250", VA = "0x11F1250")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x11F12F0", Offset = "0x11F12F0", VA = "0x11F12F0")]
	public int CalculateInsightGainedForRun()
	{
		return default(int);
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x11F1984", Offset = "0x11F1984", VA = "0x11F1984")]
	public int GetMeleeDamageWithPickupModifiers()
	{
		return default(int);
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x11F1ABC", Offset = "0x11F1ABC", VA = "0x11F1ABC")]
	public int GetRangedDamageWithPickupModifiers()
	{
		return default(int);
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x11F198C", Offset = "0x11F198C", VA = "0x11F198C")]
	private int GetDamageWithPickupModifiersFor(WeaponBase.WEAPON_TYPE type)
	{
		return default(int);
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x11F1AC4", Offset = "0x11F1AC4", VA = "0x11F1AC4")]
	public int GetPrimaryDamageWithPickupModifiers()
	{
		return default(int);
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x11F1EC4", Offset = "0x11F1EC4", VA = "0x11F1EC4")]
	public int GetSecondaryDamageWithPickupModifiers()
	{
		return default(int);
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x11F2664", Offset = "0x11F2664", VA = "0x11F2664", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x11F2F68", Offset = "0x11F2F68", VA = "0x11F2F68")]
	private void MoveSpeed_ValueChanged(PlayerStat _stat)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x11F2FEC", Offset = "0x11F2FEC", VA = "0x11F2FEC")]
	private void PlayerLiving_HealthChangedEvent(LivingBase l, string type)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x11F3210", Offset = "0x11F3210", VA = "0x11F3210")]
	private void InitializeControllerBindings()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x11F33EC", Offset = "0x11F33EC", VA = "0x11F33EC")]
	public void OnPickupActivate(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x11F35A4", Offset = "0x11F35A4", VA = "0x11F35A4")]
	public void CheckEnterRoom()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x11F3E98", Offset = "0x11F3E98", VA = "0x11F3E98")]
	public void SavePlayerStatsForRun()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x11F4030", Offset = "0x11F4030", VA = "0x11F4030")]
	public void LoadPlayerStatsFromSavedRun()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x11F41E0", Offset = "0x11F41E0", VA = "0x11F41E0")]
	private void RoomEnemiesDeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x11F4274", Offset = "0x11F4274", VA = "0x11F4274")]
	public void TeleportToNearestSolidTile(bool onlyVisited = false)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x11F48B0", Offset = "0x11F48B0", VA = "0x11F48B0", Slot = "6")]
	public override Vector3 GetCenterInWorld()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x11F25E0", Offset = "0x11F25E0", VA = "0x11F25E0")]
	public void SetFlying(bool _flying)
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x11F49EC", Offset = "0x11F49EC", VA = "0x11F49EC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x11F4DA8", Offset = "0x11F4DA8", VA = "0x11F4DA8")]
	public void DamagePlayer(int damage, bool scaleWithNGPlus = true)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x11F4E54", Offset = "0x11F4E54", VA = "0x11F4E54", Slot = "11")]
	public override float DoHit(GameObject _source, int _damage, ATTACKTYPE _attackType, Vector3 _hitPos, bool _critical = false)
	{
		return default(float);
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x11F53DC", Offset = "0x11F53DC", VA = "0x11F53DC")]
	public void PlayBulletTimeSoundEffect()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x11F5474", Offset = "0x11F5474", VA = "0x11F5474")]
	public void ActivateBulletTime(float _time, float _scale = 0.5f)
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x11F555C", Offset = "0x11F555C", VA = "0x11F555C")]
	[IteratorStateMachine(typeof(<BulletTimeRoutine>d__114))]
	private IEnumerator BulletTimeRoutine(float _time, float _scale)
	{
		return null;
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x11F55F8", Offset = "0x11F55F8", VA = "0x11F55F8", Slot = "16")]
	public override void Update()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x11F5E78", Offset = "0x11F5E78", VA = "0x11F5E78", Slot = "8")]
	public override bool IsHitValid(GameObject _source, int _damage, ATTACKTYPE _attacktype, Vector3 _hitPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x11F5EB0", Offset = "0x11F5EB0", VA = "0x11F5EB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x11F5F2C", Offset = "0x11F5F2C", VA = "0x11F5F2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x11F14E8", Offset = "0x11F14E8", VA = "0x11F14E8")]
	public float GetDifficultyMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x11F5FA8", Offset = "0x11F5FA8", VA = "0x11F5FA8")]
	public void ResetPlayerStats()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x11F63E0", Offset = "0x11F63E0", VA = "0x11F63E0")]
	public void RegisterAdditionalEnemySpawns()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x11F6498", Offset = "0x11F6498", VA = "0x11F6498", Slot = "14")]
	public override void OnDeath(GameObject source)
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x11F6730", Offset = "0x11F6730", VA = "0x11F6730", Slot = "7")]
	public override void ScaleTo(float goalScale, float time = 1f)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x11F6ADC", Offset = "0x11F6ADC", VA = "0x11F6ADC")]
	public float GetPlayerScale()
	{
		return default(float);
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x11F6B54", Offset = "0x11F6B54", VA = "0x11F6B54", Slot = "15")]
	public override void DoEffectHit(float dmg, ATTACKTYPE type)
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x11F66BC", Offset = "0x11F66BC", VA = "0x11F66BC")]
	[IteratorStateMachine(typeof(<OnDeathEnum>d__126))]
	private IEnumerator OnDeathEnum()
	{
		return null;
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x11F6BA4", Offset = "0x11F6BA4", VA = "0x11F6BA4")]
	private void PlayerLiving_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x11F6C3C", Offset = "0x11F6C3C", VA = "0x11F6C3C")]
	private void ObjectSpawned(GameObject g)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x11F6DA8", Offset = "0x11F6DA8", VA = "0x11F6DA8")]
	private void TrySpawnAdditionalEnemy(EnemyBase e, string[] possibleEnemies)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x11F71C0", Offset = "0x11F71C0", VA = "0x11F71C0")]
	public PlayerLiving()
	{
	}
}
[Token(Token = "0x2000152")]
public class BossDoor : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] bossRoom;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ADSoundEffect soundOpen;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator _animo;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _closed;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool _playedTension;

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x11FA9B0", Offset = "0x11FA9B0", VA = "0x11FA9B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x11FAA10", Offset = "0x11FAA10", VA = "0x11FAA10")]
	private void FightStarted()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x11FAA84", Offset = "0x11FAA84", VA = "0x11FAA84")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x11FACE8", Offset = "0x11FACE8", VA = "0x11FACE8")]
	public void PlaySound()
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x11FADF8", Offset = "0x11FADF8", VA = "0x11FADF8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x11FAE7C", Offset = "0x11FAE7C", VA = "0x11FAE7C")]
	public BossDoor()
	{
	}
}
[Token(Token = "0x2000153")]
public class BreakWall : MonoBehaviour
{
	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject roomToActivate;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LivingBase lv;

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x11FAE84", Offset = "0x11FAE84", VA = "0x11FAE84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x11FAF4C", Offset = "0x11FAF4C", VA = "0x11FAF4C")]
	private void FindRoomToActivate()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x11FB188", Offset = "0x11FB188", VA = "0x11FB188")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x11FB20C", Offset = "0x11FB20C", VA = "0x11FB20C")]
	private void Lv_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x11FB22C", Offset = "0x11FB22C", VA = "0x11FB22C")]
	public BreakWall()
	{
	}
}
[Token(Token = "0x2000154")]
public class BrokenBridge : MonoBehaviour
{
	[Token(Token = "0x2000156")]
	[CompilerGenerated]
	private sealed class <CheckCollapse>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrokenBridge <>4__this;

		[Token(Token = "0x170000EE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600075D")]
			[Address(RVA = "0x11FB86C", Offset = "0x11FB86C", VA = "0x11FB86C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600075F")]
			[Address(RVA = "0x11FB8B4", Offset = "0x11FB8B4", VA = "0x11FB8B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x11FB41C", Offset = "0x11FB41C", VA = "0x11FB41C")]
		[DebuggerHidden]
		public <CheckCollapse>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x11FB618", Offset = "0x11FB618", VA = "0x11FB618", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0x11FB61C", Offset = "0x11FB61C", VA = "0x11FB61C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0x11FB874", Offset = "0x11FB874", VA = "0x11FB874", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody[] rbs;

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x11FB234", Offset = "0x11FB234", VA = "0x11FB234")]
	private void Start()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x11FB3A8", Offset = "0x11FB3A8", VA = "0x11FB3A8")]
	[IteratorStateMachine(typeof(<CheckCollapse>d__2))]
	public IEnumerator CheckCollapse()
	{
		return null;
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x11FB444", Offset = "0x11FB444", VA = "0x11FB444")]
	[ContextMenu("Collapse")]
	public void Collapse()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x11FB568", Offset = "0x11FB568", VA = "0x11FB568")]
	public BrokenBridge()
	{
	}
}
[Token(Token = "0x2000158")]
public class ButtonActivator : MonoBehaviour
{
	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public bool pressOnce;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string globalID;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool pressedOnce;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int currentlyPressed;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<ButtonReceiver> receivers;

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x11FBADC", Offset = "0x11FBADC", VA = "0x11FBADC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x11FBB58", Offset = "0x11FBB58", VA = "0x11FBB58")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x11FBD7C", Offset = "0x11FBD7C", VA = "0x11FBD7C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x11FBFBC", Offset = "0x11FBFBC", VA = "0x11FBFBC")]
	public ButtonActivator()
	{
	}
}
[Token(Token = "0x2000159")]
public class ButtonReceiver : MonoBehaviour
{
	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string listenToId;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ButtonActivator _correspondingButton;

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x11FBFC4", Offset = "0x11FBFC4", VA = "0x11FBFC4")]
	public void InitReceiver(ButtonActivator[] activators)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x11FC078", Offset = "0x11FC078", VA = "0x11FC078", Slot = "4")]
	public virtual void OnButtonPress()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x11FC07C", Offset = "0x11FC07C", VA = "0x11FC07C", Slot = "5")]
	public virtual void OnButtonRelease()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x11FC080", Offset = "0x11FC080", VA = "0x11FC080")]
	public ButtonReceiver()
	{
	}
}
[Token(Token = "0x200015A")]
public class ChallengeChest : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200015B")]
	public class ChallengeSpawn
	{
		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CURRENT_FLOOR floorToSpawn;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] enemiesToSpawn;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int amount;

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x11FC57C", Offset = "0x11FC57C", VA = "0x11FC57C")]
		public ChallengeSpawn()
		{
		}
	}

	[Token(Token = "0x200015D")]
	[CompilerGenerated]
	private sealed class <SpawnStuff>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ChallengeChest <>4__this;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ChallengeSpawn <_toSpawn>5__2;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Vector3> <_positions>5__3;

		[Token(Token = "0x170000F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600077C")]
			[Address(RVA = "0x11FCA24", Offset = "0x11FCA24", VA = "0x11FCA24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600077E")]
			[Address(RVA = "0x11FCA6C", Offset = "0x11FCA6C", VA = "0x11FCA6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x11FC27C", Offset = "0x11FC27C", VA = "0x11FC27C")]
		[DebuggerHidden]
		public <SpawnStuff>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0x11FC674", Offset = "0x11FC674", VA = "0x11FC674", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x11FC678", Offset = "0x11FC678", VA = "0x11FC678", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x11FCA2C", Offset = "0x11FCA2C", VA = "0x11FCA2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChallengeSpawn[] challengeSpawns;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject enemySpawnObject;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LivingBase _lb;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _enemiesAlive;

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x11FC0AC", Offset = "0x11FC0AC", VA = "0x11FC0AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x11FC16C", Offset = "0x11FC16C", VA = "0x11FC16C")]
	private void _lb_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x11FC208", Offset = "0x11FC208", VA = "0x11FC208")]
	[IteratorStateMachine(typeof(<SpawnStuff>d__7))]
	private IEnumerator SpawnStuff()
	{
		return null;
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x11FC2A4", Offset = "0x11FC2A4", VA = "0x11FC2A4")]
	private void ChallengeChest_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x11FC400", Offset = "0x11FC400", VA = "0x11FC400")]
	public List<Vector3> CreateEnemiesAroundPoint(int num, Vector3 point, float radius)
	{
		return null;
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x11FC574", Offset = "0x11FC574", VA = "0x11FC574")]
	public ChallengeChest()
	{
	}
}
[Token(Token = "0x200015E")]
public class Chandelier : LivingBase
{
	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("Chandlier Config")]
	public Rigidbody topChain;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject onGroundCollisionParticles;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Light chandelierLight;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public ParticleSystem candleParticles;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private bool _hasExploded;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	private bool _isDead;

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x11FCA74", Offset = "0x11FCA74", VA = "0x11FCA74", Slot = "14")]
	public override void OnDeath(GameObject source)
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x11FCAB4", Offset = "0x11FCAB4", VA = "0x11FCAB4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x11FD1B8", Offset = "0x11FD1B8", VA = "0x11FD1B8")]
	public Chandelier()
	{
	}
}
[Token(Token = "0x2000160")]
public class Chest : LivingBase
{
	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("Chest Infos")]
	public Transform spawnParent;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ADSoundEffect openSound;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Lock correspondingLock;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public string dropTable;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[Header("If no Drop table is set")]
	public GameObject itemToSpawn;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ParticleSystem newItemParticles;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Animator _animo;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool _open;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private LivingBase _lockLivingBase;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private RotateWhenIdle _spawnedRotWhenIdle;

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x11FD330", Offset = "0x11FD330", VA = "0x11FD330", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x11FD59C", Offset = "0x11FD59C", VA = "0x11FD59C")]
	private void Chest_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x11FD5C4", Offset = "0x11FD5C4", VA = "0x11FD5C4")]
	[ContextMenu("OPEN")]
	public void OpenChest()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x11FD5EC", Offset = "0x11FD5EC", VA = "0x11FD5EC", Slot = "12")]
	public override void OnHitEvent(GameObject source, int dmg, ATTACKTYPE type)
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x11FDB2C", Offset = "0x11FDB2C", VA = "0x11FDB2C")]
	public Chest()
	{
	}
}
[Token(Token = "0x2000161")]
public class CollisionEnhancer : MonoBehaviour
{
	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Impact Handling")]
	public bool createImpacts;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PhysicMaterial[] ignoreMaterials;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minVelocityForImpact;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float impactAmountMultiplier;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Sounds on Collision with other")]
	public ADSoundEffect sound;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minVelocityForSound;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Header("Additional Sound Settings")]
	public bool scaleSoundWithVelocity;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float velocityForNoVolume;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float velocityForMaxVolume;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Kill depending on Velocity")]
	public float minVelocityMagnitudeToKill;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[Header("Damage to enemy on hit")]
	public float minVelocityForDamage;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int damageOnHit;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool damageProps;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody _rb;

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x11FDB50", Offset = "0x11FDB50", VA = "0x11FDB50")]
	private void Start()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x11FDBA8", Offset = "0x11FDBA8", VA = "0x11FDBA8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x11FE0EC", Offset = "0x11FE0EC", VA = "0x11FE0EC")]
	public CollisionEnhancer()
	{
	}
}
[Token(Token = "0x2000162")]
public class DamagingGrass : MonoBehaviour
{
	[Token(Token = "0x2000163")]
	[CompilerGenerated]
	private sealed class <Shrink>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DamagingGrass <>4__this;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <_scale>5__2;

		[Token(Token = "0x170000F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000795")]
			[Address(RVA = "0x11FE428", Offset = "0x11FE428", VA = "0x11FE428", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000797")]
			[Address(RVA = "0x11FE470", Offset = "0x11FE470", VA = "0x11FE470", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x11FE2CC", Offset = "0x11FE2CC", VA = "0x11FE2CC")]
		[DebuggerHidden]
		public <Shrink>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x11FE2FC", Offset = "0x11FE2FC", VA = "0x11FE2FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x11FE300", Offset = "0x11FE300", VA = "0x11FE300", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x11FE430", Offset = "0x11FE430", VA = "0x11FE430", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GrassCut _grassCut;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private DamageArea _dmgArea;

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x11FE104", Offset = "0x11FE104", VA = "0x11FE104")]
	private void Start()
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x11FE194", Offset = "0x11FE194", VA = "0x11FE194")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x11FE258", Offset = "0x11FE258", VA = "0x11FE258")]
	[IteratorStateMachine(typeof(<Shrink>d__4))]
	private IEnumerator Shrink()
	{
		return null;
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x11FE2F4", Offset = "0x11FE2F4", VA = "0x11FE2F4")]
	public DamagingGrass()
	{
	}
}
[Token(Token = "0x2000164")]
public class DoorPropRoomActivator : MonoBehaviour
{
	[Token(Token = "0x2000165")]
	[CompilerGenerated]
	private sealed class <CloseDoor>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DoorPropRoomActivator <>4__this;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <goalRot>5__2;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <currentY>5__3;

		[Token(Token = "0x170000F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007A4")]
			[Address(RVA = "0x11FEB64", Offset = "0x11FEB64", VA = "0x11FEB64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007A6")]
			[Address(RVA = "0x11FEBAC", Offset = "0x11FEBAC", VA = "0x11FEBAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x11FE930", Offset = "0x11FE930", VA = "0x11FE930")]
		[DebuggerHidden]
		public <CloseDoor>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x11FE988", Offset = "0x11FE988", VA = "0x11FE988", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x11FE98C", Offset = "0x11FE98C", VA = "0x11FE98C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x11FEB6C", Offset = "0x11FEB6C", VA = "0x11FEB6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000166")]
	[CompilerGenerated]
	private sealed class <OpenDoor>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DoorPropRoomActivator <>4__this;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <goalRot>5__2;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <currentY>5__3;

		[Token(Token = "0x170000F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007AA")]
			[Address(RVA = "0x11FEE4C", Offset = "0x11FEE4C", VA = "0x11FEE4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007AC")]
			[Address(RVA = "0x11FEE94", Offset = "0x11FEE94", VA = "0x11FEE94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x11FE958", Offset = "0x11FE958", VA = "0x11FE958")]
		[DebuggerHidden]
		public <OpenDoor>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x11FEBB4", Offset = "0x11FEBB4", VA = "0x11FEBB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x11FEBB8", Offset = "0x11FEBB8", VA = "0x11FEBB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x11FEE54", Offset = "0x11FEE54", VA = "0x11FEE54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int amountTillEnable;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool openLeft;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool playerInside;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool forceClosed;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ADSoundEffect openSound;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Lock correspondingLock;

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x11FE478", Offset = "0x11FE478", VA = "0x11FE478")]
	private void Start()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x11FE56C", Offset = "0x11FE56C", VA = "0x11FE56C")]
	private void DoorPropRoomActivator_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x11EBC68", Offset = "0x11EBC68", VA = "0x11EBC68")]
	public void ForceClose()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x11FE788", Offset = "0x11FE788", VA = "0x11FE788")]
	public void ForceOpen()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x11FE790", Offset = "0x11FE790", VA = "0x11FE790")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x11FE92C", Offset = "0x11FE92C", VA = "0x11FE92C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x11FE714", Offset = "0x11FE714", VA = "0x11FE714")]
	[IteratorStateMachine(typeof(<CloseDoor>d__12))]
	private IEnumerator CloseDoor()
	{
		return null;
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x11FE6A0", Offset = "0x11FE6A0", VA = "0x11FE6A0")]
	[IteratorStateMachine(typeof(<OpenDoor>d__13))]
	private IEnumerator OpenDoor()
	{
		return null;
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x11FE980", Offset = "0x11FE980", VA = "0x11FE980")]
	public DoorPropRoomActivator()
	{
	}
}
[Token(Token = "0x2000167")]
[Obsolete]
public class DoorProximityOpen : MonoBehaviour
{
	[Token(Token = "0x2000168")]
	[CompilerGenerated]
	private sealed class <CloseDoor>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DoorProximityOpen <>4__this;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <goalRot>5__2;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <currentY>5__3;

		[Token(Token = "0x170000FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007B6")]
			[Address(RVA = "0x11FF33C", Offset = "0x11FF33C", VA = "0x11FF33C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007B8")]
			[Address(RVA = "0x11FF384", Offset = "0x11FF384", VA = "0x11FF384", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x11FF14C", Offset = "0x11FF14C", VA = "0x11FF14C")]
		[DebuggerHidden]
		public <CloseDoor>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x11FF1A4", Offset = "0x11FF1A4", VA = "0x11FF1A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x11FF1A8", Offset = "0x11FF1A8", VA = "0x11FF1A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x11FF344", Offset = "0x11FF344", VA = "0x11FF344", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000169")]
	[CompilerGenerated]
	private sealed class <OpenDoor>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DoorProximityOpen <>4__this;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <goalRot>5__2;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <currentY>5__3;

		[Token(Token = "0x170000FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007BC")]
			[Address(RVA = "0x11FF5E4", Offset = "0x11FF5E4", VA = "0x11FF5E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007BE")]
			[Address(RVA = "0x11FF62C", Offset = "0x11FF62C", VA = "0x11FF62C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x11FF174", Offset = "0x11FF174", VA = "0x11FF174")]
		[DebuggerHidden]
		public <OpenDoor>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x11FF38C", Offset = "0x11FF38C", VA = "0x11FF38C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x11FF390", Offset = "0x11FF390", VA = "0x11FF390", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x11FF5EC", Offset = "0x11FF5EC", VA = "0x11FF5EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Lock correspondingLock;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool openLeft;

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x11FEE9C", Offset = "0x11FEE9C", VA = "0x11FEE9C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x11FEFE0", Offset = "0x11FEFE0", VA = "0x11FEFE0")]
	public void Open()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x11FF080", Offset = "0x11FF080", VA = "0x11FF080")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x11FF0D8", Offset = "0x11FF0D8", VA = "0x11FF0D8")]
	[IteratorStateMachine(typeof(<CloseDoor>d__5))]
	private IEnumerator CloseDoor()
	{
		return null;
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x11FF00C", Offset = "0x11FF00C", VA = "0x11FF00C")]
	[IteratorStateMachine(typeof(<OpenDoor>d__6))]
	private IEnumerator OpenDoor()
	{
		return null;
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x11FF19C", Offset = "0x11FF19C", VA = "0x11FF19C")]
	public DoorProximityOpen()
	{
	}
}
[Token(Token = "0x200016A")]
public class FireShootingTrap : MonoBehaviour
{
	[Token(Token = "0x200016B")]
	[CompilerGenerated]
	private sealed class <ShootingRoutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FireShootingTrap <>4__this;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <a>5__2;

		[Token(Token = "0x170000FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007C7")]
			[Address(RVA = "0x11FFC04", Offset = "0x11FFC04", VA = "0x11FFC04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007C9")]
			[Address(RVA = "0x11FFC4C", Offset = "0x11FFC4C", VA = "0x11FFC4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x11FF82C", Offset = "0x11FF82C", VA = "0x11FF82C")]
		[DebuggerHidden]
		public <ShootingRoutine>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x11FF86C", Offset = "0x11FF86C", VA = "0x11FF86C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0x11FF870", Offset = "0x11FF870", VA = "0x11FF870", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x11FFC0C", Offset = "0x11FFC0C", VA = "0x11FFC0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool continuousShoot;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float shootTimeOn;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float shootTimeOff;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem particles;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BoxCollider damageCollider;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] lights;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem.EmissionModule emissionModule;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DamageArea dmgArea;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource audioSource;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float fadeOutTime;

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x11FF634", Offset = "0x11FF634", VA = "0x11FF634")]
	public void SetFiring(bool val)
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x11FF6F0", Offset = "0x11FF6F0", VA = "0x11FF6F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x11FF824", Offset = "0x11FF824", VA = "0x11FF824")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x11FF7B0", Offset = "0x11FF7B0", VA = "0x11FF7B0")]
	[IteratorStateMachine(typeof(<ShootingRoutine>d__13))]
	private IEnumerator ShootingRoutine()
	{
		return null;
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x11FF854", Offset = "0x11FF854", VA = "0x11FF854")]
	public FireShootingTrap()
	{
	}
}
[Token(Token = "0x200016C")]
public class FloatingPlatform : MonoBehaviour
{
	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animo;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _lastTimeDrop;

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x11FFC54", Offset = "0x11FFC54", VA = "0x11FFC54")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x11FFD68", Offset = "0x11FFD68", VA = "0x11FFD68")]
	public void PlayFallingDownSound()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x11FFE34", Offset = "0x11FFE34", VA = "0x11FFE34")]
	public FloatingPlatform()
	{
	}
}
[Token(Token = "0x200016D")]
public class GrassCut : MonoBehaviour
{
	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PhysicMaterial materialToImpact;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minVelocityToCut;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float hitStiffness;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float snapBackToPositionFactor;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float idleSpeed;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool cuttingInverted;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool forceRotationToIdentity;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Sound Settings")]
	public ADSoundEffect rustlingSound;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material _thisMat;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _cutoff;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 _hitOffset;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _lastRustlingTime;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool _addedToList;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 _closestPoint;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 _vel;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _normalizedVelMagnitude;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _invertFactor;

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x11FFE3C", Offset = "0x11FFE3C", VA = "0x11FFE3C")]
	public float GetCutoff()
	{
		return default(float);
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x11FFE44", Offset = "0x11FFE44", VA = "0x11FFE44")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x12001F8", Offset = "0x12001F8", VA = "0x12001F8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x12001FC", Offset = "0x12001FC", VA = "0x12001FC")]
	private bool UpdateGrassCollision(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x12008F0", Offset = "0x12008F0", VA = "0x12008F0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x12007F4", Offset = "0x12007F4", VA = "0x12007F4")]
	public void ShakeGrass(float normalizedForce, Vector3 _velocity)
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x1200D94", Offset = "0x1200D94", VA = "0x1200D94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x1200E1C", Offset = "0x1200E1C", VA = "0x1200E1C")]
	public void UpdateHitReactionSpeed()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x120110C", Offset = "0x120110C", VA = "0x120110C")]
	public GrassCut()
	{
	}
}
[Token(Token = "0x200016E")]
public class Icicle : MonoBehaviour
{
	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody _rb;

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x1201128", Offset = "0x1201128", VA = "0x1201128")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x1201180", Offset = "0x1201180", VA = "0x1201180")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x12011D4", Offset = "0x12011D4", VA = "0x12011D4")]
	public Icicle()
	{
	}
}
[Token(Token = "0x200016F")]
public class IgnoreInvincibilityTome : MonoBehaviour
{
	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x12011DC", Offset = "0x12011DC", VA = "0x12011DC")]
	public IgnoreInvincibilityTome()
	{
	}
}
[Token(Token = "0x2000170")]
public class IncreaseUnlockVal : MonoBehaviour
{
	[Token(Token = "0x2000171")]
	public enum INCREASE_TYPE
	{
		[Token(Token = "0x400074E")]
		ON_DEATH
	}

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public INCREASE_TYPE increaseType;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LivingBase livingBase;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool increasePotsDestroyed;

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x12011E4", Offset = "0x12011E4", VA = "0x12011E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x120127C", Offset = "0x120127C", VA = "0x120127C")]
	private void LivingBase_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x1201314", Offset = "0x1201314", VA = "0x1201314")]
	public IncreaseUnlockVal()
	{
	}
}
[Token(Token = "0x2000172")]
public class InvincibiltySphere : MonoBehaviour
{
	[Token(Token = "0x2000173")]
	[CompilerGenerated]
	private sealed class <Grow>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InvincibiltySphere <>4__this;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <_size>5__2;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <velocity>5__3;

		[Token(Token = "0x17000100")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E6")]
			[Address(RVA = "0x1201B58", Offset = "0x1201B58", VA = "0x1201B58", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000101")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E8")]
			[Address(RVA = "0x1201BA0", Offset = "0x1201BA0", VA = "0x1201BA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x12019F0", Offset = "0x12019F0", VA = "0x12019F0")]
		[DebuggerHidden]
		public <Grow>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x1201A18", Offset = "0x1201A18", VA = "0x1201A18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x1201A1C", Offset = "0x1201A1C", VA = "0x1201A1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x1201B60", Offset = "0x1201B60", VA = "0x1201B60", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float goalSize;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float growTime;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private HashSet<EnemyBase> _enemiesInside;

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x120131C", Offset = "0x120131C", VA = "0x120131C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x1201408", Offset = "0x1201408", VA = "0x1201408")]
	[IteratorStateMachine(typeof(<Grow>d__4))]
	private IEnumerator Grow()
	{
		return null;
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x120147C", Offset = "0x120147C", VA = "0x120147C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x12016C8", Offset = "0x12016C8", VA = "0x12016C8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x1201898", Offset = "0x1201898", VA = "0x1201898")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x12019DC", Offset = "0x12019DC", VA = "0x12019DC")]
	public InvincibiltySphere()
	{
	}
}
[Token(Token = "0x2000174")]
[Obsolete("Use CollisionEnhancer Instead")]
[RequireComponent(typeof(LivingBase))]
public class KillOnCollide : MonoBehaviour
{
	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minVelocityMagnitudeToKill;

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x1201BA8", Offset = "0x1201BA8", VA = "0x1201BA8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x1201CE8", Offset = "0x1201CE8", VA = "0x1201CE8")]
	public KillOnCollide()
	{
	}
}
[Token(Token = "0x2000175")]
public class Ladder : MonoBehaviour
{
	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer _meshRend;

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x1201CF0", Offset = "0x1201CF0", VA = "0x1201CF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x1201D48", Offset = "0x1201D48", VA = "0x1201D48")]
	public void HighlightLadder()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x1201DF4", Offset = "0x1201DF4", VA = "0x1201DF4")]
	public void UnhighlightLadder()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x1201E54", Offset = "0x1201E54", VA = "0x1201E54")]
	public void TeleportPlayer()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x1202408", Offset = "0x1202408", VA = "0x1202408")]
	public Ladder()
	{
	}
}
[Token(Token = "0x2000176")]
public class LoreEvent : MonoBehaviour
{
	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject journalPagePrefab;

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x1202410", Offset = "0x1202410", VA = "0x1202410")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x1202530", Offset = "0x1202530", VA = "0x1202530")]
	public void PlaceJournalPage(string fileID)
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x1202870", Offset = "0x1202870", VA = "0x1202870")]
	private void LoreEvent_UseStart(BaseInteract b)
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x1202924", Offset = "0x1202924", VA = "0x1202924")]
	public LoreEvent()
	{
	}
}
[Token(Token = "0x2000177")]
public class Minecart : MonoBehaviour
{
	[Token(Token = "0x2000178")]
	[CompilerGenerated]
	private sealed class <AdjustVolume>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Minecart <>4__this;

		[Token(Token = "0x17000102")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007FC")]
			[Address(RVA = "0x12031E8", Offset = "0x12031E8", VA = "0x12031E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000103")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007FE")]
			[Address(RVA = "0x1203230", Offset = "0x1203230", VA = "0x1203230", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x1203008", Offset = "0x1203008", VA = "0x1203008")]
		[DebuggerHidden]
		public <AdjustVolume>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x1203038", Offset = "0x1203038", VA = "0x1203038", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x120303C", Offset = "0x120303C", VA = "0x120303C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x12031F0", Offset = "0x12031F0", VA = "0x12031F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LivingBase _lb;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody _rb;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource _audio;

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x120292C", Offset = "0x120292C", VA = "0x120292C")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x12029EC", Offset = "0x12029EC", VA = "0x12029EC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x1202AFC", Offset = "0x1202AFC", VA = "0x1202AFC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x1202F94", Offset = "0x1202F94", VA = "0x1202F94")]
	[IteratorStateMachine(typeof(<AdjustVolume>d__6))]
	private IEnumerator AdjustVolume()
	{
		return null;
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x1203030", Offset = "0x1203030", VA = "0x1203030")]
	public Minecart()
	{
	}
}
[Token(Token = "0x2000179")]
public class MovingWall : MonoBehaviour
{
	[Token(Token = "0x200017A")]
	[CompilerGenerated]
	private sealed class <MoveWall>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MovingWall <>4__this;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <_animate>5__2;

		[Token(Token = "0x17000104")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000807")]
			[Address(RVA = "0x12039E0", Offset = "0x12039E0", VA = "0x12039E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000105")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000809")]
			[Address(RVA = "0x1203A28", Offset = "0x1203A28", VA = "0x1203A28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x120331C", Offset = "0x120331C", VA = "0x120331C")]
		[DebuggerHidden]
		public <MoveWall>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x12034C8", Offset = "0x12034C8", VA = "0x12034C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x12034CC", Offset = "0x12034CC", VA = "0x12034CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x12039E8", Offset = "0x12039E8", VA = "0x12039E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 2f)]
	[Header("Configuration")]
	public float moveOutAmount;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveSpeed;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float switchDelay;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float moveOutCounter;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _isMovingOut;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startPos;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource _audioSource;

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x1203238", Offset = "0x1203238", VA = "0x1203238")]
	private void Start()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x12032A8", Offset = "0x12032A8", VA = "0x12032A8")]
	[IteratorStateMachine(typeof(<MoveWall>d__8))]
	private IEnumerator MoveWall()
	{
		return null;
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x1203344", Offset = "0x1203344", VA = "0x1203344")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x1203474", Offset = "0x1203474", VA = "0x1203474")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x12034AC", Offset = "0x12034AC", VA = "0x12034AC")]
	public MovingWall()
	{
	}
}
[Token(Token = "0x200017B")]
public class PickupSpawner : MonoBehaviour
{
	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string dropTable;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 spawnOffset;

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x1203A30", Offset = "0x1203A30", VA = "0x1203A30")]
	private void Start()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x1203A34", Offset = "0x1203A34", VA = "0x1203A34")]
	public void SpawnItem()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x1203C94", Offset = "0x1203C94", VA = "0x1203C94")]
	private bool CanSpawnItem()
	{
		return default(bool);
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x1204358", Offset = "0x1204358", VA = "0x1204358")]
	public PickupSpawner()
	{
	}
}
[Token(Token = "0x200017C")]
public class Podest : MonoBehaviour
{
	[Token(Token = "0x600080E")]
	[Address(RVA = "0x1204360", Offset = "0x1204360", VA = "0x1204360")]
	private void Start()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x1204758", Offset = "0x1204758", VA = "0x1204758")]
	public Podest()
	{
	}
}
[Token(Token = "0x200017D")]
public class PodestChooseOne : MonoBehaviour
{
	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject particlesWitherAway;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform center;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> _spawnedObjects;

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x1204760", Offset = "0x1204760", VA = "0x1204760")]
	private void Start()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x1205158", Offset = "0x1205158", VA = "0x1205158")]
	private void _obj_UseStart(BaseInteract b)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x120541C", Offset = "0x120541C", VA = "0x120541C")]
	public PodestChooseOne()
	{
	}
}
[Token(Token = "0x200017E")]
public class PotBreakMaterial : MonoBehaviour
{
	[Token(Token = "0x6000813")]
	[Address(RVA = "0x12054A4", Offset = "0x12054A4", VA = "0x12054A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x1205604", Offset = "0x1205604", VA = "0x1205604")]
	public PotBreakMaterial()
	{
	}
}
[Token(Token = "0x200017F")]
public class PrisonDoor : MonoBehaviour
{
	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Lock correspondingLock;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject closedCollider;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider _thisCollider;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator _animo;

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x120560C", Offset = "0x120560C", VA = "0x120560C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x12057D4", Offset = "0x12057D4", VA = "0x12057D4")]
	private void PrisonDoor_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x120585C", Offset = "0x120585C", VA = "0x120585C")]
	public PrisonDoor()
	{
	}
}
[Token(Token = "0x2000180")]
public class PropShootTrap : MonoBehaviour
{
	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform shootPos;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objToShoot;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float shootDelay;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float shootSpeed;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Collider[] _collsToIgnore;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _lastShootTime;

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x1205864", Offset = "0x1205864", VA = "0x1205864")]
	private void Start()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x12058BC", Offset = "0x12058BC", VA = "0x12058BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x1205E2C", Offset = "0x1205E2C", VA = "0x1205E2C")]
	public PropShootTrap()
	{
	}
}
[Token(Token = "0x2000181")]
public class PropShootTrapContinuous : MonoBehaviour
{
	[Token(Token = "0x2000182")]
	[CompilerGenerated]
	private sealed class <ShootRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PropShootTrapContinuous <>4__this;

		[Token(Token = "0x17000106")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000822")]
			[Address(RVA = "0x1206450", Offset = "0x1206450", VA = "0x1206450", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000107")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000824")]
			[Address(RVA = "0x1206498", Offset = "0x1206498", VA = "0x1206498", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x1206080", Offset = "0x1206080", VA = "0x1206080")]
		[DebuggerHidden]
		public <ShootRoutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x1206108", Offset = "0x1206108", VA = "0x1206108", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x120610C", Offset = "0x120610C", VA = "0x120610C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x1206458", Offset = "0x1206458", VA = "0x1206458", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform shootPos;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject objToShoot;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float shootInterval;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float shootSpeed;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string shootSound;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider[] _collsToIgnore;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _routineRunning;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RoomCreator.RoomFile _currentRoom;

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x1205E3C", Offset = "0x1205E3C", VA = "0x1205E3C")]
	private void Start()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x1205FC4", Offset = "0x1205FC4", VA = "0x1205FC4")]
	private void PlayerLiving_RoomEntered(RoomCreator.RoomFile _r)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x120600C", Offset = "0x120600C", VA = "0x120600C")]
	[IteratorStateMachine(typeof(<ShootRoutine>d__10))]
	private IEnumerator ShootRoutine()
	{
		return null;
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x12060A8", Offset = "0x12060A8", VA = "0x12060A8")]
	public PropShootTrapContinuous()
	{
	}
}
[Token(Token = "0x2000183")]
public class ShopGimmick : MonoBehaviour
{
	[Token(Token = "0x2000184")]
	public enum GIMMICK_TYPE
	{
		[Token(Token = "0x4000790")]
		KEY_FOR_10_COINS,
		[Token(Token = "0x4000791")]
		COINS_5_FOR_1_KEY,
		[Token(Token = "0x4000792")]
		RANDOM_STUFF_FOR_5_COINS,
		[Token(Token = "0x4000793")]
		HEAL_FOR_25_COINS
	}

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spitOutPos;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro txtEntryPrice;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float chanceToWin;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LivingBase _lb;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _timesUsed;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _hasBeenHit;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GIMMICK_TYPE gimmickType;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator _animo;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ParticleSystem _gimmickParticles;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _hash;

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x12064A0", Offset = "0x12064A0", VA = "0x12064A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x12065F0", Offset = "0x12065F0", VA = "0x12065F0")]
	public void SetHash(int h)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x12065F8", Offset = "0x12065F8", VA = "0x12065F8")]
	private void ShopGimmick_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x12067CC", Offset = "0x12067CC", VA = "0x12067CC")]
	private void GiveReward()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x1207F14", Offset = "0x1207F14", VA = "0x1207F14")]
	public ShopGimmick()
	{
	}
}
[Token(Token = "0x2000187")]
public class SingleSpikeTrap : MonoBehaviour
{
	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float gracePeriod;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator _animo;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _graceCounter;

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x12081A0", Offset = "0x12081A0", VA = "0x12081A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x12081F8", Offset = "0x12081F8", VA = "0x12081F8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x12082B0", Offset = "0x12082B0", VA = "0x12082B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x1208320", Offset = "0x1208320", VA = "0x1208320")]
	public SingleSpikeTrap()
	{
	}
}
[Token(Token = "0x2000188")]
public class SpikeAttack : MonoBehaviour
{
	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int attackLength;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float spacing;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeUp;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeBetweenSpikes;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float moveUpSpeed;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float startDepth;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int startOffset;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int damage;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject spikeToSpawn;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject particlesToSpawn;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool generateSound;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool enemiesImmune;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool playerImmune;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject _stoneParticles;

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x1208330", Offset = "0x1208330", VA = "0x1208330")]
	private void Start()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x1208334", Offset = "0x1208334", VA = "0x1208334")]
	[ContextMenu("ATTACK")]
	public void Attack()
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x120840C", Offset = "0x120840C", VA = "0x120840C")]
	public SpikeAttack()
	{
	}
}
[Token(Token = "0x200018A")]
public class Spikes : MonoBehaviour
{
	[Token(Token = "0x200018B")]
	[CompilerGenerated]
	private sealed class <UpdateSpikes>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Spikes <>4__this;

		[Token(Token = "0x1700010C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000848")]
			[Address(RVA = "0x1209058", Offset = "0x1209058", VA = "0x1209058", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600084A")]
			[Address(RVA = "0x12090A0", Offset = "0x12090A0", VA = "0x12090A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x1208B1C", Offset = "0x1208B1C", VA = "0x1208B1C")]
		[DebuggerHidden]
		public <UpdateSpikes>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x1208C10", Offset = "0x1208C10", VA = "0x1208C10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x1208C14", Offset = "0x1208C14", VA = "0x1208C14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x1209060", Offset = "0x1209060", VA = "0x1209060", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018C")]
	[CompilerGenerated]
	private sealed class <DoMovement>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Spikes <>4__this;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool up;

		[Token(Token = "0x1700010E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600084E")]
			[Address(RVA = "0x12092A4", Offset = "0x12092A4", VA = "0x12092A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000850")]
			[Address(RVA = "0x12092EC", Offset = "0x12092EC", VA = "0x12092EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x1208BCC", Offset = "0x1208BCC", VA = "0x1208BCC")]
		[DebuggerHidden]
		public <DoMovement>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x12090A8", Offset = "0x12090A8", VA = "0x12090A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x12090AC", Offset = "0x12090AC", VA = "0x12090AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x12092AC", Offset = "0x12092AC", VA = "0x12092AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float stayUpTime;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float stayDownTime;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider dmgCollider;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float moveDownAmount;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ADSoundEffect soundSpikesUp;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ADSoundEffect soundSpikesDown;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool deactivated;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private DamageArea _dmgArea;

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x1208A20", Offset = "0x1208A20", VA = "0x1208A20")]
	public void DeactivatePermanently()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x1208A38", Offset = "0x1208A38", VA = "0x1208A38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x1208AA8", Offset = "0x1208AA8", VA = "0x1208AA8")]
	[IteratorStateMachine(typeof(<UpdateSpikes>d__10))]
	private IEnumerator UpdateSpikes()
	{
		return null;
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x1208B44", Offset = "0x1208B44", VA = "0x1208B44")]
	[IteratorStateMachine(typeof(<DoMovement>d__11))]
	private IEnumerator DoMovement(bool up)
	{
		return null;
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x1208BF4", Offset = "0x1208BF4", VA = "0x1208BF4")]
	public Spikes()
	{
	}
}
[Token(Token = "0x200018D")]
public class Teleporter : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200018E")]
	public class TeleportInfos
	{
		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int goalId;

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x1209C4C", Offset = "0x1209C4C", VA = "0x1209C4C")]
		public TeleportInfos()
		{
		}
	}

	[Token(Token = "0x200018F")]
	[CompilerGenerated]
	private sealed class <LoadCustomData>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Teleporter <>4__this;

		[Token(Token = "0x17000110")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600085F")]
			[Address(RVA = "0x1209EF4", Offset = "0x1209EF4", VA = "0x1209EF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000111")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000861")]
			[Address(RVA = "0x1209F3C", Offset = "0x1209F3C", VA = "0x1209F3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x12093D8", Offset = "0x12093D8", VA = "0x12093D8")]
		[DebuggerHidden]
		public <LoadCustomData>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x1209C54", Offset = "0x1209C54", VA = "0x1209C54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x1209C58", Offset = "0x1209C58", VA = "0x1209C58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x1209EFC", Offset = "0x1209EFC", VA = "0x1209EFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000190")]
	[CompilerGenerated]
	private sealed class <RemoveFromInsideObjects>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Teleporter <>4__this;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject other;

		[Token(Token = "0x17000112")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000865")]
			[Address(RVA = "0x120A050", Offset = "0x120A050", VA = "0x120A050", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000113")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000867")]
			[Address(RVA = "0x120A098", Offset = "0x120A098", VA = "0x120A098", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x1209B54", Offset = "0x1209B54", VA = "0x1209B54")]
		[DebuggerHidden]
		public <RemoveFromInsideObjects>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x1209F44", Offset = "0x1209F44", VA = "0x1209F44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x1209F48", Offset = "0x1209F48", VA = "0x1209F48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x120A058", Offset = "0x120A058", VA = "0x120A058", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Teleporter _goalTeleporter;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _teleportCooldown;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string finalId;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string finalGoalId;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Animator animo;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HashSet<GameObject> _objectsInside;

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x12092F4", Offset = "0x12092F4", VA = "0x12092F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x1209364", Offset = "0x1209364", VA = "0x1209364")]
	[IteratorStateMachine(typeof(<LoadCustomData>d__8))]
	private IEnumerator LoadCustomData()
	{
		return null;
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x1209400", Offset = "0x1209400", VA = "0x1209400")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x120962C", Offset = "0x120962C", VA = "0x120962C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x1209878", Offset = "0x1209878", VA = "0x1209878")]
	private void Update()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x1209A74", Offset = "0x1209A74", VA = "0x1209A74")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x1209AB4", Offset = "0x1209AB4", VA = "0x1209AB4")]
	[IteratorStateMachine(typeof(<RemoveFromInsideObjects>d__13))]
	private IEnumerator RemoveFromInsideObjects(float delay, GameObject other)
	{
		return null;
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x1209B7C", Offset = "0x1209B7C", VA = "0x1209B7C")]
	public Teleporter()
	{
	}
}
[Token(Token = "0x2000191")]
public class TestTarget : MonoBehaviour
{
	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int moveStyle;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 startPos;

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x120A0A0", Offset = "0x120A0A0", VA = "0x120A0A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x120A0D0", Offset = "0x120A0D0", VA = "0x120A0D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x120A1A0", Offset = "0x120A1A0", VA = "0x120A1A0")]
	public void UpdateMoveStyle()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x120A1B0", Offset = "0x120A1B0", VA = "0x120A1B0")]
	public TestTarget()
	{
	}
}
[Token(Token = "0x2000192")]
public class Torch : MonoBehaviour
{
	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject torchPartsOnDeath;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh brokenTorch;

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x120A1B8", Offset = "0x120A1B8", VA = "0x120A1B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x120A3A0", Offset = "0x120A3A0", VA = "0x120A3A0")]
	private void Torch_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x120A694", Offset = "0x120A694", VA = "0x120A694")]
	public Torch()
	{
	}
}
[Token(Token = "0x2000193")]
public class Turret : MonoBehaviour
{
	[Token(Token = "0x2000194")]
	[CompilerGenerated]
	private sealed class <ShootTurret>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Turret <>4__this;

		[Token(Token = "0x17000114")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000876")]
			[Address(RVA = "0x120AB24", Offset = "0x120AB24", VA = "0x120AB24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000115")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000878")]
			[Address(RVA = "0x120AB6C", Offset = "0x120AB6C", VA = "0x120AB6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x120A788", Offset = "0x120A788", VA = "0x120A788")]
		[DebuggerHidden]
		public <ShootTurret>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x120A7C4", Offset = "0x120A7C4", VA = "0x120A7C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x120A7C8", Offset = "0x120A7C8", VA = "0x120A7C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x120AB2C", Offset = "0x120AB2C", VA = "0x120AB2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] spawnPoses;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float shootIntervallInSecs;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject shootBullet;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float bulletSpeed;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 basePos;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider coll;

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x120A69C", Offset = "0x120A69C", VA = "0x120A69C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x120A780", Offset = "0x120A780", VA = "0x120A780")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x120A70C", Offset = "0x120A70C", VA = "0x120A70C")]
	[IteratorStateMachine(typeof(<ShootTurret>d__8))]
	private IEnumerator ShootTurret()
	{
		return null;
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x120A7B0", Offset = "0x120A7B0", VA = "0x120A7B0")]
	public Turret()
	{
	}
}
[Token(Token = "0x2000195")]
public class WonRunAreaNGPlusHandler : MonoBehaviour
{
	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform miner;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject stage1;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform stage1Pos;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject stage2;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform stage2Pos;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject stage3;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject signWarning;

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x120AB74", Offset = "0x120AB74", VA = "0x120AB74")]
	private void Start()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x120ACD4", Offset = "0x120ACD4", VA = "0x120ACD4")]
	public WonRunAreaNGPlusHandler()
	{
	}
}
[Token(Token = "0x2000196")]
public class WoodBarricade : LivingBase
{
	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	private bool _broken;

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x120ACDC", Offset = "0x120ACDC", VA = "0x120ACDC", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x120AD84", Offset = "0x120AD84", VA = "0x120AD84", Slot = "12")]
	public override void OnHitEvent(GameObject source, int dmg, ATTACKTYPE type)
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x120AEC8", Offset = "0x120AEC8", VA = "0x120AEC8")]
	public WoodBarricade()
	{
	}
}
[Token(Token = "0x2000197")]
public enum SystemConfiguration
{
	[Token(Token = "0x40007E6")]
	UNDEFINED = -1,
	[Token(Token = "0x40007E7")]
	VALVE_INDEX,
	[Token(Token = "0x40007E8")]
	OCULUS_RIFT,
	[Token(Token = "0x40007E9")]
	OCULUS_QUEST,
	[Token(Token = "0x40007EA")]
	OCULUS_QUEST_2,
	[Token(Token = "0x40007EB")]
	WINDOWS_MIXED_REALITY,
	[Token(Token = "0x40007EC")]
	HTC_VIVE,
	[Token(Token = "0x40007ED")]
	PICO_4,
	[Token(Token = "0x40007EE")]
	PICO_NEO_3
}
[Token(Token = "0x2000198")]
public class GameHandler : MonoBehaviour
{
	[Token(Token = "0x2000199")]
	public delegate void OnGameHandlerInitialized();

	[Token(Token = "0x200019A")]
	public delegate void OnPlayerReferenceSet();

	[Token(Token = "0x200019B")]
	public delegate void OnObjectsSpawned(GameObject g);

	[Token(Token = "0x200019C")]
	public enum LOAD_BEHAVIOR
	{
		[Token(Token = "0x400086C")]
		SHOW_MAIN_MENU,
		[Token(Token = "0x400086D")]
		SPAWN_DEFAULT_POSITION,
		[Token(Token = "0x400086E")]
		SPAWN_CHALLENGE_RUN
	}

	[Token(Token = "0x20001A0")]
	[CompilerGenerated]
	private sealed class <TryRestartVR>d__170 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000118")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000900")]
			[Address(RVA = "0x1213FEC", Offset = "0x1213FEC", VA = "0x1213FEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000902")]
			[Address(RVA = "0x1214034", Offset = "0x1214034", VA = "0x1214034", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0x120EED4", Offset = "0x120EED4", VA = "0x120EED4")]
		[DebuggerHidden]
		public <TryRestartVR>d__170(int <>1__state)
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x1213C3C", Offset = "0x1213C3C", VA = "0x1213C3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x1213C40", Offset = "0x1213C40", VA = "0x1213C40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x1213FF4", Offset = "0x1213FF4", VA = "0x1213FF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A1")]
	[CompilerGenerated]
	private sealed class <OnStartup>d__186 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameHandler <>4__this;

		[Token(Token = "0x1700011A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000906")]
			[Address(RVA = "0x1217C64", Offset = "0x1217C64", VA = "0x1217C64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000908")]
			[Address(RVA = "0x1217CAC", Offset = "0x1217CAC", VA = "0x1217CAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x12112E8", Offset = "0x12112E8", VA = "0x12112E8")]
		[DebuggerHidden]
		public <OnStartup>d__186(int <>1__state)
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x121403C", Offset = "0x121403C", VA = "0x121403C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x1214040", Offset = "0x1214040", VA = "0x1214040", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x1217C6C", Offset = "0x1217C6C", VA = "0x1217C6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A3")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass219_0
	{
		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameHandler <>4__this;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject _hint2;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject _hint1;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject _hint3;

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x1217E50", Offset = "0x1217E50", VA = "0x1217E50")]
		public <>c__DisplayClass219_0()
		{
		}
	}

	[Token(Token = "0x20001A5")]
	[CompilerGenerated]
	private sealed class <GenerationRoutine>d__219 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameHandler <>4__this;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int seed;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float _yRotationLastFloor;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool reset;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private <>c__DisplayClass219_0 <>8__1;

		[Token(Token = "0x1700011E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000918")]
			[Address(RVA = "0x1219250", Offset = "0x1219250", VA = "0x1219250", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600091A")]
			[Address(RVA = "0x1219298", Offset = "0x1219298", VA = "0x1219298", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x121287C", Offset = "0x121287C", VA = "0x121287C")]
		[DebuggerHidden]
		public <GenerationRoutine>d__219(int <>1__state)
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x1218370", Offset = "0x1218370", VA = "0x1218370", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x1218374", Offset = "0x1218374", VA = "0x1218374", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x1219258", Offset = "0x1219258", VA = "0x1219258", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007EF")]
	public const string regularSaveFileName = "AncientSave";

	[Token(Token = "0x40007F0")]
	public const string experimentalSaveFileName = "AncientSave_Experimental";

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected string currentlyCachedSaveFileName;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<int, string> GAME_VERSIONS;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Color buttonSelectedColor;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Color buttonDeselectedColor;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static bool initialized;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public static bool userDataRegistered;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool doEntitlementCheck;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool HAS_USED_CHEATS;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool IN_SEEDED_RUN;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool IN_CHALLENGE_RUN;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool ENABLE_KEY_DEBUG_PRESSES;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool EXPERIMENTAL_BUILD;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool LAUNCH_IN_NON_XR_MODE;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static GameHandler instance;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static float globalDebugTimescale;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static SystemConfiguration systemConfiguration;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static float deltaTime;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Configuration")]
	public GameObject hitSplash;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ovrManager;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject hintGameDoesNotStartInVR;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject exclamationMark;

	[NonSerialized]
	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ItemHightlightInfo itemHighlightInfoLeft;

	[NonSerialized]
	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ItemHightlightInfo itemHighlightInfoRight;

	[NonSerialized]
	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public WorldGeneratorEvolved[] worldGeneratorList;

	[NonSerialized]
	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ModLoader modLoader;

	[NonSerialized]
	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ItemInterpreter itemInterpreter;

	[NonSerialized]
	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public PotionInterpreter potionInterpreter;

	[NonSerialized]
	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public WeaponComboInterpreter weaponComboInterpreter;

	[NonSerialized]
	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public LocalizationInterpreter localizationInterpreter;

	[NonSerialized]
	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RunModifierInterpreter runModifierInterpreter;

	[NonSerialized]
	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public JournalInterpreter journalInterpreter;

	[NonSerialized]
	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ChallengeInterpreter challengeInterpreter;

	[NonSerialized]
	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public EffectHelper effectHelper;

	[NonSerialized]
	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public EnemyRegistry enemyRegistry;

	[NonSerialized]
	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AchievementInterpreter achievementInterpreter;

	[NonSerialized]
	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RunSaveManager runSaveManager;

	[NonSerialized]
	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TeleportLocomotion teleportLocomotion;

	[NonSerialized]
	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public SpecialEventGraph specialEventsGraph;

	[NonSerialized]
	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GradualDifficultyHandler gradualDifficultyHandler;

	[NonSerialized]
	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public HomeBaseStoryHandler homeBaseStoryHandler;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public StringToObjectMapper stringToObjectMapper;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject selectPresetPrompt;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public IngameConsoleVR ingameConsoleVR;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ProcObjectHandler procObjectHandler;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Header("World")]
	public ImpactHandler impactHandler;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public GameObject homeBaseObject;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public DropTableHandler dropTableHandler;

	[NonSerialized]
	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public UIMainMenu mainMenu;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public HowToPlay howToPlay;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public List<GrassCut> grassCutUpdateList;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[Header("Player")]
	public PlayerController playerController;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public PlayerMockController playerMockController;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Transform playerHeadset;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Transform cameraRig;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public VelocityEstimator cameraRigVelocity;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public ActivePickupSlot activePickupSlot;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[HideInInspector]
	public PlayerLiving playerLiving;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[HideInInspector]
	public Inventory inventory;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public ProgressHandler progressHandler;

	[NonSerialized]
	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public PlayerStatistics playerStatistics;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[HideInInspector]
	public Minimap[] minimaps;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[HideInInspector]
	public PlayerStatsUI playerStatsUI;

	[NonSerialized]
	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public ADVRHapticsManager advrHapticsManager;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[Header("Misc")]
	public HelperMethods helperMethods;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Material baseWorldMaterial;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Material baseGrassMaterial;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Material baseColormapMaterial;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject spectatorCamera;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public PauseScreen pauseScreen;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject globalVolume;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject worldMessagePopup;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public SeerUI seerUI;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public MeshRenderer hitPlaneRenderer;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Color itemHighlightColor;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public CURRENT_FLOOR currentFloor;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	[Header("Runtime Variables")]
	public WorldGeneratorEvolved currentWorldGenerator;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public List<EnemyBase> globalEnemyList;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public List<LivingBase> globalLivingList;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Dictionary<CURRENT_FLOOR, List<GameObject>> killAfterFloorComplete;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public Dictionary<RoomCreator.RoomFile, List<Collider>> globalCollisionCheckDict;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public List<EnemySpawnPosition> enemySpawnPositions;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public HashSet<string> lockedItems;

	[NonSerialized]
	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public bool cybershoesDetected;

	[NonSerialized]
	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[ModdingEvent("onSwordHitEntity", "This event gets called whenever an entity is hit by the player's melee weapon and will about to be damaged, the event passes on some data about the situation and expects you to return the damage with if applicable any modified damage values. Be aware that the entity value in the parameters may not always be valid as this method also gets called to indicate the damage amount for the melee weapon in the stats menu!", new Type[] { typeof(ItemInterpreter.HitInfos) })]
	public List<GenericRepresentation> e_onSwordHitEntity;

	[NonSerialized]
	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[ModdingEvent("onKnifeHitEntity", "This event gets called whenever an entity is hit by the player's ranged weapon and will about to be damaged, the event passes on some data about the situation and expects you to return the damage with if applicable any modified damage values.  Be aware that the entity value in the parameters may not always be valid as this method also gets called to indicate the damage amount for the ranged weapon in the stats menu!", new Type[] { typeof(ItemInterpreter.HitInfos) })]
	public List<GenericRepresentation> e_onKnifeHitEntity;

	[NonSerialized]
	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	[ModdingEvent("onDungeonGenerated", "This event gets called whenever a dungeon floor is generating, this specific one is called whenever the first room of a dungeon floor has been generated and (if needed) the player has been teleported into the dungeon.", new Type[] { })]
	public List<GenericRepresentation> e_onDungeonGenerated;

	[NonSerialized]
	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	[ModdingEvent("onPreDungeonGenerated", "This event gets called right before a dungeon floor is about to generate. This may be handy if you want to influence any generation before the starting room has been generated.", new Type[] { })]
	public List<GenericRepresentation> e_onPreDungeonGenerated;

	[NonSerialized]
	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[ModdingEvent("onEntityDeath", "This event indicates that an entity has died. The first parameter gives a reference to the entity and the second one is, if defined, the source of what killed the entity. Note! For performance reasons and for convenience it's highly recommend to set in the 'onLoad' the 'entityDeathListeners' variable, this will make sure that not all entities that die trigger this callback.", new Type[]
	{
		typeof(LivingBase),
		typeof(GameObject)
	})]
	public Dictionary<string, List<GenericRepresentation>> e_onEntityDeath;

	[NonSerialized]
	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[ModdingEvent("onPlayerDeath", "This event gets called whenever the player died.", new Type[] { typeof(PlayerLiving) })]
	public List<GenericRepresentation> e_onPlayerDeath;

	[NonSerialized]
	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[ModdingEvent("onKnifeCollide", "This event gets called whenever a ranged projectile, shot or thrown by the player, hits an object.", new Type[]
	{
		typeof(WeaponBase),
		typeof(Collision)
	})]
	public List<GenericRepresentation> e_onKnifeCollide;

	[NonSerialized]
	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[ModdingEvent("onSwordCollide", "This event gets called whenever a melee weapon hits an object.", new Type[]
	{
		typeof(SwordBase),
		typeof(Collision)
	})]
	public List<GenericRepresentation> e_onSwordCollide;

	[NonSerialized]
	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	[ModdingEvent("onPlayerHit", "This event gets called whenever the player gets hit, this event should return the first parameter and may modify this value to either do more or less damage. The first parameter is the damage the player will receive, the second is the source that hit the player (if available), the third is the hit type and the last one is the position where the player was hit.", new Type[]
	{
		typeof(int),
		typeof(GameObject),
		typeof(ATTACKTYPE),
		typeof(Vector3)
	})]
	public List<GenericRepresentation> e_onPlayerHit;

	[NonSerialized]
	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	[ModdingEvent("onKnifeThrow", "This event gets called whenever the player shoots or throws their ranged weapon.", new Type[] { })]
	public List<GenericRepresentation> e_onKnifeThrow;

	[NonSerialized]
	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[ModdingEvent("onSaveLoaded", "This event gets called when a player has a previous saved game and decides to load it again, after most of the world, the player stats and similar things have loaded this event will be called.", new Type[] { })]
	public List<GenericRepresentation> e_onSaveLoaded;

	[NonSerialized]
	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	[ModdingEvent("onPickupTaken", "This event gets called whenever a player picks up an upgrade item during a run, the first parameter will be the item representation that is associated with the item and the second parameter is the game object that represents the item in the world which will very shortly after this event get destroyed!", new Type[]
	{
		typeof(ItemInterpreter.PickupDiskRepresentation),
		typeof(ItemUpgrade)
	})]
	public List<GenericRepresentation> e_onPickupTaken;

	[NonSerialized]
	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	[ModdingEvent("onSwordSwing", "This event gets called whenever the player swings their sword with a certain amount of force and after a small cooldown. The first and only parameter indicates how much force was used for the swing, this value represents the magnitude of the velocity vector.", new Type[] { typeof(float) })]
	public List<GenericRepresentation> e_onSwordSwing;

	[NonSerialized]
	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	[ModdingEvent("onPlayerValueChanged", "This event gets called whenever a player related value changes such as their health, max health and more. The first parameter indicates through a string which value has been changed.", new Type[] { typeof(string) })]
	public List<GenericRepresentation> e_onPlayerValueChanged;

	[NonSerialized]
	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[ModdingEvent("onRunComplete", "This event gets called whenever the beast has been defeated in it's very last stage, even before the death animation of the beast has fully been completed.", new Type[] { })]
	public List<GenericRepresentation> e_onRunComplete;

	[NonSerialized]
	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[ModdingEvent("onEnteredNGPlus", "This event gets called whenever the player decides to enter 'New Game+' and will have the New Game+ level as the only parameter", new Type[] { typeof(int) })]
	public List<GenericRepresentation> e_onEnteredNGPlus;

	[NonSerialized]
	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	[ModdingEvent("onSpawnInHomeBase", "This event gets called every time the player gets teleported into the home base, whether this is after finishing a run or simply coming back from the main menu.", new Type[] { })]
	public List<GenericRepresentation> e_onSpawnInHomeBase;

	[NonSerialized]
	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[ModdingEvent("onSlotMachineGamble", "This event gets called whenever the player uses a slot machine, the first parameter indicates what type of slot machine it is and the second says whether or not the player has won anything from it.", new Type[]
	{
		typeof(string),
		typeof(bool)
	})]
	public List<GenericRepresentation> e_onSlotMachineGamble;

	[NonSerialized]
	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	[ModdingEvent("onProgressBought", "This event gets called whenever the player purchases a progression upgrade from a NPC such as a weapon augment or an insight upgrade. The first parameter indicates which NPC the upgrade was bought from and the second represents the representation associated with the upgrade item that handles the game logic code.", new Type[]
	{
		typeof(string),
		typeof(ProgressHandler.ProgressDiskRepresentation)
	})]
	public List<GenericRepresentation> e_onProgressBought;

	[NonSerialized]
	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	[ModdingEvent("onVersionUpgrade", "This event gets called whenever a new version of the game is available for the person playing the game, the game keeps track of the last version the person has played. This data is stored in their save file. The game may perform some backwards compatible upgrades to make sure that everything still works after upgrading, the game has used this for example in milestones. The first parameter is the old version indicated as a number and the second is the current game version to which everything is being upgraded to.", new Type[]
	{
		typeof(int),
		typeof(int)
	})]
	public List<GenericRepresentation> e_onVersionUpgrade;

	[NonSerialized]
	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	[ModdingEvent("onPreBossFoodSpawn", "This event gets called right before the food item after a boss spawns, if the user did not purchase this insight upgrade the event will still be called. The event serves the purpose of being able to override the item that spawns by returning an override, if you do not want to override the item make sure to return the override that has been given as the first parameter. The second parameter is the location at which the item will spawn.", new Type[]
	{
		typeof(GameObject),
		typeof(Vector3)
	})]
	public List<GenericRepresentation> e_onPreBossFoodSpawn;

	[NonSerialized]
	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	[ModdingEvent("onVoidClearerDestroyed", "This event gets called whenever a 'void clearer' destroys and object, the void clearer is a big box underneath the level that destroys objects that fall out of the map to make sure they don't keep falling forever and take unecessary performance away. The first parameter gives a reference to the about getting destroyed game object.", new Type[] { typeof(GameObject) })]
	public List<GenericRepresentation> e_onVoidClearerDestroyed;

	[NonSerialized]
	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	[ModdingEvent("onKnifeInHand", "This event gets called whenever a ranged weapon projectile has returned to the player.", new Type[] { })]
	public List<GenericRepresentation> e_onKnifeInHand;

	[NonSerialized]
	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	[ModdingEvent("onItemBought", "This event gets called whenever the player has bought an item in a shop, the first parameter indicates the game object that represents the item in the world and will very shortly after this event get destroyed. The second parameter indicates the location of the purchased item.", new Type[]
	{
		typeof(ItemBase),
		typeof(Vector3)
	})]
	public List<GenericRepresentation> e_onItemBought;

	[NonSerialized]
	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	[ModdingEvent("onFoodEaten", "This event gets called whenever a player eats some food, the first parameter is a reference to the food that has been eaten.", new Type[] { typeof(ItemFood) })]
	public List<GenericRepresentation> e_onFoodEaten;

	[NonSerialized]
	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	[ModdingEvent("onGlobalTick", "This event gets called every now and then (by default every 0.5 seconds) which allows you to execute time based functions.", new Type[] { })]
	public List<GenericRepresentation> e_onGlobalTick;

	[NonSerialized]
	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	[ModdingEvent("onObjectCollect", "This event gets called when either a key or a coin in the world has been picked up by the player. The first parameter indicates whether it's a key or coin as a string.", new Type[] { typeof(string) })]
	public List<GenericRepresentation> e_onObjectCollect;

	[NonSerialized]
	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	[ModdingEvent("onPreObjectCollect", "This event gets called when either a key or a coin has been picked up and is about to change the player's current cash and trigger necessary events. This allows you to change the outcome, you should always return a valid number indicating the amount of coins or keys. If the outcome is zero or less then the sequence will be cancelled. The first parameter is indicating whether it's a \"key\" or a \"coin\" and the second parameter gives the value that will be applied (may have already been changed by different event listeners!).", new Type[]
	{
		typeof(string),
		typeof(int)
	})]
	public List<GenericRepresentation> e_onPreObjectCollect;

	[NonSerialized]
	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	[ModdingEvent("onButtonPress", "This event gets called whenever a button has been pressed on a motion controller. The first parameter indicates the ID of the button and the second indicates whether it's being pressed or is not being pressed (so released).", new Type[]
	{
		typeof(string),
		typeof(bool)
	})]
	public List<GenericRepresentation> e_onButtonPress;

	[NonSerialized]
	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	[ModdingEvent("onTwitchMessage", "This event gets called whenever a person has connected their Twitch account in the game and receives a message from a Twitch viewer during a live stream. The first parameter indicates the username of the person sending the message, the second parameter is the message it self.", new Type[]
	{
		typeof(string),
		typeof(string)
	})]
	public List<GenericRepresentation> e_onTwitchMessage;

	[NonSerialized]
	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	[ModdingEvent("onRoomEntered", "This event gets called whenever a player enters a room for the first time during a run. This will still be called for rooms that are the same but spawn more than once.", new Type[] { typeof(RoomCreator.RoomFile) })]
	public List<GenericRepresentation> e_onRoomEntered;

	[NonSerialized]
	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	[ModdingEvent("onPreObjectSpawn", "This event gets called whenever a prefab is about to be instantiated (spawned/created) but has not been spawned yet, this makes it possible to override the spawn. A note on this: You need to pre-define what objects you want to listen for as this would otherwise be very performance intensive. The first parameter is the prefab that is used but more importantly the second parameter is the override, the override may have already changed by the time it gets called in your code by other mods or the game it self. An override can be changed by you by simply returning a different prefab, if you do not intend to change the prefab please return the override. The third parameter is the location where the object will spawn and the fourth parameter is the rotation at which the object will spawn.", new Type[]
	{
		typeof(GameObject),
		typeof(GameObject),
		typeof(Vector3),
		typeof(Quaternion)
	})]
	public Dictionary<GameObject, List<GenericRepresentation>> e_onPreObjectSpawn;

	[NonSerialized]
	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	[ModdingEvent("onPostObjectSpawn", "This event gets called whenever a prefab has been instantiated (spawned/created). A note on this: You need to pre-define what objects you want to listen for as this would otherwise be very performance intensive. The first parameter tells you what the original prefab looks like and the second parameter gives you the actual game object that was spawned, which may or may not be the same as the prefab.", new Type[]
	{
		typeof(GameObject),
		typeof(GameObject)
	})]
	public Dictionary<GameObject, List<GenericRepresentation>> e_onPostObjectSpawn;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public ES3Settings e3Settings;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private GameObject _fogSphere;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static LOAD_BEHAVIOR AFTER_LOAD_BEHAVIOR;

	[Token(Token = "0x14000019")]
	public event OnGameHandlerInitialized GameHandlerInitialized
	{
		[Token(Token = "0x600087E")]
		[Address(RVA = "0x120AED0", Offset = "0x120AED0", VA = "0x120AED0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600087F")]
		[Address(RVA = "0x120AF70", Offset = "0x120AF70", VA = "0x120AF70")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event OnPlayerReferenceSet PlayerReferenceSet
	{
		[Token(Token = "0x6000880")]
		[Address(RVA = "0x120B010", Offset = "0x120B010", VA = "0x120B010")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000881")]
		[Address(RVA = "0x120B0B0", Offset = "0x120B0B0", VA = "0x120B0B0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event OnObjectsSpawned ObjectSpawned
	{
		[Token(Token = "0x6000882")]
		[Address(RVA = "0x120B150", Offset = "0x120B150", VA = "0x120B150")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000883")]
		[Address(RVA = "0x120B1F0", Offset = "0x120B1F0", VA = "0x120B1F0")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x120B290", Offset = "0x120B290", VA = "0x120B290")]
	public int GetGameVersion()
	{
		return default(int);
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x120B2E8", Offset = "0x120B2E8", VA = "0x120B2E8")]
	public string GetGameVersionString()
	{
		return null;
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x120B344", Offset = "0x120B344", VA = "0x120B344")]
	public string GetGameVersionString(int id)
	{
		return null;
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x120B3EC", Offset = "0x120B3EC", VA = "0x120B3EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x120B480", Offset = "0x120B480", VA = "0x120B480")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x120BD10", Offset = "0x120BD10", VA = "0x120BD10")]
	public void EndRunFadeout()
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x120BDA4", Offset = "0x120BDA4", VA = "0x120BDA4")]
	public int GetHandCountForItem(ItemBase itemBase)
	{
		return default(int);
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x120BE08", Offset = "0x120BE08", VA = "0x120BE08")]
	public void EndRun(bool removeSave = true)
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x120BED8", Offset = "0x120BED8", VA = "0x120BED8")]
	public void OnControllerSet(string _s)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x120BEDC", Offset = "0x120BEDC", VA = "0x120BEDC")]
	public bool IsVanillaRun()
	{
		return default(bool);
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x120BF04", Offset = "0x120BF04", VA = "0x120BF04")]
	public void ChangePlayerMoveSpeed(float val)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x1207C90", Offset = "0x1207C90", VA = "0x1207C90")]
	public void ShowMessageInWorld(string text, float duration = 2f, float popupSpeed = 6f)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x120C70C", Offset = "0x120C70C", VA = "0x120C70C")]
	public void Delete(GameObject g)
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x120C764", Offset = "0x120C764", VA = "0x120C764")]
	public GameObject GetObjectWithTag(string tag)
	{
		return null;
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x120C770", Offset = "0x120C770", VA = "0x120C770")]
	public void RefreshHomeBaseUIs()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x120C948", Offset = "0x120C948", VA = "0x120C948")]
	private bool EnsureUINotNull(object ui, string uiName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x12023E8", Offset = "0x12023E8", VA = "0x12023E8")]
	public void TeleportTo(Vector3 position, bool precision)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x120C9FC", Offset = "0x120C9FC", VA = "0x120C9FC")]
	public void FaceInDirectionCameraRigWithFade(float rotation, float fadeSpeed = 4f)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x120CB0C", Offset = "0x120CB0C", VA = "0x120CB0C")]
	public void RotateTowardsClosestSnapTurnAngle(float fadeSpeed = 4f)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x120CCB4", Offset = "0x120CCB4", VA = "0x120CCB4")]
	public void FaceInDirCameraRig(float _rotation)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x120CD5C", Offset = "0x120CD5C", VA = "0x120CD5C")]
	public void FaceInDir(float rot)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x120CE8C", Offset = "0x120CE8C", VA = "0x120CE8C")]
	public static object LoadValue(string name, object standard)
	{
		return null;
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x120CF0C", Offset = "0x120CF0C", VA = "0x120CF0C")]
	public static bool LoadBool(string name, bool standard)
	{
		return default(bool);
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x120CFA0", Offset = "0x120CFA0", VA = "0x120CFA0")]
	public static int LoadInt(string name, int standard)
	{
		return default(int);
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x120D034", Offset = "0x120D034", VA = "0x120D034")]
	public static string LoadString(string name, string standard)
	{
		return null;
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x120D0C8", Offset = "0x120D0C8", VA = "0x120D0C8")]
	public static void SaveBool(string name, bool val)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x120D15C", Offset = "0x120D15C", VA = "0x120D15C")]
	public static void SaveInt(string name, int val)
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x120D1F0", Offset = "0x120D1F0", VA = "0x120D1F0")]
	public static void SaveString(string name, string val)
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x120D284", Offset = "0x120D284", VA = "0x120D284")]
	public static void SaveAllValuesToFile()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x120D434", Offset = "0x120D434", VA = "0x120D434")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x120D480", Offset = "0x120D480", VA = "0x120D480")]
	public GameObject[] FireMultiProjectile(int amount, float degreesDiff, Transform source, Vector3 forward, GameObject projectilePrefab, Vector3 pos, Collider[] collsToIgnore, float speed, [Optional] ADSoundEffect shootingSound, float randXDegreeDiff = 0f)
	{
		return null;
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x120D83C", Offset = "0x120D83C", VA = "0x120D83C")]
	public GameObject GetObjectMapping(string s)
	{
		return null;
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x120D858", Offset = "0x120D858", VA = "0x120D858")]
	public GameObject DropItem(string _id, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x120DCB4", Offset = "0x120DCB4", VA = "0x120DCB4")]
	public GameObject[] DropItemFromTable(string table, Vector3 position, Vector3 dropOffset, int hash = 0)
	{
		return null;
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x1205ACC", Offset = "0x1205ACC", VA = "0x1205ACC")]
	public GameObject FireProjectile(Transform source, Vector3 forward, GameObject projectilePrefab, Vector3 pos, Collider[] collsToIgnore, float speed, [Optional] ADSoundEffect shootingSound, float maxDist = -1f)
	{
		return null;
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x120E9D8", Offset = "0x120E9D8", VA = "0x120E9D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x120EE74", Offset = "0x120EE74", VA = "0x120EE74")]
	[IteratorStateMachine(typeof(<TryRestartVR>d__170))]
	private IEnumerator TryRestartVR()
	{
		return null;
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x120EEFC", Offset = "0x120EEFC", VA = "0x120EEFC")]
	public GameObject SpawnObject(GameObject obj, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x120EF80", Offset = "0x120EF80", VA = "0x120EF80")]
	public GameObject SpawnObjectWithoutEvents(GameObject obj, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x1207B88", Offset = "0x1207B88", VA = "0x1207B88")]
	public GameObject SpawnObject(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x120797C", Offset = "0x120797C", VA = "0x120797C")]
	public GameObject[] SpawnObjects(string name, int amount, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x120F06C", Offset = "0x120F06C", VA = "0x120F06C")]
	public EnemyBase[] GetEnemiesInRadius(float radius, Vector3 center, bool onlyVisible = false)
	{
		return null;
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x120F554", Offset = "0x120F554", VA = "0x120F554")]
	public void CreateExplosion(float radius, int damage, float forceMultiplier, Transform t)
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x120FD18", Offset = "0x120FD18", VA = "0x120FD18")]
	public void CheckObjectForShadows(GameObject g)
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x120FE70", Offset = "0x120FE70", VA = "0x120FE70")]
	public GameObject QueueInstantiate(GameObject prefab, Transform parent, bool instantiateInWorldSpace)
	{
		return null;
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x120C060", Offset = "0x120C060", VA = "0x120C060")]
	public GameObject QueueInstantiate(GameObject prefab, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x1203C9C", Offset = "0x1203C9C", VA = "0x1203C9C")]
	public GameObject QueueInstantiate(GameObject prefab, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x1210528", Offset = "0x1210528", VA = "0x1210528")]
	public GameObject QueueInstantiate(GameObject prefab, Vector3 position, Quaternion rotation, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x120F830", Offset = "0x120F830", VA = "0x120F830")]
	public LivingBase[] GetLivingInRadius(float radius, Vector3 center, bool onlyVisible = false)
	{
		return null;
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x1210BF0", Offset = "0x1210BF0", VA = "0x1210BF0")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x121105C", Offset = "0x121105C", VA = "0x121105C")]
	public bool IsInMenu()
	{
		return default(bool);
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x12110A8", Offset = "0x12110A8", VA = "0x12110A8")]
	public void OnPausedResumePress()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x120B40C", Offset = "0x120B40C", VA = "0x120B40C")]
	[IteratorStateMachine(typeof(<OnStartup>d__186))]
	private IEnumerator OnStartup()
	{
		return null;
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x1211310", Offset = "0x1211310", VA = "0x1211310")]
	public UnityEngine.Object[] FindObjectsOfType(string _type)
	{
		return null;
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x12113D4", Offset = "0x12113D4", VA = "0x12113D4")]
	public UnityEngine.Object FindObjectOfType(string _type)
	{
		return null;
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x1211498", Offset = "0x1211498", VA = "0x1211498")]
	private void ControllerGripReleasedRight(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x1211768", Offset = "0x1211768", VA = "0x1211768")]
	private void ControllerGripReleasedLeft(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x12117B4", Offset = "0x12117B4", VA = "0x12117B4")]
	private void ControllerTriggerReleasedRight(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x1211800", Offset = "0x1211800", VA = "0x1211800")]
	private void ControllerTriggerReleasedLeft(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x121184C", Offset = "0x121184C", VA = "0x121184C")]
	private void ControllerButtonTwoReleasedRight(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x1211898", Offset = "0x1211898", VA = "0x1211898")]
	private void ControllerButtonTwoReleasedLeft(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x12118E4", Offset = "0x12118E4", VA = "0x12118E4")]
	private void ControllerButtonOneReleasedRight(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x1211930", Offset = "0x1211930", VA = "0x1211930")]
	private void ControllerButtonOneReleasedLeft(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x121197C", Offset = "0x121197C", VA = "0x121197C")]
	private void ControllerGripPressedRight(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x12119C8", Offset = "0x12119C8", VA = "0x12119C8")]
	private void ControllerGripPressedLeft(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x1211A14", Offset = "0x1211A14", VA = "0x1211A14")]
	private void ControllerTriggerPressedRight(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x1211A60", Offset = "0x1211A60", VA = "0x1211A60")]
	private void ControllerTriggerPressedLeft(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x1211AAC", Offset = "0x1211AAC", VA = "0x1211AAC")]
	private void ControllerButtonTwoPressedRight(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x1211AF8", Offset = "0x1211AF8", VA = "0x1211AF8")]
	private void ControllerButtonTwoPressedLeft(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x1211B44", Offset = "0x1211B44", VA = "0x1211B44")]
	private void ControllerButtonOnePressedRight(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x1211B90", Offset = "0x1211B90", VA = "0x1211B90")]
	private void ControllerButtonOnePressedLeft(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x12114E4", Offset = "0x12114E4", VA = "0x12114E4")]
	private void ExecuteButtonEvent(string _type, bool _pressed)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x1211BDC", Offset = "0x1211BDC", VA = "0x1211BDC")]
	public void ToggleShadowsForObjectsInScene(bool v)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x1211D58", Offset = "0x1211D58", VA = "0x1211D58")]
	[ContextMenu("Static Batch Test")]
	public void DebugTestStaticBatch()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x1211FC8", Offset = "0x1211FC8", VA = "0x1211FC8")]
	private void InputFocusAcquired()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x12120A0", Offset = "0x12120A0", VA = "0x12120A0")]
	private void InputFocusLost()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x1210CCC", Offset = "0x1210CCC", VA = "0x1210CCC")]
	private void ShowPauseScreen()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x1212184", Offset = "0x1212184", VA = "0x1212184")]
	public void SpawnHit(string dmg, Vector3 pos, ATTACKTYPE attacktype, bool critical = false, float timeToStay = 1f)
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x12122D4", Offset = "0x12122D4", VA = "0x12122D4")]
	public void DoHapticPulseWithMainUIHand(float strength = 1f, float duration = 0.07f, float pulseInterval = 0.01f)
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x12125B0", Offset = "0x12125B0", VA = "0x12125B0")]
	public void DoHapticPulseWithMainHand(float strength = 1f, float duration = 0.07f, float pulseInterval = 0.01f)
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x12122F0", Offset = "0x12122F0", VA = "0x12122F0")]
	public void DoHapticPulse(PlayerHand.HandType handType, float strength = 1f, float duration = 0.07f, float pulseInterval = 0.01f)
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x12126A0", Offset = "0x12126A0", VA = "0x12126A0")]
	public void RegisterToHighlightInfo(ItemBase item, bool left)
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x12126C8", Offset = "0x12126C8", VA = "0x12126C8")]
	public void UnregisterFromHighlightInfo(ItemBase item, bool left)
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x12126F0", Offset = "0x12126F0", VA = "0x12126F0")]
	public void GenerateNewDungeon(bool reset, Vector3 offset, int seed, float _yRotationLastFloor)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x1212860", Offset = "0x1212860", VA = "0x1212860")]
	public WeaponComboInterpreter.WeaponComboDiskRepresentation GetPlayerWeaponCombo()
	{
		return null;
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x12127A8", Offset = "0x12127A8", VA = "0x12127A8")]
	[IteratorStateMachine(typeof(<GenerationRoutine>d__219))]
	private IEnumerator GenerationRoutine(bool reset, Vector3 offset, int seed, float _yRotationLastFloor)
	{
		return null;
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x12128A4", Offset = "0x12128A4", VA = "0x12128A4")]
	public void RegisterEnemy(EnemyBase _e)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x1212954", Offset = "0x1212954", VA = "0x1212954")]
	public void UnregisterEnemy(EnemyBase _e)
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x12129AC", Offset = "0x12129AC", VA = "0x12129AC")]
	public void RegisterLiving(LivingBase _l)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x1212A5C", Offset = "0x1212A5C", VA = "0x1212A5C")]
	public void UnregisterLiving(LivingBase _l)
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x1212AB4", Offset = "0x1212AB4", VA = "0x1212AB4")]
	public void SetFogDistance(float scale)
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x1212BE0", Offset = "0x1212BE0", VA = "0x1212BE0")]
	public float GetFogDistance()
	{
		return default(float);
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x1212C08", Offset = "0x1212C08", VA = "0x1212C08")]
	public void SetAmbientLight(Color c)
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x1212C10", Offset = "0x1212C10", VA = "0x1212C10")]
	public Color GetAmbientLight()
	{
		return default(Color);
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x1212C18", Offset = "0x1212C18", VA = "0x1212C18")]
	public GameHandler()
	{
	}
}
[Token(Token = "0x20001A8")]
public class AttachToCeilingDuringGen : MonoBehaviour
{
	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 fruOffset;

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x1219630", Offset = "0x1219630", VA = "0x1219630")]
	private void Start()
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x1219634", Offset = "0x1219634", VA = "0x1219634")]
	public void DoAttach()
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x1219938", Offset = "0x1219938", VA = "0x1219938")]
	public AttachToCeilingDuringGen()
	{
	}
}
[Token(Token = "0x20001A9")]
public class BossRoom : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001AA")]
	public class BossSpawnInfo
	{
		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject[] bossObjsToSpawn;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CURRENT_FLOOR forFloor;

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x1219DDC", Offset = "0x1219DDC", VA = "0x1219DDC")]
		public BossSpawnInfo()
		{
		}
	}

	[Token(Token = "0x20001AB")]
	public delegate void BossFightStarted();

	[Token(Token = "0x20001AC")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameHandler _g;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RoomCreator.RoomFile _roomWherePlayerIs;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<MonolithDoor, bool> <>9__3;

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x1219EF0", Offset = "0x1219EF0", VA = "0x1219EF0")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x1219EF8", Offset = "0x1219EF8", VA = "0x1219EF8")]
		internal bool <BossRoutine>b__0(AudioManager.DungeonMusicInfo x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x1219F24", Offset = "0x1219F24", VA = "0x1219F24")]
		internal bool <BossRoutine>b__3(MonolithDoor x)
		{
			return default(bool);
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x121A200", Offset = "0x121A200", VA = "0x121A200")]
		internal bool <BossRoutine>b__1(BossSpawnInfo x)
		{
			return default(bool);
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x121A234", Offset = "0x121A234", VA = "0x121A234")]
		internal bool <BossRoutine>b__2(WorldGeneratorEvolved x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001AD")]
	[CompilerGenerated]
	private sealed class <BossRoutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BossRoom <>4__this;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass9_0 <>8__1;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MonolithDoor <_monolithDoor>5__2;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject <_bossObject>5__3;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LivingBase <_bossLiving>5__4;

		[Token(Token = "0x17000124")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600093E")]
			[Address(RVA = "0x121B428", Offset = "0x121B428", VA = "0x121B428", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000940")]
			[Address(RVA = "0x121B470", Offset = "0x121B470", VA = "0x121B470", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x1219C60", Offset = "0x1219C60", VA = "0x1219C60")]
		[DebuggerHidden]
		public <BossRoutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x121A260", Offset = "0x121A260", VA = "0x121A260", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x121A264", Offset = "0x121A264", VA = "0x121A264", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x121B430", Offset = "0x121B430", VA = "0x121B430", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ADSoundEffect bossAnnounceSound;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BossSpawnInfo[] bossSpawnInfos;

	[Token(Token = "0x1400001C")]
	public event BossFightStarted OnBossStart
	{
		[Token(Token = "0x600092A")]
		[Address(RVA = "0x1219940", Offset = "0x1219940", VA = "0x1219940")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x600092B")]
		[Address(RVA = "0x12199DC", Offset = "0x12199DC", VA = "0x12199DC")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x1219A78", Offset = "0x1219A78", VA = "0x1219A78")]
	private void Start()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x1219B4C", Offset = "0x1219B4C", VA = "0x1219B4C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x1219BEC", Offset = "0x1219BEC", VA = "0x1219BEC")]
	[IteratorStateMachine(typeof(<BossRoutine>d__9))]
	private IEnumerator BossRoutine()
	{
		return null;
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x1219C88", Offset = "0x1219C88", VA = "0x1219C88")]
	private CURRENT_FLOOR NextTier(CURRENT_FLOOR floor, bool path1)
	{
		return default(CURRENT_FLOOR);
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x1219DD4", Offset = "0x1219DD4", VA = "0x1219DD4")]
	public BossRoom()
	{
	}
}
[Token(Token = "0x20001AE")]
public class BossTeleportSpawnAction : MonoBehaviour
{
	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RoomCreator.RoomFile currentRoom;

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x121B478", Offset = "0x121B478", VA = "0x121B478")]
	private void Start()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x121B694", Offset = "0x121B694", VA = "0x121B694")]
	public BossTeleportSpawnAction()
	{
	}
}
[Token(Token = "0x20001AF")]
public class CeilingDecorator : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001B0")]
	public class DecorateInfo
	{
		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string identifier;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Basic Config")]
		public float amountPer4Tile;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float questMultiplier;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Range(0f, 1f)]
		public float randomness;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 maxDistFromCenter;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 minDistFromCenter;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject[] vegetationObjects;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 extraRot;

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x121B894", Offset = "0x121B894", VA = "0x121B894")]
		public DecorateInfo()
		{
		}
	}

	[Token(Token = "0x20001B1")]
	[CompilerGenerated]
	private sealed class <Decorate>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<(Transform _t, int clusterId)> _ceilings;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CeilingDecorator <>4__this;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WorldGeneratorEvolved _wge;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <_loopCounter>5__2;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <i>5__3;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private (Transform _t, int clusterId) <_ceiling>5__4;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform <_c>5__5;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 <_middleWorldPos>5__6;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int <_infoIndex>5__7;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private DecorateInfo[] <>7__wrap7;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int <>7__wrap8;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private DecorateInfo <_vege>5__10;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool <_hasValidPosition>5__11;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int <_amountToPlace>5__12;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int <a>5__13;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 <_proposedPosition>5__14;

		[Token(Token = "0x17000126")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600094B")]
			[Address(RVA = "0x121C1F8", Offset = "0x121C1F8", VA = "0x121C1F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000127")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600094D")]
			[Address(RVA = "0x121C240", Offset = "0x121C240", VA = "0x121C240", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x121B864", Offset = "0x121B864", VA = "0x121B864")]
		[DebuggerHidden]
		public <Decorate>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x121B8A4", Offset = "0x121B8A4", VA = "0x121B8A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x121B8A8", Offset = "0x121B8A8", VA = "0x121B8A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x121C200", Offset = "0x121C200", VA = "0x121C200", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private System.Random decoratorRandom;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DecorateInfo[] decorationInfos;

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x121B69C", Offset = "0x121B69C", VA = "0x121B69C")]
	private Vector3 GetNewProposedPosition(Vector3 _middleWorldPos, Vector3 _minDistFromCenter, Vector3 _maxDistFromCenter)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x121B788", Offset = "0x121B788", VA = "0x121B788")]
	private float RandomWithExclusion(float min, float max, float minExclusive, float maxExclusive)
	{
		return default(float);
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x121B7C0", Offset = "0x121B7C0", VA = "0x121B7C0")]
	[IteratorStateMachine(typeof(<Decorate>d__5))]
	[ContextMenu("DECORATE")]
	public IEnumerator Decorate(List<(Transform _t, int clusterId)> _ceilings, WorldGeneratorEvolved _wge)
	{
		return null;
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x121B88C", Offset = "0x121B88C", VA = "0x121B88C")]
	public CeilingDecorator()
	{
	}
}
[Token(Token = "0x20001B2")]
public class ChanceToDestroyOnSpawn : MonoBehaviour
{
	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	public float probabilityToStay;

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x121C248", Offset = "0x121C248", VA = "0x121C248")]
	private void Start()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x121C24C", Offset = "0x121C24C", VA = "0x121C24C")]
	public void Execute()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x121C2FC", Offset = "0x121C2FC", VA = "0x121C2FC")]
	public ChanceToDestroyOnSpawn()
	{
	}
}
[Token(Token = "0x20001B3")]
public class ChangeMaterialOnStart : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001B4")]
	public class Overrides
	{
		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CURRENT_FLOOR floor;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material overrideMat;

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x121C49C", Offset = "0x121C49C", VA = "0x121C49C")]
		public Overrides()
		{
		}
	}

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer[] renderersToAffect;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Overrides[] overrides;

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x121C304", Offset = "0x121C304", VA = "0x121C304")]
	private void Start()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x121C494", Offset = "0x121C494", VA = "0x121C494")]
	public ChangeMaterialOnStart()
	{
	}
}
[Token(Token = "0x20001B6")]
public class CollapsedWallStartOfDungeon : MonoBehaviour
{
	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer _mRend;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshCollider _mColl;

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x121C594", Offset = "0x121C594", VA = "0x121C594")]
	private void Start()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x121C64C", Offset = "0x121C64C", VA = "0x121C64C")]
	public void EnableCollapsedWall(bool playSound = true)
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x121C788", Offset = "0x121C788", VA = "0x121C788")]
	public CollapsedWallStartOfDungeon()
	{
	}
}
[Token(Token = "0x20001B7")]
public class ConsiderDuringWallDeco : MonoBehaviour
{
	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IEnumerable<Collider> _colls;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RoomCreator.RoomFile _roomAt;

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x121C790", Offset = "0x121C790", VA = "0x121C790")]
	private void Start()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x121CF0C", Offset = "0x121CF0C", VA = "0x121CF0C")]
	public ConsiderDuringWallDeco()
	{
	}
}
[Token(Token = "0x20001B9")]
public class CustomData : MonoBehaviour
{
	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CustomDataStringDefault[] stringDefaults;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<string, object> customData;

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x121D014", Offset = "0x121D014", VA = "0x121D014")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x121D01C", Offset = "0x121D01C", VA = "0x121D01C")]
	private void InitializeDefaults(CustomDataDefaultHolder[] values)
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x121D0DC", Offset = "0x121D0DC", VA = "0x121D0DC")]
	public CustomData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BA")]
public abstract class CustomDataDefaultHolder
{
	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string key;

	[Token(Token = "0x6000962")]
	public abstract object GetDataValue();

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x121D164", Offset = "0x121D164", VA = "0x121D164")]
	protected CustomDataDefaultHolder()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BB")]
public class CustomDataStringDefault : CustomDataDefaultHolder
{
	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string dataValue;

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x121D16C", Offset = "0x121D16C", VA = "0x121D16C", Slot = "4")]
	public override object GetDataValue()
	{
		return null;
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x121D174", Offset = "0x121D174", VA = "0x121D174")]
	public CustomDataStringDefault()
	{
	}
}
[Token(Token = "0x20001BC")]
public abstract class CustomGenerator : MonoBehaviour
{
	[Token(Token = "0x6000966")]
	public abstract void Generate(WorldGeneratorEvolved wge);

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x121D17C", Offset = "0x121D17C", VA = "0x121D17C")]
	protected CustomGenerator()
	{
	}
}
[Token(Token = "0x20001BD")]
[Obsolete]
public class CustomGeneratorVacantArcs : CustomGenerator
{
	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject arcObject;

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x121D184", Offset = "0x121D184", VA = "0x121D184", Slot = "4")]
	public override void Generate(WorldGeneratorEvolved wge)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x121D3AC", Offset = "0x121D3AC", VA = "0x121D3AC")]
	private void SpawnArc(float a, float b)
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x121D4B4", Offset = "0x121D4B4", VA = "0x121D4B4")]
	public CustomGeneratorVacantArcs()
	{
	}
}
[Token(Token = "0x20001BE")]
public class DebugSeedSearcher : MonoBehaviour
{
	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugSeedSearcher instance;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool increment;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int DEBUG_currentSeed;

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x121D4BC", Offset = "0x121D4BC", VA = "0x121D4BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x121D5CC", Offset = "0x121D5CC", VA = "0x121D5CC")]
	[ContextMenu("Start Search for broken seeds")]
	public void DEBUG_StartSearchForBrokenSeeds()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x121D660", Offset = "0x121D660", VA = "0x121D660")]
	public DebugSeedSearcher()
	{
	}
}
[Token(Token = "0x20001C3")]
public class DontRefreshDoor : MonoBehaviour
{
	[Token(Token = "0x600097C")]
	[Address(RVA = "0x121F7EC", Offset = "0x121F7EC", VA = "0x121F7EC")]
	public DontRefreshDoor()
	{
	}
}
[Token(Token = "0x20001C4")]
public enum DOORTYPES
{
	[Token(Token = "0x40008F2")]
	DEFAULT,
	[Token(Token = "0x40008F3")]
	SHOP,
	[Token(Token = "0x40008F4")]
	BOSS,
	[Token(Token = "0x40008F5")]
	SECRET
}
[Token(Token = "0x20001C5")]
public enum DOORDIRECTION
{
	[Token(Token = "0x40008F7")]
	NORTH,
	[Token(Token = "0x40008F8")]
	EAST,
	[Token(Token = "0x40008F9")]
	SOUTH,
	[Token(Token = "0x40008FA")]
	WEST
}
[Token(Token = "0x20001C6")]
public class Door : MonoBehaviour
{
	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DOORTYPES doortype;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public DOORDIRECTION orientation;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject noCorridorWallObj;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _hasConnection;

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x121F7F4", Offset = "0x121F7F4", VA = "0x121F7F4")]
	public void CalcDirection(Bounds b)
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x121F954", Offset = "0x121F954", VA = "0x121F954")]
	public void CheckForCloseWall(GameObject[] _allComponents)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x121FC50", Offset = "0x121FC50", VA = "0x121FC50")]
	public Door()
	{
	}
}
[Token(Token = "0x20001C7")]
public class DoorIngameObj : MonoBehaviour
{
	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DOORTYPES doortype;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh closedMesh;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mesh openedMesh;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject doorObj;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public DoorPropRoomActivator doorActivator;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Collider closedCollider;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MeshFilter meshFilter;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("SetActiveOnClose")]
	public GameObject[] setActiveOnClose;

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x121FC58", Offset = "0x121FC58", VA = "0x121FC58")]
	public void OnSpawnFromGenerator()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x121FE50", Offset = "0x121FE50", VA = "0x121FE50")]
	public void CloseDoor()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x121FF08", Offset = "0x121FF08", VA = "0x121FF08")]
	public void OpenDoor()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x121FFC0", Offset = "0x121FFC0", VA = "0x121FFC0")]
	public DoorIngameObj()
	{
	}
}
[Token(Token = "0x20001C8")]
public class DoorWallParent : MonoBehaviour
{
	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject doorObj;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject wallHeightObj;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RoomCreator.RoomFile.TileInRoom tile;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RoomCreator.RoomFile correspondingRoom;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] flagArray;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int x;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int y;

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x121FFC8", Offset = "0x121FFC8", VA = "0x121FFC8")]
	public void RefreshDoor()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x121FFCC", Offset = "0x121FFCC", VA = "0x121FFCC")]
	public void DeleteChildren()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x122008C", Offset = "0x122008C", VA = "0x122008C")]
	public DoorWallParent()
	{
	}
}
[Token(Token = "0x20001C9")]
public class EnemySpawnPosition : MonoBehaviour
{
	[Token(Token = "0x20001CA")]
	[CompilerGenerated]
	private sealed class <EnemySpawnAnimation>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemySpawnPosition <>4__this;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject enemy;

		[Token(Token = "0x1700012A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0x1220C88", Offset = "0x1220C88", VA = "0x1220C88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000995")]
			[Address(RVA = "0x1220CD0", Offset = "0x1220CD0", VA = "0x1220CD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x12204EC", Offset = "0x12204EC", VA = "0x12204EC")]
		[DebuggerHidden]
		public <EnemySpawnAnimation>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x1220810", Offset = "0x1220810", VA = "0x1220810", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x1220814", Offset = "0x1220814", VA = "0x1220814", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x1220C90", Offset = "0x1220C90", VA = "0x1220C90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001CB")]
	[CompilerGenerated]
	private sealed class <CheckForSpawn>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnemySpawnPosition <>4__this;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RoomCreator.RoomFile <_thisRoom>5__2;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EnemyRegistry.EnemyRegistryEntry.EnemyPossibility <_enemyToSpawn>5__3;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RoomCreator.RoomFile.TileInRoom <_currentTile>5__4;

		[Token(Token = "0x1700012C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000999")]
			[Address(RVA = "0x122135C", Offset = "0x122135C", VA = "0x122135C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600099B")]
			[Address(RVA = "0x12213A4", Offset = "0x12213A4", VA = "0x12213A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x1220728", Offset = "0x1220728", VA = "0x1220728")]
		[DebuggerHidden]
		public <CheckForSpawn>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x1220CD8", Offset = "0x1220CD8", VA = "0x1220CD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x1220CDC", Offset = "0x1220CDC", VA = "0x1220CDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0x1221364", Offset = "0x1221364", VA = "0x1221364", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public int spawnOption;

	[NonSerialized]
	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float distanceToCheckSpawn;

	[NonSerialized]
	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<EnemyRegistry.EnemyRegistryEntry> enemyEntries;

	[NonSerialized]
	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RoomCreator.RoomFile correspondingRoom;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem _ps;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator _animo;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _hasSpawnedEnemy;

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x1220094", Offset = "0x1220094", VA = "0x1220094")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x122013C", Offset = "0x122013C", VA = "0x122013C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x1220354", Offset = "0x1220354", VA = "0x1220354")]
	public void UpdateModderInfos(EnemyRegistry.EnemyRegistryEntry[] _entries)
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x122045C", Offset = "0x122045C", VA = "0x122045C")]
	[IteratorStateMachine(typeof(<EnemySpawnAnimation>d__9))]
	private IEnumerator EnemySpawnAnimation(GameObject enemy)
	{
		return null;
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x1220514", Offset = "0x1220514", VA = "0x1220514")]
	public void SetParticleSystem(int i)
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x1220540", Offset = "0x1220540", VA = "0x1220540")]
	public GameObject SpawnEnemy(GameObject _enemyToSpawn, bool doAnimation = true)
	{
		return null;
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x12202E0", Offset = "0x12202E0", VA = "0x12202E0")]
	[IteratorStateMachine(typeof(<CheckForSpawn>d__13))]
	private IEnumerator CheckForSpawn()
	{
		return null;
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x1220750", Offset = "0x1220750", VA = "0x1220750")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x1220780", Offset = "0x1220780", VA = "0x1220780")]
	public EnemySpawnPosition()
	{
	}
}
[Token(Token = "0x20001CC")]
public class ExtraGenerationInfos : MonoBehaviour
{
	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RoomMapping.RoomMappingEntry belongsToRoom;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] flags;

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x12213AC", Offset = "0x12213AC", VA = "0x12213AC")]
	public ExtraGenerationInfos()
	{
	}
}
[Token(Token = "0x20001CD")]
public class FloorCompleteHandler : MonoBehaviour
{
	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public GameObject openPart;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject closedPart;

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x12213B4", Offset = "0x12213B4", VA = "0x12213B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x12213EC", Offset = "0x12213EC", VA = "0x12213EC")]
	public void SetOpen(bool _open)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x1221434", Offset = "0x1221434", VA = "0x1221434")]
	public FloorCompleteHandler()
	{
	}
}
[Token(Token = "0x20001CE")]
public class GlobalProgressChecker : MonoBehaviour
{
	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string saveId;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space(10f)]
	public GameObject objToDisableEnable;

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x122143C", Offset = "0x122143C", VA = "0x122143C")]
	public void ApplyProgressCheck()
	{
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x1221520", Offset = "0x1221520", VA = "0x1221520")]
	public GlobalProgressChecker()
	{
	}
}
[Token(Token = "0x20001CF")]
public class IgnoreVoidClearer : MonoBehaviour
{
	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x1221528", Offset = "0x1221528", VA = "0x1221528")]
	public IgnoreVoidClearer()
	{
	}
}
[Token(Token = "0x20001D0")]
public class IntelligentPath : MonoBehaviour
{
	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh pathStraight;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh pathStraightRotated;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mesh pathEnd;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Mesh path3Way;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Mesh path4Way;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Mesh pathCorner;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Mesh pathNoNbrs;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshFilter _meshF;

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x1221530", Offset = "0x1221530", VA = "0x1221530")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x12215D4", Offset = "0x12215D4", VA = "0x12215D4")]
	public void RefreshPath(WorldGeneratorEvolved _wge)
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x1221F7C", Offset = "0x1221F7C", VA = "0x1221F7C")]
	public IntelligentPath()
	{
	}
}
[Token(Token = "0x20001D2")]
public class ItemSpawn : MonoBehaviour
{
	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x1222088", Offset = "0x1222088", VA = "0x1222088")]
	private void Start()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x122211C", Offset = "0x122211C", VA = "0x122211C")]
	public ItemSpawn()
	{
	}
}
[Token(Token = "0x20001D4")]
public class ItemSpawnHelper : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001D5")]
	public class SpawnHelpEntry
	{
		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ItemBase objToSpawn;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float probability;

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x12223E4", Offset = "0x12223E4", VA = "0x12223E4")]
		public SpawnHelpEntry()
		{
		}
	}

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpawnHelpEntry[] spawnEntries;

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x1222378", Offset = "0x1222378", VA = "0x1222378")]
	public ItemBase GetRandomObjectToSpawn()
	{
		return null;
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x12223DC", Offset = "0x12223DC", VA = "0x12223DC")]
	public ItemSpawnHelper()
	{
	}
}
[Token(Token = "0x20001D6")]
public class MagicBarrier : MonoBehaviour
{
	[Token(Token = "0x20001D7")]
	[CompilerGenerated]
	private sealed class <ChallengeRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MagicBarrier <>4__this;

		[Token(Token = "0x17000130")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009C0")]
			[Address(RVA = "0x1222AD0", Offset = "0x1222AD0", VA = "0x1222AD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009C2")]
			[Address(RVA = "0x1222B18", Offset = "0x1222B18", VA = "0x1222B18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x1222708", Offset = "0x1222708", VA = "0x1222708")]
		[DebuggerHidden]
		public <ChallengeRoutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x12229A8", Offset = "0x12229A8", VA = "0x12229A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x12229AC", Offset = "0x12229AC", VA = "0x12229AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x1222AD8", Offset = "0x1222AD8", VA = "0x1222AD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject wall;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject instantBlockade;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator _animo;

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x12223EC", Offset = "0x12223EC", VA = "0x12223EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x12225CC", Offset = "0x12225CC", VA = "0x12225CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x122268C", Offset = "0x122268C", VA = "0x122268C")]
	private void PlayerLiving_RoomEntered(RoomCreator.RoomFile _r)
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x1222558", Offset = "0x1222558", VA = "0x1222558")]
	[IteratorStateMachine(typeof(<ChallengeRoutine>d__6))]
	private IEnumerator ChallengeRoutine()
	{
		return null;
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x1222730", Offset = "0x1222730", VA = "0x1222730")]
	public void RaiseBarrier()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x1222818", Offset = "0x1222818", VA = "0x1222818")]
	public void LowerBarrier()
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x1222978", Offset = "0x1222978", VA = "0x1222978")]
	public MagicBarrier()
	{
	}
}
[Token(Token = "0x20001D9")]
public class MaterialOnGenerationChange : MonoBehaviour
{
	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isParticleSystem;

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x1222C34", Offset = "0x1222C34", VA = "0x1222C34")]
	private void Start()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x1222F64", Offset = "0x1222F64", VA = "0x1222F64")]
	public MaterialOnGenerationChange()
	{
	}
}
[Token(Token = "0x20001DA")]
public class MeshOnGenerationChange : MonoBehaviour
{
	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CURRENT_FLOOR floorToChangeOn;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh mesh;

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x1222F6C", Offset = "0x1222F6C", VA = "0x1222F6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x1222FD8", Offset = "0x1222FD8", VA = "0x1222FD8")]
	public void ChangeMesh(WorldGeneratorEvolved wge)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x1223058", Offset = "0x1223058", VA = "0x1223058")]
	public MeshOnGenerationChange()
	{
	}
}
[Token(Token = "0x20001DB")]
public class MonolithDoor : MonoBehaviour
{
	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animo;

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x1223060", Offset = "0x1223060", VA = "0x1223060")]
	private void Start()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x121B2E0", Offset = "0x121B2E0", VA = "0x121B2E0")]
	public void OpenMonolithDoor()
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x12230B8", Offset = "0x12230B8", VA = "0x12230B8")]
	public MonolithDoor()
	{
	}
}
[Token(Token = "0x20001DC")]
public class ParticleMaterialOnGenerationChange : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001DD")]
	public class ChangeEntry
	{
		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CURRENT_FLOOR floor;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[ColorUsage(true, true)]
		public Color colorToChangeTo;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material materialChange;

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x1223414", Offset = "0x1223414", VA = "0x1223414")]
		public ChangeEntry()
		{
		}
	}

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	public float colorVariation;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ChangeEntry[] changeEntries;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem _ps;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystemRenderer _psr;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.MainModule _psMain;

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x12230C0", Offset = "0x12230C0", VA = "0x12230C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x1223260", Offset = "0x1223260", VA = "0x1223260")]
	public void UpdateMaterialColor(CURRENT_FLOOR _floor)
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x122340C", Offset = "0x122340C", VA = "0x122340C")]
	public ParticleMaterialOnGenerationChange()
	{
	}
}
[Token(Token = "0x20001DE")]
public class ProceduralWallGenerator : MonoBehaviour
{
	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2Int desiredDimensions;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 uvStartsBottom;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 uvStartsMiddle;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 uvStartsTop;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform ambientOcclusion;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BoxCollider boxCollider;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MeshFilter meshFilter;

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x122341C", Offset = "0x122341C", VA = "0x122341C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x1223424", Offset = "0x1223424", VA = "0x1223424")]
	private void SetWallMesh(Vector2Int dims)
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x122351C", Offset = "0x122351C", VA = "0x122351C")]
	[ContextMenu("Test")]
	private void TestGen()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x1223524", Offset = "0x1223524", VA = "0x1223524")]
	public ProceduralWallGenerator()
	{
	}
}
[Token(Token = "0x20001DF")]
public class PushBackPlayer : MonoBehaviour
{
	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LivingBase objToWatch;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float pushbackFactor;

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x122352C", Offset = "0x122352C", VA = "0x122352C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x12235B8", Offset = "0x12235B8", VA = "0x12235B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x1223644", Offset = "0x1223644", VA = "0x1223644")]
	private void ObjToWatch_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x1223668", Offset = "0x1223668", VA = "0x1223668")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x12237EC", Offset = "0x12237EC", VA = "0x12237EC")]
	public PushBackPlayer()
	{
	}
}
[Token(Token = "0x20001E0")]
public class RewardOnRoomClear : MonoBehaviour
{
	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x12237FC", Offset = "0x12237FC", VA = "0x12237FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x1223890", Offset = "0x1223890", VA = "0x1223890")]
	public RewardOnRoomClear()
	{
	}
}
[Token(Token = "0x20001E2")]
public class RoomComponent : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001E3")]
	public struct MayDelete
	{
		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[Range(0f, 1f)]
		public float probToStay;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject[] objs;
	}

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public Transform startConnectPos;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] nextConnectPos;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	public float probability;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MayDelete[] mayDeletes;

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x1223BD8", Offset = "0x1223BD8", VA = "0x1223BD8")]
	[ContextMenu("Parent Hierarchy")]
	public void PutEvFromHierInComp()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x1223DE8", Offset = "0x1223DE8", VA = "0x1223DE8")]
	public RoomComponent()
	{
	}
}
[Token(Token = "0x20001E4")]
public class RoomGenPosInfo : MonoBehaviour
{
	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float rotateBy;

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x1223DF8", Offset = "0x1223DF8", VA = "0x1223DF8")]
	public RoomGenPosInfo()
	{
	}
}
[Token(Token = "0x20001E5")]
public class RoomMapping : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001E6")]
	public class RoomMappingEntry
	{
		[Serializable]
		[Token(Token = "0x20001E7")]
		public class Variation
		{
			[Token(Token = "0x4000963")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string id;

			[Token(Token = "0x4000964")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[Range(0f, 1f)]
			public float probability;

			[Token(Token = "0x60009F0")]
			[Address(RVA = "0x1224204", Offset = "0x1224204", VA = "0x1224204")]
			public Variation()
			{
			}
		}

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string identifier;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool spawnWallspace;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Variation[] variations;

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x1223E88", Offset = "0x1223E88", VA = "0x1223E88")]
		public Variation GetVariation(string _id)
		{
			return null;
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x1223F74", Offset = "0x1223F74", VA = "0x1223F74")]
		public Variation GetWeightedVariation(System.Random generatorRandom, WorldGeneratorEvolved _wge, int _try = 0)
		{
			return null;
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x1224214", Offset = "0x1224214", VA = "0x1224214")]
		public RoomMappingEntry()
		{
		}
	}

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HashSet<(string type, string variant)> roomVariantsInGenerator;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RoomMappingEntry[] roomMappingEntries;

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x1223E00", Offset = "0x1223E00", VA = "0x1223E00")]
	public RoomMappingEntry GetEntry(string identifier)
	{
		return null;
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x1223E80", Offset = "0x1223E80", VA = "0x1223E80")]
	public RoomMapping()
	{
	}
}
[Token(Token = "0x20001E9")]
public class SamePositionChecker : MonoBehaviour
{
	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x122425C", Offset = "0x122425C", VA = "0x122425C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x1224344", Offset = "0x1224344", VA = "0x1224344")]
	public SamePositionChecker()
	{
	}
}
[Token(Token = "0x20001EA")]
public class SetActiveOnFloor : MonoBehaviour
{
	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CURRENT_FLOOR[] floorsToSetActiveOn;

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x122434C", Offset = "0x122434C", VA = "0x122434C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x12243FC", Offset = "0x12243FC", VA = "0x12243FC")]
	public SetActiveOnFloor()
	{
	}
}
[Token(Token = "0x20001EB")]
public class SetParticleColor : MonoBehaviour
{
	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	public float colorVariation;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[ColorUsage(true, true)]
	public Color color;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem _ps;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.MainModule _psMain;

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x1224404", Offset = "0x1224404", VA = "0x1224404")]
	[ContextMenu("Apply")]
	private void Apply()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x1224550", Offset = "0x1224550", VA = "0x1224550")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x1224554", Offset = "0x1224554", VA = "0x1224554")]
	public SetParticleColor()
	{
	}
}
[Token(Token = "0x20001EC")]
public class SpawnEntranceDungeon : MonoBehaviour
{
	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x122455C", Offset = "0x122455C", VA = "0x122455C")]
	public SpawnEntranceDungeon()
	{
	}
}
[Token(Token = "0x20001ED")]
public class SpawnFoodAfterBoss : MonoBehaviour
{
	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x1224564", Offset = "0x1224564", VA = "0x1224564")]
	private void Start()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x1224A14", Offset = "0x1224A14", VA = "0x1224A14")]
	public SpawnFoodAfterBoss()
	{
	}
}
[Token(Token = "0x20001EE")]
public class SpawnJournalPageOnFirstDungeonEncounter : MonoBehaviour
{
	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x1224A1C", Offset = "0x1224A1C", VA = "0x1224A1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x1224DA8", Offset = "0x1224DA8", VA = "0x1224DA8")]
	public SpawnJournalPageOnFirstDungeonEncounter()
	{
	}
}
[Token(Token = "0x20001EF")]
public class SpawnRandomFromSelection : MonoBehaviour
{
	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float extraRotation;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] randomObjs;

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x1224DB0", Offset = "0x1224DB0", VA = "0x1224DB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x1225050", Offset = "0x1225050", VA = "0x1225050")]
	public SpawnRandomFromSelection()
	{
	}
}
[Token(Token = "0x20001F0")]
public class StairTile : MonoBehaviour
{
	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject baseObj;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cornerObj;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject open3Obj;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject flatObj;

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x1225058", Offset = "0x1225058", VA = "0x1225058")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x12250C4", Offset = "0x12250C4", VA = "0x12250C4")]
	public void InitStair(WorldGeneratorEvolved _wge)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x122539C", Offset = "0x122539C", VA = "0x122539C")]
	public StairTile()
	{
	}
}
[Token(Token = "0x20001F1")]
[Obsolete]
public class StartRoomItemSpawn : MonoBehaviour
{
	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objToWatch;

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x12253A4", Offset = "0x12253A4", VA = "0x12253A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x12253A8", Offset = "0x12253A8", VA = "0x12253A8")]
	public StartRoomItemSpawn()
	{
	}
}
[Token(Token = "0x20001F2")]
public class TextureVariation : MonoBehaviour
{
	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int amountOfVariations;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int offsetX;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int textureSize;

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x12253B0", Offset = "0x12253B0", VA = "0x12253B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x12253B4", Offset = "0x12253B4", VA = "0x12253B4")]
	public void ApplyRandomOffset()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x122549C", Offset = "0x122549C", VA = "0x122549C")]
	public TextureVariation()
	{
	}
}
[Token(Token = "0x20001F3")]
public class Vegetater : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001F4")]
	public class VegetateInfo
	{
		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string identifier;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ignoreOnLowGraphics;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("Basic Config")]
		public float amountPer4Tile;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float questMultiplier;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(0f, 1f)]
		public float randomness;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string needsFlag;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 maxDistFromCenter;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 minDistFromCenter;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] vegetationObjects;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool checkCollisions;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool preventSpawnOnChinaVersion;

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x12256D8", Offset = "0x12256D8", VA = "0x12256D8")]
		public VegetateInfo()
		{
		}
	}

	[Token(Token = "0x20001F5")]
	[CompilerGenerated]
	private sealed class <Vegetate>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldGeneratorEvolved _wge;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<(Transform _t, int clusterId)> _ground;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vegetater <>4__this;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <_loopCounter>5__2;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <i>5__3;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private (Transform _t, int clusterId) <_entry>5__4;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform <_g>5__5;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 <_tileSize>5__6;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 <_middleWorldPos>5__7;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RoomCreator.RoomFile <_roomAt>5__8;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int <_infoIndex>5__9;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private VegetateInfo[] <>7__wrap9;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int <>7__wrap10;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private VegetateInfo <_vege>5__12;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int <_amountToPlace>5__13;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int <a>5__14;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 <_proposedPosition>5__15;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GameObject <_obj>5__16;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Collider <_objColl>5__17;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<Collider> <_collisionChecks>5__18;

		[Token(Token = "0x17000136")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A12")]
			[Address(RVA = "0x1226380", Offset = "0x1226380", VA = "0x1226380", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A14")]
			[Address(RVA = "0x12263C8", Offset = "0x12263C8", VA = "0x12263C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x1225694", Offset = "0x1225694", VA = "0x1225694")]
		[DebuggerHidden]
		public <Vegetate>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x12256E8", Offset = "0x12256E8", VA = "0x12256E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x12256EC", Offset = "0x12256EC", VA = "0x12256EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x1226388", Offset = "0x1226388", VA = "0x1226388", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private System.Random vegetaterRandom;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VegetateInfo[] vegetationInfos;

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x12254AC", Offset = "0x12254AC", VA = "0x12254AC")]
	private Vector3 GetNewProposedPosition(Vector3 _middleWorldPos, Vector3 _minDistFromCenter, Vector3 _maxDistFromCenter, Vector3 _tileSize)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x12255B8", Offset = "0x12255B8", VA = "0x12255B8")]
	private float RandomWithExclusion(float min, float max, float minExclusive, float maxExclusive)
	{
		return default(float);
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x12255F0", Offset = "0x12255F0", VA = "0x12255F0")]
	[IteratorStateMachine(typeof(<Vegetate>d__5))]
	[ContextMenu("VEGETATE")]
	public IEnumerator Vegetate(List<(Transform _t, int clusterId)> _ground, WorldGeneratorEvolved _wge)
	{
		return null;
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x12256BC", Offset = "0x12256BC", VA = "0x12256BC")]
	private float GetRandEpsilon()
	{
		return default(float);
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x12256D0", Offset = "0x12256D0", VA = "0x12256D0")]
	public Vegetater()
	{
	}
}
[Token(Token = "0x20001F6")]
public class VoidClearer : MonoBehaviour
{
	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x12263D0", Offset = "0x12263D0", VA = "0x12263D0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x1226844", Offset = "0x1226844", VA = "0x1226844")]
	public VoidClearer()
	{
	}
}
[Token(Token = "0x20001F7")]
public class WallDecorator : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001F8")]
	public class WallInfo
	{
		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string identifier;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int orderToGenerate;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] possibleDecos;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Basic Config")]
		public float minAllowedWallHeight;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxAllowedWallHeight;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float amountPerWall;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0f, 1f)]
		public float randomness;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Exclusions")]
		public string needsFlag;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] exludeRoomTypes;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Positioning")]
		public Vector3 maxDistancesFromMiddle;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 offset;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float extraYRotation;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool canBeOverNothingness;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool canOnlyBeOverNothingness;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		public bool checkCollisions;

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x12269A4", Offset = "0x12269A4", VA = "0x12269A4")]
		public WallInfo()
		{
		}
	}

	[Token(Token = "0x20001FA")]
	[CompilerGenerated]
	private sealed class <Decorate>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldGeneratorEvolved wge;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<(Transform _t, int clusterId)> _wallList;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WallDecorator <>4__this;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <_loopCounter>5__2;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <i>5__3;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private (Transform _t, int clusterId) <_wallEntry>5__4;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform <_wall>5__5;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RoomCreator.RoomFile <_roomAt>5__6;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ProceduralWallGenerator <_proc>5__7;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int <_decoIndex>5__8;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IEnumerator<WallInfo> <>7__wrap8;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WallInfo <_deco>5__10;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int <_amountToPlace>5__11;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int <a>5__12;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GameObject <_obj>5__13;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Collider <_objColl>5__14;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Collider <_wallCollider>5__15;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<Collider> <_collisionChecks>5__16;

		[Token(Token = "0x17000138")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A22")]
			[Address(RVA = "0x1228040", Offset = "0x1228040", VA = "0x1228040", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000139")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A24")]
			[Address(RVA = "0x1228088", Offset = "0x1228088", VA = "0x1228088", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x12268F0", Offset = "0x12268F0", VA = "0x12268F0")]
		[DebuggerHidden]
		public <Decorate>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x1226A44", Offset = "0x1226A44", VA = "0x1226A44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x1226A70", Offset = "0x1226A70", VA = "0x1226A70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x1227F90", Offset = "0x1227F90", VA = "0x1227F90")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x1228048", Offset = "0x1228048", VA = "0x1228048", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private System.Random decoratorRandom;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WallInfo[] decorationInfos;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public (int amount, double totalTime) DebugTimeToCheckCollisions;

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x122684C", Offset = "0x122684C", VA = "0x122684C")]
	[IteratorStateMachine(typeof(<Decorate>d__4))]
	[ContextMenu("DECORATE")]
	public IEnumerator Decorate(WorldGeneratorEvolved wge, List<(Transform _t, int clusterId)> _wallList)
	{
		return null;
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x1226918", Offset = "0x1226918", VA = "0x1226918")]
	private Vector3 RandVector(Vector3 _min, Vector3 _max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x122699C", Offset = "0x122699C", VA = "0x122699C")]
	public WallDecorator()
	{
	}
}
[Token(Token = "0x20001FB")]
public class WonAreaNGPlusTrigger : MonoBehaviour
{
	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _started;

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x1228090", Offset = "0x1228090", VA = "0x1228090")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x122849C", Offset = "0x122849C", VA = "0x122849C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x12285F8", Offset = "0x12285F8", VA = "0x12285F8")]
	private void CurrentWorldGenerator_DungeonGenerated()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x122868C", Offset = "0x122868C", VA = "0x122868C")]
	public WonAreaNGPlusTrigger()
	{
	}
}
[Token(Token = "0x20001FE")]
public class WonRunAreaEndRunTrigger : MonoBehaviour
{
	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject wonRunScreen;

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x1228D38", Offset = "0x1228D38", VA = "0x1228D38")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x1228F94", Offset = "0x1228F94", VA = "0x1228F94")]
	public WonRunAreaEndRunTrigger()
	{
	}
}
[Token(Token = "0x20001FF")]
public class WorldGeneratorEvolved : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000200")]
	public class GenerationDetails
	{
		[Serializable]
		[Token(Token = "0x2000201")]
		public class SpecialRoomsForDeepness
		{
			[Serializable]
			[Token(Token = "0x2000202")]
			public class RoomEntry
			{
				[Token(Token = "0x4000A16")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string name;

				[Token(Token = "0x4000A17")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public float probability;

				[Token(Token = "0x6000A91")]
				[Address(RVA = "0x1232628", Offset = "0x1232628", VA = "0x1232628")]
				public RoomEntry()
				{
				}
			}

			[Token(Token = "0x4000A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int deepnessToSpawnAt;

			[Token(Token = "0x4000A14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RoomEntry[] rooms;

			[Token(Token = "0x4000A15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RoomEntry[] deadends;

			[Token(Token = "0x6000A90")]
			[Address(RVA = "0x1232620", Offset = "0x1232620", VA = "0x1232620")]
			public SpecialRoomsForDeepness()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000203")]
		public class CeilingMapping
		{
			[Token(Token = "0x4000A18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string identifier;

			[Token(Token = "0x4000A19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject gameObject;

			[Token(Token = "0x6000A92")]
			[Address(RVA = "0x1232638", Offset = "0x1232638", VA = "0x1232638")]
			public CeilingMapping()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000204")]
		public class GroundMapping
		{
			[Token(Token = "0x4000A1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string identifier;

			[Token(Token = "0x4000A1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject gameObject4x4;

			[Token(Token = "0x4000A1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isSolid;

			[Token(Token = "0x6000A93")]
			[Address(RVA = "0x1232640", Offset = "0x1232640", VA = "0x1232640")]
			public GroundMapping()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000205")]
		public class DoorMapping
		{
			[Token(Token = "0x4000A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string doorType;

			[Token(Token = "0x4000A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject[] possibleObjects;

			[Token(Token = "0x4000A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float inset;

			[Token(Token = "0x6000A94")]
			[Address(RVA = "0x1232650", Offset = "0x1232650", VA = "0x1232650")]
			public DoorMapping()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000206")]
		public class WallMapping
		{
			[Serializable]
			[Token(Token = "0x2000207")]
			public class WallHeightDifferenceObject
			{
				[Token(Token = "0x4000A23")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public float height;

				[Token(Token = "0x4000A24")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public GameObject wallObject;

				[Token(Token = "0x6000A96")]
				[Address(RVA = "0x1232670", Offset = "0x1232670", VA = "0x1232670")]
				public WallHeightDifferenceObject()
				{
				}
			}

			[Token(Token = "0x4000A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string wallType;

			[Token(Token = "0x4000A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool decorate;

			[Token(Token = "0x4000A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WallHeightDifferenceObject[] wallHeights;

			[Token(Token = "0x6000A95")]
			[Address(RVA = "0x1232660", Offset = "0x1232660", VA = "0x1232660")]
			public WallMapping()
			{
			}
		}

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("General")]
		public string folderName;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color torchLightColor;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material baseMaterial;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material grassMaterial;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material colormapMaterial;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Range(0f, 1f)]
		public float probabilityOfRoomBecomingBranch;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(0f, 1f)]
		public float probabilityOfRoomHavingWallSpace;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(0f, 1f)]
		public float probabilityForMoreThanOneTransitionAtEnd;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Range(0f, 1f)]
		public float probabilityForCorridorSkip;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int roomClusterSize;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int branchesPerCluster;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int minDistBetweenWallSpaces;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Range(0f, 1f)]
		public float probabilityForCeilingSecret;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float generateObjectDist;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[Header("Room Type Settings")]
		public int deepnessAtBoss;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool generateTransitions;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Header("Special Room Settings")]
		public SpecialRoomsForDeepness[] specialRoomsForDeepnesses;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[Header("Mappings")]
		public GameObject procWall;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public RoomMapping roomMappings;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public RoomMapping wallspaceMappings;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public CeilingMapping[] ceilingMappings;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GroundMapping[] groundMappings;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public DoorMapping[] doorMappings;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public WallMapping[] wallMappings;

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x123203C", Offset = "0x123203C", VA = "0x123203C")]
		public WallMapping GetWallMapping(string id)
		{
			return null;
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x12320D0", Offset = "0x12320D0", VA = "0x12320D0")]
		public SpecialRoomsForDeepness GetSpecialRoomsForDeepness(int deepness, System.Random _wgRandom)
		{
			return null;
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x1232244", Offset = "0x1232244", VA = "0x1232244")]
		public float GetShopProbability()
		{
			return default(float);
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x1232340", Offset = "0x1232340", VA = "0x1232340")]
		public RoomMapping.RoomMappingEntry GetRoomType(string id)
		{
			return null;
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x1232434", Offset = "0x1232434", VA = "0x1232434")]
		public GameObject GetCeilingObjFor(string id)
		{
			return null;
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x12324CC", Offset = "0x12324CC", VA = "0x12324CC")]
		public GroundMapping GetGround(string id)
		{
			return null;
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x1232560", Offset = "0x1232560", VA = "0x1232560")]
		public DoorMapping GetDoor(string id)
		{
			return null;
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x12325F4", Offset = "0x12325F4", VA = "0x12325F4")]
		public GenerationDetails()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200020A")]
	public class OverrideRule
	{
		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh meshToOverride;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float probToOverride;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Mesh[] possibleMeshes;

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x12326C0", Offset = "0x12326C0", VA = "0x12326C0")]
		public OverrideRule()
		{
		}
	}

	[Token(Token = "0x200020B")]
	public enum BuildingBlockCategory
	{
		[Token(Token = "0x4000A2B")]
		NONE,
		[Token(Token = "0x4000A2C")]
		MOBS,
		[Token(Token = "0x4000A2D")]
		ITEMS,
		[Token(Token = "0x4000A2E")]
		DECO,
		[Token(Token = "0x4000A2F")]
		PROPS,
		[Token(Token = "0x4000A30")]
		SPECIAL,
		[Token(Token = "0x4000A31")]
		WALLSNCEIL
	}

	[Serializable]
	[Token(Token = "0x200020C")]
	public class BuildingBlock
	{
		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string identifier;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject gameObject;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildingBlockCategory category;

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x12326C8", Offset = "0x12326C8", VA = "0x12326C8")]
		public BuildingBlock()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200020D")]
	public class GeneratedRoom
	{
		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoomCreator.RoomFile original;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2Int pos;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yRotation;

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x12326D0", Offset = "0x12326D0", VA = "0x12326D0")]
		public GeneratedRoom(Vector2Int _pos, RoomCreator.RoomFile _original)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x123270C", Offset = "0x123270C", VA = "0x123270C")]
		public List<Vector2Int> GetDoors()
		{
			return null;
		}
	}

	[Token(Token = "0x200020E")]
	public delegate void OnDungeonGenerated();

	[Token(Token = "0x200020F")]
	public delegate void OnDungeonCompleted(CURRENT_FLOOR floor);

	[Token(Token = "0x2000210")]
	private class WeightedRandomBag
	{
		[Token(Token = "0x2000211")]
		private struct Entry
		{
			[Token(Token = "0x4000A3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int accumulatedWeight;

			[Token(Token = "0x4000A3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RoomCreator.RoomFile room;
		}

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _accumulatedWeight;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Entry> entries;

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x1232BB8", Offset = "0x1232BB8", VA = "0x1232BB8")]
		public void AddEntry(RoomCreator.RoomFile room, int weight)
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x1232CA8", Offset = "0x1232CA8", VA = "0x1232CA8")]
		public RoomCreator.RoomFile GetRandom(System.Random random)
		{
			return null;
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x1232E10", Offset = "0x1232E10", VA = "0x1232E10")]
		public int GetSize()
		{
			return default(int);
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x1232E58", Offset = "0x1232E58", VA = "0x1232E58")]
		public WeightedRandomBag()
		{
		}
	}

	[Token(Token = "0x2000212")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass64_0
	{
		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoomCreator.RoomFile _considerRoom;

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x1232EE0", Offset = "0x1232EE0", VA = "0x1232EE0")]
		public <>c__DisplayClass64_0()
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x1232EE8", Offset = "0x1232EE8", VA = "0x1232EE8")]
		internal float <WorldGenerationRoutine>b__6(RoomCreator.RoomFile x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x2000213")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass64_1
	{
		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<RoomCreator.RoomFile> _newClusterEnds;

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x1232F80", Offset = "0x1232F80", VA = "0x1232F80")]
		public <>c__DisplayClass64_1()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x1232F88", Offset = "0x1232F88", VA = "0x1232F88")]
		internal bool <WorldGenerationRoutine>b__9(RoomCreator.RoomFile x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000214")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass64_2
	{
		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string _toPlace;

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x1232FEC", Offset = "0x1232FEC", VA = "0x1232FEC")]
		public <>c__DisplayClass64_2()
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x1232FF4", Offset = "0x1232FF4", VA = "0x1232FF4")]
		internal bool <WorldGenerationRoutine>b__12(RoomMapping.RoomMappingEntry x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000216")]
	[CompilerGenerated]
	private sealed class <WorldGenerationRoutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldGeneratorEvolved <>4__this;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int forceSeed;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float _yRotationLastFloor;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offset;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private <>c__DisplayClass64_0 <>8__1;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private <>c__DisplayClass64_1 <>8__2;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private <>c__DisplayClass64_2 <>8__3;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <_currentDeepness>5__2;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RoomCreator.RoomFile <_startRoom>5__3;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<RoomCreator.RoomFile> <_clusterInformation>5__4;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private HashSet<RoomCreator.RoomFile> <_roomsConsidered>5__5;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int <_currentClusterId>5__6;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Dictionary<int, int> <_placedBossRooms>5__7;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool <_couldPlaceTransition>5__8;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool <_purgedOnDeepness1>5__9;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool <_hasShownDungeonTitle>5__10;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RoomCreator.RoomFile <_roomWherePlayerIs>5__11;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int <_transitionsPlacedForThisCluster>5__12;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<RoomCreator.RoomFile> <_roomsToCheck>5__13;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<RoomCreator.RoomFile> <_endRooms>5__14;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool <_shopRoomExists>5__15;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<RoomCreator.RoomFile> <_rooms>5__16;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int <a>5__17;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private RoomCreator.RoomFile <_placedRoom>5__18;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int <a>5__19;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private SpecialEventGraph.SpecialEventEntry <_specialEvent>5__20;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RoomCreator.RoomFile[] <_sortedRoomsToCheck>5__21;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private IEnumerator<int> <>7__wrap21;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<GenerationDetails.SpecialRoomsForDeepness.RoomEntry> <_possibleDeadends>5__23;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private IEnumerator<RoomCreator.RoomFile> <>7__wrap23;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private RoomCreator.RoomFile <_rm>5__25;

		[Token(Token = "0x1700013C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AC6")]
			[Address(RVA = "0x1239794", Offset = "0x1239794", VA = "0x1239794", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AC8")]
			[Address(RVA = "0x12397DC", Offset = "0x12397DC", VA = "0x12397DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x123343C", Offset = "0x123343C", VA = "0x123343C")]
		[DebuggerHidden]
		public <WorldGenerationRoutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x1233464", Offset = "0x1233464", VA = "0x1233464", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x1233528", Offset = "0x1233528", VA = "0x1233528", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x12396E4", Offset = "0x12396E4", VA = "0x12396E4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x1239634", Offset = "0x1239634", VA = "0x1239634")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x123979C", Offset = "0x123979C", VA = "0x123979C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200021E")]
	[CompilerGenerated]
	private sealed class <SpawnWallSpaces>d__74 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldGeneratorEvolved <>4__this;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RoomCreator.RoomFile _attachRoom;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2Int _goalPos;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Vector2Int>.Enumerator <>7__wrap1;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector2Int <_k>5__3;

		[Token(Token = "0x1700013E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0x123A850", Offset = "0x123A850", VA = "0x123A850", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ADD")]
			[Address(RVA = "0x123A898", Offset = "0x123A898", VA = "0x123A898", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x12399AC", Offset = "0x12399AC", VA = "0x12399AC")]
		[DebuggerHidden]
		public <SpawnWallSpaces>d__74(int <>1__state)
		{
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x12399D4", Offset = "0x12399D4", VA = "0x12399D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x12399F0", Offset = "0x12399F0", VA = "0x12399F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x123A800", Offset = "0x123A800", VA = "0x123A800")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x123A858", Offset = "0x123A858", VA = "0x123A858", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000221")]
	[CompilerGenerated]
	private sealed class <CheckIfPreviousWorldGeneratorCanBeDisabled>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldGeneratorEvolved <>4__this;

		[Token(Token = "0x17000140")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AE3")]
			[Address(RVA = "0x123ACB4", Offset = "0x123ACB4", VA = "0x123ACB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AE5")]
			[Address(RVA = "0x123ACFC", Offset = "0x123ACFC", VA = "0x123ACFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x123A8CC", Offset = "0x123A8CC", VA = "0x123A8CC")]
		[DebuggerHidden]
		public <CheckIfPreviousWorldGeneratorCanBeDisabled>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x123A8F4", Offset = "0x123A8F4", VA = "0x123A8F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x123A8F8", Offset = "0x123A8F8", VA = "0x123A8F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x123ACBC", Offset = "0x123ACBC", VA = "0x123ACBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000222")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass91_0
	{
		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WorldGeneratorEvolved <>4__this;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 _playerPos;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<RoomCreator.RoomFile.TileInRoom> _tilesToMark;

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x123AD04", Offset = "0x123AD04", VA = "0x123AD04")]
		public <>c__DisplayClass91_0()
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x123AD0C", Offset = "0x123AD0C", VA = "0x123AD0C")]
		internal bool <GenerateWorldObjects>b__0(KeyValuePair<Vector2Int, (RoomCreator.RoomFile.TileInRoom tile, RoomCreator.RoomFile correspondingRoom)> x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000223")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass91_1
	{
		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OverrideRule _rule;

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x123B1B4", Offset = "0x123B1B4", VA = "0x123B1B4")]
		public <>c__DisplayClass91_1()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x123B1BC", Offset = "0x123B1BC", VA = "0x123B1BC")]
		internal bool <GenerateWorldObjects>b__8(MeshFilter x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000224")]
	[CompilerGenerated]
	private sealed class <GenerateWorldObjects>d__91 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldGeneratorEvolved <>4__this;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private <>c__DisplayClass91_0 <>8__1;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass91_1 <>8__2;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <_loopCounter>5__2;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<MeshFilter> <_meshesToOverride>5__3;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<SamePositionChecker> <_l>5__4;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<KeyValuePair<Vector2Int, (RoomCreator.RoomFile.TileInRoom tile, RoomCreator.RoomFile correspondingRoom)>>.Enumerator <>7__wrap4;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private KeyValuePair<Vector2Int, (RoomCreator.RoomFile.TileInRoom tile, RoomCreator.RoomFile correspondingRoom)> <_k>5__6;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private (RoomCreator.RoomFile.TileInRoom tile, RoomCreator.RoomFile correspondingRoom) <_w>5__7;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> <_walls>5__8;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float <_inset>5__9;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float <_groundOffset>5__10;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float <_height>5__11;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int <x>5__12;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int <y>5__13;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RoomCreator.RoomFile.TileInRoom <_north>5__14;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private RoomCreator.RoomFile.TileInRoom <_west>5__15;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private RoomCreator.RoomFile.TileInRoom <_east>5__16;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private RoomCreator.RoomFile.TileInRoom <_south>5__17;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float <_insetWidth>5__18;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RoomCreator.RoomFile.ExtraObjectsInRoom <_obj>5__19;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RoomCreator.RoomFile <_room>5__20;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private (RoomCreator.RoomFile room, Vector3 pos) <_r>5__21;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private List<(RoomCreator.RoomFile.EnemiesInRoom enemies, RoomCreator.RoomFile.ExtraObjectsInRoom parentExtra)>.Enumerator <>7__wrap21;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private (RoomCreator.RoomFile.EnemiesInRoom enemies, RoomCreator.RoomFile.ExtraObjectsInRoom parentExtra) <_enemy>5__23;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private GameObject <_wallHeightObject>5__24;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private string[] <_flagArray>5__25;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private GameObject <_doorWallParent>5__26;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private GenerationDetails.WallMapping <_mapping>5__27;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private OverrideRule[] <>7__wrap27;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private MeshFilter[] <>7__wrap28;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private MeshFilter <_contender>5__30;

		[Token(Token = "0x17000142")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AF8")]
			[Address(RVA = "0x12413E4", Offset = "0x12413E4", VA = "0x12413E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000AFA")]
			[Address(RVA = "0x124142C", Offset = "0x124142C", VA = "0x124142C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x123B280", Offset = "0x123B280", VA = "0x123B280")]
		[DebuggerHidden]
		public <GenerateWorldObjects>d__91(int <>1__state)
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0x123B2A8", Offset = "0x123B2A8", VA = "0x123B2A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0x123B2F0", Offset = "0x123B2F0", VA = "0x123B2F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x12411A4", Offset = "0x12411A4", VA = "0x12411A4")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x12411F4", Offset = "0x12411F4", VA = "0x12411F4")]
		private void <>m__Finally2()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x1241244", Offset = "0x1241244", VA = "0x1241244")]
		private void <>m__Finally3()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x12412A4", Offset = "0x12412A4", VA = "0x12412A4")]
		private void <>m__Finally4()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x12412F4", Offset = "0x12412F4", VA = "0x12412F4")]
		private void <>m__Finally5()
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x1241344", Offset = "0x1241344", VA = "0x1241344")]
		private void <>m__Finally6()
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x1241394", Offset = "0x1241394", VA = "0x1241394")]
		private void <>m__Finally7()
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x12413EC", Offset = "0x12413EC", VA = "0x12413EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000225")]
	[CompilerGenerated]
	private sealed class <UpdateNavmesh>d__92 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldGeneratorEvolved <>4__this;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RoomCreator.RoomFile.TileInRoom <_currentTile>5__2;

		[Token(Token = "0x17000144")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0x12416CC", Offset = "0x12416CC", VA = "0x12416CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000145")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B00")]
			[Address(RVA = "0x1241714", Offset = "0x1241714", VA = "0x1241714", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x1241434", Offset = "0x1241434", VA = "0x1241434")]
		[DebuggerHidden]
		public <UpdateNavmesh>d__92(int <>1__state)
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x124145C", Offset = "0x124145C", VA = "0x124145C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x1241460", Offset = "0x1241460", VA = "0x1241460", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x12416D4", Offset = "0x12416D4", VA = "0x12416D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000226")]
	[CompilerGenerated]
	private sealed class <RefreshDoor>d__93 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DoorWallParent _doorP;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WorldGeneratorEvolved <>4__this;

		[Token(Token = "0x17000146")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0x1241D78", Offset = "0x1241D78", VA = "0x1241D78", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000147")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0x1241DC0", Offset = "0x1241DC0", VA = "0x1241DC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x124171C", Offset = "0x124171C", VA = "0x124171C")]
		[DebuggerHidden]
		public <RefreshDoor>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x1241744", Offset = "0x1241744", VA = "0x1241744", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x1241748", Offset = "0x1241748", VA = "0x1241748", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x1241D80", Offset = "0x1241D80", VA = "0x1241D80", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool TEST_MODE;

	[Token(Token = "0x40009C8")]
	public const string EMPTY = "empty";

	[Token(Token = "0x40009C9")]
	public const string BLOCKED = "blocked";

	[Token(Token = "0x40009CA")]
	public const string CORRIDOR = "corridor";

	[Token(Token = "0x40009CB")]
	public const int BASE_Y_OFFSET = 50;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public System.Random worldGeneratorRandom;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public System.Random worldGeneratorRoomPlaceRandom;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GenerationDetails generationDetails;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Configuration")]
	public StringToObjectMapper stringToObjectMapper;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TileCreator.TileRepresentation[] buildingTiles;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TileCreator tileCreator;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RoomCreator roomCreator;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CURRENT_FLOOR worldGeneratorFloor;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int seed;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int seedRotation;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("World Configuration")]
	public GameObject enemySpawnPositionPrefab;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject doorCube;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject blockedObject;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform voidClearer;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[Header("Override/Filler Tile Rules")]
	public OverrideRule[] overrideRules;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RoomCreator.RoomFile.TileInRoom fillerTileBase;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool rotateFillerTile;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	[Header("Debugging")]
	public bool showGenerationGraphInfos;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public bool printDebugMessages;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("Runtime Vars")]
	public List<RoomCreator.RoomFile> roomFiles;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public WallPlacer wallPlacer;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Dictionary<Vector2Int, (RoomCreator.RoomFile.TileInRoom tile, RoomCreator.RoomFile correspondingRoom)> _tileGrid;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public HashSet<RoomCreator.RoomFile> _roomsVisitedByPlayer;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<(RoomCreator.RoomFile room, Vector3 pos)> _tmpSpawnedRooms;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject _clusterParent;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<DoorWallParent> _placedDoorParents;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<(RoomCreator.RoomFile.ExtraObjectsInRoom extraObject, RoomCreator.RoomFile correspondingRoom)> _extraObjectsToSpawn;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Dictionary<int, List<GameObject>> _clusterToObjectList;

	[NonSerialized]
	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public NavMeshSurface navMesh;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool _hasEnteredStartRoom;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool _hasSpawnedSpecialEventThisFloor;

	[NonSerialized]
	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	public bool _canGenerateWorldObjects;

	[NonSerialized]
	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
	public bool _generationRoutineRunning;

	[NonSerialized]
	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public List<SamePositionChecker> samePositionCheckerList;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool visualizeDoors;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
	public bool visualizeRoomNames;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
	public bool visualizeTileInfos;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x103")]
	public bool visualizeAllTiles;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public int DEBUG_StartROTATION;

	[NonSerialized]
	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool FORCE_SPAWN_MODE;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<GameObject> _objsToStaticBatch;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<(Transform _t, int clusterId)> wallsToDecorate;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<(Transform _t, int clusterId)> groundsToVegetate;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private List<(Transform _t, int clusterId)> ceilingsToVegetate;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<KeyValuePair<Vector2Int, (RoomCreator.RoomFile.TileInRoom tile, RoomCreator.RoomFile correspondingRoom)>> _subTileGrid;

	[Token(Token = "0x1400001D")]
	public event OnDungeonGenerated DungeonGenerated
	{
		[Token(Token = "0x6000A35")]
		[Address(RVA = "0x12283FC", Offset = "0x12283FC", VA = "0x12283FC")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A36")]
		[Address(RVA = "0x1228558", Offset = "0x1228558", VA = "0x1228558")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event OnDungeonCompleted DungeonCompleted
	{
		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x1228F9C", Offset = "0x1228F9C", VA = "0x1228F9C")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x122903C", Offset = "0x122903C", VA = "0x122903C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x12290DC", Offset = "0x12290DC", VA = "0x12290DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x1229190", Offset = "0x1229190", VA = "0x1229190")]
	private TileCreator.TileRepresentation GetBuildingTile(string id)
	{
		return null;
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x1229210", Offset = "0x1229210", VA = "0x1229210")]
	[ContextMenu("Read building tiles from disk")]
	public void ReadBuildingTilesFromDisk()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x1229410", Offset = "0x1229410", VA = "0x1229410")]
	public void ForceSpawnRoom(RoomCreator.RoomFile _file, int forceSeed = 1)
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x122960C", Offset = "0x122960C", VA = "0x122960C")]
	public (RoomCreator.RoomFile.TileInRoom, RoomCreator.RoomFile) TG(int x, int y)
	{
		return default((RoomCreator.RoomFile.TileInRoom, RoomCreator.RoomFile));
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x1229618", Offset = "0x1229618", VA = "0x1229618")]
	public (RoomCreator.RoomFile.TileInRoom, RoomCreator.RoomFile) TG(Vector2Int _pos)
	{
		return default((RoomCreator.RoomFile.TileInRoom, RoomCreator.RoomFile));
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x1229718", Offset = "0x1229718", VA = "0x1229718")]
	[IteratorStateMachine(typeof(<WorldGenerationRoutine>d__64))]
	public IEnumerator WorldGenerationRoutine(int forceSeed, Vector3 offset, float _yRotationLastFloor)
	{
		return null;
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x12297C4", Offset = "0x12297C4", VA = "0x12297C4")]
	private void ShowDungeonTitleAndPlayMusic()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x1229CC0", Offset = "0x1229CC0", VA = "0x1229CC0")]
	public HashSet<RoomCreator.RoomFile> GetAllRoomsInWorld()
	{
		return null;
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x1229E9C", Offset = "0x1229E9C", VA = "0x1229E9C")]
	public Vector2Int[] PathfindFromTo(Vector2Int start, Vector2Int end, int searchSize = 200)
	{
		return null;
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x122A504", Offset = "0x122A504", VA = "0x122A504")]
	public List<RoomCreator.RoomFile> GetClusterEnds(RoomCreator.RoomFile _currentRoom)
	{
		return null;
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x122A750", Offset = "0x122A750", VA = "0x122A750")]
	private List<RoomCreator.RoomFile> GetAllRoomsInCluster(RoomCreator.RoomFile _r)
	{
		return null;
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x122AA9C", Offset = "0x122AA9C", VA = "0x122AA9C")]
	private int GetAmountVisitedOf(string type)
	{
		return default(int);
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x122AB9C", Offset = "0x122AB9C", VA = "0x122AB9C")]
	public List<RoomCreator.RoomFile> GenerateCluster(int clusterId, RoomCreator.RoomFile _fromRoom, int _deepness, GenerationDetails.SpecialRoomsForDeepness _specialRooms)
	{
		return null;
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x122CDC0", Offset = "0x122CDC0", VA = "0x122CDC0")]
	public RoomCreator.RoomFile TryPlaceRoomAt(RoomCreator.RoomFile _fromRoom, string _roomType, string _roomVariant, int _deepness, int _minDoors, bool _spawnWallSpace, int _clusterId, bool randRotations)
	{
		return null;
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x122BF78", Offset = "0x122BF78", VA = "0x122BF78")]
	public RoomCreator.RoomFile PlaceRoomAt(RoomCreator.RoomFile _fromRoom, RoomCreator.RoomFile.DOORDIRECTION _doorDirection, string _roomType, string _variant, int _deepness, int minDoors, bool spawnWallSpace, int _clusterId, bool randRotations)
	{
		return null;
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x122E4C0", Offset = "0x122E4C0", VA = "0x122E4C0")]
	[IteratorStateMachine(typeof(<SpawnWallSpaces>d__74))]
	public IEnumerator SpawnWallSpaces(RoomCreator.RoomFile _attachRoom, Vector2Int _goalPos)
	{
		return null;
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x122E558", Offset = "0x122E558", VA = "0x122E558")]
	public void ForceSpawn(int forceSeed = 0)
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x122A814", Offset = "0x122A814", VA = "0x122A814")]
	private RoomCreator.RoomFile GetClusterRoot(RoomCreator.RoomFile _r, int _baseDeepness)
	{
		return null;
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x122BF5C", Offset = "0x122BF5C", VA = "0x122BF5C")]
	public int GetRoomClusterSize(RoomCreator.RoomFile _r, int _baseDeepness)
	{
		return default(int);
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x122E96C", Offset = "0x122E96C", VA = "0x122E96C")]
	public RoomCreator.RoomFile GetPredecessorRoot(RoomCreator.RoomFile _r)
	{
		return null;
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x121F2C0", Offset = "0x121F2C0", VA = "0x121F2C0")]
	public void GenerateWorld(int forceSeed, Vector3 offset, float _yRotationLastFloor)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x122E98C", Offset = "0x122E98C", VA = "0x122E98C")]
	[IteratorStateMachine(typeof(<CheckIfPreviousWorldGeneratorCanBeDisabled>d__80))]
	private IEnumerator CheckIfPreviousWorldGeneratorCanBeDisabled()
	{
		return null;
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x122EA00", Offset = "0x122EA00", VA = "0x122EA00")]
	private void PurgeObjectsFromDungeon(CURRENT_FLOOR _floor, Transform _wgParent)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x122ED0C", Offset = "0x122ED0C", VA = "0x122ED0C")]
	private void ClearRoomCluster(int clusterId, RoomCreator.RoomFile _roomWherePlayerIs)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x121BFAC", Offset = "0x121BFAC", VA = "0x121BFAC")]
	public void UpdateMat(GameObject g)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x1222D28", Offset = "0x1222D28", VA = "0x1222D28")]
	public void UpdateParticleMat(GameObject g)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x122F3C8", Offset = "0x122F3C8", VA = "0x122F3C8")]
	public void TryQueueForStaticBatching(GameObject _g)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x122E768", Offset = "0x122E768", VA = "0x122E768")]
	[IteratorStateMachine(typeof(<GenerateWorldObjects>d__91))]
	public IEnumerator GenerateWorldObjects()
	{
		return null;
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x122F4B0", Offset = "0x122F4B0", VA = "0x122F4B0")]
	[IteratorStateMachine(typeof(<UpdateNavmesh>d__92))]
	private IEnumerator UpdateNavmesh()
	{
		return null;
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x122F524", Offset = "0x122F524", VA = "0x122F524")]
	[IteratorStateMachine(typeof(<RefreshDoor>d__93))]
	private IEnumerator RefreshDoor(DoorWallParent _doorP)
	{
		return null;
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x122DC34", Offset = "0x122DC34", VA = "0x122DC34")]
	private GameObject GetWallOfHeight(float height, GenerationDetails.WallMapping mapping)
	{
		return null;
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x122DBF0", Offset = "0x122DBF0", VA = "0x122DBF0")]
	private float GetCeilHeight(int x, int y)
	{
		return default(float);
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x121D7E4", Offset = "0x121D7E4", VA = "0x121D7E4")]
	public RoomCreator.RoomFile.TileInRoom TileAt(Vector2Int pos)
	{
		return null;
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x1225390", Offset = "0x1225390", VA = "0x1225390")]
	public RoomCreator.RoomFile.TileInRoom TileAt(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x122F638", Offset = "0x122F638", VA = "0x122F638")]
	public string TileAtId(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x122F6A8", Offset = "0x122F6A8", VA = "0x122F6A8")]
	private bool RoomAtType(int x, int y, string type, bool ifNull = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x122F6F0", Offset = "0x122F6F0", VA = "0x122F6F0")]
	public RoomCreator.RoomFile RoomAt(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x122F70C", Offset = "0x122F70C", VA = "0x122F70C")]
	private bool IsTileDoor(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x122F758", Offset = "0x122F758", VA = "0x122F758")]
	private GameObject GetBuildingBlock(string id)
	{
		return null;
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x122F92C", Offset = "0x122F92C", VA = "0x122F92C")]
	private bool IsTileAt(int x, int y, params string[] tiles)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x122F9CC", Offset = "0x122F9CC", VA = "0x122F9CC")]
	private GameObject GetDoorObjOfType(string s)
	{
		return null;
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x122D1B8", Offset = "0x122D1B8", VA = "0x122D1B8")]
	private RoomCreator.RoomFile GetRandRoomFileOfType(string _type, string _variant, int minDoors, bool allowRandRotation)
	{
		return null;
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x122FA94", Offset = "0x122FA94", VA = "0x122FA94")]
	private bool ExistsNextToTile(int x, int y, int depth, params string[] tiles)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x1221DCC", Offset = "0x1221DCC", VA = "0x1221DCC")]
	public RoomCreator.RoomFile.TileInRoom[] GetNeighboringTiles(int x, int y)
	{
		return null;
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x122A3C8", Offset = "0x122A3C8", VA = "0x122A3C8")]
	public (RoomCreator.RoomFile.TileInRoom, RoomCreator.RoomFile)[] GetNeighboringTiles(Vector2Int pos)
	{
		return null;
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x122FB24", Offset = "0x122FB24", VA = "0x122FB24")]
	public int GetAmountOfNeighbouringTiles(int x, int y, bool corners = false, params string[] tiles)
	{
		return default(int);
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x122FC64", Offset = "0x122FC64", VA = "0x122FC64")]
	private bool DoesAreaContainRoomType(int px, int py, int sx, int sy, string type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x121B3A0", Offset = "0x121B3A0", VA = "0x121B3A0")]
	public void CompleteDungeon()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x122FD34", Offset = "0x122FD34", VA = "0x122FD34")]
	private List<GameObject> CheckAllWallsAndPlace(int x, int y, GameObject wallToSpawn, float expandWalls, string[] flags, bool decorate, params string[] checkAgainst)
	{
		return null;
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x122F5B4", Offset = "0x122F5B4", VA = "0x122F5B4")]
	public bool IsEmptyOrBlocked(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x12309F4", Offset = "0x12309F4", VA = "0x12309F4")]
	public bool IsEmptyOrBlocked(RoomCreator.RoomFile.TileInRoom _t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x1230A08", Offset = "0x1230A08", VA = "0x1230A08")]
	public bool IsEmptyOrBlocked(int x, int y)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x122FDEC", Offset = "0x122FDEC", VA = "0x122FDEC")]
	private List<GameObject> CheckAllWallsAndPlace(int x, int y, GameObject wallToSpawn, float expandWalls, string[] flags, string[] ignore, bool decorate, params string[] checkAgainst)
	{
		return null;
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x1230A34", Offset = "0x1230A34", VA = "0x1230A34")]
	private List<(GameObject, bool)> CheckDoorPlacing(int x, int y, GameObject wallFallback, float expandWalls, bool invertPosition)
	{
		return null;
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x1231260", Offset = "0x1231260", VA = "0x1231260")]
	public Dictionary<Vector2Int, (RoomCreator.RoomFile.TileInRoom, RoomCreator.RoomFile)> GetWorld()
	{
		return null;
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x1221124", Offset = "0x1221124", VA = "0x1221124")]
	public RoomCreator.RoomFile.TileInRoom GetTileAtRealPos(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x121CAF0", Offset = "0x121CAF0", VA = "0x121CAF0")]
	public RoomCreator.RoomFile GetRoomAtRealPosExtended(Vector3 pos, bool includeEmpty = true)
	{
		return null;
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x1231268", Offset = "0x1231268", VA = "0x1231268")]
	public (RoomCreator.RoomFile.TileInRoom, RoomCreator.RoomFile) GetTGAtRealPos(Vector3 pos)
	{
		return default((RoomCreator.RoomFile.TileInRoom, RoomCreator.RoomFile));
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x1219F84", Offset = "0x1219F84", VA = "0x1219F84")]
	public RoomCreator.RoomFile GetRoomAtRealPos(Vector3 pos, bool includeEmpty = true)
	{
		return null;
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x1231488", Offset = "0x1231488", VA = "0x1231488")]
	public RoomCreator.RoomFile FindRoomInMap(string pType)
	{
		return null;
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x122DCA4", Offset = "0x122DCA4", VA = "0x122DCA4")]
	private GameObject PlaceWall(float x, float y, float yRot, GameObject wallToPlace, string[] flags, float height, Vector2 procDimensions)
	{
		return null;
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x121F414", Offset = "0x121F414", VA = "0x121F414")]
	public void InitValues()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x122D74C", Offset = "0x122D74C", VA = "0x122D74C")]
	private void InsertRoomIntoWorld(RoomCreator.RoomFile _room, int px, int py, float addHeight = 0f, int deepness = 0)
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x122D5D8", Offset = "0x122D5D8", VA = "0x122D5D8")]
	private bool DoesRoomFitAtPosition(RoomCreator.RoomFile _room, int px, int py, int padding, RoomCreator.RoomFile _ignoreRoom)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x1229AB0", Offset = "0x1229AB0", VA = "0x1229AB0")]
	private void PlayDungeonMusic()
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x123161C", Offset = "0x123161C", VA = "0x123161C")]
	public void ReadRoomsFromDisk()
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x12318C0", Offset = "0x12318C0", VA = "0x12318C0")]
	public WorldGeneratorEvolved()
	{
	}
}
[Token(Token = "0x200022A")]
public class GradualDifficultyHandler : MonoBehaviour
{
	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x1241F2C", Offset = "0x1241F2C", VA = "0x1241F2C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x1242034", Offset = "0x1242034", VA = "0x1242034")]
	private void _wg_DungeonCompleted(CURRENT_FLOOR floor)
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x1239544", Offset = "0x1239544", VA = "0x1239544")]
	public int GetDifficultyLevelForDungeon(CURRENT_FLOOR floor)
	{
		return default(int);
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x1242208", Offset = "0x1242208", VA = "0x1242208")]
	public int GetAmountOfDungeonCompletes(CURRENT_FLOOR floor)
	{
		return default(int);
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x12423C0", Offset = "0x12423C0", VA = "0x12423C0")]
	public GradualDifficultyHandler()
	{
	}
}
[Token(Token = "0x200022B")]
public class GraphicsManager : MonoBehaviour
{
	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x12423C8", Offset = "0x12423C8", VA = "0x12423C8")]
	public GraphicsManager()
	{
	}
}
[Token(Token = "0x200022C")]
public class HelperMethods : MonoBehaviour
{
	[Token(Token = "0x4000ABB")]
	public const int maxAmountOfStats = 8;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int[] _excludedNegativeStats;

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x12423D0", Offset = "0x12423D0", VA = "0x12423D0")]
	public void RemoveRoomFilesFromGenerator(CURRENT_FLOOR generatorFloor, string filterType, string filterVariant, string filterName)
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x124276C", Offset = "0x124276C", VA = "0x124276C")]
	public void AddWallDecoratorEntryFor(CURRENT_FLOOR generatorFloor, WallDecorator.WallInfo wallInfo)
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x12428EC", Offset = "0x12428EC", VA = "0x12428EC")]
	public bool IsInFirstDungeon()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x1242994", Offset = "0x1242994", VA = "0x1242994")]
	public bool IsInstanceOfType(object objectToCheck, string type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x1242664", Offset = "0x1242664", VA = "0x1242664")]
	public WorldGeneratorEvolved GetWorldGeneratorForFloor(CURRENT_FLOOR generatorFloor)
	{
		return null;
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x1242A70", Offset = "0x1242A70", VA = "0x1242A70")]
	public float RandomFromPosition(Vector3 position)
	{
		return default(float);
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x1241294", Offset = "0x1241294", VA = "0x1241294")]
	public void AttachCustomData(GameObject g, string key, object data)
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x1242B48", Offset = "0x1242B48", VA = "0x1242B48")]
	public static void AttachCustomDataStatic(GameObject objectToAttachTo, string key, object data)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x1242C1C", Offset = "0x1242C1C", VA = "0x1242C1C")]
	public object GetCustomData(GameObject g, string key)
	{
		return null;
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x1242CD0", Offset = "0x1242CD0", VA = "0x1242CD0")]
	public string ChangePlayerStatSlightlyByNumber(string key, int statID, int statMultiplier = 1)
	{
		return null;
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x1242FF4", Offset = "0x1242FF4", VA = "0x1242FF4")]
	public object[] AddToArray(object[] _array, object _obj)
	{
		return null;
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x1243124", Offset = "0x1243124", VA = "0x1243124")]
	public void UpdateWeaponColorsPrimary(Color c0, Color c1, Color c2, Color c3, Color c4, Color c5, Color c6)
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x1243344", Offset = "0x1243344", VA = "0x1243344")]
	public void UpdateWeaponColorsSecondary(Color c0, Color c1, Color c2, Color c3, Color c4, Color c5, Color c6)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x1243564", Offset = "0x1243564", VA = "0x1243564")]
	public void UpdateWeaponColorsAll(Color c0, Color c1, Color c2, Color c3, Color c4, Color c5, Color c6)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x12438C0", Offset = "0x12438C0", VA = "0x12438C0")]
	public void UpdateWeaponColorsMelee(Color c0, Color c1, Color c2, Color c3, Color c4, Color c5, Color c6)
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x1243BB0", Offset = "0x1243BB0", VA = "0x1243BB0")]
	public void UpdateWeaponColorsRanged(Color c0, Color c1, Color c2, Color c3, Color c4, Color c5, Color c6)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x1243EA8", Offset = "0x1243EA8", VA = "0x1243EA8")]
	public void SetTrailColorPrimary(Color c0)
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x1243FD4", Offset = "0x1243FD4", VA = "0x1243FD4")]
	public void SetTrailColorSecondary(Color c0)
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x1244100", Offset = "0x1244100", VA = "0x1244100")]
	public void SetTrailColorAll(Color c0)
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x12442DC", Offset = "0x12442DC", VA = "0x12442DC")]
	public void SetTrailColorMelee(Color c0)
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x124444C", Offset = "0x124444C", VA = "0x124444C")]
	public void SetTrailColorRanged(Color c0)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x12445C4", Offset = "0x12445C4", VA = "0x12445C4")]
	public void SetTrailEmissionPrimary(Color c0, float emission)
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x1244704", Offset = "0x1244704", VA = "0x1244704")]
	public void SetTrailEmissionSecondary(Color c0, float emission)
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x1244844", Offset = "0x1244844", VA = "0x1244844")]
	public void SetTrailEmissionAll(Color c0, float emission)
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x1244A38", Offset = "0x1244A38", VA = "0x1244A38")]
	public void SetTrailEmissionMelee(Color c0, float emission)
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x1244BC0", Offset = "0x1244BC0", VA = "0x1244BC0")]
	public void SetTrailEmissionRanged(Color c0, float emission)
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x1244D50", Offset = "0x1244D50", VA = "0x1244D50")]
	public string[] ChangeRandomPlayerStatsSlightlyUnique(string key, params int[] statMultipliers)
	{
		return null;
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x12450B0", Offset = "0x12450B0", VA = "0x12450B0")]
	public string ChangeRandomPlayerStatSlightly(string key, int statMultiplier = 1)
	{
		return null;
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x1244F7C", Offset = "0x1244F7C", VA = "0x1244F7C")]
	private List<int> GetStatPossibilitiesList(bool negative)
	{
		return null;
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x124516C", Offset = "0x124516C", VA = "0x124516C")]
	public bool IsValidWithLuck(float minChance, float maxChance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x1245208", Offset = "0x1245208", VA = "0x1245208")]
	public bool IsValidWithLuck(float minChance, float maxChance, float defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x12452B4", Offset = "0x12452B4", VA = "0x12452B4")]
	public PlayerLiving.PlayerStat GetMeleeDamageStat()
	{
		return null;
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x124540C", Offset = "0x124540C", VA = "0x124540C")]
	public PlayerLiving.PlayerStat GetRangedDamageStat()
	{
		return null;
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x1245418", Offset = "0x1245418", VA = "0x1245418")]
	public PlayerLiving.PlayerStat GetMeleeCritStat()
	{
		return null;
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x1245424", Offset = "0x1245424", VA = "0x1245424")]
	public PlayerLiving.PlayerStat GetRangedCritStat()
	{
		return null;
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x12452C0", Offset = "0x12452C0", VA = "0x12452C0")]
	private PlayerLiving.PlayerStat GetWeaponTypeStatFor(WeaponBase.WEAPON_TYPE type, bool damageStat)
	{
		return null;
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x1245430", Offset = "0x1245430", VA = "0x1245430")]
	public void RegisterMeleeDamageAddMult(string id, float add, float multiplier)
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x12455CC", Offset = "0x12455CC", VA = "0x12455CC")]
	public void RegisterMeleeCritAddMult(string id, float add, float multiplier)
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x1245670", Offset = "0x1245670", VA = "0x1245670")]
	public void RegisterRangedDamageAddMult(string id, float add, float multiplier)
	{
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x1245714", Offset = "0x1245714", VA = "0x1245714")]
	public void RegisterRangedCritAddMult(string id, float add, float multiplier)
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x12457B8", Offset = "0x12457B8", VA = "0x12457B8")]
	public void RegisterMeleeDamageAddend(string id, float addend)
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x1245948", Offset = "0x1245948", VA = "0x1245948")]
	public void RegisterMeleeCritAddend(string id, float addend)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x12459E4", Offset = "0x12459E4", VA = "0x12459E4")]
	public void RegisterMeleeDamageMultiplier(string id, float multiplier)
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x1245B74", Offset = "0x1245B74", VA = "0x1245B74")]
	public void RegisterMeleeCritMultiplier(string id, float multiplier)
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x1245C10", Offset = "0x1245C10", VA = "0x1245C10")]
	public void RegisterRangedDamageAddend(string id, float addend)
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x1245CAC", Offset = "0x1245CAC", VA = "0x1245CAC")]
	public void RegisterRangedCritAddend(string id, float addend)
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x1245D48", Offset = "0x1245D48", VA = "0x1245D48")]
	public void RegisterRangedDamageMultiplier(string id, float multiplier)
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x1245DE4", Offset = "0x1245DE4", VA = "0x1245DE4")]
	public void RegisterRangedCritMultiplier(string id, float multiplier)
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x1245854", Offset = "0x1245854", VA = "0x1245854")]
	private void AttemptRegisterAddend(string id, float addend, WeaponBase.WEAPON_TYPE weaponType, PlayerLiving.PlayerStat primaryStat, PlayerLiving.PlayerStat secondaryStat)
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x1245A80", Offset = "0x1245A80", VA = "0x1245A80")]
	private void AttemptRegisterMultiplier(string id, float multiplier, WeaponBase.WEAPON_TYPE weaponType, PlayerLiving.PlayerStat primaryStat, PlayerLiving.PlayerStat secondaryStat)
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x12454D4", Offset = "0x12454D4", VA = "0x12454D4")]
	private void AttemptRegisterAddMult(string id, float add, float multiplier, WeaponBase.WEAPON_TYPE weaponType, PlayerLiving.PlayerStat primaryStat, PlayerLiving.PlayerStat secondaryStat)
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x1245E80", Offset = "0x1245E80", VA = "0x1245E80")]
	private void AttemptRegisterStatChange(WeaponBase.WEAPON_TYPE weaponType, PlayerLiving.PlayerStat primaryStat, PlayerLiving.PlayerStat secondaryStat, Action<PlayerLiving.PlayerStat> registerCallback)
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x1245FD4", Offset = "0x1245FD4", VA = "0x1245FD4")]
	public HelperMethods()
	{
	}
}
[Token(Token = "0x2000232")]
public class HomeBaseStoryHandler : MonoBehaviour
{
	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject acolyteForceDialogueCollider;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject blacksmithForceDialogueCollider;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject seerForceDialogueCollider;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject npcBlacksmith;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject npcAcolyte;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject npcAdventurer;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject npcSeer;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject insightShopUI;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject challengeUI;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject augmentShopLockedOverlay;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string currentEventAcolyte;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string currentEventBlacksmith;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string currentEventAdventurer;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string currentEventSeer;

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x1246198", Offset = "0x1246198", VA = "0x1246198")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x1246674", Offset = "0x1246674", VA = "0x1246674")]
	public bool IsStoryEventHappening()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x124670C", Offset = "0x124670C", VA = "0x124670C")]
	private void Instance_GameHandlerInitialized()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x1246B08", Offset = "0x1246B08", VA = "0x1246B08")]
	public HomeBaseStoryHandler()
	{
	}
}
[Token(Token = "0x2000233")]
public class ImpactHandler : MonoBehaviour
{
	[Token(Token = "0x2000234")]
	public enum IMPACT_TYPE
	{
		[Token(Token = "0x4000ADD")]
		UNDEFINED,
		[Token(Token = "0x4000ADE")]
		KNIFE,
		[Token(Token = "0x4000ADF")]
		SWORD
	}

	[Serializable]
	[Token(Token = "0x2000235")]
	public class ImpactInfo
	{
		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PhysicMaterial physicMaterial;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject impactParticles;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ADSoundEffect impactSword;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ADSoundEffect impactKnife;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float amountMultiplier;

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x124732C", Offset = "0x124732C", VA = "0x124732C")]
		public ImpactInfo()
		{
		}
	}

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform debugHitImpactPos;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeBetweenImpactEffects;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ImpactInfo[] impactInfos;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _impactTimer;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PhysicMaterial _lastPhysicMaterial;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem[] _particleSystems;

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x1246B90", Offset = "0x1246B90", VA = "0x1246B90")]
	public ImpactInfo GetImpactByName(string s)
	{
		return null;
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x1246C7C", Offset = "0x1246C7C", VA = "0x1246C7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x1246EE0", Offset = "0x1246EE0", VA = "0x1246EE0")]
	public void CreateImpactAt(PhysicMaterial _physicMaterial, Vector3 _pos, int _amount = 8, bool _ignoreTime = false, float volumeMultiplier = 1f, float amountMultiplier = 1f, IMPACT_TYPE impactType = IMPACT_TYPE.UNDEFINED)
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x12472AC", Offset = "0x12472AC", VA = "0x12472AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x124731C", Offset = "0x124731C", VA = "0x124731C")]
	public ImpactHandler()
	{
	}
}
[Token(Token = "0x2000237")]
public class Inventory : MonoBehaviour
{
	[NonSerialized]
	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WeaponBase currentPrimaryWeapon;

	[NonSerialized]
	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WeaponBase currentSecondaryWeapon;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerHand primaryWeaponHand;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayerHand secondaryWeaponHand;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Configuration")]
	public Animator animo;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Slot[] slots;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject buttonEndRun;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<UIPickupImage> pickupsInInventory;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ADSoundEffect cantSwitchSound;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform hoverInfos;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool preventStatScreenFromOpening;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Text Infos")]
	public TextMeshProUGUI seedInfos;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshProUGUI hardModeInfos;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public OverlayStat statSwordCrit;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public OverlayStat statSwordDmg;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public OverlayStat statEvasion;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public OverlayStat statShopDiscount;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public OverlayStat statKnifeCrit;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public OverlayStat statKnifeDmg;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public OverlayStat statLuck;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshProUGUI newGamePlusIndicator;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Pickup Infos")]
	public GameObject pickupInfosObj;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform uiParentOfPickup;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool isCurrentlySwitchingWeapon;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool _opened;

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x124736C", Offset = "0x124736C", VA = "0x124736C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x1247424", Offset = "0x1247424", VA = "0x1247424")]
	private void Instance_GameHandlerInitialized()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x1247A78", Offset = "0x1247A78", VA = "0x1247A78")]
	private void RightControllerPrimaryButtonPressed(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x1247A7C", Offset = "0x1247A7C", VA = "0x1247A7C")]
	private void LeftControllerPrimaryButtonPressed(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x1247A80", Offset = "0x1247A80", VA = "0x1247A80")]
	private void RightControllerTriggerReleased(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x1247B88", Offset = "0x1247B88", VA = "0x1247B88")]
	private void LeftControllerTriggerReleased(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x1247A88", Offset = "0x1247A88", VA = "0x1247A88")]
	private void HandleControllerTriggerReleased(PlayerHand.HandType handType)
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x1247B90", Offset = "0x1247B90", VA = "0x1247B90")]
	private void RightControllerTriggerPressed(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x1247D40", Offset = "0x1247D40", VA = "0x1247D40")]
	private void LeftControllerTriggerPressed(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x1247EF0", Offset = "0x1247EF0", VA = "0x1247EF0")]
	public void ApplyWeaponCombo(WeaponComboInterpreter.WeaponComboDiskRepresentation repre)
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x1248B5C", Offset = "0x1248B5C", VA = "0x1248B5C")]
	public void ToggleEquipPrimaryWeapon(PlayerHand hand)
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x1248CE8", Offset = "0x1248CE8", VA = "0x1248CE8")]
	private void RightControllerSecondaryButtonPressed(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x12491C8", Offset = "0x12491C8", VA = "0x12491C8")]
	private void LeftControllerSecondaryButtonPressed(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x12492E8", Offset = "0x12492E8", VA = "0x12492E8")]
	public bool IsInventoryOpen()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x12492F0", Offset = "0x12492F0", VA = "0x12492F0")]
	public void AddPickupImgToInv(Sprite s, ItemInterpreter.PickupDiskRepresentation upgrade)
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x12496AC", Offset = "0x12496AC", VA = "0x12496AC")]
	public void OpenMainMenu()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x1249718", Offset = "0x1249718", VA = "0x1249718")]
	public void SetPrimaryWeaponHand(bool left)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x12497B0", Offset = "0x12497B0", VA = "0x12497B0")]
	private void EnableBaseInteract()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x12497DC", Offset = "0x12497DC", VA = "0x12497DC")]
	public Slot GetSlotWithItem(GameObject g)
	{
		return null;
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x12498A4", Offset = "0x12498A4", VA = "0x12498A4")]
	public void ClearInventory()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x12499B4", Offset = "0x12499B4", VA = "0x12499B4")]
	private void DisableBaseInteract()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x12499E0", Offset = "0x12499E0", VA = "0x12499E0")]
	public void RefreshDetailInfos()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x124A6B4", Offset = "0x124A6B4", VA = "0x124A6B4")]
	public void Close()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x124A6C0", Offset = "0x124A6C0", VA = "0x124A6C0")]
	private void OnCloseFinish()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x1248E08", Offset = "0x1248E08", VA = "0x1248E08")]
	public void OpenStatScreen()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x124A73C", Offset = "0x124A73C", VA = "0x124A73C")]
	public void EndRun()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x124A808", Offset = "0x124A808", VA = "0x124A808")]
	public void ToggleSettings()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x124A85C", Offset = "0x124A85C", VA = "0x124A85C")]
	public Inventory()
	{
	}
}
[Token(Token = "0x200023A")]
public class RotateInInventory : MonoBehaviour
{
	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotateDir;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slot slot;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float inventoryOffset;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rb;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _startRot;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private BaseInteract _bi;

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x124A920", Offset = "0x124A920", VA = "0x124A920")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x124AA60", Offset = "0x124AA60", VA = "0x124AA60")]
	private void _bi_GripStart(BaseInteract b)
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x124AAF0", Offset = "0x124AAF0", VA = "0x124AAF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x124ACBC", Offset = "0x124ACBC", VA = "0x124ACBC")]
	public RotateInInventory()
	{
	}
}
[Token(Token = "0x200023B")]
public class Slot : MonoBehaviour
{
	[Token(Token = "0x200023C")]
	public enum SLOT_ID
	{
		[Token(Token = "0x4000B0D")]
		LEFT_HAND,
		[Token(Token = "0x4000B0E")]
		RIGHT_HAND
	}

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color highlightColor;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SLOT_ID slotID;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SpriteRenderer _sprRend;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject objInSlot;

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x124ACD4", Offset = "0x124ACD4", VA = "0x124ACD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x1249958", Offset = "0x1249958", VA = "0x1249958")]
	public void ClearSlot()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x124AD4C", Offset = "0x124AD4C", VA = "0x124AD4C")]
	private bool IsAllowedInSlot(BaseInteract bi)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x124AE9C", Offset = "0x124AE9C", VA = "0x124AE9C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x124B024", Offset = "0x124B024", VA = "0x124B024")]
	private void GripEnd(BaseInteract bi)
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x124B0C4", Offset = "0x124B0C4", VA = "0x124B0C4")]
	public bool PlaceObjectInSlot(BaseInteract bi)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x124B3A0", Offset = "0x124B3A0", VA = "0x124B3A0")]
	public void SetBaseInteract(bool _v)
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x124B458", Offset = "0x124B458", VA = "0x124B458")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x124B5B4", Offset = "0x124B5B4", VA = "0x124B5B4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x124B72C", Offset = "0x124B72C", VA = "0x124B72C")]
	public Slot()
	{
	}
}
[Token(Token = "0x200023D")]
public class WristInfo : UtilBehavior
{
	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool _isOpen;

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x124B734", Offset = "0x124B734", VA = "0x124B734")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x124B84C", Offset = "0x124B84C", VA = "0x124B84C")]
	private void Instance_GameHandlerInitialized()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x124B8A4", Offset = "0x124B8A4", VA = "0x124B8A4")]
	private void OpenCheck()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x124BB7C", Offset = "0x124BB7C", VA = "0x124BB7C")]
	public WristInfo()
	{
	}
}
[Token(Token = "0x200023E")]
public class ActivePickupSlot : MonoBehaviour
{
	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRenderer currentActiveSprite;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform greenChargeAmount;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ItemInterpreter.PickupDiskRepresentation activePickup;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject particlesReady;

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x124BB84", Offset = "0x124BB84", VA = "0x124BB84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x124BBA8", Offset = "0x124BBA8", VA = "0x124BBA8")]
	public void UpdateActivePickupSlot(ItemInterpreter.PickupDiskRepresentation _pickup)
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x124C75C", Offset = "0x124C75C", VA = "0x124C75C")]
	public void UpdateChargeDisplay()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x124C87C", Offset = "0x124C87C", VA = "0x124C87C")]
	public void AddCharge()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x124C8B0", Offset = "0x124C8B0", VA = "0x124C8B0")]
	public ActivePickupSlot()
	{
	}
}
[Token(Token = "0x200023F")]
public class BladeCreator : ItemCreator
{
	[Token(Token = "0x2000240")]
	public enum BASE_COLOR
	{
		[Token(Token = "0x4000B1D")]
		METAL,
		[Token(Token = "0x4000B1E")]
		CROSSBOW
	}

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BASE_COLOR baseColor;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color[] colorsToIgnore;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite shape;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<(int region, float fillRatePerc, Color color, bool randomizeColor, bool update)> colorHistory;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Dictionary<int, (Color color, Color defaultCol)> colorRegionsMetalNum;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Dictionary<Color, Color> colorRegionsMetal;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Dictionary<int, (Color color, Color defaultCol)> colorRegionsCrossbowNum;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Dictionary<Color, Color> colorRegionsCrossbow;

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x124C8B8", Offset = "0x124C8B8", VA = "0x124C8B8", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x124C8E8", Offset = "0x124C8E8", VA = "0x124C8E8")]
	private void GenerateHelperDict()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x124CBF8", Offset = "0x124CBF8", VA = "0x124CBF8")]
	public void UpdateWeaponTexture(Sprite s)
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x124D41C", Offset = "0x124D41C", VA = "0x124D41C", Slot = "5")]
	public override void CreateItemMesh()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x124DB50", Offset = "0x124DB50", VA = "0x124DB50")]
	public void ReapplyColorHistory()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x124CCF8", Offset = "0x124CCF8", VA = "0x124CCF8")]
	public void UpdateWeaponColors(int region, float fillRatePerc, Color color, bool randomizeColor, bool update = true, bool putInHistory = true)
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x124DCB0", Offset = "0x124DCB0", VA = "0x124DCB0")]
	public BladeCreator()
	{
	}
}
[Token(Token = "0x2000241")]
public class Arrow : MonoBehaviour
{
	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int damage;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float knockbackStrength;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody _rb;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _orientation;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _stuck;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private FixedJoint _colJoint;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SphereCollider _coll;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 _localStuckPosition;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<LivingBase> _eventSubscriptions;

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x124E458", Offset = "0x124E458", VA = "0x124E458")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x124E5AC", Offset = "0x124E5AC", VA = "0x124E5AC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x124E730", Offset = "0x124E730", VA = "0x124E730")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x124E734", Offset = "0x124E734", VA = "0x124E734")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x124E868", Offset = "0x124E868", VA = "0x124E868")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x124F224", Offset = "0x124F224", VA = "0x124F224")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x124F420", Offset = "0x124F420", VA = "0x124F420")]
	private void E_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x124F47C", Offset = "0x124F47C", VA = "0x124F47C")]
	public Arrow()
	{
	}
}
[Token(Token = "0x2000242")]
public class CrossbowBase : WeaponBase
{
	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BladeCreator[] bladeCreators;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Animator animo;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject arrowDecoy;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject crossbowBolt;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Weapon Values")]
	public float shootSpeed;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float pullbackDistance;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float pullbackSpeed;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float explosionRadius;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float minHandleVelocityForMelee;

	[NonSerialized]
	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool crossbowLoaded;

	[NonSerialized]
	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	public bool handInLoadingZone;

	[NonSerialized]
	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
	public bool boltAttached;

	[NonSerialized]
	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public WeaponCrossbowBolt bolt;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Rigidbody _boltRb;

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x124F484", Offset = "0x124F484", VA = "0x124F484")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x124F758", Offset = "0x124F758", VA = "0x124F758")]
	private void Trigger_performedLeft(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x124F934", Offset = "0x124F934", VA = "0x124F934")]
	private void Trigger_performedRight(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x124F798", Offset = "0x124F798", VA = "0x124F798")]
	private void Trigger_performed()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x124F9E8", Offset = "0x124F9E8", VA = "0x124F9E8", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x124FA04", Offset = "0x124FA04", VA = "0x124FA04")]
	private void IgnoreCollisions()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x124FBC4", Offset = "0x124FBC4", VA = "0x124FBC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x1250350", Offset = "0x1250350", VA = "0x1250350", Slot = "8")]
	public override void UnequipWeapon()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x1250404", Offset = "0x1250404", VA = "0x1250404")]
	public void OnCrossbowLoaded()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x12504CC", Offset = "0x12504CC", VA = "0x12504CC", Slot = "12")]
	public override void UpdateWeaponColors(Color region0, Color region1, Color region2, Color region3, Color region4, Color region5, Color region6, bool history = true)
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x12506EC", Offset = "0x12506EC", VA = "0x12506EC", Slot = "15")]
	public virtual void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x12512F8", Offset = "0x12512F8", VA = "0x12512F8", Slot = "13")]
	public override void SetTrailEmission(Color c, float intensity, float weight = 0.8f)
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x1251314", Offset = "0x1251314", VA = "0x1251314", Slot = "14")]
	public override void SetTrailColor(Color c, float weight = 0.8f)
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x1251330", Offset = "0x1251330", VA = "0x1251330")]
	public CrossbowBase()
	{
	}
}
[Token(Token = "0x2000244")]
public class CrossbowPullbackMechanism : BaseInteract
{
	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public CrossbowBase weaponCrossbow;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float _pullbackDistForMax;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float[] pullbackDistSounds;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Transform _controllerInUse;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float _zOffsetOnStart;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float _pullbackPerc;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _lastPullbackPerc;

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x125159C", Offset = "0x125159C", VA = "0x125159C", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x12515A4", Offset = "0x12515A4", VA = "0x12515A4", Slot = "9")]
	public override void OnUseStartLeft(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x12516C8", Offset = "0x12516C8", VA = "0x12516C8", Slot = "10")]
	public override void OnUseStartRight(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x12515C4", Offset = "0x12515C4", VA = "0x12515C4")]
	private void Use(bool left)
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x12516E8", Offset = "0x12516E8", VA = "0x12516E8", Slot = "12")]
	public override void OnUseEnd()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x125170C", Offset = "0x125170C", VA = "0x125170C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x12519BC", Offset = "0x12519BC", VA = "0x12519BC")]
	public CrossbowPullbackMechanism()
	{
	}
}
[Token(Token = "0x2000245")]
public class GenericRepresentation
{
	[Token(Token = "0x2000246")]
	public class ModdingCoroutine
	{
		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool shouldCancel;

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x1257DC0", Offset = "0x1257DC0", VA = "0x1257DC0")]
		public void Cancel()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x1254730", Offset = "0x1254730", VA = "0x1254730")]
		public ModdingCoroutine()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200024C")]
	[CompilerGenerated]
	private struct <ConnectWebSocket>d__67 : IAsyncStateMachine
	{
		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GenericRepresentation <>4__this;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string ip;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Task <connectTask>5__2;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x1258254", Offset = "0x1258254", VA = "0x1258254", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x1258900", Offset = "0x1258900", VA = "0x1258900", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200024D")]
	[CompilerGenerated]
	private struct <ReceiveWebSocketMessages>d__68 : IAsyncStateMachine
	{
		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GenericRepresentation <>4__this;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ArraySegment<byte> <buffer>5__2;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MemoryStream <ms>5__3;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Task<WebSocketReceiveResult> <socketMessage>5__4;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TaskAwaiter<WebSocketReceiveResult> <>u__1;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private TaskAwaiter <>u__2;

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x125890C", Offset = "0x125890C", VA = "0x125890C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x12593AC", Offset = "0x12593AC", VA = "0x12593AC", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DynValue ud_Physics;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static DynValue ud_Time;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static DynValue ud_CURRENT_FLOOR;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static DynValue ud_ATTACKTYPE;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static DynValue ud_LayerMask;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static DynValue ud_Vector3;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static DynValue ud_Vector2;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static DynValue ud_GameObject;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static DynValue ud_WallDecorator_WallInfo;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static DynValue ud_Mathf;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static DynValue ud_Quaternion;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static bool _isDocumentationRegistration;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static List<Type> _registeredTypes;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static List<Type> _registeredStaticTypes;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static List<Type> _defaultExposedTypes;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _fileName;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Script script;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float globalTickDelay;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float lastGlobalTick;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] preObjectSpawnListeners;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] postObjectSpawnListeners;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] entityDeathListeners;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int priority;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ModLoader.Mod modFileReference;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected AssetBundle _loadedAssetBundle;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected string _code;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ClientWebSocket webSocket;

	[Token(Token = "0x1700014A")]
	public bool IsModdedObject
	{
		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x12544B4", Offset = "0x12544B4", VA = "0x12544B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x12519CC", Offset = "0x12519CC", VA = "0x12519CC")]
	public static void RegisterUserData()
	{
	}

	[Token(Token = "0x6000BC4")]
	private static void RegisterModType<T>()
	{
	}

	[Token(Token = "0x6000BC5")]
	private static void RegisterStaticModType<T>(ref DynValue _staticVariable)
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x12533E8", Offset = "0x12533E8", VA = "0x12533E8")]
	public GenericRepresentation(string code, string fileName, ModLoader.Mod modReference)
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x1253454", Offset = "0x1253454", VA = "0x1253454", Slot = "4")]
	public virtual void OverwriteCode(string code)
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x12544C4", Offset = "0x12544C4", VA = "0x12544C4")]
	public Component GetComponentInChildren(DynValue _self, string _type)
	{
		return null;
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x12545E4", Offset = "0x12545E4", VA = "0x12545E4")]
	public string GetCode()
	{
		return null;
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x12545EC", Offset = "0x12545EC", VA = "0x12545EC")]
	public ModdingCoroutine CallFunctionIn(string method, float time, params object[] objs)
	{
		return null;
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x12547AC", Offset = "0x12547AC", VA = "0x12547AC")]
	public ModdingCoroutine CallFunctionOnRepeat(string method, float time, float interval, params object[] objs)
	{
		return null;
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x1254970", Offset = "0x1254970", VA = "0x1254970")]
	public Component AddComponent(DynValue _self, string _component)
	{
		return null;
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x1254BDC", Offset = "0x1254BDC", VA = "0x1254BDC")]
	public Component GetComponent(DynValue _self, string _component)
	{
		return null;
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x1254C40", Offset = "0x1254C40", VA = "0x1254C40", Slot = "5")]
	public virtual void LoadAssetBundle(string bundleNameWithPath)
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x1254DDC", Offset = "0x1254DDC", VA = "0x1254DDC")]
	public GameObject InstantiateFromAssetBundle(string name)
	{
		return null;
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x1254E80", Offset = "0x1254E80", VA = "0x1254E80")]
	public UnityEngine.Object GetObjectFromAssetBundle(string name, string type, string assembly = "UnityEngine")
	{
		return null;
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x1254F70", Offset = "0x1254F70", VA = "0x1254F70")]
	public Component[] GetComponentsInChildren(DynValue _self, string _component)
	{
		return null;
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x12551D4", Offset = "0x12551D4", VA = "0x12551D4")]
	public DynValue GetFieldFromScript(string fieldName)
	{
		return null;
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x12551F8", Offset = "0x12551F8", VA = "0x12551F8")]
	public void AddPreObjectSpawnListenersRuntimeByStrings(string[] _objectIds)
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x12554B8", Offset = "0x12554B8", VA = "0x12554B8")]
	public void AddPostObjectSpawnListenersRuntimeByStrings(string[] _objectIds)
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x12554C0", Offset = "0x12554C0", VA = "0x12554C0")]
	public void AddPreObjectSpawnListenersRuntimeByObjects(GameObject[] _mappings)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x1255BD8", Offset = "0x1255BD8", VA = "0x1255BD8")]
	public void AddPostObjectSpawnListenersRuntimeByObjects(GameObject[] _mappings)
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x1255558", Offset = "0x1255558", VA = "0x1255558")]
	private void AddObjectSpawnListenersRuntimeByObjects(GameObject[] _mappings, string _functionName, ref Dictionary<GameObject, List<GenericRepresentation>> _eventMap, ref GameObject[] _objectSpawnArrayToUse)
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x1255200", Offset = "0x1255200", VA = "0x1255200")]
	private void AddObjectSpawnListenersRuntimeByStrings(string[] _objectIds, bool _isPreEvent)
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x1255C70", Offset = "0x1255C70", VA = "0x1255C70")]
	private bool IsAddingListenerValid(int _listenersLength, string _listenerName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x1255D78", Offset = "0x1255D78", VA = "0x1255D78")]
	public void RegisterEvents()
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x124BCC4", Offset = "0x124BCC4", VA = "0x124BCC4")]
	public void UnregisterEvents()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x1256D6C", Offset = "0x1256D6C", VA = "0x1256D6C")]
	public string GetFilePath()
	{
		return null;
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x1248718", Offset = "0x1248718", VA = "0x1248718")]
	public DynValue Execute(string methodName, params object[] customData)
	{
		return null;
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x1256D74", Offset = "0x1256D74", VA = "0x1256D74")]
	public int GetModSettingValueAsInt(string identifier, int defaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x1256E80", Offset = "0x1256E80", VA = "0x1256E80")]
	public float GetModSettingValueAsFloat(string identifier, float defaultValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x1256F08", Offset = "0x1256F08", VA = "0x1256F08")]
	public string GetModSettingValueAsString(string identifier, string defaultValue)
	{
		return null;
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x1256DFC", Offset = "0x1256DFC", VA = "0x1256DFC")]
	private bool AreModSettingsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x1256F90", Offset = "0x1256F90", VA = "0x1256F90")]
	public float Dist(Vector3 a, Vector3 b)
	{
		return default(float);
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x1257028", Offset = "0x1257028", VA = "0x1257028")]
	public Color Col(float r, float g, float b, float a)
	{
		return default(Color);
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x125702C", Offset = "0x125702C", VA = "0x125702C")]
	public Vector3 Vec(float x, float y, float z)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x1257030", Offset = "0x1257030", VA = "0x1257030")]
	public Vector2 Vec2(float x, float y)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x1257034", Offset = "0x1257034", VA = "0x1257034")]
	public Vector2Int Vec2i(int x, int y)
	{
		return default(Vector2Int);
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x1257040", Offset = "0x1257040", VA = "0x1257040")]
	public void SendWebSocketMessage(string message)
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x125719C", Offset = "0x125719C", VA = "0x125719C")]
	[AsyncStateMachine(typeof(<ConnectWebSocket>d__67))]
	public void ConnectWebSocket(string ip)
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x1257274", Offset = "0x1257274", VA = "0x1257274")]
	[AsyncStateMachine(typeof(<ReceiveWebSocketMessages>d__68))]
	private void ReceiveWebSocketMessages()
	{
	}
}
[Token(Token = "0x200024E")]
public class HandBase : SwordBase
{
	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[Header("Hand Config")]
	public PlayerHand hand;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public SphereCollider originalHandColl;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Rigidbody _controllerPhysics;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector3 _snapPos;

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x12593B8", Offset = "0x12593B8", VA = "0x12593B8", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x125947C", Offset = "0x125947C", VA = "0x125947C")]
	private void Instance_GameHandlerInitialized()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x12595A0", Offset = "0x12595A0", VA = "0x12595A0", Slot = "15")]
	public override Vector3 GetHandleVelocityEstimate()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x1259654", Offset = "0x1259654", VA = "0x1259654", Slot = "16")]
	public override Vector3 GetTipVelocityEstimate()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x1259708", Offset = "0x1259708", VA = "0x1259708", Slot = "17")]
	public override void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x12597CC", Offset = "0x12597CC", VA = "0x12597CC")]
	public void DoHapticPulse(float strength)
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x12598CC", Offset = "0x12598CC", VA = "0x12598CC", Slot = "19")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x125996C", Offset = "0x125996C", VA = "0x125996C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x1259D1C", Offset = "0x1259D1C", VA = "0x1259D1C")]
	public HandBase()
	{
	}
}
[Token(Token = "0x200024F")]
public class ItemBase : BaseInteract
{
	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Item Base General Info")]
	public bool showHightlightInfo;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string displayName;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string displayDesc;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string displayId;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public bool isActivateItem;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[SerializeField]
	private int _priceInShop;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Range(0f, 1f)]
	[Header("Spawn Infos")]
	public float spawnProbability;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[Header("Runtime Variables")]
	public bool currentlyInShop;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Collider[] _solidColliders;

	[Token(Token = "0x1700014F")]
	public int PriceInShop
	{
		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x1259D24", Offset = "0x1259D24", VA = "0x1259D24")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x1259EC0", Offset = "0x1259EC0", VA = "0x1259EC0")]
		set
		{
		}
	}

	[Token(Token = "0x17000150")]
	public int UnmodifiedPriceInShop
	{
		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x1259EC8", Offset = "0x1259EC8", VA = "0x1259EC8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x1259ED0", Offset = "0x1259ED0", VA = "0x1259ED0", Slot = "19")]
	public virtual string GetLocalizedName()
	{
		return null;
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x1259F48", Offset = "0x1259F48", VA = "0x1259F48", Slot = "20")]
	public virtual string GetLocalizedDesc()
	{
		return null;
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x1259FC0", Offset = "0x1259FC0", VA = "0x1259FC0", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x125A45C", Offset = "0x125A45C", VA = "0x125A45C", Slot = "13")]
	public override void OnTouchStart(bool left)
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x125A56C", Offset = "0x125A56C", VA = "0x125A56C", Slot = "14")]
	public override void OnTouchEnd(bool left)
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x125A614", Offset = "0x125A614", VA = "0x125A614", Slot = "16")]
	public override void OnGripStart(bool left)
	{
	}

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x125A840", Offset = "0x125A840", VA = "0x125A840", Slot = "15")]
	public override void OnGripEnd(bool left)
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x125A914", Offset = "0x125A914", VA = "0x125A914")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x125A9A4", Offset = "0x125A9A4", VA = "0x125A9A4")]
	public ItemBase()
	{
	}
}
[Token(Token = "0x2000251")]
public class ItemCreator : MonoBehaviour
{
	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public Material sourceMaterial;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite sprite;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool centerSpriteX;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool rightAlignSpriteX;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool centerSpriteY;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool applyToMeshCollider;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool generateOnStart;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Texture2D _texture;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> verts;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<int> tris;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Vector2> uvs;

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x124CBE0", Offset = "0x124CBE0", VA = "0x124CBE0", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x125AA88", Offset = "0x125AA88", VA = "0x125AA88", Slot = "5")]
	[ContextMenu("Create Item Mesh")]
	public virtual void CreateItemMesh()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x124D3A8", Offset = "0x124D3A8", VA = "0x124D3A8")]
	public void UpdateItemMesh()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x125BD10", Offset = "0x125BD10", VA = "0x125BD10")]
	private void CreateQuad(Vector3 pos, float width, float height, bool flipped, int quer, Vector3 uvOffset)
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x125B0C0", Offset = "0x125B0C0", VA = "0x125B0C0")]
	private void GenerateMesh()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x124E324", Offset = "0x124E324", VA = "0x124E324")]
	public ItemCreator()
	{
	}
}
[Token(Token = "0x2000252")]
public class ItemFood : ItemBase
{
	[Token(Token = "0x2000253")]
	[CompilerGenerated]
	private sealed class <DestroyFoodItemIfNeeded>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemFood <>4__this;

		[Token(Token = "0x17000151")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C33")]
			[Address(RVA = "0x125D980", Offset = "0x125D980", VA = "0x125D980", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000152")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0x125D9C8", Offset = "0x125D9C8", VA = "0x125D9C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x125D110", Offset = "0x125D110", VA = "0x125D110")]
		[DebuggerHidden]
		public <DestroyFoodItemIfNeeded>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x125D7A0", Offset = "0x125D7A0", VA = "0x125D7A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x125D7A4", Offset = "0x125D7A4", VA = "0x125D7A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x125D988", Offset = "0x125D988", VA = "0x125D988", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[NonSerialized]
	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Header("Food Specific")]
	public LivingBase livingBase;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int healAmount;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float distanceFromHeadsetToEat;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Sprite highlightInfoSprite;

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x125CDA4", Offset = "0x125CDA4", VA = "0x125CDA4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x125CE88", Offset = "0x125CE88", VA = "0x125CE88", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x125CE14", Offset = "0x125CE14", VA = "0x125CE14")]
	[IteratorStateMachine(typeof(<DestroyFoodItemIfNeeded>d__6))]
	private IEnumerator DestroyFoodItemIfNeeded()
	{
		return null;
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x125D138", Offset = "0x125D138", VA = "0x125D138", Slot = "17")]
	public override void OnPutInSlot(Slot slot)
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x125D29C", Offset = "0x125D29C", VA = "0x125D29C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x125D48C", Offset = "0x125D48C", VA = "0x125D48C")]
	private void Eat()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x125D78C", Offset = "0x125D78C", VA = "0x125D78C")]
	public ItemFood()
	{
	}
}
[Token(Token = "0x2000254")]
public class ItemInterpreter : MonoBehaviour
{
	[Token(Token = "0x2000255")]
	public class HitInfos
	{
		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LivingBase entity;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 hitPosition;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float damage;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WeaponBase usedWeapon;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isCritical;

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x125E478", Offset = "0x125E478", VA = "0x125E478")]
		public HitInfos()
		{
		}
	}

	[Token(Token = "0x2000256")]
	public class PickupDiskRepresentation : GenericRepresentation
	{
		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string id;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string name;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string desc;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float probability;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int maxAmount;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int amountUses;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int currentCharge;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string[] spawnsIn;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int price;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public bool isActivateItem;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int tier;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Sprite sprite;

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x125E480", Offset = "0x125E480", VA = "0x125E480")]
		public PickupDiskRepresentation(string code, string fileName, string id, ModLoader.Mod modReference)
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x125E650", Offset = "0x125E650", VA = "0x125E650", Slot = "4")]
		public override void OverwriteCode(string code)
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x125E744", Offset = "0x125E744", VA = "0x125E744")]
		public string GetLocalizedName()
		{
			return null;
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0x125E79C", Offset = "0x125E79C", VA = "0x125E79C")]
		public string GetLocalizedDesc()
		{
			return null;
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x125E7F4", Offset = "0x125E7F4", VA = "0x125E7F4")]
		public void RegisterItem()
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x125EF34", Offset = "0x125EF34", VA = "0x125EF34")]
		public void RegisterUsable()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x125F8DC", Offset = "0x125F8DC", VA = "0x125F8DC")]
		public void ActivateUsable()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x125F994", Offset = "0x125F994", VA = "0x125F994")]
		public void OnPickup()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x125FA0C", Offset = "0x125FA0C", VA = "0x125FA0C")]
		public bool HasFoundItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x125E1B0", Offset = "0x125E1B0", VA = "0x125E1B0")]
		public bool HasUnlockedItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x125FAC8", Offset = "0x125FAC8", VA = "0x125FAC8")]
		public int AmountActive()
		{
			return default(int);
		}
	}

	[Token(Token = "0x200025D")]
	[CompilerGenerated]
	private sealed class <ReadItemsFromDisk>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ItemInterpreter <>4__this;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DataCoroutine<Dictionary<string, (string code, ModLoader.Mod mod)>> <luaFilesRoutine>5__2;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DataCoroutine<Dictionary<string, (byte[] byteArray, ModLoader.Mod mod)>> <pngFilesRoutine>5__3;

		[Token(Token = "0x17000155")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C61")]
			[Address(RVA = "0x1260838", Offset = "0x1260838", VA = "0x1260838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000156")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0x1260880", Offset = "0x1260880", VA = "0x1260880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x125E348", Offset = "0x125E348", VA = "0x125E348")]
		[DebuggerHidden]
		public <ReadItemsFromDisk>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x125FF04", Offset = "0x125FF04", VA = "0x125FF04", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x125FF08", Offset = "0x125FF08", VA = "0x125FF08", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x1260840", Offset = "0x1260840", VA = "0x1260840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> pickupsFoundDuringFloorAnalytics;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PickupDiskRepresentation[] pickupsOnDisk;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<PickupDiskRepresentation, int> activePickups;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<PickupDiskRepresentation> activePickupsInOrder;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Dictionary<string, int> spawnedUpgradesOnFloor;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PickupDiskRepresentation currentUsable;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dictionary<string, int> usableSavedCharges;

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x125D9D0", Offset = "0x125D9D0", VA = "0x125D9D0")]
	public PickupDiskRepresentation GetItemById(string id)
	{
		return null;
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x125DB40", Offset = "0x125DB40", VA = "0x125DB40")]
	public int PickupFoundInRun(string id)
	{
		return default(int);
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x125DD50", Offset = "0x125DD50", VA = "0x125DD50")]
	public int TotalPickupsFoundInRun()
	{
		return default(int);
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x125DBE8", Offset = "0x125DBE8", VA = "0x125DBE8")]
	public PickupDiskRepresentation GetPickupById(string id)
	{
		return null;
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x125DDA8", Offset = "0x125DDA8", VA = "0x125DDA8")]
	public PickupDiskRepresentation GetRandomPickup(int seed, string pool, int forceTier = -1, int _try = 0)
	{
		return null;
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x125E11C", Offset = "0x125E11C", VA = "0x125E11C")]
	public int GetUpgradeAmount(PickupDiskRepresentation _pdr)
	{
		return default(int);
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x125E244", Offset = "0x125E244", VA = "0x125E244")]
	public GameObject GetObjectFromMapping(string id)
	{
		return null;
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x125E2D4", Offset = "0x125E2D4", VA = "0x125E2D4")]
	[IteratorStateMachine(typeof(<ReadItemsFromDisk>d__16))]
	public IEnumerator ReadItemsFromDisk()
	{
		return null;
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x125E370", Offset = "0x125E370", VA = "0x125E370")]
	public ItemInterpreter()
	{
	}
}
[Token(Token = "0x200025E")]
public class ItemPotion : ItemBase
{
	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[Header("Potion Specific")]
	public PotionInterpreter.PotionDiskRepresentation potionRepresentation;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("HighlightInfo Stuff")]
	public Sprite potionIcon;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string potionValue;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Header("Object References")]
	public ParticleSystem.EmissionModule emissionModule;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public ParticleSystem particles;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public MeshRenderer fillerRenderer;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject potionCloudParticles;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public string forcePotion;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public bool opened;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[HideInInspector]
	public ThrowableBase throwableBase;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float _timeOverHead;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float _maxFill;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float _timer;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private LivingBase _livingBase;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private CollisionEnhancer _collisionEnhancer;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private MeshCollider _meshCollider;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ParticleSystem.MinMaxGradient particleColors;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int _overrideHash;

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x1260888", Offset = "0x1260888", VA = "0x1260888", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x12611E0", Offset = "0x12611E0", VA = "0x12611E0")]
	public void OverrideHash(int hash)
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x12611E8", Offset = "0x12611E8", VA = "0x12611E8")]
	private void RemoveInvincible()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x1261070", Offset = "0x1261070", VA = "0x1261070")]
	public void ColorPotion(Color c)
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x126120C", Offset = "0x126120C", VA = "0x126120C", Slot = "17")]
	public override void OnPutInSlot(Slot slot)
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x1261260", Offset = "0x1261260", VA = "0x1261260", Slot = "18")]
	public override void OnTakeFromSlot()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x12612A0", Offset = "0x12612A0", VA = "0x12612A0")]
	private void _livingBase_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x1261708", Offset = "0x1261708", VA = "0x1261708")]
	public ItemPotion()
	{
	}
}
[Token(Token = "0x200025F")]
[RequireComponent(typeof(RotateWhenIdle))]
public class ItemPushaway : MonoBehaviour
{
	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<ItemPushaway> pushawayList;

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x126171C", Offset = "0x126171C", VA = "0x126171C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x126187C", Offset = "0x126187C", VA = "0x126187C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x12618FC", Offset = "0x12618FC", VA = "0x12618FC")]
	public ItemPushaway()
	{
	}
}
[Token(Token = "0x2000261")]
public class ItemUpgrade : ItemBase
{
	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string pickupSound;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject pickupParticles;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string spawnPool;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string forceSpawn;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int forceTier;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public ItemInterpreter.PickupDiskRepresentation _moddingForceSpawn;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ItemInterpreter.PickupDiskRepresentation rolledItem;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private ItemCreator _creator;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool _pickedUp;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int _overrideHash;

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x1262054", Offset = "0x1262054", VA = "0x1262054", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x12625B0", Offset = "0x12625B0", VA = "0x12625B0")]
	public void OverrideHash(int hash)
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x12621E0", Offset = "0x12621E0", VA = "0x12621E0")]
	public void RollItem()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x12625B8", Offset = "0x12625B8", VA = "0x12625B8", Slot = "19")]
	public override string GetLocalizedName()
	{
		return null;
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x1262610", Offset = "0x1262610", VA = "0x1262610", Slot = "20")]
	public override string GetLocalizedDesc()
	{
		return null;
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x1262668", Offset = "0x1262668", VA = "0x1262668", Slot = "11")]
	public override void OnUseStart()
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x1262AE4", Offset = "0x1262AE4", VA = "0x1262AE4", Slot = "16")]
	public override void OnGripStart(bool left)
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x1262B0C", Offset = "0x1262B0C", VA = "0x1262B0C")]
	public ItemUpgrade()
	{
	}
}
[Token(Token = "0x2000262")]
public class JournalPageItem : MonoBehaviour
{
	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject journalPageUI;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _pickedUp;

	[NonSerialized]
	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public JournalInterpreter.JournalPage journalPage;

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x1262B1C", Offset = "0x1262B1C", VA = "0x1262B1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x1262C54", Offset = "0x1262C54", VA = "0x1262C54")]
	private void JournalPageItem_UseStart(BaseInteract b)
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x1262D00", Offset = "0x1262D00", VA = "0x1262D00")]
	public JournalPageItem()
	{
	}
}
[Token(Token = "0x2000264")]
public class PlayerSwordHandle : MonoBehaviour
{
	[Token(Token = "0x4000BF3")]
	private const string HANDLE_SAVE_ID = "player_sword_handle_mesh";

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh[] handlesMeshes;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x1263118", Offset = "0x1263118", VA = "0x1263118")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x1263174", Offset = "0x1263174", VA = "0x1263174")]
	public void SaveHandleMesh(int index)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x1263170", Offset = "0x1263170", VA = "0x1263170")]
	private void UpdateHandleMesh()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x1263178", Offset = "0x1263178", VA = "0x1263178")]
	public PlayerSwordHandle()
	{
	}
}
[Token(Token = "0x2000265")]
[Obsolete("We only have orbs left, potions are not in game anymore")]
public class PotionCork : MonoBehaviour
{
	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ItemPotion potion;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ADSoundEffect soundPlop;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform corkAnchorPos;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SphereCollider _sphereColl;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ConfigurableJoint _configJoint;

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x1263180", Offset = "0x1263180", VA = "0x1263180")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x1263224", Offset = "0x1263224", VA = "0x1263224")]
	public void SetInteractable(bool _val)
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x1263308", Offset = "0x1263308", VA = "0x1263308")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x12633C8", Offset = "0x12633C8", VA = "0x12633C8")]
	private void OnJointBreak(float breakForce)
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x1263418", Offset = "0x1263418", VA = "0x1263418")]
	public PotionCork()
	{
	}
}
[Token(Token = "0x2000266")]
public class PotionInterpreter : MonoBehaviour
{
	[Token(Token = "0x2000267")]
	public class PotionEffectInstance
	{
		[Token(Token = "0x2000268")]
		[CompilerGenerated]
		private sealed class <PotionRoutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x4000C06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PotionEffectInstance <>4__this;

			[Token(Token = "0x4000C07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PotionDiskRepresentation potionRepre;

			[Token(Token = "0x4000C08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <_timer>5__2;

			[Token(Token = "0x1700015B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000C9D")]
				[Address(RVA = "0x1263CE4", Offset = "0x1263CE4", VA = "0x1263CE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000C9F")]
				[Address(RVA = "0x1263D2C", Offset = "0x1263D2C", VA = "0x1263D2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0x1263B94", Offset = "0x1263B94", VA = "0x1263B94")]
			[DebuggerHidden]
			public <PotionRoutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0x1263BBC", Offset = "0x1263BBC", VA = "0x1263BBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0x1263BC0", Offset = "0x1263BC0", VA = "0x1263BC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0x1263CEC", Offset = "0x1263CEC", VA = "0x1263CEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isActive;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyBase[] affectedEnemies;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LivingBase[] affectedLivings;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerLiving affectedPlayer;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _forceStop;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PotionDiskRepresentation _repre;

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x1263554", Offset = "0x1263554", VA = "0x1263554")]
		public PotionEffectInstance(ItemPotion potion)
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x1263980", Offset = "0x1263980", VA = "0x1263980")]
		public void ForceStopEffect()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x12639BC", Offset = "0x12639BC", VA = "0x12639BC")]
		public bool IsEffectTimeInvalid()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x12638E0", Offset = "0x12638E0", VA = "0x12638E0")]
		[IteratorStateMachine(typeof(<PotionRoutine>d__9))]
		private IEnumerator PotionRoutine(float duration, PotionDiskRepresentation potionRepre)
		{
			return null;
		}
	}

	[Token(Token = "0x2000269")]
	public class PotionDiskRepresentation : GenericRepresentation
	{
		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string id;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string name;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string desc;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float probability;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string[] spawnsIn;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int price;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float effectTime;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Color color;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool contactDamage;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool affectsPlayer;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		public bool affectsEnemies;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAB")]
		public bool affectsLiving;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float breakEffectDistance;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool showActiveVignette;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool createEffectInstance;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<PotionEffectInstance> potionEffectInstances;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _eventsRegistered;

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x1263D34", Offset = "0x1263D34", VA = "0x1263D34")]
		public PotionDiskRepresentation(string code, string fileName, string id, ModLoader.Mod modReference)
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x1260FC0", Offset = "0x1260FC0", VA = "0x1260FC0")]
		public string GetLocalizedName()
		{
			return null;
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x1261018", Offset = "0x1261018", VA = "0x1261018")]
		public string GetLocalizedDesc()
		{
			return null;
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x1263EE8", Offset = "0x1263EE8", VA = "0x1263EE8")]
		public int GetTimesPlayerAffected()
		{
			return default(int);
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x1261478", Offset = "0x1261478", VA = "0x1261478")]
		public void OnPotionBreak(ItemPotion potion)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x1264088", Offset = "0x1264088", VA = "0x1264088")]
		public void ClearEffects()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x12639E0", Offset = "0x12639E0", VA = "0x12639E0")]
		public void OnPotionRunOut(PotionEffectInstance effectInstance)
		{
		}
	}

	[Token(Token = "0x200026E")]
	[CompilerGenerated]
	private sealed class <ReadPotionsFromDisk>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PotionInterpreter <>4__this;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DataCoroutine<List<PotionDiskRepresentation>> <data>5__2;

		[Token(Token = "0x1700015D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0x1264718", Offset = "0x1264718", VA = "0x1264718", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0x1264760", Offset = "0x1264760", VA = "0x1264760", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x12634A4", Offset = "0x12634A4", VA = "0x12634A4")]
		[DebuggerHidden]
		public <ReadPotionsFromDisk>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x12644EC", Offset = "0x12644EC", VA = "0x12644EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x12644F0", Offset = "0x12644F0", VA = "0x12644F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x1264720", Offset = "0x1264720", VA = "0x1264720", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PotionDiskRepresentation[] potionsOnDisk;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<PotionDiskRepresentation> activePotions;

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x1260C18", Offset = "0x1260C18", VA = "0x1260C18")]
	public PotionDiskRepresentation GetRandomPotion(string pool, int seed, int _try = 0)
	{
		return null;
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x1260EDC", Offset = "0x1260EDC", VA = "0x1260EDC")]
	public PotionDiskRepresentation GetPotionByName(string name)
	{
		return null;
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x1263430", Offset = "0x1263430", VA = "0x1263430")]
	[IteratorStateMachine(typeof(<ReadPotionsFromDisk>d__6))]
	public IEnumerator ReadPotionsFromDisk()
	{
		return null;
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x12634CC", Offset = "0x12634CC", VA = "0x12634CC")]
	public PotionInterpreter()
	{
	}
}
[Token(Token = "0x200026F")]
public class PotionWobble : MonoBehaviour
{
	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 lastPos;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 velocity;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 lastRot;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 angularVelocity;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MaxWobble;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float WobbleSpeed;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float Recovery;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float wobbleAmountX;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float wobbleAmountZ;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float wobbleAmountToAddX;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float wobbleAmountToAddZ;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float pulse;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float time;

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x1264768", Offset = "0x1264768", VA = "0x1264768")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x12647C0", Offset = "0x12647C0", VA = "0x12647C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x1264A70", Offset = "0x1264A70", VA = "0x1264A70")]
	public PotionWobble()
	{
	}
}
[Token(Token = "0x2000270")]
public class RandomItemSpawner : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000271")]
	public struct DropPosition
	{
		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 offset;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[Range(0f, 1f)]
		public float spawnProbability;
	}

	[Serializable]
	[Token(Token = "0x2000272")]
	public struct DropEntry
	{
		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject item;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Range(0f, 1f)]
		public float probability;

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x1264CA0", Offset = "0x1264CA0", VA = "0x1264CA0")]
		public bool IsValid()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DropPosition[] dropPositions;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DropEntry[] dropEntries;

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x1264A94", Offset = "0x1264A94", VA = "0x1264A94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x1264A98", Offset = "0x1264A98", VA = "0x1264A98")]
	private void SpawnLoot()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x1264CCC", Offset = "0x1264CCC", VA = "0x1264CCC")]
	public RandomItemSpawner()
	{
	}
}
[Token(Token = "0x2000273")]
public enum Rarity
{
	[Token(Token = "0x4000C39")]
	COMMON,
	[Token(Token = "0x4000C3A")]
	UNCOMMON,
	[Token(Token = "0x4000C3B")]
	RARE,
	[Token(Token = "0x4000C3C")]
	EPIC,
	[Token(Token = "0x4000C3D")]
	LEGENDARY,
	[Token(Token = "0x4000C3E")]
	CURSED,
	[Token(Token = "0x4000C3F")]
	DONTSHOW
}
[Token(Token = "0x2000274")]
public class RotateWhenIdle : MonoBehaviour
{
	[Token(Token = "0x2000275")]
	[CompilerGenerated]
	private sealed class <UpdatePositionRoutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float _delay;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RotateWhenIdle <>4__this;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 _pos;

		[Token(Token = "0x1700015F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CCA")]
			[Address(RVA = "0x12655D4", Offset = "0x12655D4", VA = "0x12655D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000160")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CCC")]
			[Address(RVA = "0x126561C", Offset = "0x126561C", VA = "0x126561C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x1264CD4", Offset = "0x1264CD4", VA = "0x1264CD4")]
		[DebuggerHidden]
		public <UpdatePositionRoutine>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x12654E4", Offset = "0x12654E4", VA = "0x12654E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x12654E8", Offset = "0x12654E8", VA = "0x12654E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x12655DC", Offset = "0x12655DC", VA = "0x12655DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Rotation Settings")]
	public bool shouldRotate;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rotateDir;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Movement Settings")]
	public bool shouldMoveUpDown;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 upDownAmount;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("QoL Settings")]
	public bool restartScriptOnLowVelocity;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 startPos;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody rigidb;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 startRotation;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool _currentlyActive;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool _grabbed;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _timeOnLowVel;

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x1261F64", Offset = "0x1261F64", VA = "0x1261F64")]
	[IteratorStateMachine(typeof(<UpdatePositionRoutine>d__10))]
	public IEnumerator UpdatePositionRoutine(Vector3 _pos, float _delay)
	{
		return null;
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x1264CFC", Offset = "0x1264CFC", VA = "0x1264CFC")]
	public void UpdatePosition(Vector3 _pos, float _delay)
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x1264D1C", Offset = "0x1264D1C", VA = "0x1264D1C")]
	public void SetDistanceOverGround(float dist, float delay)
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x1264F34", Offset = "0x1264F34", VA = "0x1264F34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x12650E4", Offset = "0x12650E4", VA = "0x12650E4")]
	private void _bi_GripEnd(BaseInteract bi)
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x12650EC", Offset = "0x12650EC", VA = "0x12650EC")]
	private void _bi_GripStart(BaseInteract bi)
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x12650F8", Offset = "0x12650F8", VA = "0x12650F8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x126521C", Offset = "0x126521C", VA = "0x126521C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x12654AC", Offset = "0x12654AC", VA = "0x12654AC")]
	public RotateWhenIdle()
	{
	}
}
[Token(Token = "0x2000276")]
public class SacrificeStatue : MonoBehaviour
{
	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string dropId;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject textInfo;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem sacrificeParticles;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int timesSacrificed;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro hintText;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color colorHealth;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color colorKeys;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color colorCash;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color colorHPContainer;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int _randomStatue;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _hasSacrificed;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private LivingBase _lb;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _eventsSubscribed;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool leftPressed;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool rightPressed;

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x1265624", Offset = "0x1265624", VA = "0x1265624")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x1265BB4", Offset = "0x1265BB4", VA = "0x1265BB4")]
	private void _lb_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x1265E9C", Offset = "0x1265E9C", VA = "0x1265E9C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x126615C", Offset = "0x126615C", VA = "0x126615C")]
	private void Trigger_canceled_left(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x1266174", Offset = "0x1266174", VA = "0x1266174")]
	private void Trigger_performed_left(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x12666AC", Offset = "0x12666AC", VA = "0x12666AC")]
	private void Trigger_canceled_right(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x12666C4", Offset = "0x12666C4", VA = "0x12666C4")]
	private void Trigger_performed_right(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x12661B4", Offset = "0x12661B4", VA = "0x12661B4")]
	private void UseSacrificeStatue()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x1266704", Offset = "0x1266704", VA = "0x1266704")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x12669C0", Offset = "0x12669C0", VA = "0x12669C0")]
	public SacrificeStatue()
	{
	}
}
[Token(Token = "0x2000278")]
public class SwordBase : WeaponBase
{
	[Token(Token = "0x2000279")]
	public delegate void OnSwordClash();

	[Token(Token = "0x200027A")]
	public delegate void OnEntityHit(Collision other, float dmg, LivingBase _l);

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Melee Velocity Information")]
	public VelocityEstimator tipVelocity;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float minHandleVelocity;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float minTipVelocity;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool calculateHitQuality;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[Header("Sound Settings")]
	public float minPitch;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float maxPitch;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float minVelocityForSwingSound;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string swingSound;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Range(0f, 1f)]
	public float volume;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[Header("Trail/Effect Information")]
	public ParticleSystem trail;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public ParticleSystem enemyHitParticles;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public MeshRenderer handleMaterial;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public MeshRenderer bladeMaterial;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Material _trailMaterial;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float trailMinTipVelocity;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float trailMinHandleVelocity;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[Header("Upgrade Information")]
	public BladeCreator bladeCreator;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private ParticleSystem.EmissionModule emissionModule;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private ParticleSystem _enemyHitParticlesInstance;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool overMinSoundVelocity;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Queue<(Vector3 tip, Vector3 handle)> _localPreviousSwordPositions;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float _timeSinceLastSwingSound;

	[Token(Token = "0x1400001F")]
	public event OnSwordClash SwordClashEvent
	{
		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x12669C8", Offset = "0x12669C8", VA = "0x12669C8")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x1266A64", Offset = "0x1266A64", VA = "0x1266A64")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000020")]
	public event OnEntityHit EntityHitEvent
	{
		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x1266B00", Offset = "0x1266B00", VA = "0x1266B00")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x1266B9C", Offset = "0x1266B9C", VA = "0x1266B9C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x1266C38", Offset = "0x1266C38", VA = "0x1266C38")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x1266F04", Offset = "0x1266F04", VA = "0x1266F04", Slot = "13")]
	public override void SetTrailEmission(Color c, float intensity, float weight = 0.8f)
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x1267068", Offset = "0x1267068", VA = "0x1267068", Slot = "12")]
	public override void UpdateWeaponColors(Color region0, Color region1, Color region2, Color region3, Color region4, Color region5, Color region6, bool history = true)
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x126726C", Offset = "0x126726C", VA = "0x126726C", Slot = "14")]
	public override void SetTrailColor(Color c, float weight = 0.8f)
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x1267394", Offset = "0x1267394", VA = "0x1267394")]
	public void OnGrab()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x1267408", Offset = "0x1267408", VA = "0x1267408", Slot = "15")]
	public virtual Vector3 GetHandleVelocityEstimate()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x1267424", Offset = "0x1267424", VA = "0x1267424", Slot = "16")]
	public virtual Vector3 GetTipVelocityEstimate()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x1267440", Offset = "0x1267440", VA = "0x1267440", Slot = "6")]
	public override void EquipWeapon(PlayerHand _hand)
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x12677BC", Offset = "0x12677BC", VA = "0x12677BC", Slot = "17")]
	public virtual void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x12695EC", Offset = "0x12695EC", VA = "0x12695EC", Slot = "18")]
	public virtual void OnHitEntity(Collision other, float dmg, LivingBase e)
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x126948C", Offset = "0x126948C", VA = "0x126948C")]
	public void SpawnHitImpactParticles(Collision other)
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x12695F0", Offset = "0x12695F0", VA = "0x12695F0", Slot = "19")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x1269F68", Offset = "0x1269F68", VA = "0x1269F68", Slot = "11")]
	public override void UpdateWeaponMesh(Sprite shape)
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x1269FB0", Offset = "0x1269FB0", VA = "0x1269FB0", Slot = "7")]
	public override void OnPlayerRotate()
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x1269A2C", Offset = "0x1269A2C", VA = "0x1269A2C")]
	private void HandleVisualAndSoundsUpdate()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x1269FDC", Offset = "0x1269FDC", VA = "0x1269FDC")]
	public SwordBase()
	{
	}
}
[Token(Token = "0x200027B")]
public class SwordEffectHandler : MonoBehaviour
{
	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x126A3A0", Offset = "0x126A3A0", VA = "0x126A3A0")]
	public SwordEffectHandler()
	{
	}
}
[Token(Token = "0x200027C")]
public class ThrowingKnifeBase : WeaponBase
{
	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Audio Settings")]
	public string throwSound;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string readySound;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string pullbackSound;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string catchSound;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Knife Settings")]
	public float aimAssistFactor;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform trail;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform defaultParticles;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioSource spinAudioSource;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public CapsuleCollider coll;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float pullbackSpeed;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public int pullbackDamage;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public int velocityHistoryDelay;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float throwStrength;

	[NonSerialized]
	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public VelocityEstimator velocityEstimatorLeft;

	[NonSerialized]
	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public VelocityEstimator velocityEstimatorRight;

	[NonSerialized]
	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public MeshRenderer meshRenderer;

	[NonSerialized]
	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public bool hasGravity;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public BladeCreator bladeCreator;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public bool dealsHitDamage;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Material _trailMaterial;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Queue<Vector3> velocityHistoryLeft;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Queue<Vector3> velocityHistoryRight;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Transform _stuckTo;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GameObject _stuckToHelperObject;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 _localStuckPosition;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private bool _gettingPulledBack;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float _knockbackDistance;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private PlayerHand _wantsToEquip;

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x126A3A8", Offset = "0x126A3A8", VA = "0x126A3A8")]
	public bool IsKnifeStuck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x126A408", Offset = "0x126A408", VA = "0x126A408", Slot = "5")]
	public override void OnTriggerInputReleased(PlayerHand.HandType handType)
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x126A558", Offset = "0x126A558", VA = "0x126A558", Slot = "6")]
	public override void EquipWeapon(PlayerHand _hand)
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x126A7B4", Offset = "0x126A7B4", VA = "0x126A7B4")]
	private void ActivateJointLock(bool activate)
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x126AC58", Offset = "0x126AC58", VA = "0x126AC58", Slot = "8")]
	public override void UnequipWeapon()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x126B590", Offset = "0x126B590", VA = "0x126B590")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x126B720", Offset = "0x126B720", VA = "0x126B720")]
	private void PostInit()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x126B8A8", Offset = "0x126B8A8", VA = "0x126B8A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x126B838", Offset = "0x126B838", VA = "0x126B838")]
	public void IgnoreCollisions(Collider[] _colls)
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x126BEDC", Offset = "0x126BEDC", VA = "0x126BEDC", Slot = "13")]
	public override void SetTrailEmission(Color c, float intensity, float weight = 0.8f)
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x126C040", Offset = "0x126C040", VA = "0x126C040", Slot = "14")]
	public override void SetTrailColor(Color c, float weight = 0.8f)
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x126C168", Offset = "0x126C168", VA = "0x126C168")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x126C464", Offset = "0x126C464", VA = "0x126C464")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x126CBE4", Offset = "0x126CBE4", VA = "0x126CBE4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x126DD84", Offset = "0x126DD84", VA = "0x126DD84", Slot = "12")]
	public override void UpdateWeaponColors(Color region0, Color region1, Color region2, Color region3, Color region4, Color region5, Color region6, bool history = true)
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x126DFB8", Offset = "0x126DFB8", VA = "0x126DFB8")]
	public void EnableCollision(bool enable)
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x126DFDC", Offset = "0x126DFDC", VA = "0x126DFDC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x126ACF4", Offset = "0x126ACF4", VA = "0x126ACF4")]
	public void OnThrow(PlayerHand _hand)
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x126DFE0", Offset = "0x126DFE0", VA = "0x126DFE0")]
	public void SpawnAdditionalKnife(float _velocityMultiplier, Vector3 _offset)
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x126A8D4", Offset = "0x126A8D4", VA = "0x126A8D4")]
	public void RefreshKnife(Quaternion goalRot)
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x126DFE4", Offset = "0x126DFE4", VA = "0x126DFE4")]
	private void DestroyKnifeDecoys()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x126A4BC", Offset = "0x126A4BC", VA = "0x126A4BC")]
	public void OnReleaseBeforeAtHand()
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x126BA68", Offset = "0x126BA68", VA = "0x126BA68")]
	public void MoveTowardsHand(Vector3 goalPos)
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x126DFE8", Offset = "0x126DFE8", VA = "0x126DFE8")]
	public ThrowingKnifeBase()
	{
	}
}
[Token(Token = "0x200027D")]
public class UnlockCompendium : MonoBehaviour
{
	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform hoverInfos;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform layoutItemGroup;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject prefabPickupImage;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite spriteLocked;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite spriteNotFound;

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x126E0E0", Offset = "0x126E0E0", VA = "0x126E0E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x126E2F8", Offset = "0x126E2F8", VA = "0x126E2F8")]
	public void RefreshItems()
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x126E22C", Offset = "0x126E22C", VA = "0x126E22C")]
	private void SetPickupImageVariables(UIPickupImage _img, ItemInterpreter.PickupDiskRepresentation _x)
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x126E3FC", Offset = "0x126E3FC", VA = "0x126E3FC")]
	public UnlockCompendium()
	{
	}
}
[Token(Token = "0x200027E")]
[Obsolete("Check if we still need this?")]
public class UnlockCompendiumHoverInfos : MonoBehaviour
{
	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI pickupName;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI pickupDesc;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color colorLocked;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color colorNotFound;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color colorFound;

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x126E404", Offset = "0x126E404", VA = "0x126E404")]
	public void UpdateInfos(ItemInterpreter.PickupDiskRepresentation info)
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x126E5E0", Offset = "0x126E5E0", VA = "0x126E5E0")]
	public UnlockCompendiumHoverInfos()
	{
	}
}
[Token(Token = "0x200027F")]
[Obsolete]
public class UnlockCompendiumPickupImage : MonoBehaviour
{
	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ItemCreator itemCreator;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite lockedImg;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite notFoundImg;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ADSoundEffect selectSound;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public UnlockCompendium unlockCompendiumReference;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ItemInterpreter.PickupDiskRepresentation _info;

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x126E5E8", Offset = "0x126E5E8", VA = "0x126E5E8")]
	public void CreateMesh(ItemInterpreter.PickupDiskRepresentation info)
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x126E678", Offset = "0x126E678", VA = "0x126E678")]
	public UnlockCompendiumPickupImage()
	{
	}
}
[Token(Token = "0x2000280")]
public class WallPlacer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000281")]
	public class PlaceEntry
	{
		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string entryType;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] possibleObjects;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Positioning")]
		public int minDistBetweenSpawns;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int minDistBetweenSpawnsLowQuality;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 1f)]
		public float probabilityToPlaceWhenPossible;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 maxDistancesFromMiddle;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 offsetFromOrigin;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float extraYRotation;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool canBeOverNothingness;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool checkCollisions;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string[] exludeRoomTypes;

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x126E8FC", Offset = "0x126E8FC", VA = "0x126E8FC")]
		public PlaceEntry()
		{
		}
	}

	[Token(Token = "0x2000282")]
	[CompilerGenerated]
	private sealed class <Place>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WorldGeneratorEvolved wge;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WallPlacer <>4__this;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<(Transform _t, int clusterId)> _walls;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <_loopCounter>5__2;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <i>5__3;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlaceEntry <_placeEntry>5__4;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Transform> <_placedObjs>5__5;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<(Transform _t, int clusterId)>.Enumerator <>7__wrap5;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private (Transform _t, int clusterId) <_w>5__7;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform <_wall>5__8;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 <_proposedPosition>5__9;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject <_obj>5__10;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Collider <_objColl>5__11;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider <_wallCollider>5__12;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<Collider> <_collisionChecks>5__13;

		[Token(Token = "0x17000161")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0x126FD8C", Offset = "0x126FD8C", VA = "0x126FD8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000162")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D21")]
			[Address(RVA = "0x126FDD4", Offset = "0x126FDD4", VA = "0x126FDD4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x126E7C8", Offset = "0x126E7C8", VA = "0x126E7C8")]
		[DebuggerHidden]
		public <Place>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x126E90C", Offset = "0x126E90C", VA = "0x126E90C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x126E938", Offset = "0x126E938", VA = "0x126E938", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x126FD3C", Offset = "0x126FD3C", VA = "0x126FD3C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x126FD94", Offset = "0x126FD94", VA = "0x126FD94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private System.Random placerRandom;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlaceEntry[] placeEntries;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, List<Transform>> _placeObjDict;

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x126E680", Offset = "0x126E680", VA = "0x126E680")]
	public PlaceEntry GetPlaceEntry(string e)
	{
		return null;
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x126E700", Offset = "0x126E700", VA = "0x126E700")]
	private float GetMinDistBetweenSpawns(PlaceEntry e)
	{
		return default(float);
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x126E724", Offset = "0x126E724", VA = "0x126E724")]
	[ContextMenu("PLACE")]
	[IteratorStateMachine(typeof(<Place>d__6))]
	public IEnumerator Place(WorldGeneratorEvolved wge, List<(Transform _t, int clusterId)> _walls)
	{
		return null;
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x126E7F0", Offset = "0x126E7F0", VA = "0x126E7F0")]
	private Vector3 RandVector(Vector3 _min, Vector3 _max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x126E874", Offset = "0x126E874", VA = "0x126E874")]
	public WallPlacer()
	{
	}
}
[Token(Token = "0x2000283")]
public abstract class WeaponBase : MonoBehaviour
{
	[Token(Token = "0x2000284")]
	public enum WEAPON_TYPE
	{
		[Token(Token = "0x4000CD1")]
		MELEE,
		[Token(Token = "0x4000CD2")]
		RANGED
	}

	[NonSerialized]
	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConfigurableJoint configurableJoint;

	[NonSerialized]
	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rigidb;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Base Config")]
	public VelocityEstimator handleVelocity;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VelocityEstimator grassCutVelocityComponent;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WEAPON_TYPE weaponType;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float extraEquipRotation;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Audio Settings")]
	public string equipSound;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string unequipSound;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Misc")]
	public string weaponName;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlayerLiving.PlayerStat damageStat;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PlayerLiving.PlayerStat criticalChanceStat;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Collider[] _colliders;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected PlayerHand _equippedHand;

	[Token(Token = "0x17000163")]
	public bool IsEquipped
	{
		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x126FDDC", Offset = "0x126FDDC", VA = "0x126FDDC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000164")]
	public PlayerHand EquippedHand
	{
		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x126FE3C", Offset = "0x126FE3C", VA = "0x126FE3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x126FE44", Offset = "0x126FE44", VA = "0x126FE44", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x126A4B8", Offset = "0x126A4B8", VA = "0x126A4B8", Slot = "5")]
	public virtual void OnTriggerInputReleased(PlayerHand.HandType handType)
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x1267478", Offset = "0x1267478", VA = "0x1267478", Slot = "6")]
	public virtual void EquipWeapon(PlayerHand _hand)
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x1269FD8", Offset = "0x1269FD8", VA = "0x1269FD8", Slot = "7")]
	public virtual void OnPlayerRotate()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x126FF04", Offset = "0x126FF04", VA = "0x126FF04")]
	public bool IsPrimaryWeapon()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x1270010", Offset = "0x1270010", VA = "0x1270010", Slot = "8")]
	public virtual void UnequipWeapon()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x1270204", Offset = "0x1270204", VA = "0x1270204", Slot = "9")]
	protected virtual void ResetGrassCutVelocity()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x1270288", Offset = "0x1270288", VA = "0x1270288", Slot = "10")]
	public virtual void SetColliderActive(bool v)
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x1269FAC", Offset = "0x1269FAC", VA = "0x1269FAC", Slot = "11")]
	public virtual void UpdateWeaponMesh(Sprite shape)
	{
	}

	[Token(Token = "0x6000D2D")]
	public abstract void UpdateWeaponColors(Color region0, Color region1, Color region2, Color region3, Color region4, Color region5, Color region6, bool history = true);

	[Token(Token = "0x6000D2E")]
	public abstract void SetTrailEmission(Color c, float intensity, float weight = 0.8f);

	[Token(Token = "0x6000D2F")]
	public abstract void SetTrailColor(Color c, float weight = 0.8f);

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x126A094", Offset = "0x126A094", VA = "0x126A094")]
	protected WeaponBase()
	{
	}
}
[Token(Token = "0x2000285")]
public class WeaponCrossbowBolt : MonoBehaviour
{
	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CapsuleCollider coll;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int pullbackDamage;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem flyParticles;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem collectParticles;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TrailRenderer trail;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer model;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource flightAudioSource;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject explosionPrefab;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool spawnExplosion;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float explodeDistance;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float explodeTime;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float boltMinDistanceForTeleport;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float delayUntilReturnToPlayerMiss;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float delayUntilReturnToPlayer;

	[NonSerialized]
	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float delayUntilBoltReturnTimer;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public Rigidbody rb;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public bool hasGravity;

	[NonSerialized]
	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public MeshRenderer meshRenderer;

	[NonSerialized]
	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool exploded;

	[NonSerialized]
	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float afterShootTimer;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<LivingBase> _eventSubscriptions;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Transform _stuckTo;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject _stuckToHelperObject;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Material _trailMaterial;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float _knockbackDistance;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private CrossbowBase _crossbow;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<GameObject> _boltDecoys;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float _timeSinceShoot;

	[NonSerialized]
	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Material boltMaterial;

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x12702F0", Offset = "0x12702F0", VA = "0x12702F0")]
	public bool IsBoltStuck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x1270350", Offset = "0x1270350", VA = "0x1270350")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x1270638", Offset = "0x1270638", VA = "0x1270638")]
	public void IgnoreCollisions(Collider[] _colls)
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x12706A8", Offset = "0x12706A8", VA = "0x12706A8")]
	public void SetTrailEmission(Color c, float intensity, float weight = 0.8f)
	{
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x12708C4", Offset = "0x12708C4", VA = "0x12708C4")]
	public void SetTrailColor(Color c, float weight = 0.8f)
	{
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x1270A84", Offset = "0x1270A84", VA = "0x1270A84")]
	public void ScaleBolt(float scale)
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x1270B04", Offset = "0x1270B04", VA = "0x1270B04")]
	public void SpawnAdditionalBolt(float _velocityMultiplier, Vector3 _offset)
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x1270E44", Offset = "0x1270E44", VA = "0x1270E44")]
	private void DestroyBoltDecoys()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x127103C", Offset = "0x127103C", VA = "0x127103C")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x12711B4", Offset = "0x12711B4", VA = "0x12711B4")]
	public void OnShoot(CrossbowBase cb)
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x12713EC", Offset = "0x12713EC", VA = "0x12713EC")]
	public void SetModelEmission(Color c)
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x12714B0", Offset = "0x12714B0", VA = "0x12714B0")]
	public void MoveTowardsHand(Vector3 goalPos, float pullbackSpeed)
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x127182C", Offset = "0x127182C", VA = "0x127182C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x1271980", Offset = "0x1271980", VA = "0x1271980")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x1271F1C", Offset = "0x1271F1C", VA = "0x1271F1C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x1271FA8", Offset = "0x1271FA8", VA = "0x1271FA8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x1271D60", Offset = "0x1271D60", VA = "0x1271D60")]
	public void Explode()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x1272E48", Offset = "0x1272E48", VA = "0x1272E48")]
	private void E_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x1272E4C", Offset = "0x1272E4C", VA = "0x1272E4C")]
	public void EnableCollision(bool enable)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x1272E70", Offset = "0x1272E70", VA = "0x1272E70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x127306C", Offset = "0x127306C", VA = "0x127306C")]
	public WeaponCrossbowBolt()
	{
	}
}
[Token(Token = "0x2000286")]
public class JournalInterpreter : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000287")]
	public class JournalPage
	{
		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fileID;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GenericRepresentation journalPageRepresentation;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string journalText;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string journalTitle;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string belongsTo;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int journalOrder;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string onPickupSaveID;

		[Token(Token = "0x17000165")]
		public bool Unlocked
		{
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0x103E654", Offset = "0x103E654", VA = "0x103E654")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x103E518", Offset = "0x103E518", VA = "0x103E518")]
		public string GetLocalizedJournalTitle()
		{
			return null;
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x103E5F4", Offset = "0x103E5F4", VA = "0x103E5F4")]
		public string GetLocalizedJournalText()
		{
			return null;
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x103E648", Offset = "0x103E648", VA = "0x103E648")]
		public string GetLocalizedBelongsTo()
		{
			return null;
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x103E6E4", Offset = "0x103E6E4", VA = "0x103E6E4")]
		public void CollectPage()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x103E8A8", Offset = "0x103E8A8", VA = "0x103E8A8")]
		public JournalPage()
		{
		}
	}

	[Token(Token = "0x200028C")]
	[CompilerGenerated]
	private sealed class <ReadJournalsFromDisk>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JournalInterpreter <>4__this;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DataCoroutine<Dictionary<string, (string, ModLoader.Mod)>> <luaFilesRoutine>5__2;

		[Token(Token = "0x17000166")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0x103F03C", Offset = "0x103F03C", VA = "0x103F03C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D63")]
			[Address(RVA = "0x103F084", Offset = "0x103F084", VA = "0x103F084", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x103E4E8", Offset = "0x103E4E8", VA = "0x103E4E8")]
		[DebuggerHidden]
		public <ReadJournalsFromDisk>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x103E9E4", Offset = "0x103E9E4", VA = "0x103E9E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x103E9E8", Offset = "0x103E9E8", VA = "0x103E9E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x103F044", Offset = "0x103F044", VA = "0x103F044", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject journalPagePrefab;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public JournalPage[] journalPagesOnDisk;

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x103DBC8", Offset = "0x103DBC8", VA = "0x103DBC8")]
	public GameObject CheckRequestJournalPage(string saveID, string belongsTo = "", string fileID = "")
	{
		return null;
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x103DF10", Offset = "0x103DF10", VA = "0x103DF10")]
	public JournalPage GetJournalPageByFileID(string belongsTo, string fileID)
	{
		return null;
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x103E070", Offset = "0x103E070", VA = "0x103E070")]
	public JournalPage GetJournalPageByFileID(string fileID)
	{
		return null;
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x103E15C", Offset = "0x103E15C", VA = "0x103E15C")]
	public JournalPage[] GetPagesFrom(string belongsTo)
	{
		return null;
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x103E33C", Offset = "0x103E33C", VA = "0x103E33C")]
	public JournalPage[] GetUnlockedPagesFrom(string belongsTo)
	{
		return null;
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x103E474", Offset = "0x103E474", VA = "0x103E474")]
	[IteratorStateMachine(typeof(<ReadJournalsFromDisk>d__8))]
	public IEnumerator ReadJournalsFromDisk()
	{
		return null;
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x103E510", Offset = "0x103E510", VA = "0x103E510")]
	public JournalInterpreter()
	{
	}
}
[Token(Token = "0x200028D")]
public class JournalPageHandler : MonoBehaviour
{
	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x103F08C", Offset = "0x103F08C", VA = "0x103F08C")]
	public JournalPageHandler()
	{
	}
}
[Token(Token = "0x200028E")]
public class LocalizationInterpreter : MonoBehaviour
{
	[Token(Token = "0x200028F")]
	public class Language
	{
		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<string, string> localizationDict;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string id;

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x103F404", Offset = "0x103F404", VA = "0x103F404")]
		public Language(string _id)
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x103F094", Offset = "0x103F094", VA = "0x103F094")]
		public string GetTranslation(string key, [Optional] string fallback)
		{
			return null;
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x103F4A8", Offset = "0x103F4A8", VA = "0x103F4A8")]
		public void SetTranslation(string key, string translation)
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x103F5BC", Offset = "0x103F5BC", VA = "0x103F5BC")]
		public void AddTranslation(string key, string translation)
		{
		}
	}

	[Token(Token = "0x2000291")]
	[CompilerGenerated]
	private sealed class <ReadLanguagesFromDisk>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocalizationInterpreter <>4__this;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DataCoroutine<Dictionary<string, (string, ModLoader.Mod)>> <csvFilesRoutine>5__2;

		[Token(Token = "0x17000168")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D72")]
			[Address(RVA = "0x103FD4C", Offset = "0x103FD4C", VA = "0x103FD4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000169")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D74")]
			[Address(RVA = "0x103FD94", Offset = "0x103FD94", VA = "0x103FD94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x103F354", Offset = "0x103F354", VA = "0x103F354")]
		[DebuggerHidden]
		public <ReadLanguagesFromDisk>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x103F6D0", Offset = "0x103F6D0", VA = "0x103F6D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x103F6D4", Offset = "0x103F6D4", VA = "0x103F6D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x103FD54", Offset = "0x103FD54", VA = "0x103FD54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Language> availableLanguages;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Language currentlySelectedLanguage;

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x103E56C", Offset = "0x103E56C", VA = "0x103E56C")]
	public static string GetTranslation(string id, [Optional] string fallback)
	{
		return null;
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x103F110", Offset = "0x103F110", VA = "0x103F110")]
	public bool SetLanguageTo(string lang)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x103F2E0", Offset = "0x103F2E0", VA = "0x103F2E0")]
	[IteratorStateMachine(typeof(<ReadLanguagesFromDisk>d__5))]
	public IEnumerator ReadLanguagesFromDisk()
	{
		return null;
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x103F37C", Offset = "0x103F37C", VA = "0x103F37C")]
	public LocalizationInterpreter()
	{
	}
}
[Token(Token = "0x2000292")]
public class ButtonSelectTileSetting : MonoBehaviour
{
	[Token(Token = "0x2000293")]
	public enum SELECTION_TYPE
	{
		[Token(Token = "0x4000D12")]
		WALL,
		[Token(Token = "0x4000D13")]
		GROUND,
		[Token(Token = "0x4000D14")]
		CEILING,
		[Token(Token = "0x4000D15")]
		DOOR,
		[Token(Token = "0x4000D16")]
		CUSTOMRULE
	}

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SELECTION_TYPE selectionType;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string value;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image _img;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Button _btn;

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x103FD9C", Offset = "0x103FD9C", VA = "0x103FD9C")]
	public void InitButton(string s, SELECTION_TYPE type)
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x1040020", Offset = "0x1040020", VA = "0x1040020")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x10400DC", Offset = "0x10400DC", VA = "0x10400DC")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x1040DC0", Offset = "0x1040DC0", VA = "0x1040DC0")]
	public ButtonSelectTileSetting()
	{
	}
}
[Token(Token = "0x2000294")]
public class ButtonSetEnemy : MonoBehaviour
{
	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI txt;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EnemyRegistry.EnemyRegistryEntry _entry;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color baseColor;

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x1040DEC", Offset = "0x1040DEC", VA = "0x1040DEC")]
	public void SetupButton(EnemyRegistry.EnemyRegistryEntry entry)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x104105C", Offset = "0x104105C", VA = "0x104105C")]
	public void UpdateColor()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x10411C0", Offset = "0x10411C0", VA = "0x10411C0")]
	public void SelectEnemy()
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x1041578", Offset = "0x1041578", VA = "0x1041578")]
	public ButtonSetEnemy()
	{
	}
}
[Token(Token = "0x2000296")]
public class ExtraObject : MonoBehaviour
{
	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RoomCreator.RoomFile.ExtraObjectsInRoom extraObjects;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool locked;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider[] _colliders;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshRenderer[] _renderers;

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x1041618", Offset = "0x1041618", VA = "0x1041618")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x104171C", Offset = "0x104171C", VA = "0x104171C")]
	public void SetActive(bool a)
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x10418C4", Offset = "0x10418C4", VA = "0x10418C4")]
	public void DestroyObject()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x1041A90", Offset = "0x1041A90", VA = "0x1041A90")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x1041AF8", Offset = "0x1041AF8", VA = "0x1041AF8")]
	public ExtraObject()
	{
	}
}
[Token(Token = "0x2000297")]
public class GeneratorHandler : MonoBehaviour
{
	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x1041B48", Offset = "0x1041B48", VA = "0x1041B48")]
	public GeneratorHandler()
	{
	}
}
[Token(Token = "0x2000298")]
public class LoadSceneButton : MonoBehaviour
{
	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x1041B50", Offset = "0x1041B50", VA = "0x1041B50")]
	public void LoadScene(string s)
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x1041BA8", Offset = "0x1041BA8", VA = "0x1041BA8")]
	public LoadSceneButton()
	{
	}
}
[Token(Token = "0x2000299")]
public static class LuaCustomConverters
{
	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x1041BB0", Offset = "0x1041BB0", VA = "0x1041BB0")]
	public static void RegisterAll()
	{
	}
}
[Token(Token = "0x200029B")]
public class LuaEventHandler : MonoBehaviour
{
	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GenericRepresentation representation;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, string> listeners;

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x1042B94", Offset = "0x1042B94", VA = "0x1042B94")]
	public void RegisterEventHandler(GenericRepresentation r)
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x1042B9C", Offset = "0x1042B9C", VA = "0x1042B9C")]
	public void AddListener(string type, string methodName)
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x1042C40", Offset = "0x1042C40", VA = "0x1042C40")]
	public void RemoveListener(string type)
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x1042CD0", Offset = "0x1042CD0", VA = "0x1042CD0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x1042E0C", Offset = "0x1042E0C", VA = "0x1042E0C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x1042F48", Offset = "0x1042F48", VA = "0x1042F48")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x1043084", Offset = "0x1043084", VA = "0x1043084")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x10431C0", Offset = "0x10431C0", VA = "0x10431C0")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x10432FC", Offset = "0x10432FC", VA = "0x10432FC")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x1043438", Offset = "0x1043438", VA = "0x1043438")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x104359C", Offset = "0x104359C", VA = "0x104359C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x10436B8", Offset = "0x10436B8", VA = "0x10436B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x10437D4", Offset = "0x10437D4", VA = "0x10437D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x10438F0", Offset = "0x10438F0", VA = "0x10438F0")]
	private void OnParticleSystemStopped()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x1043A0C", Offset = "0x1043A0C", VA = "0x1043A0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x1043B28", Offset = "0x1043B28", VA = "0x1043B28")]
	public LuaEventHandler()
	{
	}
}
[Token(Token = "0x200029C")]
public class LuaModSettings
{
	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _currentHeader;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<LuaModSettingData> _createdSettings;

	[Token(Token = "0x1700016A")]
	public List<LuaModSettingData> CreatedSettings
	{
		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x1043BB0", Offset = "0x1043BB0", VA = "0x1043BB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x1043BB8", Offset = "0x1043BB8", VA = "0x1043BB8")]
	public void Header(string headerName)
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x1043BC0", Offset = "0x1043BC0", VA = "0x1043BC0")]
	public void Slider(string identifier, string callback, float min, float max, float defaultValue)
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x1043DC4", Offset = "0x1043DC4", VA = "0x1043DC4")]
	public void Buttons(string identifier, string callback, int defaultIndex, string[] options)
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x1043D30", Offset = "0x1043D30", VA = "0x1043D30")]
	private bool IsValidOperation()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x1043F30", Offset = "0x1043F30", VA = "0x1043F30")]
	public LuaModSettings()
	{
	}
}
[Token(Token = "0x200029D")]
public class LuaModSettingData
{
	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string header;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string identifier;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string callbackFunction;

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x1043FB8", Offset = "0x1043FB8", VA = "0x1043FB8")]
	public LuaModSettingData()
	{
	}
}
[Token(Token = "0x200029E")]
public class LuaSliderModSetting : LuaModSettingData
{
	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float min;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float max;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float defaultValue;

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x1043DBC", Offset = "0x1043DBC", VA = "0x1043DBC")]
	public LuaSliderModSetting()
	{
	}
}
[Token(Token = "0x200029F")]
public class LuaButtonsModSetting : LuaModSettingData
{
	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int defaultIndex;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] options;

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x1043F28", Offset = "0x1043F28", VA = "0x1043F28")]
	public LuaButtonsModSetting()
	{
	}
}
[Token(Token = "0x20002A0")]
public class ModCamRenderTexture : MonoBehaviour
{
	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera goalCam;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _w;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _h;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RawImage _rawImg;

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x1043FC0", Offset = "0x1043FC0", VA = "0x1043FC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x1044018", Offset = "0x1044018", VA = "0x1044018")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x1044370", Offset = "0x1044370", VA = "0x1044370")]
	public ModCamRenderTexture()
	{
	}
}
[Token(Token = "0x20002A1")]
public class ModderOptions : MonoBehaviour
{
	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool generateBoxColliderInsteadOfMesh;

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x1044378", Offset = "0x1044378", VA = "0x1044378")]
	public ModderOptions()
	{
	}
}
[Token(Token = "0x20002A2")]
public class ModdingButtonGroupId : MonoBehaviour
{
	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image[] otherGroupButtonsImg;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int groupID;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Image _img;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TextMeshProUGUI _txt;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Button _btn;

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x1044380", Offset = "0x1044380", VA = "0x1044380")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x104447C", Offset = "0x104447C", VA = "0x104447C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x1044690", Offset = "0x1044690", VA = "0x1044690")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x1044A00", Offset = "0x1044A00", VA = "0x1044A00")]
	public ModdingButtonGroupId()
	{
	}
}
[Token(Token = "0x20002A3")]
[AttributeUsage(AttributeTargets.Field, AllowMultiple = false)]
public class ModdingEventAttribute : Attribute
{
	[Token(Token = "0x1700016B")]
	public string Description
	{
		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x1044A08", Offset = "0x1044A08", VA = "0x1044A08")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x1044A10", Offset = "0x1044A10", VA = "0x1044A10")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700016C")]
	public Type[] Parameters
	{
		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x1044A18", Offset = "0x1044A18", VA = "0x1044A18")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x1044A20", Offset = "0x1044A20", VA = "0x1044A20")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x1700016D")]
	public string Callback
	{
		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x1044A28", Offset = "0x1044A28", VA = "0x1044A28")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x1044A30", Offset = "0x1044A30", VA = "0x1044A30")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x1044A38", Offset = "0x1044A38", VA = "0x1044A38")]
	public ModdingEventAttribute(string callback, string description, params Type[] parameters)
	{
	}
}
[Token(Token = "0x20002A4")]
public class ModdingHandlerLua : MonoBehaviour
{
	[Token(Token = "0x20002A5")]
	public enum CURRENT_CODE_TYPE
	{
		[Token(Token = "0x4000D63")]
		ITEM,
		[Token(Token = "0x4000D64")]
		POTION,
		[Token(Token = "0x4000D65")]
		BASEMOD,
		[Token(Token = "0x4000D66")]
		SPEECHBUBBLE,
		[Token(Token = "0x4000D67")]
		PROGRESS,
		[Token(Token = "0x4000D68")]
		ACHIEVEMENT,
		[Token(Token = "0x4000D69")]
		RUNMODIFIER
	}

	[Serializable]
	[Token(Token = "0x20002A6")]
	public class FunctionRepoEntry
	{
		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string methodName;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] args;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string returns;

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x104D414", Offset = "0x104D414", VA = "0x104D414")]
		public FunctionRepoEntry()
		{
		}
	}

	[Token(Token = "0x20002A9")]
	[CompilerGenerated]
	private sealed class <WaitForLoaded>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ModdingHandlerLua <>4__this;

		[Token(Token = "0x17000171")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0x104D7D4", Offset = "0x104D7D4", VA = "0x104D7D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0x104D81C", Offset = "0x104D81C", VA = "0x104D81C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x1047980", Offset = "0x1047980", VA = "0x1047980")]
		[DebuggerHidden]
		public <WaitForLoaded>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x104D530", Offset = "0x104D530", VA = "0x104D530", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x104D534", Offset = "0x104D534", VA = "0x104D534", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x104D7DC", Offset = "0x104D7DC", VA = "0x104D7DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ModdingHandlerLua instance;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField modNameInput;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _modName;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_InputField modDescInput;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _modDesc;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_InputField modVersionInput;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _modVersion;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform upgradeSpawnPos;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ItemUpgrade itemUpgrade;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public CodeEditor codeEditor;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject modderCamera;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite placeholderSprite;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TMP_InputField codeInput;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<string> filesInMod;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform fileListLayout;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Button[] disableWhenCantSave;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Header("Event Simulation")]
	public TMP_Dropdown eventSimulateDropdown;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Function Repo")]
	public FunctionRepoEntry[] functionRepoList;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject repoButton;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Transform functionRepoLayout;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Header("New Object Creation")]
	public TMP_InputField newObjectName;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject newObjectCreationScreen;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Header("Autocomplete")]
	public Vector2 autoMoveOffset;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TextMeshProUGUI autocompleteText;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject autocompletePrompt;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<GameObject> _toDeleteOnRefresh;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Dictionary<string, string> fieldToTypeDict;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject hud;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GenericRepresentation _currentlyAppliedRepresentation;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string _folderName;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool _sdkActive;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string _modFolderPath;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string _modNameCleaned;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Dictionary<string, Dictionary<string, (string realType, string parameters)>> _cachedPublicMethods;

	[Token(Token = "0x1700016E")]
	public string ModName
	{
		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x1044A98", Offset = "0x1044A98", VA = "0x1044A98")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x1044AA0", Offset = "0x1044AA0", VA = "0x1044AA0")]
		set
		{
		}
	}

	[Token(Token = "0x1700016F")]
	public string ModDescription
	{
		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x1044ADC", Offset = "0x1044ADC", VA = "0x1044ADC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x1044AE4", Offset = "0x1044AE4", VA = "0x1044AE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000170")]
	public string ModVersion
	{
		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x1044B20", Offset = "0x1044B20", VA = "0x1044B20")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x1044B28", Offset = "0x1044B28", VA = "0x1044B28")]
		set
		{
		}
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x1044B64", Offset = "0x1044B64", VA = "0x1044B64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x10473E0", Offset = "0x10473E0", VA = "0x10473E0")]
	public void ResetPlayer()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x104736C", Offset = "0x104736C", VA = "0x104736C")]
	[IteratorStateMachine(typeof(<WaitForLoaded>d__43))]
	private IEnumerator WaitForLoaded()
	{
		return null;
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x10479A8", Offset = "0x10479A8", VA = "0x10479A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x104872C", Offset = "0x104872C", VA = "0x104872C")]
	private string GetCorrectTypeInChain(string fullWord)
	{
		return null;
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x1048274", Offset = "0x1048274", VA = "0x1048274")]
	private string GetFullWordByIndex(string line, int index)
	{
		return null;
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x104A19C", Offset = "0x104A19C", VA = "0x104A19C")]
	public void OpenFile()
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x104A28C", Offset = "0x104A28C", VA = "0x104A28C")]
	public void OpenProject()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x104A638", Offset = "0x104A638", VA = "0x104A638")]
	public void RefreshFilesInMod()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x104AD84", Offset = "0x104AD84", VA = "0x104AD84")]
	public void SetCodeEditorTextToFile(string path)
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x104BA90", Offset = "0x104BA90", VA = "0x104BA90")]
	public void ResetScene()
	{
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x104BB2C", Offset = "0x104BB2C", VA = "0x104BB2C")]
	public void BackToStart()
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x104B08C", Offset = "0x104B08C", VA = "0x104B08C")]
	public void SaveProject()
	{
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x104BBB0", Offset = "0x104BBB0", VA = "0x104BBB0")]
	public CURRENT_CODE_TYPE GetCurrentCodeType()
	{
		return default(CURRENT_CODE_TYPE);
	}

	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x104BD24", Offset = "0x104BD24", VA = "0x104BD24")]
	public void AddFunctionToCode(int v)
	{
	}

	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x1048914", Offset = "0x1048914", VA = "0x1048914")]
	public Dictionary<string, (string, string)> GetPublicFieldsFrom(string typeName)
	{
		return null;
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x104C064", Offset = "0x104C064", VA = "0x104C064")]
	public void ApplyCode()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x104C624", Offset = "0x104C624", VA = "0x104C624")]
	public void OnEventSimulate(int v)
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x104CEC0", Offset = "0x104CEC0", VA = "0x104CEC0")]
	public void CreateNewItem()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x104CF70", Offset = "0x104CF70", VA = "0x104CF70")]
	public void CreateNewAchievement()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x104D020", Offset = "0x104D020", VA = "0x104D020")]
	public void CreateNewPotion()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x104D0D0", Offset = "0x104D0D0", VA = "0x104D0D0")]
	public void CreateNewBasemod()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x104D158", Offset = "0x104D158", VA = "0x104D158")]
	public void CreateNewRunModifier()
	{
	}

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x104D1E0", Offset = "0x104D1E0", VA = "0x104D1E0")]
	public void CreateNewProgress()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x104D268", Offset = "0x104D268", VA = "0x104D268")]
	public void CreateObject()
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x104D29C", Offset = "0x104D29C", VA = "0x104D29C")]
	public ModdingHandlerLua()
	{
	}
}
[Token(Token = "0x20002AE")]
public class ModdingHandlerRooms : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002AF")]
	public class WorldGenEntry
	{
		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WorldGeneratorEvolved worldGenerator;

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x1055178", Offset = "0x1055178", VA = "0x1055178")]
		public WorldGenEntry()
		{
		}
	}

	[Token(Token = "0x20002B0")]
	public enum CURRENT_MODE
	{
		[Token(Token = "0x4000DCC")]
		TILE_PLACING,
		[Token(Token = "0x4000DCD")]
		EXTRA_OBJECTS,
		[Token(Token = "0x4000DCE")]
		ENEMIES
	}

	[Token(Token = "0x20002B2")]
	[CompilerGenerated]
	private sealed class <LoadRoutine>d__89 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ModdingHandlerRooms <>4__this;

		[Token(Token = "0x17000177")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x10558D0", Offset = "0x10558D0", VA = "0x10558D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E42")]
			[Address(RVA = "0x1055918", Offset = "0x1055918", VA = "0x1055918", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x1050B1C", Offset = "0x1050B1C", VA = "0x1050B1C")]
		[DebuggerHidden]
		public <LoadRoutine>d__89(int <>1__state)
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x1055394", Offset = "0x1055394", VA = "0x1055394", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x1055398", Offset = "0x1055398", VA = "0x1055398", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x10558D8", Offset = "0x10558D8", VA = "0x10558D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002B5")]
	[CompilerGenerated]
	private sealed class <EnableGroundClicker>d__103 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ModdingHandlerRooms <>4__this;

		[Token(Token = "0x17000179")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x1055AA4", Offset = "0x1055AA4", VA = "0x1055AA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0x1055AEC", Offset = "0x1055AEC", VA = "0x1055AEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x1051DAC", Offset = "0x1051DAC", VA = "0x1051DAC")]
		[DebuggerHidden]
		public <EnableGroundClicker>d__103(int <>1__state)
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x10559F8", Offset = "0x10559F8", VA = "0x10559F8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x10559FC", Offset = "0x10559FC", VA = "0x10559FC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x1055AAC", Offset = "0x1055AAC", VA = "0x1055AAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IS_QUERTZ;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Vector2Int initSize;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CURRENT_MODE currentMode;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Configuration")]
	public Dictionary<RoomCreator.RoomFile, List<Collider>> globalCollisionCheckDict;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WorldGenEntry[] worldGeneratorList;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WorldGeneratorEvolved currentWorldGenerator;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject groundClicker;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ProcObjectHandler procObjectHandler;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Canvas extraObjectsCanvas;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HelperMethods helperMethods;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameHandler gameHandlerPrefabCopy;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Material Settings")]
	public Material baseReplaceMat;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject prefabButtonTileID;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("UI Stuff")]
	public GameObject hintsObject;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform tileIDButtonParent;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[Header("Generation Materials")]
	public Material baseWorldMaterial;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material baseGrassMaterial;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material baseColormapMaterial;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("UI Tile Settings")]
	public TMP_Dropdown extraFlagsDropdown;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshProUGUI extraFlagsText;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Toggle isDoorToggle;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TMP_InputField groundHeightInput;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TMP_InputField ceilHeightInput;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TMP_InputField wallInsetInput;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Header("Custom Data")]
	public TMP_Dropdown customDataPreset;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TMP_InputField customDataInput;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshProUGUI customDataObjectCurrent;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject customDataPanel;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[Header("UI Room Settings")]
	public GameObject controlsRoom;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Button buttonCurrentMode;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TMP_Dropdown roomFlagsDropdown;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public TextMeshProUGUI flagsText;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Slider slideProbability;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public TextMeshProUGUI sliderProbabilityValue;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Toggle allowDuplicatesToggle;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public TMP_Dropdown roomTypeDropdown;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public TMP_Dropdown roomVariantDropdown;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public TMP_Dropdown roomThemeDropdown;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject tileSettingsPanel;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject enemySettingsPanel;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject pointerModel;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject enemyButtonPrefab;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public TextMeshProUGUI txtRoomInfos;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[Header("Room Creator stuff")]
	public Camera camToRaycastFrom;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Transform selectionCube;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject blockedTileVis;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Light envLight;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[Header("Tile Stuff")]
	public GameObject buttonSelectTileSetting;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Transform parentLayoutWallSettings;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Transform parentLayoutGroundSettings;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Transform parentLayoutCeilingSettings;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Transform parentLayoutDoorTypeSettings;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Transform parentLayoutCustomRuleSettings;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject buttonBuildingBlockPrefab;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Toggle canSpawnSecretToggle;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject noMeshfilterObj;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject hierarchyEntry;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Transform hierarchyParent;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[Header("Runtime Stuff")]
	public int currentGroupId;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject currentActiveCustomDataObject;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject currentActiveEnemy;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public List<ModTileButton> spawnedBuildingTiles;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public List<GameObject> spawnedWorldTiles;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public int seed;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public MD5 md5;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private string _openedFileName;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private Vector2Int _oldCurrentSelectedTile;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public RoomCreator.RoomFile.TileInRoom currentSelectedTile;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public List<RoomCreator.RoomFile.TileInRoom> multiSelectTileList;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public List<GameObject> multiSelectSelectionCubes;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public List<string> customDataPresetTypes;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public RoomCreator.RoomFile _loadedRoomFile;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static ModdingHandlerRooms instance;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private PointerStatusCheck[] _pointerStatusChecks;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public (bool active, Vector3 lastPos, Vector3 lastEuler) lastSavedStateOfBuildingBlock;

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x104DD20", Offset = "0x104DD20", VA = "0x104DD20")]
	public void ApplyMaterial(GameObject g, CURRENT_FLOOR floor)
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x104DE44", Offset = "0x104DE44", VA = "0x104DE44")]
	public void OnCurrentModePress()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x104DE54", Offset = "0x104DE54", VA = "0x104DE54")]
	private void SetCurrentModeTo(CURRENT_MODE mode)
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x104E040", Offset = "0x104E040", VA = "0x104E040")]
	public void ClearTileSelection()
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x1040A18", Offset = "0x1040A18", VA = "0x1040A18")]
	public List<RoomCreator.RoomFile.TileInRoom> GetTilesOfGroup(int groupId)
	{
		return null;
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x10448D4", Offset = "0x10448D4", VA = "0x10448D4")]
	public void SetCurrentGroupID(int val)
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x104E600", Offset = "0x104E600", VA = "0x104E600")]
	private bool IsPointerOnUI()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x104E654", Offset = "0x104E654", VA = "0x104E654")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x104E834", Offset = "0x104E834", VA = "0x104E834")]
	private void Get_PrefabSpawned(RTPrefab prefab, GameObject spawnedObject)
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x104E948", Offset = "0x104E948", VA = "0x104E948")]
	private void Get_Changed(ObjectSelectionChangedEventArgs args)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x104EE84", Offset = "0x104EE84", VA = "0x104EE84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x104F084", Offset = "0x104F084", VA = "0x104F084")]
	public void DropdownSelectCustomDataPreset(int v)
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x104F154", Offset = "0x104F154", VA = "0x104F154")]
	private void RefreshDropdowns()
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x104F010", Offset = "0x104F010", VA = "0x104F010")]
	[IteratorStateMachine(typeof(<LoadRoutine>d__89))]
	private IEnumerator LoadRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x1050B44", Offset = "0x1050B44", VA = "0x1050B44")]
	public void BackToStart()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x1050C04", Offset = "0x1050C04", VA = "0x1050C04")]
	private void RefreshEnemyPanel()
	{
	}

	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x1050E0C", Offset = "0x1050E0C", VA = "0x1050E0C")]
	public void OnCustomDataValueChanged(string s)
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x1050E78", Offset = "0x1050E78", VA = "0x1050E78")]
	public void CanSpawnSecretToggled(bool b)
	{
	}

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x1050FD0", Offset = "0x1050FD0", VA = "0x1050FD0")]
	public void ApplyEnemySettingsToAll()
	{
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x10449CC", Offset = "0x10449CC", VA = "0x10449CC")]
	public void Regenerate()
	{
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x104E2B0", Offset = "0x104E2B0", VA = "0x104E2B0")]
	private void UpdateHierarchy()
	{
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x105123C", Offset = "0x105123C", VA = "0x105123C")]
	public void SwitchWorldGenerator(int i)
	{
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x10513B4", Offset = "0x10513B4", VA = "0x10513B4")]
	public void OnGroundHeightChanged(string v)
	{
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x105153C", Offset = "0x105153C", VA = "0x105153C")]
	public void OnCeilHeightChanged(string v)
	{
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x10516C4", Offset = "0x10516C4", VA = "0x10516C4")]
	public void OnWallInsetChanged(string v)
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x1040A94", Offset = "0x1040A94", VA = "0x1040A94")]
	public void SetupMap(int forceSeed = 1, bool updateExtraObjects = true)
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x1051D84", Offset = "0x1051D84", VA = "0x1051D84")]
	public void FixPositions()
	{
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x105184C", Offset = "0x105184C", VA = "0x105184C")]
	[IteratorStateMachine(typeof(<EnableGroundClicker>d__103))]
	private IEnumerator EnableGroundClicker()
	{
		return null;
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x1051DD4", Offset = "0x1051DD4", VA = "0x1051DD4")]
	public void ToggleEnvironmentLight(bool v)
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x1051E04", Offset = "0x1051E04", VA = "0x1051E04")]
	public void ButtonRotate90()
	{
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x1051E38", Offset = "0x1051E38", VA = "0x1051E38")]
	public void OpenFile()
	{
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x1052950", Offset = "0x1052950", VA = "0x1052950")]
	public void ToggleIsDoorChanged(bool s)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x1052AC8", Offset = "0x1052AC8", VA = "0x1052AC8")]
	public void SaveFile()
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x1052FC4", Offset = "0x1052FC4", VA = "0x1052FC4")]
	public void FlagsDropdownChanged(int v)
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x10531CC", Offset = "0x10531CC", VA = "0x10531CC")]
	public void ProbabilitySliderChanged(float v)
	{
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x1053340", Offset = "0x1053340", VA = "0x1053340")]
	public void AllowDuplicatesChanged(bool s)
	{
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x10505D0", Offset = "0x10505D0", VA = "0x10505D0")]
	public void DropdownRoomtypeChanged(int v, bool update = true)
	{
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x1050A9C", Offset = "0x1050A9C", VA = "0x1050A9C")]
	public void DropdownRoomVariantChanged(int v)
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x1053368", Offset = "0x1053368", VA = "0x1053368")]
	public void DropdownRoomtypeChanged(int v)
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x1053370", Offset = "0x1053370", VA = "0x1053370")]
	public void UpdateSeed()
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x1053394", Offset = "0x1053394", VA = "0x1053394")]
	public void UpdateTileSettings()
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x105395C", Offset = "0x105395C", VA = "0x105395C")]
	private void UpdateHeightOfTile(string type, bool add)
	{
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x1053CA8", Offset = "0x1053CA8", VA = "0x1053CA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x1054E40", Offset = "0x1054E40", VA = "0x1054E40")]
	private void UnselectAllHierarchyButtons()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x1054F20", Offset = "0x1054F20", VA = "0x1054F20")]
	public ModdingHandlerRooms()
	{
	}
}
[Token(Token = "0x20002B9")]
public class ModdingHandlerRoomsFlagSetup : MonoBehaviour
{
	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject flagSetupToggle;

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x10518C0", Offset = "0x10518C0", VA = "0x10518C0")]
	public void Setup()
	{
	}

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x1055D84", Offset = "0x1055D84", VA = "0x1055D84")]
	public ModdingHandlerRoomsFlagSetup()
	{
	}
}
[Token(Token = "0x20002BA")]
public class ModdingHandlerStart : MonoBehaviour
{
	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int initFloorIndex;

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x1055D8C", Offset = "0x1055D8C", VA = "0x1055D8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x1055DE8", Offset = "0x1055DE8", VA = "0x1055DE8")]
	public void OpenWikiLink()
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x1055E2C", Offset = "0x1055E2C", VA = "0x1055E2C")]
	public ModdingHandlerStart()
	{
	}
}
[Token(Token = "0x20002BB")]
public class ModdingHandlerWeaponColors : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002BC")]
	public class ButtonColorCombo
	{
		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Button btn;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button resetBtn;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Color _currentColor;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color _baseColor;

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x1059664", Offset = "0x1059664", VA = "0x1059664")]
		public bool IsDirty()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x10596E0", Offset = "0x10596E0", VA = "0x10596E0")]
		public void SetColor(Color c)
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x1059728", Offset = "0x1059728", VA = "0x1059728")]
		public Color GetColor()
		{
			return default(Color);
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x1059734", Offset = "0x1059734", VA = "0x1059734")]
		public void SetColorCustom(Color c)
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x10597EC", Offset = "0x10597EC", VA = "0x10597EC")]
		public void ResetColor()
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x10597F8", Offset = "0x10597F8", VA = "0x10597F8")]
		public ButtonColorCombo()
		{
		}
	}

	[Token(Token = "0x20002BF")]
	[CompilerGenerated]
	private sealed class <SetupSwordTrail>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ModdingHandlerWeaponColors <>4__this;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <a>5__2;

		[Token(Token = "0x1700017D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E81")]
			[Address(RVA = "0x1059CC8", Offset = "0x1059CC8", VA = "0x1059CC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E83")]
			[Address(RVA = "0x1059D10", Offset = "0x1059D10", VA = "0x1059D10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x1059B78", Offset = "0x1059B78", VA = "0x1059B78")]
		[DebuggerHidden]
		public <SetupSwordTrail>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x1059BA0", Offset = "0x1059BA0", VA = "0x1059BA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x1059BA4", Offset = "0x1059BA4", VA = "0x1059BA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x1059CD0", Offset = "0x1059CD0", VA = "0x1059CD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Weapon Objects")]
	public GameObject sword;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject crossbow;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject throwingKnife;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject dagger;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Miscellanous")]
	public FlexibleColorPicker colorPicker;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BladeCreator[] bladeCreators;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button buttonRegion1To4;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ButtonColorCombo[] buttonColorCombos;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ButtonColorCombo[] currentActiveCombos;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonColorCombo trailColorCombo;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ButtonColorCombo trailEmissionCombo;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TMP_Dropdown weaponDropDown;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform trail;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Toggle toggleRotation;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Slider trailEmissionSlider;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TMP_InputField generatedCodeField;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TMP_InputField pasteToImportField;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int currentSelectedWeapon;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Material _trailMaterial;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private WeaponBase[] weaponBases;

	[Token(Token = "0x4000DFF")]
	private const int ID_SWORD = 0;

	[Token(Token = "0x4000E00")]
	private const int ID_CROSSBOW = 1;

	[Token(Token = "0x4000E01")]
	private const int ID_THROWING_KNIFE = 2;

	[Token(Token = "0x4000E02")]
	private const int ID_DAGGER = 3;

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x1055E34", Offset = "0x1055E34", VA = "0x1055E34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x10568E4", Offset = "0x10568E4", VA = "0x10568E4")]
	public string GenerateCode()
	{
		return null;
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x1056548", Offset = "0x1056548", VA = "0x1056548")]
	private void SetupButtonColors()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x10572A8", Offset = "0x10572A8", VA = "0x10572A8")]
	private void RefreshAlpha(Color _col)
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x10572F0", Offset = "0x10572F0", VA = "0x10572F0")]
	private void ColorButton(ButtonColorCombo bc)
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x1057368", Offset = "0x1057368", VA = "0x1057368")]
	private void ClearButtonColors()
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x10564D4", Offset = "0x10564D4", VA = "0x10564D4")]
	[IteratorStateMachine(typeof(<SetupSwordTrail>d__31))]
	private IEnumerator SetupSwordTrail()
	{
		return null;
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x10574AC", Offset = "0x10574AC", VA = "0x10574AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x1057844", Offset = "0x1057844", VA = "0x1057844")]
	private void ParseCode()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x10580DC", Offset = "0x10580DC", VA = "0x10580DC")]
	public ModdingHandlerWeaponColors()
	{
	}
}
[Token(Token = "0x20002C0")]
public class ModdingWeaponColorsWeapon : WeaponBase
{
	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BladeCreator[] bladeCreators;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material _trailMaterial;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ParticleSystem trail;

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x1059D18", Offset = "0x1059D18", VA = "0x1059D18", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x1059DC8", Offset = "0x1059DC8", VA = "0x1059DC8", Slot = "14")]
	public override void SetTrailColor(Color c, float weight = 0.8f)
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x1059EF0", Offset = "0x1059EF0", VA = "0x1059EF0", Slot = "13")]
	public override void SetTrailEmission(Color c, float intensity, float weight = 0.8f)
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x105A040", Offset = "0x105A040", VA = "0x105A040", Slot = "12")]
	public override void UpdateWeaponColors(Color region0, Color region1, Color region2, Color region3, Color region4, Color region5, Color region6, bool history = true)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x105A27C", Offset = "0x105A27C", VA = "0x105A27C")]
	public ModdingWeaponColorsWeapon()
	{
	}
}
[Token(Token = "0x20002C1")]
public class ModHierarchyEntry : MonoBehaviour
{
	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToWatch;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI objectName;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image buttonImageName;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image buttonImageLocked;

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x105A284", Offset = "0x105A284", VA = "0x105A284")]
	public void LockObject()
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x105A314", Offset = "0x105A314", VA = "0x105A314")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x105A418", Offset = "0x105A418", VA = "0x105A418")]
	public void SelectObject()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x105A670", Offset = "0x105A670", VA = "0x105A670")]
	public void HighlightObject(bool b)
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x105A754", Offset = "0x105A754", VA = "0x105A754")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x105A7F4", Offset = "0x105A7F4", VA = "0x105A7F4")]
	public ModHierarchyEntry()
	{
	}
}
[Token(Token = "0x20002C2")]
public class ModLoader : MonoBehaviour
{
	[Token(Token = "0x20002C3")]
	public class Mod
	{
		[NonSerialized]
		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<LuaModSettingData> modSettingsData;

		[NonSerialized]
		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string modId;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string modName;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string modDesc;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string modVersion;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<GenericRepresentation> basemodFiles;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _settingsDirty;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, object> modSettingValues;

		[Token(Token = "0x1700017F")]
		private string GetModSettingsKey
		{
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0x105C414", Offset = "0x105C414", VA = "0x105C414")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x105B940", Offset = "0x105B940", VA = "0x105B940")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x105BF80", Offset = "0x105BF80", VA = "0x105BF80")]
		public void ToggleMod()
		{
		}

		[Token(Token = "0x6000E99")]
		public T GetModSettingValue<T>(string identifier, T defaultValue)
		{
			return (T)null;
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x105C078", Offset = "0x105C078", VA = "0x105C078")]
		public void SetModSettingValue(string identifier, string callbackFunction, object value)
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x105C35C", Offset = "0x105C35C", VA = "0x105C35C")]
		public void SaveModSettings()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x105C460", Offset = "0x105C460", VA = "0x105C460")]
		public void LoadModSettingValues()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x105BA04", Offset = "0x105BA04", VA = "0x105BA04")]
		public Mod()
		{
		}
	}

	[Token(Token = "0x20002C5")]
	[CompilerGenerated]
	private sealed class <LoadSimpleGenericRepresentation>d__5<G> : IEnumerator<object>, IEnumerator, IDisposable where G : GenericRepresentation
	{
		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MonoBehaviour owner;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string type;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool skipMods;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Func<string, string, string, Mod, G> creator;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private DataCoroutine<Dictionary<string, (string code, Mod mod)>> <luaFilesCoroutine>5__2;

		[Token(Token = "0x17000180")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EA5")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EA7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA2")]
		[DebuggerHidden]
		public <LoadSimpleGenericRepresentation>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000EA3")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EA4")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EA6")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002C6")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string modAndroidPath;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string pattern;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SearchOption searchOption;

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x105C550", Offset = "0x105C550", VA = "0x105C550")]
		public <>c__DisplayClass6_0()
		{
		}
	}

	[Token(Token = "0x20002C7")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass6_1
	{
		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Task<string[]> _filesTask;

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x105C558", Offset = "0x105C558", VA = "0x105C558")]
		public <>c__DisplayClass6_1()
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0x105C560", Offset = "0x105C560", VA = "0x105C560")]
		internal bool <LoadAndReadStreamingAssetAndModFiles>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002C8")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass6_2
	{
		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mod _mod;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass6_0 CS$<>8__locals1;

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x105C57C", Offset = "0x105C57C", VA = "0x105C57C")]
		public <>c__DisplayClass6_2()
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x105C584", Offset = "0x105C584", VA = "0x105C584")]
		internal string[] <LoadAndReadStreamingAssetAndModFiles>b__1()
		{
			return null;
		}
	}

	[Token(Token = "0x20002C9")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass6_3
	{
		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Task<string[]> _modFilesLoadTask;

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x105C640", Offset = "0x105C640", VA = "0x105C640")]
		public <>c__DisplayClass6_3()
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x105C648", Offset = "0x105C648", VA = "0x105C648")]
		internal bool <LoadAndReadStreamingAssetAndModFiles>b__2()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002CA")]
	[CompilerGenerated]
	private sealed class <LoadAndReadStreamingAssetAndModFiles>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string modAndroidPath;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string pattern;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SearchOption searchOption;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string path;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private <>c__DisplayClass6_1 <>8__1;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private <>c__DisplayClass6_0 <>8__2;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FileReadReturnType readReturnType;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string modWindowsPath;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private <>c__DisplayClass6_3 <>8__3;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private <>c__DisplayClass6_2 <>8__4;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public MonoBehaviour owner;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Dictionary<string, Mod> <_results>5__2;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Mod[] <>7__wrap2;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int <>7__wrap3;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private DataCoroutine<Dictionary<string, (byte[], Mod)>> <dataCoroutine>5__5;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private DataCoroutine<Dictionary<string, (string, Mod)>> <dataCoroutine>5__6;

		[Token(Token = "0x17000182")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EB2")]
			[Address(RVA = "0x105D404", Offset = "0x105D404", VA = "0x105D404", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EB4")]
			[Address(RVA = "0x105D44C", Offset = "0x105D44C", VA = "0x105D44C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x105B1AC", Offset = "0x105B1AC", VA = "0x105B1AC")]
		[DebuggerHidden]
		public <LoadAndReadStreamingAssetAndModFiles>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x105C664", Offset = "0x105C664", VA = "0x105C664", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x105C668", Offset = "0x105C668", VA = "0x105C668", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x105D40C", Offset = "0x105D40C", VA = "0x105D40C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002CB")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass7_0<T>
	{
		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public KeyValuePair<string, Mod> _file;

		[Token(Token = "0x6000EB5")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6000EB6")]
		internal byte[] <ReadFileWithType>b__0()
		{
			return null;
		}

		[Token(Token = "0x6000EB7")]
		internal string <ReadFileWithType>b__1()
		{
			return null;
		}
	}

	[Token(Token = "0x20002CC")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass7_1<T>
	{
		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Task<T> _itemTask;

		[Token(Token = "0x6000EB8")]
		public <>c__DisplayClass7_1()
		{
		}

		[Token(Token = "0x6000EB9")]
		internal bool <ReadFileWithType>b__2()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20002CD")]
	[CompilerGenerated]
	private sealed class <ReadFileWithType>d__7<T> : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<string, Mod> _results;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private <>c__DisplayClass7_1<T> <>8__1;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private <>c__DisplayClass7_0<T> <>8__2;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<string, (T, Mod)> <_returnValue>5__2;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<string, Mod>.Enumerator <>7__wrap2;

		[Token(Token = "0x17000184")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EBE")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EC0")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EBA")]
		[DebuggerHidden]
		public <ReadFileWithType>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000EBB")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EBC")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBD")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000EBF")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> modLoadingErrorMessages;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HashSet<Mod> brokenMods;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Mod[] loadedMods;

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x105A7FC", Offset = "0x105A7FC", VA = "0x105A7FC")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000E90")]
	[IteratorStateMachine(typeof(<LoadSimpleGenericRepresentation>d__5<>))]
	public static IEnumerator LoadSimpleGenericRepresentation<G>(MonoBehaviour owner, string type, Func<string, string, string, Mod, G> creator, bool skipMods = false) where G : GenericRepresentation
	{
		return null;
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x105B0C0", Offset = "0x105B0C0", VA = "0x105B0C0")]
	[IteratorStateMachine(typeof(<LoadAndReadStreamingAssetAndModFiles>d__6))]
	public static IEnumerator LoadAndReadStreamingAssetAndModFiles(MonoBehaviour owner, string path, string modWindowsPath, string modAndroidPath, string pattern, FileReadReturnType readReturnType = FileReadReturnType.String, SearchOption searchOption = SearchOption.AllDirectories)
	{
		return null;
	}

	[Token(Token = "0x6000E92")]
	[IteratorStateMachine(typeof(<ReadFileWithType>d__7<>))]
	private static IEnumerator ReadFileWithType<T>(Dictionary<string, Mod> _results)
	{
		return null;
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x105B1D4", Offset = "0x105B1D4", VA = "0x105B1D4")]
	public void LoadBaseModFiles()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x105ABA0", Offset = "0x105ABA0", VA = "0x105ABA0")]
	public Mod[] GetAllMods()
	{
		return null;
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x105BA8C", Offset = "0x105BA8C", VA = "0x105BA8C")]
	public string[] GetModRoomFiles(string themeFolder)
	{
		return null;
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x105BEA8", Offset = "0x105BEA8", VA = "0x105BEA8")]
	public ModLoader()
	{
	}
}
[Token(Token = "0x20002CF")]
public class Modspawn : MonoBehaviour
{
	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color spawnColor;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string text;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer rendi;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject correspondingObject;

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x105D53C", Offset = "0x105D53C", VA = "0x105D53C")]
	public Modspawn()
	{
	}
}
[Token(Token = "0x20002D0")]
public class ModTileButton : MonoBehaviour
{
	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI txtName;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage objPreview;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TileCreator.TileRepresentation tileRepresentation;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject _objToInstantiate;

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x105D544", Offset = "0x105D544", VA = "0x105D544")]
	public void GenerateObjToDisplay(TileCreator.TileRepresentation _tr, WorldGeneratorEvolved worldGenerator)
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x105DFB0", Offset = "0x105DFB0", VA = "0x105DFB0")]
	public void DoShowCase()
	{
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x105DFB4", Offset = "0x105DFB4", VA = "0x105DFB4")]
	public void SelectTile()
	{
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x105E3AC", Offset = "0x105E3AC", VA = "0x105E3AC")]
	public ModTileButton()
	{
	}
}
[Token(Token = "0x20002D1")]
public class PointerStatusCheck : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pointerEntered;

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x105E3B4", Offset = "0x105E3B4", VA = "0x105E3B4", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x105E3C0", Offset = "0x105E3C0", VA = "0x105E3C0", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x105E3C8", Offset = "0x105E3C8", VA = "0x105E3C8")]
	public PointerStatusCheck()
	{
	}
}
[Token(Token = "0x20002D2")]
public class RoomCreator : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002D3")]
	public class RoomFile
	{
		[Serializable]
		[Token(Token = "0x20002D4")]
		public class TileInRoom
		{
			[Token(Token = "0x4000E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> possibleTiles;

			[NonSerialized]
			[Token(Token = "0x4000E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string tileId;

			[Token(Token = "0x4000E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector2Int pos;

			[Token(Token = "0x4000E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int rot;

			[Token(Token = "0x4000E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool canSpawnSecret;

			[Token(Token = "0x4000E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string[] extraFlags;

			[Token(Token = "0x4000E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool isDoor;

			[Token(Token = "0x4000E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float wallInset;

			[NonSerialized]
			[Token(Token = "0x4000E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject corridorWallObj;

			[NonSerialized]
			[Token(Token = "0x4000E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public int generationStep;

			[NonSerialized]
			[Token(Token = "0x4000E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int deepness;

			[NonSerialized]
			[Token(Token = "0x4000E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool isFillerTile;

			[NonSerialized]
			[Token(Token = "0x4000E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
			public bool isBranch;

			[NonSerialized]
			[Token(Token = "0x4000E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
			public bool visited;

			[Token(Token = "0x4000E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public float yOffset;

			[Token(Token = "0x4000E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public float groundOffset;

			[Token(Token = "0x4000E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public float ceilOffset;

			[Token(Token = "0x4000E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public string doorType;

			[Token(Token = "0x4000E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public string ground;

			[Token(Token = "0x4000E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public string ceiling;

			[Token(Token = "0x4000E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public string wall;

			[Token(Token = "0x4000E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public string customRule;

			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x105FAEC", Offset = "0x105FAEC", VA = "0x105FAEC")]
			public TileInRoom DeepCopy()
			{
				return null;
			}

			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x10605A0", Offset = "0x10605A0", VA = "0x10605A0")]
			public float GetGroundOffset()
			{
				return default(float);
			}

			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x1063444", Offset = "0x1063444", VA = "0x1063444")]
			public float GetCeilOffset()
			{
				return default(float);
			}

			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0x10616B8", Offset = "0x10616B8", VA = "0x10616B8")]
			public void RollTile(System.Random rand)
			{
			}

			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x105E80C", Offset = "0x105E80C", VA = "0x105E80C")]
			public TileInRoom()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002D5")]
		public class ExtraObjectsInRoom
		{
			[Token(Token = "0x4000E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string identifier;

			[Token(Token = "0x4000E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 pos;

			[Token(Token = "0x4000E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 rot;

			[Token(Token = "0x4000E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string customData;

			[Token(Token = "0x4000E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CURRENT_FLOOR restrictToFloor;

			[Token(Token = "0x4000E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int groupID;

			[Token(Token = "0x6000EED")]
			[Address(RVA = "0x105FE40", Offset = "0x105FE40", VA = "0x105FE40")]
			public ExtraObjectsInRoom ShallowCopy()
			{
				return null;
			}

			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0x1063454", Offset = "0x1063454", VA = "0x1063454")]
			public bool Equals(ExtraObjectsInRoom _e)
			{
				return default(bool);
			}

			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x1063528", Offset = "0x1063528", VA = "0x1063528", Slot = "3")]
			public override string ToString()
			{
				return null;
			}

			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0x10638F4", Offset = "0x10638F4", VA = "0x10638F4")]
			public ExtraObjectsInRoom()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002D6")]
		public class EnemiesInRoom
		{
			[Token(Token = "0x4000E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> possibleEnemies;

			[NonSerialized]
			[Token(Token = "0x4000E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 pos;

			[Token(Token = "0x4000E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int spawnOption;

			[Token(Token = "0x6000EF1")]
			[Address(RVA = "0x1063904", Offset = "0x1063904", VA = "0x1063904")]
			public EnemiesInRoom ShallowCopy()
			{
				return null;
			}

			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0x1063A9C", Offset = "0x1063A9C", VA = "0x1063A9C")]
			public EnemiesInRoom()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002D8")]
		public class Group
		{
			[Token(Token = "0x4000E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<TileInRoom> groupTiles;

			[Token(Token = "0x4000E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<ExtraObjectsInRoom> groupExtraObjects;

			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x105FEC0", Offset = "0x105FEC0", VA = "0x105FEC0")]
			public Group()
			{
			}

			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x1063BA4", Offset = "0x1063BA4", VA = "0x1063BA4")]
			public Group(List<TileInRoom> baseTiles)
			{
			}
		}

		[Token(Token = "0x20002D9")]
		public enum DOORDIRECTION
		{
			[Token(Token = "0x4000E95")]
			NORTH,
			[Token(Token = "0x4000E96")]
			EAST,
			[Token(Token = "0x4000E97")]
			SOUTH,
			[Token(Token = "0x4000E98")]
			WEST
		}

		[NonSerialized]
		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fileName;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string type;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string variant;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string theme;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string unlockReq;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float probability;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool allowDuplicates;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool preventRotations;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] roomFlags;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<TileInRoom> baseTiles;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<ExtraObjectsInRoom> baseExtraObjects;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<Group> groups;

		[NonSerialized]
		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int rotation;

		[NonSerialized]
		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector2Int globalPos;

		[NonSerialized]
		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public RoomFile predecessor;

		[NonSerialized]
		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<RoomFile> successors;

		[NonSerialized]
		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int deepness;

		[NonSerialized]
		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int clusterID;

		[NonSerialized]
		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool dontCheckOnGeneration;

		[NonSerialized]
		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float currentDifficulty;

		[NonSerialized]
		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool visited;

		[NonSerialized]
		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int rolledGroup;

		[NonSerialized]
		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<(EnemiesInRoom enemies, ExtraObjectsInRoom parentExtra)> enemiesToSpawn;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int _amountDoors;

		[NonSerialized]
		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public bool r_cleared;

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x105F130", Offset = "0x105F130", VA = "0x105F130")]
		public RoomFile DeepCopy()
		{
			return null;
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x105FF98", Offset = "0x105FF98", VA = "0x105FF98")]
		public string GetShortenedFileName()
		{
			return null;
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x105FFE0", Offset = "0x105FFE0", VA = "0x105FFE0")]
		public int GetGroupOfExtraObject(ExtraObjectsInRoom _obj)
		{
			return default(int);
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x10600A0", Offset = "0x10600A0", VA = "0x10600A0")]
		public int GetGenerationStep()
		{
			return default(int);
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x106020C", Offset = "0x106020C", VA = "0x106020C")]
		public Vector2Int[] GetDoorPositions()
		{
			return null;
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0x1060434", Offset = "0x1060434", VA = "0x1060434")]
		public float GetRoomYPos()
		{
			return default(float);
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0x10605AC", Offset = "0x10605AC", VA = "0x10605AC")]
		public float GetRoomYBase()
		{
			return default(float);
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x1060714", Offset = "0x1060714", VA = "0x1060714")]
		public float GetRoomDifficulty()
		{
			return default(float);
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0x1060948", Offset = "0x1060948", VA = "0x1060948")]
		public Vector2Int[] GetDoorsAtDirection(DOORDIRECTION dir, bool randomOrder = false)
		{
			return null;
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0x1060EC8", Offset = "0x1060EC8", VA = "0x1060EC8")]
		public int GetAmountOfDoors()
		{
			return default(int);
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0x106123C", Offset = "0x106123C", VA = "0x106123C")]
		public int GetConsistentHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0x1061358", Offset = "0x1061358", VA = "0x1061358")]
		private int Hash(int x)
		{
			return default(int);
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0x1061378", Offset = "0x1061378", VA = "0x1061378")]
		public (bool, bool, bool, bool) GetDoorDirections()
		{
			return default((bool, bool, bool, bool));
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0x1061568", Offset = "0x1061568", VA = "0x1061568")]
		public void RollTiles(System.Random rand)
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0x106176C", Offset = "0x106176C", VA = "0x106176C")]
		public void RotateRoom(int amount = 1)
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0x1060D28", Offset = "0x1060D28", VA = "0x1060D28")]
		public Vector2Int GetRoomDims()
		{
			return default(Vector2Int);
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x1061B68", Offset = "0x1061B68", VA = "0x1061B68")]
		public TileInRoom GetTileAt(int x, int y)
		{
			return null;
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x1061F2C", Offset = "0x1061F2C", VA = "0x1061F2C")]
		public Vector3 GetWorldPosBase()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x1061F70", Offset = "0x1061F70", VA = "0x1061F70")]
		public void Initialize(System.Random _rand)
		{
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0x10628F0", Offset = "0x10628F0", VA = "0x10628F0")]
		public void ClearEmptyTiles()
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x1062C28", Offset = "0x1062C28", VA = "0x1062C28")]
		public List<RoomFile> GetAllSuccessors()
		{
			return null;
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x1062D2C", Offset = "0x1062D2C", VA = "0x1062D2C")]
		private List<RoomFile> NextSuccessors(RoomFile room, ref List<RoomFile> roomList)
		{
			return null;
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x1062F60", Offset = "0x1062F60", VA = "0x1062F60")]
		public void FixOriginAndRotation()
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x105E5EC", Offset = "0x105E5EC", VA = "0x105E5EC")]
		public RoomFile()
		{
		}
	}

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Room")]
	public string idenfitierForStart;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RoomFile roomFile;

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x105E3D0", Offset = "0x105E3D0", VA = "0x105E3D0")]
	public RoomFile SetupRoomFile()
	{
		return null;
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x105E9DC", Offset = "0x105E9DC", VA = "0x105E9DC")]
	public void SaveRoomFile(RoomFile f)
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x105EC14", Offset = "0x105EC14", VA = "0x105EC14")]
	public RoomFile[] ReadAllRoomFilesFromDisk(string folderName)
	{
		return null;
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x105F0D8", Offset = "0x105F0D8", VA = "0x105F0D8")]
	public RoomCreator()
	{
	}
}
[Token(Token = "0x20002DA")]
public class TileCreator : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002DB")]
	public class TileRepresentation
	{
		[Serializable]
		[Token(Token = "0x20002DC")]
		public class TileObject
		{
			[Token(Token = "0x4000E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4000E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 pos;

			[Token(Token = "0x4000E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 rot;

			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0x1063E44", Offset = "0x1063E44", VA = "0x1063E44")]
			public TileObject()
			{
			}
		}

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string identifier;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string groupId;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<TileObject> tileObjects;

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x1063E3C", Offset = "0x1063E3C", VA = "0x1063E3C")]
		public TileRepresentation()
		{
		}
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x105DB38", Offset = "0x105DB38", VA = "0x105DB38")]
	public GameObject GetTileAsGameObject(TileRepresentation _tr, WorldGeneratorEvolved worldGenerator)
	{
		return null;
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x1063E34", Offset = "0x1063E34", VA = "0x1063E34")]
	public TileCreator()
	{
	}
}
[Token(Token = "0x20002DE")]
public class ToggleRoomFlag : MonoBehaviour
{
	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string flag;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI toggleText;

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x1063E74", Offset = "0x1063E74", VA = "0x1063E74")]
	public void Init(string _flag)
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x1063F70", Offset = "0x1063F70", VA = "0x1063F70")]
	public void Select(bool v)
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x1064140", Offset = "0x1064140", VA = "0x1064140")]
	public ToggleRoomFlag()
	{
	}
}
[Token(Token = "0x20002DF")]
public class OWOVestHandler : MonoBehaviour
{
	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OWOUDPClient owoClient;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_InputField ipInput;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI connectButtonText;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject btnDisconnect;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject btnTestSensation;

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x1064148", Offset = "0x1064148", VA = "0x1064148")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x1064224", Offset = "0x1064224", VA = "0x1064224")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x1064228", Offset = "0x1064228", VA = "0x1064228")]
	public void ConnectOnReload()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x106456C", Offset = "0x106456C", VA = "0x106456C")]
	public void Disconnect()
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x10645C0", Offset = "0x10645C0", VA = "0x10645C0")]
	public void TestSensation()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x1064320", Offset = "0x1064320", VA = "0x1064320")]
	public void Connect()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x10646C4", Offset = "0x10646C4", VA = "0x10646C4")]
	public void EnterKey(string k)
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x1064780", Offset = "0x1064780", VA = "0x1064780")]
	public OWOVestHandler()
	{
	}
}
[Token(Token = "0x20002E0")]
public class PlayerStatistics : MonoBehaviour
{
	[Token(Token = "0x17000186")]
	public int ShopkeepersKilled
	{
		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x10648EC", Offset = "0x10648EC", VA = "0x10648EC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x1064984", Offset = "0x1064984", VA = "0x1064984")]
		set
		{
		}
	}

	[Token(Token = "0x17000187")]
	public int CashSpendInShop
	{
		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x1064A20", Offset = "0x1064A20", VA = "0x1064A20")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x1064AB8", Offset = "0x1064AB8", VA = "0x1064AB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000188")]
	public int LocksOpened
	{
		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x1064B54", Offset = "0x1064B54", VA = "0x1064B54")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x1064BEC", Offset = "0x1064BEC", VA = "0x1064BEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000189")]
	public int PotsDestroyed
	{
		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x1064C88", Offset = "0x1064C88", VA = "0x1064C88")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x1064D20", Offset = "0x1064D20", VA = "0x1064D20")]
		set
		{
		}
	}

	[Token(Token = "0x1700018A")]
	public int CashCollected
	{
		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x1064DBC", Offset = "0x1064DBC", VA = "0x1064DBC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x1064E54", Offset = "0x1064E54", VA = "0x1064E54")]
		set
		{
		}
	}

	[Token(Token = "0x1700018B")]
	public int ChestsOpened
	{
		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x1064EF0", Offset = "0x1064EF0", VA = "0x1064EF0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x1064F88", Offset = "0x1064F88", VA = "0x1064F88")]
		set
		{
		}
	}

	[Token(Token = "0x1700018C")]
	public int FloorsCompleted
	{
		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x1065024", Offset = "0x1065024", VA = "0x1065024")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x10650BC", Offset = "0x10650BC", VA = "0x10650BC")]
		set
		{
		}
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x1065158", Offset = "0x1065158", VA = "0x1065158")]
	public PlayerStatistics()
	{
	}
}
[Token(Token = "0x20002E1")]
public class ProcObjectHandler : MonoBehaviour
{
	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<Vector2Int, Mesh> proceduralWallMeshes;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> verts;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> tris;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Vector2> uvs;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _eps;

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x1065160", Offset = "0x1065160", VA = "0x1065160")]
	public Mesh GetWallWithDimension(Vector2Int dim, ProceduralWallGenerator generator)
	{
		return null;
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x1065244", Offset = "0x1065244", VA = "0x1065244")]
	[ContextMenu("SetHeight")]
	public Mesh GenerateWallMesh(ProceduralWallGenerator _g)
	{
		return null;
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x1065538", Offset = "0x1065538", VA = "0x1065538")]
	private void CreateQuad(float width, float height, float yOffset)
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x1065C14", Offset = "0x1065C14", VA = "0x1065C14")]
	public ProcObjectHandler()
	{
	}
}
[Token(Token = "0x20002E3")]
public enum CURRENT_FLOOR
{
	[Token(Token = "0x4000EAF")]
	HOME_BASE = -10,
	[Token(Token = "0x4000EB0")]
	OVERGROWN_GATEHOUSE = 0,
	[Token(Token = "0x4000EB1")]
	BURIED_GARDENS = 5,
	[Token(Token = "0x4000EB2")]
	INFESTED_DUNGEON = 10,
	[Token(Token = "0x4000EB3")]
	SPRAWLING_CRUCIBLE = 15,
	[Token(Token = "0x4000EB4")]
	FORGOTTEN_LIBRARY = 20,
	[Token(Token = "0x4000EB5")]
	LUMINOUS_MINES = 30,
	[Token(Token = "0x4000EB6")]
	CHATTERING_CRYPTS = 35,
	[Token(Token = "0x4000EB7")]
	THE_CRADLE = 40,
	[Token(Token = "0x4000EB8")]
	NONE = -1
}
[Token(Token = "0x20002E4")]
public class ProgressHandler : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002E5")]
	public class ProgressDiskRepresentation : GenericRepresentation
	{
		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string id;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string npcId;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string name;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string desc;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Sprite sprite;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int price;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string predecessor;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string category;

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x1066108", Offset = "0x1066108", VA = "0x1066108")]
		public ProgressDiskRepresentation(string code, string fileName, string id, string npcId, ModLoader.Mod modReference)
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0x10663C0", Offset = "0x10663C0", VA = "0x10663C0")]
		public string GetLocalizedName()
		{
			return null;
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0x1066418", Offset = "0x1066418", VA = "0x1066418")]
		public string GetLocalizedDesc()
		{
			return null;
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0x1066308", Offset = "0x1066308", VA = "0x1066308")]
		public bool IsBought()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0x1066470", Offset = "0x1066470", VA = "0x1066470")]
		public void OnBuy()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0x106651C", Offset = "0x106651C", VA = "0x106651C")]
		public bool IsUnlocked()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0x1066674", Offset = "0x1066674", VA = "0x1066674")]
		public bool HasSuccessor()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0x1066594", Offset = "0x1066594", VA = "0x1066594")]
		public ProgressDiskRepresentation GetPredecessor()
		{
			return null;
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0x1066740", Offset = "0x1066740", VA = "0x1066740")]
		public int GetOrderInCategory()
		{
			return default(int);
		}
	}

	[Token(Token = "0x20002E7")]
	[CompilerGenerated]
	private sealed class <ReadProgressesFromDisk>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ProgressHandler <>4__this;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DataCoroutine<Dictionary<string, (string code, ModLoader.Mod mod)>> <luaFilesRoutine>5__2;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DataCoroutine<Dictionary<string, (byte[] byteArray, ModLoader.Mod mode)>> <pngFilesRoutine>5__3;

		[Token(Token = "0x1700018D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F36")]
			[Address(RVA = "0x10673B4", Offset = "0x10673B4", VA = "0x10673B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F38")]
			[Address(RVA = "0x10673FC", Offset = "0x10673FC", VA = "0x10673FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x1065E0C", Offset = "0x1065E0C", VA = "0x1065E0C")]
		[DebuggerHidden]
		public <ReadProgressesFromDisk>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x106683C", Offset = "0x106683C", VA = "0x106683C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x1066840", Offset = "0x1066840", VA = "0x1066840", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x10673BC", Offset = "0x10673BC", VA = "0x10673BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProgressDiskRepresentation[] progressesOnDisk;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerSwordHandle playerSwordHandle;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GlobalProgressChecker[] globalProgressCheckers;

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x1065D98", Offset = "0x1065D98", VA = "0x1065D98")]
	[IteratorStateMachine(typeof(<ReadProgressesFromDisk>d__4))]
	public IEnumerator ReadProgressesFromDisk()
	{
		return null;
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x1065E34", Offset = "0x1065E34", VA = "0x1065E34")]
	public ProgressDiskRepresentation GetProgressById(string id)
	{
		return null;
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x1065F20", Offset = "0x1065F20", VA = "0x1065F20")]
	public ProgressDiskRepresentation[] GetProgressesByNPC(string npcID)
	{
		return null;
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x1066100", Offset = "0x1066100", VA = "0x1066100")]
	public ProgressHandler()
	{
	}
}
[Token(Token = "0x20002EA")]
public class EitherOr : MonoBehaviour
{
	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	public float probabilityForFirst;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject obj1;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject obj2;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _decided;

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x106744C", Offset = "0x106744C", VA = "0x106744C")]
	public void DecideEitherOr()
	{
	}

	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x10675BC", Offset = "0x10675BC", VA = "0x10675BC")]
	public EitherOr()
	{
	}
}
[Token(Token = "0x20002EB")]
public class HomebasePlankActivator : MonoBehaviour
{
	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _activated;

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x10675CC", Offset = "0x10675CC", VA = "0x10675CC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x1067770", Offset = "0x1067770", VA = "0x1067770")]
	public HomebasePlankActivator()
	{
	}
}
[Token(Token = "0x20002EC")]
public class BuyItem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002ED")]
	public class BuyItemInfos
	{
		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int forceTier;

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0x106889C", Offset = "0x106889C", VA = "0x106889C")]
		public BuyItemInfos()
		{
		}
	}

	[Token(Token = "0x20002EE")]
	[CompilerGenerated]
	private sealed class <LoadCustomData>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuyItem <>4__this;

		[Token(Token = "0x1700018F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0x1068AF4", Offset = "0x1068AF4", VA = "0x1068AF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0x1068B3C", Offset = "0x1068B3C", VA = "0x1068B3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x1067858", Offset = "0x1067858", VA = "0x1067858")]
		[DebuggerHidden]
		public <LoadCustomData>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x10688A4", Offset = "0x10688A4", VA = "0x10688A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x10688A8", Offset = "0x10688A8", VA = "0x10688A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0x1068AFC", Offset = "0x1068AFC", VA = "0x1068AFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<RoomCreator.RoomFile, int> amountBoughtInRoom;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public string dropTable;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ItemBase spawnedItem;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BaseInteract _baseInteract;

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody _spawnedRigidb;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _forceTier;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _hashOffset;

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x1067778", Offset = "0x1067778", VA = "0x1067778")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x10677E4", Offset = "0x10677E4", VA = "0x10677E4")]
	[IteratorStateMachine(typeof(<LoadCustomData>d__9))]
	private IEnumerator LoadCustomData()
	{
		return null;
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x1067880", Offset = "0x1067880", VA = "0x1067880")]
	public void SetHashOffset(int v)
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x1067888", Offset = "0x1067888", VA = "0x1067888")]
	public void SpawnItem(GameObject g)
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x1067C50", Offset = "0x1067C50", VA = "0x1067C50")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x1067E44", Offset = "0x1067E44", VA = "0x1067E44")]
	[ContextMenu("Buy Item")]
	private void ContrEvents_TriggerPressed()
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x10687F4", Offset = "0x10687F4", VA = "0x10687F4")]
	public BuyItem()
	{
	}
}
[Token(Token = "0x20002EF")]
public class SpawnProbability : MonoBehaviour
{
	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	public float probabilityToStay;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Time Based Probability")]
	public bool useTime;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public double startTime;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public double endTime;

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x1068B44", Offset = "0x1068B44", VA = "0x1068B44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x1068C70", Offset = "0x1068C70", VA = "0x1068C70")]
	public SpawnProbability()
	{
	}
}
[Token(Token = "0x20002F0")]
public class RunModifierInterpreter : MonoBehaviour
{
	[Token(Token = "0x20002F1")]
	public class RunModifierDiskRepresentation : GenericRepresentation
	{
		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string id;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string name;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string desc;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string modifierHint;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int maxLevel;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float difficultyPerLevel;

		[Token(Token = "0x17000191")]
		public int CurrentLevel
		{
			[Token(Token = "0x6000F55")]
			[Address(RVA = "0x1068E08", Offset = "0x1068E08", VA = "0x1068E08")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x1068EC4", Offset = "0x1068EC4", VA = "0x1068EC4")]
		public RunModifierDiskRepresentation(string code, string fileName, string id, ModLoader.Mod modReference)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x1069048", Offset = "0x1069048", VA = "0x1069048")]
		public string GetModifierHint()
		{
			return null;
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x106912C", Offset = "0x106912C", VA = "0x106912C")]
		public void IncreaseLevel()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x106920C", Offset = "0x106920C", VA = "0x106920C")]
		public void ReduceLevel()
		{
		}
	}

	[Token(Token = "0x20002F4")]
	[CompilerGenerated]
	private sealed class <ReadRunModifiersFromDisk>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RunModifierInterpreter <>4__this;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DataCoroutine<List<RunModifierDiskRepresentation>> <data>5__2;

		[Token(Token = "0x17000192")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F62")]
			[Address(RVA = "0x1069638", Offset = "0x1069638", VA = "0x1069638", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F64")]
			[Address(RVA = "0x1069680", Offset = "0x1069680", VA = "0x1069680", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x1068DD8", Offset = "0x1068DD8", VA = "0x1068DD8")]
		[DebuggerHidden]
		public <ReadRunModifiersFromDisk>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x106940C", Offset = "0x106940C", VA = "0x106940C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x1069410", Offset = "0x1069410", VA = "0x1069410", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x1069640", Offset = "0x1069640", VA = "0x1069640", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RunModifierDiskRepresentation[] runModifiersOnDisk;

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x1068C78", Offset = "0x1068C78", VA = "0x1068C78")]
	public RunModifierDiskRepresentation GetRunModifierById(string id)
	{
		return null;
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x1068D64", Offset = "0x1068D64", VA = "0x1068D64")]
	[IteratorStateMachine(typeof(<ReadRunModifiersFromDisk>d__3))]
	public IEnumerator ReadRunModifiersFromDisk()
	{
		return null;
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x1068E00", Offset = "0x1068E00", VA = "0x1068E00")]
	public RunModifierInterpreter()
	{
	}
}
[Token(Token = "0x20002F5")]
public class RunSaveManager : MonoBehaviour
{
	[Token(Token = "0x20002FA")]
	[CompilerGenerated]
	private sealed class <PutInSlot>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string savedObj;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int slotId;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject <_slotObj>5__2;

		[Token(Token = "0x17000196")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0x106BFD0", Offset = "0x106BFD0", VA = "0x106BFD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000197")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F80")]
			[Address(RVA = "0x106C018", Offset = "0x106C018", VA = "0x106C018", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x106A89C", Offset = "0x106A89C", VA = "0x106A89C")]
		[DebuggerHidden]
		public <PutInSlot>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x106BAD0", Offset = "0x106BAD0", VA = "0x106BAD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x106BAD4", Offset = "0x106BAD4", VA = "0x106BAD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x106BFD8", Offset = "0x106BFD8", VA = "0x106BFD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool wasRunLoaded;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isInLoadRoutine;

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x1069688", Offset = "0x1069688", VA = "0x1069688")]
	public bool DoesSaveExist()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x106972C", Offset = "0x106972C", VA = "0x106972C")]
	public void SaveRun()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x1069F24", Offset = "0x1069F24", VA = "0x1069F24")]
	private string GetIdForObjInSlot(GameObject g)
	{
		return null;
	}

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x106A20C", Offset = "0x106A20C", VA = "0x106A20C")]
	public static void RemoveSave()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x106A2AC", Offset = "0x106A2AC", VA = "0x106A2AC")]
	public void LoadRun()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x106A818", Offset = "0x106A818", VA = "0x106A818")]
	[IteratorStateMachine(typeof(<PutInSlot>d__7))]
	private IEnumerator PutInSlot(int slotId, string savedObj)
	{
		return null;
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x106A8C4", Offset = "0x106A8C4", VA = "0x106A8C4")]
	public RunSaveManager()
	{
	}
}
[Token(Token = "0x20002FB")]
public class SpecialEventGraph : MonoBehaviour
{
	[Token(Token = "0x20002FC")]
	public class SpecialEventEntry
	{
		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int predecessor;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CURRENT_FLOOR floorToSpawn;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public EVENT_TYPE type;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string customRequirement;

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x106D624", Offset = "0x106D624", VA = "0x106D624")]
		public void Complete()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x106CA00", Offset = "0x106CA00", VA = "0x106CA00")]
		public SpecialEventEntry()
		{
		}
	}

	[Token(Token = "0x20002FD")]
	public enum EVENT_TYPE
	{
		[Token(Token = "0x4000F0E")]
		LORE,
		[Token(Token = "0x4000F0F")]
		GHOST,
		[Token(Token = "0x4000F10")]
		MAIN_STORY
	}

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HashSet<int> specialEventsFound;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<SpecialEventEntry> specialEventEntries;

	[Token(Token = "0x4000F06")]
	private const string SAVE_LORE_EVENTS = "specialEventsFound";

	[NonSerialized]
	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hasFoundSpecialEventInThisRun;

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x106C020", Offset = "0x106C020", VA = "0x106C020")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x106C848", Offset = "0x106C848", VA = "0x106C848")]
	public SpecialEventEntry GetEntryById(int id)
	{
		return null;
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x106C928", Offset = "0x106C928", VA = "0x106C928")]
	public void SaveEventGraph()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x106C514", Offset = "0x106C514", VA = "0x106C514")]
	private void AddLore(int _id, int predec, CURRENT_FLOOR floor, string _customRequirement = "")
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x106C62C", Offset = "0x106C62C", VA = "0x106C62C")]
	private void AddGhost(int _id, int predec, CURRENT_FLOOR floor, string customReq)
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x106C748", Offset = "0x106C748", VA = "0x106C748")]
	private void AddMainStory(int _id)
	{
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x106CA08", Offset = "0x106CA08", VA = "0x106CA08")]
	public SpecialEventEntry GetNextMainStoryEvent()
	{
		return null;
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x106CE98", Offset = "0x106CE98", VA = "0x106CE98")]
	public void SetEventFound(int id)
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x106CEF8", Offset = "0x106CEF8", VA = "0x106CEF8")]
	public SpecialEventEntry GetPotentialSpecialEvent(CURRENT_FLOOR currentFloor)
	{
		return null;
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x106D1E0", Offset = "0x106D1E0", VA = "0x106D1E0")]
	public SpecialEventGraph()
	{
	}
}
[Token(Token = "0x2000301")]
public class TeleportLocomotion : MonoBehaviour
{
	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool teleportOnLeftHand;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool preventTeleport;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeBetweenTeleports;

	[NonSerialized]
	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool initialized;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool _teleportCharged;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _teleportTimer;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _lastMaxAxisUnchanged;

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x106D78C", Offset = "0x106D78C", VA = "0x106D78C")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x106D814", Offset = "0x106D814", VA = "0x106D814")]
	public void Terminate()
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x106D8B8", Offset = "0x106D8B8", VA = "0x106D8B8")]
	private void EnablePointers(bool e)
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x106D8BC", Offset = "0x106D8BC", VA = "0x106D8BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x106D92C", Offset = "0x106D92C", VA = "0x106D92C")]
	public TeleportLocomotion()
	{
	}
}
[Token(Token = "0x2000302")]
public class AchievementUI : MonoBehaviour
{
	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject achievementEntry;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform layoutGroup;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject hoverInfos;

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x106D940", Offset = "0x106D940", VA = "0x106D940")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x106DC94", Offset = "0x106DC94", VA = "0x106DC94")]
	public void RefreshAchievements()
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x106D944", Offset = "0x106D944", VA = "0x106D944")]
	private void LoadAchievements()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x106E100", Offset = "0x106E100", VA = "0x106E100")]
	public AchievementUI()
	{
	}
}
[Token(Token = "0x2000303")]
public class AchievmentEntry : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AchievementInterpreter.AchievementDiskRepresentation repre;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI text;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image bg;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image checkmark;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image unlocksItemImg;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite locked;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite unlocked;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AchievementUI _achievementUI;

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x106DEC0", Offset = "0x106DEC0", VA = "0x106DEC0")]
	public void InitEntry(AchievementInterpreter.AchievementDiskRepresentation _repre, AchievementUI ui)
	{
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x106DD5C", Offset = "0x106DD5C", VA = "0x106DD5C")]
	public void RefreshEntry()
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x106E108", Offset = "0x106E108", VA = "0x106E108", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x106E584", Offset = "0x106E584", VA = "0x106E584", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x106E5AC", Offset = "0x106E5AC", VA = "0x106E5AC")]
	public AchievmentEntry()
	{
	}
}
[Token(Token = "0x2000304")]
public class BestBloodShop_ButtonSelectWeapon : MonoBehaviour
{
	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI weaponComboName;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image weaponComboImage;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WeaponComboInterpreter.WeaponComboDiskRepresentation _combo;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ProgressShopBeastBlood _beastBloodShop;

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x106E5B4", Offset = "0x106E5B4", VA = "0x106E5B4")]
	public void ApplyWeaponInfos(WeaponComboInterpreter.WeaponComboDiskRepresentation combo, ProgressShopBeastBlood beastBloodShop)
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x106E814", Offset = "0x106E814", VA = "0x106E814")]
	public void OnButtonPress()
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x106E8C4", Offset = "0x106E8C4", VA = "0x106E8C4")]
	public BestBloodShop_ButtonSelectWeapon()
	{
	}
}
[Token(Token = "0x2000305")]
public class ButtonWorldmapFloor : MonoBehaviour
{
	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WorldMapUI worldmapUI;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int lockedBehindEvent;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public CURRENT_FLOOR floor;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string customPrompt;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite undiscoveredSprite;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool notImplemented;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool _encountered;

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x106E8CC", Offset = "0x106E8CC", VA = "0x106E8CC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x106E984", Offset = "0x106E984", VA = "0x106E984")]
	private void Instance_GameHandlerInitialized()
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x106EB00", Offset = "0x106EB00", VA = "0x106EB00")]
	private void ButtonWorldmapFloor_Highlighted(bool highlighted)
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x106EC7C", Offset = "0x106EC7C", VA = "0x106EC7C")]
	public ButtonWorldmapFloor()
	{
	}
}
[Token(Token = "0x2000306")]
public class ChallengeUIEntry : MonoBehaviour
{
	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChallengeInterpreter.ChallengeDiskRepresentation repre;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI text;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image bg;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SeerUI _seerUI;

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x106EC84", Offset = "0x106EC84", VA = "0x106EC84")]
	public void InitEntry(ChallengeInterpreter.ChallengeDiskRepresentation _repre, SeerUI _ui)
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x106EE80", Offset = "0x106EE80", VA = "0x106EE80")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x106F008", Offset = "0x106F008", VA = "0x106F008")]
	public ChallengeUIEntry()
	{
	}
}
[Token(Token = "0x2000307")]
public class CreditsScroll : MonoBehaviour
{
	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI pageNumberText;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI _txt;

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x106F010", Offset = "0x106F010", VA = "0x106F010")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x106F068", Offset = "0x106F068", VA = "0x106F068")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x106F158", Offset = "0x106F158", VA = "0x106F158")]
	public void IncreasePage()
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x106F248", Offset = "0x106F248", VA = "0x106F248")]
	public void DecreasePage()
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x106F32C", Offset = "0x106F32C", VA = "0x106F32C")]
	public CreditsScroll()
	{
	}
}
[Token(Token = "0x2000308")]
public class CustomSeedUI : MonoBehaviour
{
	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField seedInput;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject seedHint;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject buttonClearSeed;

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x106F334", Offset = "0x106F334", VA = "0x106F334")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x106F338", Offset = "0x106F338", VA = "0x106F338")]
	public void OnSeedInputUpdate()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0x106F398", Offset = "0x106F398", VA = "0x106F398")]
	public void ClearSeed()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x106F3EC", Offset = "0x106F3EC", VA = "0x106F3EC")]
	public CustomSeedUI()
	{
	}
}
[Token(Token = "0x2000309")]
public class DarkenBG : MonoBehaviour
{
	[Token(Token = "0x200030A")]
	[CompilerGenerated]
	private sealed class <CheckDistance>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DarkenBG <>4__this;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <_fullDarkAt>5__2;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <_fullBrightAt>5__3;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color <_col>5__4;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WaitForSeconds <_wait>5__5;

		[Token(Token = "0x17000198")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0x106F838", Offset = "0x106F838", VA = "0x106F838", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000199")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0x106F880", Offset = "0x106F880", VA = "0x106F880", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x106F4FC", Offset = "0x106F4FC", VA = "0x106F4FC")]
		[DebuggerHidden]
		public <CheckDistance>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x106F52C", Offset = "0x106F52C", VA = "0x106F52C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x106F530", Offset = "0x106F530", VA = "0x106F530", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x106F840", Offset = "0x106F840", VA = "0x106F840", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Image _img;

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0x106F3F4", Offset = "0x106F3F4", VA = "0x106F3F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0x106F488", Offset = "0x106F488", VA = "0x106F488")]
	[IteratorStateMachine(typeof(<CheckDistance>d__2))]
	private IEnumerator CheckDistance()
	{
		return null;
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0x106F524", Offset = "0x106F524", VA = "0x106F524")]
	public DarkenBG()
	{
	}
}
[Token(Token = "0x200030B")]
public class EnablePointersOnCollide : MonoBehaviour
{
	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool doScaleRoutine;

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x106F888", Offset = "0x106F888", VA = "0x106F888")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x106F984", Offset = "0x106F984", VA = "0x106F984")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x106F9F4", Offset = "0x106F9F4", VA = "0x106F9F4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x106FAB4", Offset = "0x106FAB4", VA = "0x106FAB4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x106FBD8", Offset = "0x106FBD8", VA = "0x106FBD8")]
	public EnablePointersOnCollide()
	{
	}
}
[Token(Token = "0x200030C")]
public class ExperimentalWarningChanger : MonoBehaviour
{
	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject logo;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject experimentalWarning;

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x106FBE0", Offset = "0x106FBE0", VA = "0x106FBE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x106FC7C", Offset = "0x106FC7C", VA = "0x106FC7C")]
	public ExperimentalWarningChanger()
	{
	}
}
[Token(Token = "0x200030D")]
public class ForceDialogueCollider : MonoBehaviour
{
	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpeechbubbleNew bubble;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _routineRunning;

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x106FC84", Offset = "0x106FC84", VA = "0x106FC84")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x106FDAC", Offset = "0x106FDAC", VA = "0x106FDAC")]
	public ForceDialogueCollider()
	{
	}
}
[Token(Token = "0x200030F")]
public class GameOverUI : MonoBehaviour
{
	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public TextMeshProUGUI txtInsightGained;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI txtNewJournalPages;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI txtNewMilestones;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI txtFlavorText;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI txtNewItems;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI txtFlavorText2;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI txtEnemiesKilled;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI txtFloorsCompleted;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI txtMoneySpent;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI txtDifficultyMultiplier;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Button endRunButton;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Animator animo;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int triggersPressed;

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x106FEE0", Offset = "0x106FEE0", VA = "0x106FEE0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x1070980", Offset = "0x1070980", VA = "0x1070980")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x1070A8C", Offset = "0x1070A8C", VA = "0x1070A8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x1070B98", Offset = "0x1070B98", VA = "0x1070B98")]
	private void RecenterPico()
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x1070C78", Offset = "0x1070C78", VA = "0x1070C78")]
	private void Trigger_canceled(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x1070C8C", Offset = "0x1070C8C", VA = "0x1070C8C")]
	private void Trigger_performed(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x1070C9C", Offset = "0x1070C9C", VA = "0x1070C9C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x1070E00", Offset = "0x1070E00", VA = "0x1070E00")]
	public void EndRun()
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x1070F08", Offset = "0x1070F08", VA = "0x1070F08")]
	public GameOverUI()
	{
	}
}
[Token(Token = "0x2000311")]
public class HighlightCheck : Selectable
{
	[Token(Token = "0x2000312")]
	public delegate void OnHighlight(bool highlighted);

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool _highlighted;

	[Token(Token = "0x14000021")]
	public event OnHighlight Highlighted
	{
		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x1072080", Offset = "0x1072080", VA = "0x1072080")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x107211C", Offset = "0x107211C", VA = "0x107211C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x10721B8", Offset = "0x10721B8", VA = "0x10721B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x1072270", Offset = "0x1072270", VA = "0x1072270")]
	public HighlightCheck()
	{
	}
}
[Token(Token = "0x2000313")]
public class HintGameDoesNotStartInVR : MonoBehaviour
{
	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x1072448", Offset = "0x1072448", VA = "0x1072448")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x10724DC", Offset = "0x10724DC", VA = "0x10724DC")]
	public HintGameDoesNotStartInVR()
	{
	}
}
[Token(Token = "0x2000314")]
public class ButtonIngameConsoleVR : MonoBehaviour
{
	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string command;

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x10724E4", Offset = "0x10724E4", VA = "0x10724E4")]
	public void Setup(string _command)
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x1072564", Offset = "0x1072564", VA = "0x1072564")]
	public void Setup(string _command, string _text)
	{
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x10725E8", Offset = "0x10725E8", VA = "0x10725E8")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x1072664", Offset = "0x1072664", VA = "0x1072664")]
	public ButtonIngameConsoleVR()
	{
	}
}
[Token(Token = "0x2000315")]
public class ComfortVignette : MonoBehaviour
{
	[Token(Token = "0x2000316")]
	public enum STATUS
	{
		[Token(Token = "0x4000F67")]
		SCALED_UP,
		[Token(Token = "0x4000F68")]
		SCALED_DOWN,
		[Token(Token = "0x4000F69")]
		IN_ROUTINE
	}

	[Token(Token = "0x2000317")]
	[CompilerGenerated]
	private sealed class <ScaleDown>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ComfortVignette <>4__this;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <_t>5__2;

		[Token(Token = "0x1700019E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0x1072B9C", Offset = "0x1072B9C", VA = "0x1072B9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0x1072BE4", Offset = "0x1072BE4", VA = "0x1072BE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x1072950", Offset = "0x1072950", VA = "0x1072950")]
		[DebuggerHidden]
		public <ScaleDown>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x10729B4", Offset = "0x10729B4", VA = "0x10729B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x10729B8", Offset = "0x10729B8", VA = "0x10729B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x1072BA4", Offset = "0x1072BA4", VA = "0x1072BA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000318")]
	[CompilerGenerated]
	private sealed class <ScaleUp>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ComfortVignette <>4__this;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <_t>5__2;

		[Token(Token = "0x170001A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0x1072DE0", Offset = "0x1072DE0", VA = "0x1072DE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0x1072E28", Offset = "0x1072E28", VA = "0x1072E28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x1072978", Offset = "0x1072978", VA = "0x1072978")]
		[DebuggerHidden]
		public <ScaleUp>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x1072BEC", Offset = "0x1072BEC", VA = "0x1072BEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x1072BF0", Offset = "0x1072BF0", VA = "0x1072BF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x1072DE8", Offset = "0x1072DE8", VA = "0x1072DE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeToStayEnabled;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fadeInTime;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startScale;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float endScale;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material _comfortVignetteMat;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _enabledTimer;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer _meshRend;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private STATUS _status;

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x107266C", Offset = "0x107266C", VA = "0x107266C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0x10726EC", Offset = "0x10726EC", VA = "0x10726EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x1072868", Offset = "0x1072868", VA = "0x1072868")]
	[IteratorStateMachine(typeof(<ScaleDown>d__11))]
	private IEnumerator ScaleDown()
	{
		return null;
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x10728DC", Offset = "0x10728DC", VA = "0x10728DC")]
	[IteratorStateMachine(typeof(<ScaleUp>d__12))]
	private IEnumerator ScaleUp()
	{
		return null;
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x10729A0", Offset = "0x10729A0", VA = "0x10729A0")]
	public ComfortVignette()
	{
	}
}
[Token(Token = "0x2000319")]
public class ExclamationMarkNPC : MonoBehaviour
{
	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool acolyte;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool blacksmith;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool seer;

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x1072E30", Offset = "0x1072E30", VA = "0x1072E30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x1072F8C", Offset = "0x1072F8C", VA = "0x1072F8C")]
	public ExclamationMarkNPC()
	{
	}
}
[Token(Token = "0x200031A")]
public class HitSplash : MonoBehaviour
{
	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TextMeshPro _tmesh;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _scaleTimer;

	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _timeAlive;

	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _timeToStay;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _initialScale;

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x1072F94", Offset = "0x1072F94", VA = "0x1072F94")]
	private void Start()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x1072FC0", Offset = "0x1072FC0", VA = "0x1072FC0")]
	public void SetHitSplash(string hit, ATTACKTYPE attacktype, bool crit = false, float timeToStay = 1f)
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x1073294", Offset = "0x1073294", VA = "0x1073294")]
	private void Update()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x1073484", Offset = "0x1073484", VA = "0x1073484")]
	public HitSplash()
	{
	}
}
[Token(Token = "0x200031B")]
public class HowToPlay : MonoBehaviour
{
	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject oculusHints;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject indexHints;

	[Token(Token = "0x4000F7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject viveHints;

	[Token(Token = "0x4000F7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject wmrHints;

	[Token(Token = "0x4000F7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject pico4Hints;

	[Token(Token = "0x4000F7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject picoNeo3Hints;

	[Token(Token = "0x4000F80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI txtRightMenu;

	[Token(Token = "0x4000F81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI txtLeftMenu;

	[Token(Token = "0x4000F82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI txtLeftJoystick;

	[Token(Token = "0x4000F83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI txtRightJoystick;

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x107348C", Offset = "0x107348C", VA = "0x107348C")]
	public void RefreshTextsBasedOnSettings()
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0x10739EC", Offset = "0x10739EC", VA = "0x10739EC")]
	public HowToPlay()
	{
	}
}
[Token(Token = "0x200031C")]
public class IntroductionScreenUI : MonoBehaviour
{
	[Token(Token = "0x200031D")]
	[CompilerGenerated]
	private sealed class <BackToHomeBase>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntroductionScreenUI <>4__this;

		[Token(Token = "0x170001A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600100F")]
			[Address(RVA = "0x1074D80", Offset = "0x1074D80", VA = "0x1074D80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001011")]
			[Address(RVA = "0x1074DC8", Offset = "0x1074DC8", VA = "0x1074DC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x1074A50", Offset = "0x1074A50", VA = "0x1074A50")]
		[DebuggerHidden]
		public <BackToHomeBase>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x1074AB4", Offset = "0x1074AB4", VA = "0x1074AB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x1074AB8", Offset = "0x1074AB8", VA = "0x1074AB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x1074D88", Offset = "0x1074D88", VA = "0x1074D88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200031E")]
	[CompilerGenerated]
	private sealed class <PrintText>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntroductionScreenUI <>4__this;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <text>5__2;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <a>5__3;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <_timeBetweenLetter>5__4;

		[Token(Token = "0x170001A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001015")]
			[Address(RVA = "0x107516C", Offset = "0x107516C", VA = "0x107516C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001017")]
			[Address(RVA = "0x10751B4", Offset = "0x10751B4", VA = "0x10751B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x1074A78", Offset = "0x1074A78", VA = "0x1074A78")]
		[DebuggerHidden]
		public <PrintText>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x1074DD0", Offset = "0x1074DD0", VA = "0x1074DD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x1074DD4", Offset = "0x1074DD4", VA = "0x1074DD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x1075174", Offset = "0x1075174", VA = "0x1075174", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public Transform bubble;

	[Token(Token = "0x4000F85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI txtText;

	[Token(Token = "0x4000F86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject pressTriggerToContinue;

	[Token(Token = "0x4000F87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float timeBetweenLetters;

	[Token(Token = "0x4000F88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _triggersPressed;

	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool canContinue;

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x10739F4", Offset = "0x10739F4", VA = "0x10739F4")]
	public void Start()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x10741A8", Offset = "0x10741A8", VA = "0x10741A8")]
	private void TriggerReleased(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x10741BC", Offset = "0x10741BC", VA = "0x10741BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x1074688", Offset = "0x1074688", VA = "0x1074688")]
	private void TriggerPressed(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x10749DC", Offset = "0x10749DC", VA = "0x10749DC")]
	[IteratorStateMachine(typeof(<BackToHomeBase>d__10))]
	private IEnumerator BackToHomeBase()
	{
		return null;
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x1074134", Offset = "0x1074134", VA = "0x1074134")]
	[IteratorStateMachine(typeof(<PrintText>d__11))]
	private IEnumerator PrintText()
	{
		return null;
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x1074AA0", Offset = "0x1074AA0", VA = "0x1074AA0")]
	public IntroductionScreenUI()
	{
	}
}
[Token(Token = "0x200031F")]
public class ItemHighlightInfoBasic : MonoBehaviour
{
	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public TextMeshProUGUI itemName;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI itemDesc;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image bg;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject activeItemInfo;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text rarity;

	[Token(Token = "0x6001018")]
	[Address(RVA = "0x10751BC", Offset = "0x10751BC", VA = "0x10751BC")]
	public void UpdateBasicInfos(ItemBase _b, ItemHightlightInfo _info)
	{
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x1075258", Offset = "0x1075258", VA = "0x1075258")]
	public ItemHighlightInfoBasic()
	{
	}
}
[Token(Token = "0x2000320")]
public class ItemHighlightInfoBuyItem : MonoBehaviour
{
	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public TextMeshProUGUI helpText;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI priceText;

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x1075260", Offset = "0x1075260", VA = "0x1075260")]
	public void UpdateBuyInfo(ItemBase _b)
	{
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x10754A8", Offset = "0x10754A8", VA = "0x10754A8")]
	public ItemHighlightInfoBuyItem()
	{
	}
}
[Token(Token = "0x2000321")]
public class ItemHighlightInfoExtraDesc : MonoBehaviour
{
	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public TextMeshProUGUI txtDesc;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image bg;

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x10754B0", Offset = "0x10754B0", VA = "0x10754B0")]
	public void UpdateDesc(ItemBase _b, ItemHightlightInfo _info)
	{
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x10754B4", Offset = "0x10754B4", VA = "0x10754B4")]
	public ItemHighlightInfoExtraDesc()
	{
	}
}
[Token(Token = "0x2000322")]
public class ItemHighlightInfoPotion : MonoBehaviour
{
	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public TextMeshProUGUI potionName;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI textPotionDuration;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI textPotionDesc;

	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject bgPotionDuration;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text rarity;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image bg;

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x10754BC", Offset = "0x10754BC", VA = "0x10754BC")]
	public void UpdatePotionInfos(ItemBase _i, ItemHightlightInfo _info)
	{
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x10756C0", Offset = "0x10756C0", VA = "0x10756C0")]
	public ItemHighlightInfoPotion()
	{
	}
}
[Token(Token = "0x2000323")]
public class ItemHightlightInfo : UtilBehavior
{
	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayerHand handToTrack;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Subhighlightinfos")]
	public ItemHighlightInfoBuyItem itemHighlightInfoBuyItem;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ItemHighlightInfoPotion itemHighlightInfoPotion;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ItemHighlightInfoBasic itemHighlightInfoBasic;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<ItemBase> _objectsTouched;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ItemBase _lastTouchingObject;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _isOpen;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _previousHandCount;

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x10756C8", Offset = "0x10756C8", VA = "0x10756C8")]
	public bool ContainsTouchedItem(ItemBase itemBase)
	{
		return default(bool);
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x1075720", Offset = "0x1075720", VA = "0x1075720")]
	public void Initialize(PlayerHand hand)
	{
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x1075728", Offset = "0x1075728", VA = "0x1075728")]
	public void Show(bool skipAnimation)
	{
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x10757CC", Offset = "0x10757CC", VA = "0x10757CC")]
	public void Hide(bool skipAnimation)
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x1075880", Offset = "0x1075880", VA = "0x1075880")]
	public void RegisterItemName(ItemBase item)
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x1075A1C", Offset = "0x1075A1C", VA = "0x1075A1C")]
	public void UnregisterItemName(ItemBase item)
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0x1075B9C", Offset = "0x1075B9C", VA = "0x1075B9C")]
	[ContextMenu("Show stuff")]
	private void ShowStuff()
	{
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0x1075DCC", Offset = "0x1075DCC", VA = "0x1075DCC")]
	private void UpdateItemName(ItemBase item)
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x1075FC0", Offset = "0x1075FC0", VA = "0x1075FC0")]
	public void ResetInfo()
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x1076048", Offset = "0x1076048", VA = "0x1076048")]
	private void Update()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x107649C", Offset = "0x107649C", VA = "0x107649C")]
	public ItemHightlightInfo()
	{
	}
}
[Token(Token = "0x2000324")]
public class JournalPageUI : MonoBehaviour
{
	[Token(Token = "0x2000325")]
	[CompilerGenerated]
	private sealed class <RemoveSpeechbubble>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JournalPageUI <>4__this;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <scale>5__2;

		[Token(Token = "0x170001A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600103A")]
			[Address(RVA = "0x1077A1C", Offset = "0x1077A1C", VA = "0x1077A1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600103C")]
			[Address(RVA = "0x1077A64", Offset = "0x1077A64", VA = "0x1077A64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x107769C", Offset = "0x107769C", VA = "0x107769C")]
		[DebuggerHidden]
		public <RemoveSpeechbubble>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x1077728", Offset = "0x1077728", VA = "0x1077728", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x107772C", Offset = "0x107772C", VA = "0x107772C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x1077A24", Offset = "0x1077A24", VA = "0x1077A24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000326")]
	[CompilerGenerated]
	private sealed class <PrintText>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JournalPageUI <>4__this;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <a>5__2;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <_timeBetweenLetter>5__3;

		[Token(Token = "0x170001A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001040")]
			[Address(RVA = "0x1077DDC", Offset = "0x1077DDC", VA = "0x1077DDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0x1077E24", Offset = "0x1077E24", VA = "0x1077E24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x10776C4", Offset = "0x10776C4", VA = "0x10776C4")]
		[DebuggerHidden]
		public <PrintText>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x1077A6C", Offset = "0x1077A6C", VA = "0x1077A6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x1077A70", Offset = "0x1077A70", VA = "0x1077A70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x1077DE4", Offset = "0x1077DE4", VA = "0x1077DE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000327")]
	[CompilerGenerated]
	private sealed class <PopOutText>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public JournalPageUI <>4__this;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <scale>5__2;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <a>5__3;

		[Token(Token = "0x170001AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001046")]
			[Address(RVA = "0x10780CC", Offset = "0x10780CC", VA = "0x10780CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0x1078114", Offset = "0x1078114", VA = "0x1078114", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x10776EC", Offset = "0x10776EC", VA = "0x10776EC")]
		[DebuggerHidden]
		public <PopOutText>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x1077E2C", Offset = "0x1077E2C", VA = "0x1077E2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x1077E30", Offset = "0x1077E30", VA = "0x1077E30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x10780D4", Offset = "0x10780D4", VA = "0x10780D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public Transform bubble;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI txtNPCName;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI txtText;

	[Token(Token = "0x4000FAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public JournalInterpreter.JournalPage journal;

	[Token(Token = "0x4000FAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float timeBetweenLetters;

	[Token(Token = "0x4000FAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool canContinue;

	[Token(Token = "0x4000FB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _triggersPressed;

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x10767EC", Offset = "0x10767EC", VA = "0x10767EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x10768C4", Offset = "0x10768C4", VA = "0x10768C4")]
	public void OpenBubble()
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x1076D0C", Offset = "0x1076D0C", VA = "0x1076D0C")]
	private void Trigger_canceled(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x1076D20", Offset = "0x1076D20", VA = "0x1076D20")]
	private void Trigger_performed(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x10771A0", Offset = "0x10771A0", VA = "0x10771A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x1077660", Offset = "0x1077660", VA = "0x1077660")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x107712C", Offset = "0x107712C", VA = "0x107712C")]
	[IteratorStateMachine(typeof(<RemoveSpeechbubble>d__13))]
	private IEnumerator RemoveSpeechbubble()
	{
		return null;
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x1076C7C", Offset = "0x1076C7C", VA = "0x1076C7C")]
	[IteratorStateMachine(typeof(<PrintText>d__14))]
	private IEnumerator PrintText(string text)
	{
		return null;
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x1076C08", Offset = "0x1076C08", VA = "0x1076C08")]
	[IteratorStateMachine(typeof(<PopOutText>d__15))]
	private IEnumerator PopOutText()
	{
		return null;
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x1077714", Offset = "0x1077714", VA = "0x1077714")]
	public JournalPageUI()
	{
	}
}
[Token(Token = "0x2000328")]
public class Minimap : MonoBehaviour
{
	[Token(Token = "0x2000329")]
	[CompilerGenerated]
	private sealed class <MapCreationStep>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Minimap <>4__this;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RoomCreator.RoomFile <_currentRoom>5__2;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<RoomCreator.RoomFile.TileInRoom>.Enumerator <>7__wrap2;

		[Token(Token = "0x170001AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001057")]
			[Address(RVA = "0x1079BE0", Offset = "0x1079BE0", VA = "0x1079BE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001059")]
			[Address(RVA = "0x1079C28", Offset = "0x1079C28", VA = "0x1079C28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x10787C0", Offset = "0x10787C0", VA = "0x10787C0")]
		[DebuggerHidden]
		public <MapCreationStep>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x10793FC", Offset = "0x10793FC", VA = "0x10793FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x1079418", Offset = "0x1079418", VA = "0x1079418", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x1079B90", Offset = "0x1079B90", VA = "0x1079B90")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x1079BE8", Offset = "0x1079BE8", VA = "0x1079BE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032A")]
	[CompilerGenerated]
	private sealed class <RevealCurrentFloorMapRoutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Minimap <>4__this;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WorldGeneratorEvolved <worldGenerator>5__2;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Vector2Int, (RoomCreator.RoomFile.TileInRoom tile, RoomCreator.RoomFile correspondingRoom)>.Enumerator <>7__wrap2;

		[Token(Token = "0x170001AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600105E")]
			[Address(RVA = "0x107A128", Offset = "0x107A128", VA = "0x107A128", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001060")]
			[Address(RVA = "0x107A170", Offset = "0x107A170", VA = "0x107A170", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x107887C", Offset = "0x107887C", VA = "0x107887C")]
		[DebuggerHidden]
		public <RevealCurrentFloorMapRoutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x1079C30", Offset = "0x1079C30", VA = "0x1079C30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x1079C4C", Offset = "0x1079C4C", VA = "0x1079C4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x107A0D8", Offset = "0x107A0D8", VA = "0x107A0D8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x107A130", Offset = "0x107A130", VA = "0x107A130", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WristInfo quickInventory;

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject minimapTile;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform playerPos;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float updateInterval;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _offsetPosOfPreviousFloor;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UnityEngine.Coroutine _creationRoutine;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Mesh Settings")]
	public Sprite tileNowall;

	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite tile1Wall;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Sprite tileCorner;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite tileDeadend;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite tileCorridor4;

	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite tileCorridor2;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<Vector2Int, SpriteRenderer> _minimapRepresentation;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _scaleOfTile;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool shouldUpdateMap;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private HashSet<RoomCreator.RoomFile> _roomsEncountered;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private HashSet<RoomCreator.RoomFile.TileInRoom> _tilesEncountered;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private WorldGeneratorEvolved _cwg;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _updateIntervalTimer;

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x107811C", Offset = "0x107811C", VA = "0x107811C")]
	[ContextMenu("GenerateMinimap")]
	public void CreateMinimap()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x1078138", Offset = "0x1078138", VA = "0x1078138")]
	private void InitMapCreation()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x10784E0", Offset = "0x10784E0", VA = "0x10784E0")]
	private void UpdateMinimapPositionAndScale()
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x107874C", Offset = "0x107874C", VA = "0x107874C")]
	[IteratorStateMachine(typeof(<MapCreationStep>d__22))]
	private IEnumerator MapCreationStep()
	{
		return null;
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x10787E8", Offset = "0x10787E8", VA = "0x10787E8")]
	public void RevealCurrentFloorMap()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x1078808", Offset = "0x1078808", VA = "0x1078808")]
	[IteratorStateMachine(typeof(<RevealCurrentFloorMapRoutine>d__24))]
	private IEnumerator RevealCurrentFloorMapRoutine()
	{
		return null;
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x10788A4", Offset = "0x10788A4", VA = "0x10788A4")]
	private void AddTileToMinimap(RoomCreator.RoomFile.TileInRoom _tile, RoomCreator.RoomFile _currentRoom, WorldGeneratorEvolved _cwg, int _px, int _py, bool skipSpecialTypes = true)
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x10790D4", Offset = "0x10790D4", VA = "0x10790D4")]
	private bool IsValidConnection(RoomCreator.RoomFile.TileInRoom tile, RoomCreator.RoomFile room, WorldGeneratorEvolved wge, bool skipSpecialTypes = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x1079198", Offset = "0x1079198", VA = "0x1079198")]
	private void Update()
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x10793DC", Offset = "0x10793DC", VA = "0x10793DC")]
	public Minimap()
	{
	}
}
[Token(Token = "0x200032B")]
public class PopUp : MonoBehaviour
{
	[Token(Token = "0x200032C")]
	public delegate void PopupEvent();

	[Token(Token = "0x200032D")]
	[CompilerGenerated]
	private sealed class <Shrink>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PopUp <>4__this;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <scale>5__2;

		[Token(Token = "0x170001B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001074")]
			[Address(RVA = "0x107ABD4", Offset = "0x107ABD4", VA = "0x107ABD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001076")]
			[Address(RVA = "0x107AC1C", Offset = "0x107AC1C", VA = "0x107AC1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x107A810", Offset = "0x107A810", VA = "0x107A810")]
		[DebuggerHidden]
		public <Shrink>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x107A984", Offset = "0x107A984", VA = "0x107A984", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x107A988", Offset = "0x107A988", VA = "0x107A988", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x107ABDC", Offset = "0x107ABDC", VA = "0x107ABDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200032E")]
	[CompilerGenerated]
	private sealed class <PopOut>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PopUp <>4__this;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <scale>5__2;

		[Token(Token = "0x170001B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600107A")]
			[Address(RVA = "0x107AE3C", Offset = "0x107AE3C", VA = "0x107AE3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600107C")]
			[Address(RVA = "0x107AE84", Offset = "0x107AE84", VA = "0x107AE84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x107A838", Offset = "0x107A838", VA = "0x107A838")]
		[DebuggerHidden]
		public <PopOut>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x107AC24", Offset = "0x107AC24", VA = "0x107AC24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x107AC28", Offset = "0x107AC28", VA = "0x107AC28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x107AE44", Offset = "0x107AE44", VA = "0x107AE44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform bubble;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LivingBase livingToWatch;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ADSoundEffect openSound;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ADSoundEffect closeSound;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float openSize;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float closedSize;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float popupSpeed;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool enablePointers;

	[Token(Token = "0x14000022")]
	public event PopupEvent OpenEvent
	{
		[Token(Token = "0x6001061")]
		[Address(RVA = "0x107A178", Offset = "0x107A178", VA = "0x107A178")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001062")]
		[Address(RVA = "0x107A214", Offset = "0x107A214", VA = "0x107A214")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public event PopupEvent CloseEvent
	{
		[Token(Token = "0x6001063")]
		[Address(RVA = "0x107A2B0", Offset = "0x107A2B0", VA = "0x107A2B0")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001064")]
		[Address(RVA = "0x107A34C", Offset = "0x107A34C", VA = "0x107A34C")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x107A3E8", Offset = "0x107A3E8", VA = "0x107A3E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x107A504", Offset = "0x107A504", VA = "0x107A504")]
	private void LivingToWatch_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x107A618", Offset = "0x107A618", VA = "0x107A618")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x107A6E4", Offset = "0x107A6E4", VA = "0x107A6E4")]
	public void ShowOverlayText(string topbottom)
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0x107A7B8", Offset = "0x107A7B8", VA = "0x107A7B8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x107A5A4", Offset = "0x107A5A4", VA = "0x107A5A4")]
	[IteratorStateMachine(typeof(<Shrink>d__20))]
	private IEnumerator Shrink()
	{
		return null;
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x107A670", Offset = "0x107A670", VA = "0x107A670")]
	[IteratorStateMachine(typeof(<PopOut>d__21))]
	private IEnumerator PopOut()
	{
		return null;
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x107A860", Offset = "0x107A860", VA = "0x107A860")]
	public PopUp()
	{
	}
}
[Token(Token = "0x200032F")]
public class SpeechbubbleButton : MonoBehaviour
{
	[Token(Token = "0x2000330")]
	[CompilerGenerated]
	private sealed class <ChoiceRoutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpeechbubbleButton <>4__this;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpeechbubbleNew.PageChoice.Choice _choice;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SpeechbubbleNew _bubble;

		[Token(Token = "0x170001B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001085")]
			[Address(RVA = "0x107B224", Offset = "0x107B224", VA = "0x107B224", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001087")]
			[Address(RVA = "0x107B26C", Offset = "0x107B26C", VA = "0x107B26C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x107AF5C", Offset = "0x107AF5C", VA = "0x107AF5C")]
		[DebuggerHidden]
		public <ChoiceRoutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x107B064", Offset = "0x107B064", VA = "0x107B064", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x107B068", Offset = "0x107B068", VA = "0x107B068", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x107B22C", Offset = "0x107B22C", VA = "0x107B22C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000331")]
	[CompilerGenerated]
	private sealed class <SelectChoiceRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpeechbubbleButton <>4__this;

		[Token(Token = "0x170001B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600108B")]
			[Address(RVA = "0x107B770", Offset = "0x107B770", VA = "0x107B770", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600108D")]
			[Address(RVA = "0x107B7B8", Offset = "0x107B7B8", VA = "0x107B7B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x107B034", Offset = "0x107B034", VA = "0x107B034")]
		[DebuggerHidden]
		public <SelectChoiceRoutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x107B274", Offset = "0x107B274", VA = "0x107B274", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x107B278", Offset = "0x107B278", VA = "0x107B278", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x107B778", Offset = "0x107B778", VA = "0x107B778", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI btnText;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpeechbubbleNew.PageChoice.Choice choice;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SpeechbubbleNew bubble;

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x107AE8C", Offset = "0x107AE8C", VA = "0x107AE8C")]
	public void SetChoice(SpeechbubbleNew.PageChoice.Choice _choice, SpeechbubbleNew _bubble)
	{
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x107AEB8", Offset = "0x107AEB8", VA = "0x107AEB8")]
	[IteratorStateMachine(typeof(<ChoiceRoutine>d__4))]
	private IEnumerator ChoiceRoutine(SpeechbubbleNew.PageChoice.Choice _choice, SpeechbubbleNew _bubble)
	{
		return null;
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x107AF84", Offset = "0x107AF84", VA = "0x107AF84")]
	public void SelectChoice()
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x107AFC0", Offset = "0x107AFC0", VA = "0x107AFC0")]
	[IteratorStateMachine(typeof(<SelectChoiceRoutine>d__6))]
	private IEnumerator SelectChoiceRoutine()
	{
		return null;
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x107B05C", Offset = "0x107B05C", VA = "0x107B05C")]
	public SpeechbubbleButton()
	{
	}
}
[Token(Token = "0x2000332")]
public class SpeechbubbleNew : MonoBehaviour
{
	[Token(Token = "0x2000333")]
	public class Page
	{
		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string fileId;

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x107D274", Offset = "0x107D274", VA = "0x107D274")]
		public Page()
		{
		}
	}

	[Token(Token = "0x2000334")]
	public class PageDialog : Page
	{
		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string text;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string nextId;

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x107CE3C", Offset = "0x107CE3C", VA = "0x107CE3C")]
		public string GetLocalizedText()
		{
			return null;
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x107C010", Offset = "0x107C010", VA = "0x107C010")]
		public PageDialog()
		{
		}
	}

	[Token(Token = "0x2000335")]
	public class PageChoice : Page
	{
		[Token(Token = "0x2000336")]
		public class Choice
		{
			[Token(Token = "0x4001017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string text;

			[Token(Token = "0x4001018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string nextID;

			[Token(Token = "0x4001019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int choiceIndex;

			[Token(Token = "0x400101A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Page pageReference;

			[Token(Token = "0x60010A6")]
			[Address(RVA = "0x107B17C", Offset = "0x107B17C", VA = "0x107B17C")]
			public string GetLocalizedText()
			{
				return null;
			}

			[Token(Token = "0x60010A7")]
			[Address(RVA = "0x107C54C", Offset = "0x107C54C", VA = "0x107C54C")]
			public Choice()
			{
			}
		}

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Choice> choices;

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x107C554", Offset = "0x107C554", VA = "0x107C554")]
		public PageChoice()
		{
		}
	}

	[Token(Token = "0x2000337")]
	[CompilerGenerated]
	private sealed class <TeleportToDesiredPosition>d__27 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 pos;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SpeechbubbleNew <>4__this;

		[Token(Token = "0x170001B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010AB")]
			[Address(RVA = "0x107D5E8", Offset = "0x107D5E8", VA = "0x107D5E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0x107D630", Offset = "0x107D630", VA = "0x107D630", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x107BB40", Offset = "0x107BB40", VA = "0x107BB40")]
		[DebuggerHidden]
		public <TeleportToDesiredPosition>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x107D27C", Offset = "0x107D27C", VA = "0x107D27C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0x107D280", Offset = "0x107D280", VA = "0x107D280", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x107D5F0", Offset = "0x107D5F0", VA = "0x107D5F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033A")]
	[CompilerGenerated]
	private sealed class <RemoveSpeechbubble>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpeechbubbleNew <>4__this;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <scale>5__2;

		[Token(Token = "0x170001BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0x107D9B0", Offset = "0x107D9B0", VA = "0x107D9B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010B8")]
			[Address(RVA = "0x107D9F8", Offset = "0x107D9F8", VA = "0x107D9F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x107CF98", Offset = "0x107CF98", VA = "0x107CF98")]
		[DebuggerHidden]
		public <RemoveSpeechbubble>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x107D6DC", Offset = "0x107D6DC", VA = "0x107D6DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x107D6E0", Offset = "0x107D6E0", VA = "0x107D6E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x107D9B8", Offset = "0x107D9B8", VA = "0x107D9B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033B")]
	[CompilerGenerated]
	private sealed class <PrintText>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpeechbubbleNew <>4__this;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string text;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <a>5__2;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <_timeBetweenLetter>5__3;

		[Token(Token = "0x170001BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0x107DCD4", Offset = "0x107DCD4", VA = "0x107DCD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010BE")]
			[Address(RVA = "0x107DD1C", Offset = "0x107DD1C", VA = "0x107DD1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x107CFC0", Offset = "0x107CFC0", VA = "0x107CFC0")]
		[DebuggerHidden]
		public <PrintText>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x107DA00", Offset = "0x107DA00", VA = "0x107DA00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x107DA04", Offset = "0x107DA04", VA = "0x107DA04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x107DCDC", Offset = "0x107DCDC", VA = "0x107DCDC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200033C")]
	[CompilerGenerated]
	private sealed class <PopOutText>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpeechbubbleNew <>4__this;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <scale>5__2;

		[Token(Token = "0x170001BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010C2")]
			[Address(RVA = "0x107DEE0", Offset = "0x107DEE0", VA = "0x107DEE0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010C4")]
			[Address(RVA = "0x107DF28", Offset = "0x107DF28", VA = "0x107DF28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x107CFE8", Offset = "0x107CFE8", VA = "0x107CFE8")]
		[DebuggerHidden]
		public <PopOutText>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x107DD24", Offset = "0x107DD24", VA = "0x107DD24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x107DD28", Offset = "0x107DD28", VA = "0x107DD28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x107DEE8", Offset = "0x107DEE8", VA = "0x107DEE8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string fileName;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Config")]
	public GameObject mainBubblePart;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject buttonTalk;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform bubble;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI txtNPCName;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI txtText;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform buttonChoices;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject speechbubbleButtonPrefab;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LookAtPlayer lookAtPlayer;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool hasDialogueForPlayer;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject exclamationMark;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float distUntilClose;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[HideInInspector]
	public float timeBetweenLetters;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public string npcName;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public bool canContinue;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public string firstDialog;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GenericRepresentation bubbleRepresentation;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Page> speechbubblePages;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Page _currentPage;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool _isOpen;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float _prevMoveSpeed;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool _hasBeenOpenedThisRun;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool _triggerPressed;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private char[] stopChars;

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x107B7C0", Offset = "0x107B7C0", VA = "0x107B7C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x107BAA8", Offset = "0x107BAA8", VA = "0x107BAA8")]
	[IteratorStateMachine(typeof(<TeleportToDesiredPosition>d__27))]
	private IEnumerator TeleportToDesiredPosition(Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x107BB68", Offset = "0x107BB68", VA = "0x107BB68")]
	public void ClearBubble()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0x107BBD8", Offset = "0x107BBD8", VA = "0x107BBD8")]
	public void OnPressTalk()
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x107BED4", Offset = "0x107BED4", VA = "0x107BED4")]
	public void AddDialog(string _id, string _text, string _nextId)
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x107C018", Offset = "0x107C018", VA = "0x107C018")]
	public Page GetFirstPage()
	{
		return null;
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x107C094", Offset = "0x107C094", VA = "0x107C094")]
	public void AddChoice(string _id, string _text, string _nextID)
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x107C5DC", Offset = "0x107C5DC", VA = "0x107C5DC")]
	public void OpenBubble()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x107C970", Offset = "0x107C970", VA = "0x107C970")]
	private void OnPlayerTrigger(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x107CAF4", Offset = "0x107CAF4", VA = "0x107CAF4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x107C9C4", Offset = "0x107C9C4", VA = "0x107C9C4")]
	private void TriggerPressed()
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x107C350", Offset = "0x107C350", VA = "0x107C350")]
	private Page GetPageById(string _id)
	{
		return null;
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x107B3B8", Offset = "0x107B3B8", VA = "0x107B3B8")]
	public void DisplayText(string _id)
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x107CB50", Offset = "0x107CB50", VA = "0x107CB50")]
	public void CloseSpeechbubble()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x107CF24", Offset = "0x107CF24", VA = "0x107CF24")]
	[IteratorStateMachine(typeof(<RemoveSpeechbubble>d__40))]
	private IEnumerator RemoveSpeechbubble()
	{
		return null;
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x107CE94", Offset = "0x107CE94", VA = "0x107CE94")]
	[IteratorStateMachine(typeof(<PrintText>d__42))]
	private IEnumerator PrintText(string text)
	{
		return null;
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x107C8FC", Offset = "0x107C8FC", VA = "0x107C8FC")]
	[IteratorStateMachine(typeof(<PopOutText>d__43))]
	private IEnumerator PopOutText()
	{
		return null;
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x107D010", Offset = "0x107D010", VA = "0x107D010")]
	private void Update()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x107B8C8", Offset = "0x107B8C8", VA = "0x107B8C8")]
	public void ReadSpeechbubbleFromDisk()
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x107D1AC", Offset = "0x107D1AC", VA = "0x107D1AC")]
	public SpeechbubbleNew()
	{
	}
}
[Token(Token = "0x200033D")]
public class UIHud : MonoBehaviour
{
	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objsToDisable;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI cash;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI keys;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hint;

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x107DF30", Offset = "0x107DF30", VA = "0x107DF30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x107E1F4", Offset = "0x107E1F4", VA = "0x107E1F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x107E150", Offset = "0x107E150", VA = "0x107E150")]
	private void SetHint(bool b, float delay)
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x107E36C", Offset = "0x107E36C", VA = "0x107E36C")]
	private void ToggleHUD(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x107E4CC", Offset = "0x107E4CC", VA = "0x107E4CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x107E654", Offset = "0x107E654", VA = "0x107E654")]
	public UIHud()
	{
	}
}
[Token(Token = "0x2000340")]
public class LocalizationKey : MonoBehaviour
{
	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string localizationId;

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x107E7AC", Offset = "0x107E7AC", VA = "0x107E7AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x107E900", Offset = "0x107E900", VA = "0x107E900")]
	private void DoTranslation()
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x107EA0C", Offset = "0x107EA0C", VA = "0x107EA0C")]
	private void Instance_GameHandlerInitialized()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x107EA10", Offset = "0x107EA10", VA = "0x107EA10")]
	public LocalizationKey()
	{
	}
}
[Token(Token = "0x2000341")]
public class LocalizationKeyFallback : MonoBehaviour
{
	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string localizationId;

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x107EA18", Offset = "0x107EA18", VA = "0x107EA18")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x107EC04", Offset = "0x107EC04", VA = "0x107EC04")]
	public LocalizationKeyFallback()
	{
	}
}
[Token(Token = "0x2000342")]
public class ModSettingsMenuButton : MonoBehaviour
{
	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject settingsButtonObject;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ModLoader.Mod _modReference;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SettingsMod _settings;

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x107EC0C", Offset = "0x107EC0C", VA = "0x107EC0C")]
	public void UpdateSettingsButton(bool hasSettings, ModLoader.Mod mod, SettingsMod settingsMod)
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x107EC60", Offset = "0x107EC60", VA = "0x107EC60")]
	public void OnButtonClick()
	{
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0x107F004", Offset = "0x107F004", VA = "0x107F004")]
	public ModSettingsMenuButton()
	{
	}
}
[Token(Token = "0x2000343")]
public class OverlayStat : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x2000344")]
	public enum STAT_TYPE
	{
		[Token(Token = "0x4001046")]
		DEFAULT,
		[Token(Token = "0x4001047")]
		PRIMARY_DMG,
		[Token(Token = "0x4001048")]
		SECONDARY_DMG,
		[Token(Token = "0x4001049")]
		PRIMARY_CRIT,
		[Token(Token = "0x400104A")]
		SECONDARY_CRIT
	}

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public STAT_TYPE statType;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform hoverInfos;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string hoverTextId;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI txtValue;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI txtStatName;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Image _img;

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x107F00C", Offset = "0x107F00C", VA = "0x107F00C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x107F064", Offset = "0x107F064", VA = "0x107F064")]
	public void ActivateStat(bool _activate, int _val, string _suffix = "")
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x107F304", Offset = "0x107F304", VA = "0x107F304", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x107F398", Offset = "0x107F398", VA = "0x107F398", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x107F0B8", Offset = "0x107F0B8", VA = "0x107F0B8")]
	public void ActivateStat(bool _activate, string _val = "")
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x107F53C", Offset = "0x107F53C", VA = "0x107F53C")]
	public void SetStatColor(Color c)
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x107F560", Offset = "0x107F560", VA = "0x107F560")]
	public OverlayStat()
	{
	}
}
[Token(Token = "0x2000345")]
public class PauseScreen : MonoBehaviour
{
	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x107F568", Offset = "0x107F568", VA = "0x107F568")]
	public void OnContinueClick()
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x107F5CC", Offset = "0x107F5CC", VA = "0x107F5CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x107F81C", Offset = "0x107F81C", VA = "0x107F81C")]
	public PauseScreen()
	{
	}
}
[Token(Token = "0x2000346")]
public class PlayerHitEffect : MonoBehaviour
{
	[Token(Token = "0x2000347")]
	[CompilerGenerated]
	private sealed class <FlashActiveEffect>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHitEffect <>4__this;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color _col;

		[Token(Token = "0x170001C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60010F2")]
			[Address(RVA = "0x1080108", Offset = "0x1080108", VA = "0x1080108", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60010F4")]
			[Address(RVA = "0x1080150", Offset = "0x1080150", VA = "0x1080150", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x107FA04", Offset = "0x107FA04", VA = "0x107FA04")]
		[DebuggerHidden]
		public <FlashActiveEffect>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x107FF6C", Offset = "0x107FF6C", VA = "0x107FF6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x107FF70", Offset = "0x107FF70", VA = "0x107FF70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x1080110", Offset = "0x1080110", VA = "0x1080110", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200034B")]
	[CompilerGenerated]
	private sealed class <Hit>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerHitEffect <>4__this;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ATTACKTYPE type;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Color <_hitCol>5__2;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <opacity>5__3;

		[Token(Token = "0x170001C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001107")]
			[Address(RVA = "0x10808CC", Offset = "0x10808CC", VA = "0x10808CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001109")]
			[Address(RVA = "0x1080914", Offset = "0x1080914", VA = "0x1080914", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x107FF2C", Offset = "0x107FF2C", VA = "0x107FF2C")]
		[DebuggerHidden]
		public <Hit>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x108054C", Offset = "0x108054C", VA = "0x108054C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x1080550", Offset = "0x1080550", VA = "0x1080550", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x10808D4", Offset = "0x10808D4", VA = "0x10808D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ADSoundEffect playerHitSound;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxHitOpacity;

	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material baseHitMaterial;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material baseSolidMaterial;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _red;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool _doesHitAnim;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material _matOnHit;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _isFadingOut;

	[NonSerialized]
	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool screenFadedOut;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UnityEngine.Coroutine _currentRunningRoutine;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UnityEngine.Coroutine _flashRoutine;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _defaultCullingMask;

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x107F824", Offset = "0x107F824", VA = "0x107F824")]
	public void DoHitEffect(ATTACKTYPE type)
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x107F8E4", Offset = "0x107F8E4", VA = "0x107F8E4")]
	public void EnableActiveEffect(Color col)
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x107F968", Offset = "0x107F968", VA = "0x107F968")]
	[IteratorStateMachine(typeof(<FlashActiveEffect>d__13))]
	private IEnumerator FlashActiveEffect(Color _col)
	{
		return null;
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x107FA2C", Offset = "0x107FA2C", VA = "0x107FA2C")]
	public void DisableActiveEffect()
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x1073EB8", Offset = "0x1073EB8", VA = "0x1073EB8")]
	public void FadeScreen(bool fadeout, float speed = 0.9f)
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x107FBB8", Offset = "0x107FBB8", VA = "0x107FBB8")]
	public void SetBlack(bool _enable)
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x107FDC0", Offset = "0x107FDC0", VA = "0x107FDC0")]
	public void SetRed(bool _val)
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x107F860", Offset = "0x107F860", VA = "0x107F860")]
	[IteratorStateMachine(typeof(<Hit>d__19))]
	private IEnumerator Hit(ATTACKTYPE type)
	{
		return null;
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x107FF54", Offset = "0x107FF54", VA = "0x107FF54")]
	public PlayerHitEffect()
	{
	}
}
[Token(Token = "0x200034C")]
public class PlayerStatsUI : MonoBehaviour
{
	[Token(Token = "0x200034D")]
	[CompilerGenerated]
	private sealed class <PrintTwitchChat>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerStatsUI <>4__this;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ADVRTwitchHelper <_helper>5__2;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <_timeOutHelper>5__3;

		[Token(Token = "0x170001CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001112")]
			[Address(RVA = "0x1080E70", Offset = "0x1080E70", VA = "0x1080E70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001114")]
			[Address(RVA = "0x1080EB8", Offset = "0x1080EB8", VA = "0x1080EB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0x1080B5C", Offset = "0x1080B5C", VA = "0x1080B5C")]
		[DebuggerHidden]
		public <PrintTwitchChat>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0x1080CD0", Offset = "0x1080CD0", VA = "0x1080CD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0x1080CD4", Offset = "0x1080CD4", VA = "0x1080CD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x1080E78", Offset = "0x1080E78", VA = "0x1080E78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Other Config")]
	public UI_HP playerHP;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text textCash;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textKeys;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject twitchChat;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI twitchChatTextbox;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerLiving playerInfo;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _lastCoins;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _lastKeys;

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x108091C", Offset = "0x108091C", VA = "0x108091C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x10809D4", Offset = "0x10809D4", VA = "0x10809D4")]
	private void Instance_GameHandlerInitialized()
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0x1080AE8", Offset = "0x1080AE8", VA = "0x1080AE8")]
	[IteratorStateMachine(typeof(<PrintTwitchChat>d__8))]
	public IEnumerator PrintTwitchChat()
	{
		return null;
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0x1080B84", Offset = "0x1080B84", VA = "0x1080B84")]
	private void Update()
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0x1080CC8", Offset = "0x1080CC8", VA = "0x1080CC8")]
	public PlayerStatsUI()
	{
	}
}
[Token(Token = "0x200034E")]
public class PointerEventHelper : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Listen Settings")]
	public bool listenOnEnter;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool listenOnExit;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[Header("Actions")]
	public bool preventMovement;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float _currentMoveSpeed;

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x1080EC0", Offset = "0x1080EC0", VA = "0x1080EC0", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x1080F48", Offset = "0x1080F48", VA = "0x1080F48", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x1080FD0", Offset = "0x1080FD0", VA = "0x1080FD0")]
	public PointerEventHelper()
	{
	}
}
[Token(Token = "0x200034F")]
public class BeastBloodLockedScreen : MonoBehaviour
{
	[Token(Token = "0x6001118")]
	[Address(RVA = "0x1080FD8", Offset = "0x1080FD8", VA = "0x1080FD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x10810A0", Offset = "0x10810A0", VA = "0x10810A0")]
	public BeastBloodLockedScreen()
	{
	}
}
[Token(Token = "0x2000350")]
public class ProgressItemUI : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x2000351")]
	public enum STATUS
	{
		[Token(Token = "0x4001086")]
		LOCKED,
		[Token(Token = "0x4001087")]
		AVAILABLE,
		[Token(Token = "0x4001088")]
		BOUGHT
	}

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public ProgressHandler.ProgressDiskRepresentation progressRepresentation;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image bgImg;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image spriteImg;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image successorConnectionImg;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite lockedSprite;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI txtPrice;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI txtName;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ProgressShopInsight _insightShop;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ProgressShopBeastBlood _beastBloodShop;

	[NonSerialized]
	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isBought;

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x10810A8", Offset = "0x10810A8", VA = "0x10810A8")]
	[ContextMenu("SET INFOS")]
	public void UpdateInfosInsight(ProgressShopInsight shop, ProgressHandler.ProgressDiskRepresentation repre, STATUS status)
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x108120C", Offset = "0x108120C", VA = "0x108120C")]
	public void UpdateInfosBeastBlood(ProgressShopBeastBlood shop, ProgressHandler.ProgressDiskRepresentation repre, STATUS status)
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x10813E4", Offset = "0x10813E4", VA = "0x10813E4")]
	public void OnButtonPress()
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x1081DE4", Offset = "0x1081DE4", VA = "0x1081DE4", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x1081E80", Offset = "0x1081E80", VA = "0x1081E80", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x1082058", Offset = "0x1082058", VA = "0x1082058")]
	public ProgressItemUI()
	{
	}
}
[Token(Token = "0x2000352")]
public class ProgressShopBeastBlood : MonoBehaviour
{
	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Weapon Selection")]
	public Transform weaponSelectionGroup;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject buttonSelectWeaponPrefab;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Configuration")]
	public string npcId;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject progressItemButton;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform progressLayoutGroup;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI txtAmountCurrency;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Detail Page")]
	public GameObject detailPage;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI txtName;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI txtDesc;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button buyButton;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image imgItemSprite;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshProUGUI buyButtonText;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Animator animo;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ProgressHandler.ProgressDiskRepresentation[] progressItems;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ProgressItemUI _currentSelectedProgressItem;

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x1082060", Offset = "0x1082060", VA = "0x1082060")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x1082118", Offset = "0x1082118", VA = "0x1082118")]
	private void Instance_GameHandlerInitialized()
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x1082618", Offset = "0x1082618", VA = "0x1082618")]
	public void CreateWeaponButtons()
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x1081994", Offset = "0x1081994", VA = "0x1081994")]
	public void UpdateShopToItem(ProgressItemUI ui)
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x10829B0", Offset = "0x10829B0", VA = "0x10829B0")]
	public void Buy()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x1082130", Offset = "0x1082130", VA = "0x1082130")]
	public void SetupShop()
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x1082E4C", Offset = "0x1082E4C", VA = "0x1082E4C")]
	public ProgressShopBeastBlood()
	{
	}
}
[Token(Token = "0x2000354")]
public class ProgressShopInsight : MonoBehaviour
{
	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public string npcId;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject progressItemButton;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform progressLayoutGroup;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI txtAmountCurrency;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject categoryPrefab;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Detail Page")]
	public GameObject detailPage;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI txtName;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI txtDesc;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button buyButton;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Image imgItemSprite;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI buyButtonText;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Animator animo;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RectTransform hoverInformation;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject warningInsightUpdate;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private ProgressHandler.ProgressDiskRepresentation[] progressItems;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ProgressItemUI _currentSelectedProgressItem;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool INSIGHT_UPDATE_HAPPENED;

	[Token(Token = "0x600112B")]
	[Address(RVA = "0x1082EFC", Offset = "0x1082EFC", VA = "0x1082EFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0x1082FF8", Offset = "0x1082FF8", VA = "0x1082FF8")]
	private void Instance_GameHandlerInitialized()
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0x10814A8", Offset = "0x10814A8", VA = "0x10814A8")]
	public void UpdateShopToItem(ProgressItemUI ui)
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0x1083B0C", Offset = "0x1083B0C", VA = "0x1083B0C")]
	public void Buy()
	{
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0x1081F94", Offset = "0x1081F94", VA = "0x1081F94")]
	public void ShowHoverInfo(Vector3 pos, string text)
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0x1082FFC", Offset = "0x1082FFC", VA = "0x1082FFC")]
	public void SetupShop()
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0x1083F0C", Offset = "0x1083F0C", VA = "0x1083F0C")]
	public ProgressShopInsight()
	{
	}
}
[Token(Token = "0x2000356")]
public class RunPreparationUI_ButtonSelectWeapon : MonoBehaviour
{
	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI weaponComboName;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image weaponComboImage;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WeaponComboInterpreter.WeaponComboDiskRepresentation _combo;

	[Token(Token = "0x6001136")]
	[Address(RVA = "0x1083FBC", Offset = "0x1083FBC", VA = "0x1083FBC")]
	public void ApplyWeaponInfos(WeaponComboInterpreter.WeaponComboDiskRepresentation combo)
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0x1084200", Offset = "0x1084200", VA = "0x1084200")]
	public void RefreshWeaponInfos()
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0x1084208", Offset = "0x1084208", VA = "0x1084208")]
	public void OnButtonPress()
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0x1084344", Offset = "0x1084344", VA = "0x1084344")]
	private void HighlightButton(Button b, bool highlight)
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0x1084424", Offset = "0x1084424", VA = "0x1084424")]
	public RunPreparationUI_ButtonSelectWeapon()
	{
	}
}
[Token(Token = "0x2000357")]
public class RunStatsUI : MonoBehaviour
{
	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI txt;

	[Token(Token = "0x600113B")]
	[Address(RVA = "0x108442C", Offset = "0x108442C", VA = "0x108442C")]
	private void Start()
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0x10846B0", Offset = "0x10846B0", VA = "0x10846B0")]
	public RunStatsUI()
	{
	}
}
[Token(Token = "0x2000358")]
public class SeerUI : MonoBehaviour
{
	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject challengeEntry;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform layoutGroup;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject challengeDetails;

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Detail Page")]
	public TextMeshProUGUI detailTitle;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI detailDesc;

	[NonSerialized]
	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ChallengeInterpreter.ChallengeDiskRepresentation currentSelectedChallenge;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Weapon Buttons")]
	public GameObject buttonSwordKnife;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject buttonCrossbow;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject buttonUnarmed;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _hasStartedRun;

	[Token(Token = "0x600113D")]
	[Address(RVA = "0x10846B8", Offset = "0x10846B8", VA = "0x10846B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0x1084A58", Offset = "0x1084A58", VA = "0x1084A58")]
	public void SetWeaponCombo(int c)
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0x10846BC", Offset = "0x10846BC", VA = "0x10846BC")]
	private void LoadChallenges()
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x1084B4C", Offset = "0x1084B4C", VA = "0x1084B4C")]
	public void BeginChallengeRun()
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0x1084CC4", Offset = "0x1084CC4", VA = "0x1084CC4")]
	public SeerUI()
	{
	}
}
[Token(Token = "0x2000359")]
public class Settings : MonoBehaviour
{
	[Token(Token = "0x200035B")]
	[CompilerGenerated]
	private sealed class <CheckBhapticsPermissionsAndEnable>d__87 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Settings <>4__this;

		[Token(Token = "0x170001CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001169")]
			[Address(RVA = "0x108A98C", Offset = "0x108A98C", VA = "0x108A98C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600116B")]
			[Address(RVA = "0x108A9D4", Offset = "0x108A9D4", VA = "0x108A9D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0x108A7F8", Offset = "0x108A7F8", VA = "0x108A7F8")]
		[DebuggerHidden]
		public <CheckBhapticsPermissionsAndEnable>d__87(int <>1__state)
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0x108A820", Offset = "0x108A820", VA = "0x108A820", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0x108A824", Offset = "0x108A824", VA = "0x108A824", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0x108A994", Offset = "0x108A994", VA = "0x108A994", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Tabs")]
	public GameObject[] tabs;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button[] buttonTabs;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Configuration")]
	public Button buttonPresetRift;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button buttonPresetVive;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button buttonPresetIndex;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button buttonPresetWMR;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Audio")]
	public AudioMixerGroup masterVolumeGroup;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioMixerGroup sfxVolumeGroup;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioMixerGroup musicVolumeGroup;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Slider sliderMasterVolume;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Slider sliderMusicVolume;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Slider sliderSFXVolume;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[Header("Movement")]
	public Button btnSmoothMovement;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Button btnTeleportMovement;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Button btnMoveLeftController;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Button btnMoveRightController;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Button btnTurningModeOff;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Button btnTurningModeSnapTurn;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Button btnTurningModeSmoothTurn;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Button btnMovementHeadsetDirection;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Button btnMovementControllerDirection;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Button btnSnapTurn20;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Button btnSnapTurn30;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Button btnSnapTurn45;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Button btnSnapTurn60;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Button btnSnapTurn90;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public SettingsSlider sliderSmoothTurnSpeed;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SettingsSlider sliderDeadzoneMin;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Button btnComfortVignetteEnabled;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Button btnComfortVignetteDisabled;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[Header("Combat")]
	public GameObject unarmedWarning;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject noSettingsWarning;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public TextMeshProUGUI txtDominantHand;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Button btnDominantHandLeft;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Button btnDominantHandRight;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public SettingsSlider sliderPrimaryHoldAngle;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public SettingsSlider sliderSecondaryHoldAngle;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public TextMeshProUGUI txtSliderPrimaryHoldAngle;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public TextMeshProUGUI txtSliderSecondaryHoldAngle;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[Header("Graphics")]
	public Button btnDisableShadows;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Button btnEnableShadowsLow;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Button btnEnableShadowsHigh;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[Header("Misc")]
	public Button btnSpectatorCamOff;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Button btnSpectatorCamOn;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Button btnPlayModeStanding;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Button btnPlayModeSeated;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public SettingsSlider sliderSeatedModeOffset;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Button buttonConnectTwitch;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Button buttonControllerVibroEnabled;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Button buttonControllerVibroDisabled;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Button buttonHeartbeatEnabled;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Button buttonHeartbeatDisabled;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Button buttonHapticsBhapticsEnabled;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public Button buttonHapticsBhapticsDisabled;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject bhapticsAndroidSettings;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public Button buttonHapticsOwoEnabled;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Button buttonHapticsOwoDisabled;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public Button speedrunTimerEnabled;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Button speedrunTimerDisabled;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public Button fastRespawnEnabled;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Button fastRespawnDisabled;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public OWOVestHandler owoVestHandler;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float throwingKnifeAngle;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool touchpadPress;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public static bool controllerMovement;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
	public static bool specCam;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string HEADSET_PRESET;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool highGraphics;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public Dictionary<string, string> settings;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private Color btnWhite;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private Color btnGreen;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private bool _askForPermissionsMode;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public GameObject[] disableOnQuest;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private bool _twitchSettingsOpen;

	[Token(Token = "0x6001142")]
	[Address(RVA = "0x1084CCC", Offset = "0x1084CCC", VA = "0x1084CCC")]
	public void SelectTab(int id)
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0x10863B8", Offset = "0x10863B8", VA = "0x10863B8")]
	public WeaponComboInterpreter.WeaponComboDiskRepresentation GetCurrentWeapon()
	{
		return null;
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x1084E94", Offset = "0x1084E94", VA = "0x1084E94")]
	public void RefreshSettingsValues()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0x1086424", Offset = "0x1086424", VA = "0x1086424")]
	public bool IsHeartbeatEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0x10864E8", Offset = "0x10864E8", VA = "0x10864E8")]
	public bool IsFastRespawnEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0x1073944", Offset = "0x1073944", VA = "0x1073944")]
	public string GetDominantHand()
	{
		return null;
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0x1084DE4", Offset = "0x1084DE4", VA = "0x1084DE4")]
	private void HighlightBtn(Button b, bool v)
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0x10865AC", Offset = "0x10865AC", VA = "0x10865AC")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0x1086664", Offset = "0x1086664", VA = "0x1086664")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x1086714", Offset = "0x1086714", VA = "0x1086714")]
	public void SaveSettings()
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0x10867D0", Offset = "0x10867D0", VA = "0x10867D0")]
	public void ToggleConsole()
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0x1086884", Offset = "0x1086884", VA = "0x1086884")]
	public void EnableConsole(bool on)
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0x1086904", Offset = "0x1086904", VA = "0x1086904")]
	public int GetPrimaryWeaponHoldAngle()
	{
		return default(int);
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0x108699C", Offset = "0x108699C", VA = "0x108699C")]
	public int GetSecondaryWeaponHoldAngle()
	{
		return default(int);
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0x1086A34", Offset = "0x1086A34", VA = "0x1086A34")]
	public void ApplySetting(string id)
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0x1087990", Offset = "0x1087990", VA = "0x1087990")]
	[IteratorStateMachine(typeof(<CheckBhapticsPermissionsAndEnable>d__87))]
	public IEnumerator CheckBhapticsPermissionsAndEnable()
	{
		return null;
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0x1087A04", Offset = "0x1087A04", VA = "0x1087A04")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0x1087878", Offset = "0x1087878", VA = "0x1087878")]
	public float GetSeatedOffset()
	{
		return default(float);
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0x1087A98", Offset = "0x1087A98", VA = "0x1087A98")]
	public bool GetShadowsEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0x1087B30", Offset = "0x1087B30", VA = "0x1087B30")]
	public bool IsUsingTeleportMovement()
	{
		return default(bool);
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0x1087BC0", Offset = "0x1087BC0", VA = "0x1087BC0")]
	public void ReloadGame()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0x1087C28", Offset = "0x1087C28", VA = "0x1087C28")]
	private void ToggleSpecCam()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x1087D30", Offset = "0x1087D30", VA = "0x1087D30")]
	public void SetControllerPresetTo(string s)
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x1087EC8", Offset = "0x1087EC8", VA = "0x1087EC8")]
	public void OpenTwitchConnectionSettings()
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x1087ED8", Offset = "0x1087ED8", VA = "0x1087ED8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x10883B4", Offset = "0x10883B4", VA = "0x10883B4")]
	public void ConnectTwitch()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0x1088678", Offset = "0x1088678", VA = "0x1088678")]
	public bool VibrationsOn()
	{
		return default(bool);
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0x1088740", Offset = "0x1088740", VA = "0x1088740")]
	public void InitSettings()
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0x10894E8", Offset = "0x10894E8", VA = "0x10894E8")]
	public void RefreshWeaponSettings()
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0x1087E64", Offset = "0x1087E64", VA = "0x1087E64")]
	public void LoadSettings()
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0x1089694", Offset = "0x1089694", VA = "0x1089694")]
	public Settings()
	{
	}
}
[Token(Token = "0x200035D")]
public class SettingsMod : MonoBehaviour
{
	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform layoutGroup;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject modButton;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject applyChangesButton;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject androidButtonRequestPermission;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform content;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject hoverInformation;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Mod Settings Menu Items")]
	public GameObject modSettingsObject;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject modSettingsLayoutGroup;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject headerPrefab;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject sliderPrefab;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject buttonGroupPrefab;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject buttonPrefab;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color selectedButtonColor;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color unselectedButtonColor;

	[Token(Token = "0x6001172")]
	[Address(RVA = "0x108AB80", Offset = "0x108AB80", VA = "0x108AB80")]
	private void Start()
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0x108ABE8", Offset = "0x108ABE8", VA = "0x108ABE8")]
	public void SetHoverInformation(string s, Vector3 pos)
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0x108ACE0", Offset = "0x108ACE0", VA = "0x108ACE0")]
	public void SetDirty()
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0x108AD00", Offset = "0x108AD00", VA = "0x108AD00")]
	public void OnApplyClick()
	{
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0x108AD74", Offset = "0x108AD74", VA = "0x108AD74")]
	public void SaveModSettings()
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0x108AE24", Offset = "0x108AE24", VA = "0x108AE24")]
	public void CreateModSettingsMenu(ModLoader.Mod _mod)
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0x108BB5C", Offset = "0x108BB5C", VA = "0x108BB5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x108BFC4", Offset = "0x108BFC4", VA = "0x108BFC4")]
	public void RequestPermission()
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0x108C09C", Offset = "0x108C09C", VA = "0x108C09C")]
	public SettingsMod()
	{
	}
}
[Token(Token = "0x2000363")]
public class SettingsModButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI txtModName;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI txtModVersion;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite spriteOn;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite spriteOff;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image isOnImage;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ModLoader.Mod _mod;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SettingsMod _settings;

	[Token(Token = "0x6001189")]
	[Address(RVA = "0x108BE70", Offset = "0x108BE70", VA = "0x108BE70")]
	public void InitModButton(ModLoader.Mod mod, SettingsMod settings)
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0x108C2F8", Offset = "0x108C2F8", VA = "0x108C2F8")]
	public void OnClick()
	{
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0x108C330", Offset = "0x108C330", VA = "0x108C330", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0x108C3B4", Offset = "0x108C3B4", VA = "0x108C3B4", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0x108C414", Offset = "0x108C414", VA = "0x108C414")]
	public SettingsModButton()
	{
	}
}
[Token(Token = "0x2000364")]
public class SettingsSlider : MonoBehaviour
{
	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string settingName;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Settings settings;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI hintValue;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isUnit;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool formatDecimals;

	[Token(Token = "0x600118E")]
	[Address(RVA = "0x108C41C", Offset = "0x108C41C", VA = "0x108C41C")]
	public void SetValueWithoutNotify(float v)
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0x108C498", Offset = "0x108C498", VA = "0x108C498")]
	private void Set(float v)
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0x108C724", Offset = "0x108C724", VA = "0x108C724")]
	public void SetSliderVal(float v)
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0x108C7E8", Offset = "0x108C7E8", VA = "0x108C7E8")]
	public SettingsSlider()
	{
	}
}
[Token(Token = "0x2000365")]
public class UIButtonJournalPageDetal : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI txtTitle;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private JournalInterpreter.JournalPage _page;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UIJournalDetails _jd;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Button _btn;

	[Token(Token = "0x6001192")]
	[Address(RVA = "0x108C7F0", Offset = "0x108C7F0", VA = "0x108C7F0")]
	public void InitButton(JournalInterpreter.JournalPage page, UIJournalDetails jd)
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0x108C968", Offset = "0x108C968", VA = "0x108C968", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0x108CA04", Offset = "0x108CA04", VA = "0x108CA04", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0x108CA58", Offset = "0x108CA58", VA = "0x108CA58")]
	public UIButtonJournalPageDetal()
	{
	}
}
[Token(Token = "0x2000366")]
public class UIButtonJournalSelection : MonoBehaviour
{
	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI txtTitle;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI txtAmountFound;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string belongsTo;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIJournalPages uiJournalPages;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Button btn;

	[Token(Token = "0x6001196")]
	[Address(RVA = "0x108CA60", Offset = "0x108CA60", VA = "0x108CA60")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0x108CAC0", Offset = "0x108CAC0", VA = "0x108CAC0")]
	public void Refresh()
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0x108CCB4", Offset = "0x108CCB4", VA = "0x108CCB4")]
	private bool IsJournalUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0x108CDE8", Offset = "0x108CDE8", VA = "0x108CDE8")]
	public void OnClick()
	{
	}

	[Token(Token = "0x600119A")]
	[Address(RVA = "0x108CE64", Offset = "0x108CE64", VA = "0x108CE64")]
	public UIButtonJournalSelection()
	{
	}
}
[Token(Token = "0x2000367")]
public class UIJournalDetails : MonoBehaviour
{
	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("General")]
	public GameObject prefabPage;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform layoutCollectedPages;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI txtNPCDescription;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI txtNPCName;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Details")]
	public GameObject detailsPage;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI detailsText;

	[Token(Token = "0x600119B")]
	[Address(RVA = "0x108CE6C", Offset = "0x108CE6C", VA = "0x108CE6C")]
	public void InitJournalDetailsPage(string belongsTo)
	{
	}

	[Token(Token = "0x600119C")]
	[Address(RVA = "0x108C9B8", Offset = "0x108C9B8", VA = "0x108C9B8")]
	public void ShowJournalPageDetailed(bool show, string text = "")
	{
	}

	[Token(Token = "0x600119D")]
	[Address(RVA = "0x108D444", Offset = "0x108D444", VA = "0x108D444")]
	public UIJournalDetails()
	{
	}
}
[Token(Token = "0x200036A")]
public class UIJournalPages : MonoBehaviour
{
	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIJournalDetails journalDetails;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject behindObjects;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator _animo;

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x108D500", Offset = "0x108D500", VA = "0x108D500")]
	private void Start()
	{
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x108CE08", Offset = "0x108CE08", VA = "0x108CE08")]
	public void DisplayJournalDetails(string belongsTo)
	{
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x108D558", Offset = "0x108D558", VA = "0x108D558")]
	public UIJournalPages()
	{
	}
}
[Token(Token = "0x200036B")]
public class UIMainMenu : MonoBehaviour
{
	[Token(Token = "0x200036C")]
	[CompilerGenerated]
	private sealed class <DisablePointersForGood>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x170001D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60011B6")]
			[Address(RVA = "0x108EF88", Offset = "0x108EF88", VA = "0x108EF88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60011B8")]
			[Address(RVA = "0x108EFD0", Offset = "0x108EFD0", VA = "0x108EFD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x108ECF8", Offset = "0x108ECF8", VA = "0x108ECF8")]
		[DebuggerHidden]
		public <DisablePointersForGood>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x108EE9C", Offset = "0x108EE9C", VA = "0x108EE9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x108EEA0", Offset = "0x108EEA0", VA = "0x108EEA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x108EF90", Offset = "0x108EF90", VA = "0x108EF90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Settings settingsObject;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool inMainMenu;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject continueLastRunButton;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI startRunButtonText;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject firstTimeSetup;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject moddingErrorsObj;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI versionCode;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject introductionScreen;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject cybershoesDetected;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject thankYouQuest;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 _lastSavedPosition;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 _offsetOfPlayerInCameraRig;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _pointersEnabled;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _lastFaceDir;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _enteredOnceThisSession;

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x108D560", Offset = "0x108D560", VA = "0x108D560")]
	public void QuitGame()
	{
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x108D568", Offset = "0x108D568", VA = "0x108D568")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x108D674", Offset = "0x108D674", VA = "0x108D674")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x108D780", Offset = "0x108D780", VA = "0x108D780")]
	private void RecenterPico()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x108D860", Offset = "0x108D860", VA = "0x108D860")]
	public void OpenMainMenu()
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x108E038", Offset = "0x108E038", VA = "0x108E038")]
	public void DisableAndFixBrokenMods()
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x108E1F0", Offset = "0x108E1F0", VA = "0x108E1F0")]
	public void ContinueLastRun()
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x108E2E0", Offset = "0x108E2E0", VA = "0x108E2E0")]
	public void CloseMainMenu()
	{
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x108E994", Offset = "0x108E994", VA = "0x108E994")]
	private void CheckUnlockMessages()
	{
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x108E8D4", Offset = "0x108E8D4", VA = "0x108E8D4")]
	[IteratorStateMachine(typeof(<DisablePointersForGood>d__24))]
	private IEnumerator DisablePointersForGood()
	{
		return null;
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x108ED20", Offset = "0x108ED20", VA = "0x108ED20")]
	private void Update()
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0x108EE6C", Offset = "0x108EE6C", VA = "0x108EE6C")]
	public UIMainMenu()
	{
	}
}
[Token(Token = "0x200036E")]
public class UIMainMenuFirstTimeSetup : MonoBehaviour
{
	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button btnDominantLeft;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button btnDominantRight;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider sliderMasterVolume;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button btnSmoothMovement;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button btnTeleportMovement;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button btnMoveLeftController;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button btnMoveRightController;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject mainMenuScaler;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Settings settingsObject;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color btnWhite;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color btnGreen;

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x108DD84", Offset = "0x108DD84", VA = "0x108DD84")]
	public void SetupFirstTimeSetup()
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x108F1D4", Offset = "0x108F1D4", VA = "0x108F1D4")]
	public void OnFinishSetup()
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x108F124", Offset = "0x108F124", VA = "0x108F124")]
	private void HighlightBtn(Button b, bool v)
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x108F284", Offset = "0x108F284", VA = "0x108F284")]
	public UIMainMenuFirstTimeSetup()
	{
	}
}
[Token(Token = "0x200036F")]
public class UIPickupImage : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform hoverInfos;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite[] amount_imgs;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image img;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ItemInterpreter.PickupDiskRepresentation correspondingUpgrade;

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x108F2A0", Offset = "0x108F2A0", VA = "0x108F2A0")]
	public void UpdateNumbers()
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x108F320", Offset = "0x108F320", VA = "0x108F320")]
	public void SetAmount(int amount)
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0x108F3B0", Offset = "0x108F3B0", VA = "0x108F3B0", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x108F444", Offset = "0x108F444", VA = "0x108F444", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x108F868", Offset = "0x108F868", VA = "0x108F868")]
	public UIPickupImage()
	{
	}
}
[Token(Token = "0x2000370")]
public class UIPrepareRun : MonoBehaviour
{
	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField seedInput;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject btnContinueRun;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform hoverInformation;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject keyboard;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform runModifiersLayout;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject modifierButtonPrefab;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject debugSettings;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI[] txtDifficultyMultipliers;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform weaponSelectionGroup;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject buttonSelectWeaponPrefab;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Button buttonNormalDifficulty;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button buttonHardDifficulty;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject buttonHardDifficultyCustomize;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _isHardSelected;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool _pressedStart;

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x108F870", Offset = "0x108F870", VA = "0x108F870")]
	private void Start()
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x108FB54", Offset = "0x108FB54", VA = "0x108FB54")]
	public void UpdateDifficultyMultipliers()
	{
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x108FC7C", Offset = "0x108FC7C", VA = "0x108FC7C")]
	private void Instance_GameHandlerInitialized()
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x1090230", Offset = "0x1090230", VA = "0x1090230")]
	public void SelectButton(int id)
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x1090398", Offset = "0x1090398", VA = "0x1090398")]
	private void HighlightButton(Button b, bool highlight)
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x1090478", Offset = "0x1090478", VA = "0x1090478")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x10905CC", Offset = "0x10905CC", VA = "0x10905CC")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x109068C", Offset = "0x109068C", VA = "0x109068C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x109075C", Offset = "0x109075C", VA = "0x109075C")]
	public void AddKeyToSeed(string key)
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x109078C", Offset = "0x109078C", VA = "0x109078C")]
	public void DeleteSeed()
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x10907E0", Offset = "0x10907E0", VA = "0x10907E0")]
	public void ShowHoverInfo(Vector3 pos, string text)
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x10908C4", Offset = "0x10908C4", VA = "0x10908C4")]
	public void OnContinueClick()
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x10909A0", Offset = "0x10909A0", VA = "0x10909A0")]
	public void DebugUpdateStart(int floor)
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x1090B58", Offset = "0x1090B58", VA = "0x1090B58")]
	public void StartRun(int _runType, bool _hardMode)
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x1090E3C", Offset = "0x1090E3C", VA = "0x1090E3C")]
	public void OnStartClick(int _runType)
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x1090E44", Offset = "0x1090E44", VA = "0x1090E44")]
	public UIPrepareRun()
	{
	}
}
[Token(Token = "0x2000374")]
public class UIRunModifierButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RunModifierInterpreter.RunModifierDiskRepresentation modifierDiskRepresentation;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image bgImg;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image difficultyFilling;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI txtModifierName;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI txtModifierValueHint;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UIPrepareRun _uiPrepareRun;

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0x1091B1C", Offset = "0x1091B1C", VA = "0x1091B1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0x108FAD8", Offset = "0x108FAD8", VA = "0x108FAD8")]
	public void SetupButton(UIPrepareRun prepRun, RunModifierInterpreter.RunModifierDiskRepresentation repre)
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0x1091BFC", Offset = "0x1091BFC", VA = "0x1091BFC")]
	public void IncreaseDifficulty()
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0x1091B54", Offset = "0x1091B54", VA = "0x1091B54")]
	private void UpdateValueHint()
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0x1091BA8", Offset = "0x1091BA8", VA = "0x1091BA8")]
	private void UpdateFilling()
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x1091C2C", Offset = "0x1091C2C", VA = "0x1091C2C")]
	public void ReduceDifficulty()
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0x1091C5C", Offset = "0x1091C5C", VA = "0x1091C5C", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x1091CBC", Offset = "0x1091CBC", VA = "0x1091CBC", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x1091D04", Offset = "0x1091D04", VA = "0x1091D04")]
	public UIRunModifierButton()
	{
	}
}
[Token(Token = "0x2000375")]
public class UIStatusEffect : MonoBehaviour
{
	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string nameOfEffect;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI txtDesc;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _lastTimerVal;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _timer;

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x1091D0C", Offset = "0x1091D0C", VA = "0x1091D0C")]
	public void ActivateEffect(float time)
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0x1091D34", Offset = "0x1091D34", VA = "0x1091D34")]
	public void DeactivateEffect()
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0x1091D58", Offset = "0x1091D58", VA = "0x1091D58")]
	private void Update()
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x1091E74", Offset = "0x1091E74", VA = "0x1091E74")]
	public UIStatusEffect()
	{
	}
}
[Token(Token = "0x2000376")]
public class UI_HP : MonoBehaviour
{
	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite spriteHPFull;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite spriteHPHalf;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite spriteHPEmpty;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite spriteHPEtherealFull;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite spriteHPEtherealHalf;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject hpImg;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image[] imgs;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private HorizontalLayoutGroup _hlg;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _currentMaxHP;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int _currentEtherealHearts;

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0x1091E7C", Offset = "0x1091E7C", VA = "0x1091E7C")]
	private void Start()
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x1091ED4", Offset = "0x1091ED4", VA = "0x1091ED4")]
	private void Update()
	{
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x10924FC", Offset = "0x10924FC", VA = "0x10924FC")]
	public UI_HP()
	{
	}
}
[Token(Token = "0x2000377")]
public class VibrateOnHighlight : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler
{
	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button btn;

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x109250C", Offset = "0x109250C", VA = "0x109250C")]
	public void Start()
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x1092680", Offset = "0x1092680", VA = "0x1092680", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x10928B4", Offset = "0x10928B4", VA = "0x10928B4")]
	public VibrateOnHighlight()
	{
	}
}
[Token(Token = "0x2000379")]
public class WeaponSelectionUI : MonoBehaviour
{
	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject amountBeastBlood;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button[] augmentButtons;

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x10929F4", Offset = "0x10929F4", VA = "0x10929F4")]
	private void Start()
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x1092B40", Offset = "0x1092B40", VA = "0x1092B40")]
	public WeaponSelectionUI()
	{
	}
}
[Token(Token = "0x200037A")]
public class WonRunUI : MonoBehaviour
{
	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public TextMeshProUGUI txtInsightGained;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI txtNewJournalPages;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI txtNewMilestones;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI txtFlavorText;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI txtFlavorText2;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI txtNewItems;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI txtBeastBloodGained;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI txtEnemiesKilled;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI txtFloorsCompleted;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI txtMoneySpent;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI txtDifficultyMultiplier;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button endRunButton;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Animator animo;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int triggersPressed;

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x1092B48", Offset = "0x1092B48", VA = "0x1092B48")]
	public void Start()
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x10937F8", Offset = "0x10937F8", VA = "0x10937F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x1093904", Offset = "0x1093904", VA = "0x1093904")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x1093A10", Offset = "0x1093A10", VA = "0x1093A10")]
	private void RecenterPico()
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x1093AF0", Offset = "0x1093AF0", VA = "0x1093AF0")]
	private void Trigger_canceled(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x1093B04", Offset = "0x1093B04", VA = "0x1093B04")]
	private void Trigger_performed(InputAction.CallbackContext obj)
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x1093B14", Offset = "0x1093B14", VA = "0x1093B14")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x1093C9C", Offset = "0x1093C9C", VA = "0x1093C9C")]
	public void EndRun()
	{
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x1093DA4", Offset = "0x1093DA4", VA = "0x1093DA4")]
	public WonRunUI()
	{
	}
}
[Token(Token = "0x200037C")]
public class WorldMapUI : MonoBehaviour
{
	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform hoverInformation;

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x1093F1C", Offset = "0x1093F1C", VA = "0x1093F1C")]
	public void ShowHoverInfo(Vector3 pos, string text)
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x1093FE0", Offset = "0x1093FE0", VA = "0x1093FE0")]
	public WorldMapUI()
	{
	}
}
[Token(Token = "0x200037D")]
public class WorldMessagePopup : MonoBehaviour
{
	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro tmPro;

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x1093FE8", Offset = "0x1093FE8", VA = "0x1093FE8")]
	public void InitPopup(string text, Vector3 position, Vector3 forward, float time, float popupSpeed = 6f)
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0x1094160", Offset = "0x1094160", VA = "0x1094160")]
	private void Update()
	{
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0x1094460", Offset = "0x1094460", VA = "0x1094460")]
	public WorldMessagePopup()
	{
	}
}
[Token(Token = "0x2000380")]
public static class UnityGraphicsBullshit
{
	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FieldInfo MainLightCastShadows_FieldInfo;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static FieldInfo AdditionalLightCastShadows_FieldInfo;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static FieldInfo MainLightShadowmapResolution_FieldInfo;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static FieldInfo AdditionalLightShadowmapResolution_FieldInfo;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static FieldInfo Cascade2Split_FieldInfo;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static FieldInfo Cascade4Split_FieldInfo;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static FieldInfo SoftShadowsEnabled_FieldInfo;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static FieldInfo AdditionalLightShadowResolutionTierLow_FieldInfo;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static FieldInfo AdditionalLightShadowResolutionTierMed_FieldInfo;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static FieldInfo AdditionalLightShadowResolutionTierHigh_FieldInfo;

	[Token(Token = "0x170001DC")]
	public static int AdditionLightShadowResolutionTierLow
	{
		[Token(Token = "0x600121B")]
		[Address(RVA = "0x1094D44", Offset = "0x1094D44", VA = "0x1094D44")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600121C")]
		[Address(RVA = "0x1094E00", Offset = "0x1094E00", VA = "0x1094E00")]
		set
		{
		}
	}

	[Token(Token = "0x170001DD")]
	public static int AdditionLightShadowResolutionTierMed
	{
		[Token(Token = "0x600121D")]
		[Address(RVA = "0x1094EB0", Offset = "0x1094EB0", VA = "0x1094EB0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600121E")]
		[Address(RVA = "0x1094F6C", Offset = "0x1094F6C", VA = "0x1094F6C")]
		set
		{
		}
	}

	[Token(Token = "0x170001DE")]
	public static int AdditionLightShadowResolutionTierHigh
	{
		[Token(Token = "0x600121F")]
		[Address(RVA = "0x109501C", Offset = "0x109501C", VA = "0x109501C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001220")]
		[Address(RVA = "0x10950D8", Offset = "0x10950D8", VA = "0x10950D8")]
		set
		{
		}
	}

	[Token(Token = "0x170001DF")]
	public static bool MainLightCastShadows
	{
		[Token(Token = "0x6001222")]
		[Address(RVA = "0x10951FC", Offset = "0x10951FC", VA = "0x10951FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001223")]
		[Address(RVA = "0x10952B8", Offset = "0x10952B8", VA = "0x10952B8")]
		set
		{
		}
	}

	[Token(Token = "0x170001E0")]
	public static bool AdditionalLightCastShadows
	{
		[Token(Token = "0x6001224")]
		[Address(RVA = "0x1095368", Offset = "0x1095368", VA = "0x1095368")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001225")]
		[Address(RVA = "0x1095424", Offset = "0x1095424", VA = "0x1095424")]
		set
		{
		}
	}

	[Token(Token = "0x170001E1")]
	public static UnityEngine.Rendering.Universal.ShadowResolution MainLightShadowResolution
	{
		[Token(Token = "0x6001226")]
		[Address(RVA = "0x10954D4", Offset = "0x10954D4", VA = "0x10954D4")]
		get
		{
			return default(UnityEngine.Rendering.Universal.ShadowResolution);
		}
		[Token(Token = "0x6001227")]
		[Address(RVA = "0x1095590", Offset = "0x1095590", VA = "0x1095590")]
		set
		{
		}
	}

	[Token(Token = "0x170001E2")]
	public static UnityEngine.Rendering.Universal.ShadowResolution AdditionalLightShadowResolution
	{
		[Token(Token = "0x6001228")]
		[Address(RVA = "0x1095640", Offset = "0x1095640", VA = "0x1095640")]
		get
		{
			return default(UnityEngine.Rendering.Universal.ShadowResolution);
		}
		[Token(Token = "0x6001229")]
		[Address(RVA = "0x10956FC", Offset = "0x10956FC", VA = "0x10956FC")]
		set
		{
		}
	}

	[Token(Token = "0x170001E3")]
	public static float Cascade2Split
	{
		[Token(Token = "0x600122A")]
		[Address(RVA = "0x10957AC", Offset = "0x10957AC", VA = "0x10957AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600122B")]
		[Address(RVA = "0x1095868", Offset = "0x1095868", VA = "0x1095868")]
		set
		{
		}
	}

	[Token(Token = "0x170001E4")]
	public static Vector3 Cascade4Split
	{
		[Token(Token = "0x600122C")]
		[Address(RVA = "0x1095918", Offset = "0x1095918", VA = "0x1095918")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600122D")]
		[Address(RVA = "0x10959D8", Offset = "0x10959D8", VA = "0x10959D8")]
		set
		{
		}
	}

	[Token(Token = "0x170001E5")]
	public static bool SoftShadowsEnabled
	{
		[Token(Token = "0x600122E")]
		[Address(RVA = "0x1095AA4", Offset = "0x1095AA4", VA = "0x1095AA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600122F")]
		[Address(RVA = "0x1095B60", Offset = "0x1095B60", VA = "0x1095B60")]
		set
		{
		}
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0x10949C8", Offset = "0x10949C8", VA = "0x10949C8")]
	static UnityGraphicsBullshit()
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x1095188", Offset = "0x1095188", VA = "0x1095188")]
	public static void SetAdditionalLightShadowResolutionTiers(int low, int med, int high)
	{
	}
}
[Serializable]
[Token(Token = "0x2000381")]
public class ADVRTrackedPoseDriver : MonoBehaviour, ISerializationCallbackReceiver
{
	[Token(Token = "0x2000382")]
	public enum TrackingType
	{
		[Token(Token = "0x40011D2")]
		RotationAndPosition,
		[Token(Token = "0x40011D3")]
		RotationOnly,
		[Token(Token = "0x40011D4")]
		PositionOnly
	}

	[Token(Token = "0x2000383")]
	public enum UpdateType
	{
		[Token(Token = "0x40011D6")]
		UpdateAndBeforeRender,
		[Token(Token = "0x40011D7")]
		Update,
		[Token(Token = "0x40011D8")]
		BeforeRender
	}

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TrackingType m_TrackingType;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private UpdateType m_UpdateType;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InputActionProperty m_PositionInput;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private InputActionProperty m_RotationInput;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 m_CurrentPosition;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion m_CurrentRotation;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool m_RotationBound;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool m_PositionBound;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	[SerializeField]
	[Obsolete]
	private InputAction m_PositionAction;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	[SerializeField]
	[Obsolete]
	private InputAction m_RotationAction;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	[SerializeField]
	private bool m_HasMigratedActions;

	[Token(Token = "0x170001E6")]
	public TrackingType trackingType
	{
		[Token(Token = "0x6001230")]
		[Address(RVA = "0x1095C10", Offset = "0x1095C10", VA = "0x1095C10")]
		get
		{
			return default(TrackingType);
		}
		[Token(Token = "0x6001231")]
		[Address(RVA = "0x1095C18", Offset = "0x1095C18", VA = "0x1095C18")]
		set
		{
		}
	}

	[Token(Token = "0x170001E7")]
	public UpdateType updateType
	{
		[Token(Token = "0x6001232")]
		[Address(RVA = "0x1095C20", Offset = "0x1095C20", VA = "0x1095C20")]
		get
		{
			return default(UpdateType);
		}
		[Token(Token = "0x6001233")]
		[Address(RVA = "0x1095C28", Offset = "0x1095C28", VA = "0x1095C28")]
		set
		{
		}
	}

	[Token(Token = "0x170001E8")]
	public InputActionProperty positionInput
	{
		[Token(Token = "0x6001234")]
		[Address(RVA = "0x1095C30", Offset = "0x1095C30", VA = "0x1095C30")]
		get
		{
			return default(InputActionProperty);
		}
		[Token(Token = "0x6001235")]
		[Address(RVA = "0x1095C44", Offset = "0x1095C44", VA = "0x1095C44")]
		set
		{
		}
	}

	[Token(Token = "0x170001E9")]
	public InputActionProperty rotationInput
	{
		[Token(Token = "0x6001236")]
		[Address(RVA = "0x1095FB4", Offset = "0x1095FB4", VA = "0x1095FB4")]
		get
		{
			return default(InputActionProperty);
		}
		[Token(Token = "0x6001237")]
		[Address(RVA = "0x1095FC8", Offset = "0x1095FC8", VA = "0x1095FC8")]
		set
		{
		}
	}

	[Token(Token = "0x170001EA")]
	public InputAction positionAction
	{
		[Token(Token = "0x600124C")]
		[Address(RVA = "0x1096814", Offset = "0x1096814", VA = "0x1096814")]
		get
		{
			return null;
		}
		[Token(Token = "0x600124D")]
		[Address(RVA = "0x1096820", Offset = "0x1096820", VA = "0x1096820")]
		set
		{
		}
	}

	[Token(Token = "0x170001EB")]
	public InputAction rotationAction
	{
		[Token(Token = "0x600124E")]
		[Address(RVA = "0x1096868", Offset = "0x1096868", VA = "0x1096868")]
		get
		{
			return null;
		}
		[Token(Token = "0x600124F")]
		[Address(RVA = "0x1096874", Offset = "0x1096874", VA = "0x1096874")]
		set
		{
		}
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x1096338", Offset = "0x1096338", VA = "0x1096338")]
	private void BindActions()
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x1095E0C", Offset = "0x1095E0C", VA = "0x1095E0C")]
	private void BindPosition()
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0x1096190", Offset = "0x1096190", VA = "0x1096190")]
	private void BindRotation()
	{
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0x1096350", Offset = "0x1096350", VA = "0x1096350")]
	private void UnbindActions()
	{
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0x1095CBC", Offset = "0x1095CBC", VA = "0x1095CBC")]
	private void UnbindPosition()
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0x1096040", Offset = "0x1096040", VA = "0x1096040")]
	private void UnbindRotation()
	{
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0x1096368", Offset = "0x1096368", VA = "0x1096368")]
	private void OnPositionPerformed(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0x10963C8", Offset = "0x10963C8", VA = "0x10963C8")]
	private void OnPositionCanceled(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0x10963CC", Offset = "0x10963CC", VA = "0x10963CC")]
	private void OnRotationPerformed(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0x109642C", Offset = "0x109642C", VA = "0x109642C")]
	private void OnRotationCanceled(InputAction.CallbackContext context)
	{
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0x1096430", Offset = "0x1096430", VA = "0x1096430", Slot = "6")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0x1096434", Offset = "0x1096434", VA = "0x1096434")]
	protected void OnEnable()
	{
	}

	[Token(Token = "0x6001244")]
	[Address(RVA = "0x10964E8", Offset = "0x10964E8", VA = "0x10964E8")]
	protected void OnDisable()
	{
	}

	[Token(Token = "0x6001245")]
	[Address(RVA = "0x109659C", Offset = "0x109659C", VA = "0x109659C", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6001246")]
	[Address(RVA = "0x10965A0", Offset = "0x10965A0", VA = "0x10965A0")]
	protected void UpdateCallback()
	{
	}

	[Token(Token = "0x6001247")]
	[Address(RVA = "0x1096608", Offset = "0x1096608", VA = "0x1096608", Slot = "8")]
	protected virtual void OnUpdate()
	{
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0x1096624", Offset = "0x1096624", VA = "0x1096624", Slot = "9")]
	protected virtual void OnBeforeRender()
	{
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0x1096644", Offset = "0x1096644", VA = "0x1096644", Slot = "10")]
	protected virtual void SetLocalTransform(Vector3 newPosition, Quaternion newRotation)
	{
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0x1096740", Offset = "0x1096740", VA = "0x1096740")]
	private bool HasStereoCamera()
	{
		return default(bool);
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0x10967F8", Offset = "0x10967F8", VA = "0x10967F8", Slot = "11")]
	protected virtual void PerformUpdate()
	{
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0x10968BC", Offset = "0x10968BC", VA = "0x10968BC")]
	protected void Reset()
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0x10968C8", Offset = "0x10968C8", VA = "0x10968C8", Slot = "4")]
	private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0x10968CC", Offset = "0x10968CC", VA = "0x10968CC", Slot = "5")]
	private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0x109695C", Offset = "0x109695C", VA = "0x109695C")]
	public ADVRTrackedPoseDriver()
	{
	}
}
[Token(Token = "0x2000384")]
public class AnimationEventListener : MonoBehaviour
{
	[Token(Token = "0x2000385")]
	public delegate void AnimationEvent(string type);

	[Token(Token = "0x14000024")]
	public event AnimationEvent OnAnimationEvent
	{
		[Token(Token = "0x6001254")]
		[Address(RVA = "0x10969F4", Offset = "0x10969F4", VA = "0x10969F4")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6001255")]
		[Address(RVA = "0x1096A90", Offset = "0x1096A90", VA = "0x1096A90")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0x1096B2C", Offset = "0x1096B2C", VA = "0x1096B2C")]
	public void DoEvent(string s)
	{
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0x1096B48", Offset = "0x1096B48", VA = "0x1096B48")]
	public AnimationEventListener()
	{
	}
}
[Token(Token = "0x2000386")]
public class ChanceToReroll : MonoBehaviour
{
	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float probability;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rerollInto;

	[Token(Token = "0x600125C")]
	[Address(RVA = "0x1096C74", Offset = "0x1096C74", VA = "0x1096C74")]
	private void Start()
	{
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0x1096DC8", Offset = "0x1096DC8", VA = "0x1096DC8")]
	public ChanceToReroll()
	{
	}
}
[Token(Token = "0x2000387")]
public class ChinaRegulation : MonoBehaviour
{
	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destroyOnStart;

	[Token(Token = "0x600125E")]
	[Address(RVA = "0x1096DD0", Offset = "0x1096DD0", VA = "0x1096DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0x1096DD4", Offset = "0x1096DD4", VA = "0x1096DD4")]
	public ChinaRegulation()
	{
	}
}
[Token(Token = "0x2000388")]
[RequireComponent(typeof(Rigidbody))]
[RequireComponent(typeof(SphereCollider))]
public class ClimbingFadeHelper : MonoBehaviour
{
	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Collision Settings")]
	public float targetDirectionMultiplier;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Fade Settings")]
	public float fadeTime;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float currentFadeTime;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x6001260")]
	[Address(RVA = "0x1096DDC", Offset = "0x1096DDC", VA = "0x1096DDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0x1096E34", Offset = "0x1096E34", VA = "0x1096E34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001262")]
	[Address(RVA = "0x1096FAC", Offset = "0x1096FAC", VA = "0x1096FAC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001263")]
	[Address(RVA = "0x1096FB0", Offset = "0x1096FB0", VA = "0x1096FB0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001264")]
	[Address(RVA = "0x10970B4", Offset = "0x10970B4", VA = "0x10970B4")]
	private void OnCollisionEnter()
	{
	}

	[Token(Token = "0x6001265")]
	[Address(RVA = "0x10970C0", Offset = "0x10970C0", VA = "0x10970C0")]
	private void OnCollisionStay()
	{
	}

	[Token(Token = "0x6001266")]
	[Address(RVA = "0x10970CC", Offset = "0x10970CC", VA = "0x10970CC")]
	private void OnCollisionExit()
	{
	}

	[Token(Token = "0x6001267")]
	[Address(RVA = "0x10970D0", Offset = "0x10970D0", VA = "0x10970D0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001268")]
	[Address(RVA = "0x1096E4C", Offset = "0x1096E4C", VA = "0x1096E4C")]
	public void RemoveFadeEffect()
	{
	}

	[Token(Token = "0x6001269")]
	[Address(RVA = "0x1096EEC", Offset = "0x1096EEC", VA = "0x1096EEC")]
	public void ResetPosition()
	{
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0x109718C", Offset = "0x109718C", VA = "0x109718C")]
	public ClimbingFadeHelper()
	{
	}
}
[Token(Token = "0x2000389")]
[RequireComponent(typeof(CapsuleCollider))]
public class ClimbingWallHelper : MonoBehaviour
{
	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Collision Settings")]
	public float targetDirectionMultiplier;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody _rb;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CapsuleCollider _bodyCollider;

	[Token(Token = "0x600126B")]
	[Address(RVA = "0x10971A0", Offset = "0x10971A0", VA = "0x10971A0")]
	private void Start()
	{
	}

	[Token(Token = "0x600126C")]
	[Address(RVA = "0x1097230", Offset = "0x1097230", VA = "0x1097230")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0x10972F0", Offset = "0x10972F0", VA = "0x10972F0")]
	public void UpdateCapsuleCollider(float height, float centerY)
	{
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0x1097384", Offset = "0x1097384", VA = "0x1097384")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x1097488", Offset = "0x1097488", VA = "0x1097488")]
	public bool IsOutsideBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0x10975B0", Offset = "0x10975B0", VA = "0x10975B0")]
	public ClimbingWallHelper()
	{
	}
}
[Token(Token = "0x200038A")]
public class DataCoroutine<R>
{
	[Token(Token = "0x200038B")]
	[CompilerGenerated]
	private sealed class <Run>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private object <>2__current;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public DataCoroutine<R> <>4__this;

		[Token(Token = "0x170001ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001278")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600127A")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001275")]
		[DebuggerHidden]
		public <Run>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001276")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001277")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001279")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public R result;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private IEnumerator target;

	[Token(Token = "0x170001EC")]
	public UnityEngine.Coroutine coroutine
	{
		[Token(Token = "0x6001271")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6001272")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6001273")]
	public DataCoroutine(MonoBehaviour owner, IEnumerator target)
	{
	}

	[Token(Token = "0x6001274")]
	[IteratorStateMachine(typeof(DataCoroutine<>.<Run>d__7))]
	private IEnumerator Run()
	{
		return null;
	}
}
[Token(Token = "0x200038C")]
public class DebugGamestuffUI : MonoBehaviour
{
	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI currentHandText;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI currentHandValues;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerHand currentHand;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameHandler _g;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int mode;

	[Token(Token = "0x170001EF")]
	private Transform CurrentTransform
	{
		[Token(Token = "0x600127D")]
		[Address(RVA = "0x10977BC", Offset = "0x10977BC", VA = "0x10977BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0x10975C0", Offset = "0x10975C0", VA = "0x10975C0")]
	private void Start()
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0x109762C", Offset = "0x109762C", VA = "0x109762C")]
	public void ToggleHand()
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0x10977F8", Offset = "0x10977F8", VA = "0x10977F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0x1097D3C", Offset = "0x1097D3C", VA = "0x1097D3C")]
	public void IncreaseHandRotX(float multiplier)
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0x1097D74", Offset = "0x1097D74", VA = "0x1097D74")]
	public void IncreaseHandRotY(float multiplier)
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0x1097DAC", Offset = "0x1097DAC", VA = "0x1097DAC")]
	public void IncreaseHandRotZ(float multiplier)
	{
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0x1097DE4", Offset = "0x1097DE4", VA = "0x1097DE4")]
	public void IncreaseHandPosX(float multiplier)
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0x1097E24", Offset = "0x1097E24", VA = "0x1097E24")]
	public void IncreaseHandPosY(float multiplier)
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0x1097E64", Offset = "0x1097E64", VA = "0x1097E64")]
	public void IncreaseHandPosZ(float multiplier)
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x1097EA4", Offset = "0x1097EA4", VA = "0x1097EA4")]
	public DebugGamestuffUI()
	{
	}
}
[Token(Token = "0x200038D")]
public class DebugMenuInput : IInputActionCollection2, IInputActionCollection, IEnumerable<InputAction>, IEnumerable, IDisposable
{
	[Token(Token = "0x200038E")]
	public struct ConsoleOverlayActions
	{
		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private DebugMenuInput m_Wrapper;

		[Token(Token = "0x170001F6")]
		public InputAction OpenMenu
		{
			[Token(Token = "0x6001298")]
			[Address(RVA = "0x1098268", Offset = "0x1098268", VA = "0x1098268")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		public bool enabled
		{
			[Token(Token = "0x600129C")]
			[Address(RVA = "0x10982E8", Offset = "0x10982E8", VA = "0x10982E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x1098260", Offset = "0x1098260", VA = "0x1098260")]
		public ConsoleOverlayActions(DebugMenuInput wrapper)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x1098284", Offset = "0x1098284", VA = "0x1098284")]
		public InputActionMap Get()
		{
			return null;
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x10982A0", Offset = "0x10982A0", VA = "0x10982A0")]
		public void Enable()
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x10982C4", Offset = "0x10982C4", VA = "0x10982C4")]
		public void Disable()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x109830C", Offset = "0x109830C", VA = "0x109830C")]
		public static implicit operator InputActionMap(ConsoleOverlayActions set)
		{
			return null;
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x1098324", Offset = "0x1098324", VA = "0x1098324")]
		public void SetCallbacks(IConsoleOverlayActions instance)
		{
		}
	}

	[Token(Token = "0x200038F")]
	public interface IConsoleOverlayActions
	{
		[Token(Token = "0x600129F")]
		void OnOpenMenu(InputAction.CallbackContext context);
	}

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly InputActionMap m_ConsoleOverlay;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IConsoleOverlayActions m_ConsoleOverlayActionsCallbackInterface;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly InputAction m_ConsoleOverlay_OpenMenu;

	[Token(Token = "0x170001F0")]
	public InputActionAsset asset
	{
		[Token(Token = "0x6001286")]
		[Address(RVA = "0x1097EB4", Offset = "0x1097EB4", VA = "0x1097EB4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F1")]
	public InputBinding? bindingMask
	{
		[Token(Token = "0x6001289")]
		[Address(RVA = "0x1098000", Offset = "0x1098000", VA = "0x1098000", Slot = "7")]
		get
		{
			return null;
		}
		[Token(Token = "0x600128A")]
		[Address(RVA = "0x1098028", Offset = "0x1098028", VA = "0x1098028", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x170001F2")]
	public ReadOnlyArray<InputDevice>? devices
	{
		[Token(Token = "0x600128B")]
		[Address(RVA = "0x1098074", Offset = "0x1098074", VA = "0x1098074", Slot = "9")]
		get
		{
			return null;
		}
		[Token(Token = "0x600128C")]
		[Address(RVA = "0x10980B4", Offset = "0x10980B4", VA = "0x10980B4", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x170001F3")]
	public ReadOnlyArray<InputControlScheme> controlSchemes
	{
		[Token(Token = "0x600128D")]
		[Address(RVA = "0x1098100", Offset = "0x1098100", VA = "0x1098100", Slot = "11")]
		get
		{
			return default(ReadOnlyArray<InputControlScheme>);
		}
	}

	[Token(Token = "0x170001F4")]
	public IEnumerable<InputBinding> bindings
	{
		[Token(Token = "0x6001293")]
		[Address(RVA = "0x10981A8", Offset = "0x10981A8", VA = "0x10981A8", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001F5")]
	public ConsoleOverlayActions ConsoleOverlay
	{
		[Token(Token = "0x6001296")]
		[Address(RVA = "0x1098240", Offset = "0x1098240", VA = "0x1098240")]
		get
		{
			return default(ConsoleOverlayActions);
		}
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x1097EBC", Offset = "0x1097EBC", VA = "0x1097EBC")]
	public DebugMenuInput()
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0x1097FA4", Offset = "0x1097FA4", VA = "0x1097FA4", Slot = "17")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x109811C", Offset = "0x109811C", VA = "0x109811C", Slot = "12")]
	public bool Contains(InputAction action)
	{
		return default(bool);
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x1098138", Offset = "0x1098138", VA = "0x1098138", Slot = "15")]
	public IEnumerator<InputAction> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x1098154", Offset = "0x1098154", VA = "0x1098154", Slot = "16")]
	private IEnumerator System.Collections.IEnumerable.GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x1098170", Offset = "0x1098170", VA = "0x1098170", Slot = "13")]
	public void Enable()
	{
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x109818C", Offset = "0x109818C", VA = "0x109818C", Slot = "14")]
	public void Disable()
	{
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x10981C4", Offset = "0x10981C4", VA = "0x10981C4", Slot = "5")]
	public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
	{
		return null;
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0x10981E4", Offset = "0x10981E4", VA = "0x10981E4", Slot = "6")]
	public int FindBinding(InputBinding bindingMask, out InputAction action)
	{
		return default(int);
	}
}
[Token(Token = "0x2000390")]
[RequireComponent(typeof(Animator))]
public class DebugTestAnimatorUpdate : MonoBehaviour
{
	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onlyUpdateWhenVisible;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator _animator;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer _meshRend;

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0x1098728", Offset = "0x1098728", VA = "0x1098728")]
	private void Start()
	{
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x1098890", Offset = "0x1098890", VA = "0x1098890")]
	private void _lb_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x109889C", Offset = "0x109889C", VA = "0x109889C")]
	private void Update()
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x1098950", Offset = "0x1098950", VA = "0x1098950")]
	public DebugTestAnimatorUpdate()
	{
	}
}
[Token(Token = "0x2000391")]
public class DebugTestCombatStuff : MonoBehaviour
{
	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro text;

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x1098960", Offset = "0x1098960", VA = "0x1098960")]
	private void Start()
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x1098A18", Offset = "0x1098A18", VA = "0x1098A18")]
	private void _eb_HitEvent(HitEventInfos infos, int dmg)
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x1098B08", Offset = "0x1098B08", VA = "0x1098B08")]
	public DebugTestCombatStuff()
	{
	}
}
[Token(Token = "0x2000392")]
public class DebugTestIntersect : MonoBehaviour
{
	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Collider _myColl;

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x1098B10", Offset = "0x1098B10", VA = "0x1098B10")]
	private void Start()
	{
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x1098B68", Offset = "0x1098B68", VA = "0x1098B68")]
	private void Update()
	{
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x1098B6C", Offset = "0x1098B6C", VA = "0x1098B6C")]
	public DebugTestIntersect()
	{
	}
}
[Token(Token = "0x2000393")]
public class DebugTestMovement : MonoBehaviour
{
	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool moveOnUpdate;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool printVelocity;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform copyMovementFrom;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ArticulationBody articulationBody;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x1098B74", Offset = "0x1098B74", VA = "0x1098B74")]
	private void Update()
	{
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x1098E78", Offset = "0x1098E78", VA = "0x1098E78")]
	public DebugTestMovement()
	{
	}
}
[Token(Token = "0x2000394")]
public class DestroyObjectOnParticleEnd : MonoBehaviour
{
	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem particles;

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x1098E88", Offset = "0x1098E88", VA = "0x1098E88")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x1098F1C", Offset = "0x1098F1C", VA = "0x1098F1C")]
	private void CheckParticleSystem()
	{
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x1098FAC", Offset = "0x1098FAC", VA = "0x1098FAC")]
	public DestroyObjectOnParticleEnd()
	{
	}
}
[Token(Token = "0x2000395")]
public class DisableBasedOnPlatform : MonoBehaviour
{
	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool disableQuest1;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool disableQuest2;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool disablePC;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool disablePico;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool disableChineseVersion;

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0x1098FB4", Offset = "0x1098FB4", VA = "0x1098FB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x1099014", Offset = "0x1099014", VA = "0x1099014")]
	public DisableBasedOnPlatform()
	{
	}
}
[Token(Token = "0x2000396")]
public class DisableByDate : MonoBehaviour
{
	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int minMonth;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int maxMonth;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int minDay;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxDay;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	public float probabilityToStayOnCorrectDate;

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x109901C", Offset = "0x109901C", VA = "0x109901C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0x1099080", Offset = "0x1099080", VA = "0x1099080")]
	public bool IsTodayInDateRange()
	{
		return default(bool);
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0x1099148", Offset = "0x1099148", VA = "0x1099148")]
	public DisableByDate()
	{
	}
}
[Token(Token = "0x2000397")]
public class DisableDefaultControllerModel : MonoBehaviour
{
	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x1099150", Offset = "0x1099150", VA = "0x1099150")]
	private void Start()
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x1099174", Offset = "0x1099174", VA = "0x1099174")]
	public DisableDefaultControllerModel()
	{
	}
}
[Token(Token = "0x2000398")]
[RequireComponent(typeof(LivingBase))]
public class DisableOnDeath : MonoBehaviour
{
	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destroy;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MonoBehaviour[] behavioursToDisable;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Light[] lightsToDisable;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Collider[] collidersToDisable;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] gameObjectsToDisable;

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x109917C", Offset = "0x109917C", VA = "0x109917C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x1099234", Offset = "0x1099234", VA = "0x1099234")]
	private void DisableOnDeath_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x109929C", Offset = "0x109929C", VA = "0x109929C")]
	private void DisableAll()
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x109940C", Offset = "0x109940C", VA = "0x109940C")]
	private void DestroyArray(UnityEngine.Object[] _objs)
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x10994B0", Offset = "0x10994B0", VA = "0x10994B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x1099568", Offset = "0x1099568", VA = "0x1099568")]
	public DisableOnDeath()
	{
	}
}
[Token(Token = "0x2000399")]
public class DisableSoundAfterDistance : MonoBehaviour
{
	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float disableOnDist;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float checkInterval;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource _audioSource;

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x1099570", Offset = "0x1099570", VA = "0x1099570")]
	private void Start()
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x10995FC", Offset = "0x10995FC", VA = "0x10995FC")]
	private void Check()
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x10997DC", Offset = "0x10997DC", VA = "0x10997DC")]
	public DisableSoundAfterDistance()
	{
	}
}
[Token(Token = "0x200039A")]
public class EffectHelper : MonoBehaviour
{
	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x10997F0", Offset = "0x10997F0", VA = "0x10997F0")]
	public GameObject SpawnParticleEffect(GameObject _object, Vector3 pos, float destroyAfter = 10f, [Optional] Material overrideMaterial, [Optional] Transform _rotationBase)
	{
		return null;
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x1099AD4", Offset = "0x1099AD4", VA = "0x1099AD4")]
	public EffectHelper()
	{
	}
}
[Token(Token = "0x200039B")]
public class ExtraGravity : MonoBehaviour
{
	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 force;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x1099ADC", Offset = "0x1099ADC", VA = "0x1099ADC")]
	private void Start()
	{
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x1099B34", Offset = "0x1099B34", VA = "0x1099B34")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x1099B88", Offset = "0x1099B88", VA = "0x1099B88")]
	public ExtraGravity()
	{
	}
}
[Token(Token = "0x200039C")]
public class FixLocalPosition : MonoBehaviour
{
	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 _localPos;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion _localRot;

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x1099B90", Offset = "0x1099B90", VA = "0x1099B90")]
	private void Start()
	{
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x1099BE0", Offset = "0x1099BE0", VA = "0x1099BE0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x1099C2C", Offset = "0x1099C2C", VA = "0x1099C2C")]
	public FixLocalPosition()
	{
	}
}
[Token(Token = "0x200039D")]
public class IngameConsole : MonoBehaviour
{
	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool show;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _command;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _message;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool showStreamInfos;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private DebugMenuInput _debugInput;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] options_first_choice;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] playeroptions;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] debugoptions;

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0x1099C34", Offset = "0x1099C34", VA = "0x1099C34")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x1099CB0", Offset = "0x1099CB0", VA = "0x1099CB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x1099D68", Offset = "0x1099D68", VA = "0x1099D68")]
	private void Update()
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x1099E14", Offset = "0x1099E14", VA = "0x1099E14")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x109D9CC", Offset = "0x109D9CC", VA = "0x109D9CC")]
	private void RenderNumpadAndFlags()
	{
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x109AE20", Offset = "0x109AE20", VA = "0x109AE20")]
	public void EvaluateCommand(string _command)
	{
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0x109DC90", Offset = "0x109DC90", VA = "0x109DC90")]
	private void ClearCommand()
	{
	}

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0x109DCDC", Offset = "0x109DCDC", VA = "0x109DCDC")]
	public IngameConsole()
	{
	}
}
[Token(Token = "0x20003A0")]
public class IngameConsoleVR : MonoBehaviour
{
	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject choicesFirst;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject choicesSecond;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject choicesThird;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject secondChoiceButton;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI commandText;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string command;

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0x109EBE8", Offset = "0x109EBE8", VA = "0x109EBE8")]
	public void InitIngameConsole()
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0x109EC44", Offset = "0x109EC44", VA = "0x109EC44")]
	public void AddToCommand(string c)
	{
	}

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0x109FC20", Offset = "0x109FC20", VA = "0x109FC20")]
	private void Update()
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0x109FCB4", Offset = "0x109FCB4", VA = "0x109FCB4")]
	public IngameConsoleVR()
	{
	}
}
[Token(Token = "0x20003A1")]
public class IngameUtil : MonoBehaviour
{
	[Token(Token = "0x60012D9")]
	[Address(RVA = "0x109FCBC", Offset = "0x109FCBC", VA = "0x109FCBC")]
	public void ShowOverlayText(string s)
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0x109FDE8", Offset = "0x109FDE8", VA = "0x109FDE8")]
	public void PlaySound(string s)
	{
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0x109FE78", Offset = "0x109FE78", VA = "0x109FE78")]
	public IngameUtil()
	{
	}
}
[Token(Token = "0x20003A2")]
public class MeshCombineCanditate : MonoBehaviour
{
	[Token(Token = "0x20003A3")]
	public enum TYPE
	{
		[Token(Token = "0x4001228")]
		DECO,
		[Token(Token = "0x4001229")]
		GROUND_CEILING_NOSHADOW,
		[Token(Token = "0x400122A")]
		WALLS_SHADOW,
		[Token(Token = "0x400122B")]
		WOOD_SHADOW,
		[Token(Token = "0x400122C")]
		FAKE_AO
	}

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TYPE type;

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x109FE80", Offset = "0x109FE80", VA = "0x109FE80")]
	public MeshCombineCanditate()
	{
	}
}
[Token(Token = "0x20003A4")]
public static class NavMeshSurfaceExtensions
{
	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x109FE88", Offset = "0x109FE88", VA = "0x109FE88")]
	public static AsyncOperation BuildNavMeshAsync(this NavMeshSurface surface)
	{
		return null;
	}
}
[Token(Token = "0x20003A5")]
public class PhysicsForceUpdate : MonoBehaviour
{
	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x109FFA4", Offset = "0x109FFA4", VA = "0x109FFA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x10A00A8", Offset = "0x10A00A8", VA = "0x10A00A8")]
	public PhysicsForceUpdate()
	{
	}
}
[Token(Token = "0x20003A6")]
public class PlaySound : MonoBehaviour
{
	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string clipToPlay;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float volume;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform followObject;

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x10A00B0", Offset = "0x10A00B0", VA = "0x10A00B0")]
	public void PlayOneShot()
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0x10A01DC", Offset = "0x10A01DC", VA = "0x10A01DC")]
	public PlaySound()
	{
	}
}
[Token(Token = "0x20003A7")]
public class RotationWatcher : MonoBehaviour
{
	[Token(Token = "0x20003A8")]
	public enum MODE
	{
		[Token(Token = "0x4001232")]
		UPDATE_VALUES_ON_STARTUP,
		[Token(Token = "0x4001233")]
		FORCE_LOCAL_ROTATION
	}

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MODE mode;

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0x10A01EC", Offset = "0x10A01EC", VA = "0x10A01EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0x10A02DC", Offset = "0x10A02DC", VA = "0x10A02DC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0x10A0384", Offset = "0x10A0384", VA = "0x10A0384")]
	public RotationWatcher()
	{
	}
}
[Token(Token = "0x20003A9")]
public class Run
{
	[Token(Token = "0x20003AA")]
	public class CTempWindow
	{
		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Run inst;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rect pos;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string title;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int winID;

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x10A0EF4", Offset = "0x10A0EF4", VA = "0x10A0EF4")]
		public void Close()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x10A0F10", Offset = "0x10A0F10", VA = "0x10A0F10")]
		public CTempWindow()
		{
		}
	}

	[Token(Token = "0x20003AB")]
	[CompilerGenerated]
	private sealed class <_RunEachFrame>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Run aRun;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action aAction;

		[Token(Token = "0x170001F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60012FE")]
			[Address(RVA = "0x10A1098", Offset = "0x10A1098", VA = "0x10A1098", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001300")]
			[Address(RVA = "0x10A10E0", Offset = "0x10A10E0", VA = "0x10A10E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x10A0FD0", Offset = "0x10A0FD0", VA = "0x10A0FD0")]
		[DebuggerHidden]
		public <_RunEachFrame>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x10A0FF8", Offset = "0x10A0FF8", VA = "0x10A0FF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x10A0FFC", Offset = "0x10A0FFC", VA = "0x10A0FFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x10A10A0", Offset = "0x10A10A0", VA = "0x10A10A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003AC")]
	[CompilerGenerated]
	private sealed class <_RunEvery>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Run aRun;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float aInitialDelay;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action aAction;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float aSeconds;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <FrameCount>5__2;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__3;

		[Token(Token = "0x170001FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001304")]
			[Address(RVA = "0x10A147C", Offset = "0x10A147C", VA = "0x10A147C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001306")]
			[Address(RVA = "0x10A14C4", Offset = "0x10A14C4", VA = "0x10A14C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x10A10E8", Offset = "0x10A10E8", VA = "0x10A10E8")]
		[DebuggerHidden]
		public <_RunEvery>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x10A1110", Offset = "0x10A1110", VA = "0x10A1110", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x10A1114", Offset = "0x10A1114", VA = "0x10A1114", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x10A1484", Offset = "0x10A1484", VA = "0x10A1484", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003AD")]
	[CompilerGenerated]
	private sealed class <_RunAfter>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Run aRun;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float aDelay;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action aAction;

		[Token(Token = "0x170001FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600130A")]
			[Address(RVA = "0x10A15F0", Offset = "0x10A15F0", VA = "0x10A15F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600130C")]
			[Address(RVA = "0x10A1638", Offset = "0x10A1638", VA = "0x10A1638", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x10A14CC", Offset = "0x10A14CC", VA = "0x10A14CC")]
		[DebuggerHidden]
		public <_RunAfter>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0x10A14F4", Offset = "0x10A14F4", VA = "0x10A14F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0x10A14F8", Offset = "0x10A14F8", VA = "0x10A14F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0x10A15F8", Offset = "0x10A15F8", VA = "0x10A15F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003AE")]
	[CompilerGenerated]
	private sealed class <_RunLerp>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Run aRun;

		[Token(Token = "0x4001250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float aDuration;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<float> aAction;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <t>5__2;

		[Token(Token = "0x170001FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001310")]
			[Address(RVA = "0x10A179C", Offset = "0x10A179C", VA = "0x10A179C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001312")]
			[Address(RVA = "0x10A17E4", Offset = "0x10A17E4", VA = "0x10A17E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0x10A1640", Offset = "0x10A1640", VA = "0x10A1640")]
		[DebuggerHidden]
		public <_RunLerp>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0x10A1668", Offset = "0x10A1668", VA = "0x10A1668", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0x10A166C", Offset = "0x10A166C", VA = "0x10A166C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0x10A17A4", Offset = "0x10A17A4", VA = "0x10A17A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003AF")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action aAction;

		[Token(Token = "0x6001313")]
		[Address(RVA = "0x10A17EC", Offset = "0x10A17EC", VA = "0x10A17EC")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0x10A17F4", Offset = "0x10A17F4", VA = "0x10A17F4")]
		internal void <_RunOnDelegate>b__0()
		{
		}
	}

	[Token(Token = "0x20003B0")]
	[CompilerGenerated]
	private sealed class <_RunOnDelegate>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action aAction;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Run aRun;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SimpleEvent aDelegate;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private <>c__DisplayClass13_0 <>8__1;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action <action>5__2;

		[Token(Token = "0x17000201")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001318")]
			[Address(RVA = "0x10A1AF0", Offset = "0x10A1AF0", VA = "0x10A1AF0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600131A")]
			[Address(RVA = "0x10A1B38", Offset = "0x10A1B38", VA = "0x10A1B38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0x10A1818", Offset = "0x10A1818", VA = "0x10A1818")]
		[DebuggerHidden]
		public <_RunOnDelegate>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0x10A1840", Offset = "0x10A1840", VA = "0x10A1840", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0x10A1844", Offset = "0x10A1844", VA = "0x10A1844", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x10A1AF8", Offset = "0x10A1AF8", VA = "0x10A1AF8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B1")]
	[CompilerGenerated]
	private sealed class <_Coroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator aCoroutine;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Run aRun;

		[Token(Token = "0x17000203")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600131E")]
			[Address(RVA = "0x10A1C20", Offset = "0x10A1C20", VA = "0x10A1C20", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001320")]
			[Address(RVA = "0x10A1C68", Offset = "0x10A1C68", VA = "0x10A1C68", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0x10A1B40", Offset = "0x10A1B40", VA = "0x10A1B40")]
		[DebuggerHidden]
		public <_Coroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x10A1B68", Offset = "0x10A1B68", VA = "0x10A1B68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x10A1B6C", Offset = "0x10A1B6C", VA = "0x10A1B6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x10A1C28", Offset = "0x10A1C28", VA = "0x10A1C28", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003B3")]
	[CompilerGenerated]
	private sealed class <_WaitFor>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Run <>4__this;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action aOnDone;

		[Token(Token = "0x17000205")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001327")]
			[Address(RVA = "0x10A1E5C", Offset = "0x10A1E5C", VA = "0x10A1E5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001329")]
			[Address(RVA = "0x10A1EA4", Offset = "0x10A1EA4", VA = "0x10A1EA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x10A1DC0", Offset = "0x10A1DC0", VA = "0x10A1DC0")]
		[DebuggerHidden]
		public <_WaitFor>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x10A1DE8", Offset = "0x10A1DE8", VA = "0x10A1DE8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x10A1DEC", Offset = "0x10A1DEC", VA = "0x10A1DEC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x10A1E64", Offset = "0x10A1E64", VA = "0x10A1E64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isDone;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool abort;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IEnumerator action;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action onGUIaction;

	[Token(Token = "0x170001F8")]
	public UnityEngine.Coroutine WaitFor
	{
		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x10A0D5C", Offset = "0x10A0D5C", VA = "0x10A0D5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0x10A038C", Offset = "0x10A038C", VA = "0x10A038C")]
	public static Run EachFrame(Action aAction)
	{
		return null;
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0x10A0418", Offset = "0x10A0418", VA = "0x10A0418")]
	[IteratorStateMachine(typeof(<_RunEachFrame>d__5))]
	private static IEnumerator _RunEachFrame(Run aRun, Action aAction)
	{
		return null;
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0x10A0514", Offset = "0x10A0514", VA = "0x10A0514")]
	public static Run Every(float aInitialDelay, float aDelay, Action aAction)
	{
		return null;
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0x10A05B0", Offset = "0x10A05B0", VA = "0x10A05B0")]
	[IteratorStateMachine(typeof(<_RunEvery>d__7))]
	private static IEnumerator _RunEvery(Run aRun, float aInitialDelay, float aSeconds, Action aAction)
	{
		return null;
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0x10A0658", Offset = "0x10A0658", VA = "0x10A0658")]
	public static Run After(float aDelay, Action aAction)
	{
		return null;
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x10A06EC", Offset = "0x10A06EC", VA = "0x10A06EC")]
	[IteratorStateMachine(typeof(<_RunAfter>d__9))]
	private static IEnumerator _RunAfter(Run aRun, float aDelay, Action aAction)
	{
		return null;
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0x10A078C", Offset = "0x10A078C", VA = "0x10A078C")]
	public static Run Lerp(float aDuration, Action<float> aAction)
	{
		return null;
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0x10A0820", Offset = "0x10A0820", VA = "0x10A0820")]
	[IteratorStateMachine(typeof(<_RunLerp>d__11))]
	private static IEnumerator _RunLerp(Run aRun, float aDuration, Action<float> aAction)
	{
		return null;
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x10A08C0", Offset = "0x10A08C0", VA = "0x10A08C0")]
	public static Run OnDelegate(SimpleEvent aDelegate, Action aAction)
	{
		return null;
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x10A0954", Offset = "0x10A0954", VA = "0x10A0954")]
	[IteratorStateMachine(typeof(<_RunOnDelegate>d__13))]
	private static IEnumerator _RunOnDelegate(Run aRun, SimpleEvent aDelegate, Action aAction)
	{
		return null;
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x10A09F8", Offset = "0x10A09F8", VA = "0x10A09F8")]
	public static Run Coroutine(IEnumerator aCoroutine)
	{
		return null;
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0x10A0A7C", Offset = "0x10A0A7C", VA = "0x10A0A7C")]
	[IteratorStateMachine(typeof(<_Coroutine>d__15))]
	private static IEnumerator _Coroutine(Run aRun, IEnumerator aCoroutine)
	{
		return null;
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x10A0B0C", Offset = "0x10A0B0C", VA = "0x10A0B0C")]
	public static Run OnGUI(float aDuration, Action aAction)
	{
		return null;
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x10A0BF0", Offset = "0x10A0BF0", VA = "0x10A0BF0")]
	public static CTempWindow CreateGUIWindow(Rect aPos, string aTitle, Action<CTempWindow> aAction)
	{
		return null;
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x10A04A8", Offset = "0x10A04A8", VA = "0x10A04A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0x10A0DC8", Offset = "0x10A0DC8", VA = "0x10A0DC8")]
	[IteratorStateMachine(typeof(<_WaitFor>d__22))]
	public IEnumerator _WaitFor(Action aOnDone)
	{
		return null;
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x10A0E58", Offset = "0x10A0E58", VA = "0x10A0E58")]
	public void Abort()
	{
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x10A0E64", Offset = "0x10A0E64", VA = "0x10A0E64")]
	public Run ExecuteWhenDone(Action aAction)
	{
		return null;
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x10A0410", Offset = "0x10A0410", VA = "0x10A0410")]
	public Run()
	{
	}
}
[Token(Token = "0x20003B4")]
public class MonoBehaviourSingleton<TSelfType> : MonoBehaviour where TSelfType : MonoBehaviour
{
	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TSelfType m_Instance;

	[Token(Token = "0x17000207")]
	public static TSelfType Instance
	{
		[Token(Token = "0x600132A")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600132B")]
	public MonoBehaviourSingleton()
	{
	}
}
[Token(Token = "0x20003B5")]
public class SimpleEvent
{
	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Action m_Delegate;

	[Token(Token = "0x600132C")]
	[Address(RVA = "0x10A19D0", Offset = "0x10A19D0", VA = "0x10A19D0")]
	public void Add(Action aDelegate)
	{
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0x10A1A60", Offset = "0x10A1A60", VA = "0x10A1A60")]
	public void Remove(Action aDelegate)
	{
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0x10A1EAC", Offset = "0x10A1EAC", VA = "0x10A1EAC")]
	public void Run()
	{
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0x10A1ED0", Offset = "0x10A1ED0", VA = "0x10A1ED0")]
	public SimpleEvent()
	{
	}
}
[Token(Token = "0x20003B7")]
public class CoroutineHelper : MonoBehaviourSingleton<CoroutineHelper>
{
	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Run> m_OnGUIObjects;

	[Token(Token = "0x17000208")]
	public int ScheduledOnGUIItems
	{
		[Token(Token = "0x6001333")]
		[Address(RVA = "0x10A2048", Offset = "0x10A2048", VA = "0x10A2048")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x10A2090", Offset = "0x10A2090", VA = "0x10A2090")]
	public Run Add(Run aRun)
	{
		return null;
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x10A2148", Offset = "0x10A2148", VA = "0x10A2148")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x10A220C", Offset = "0x10A220C", VA = "0x10A220C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x10A22C8", Offset = "0x10A22C8", VA = "0x10A22C8")]
	public CoroutineHelper()
	{
	}
}
[Token(Token = "0x20003B8")]
public static class GUIHelper
{
	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int m_WinIDCounter;

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x10A0F70", Offset = "0x10A0F70", VA = "0x10A0F70")]
	public static int GetFreeWindowID()
	{
		return default(int);
	}
}
[Token(Token = "0x20003B9")]
public class SaveAndQuit : ItemBase
{
	[Token(Token = "0x600133A")]
	[Address(RVA = "0x10A23B0", Offset = "0x10A23B0", VA = "0x10A23B0", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x10A2468", Offset = "0x10A2468", VA = "0x10A2468", Slot = "11")]
	public override void OnUseStart()
	{
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x10A25D8", Offset = "0x10A25D8", VA = "0x10A25D8")]
	public SaveAndQuit()
	{
	}
}
[Token(Token = "0x20003BA")]
public class ScriptActivatorOnDestroy : MonoBehaviour
{
	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LivingBase[] objectsToWatch;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MonoBehaviour[] scriptsToEnable;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int amountTillEnable;

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x10A25E0", Offset = "0x10A25E0", VA = "0x10A25E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x10A2654", Offset = "0x10A2654", VA = "0x10A2654")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x10A2770", Offset = "0x10A2770", VA = "0x10A2770")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x10A288C", Offset = "0x10A288C", VA = "0x10A288C")]
	private void X_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x10A2904", Offset = "0x10A2904", VA = "0x10A2904")]
	public ScriptActivatorOnDestroy()
	{
	}
}
[Token(Token = "0x20003BB")]
public class SmoothLookPlayer : MonoBehaviour
{
	[Token(Token = "0x20003BC")]
	[CompilerGenerated]
	private sealed class <UpdateDistance>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SmoothLookPlayer <>4__this;

		[Token(Token = "0x17000209")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600134A")]
			[Address(RVA = "0x10A2EEC", Offset = "0x10A2EEC", VA = "0x10A2EEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600134C")]
			[Address(RVA = "0x10A2F34", Offset = "0x10A2F34", VA = "0x10A2F34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x10A29A0", Offset = "0x10A29A0", VA = "0x10A29A0")]
		[DebuggerHidden]
		public <UpdateDistance>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x10A2C9C", Offset = "0x10A2C9C", VA = "0x10A2C9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x10A2CA0", Offset = "0x10A2CA0", VA = "0x10A2CA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x10A2EF4", Offset = "0x10A2EF4", VA = "0x10A2EF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float smoothLookStrength;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float distToStartSmoothLook;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float _playerDistance;

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x10A290C", Offset = "0x10A290C", VA = "0x10A290C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x10A292C", Offset = "0x10A292C", VA = "0x10A292C")]
	[IteratorStateMachine(typeof(<UpdateDistance>d__4))]
	private IEnumerator UpdateDistance()
	{
		return null;
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x10A29C8", Offset = "0x10A29C8", VA = "0x10A29C8")]
	public void Update()
	{
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x10A2B54", Offset = "0x10A2B54", VA = "0x10A2B54")]
	public void SmoothLook(Vector3 newDirection, float strength = 3f)
	{
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0x10A2C88", Offset = "0x10A2C88", VA = "0x10A2C88")]
	public SmoothLookPlayer()
	{
	}
}
[Token(Token = "0x20003BD")]
public class SoundRepoHelper : MonoBehaviour
{
	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string idToFind;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LivingBase livingBaseToCopy;

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x10A2F3C", Offset = "0x10A2F3C", VA = "0x10A2F3C")]
	[ContextMenu("Find Id of")]
	public void FindIdOf()
	{
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0x10A3068", Offset = "0x10A3068", VA = "0x10A3068")]
	[ContextMenu("Which sounds have occlusion?")]
	public void WhichSoundHaveOcclusion()
	{
	}

	[Token(Token = "0x600134F")]
	[Address(RVA = "0x10A31A4", Offset = "0x10A31A4", VA = "0x10A31A4")]
	[ContextMenu("Print All Sounds")]
	public void PRINTSOUND()
	{
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0x10A3274", Offset = "0x10A3274", VA = "0x10A3274")]
	public void AddCompTo(GameObject g, ADSoundEffect a, string effectId)
	{
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0x10A3358", Offset = "0x10A3358", VA = "0x10A3358")]
	public SoundRepoHelper()
	{
	}
}
[Token(Token = "0x20003BE")]
public static class StreamingAssetsHelper
{
	[Token(Token = "0x6001352")]
	[Address(RVA = "0x10A3360", Offset = "0x10A3360", VA = "0x10A3360")]
	public static Task<string[]> ReadStreamingAssetFiles(string path, string pattern, SearchOption searchOption)
	{
		return null;
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0x10A3484", Offset = "0x10A3484", VA = "0x10A3484")]
	public static Task<string> ReadStreamingAssetsFile(string path)
	{
		return null;
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0x10A3588", Offset = "0x10A3588", VA = "0x10A3588")]
	public static Task<byte[]> ReadStreamingAssetsBytes(string path)
	{
		return null;
	}
}
[Token(Token = "0x20003C2")]
public enum FileReadReturnType
{
	[Token(Token = "0x400127D")]
	ByteArray,
	[Token(Token = "0x400127E")]
	String
}
[Token(Token = "0x20003C3")]
public class StringToObjectMapper : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003C4")]
	public class StringToObjectMapping
	{
		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject obj;

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x10A3C18", Offset = "0x10A3C18", VA = "0x10A3C18")]
		public StringToObjectMapping()
		{
		}
	}

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StringToObjectMapping[] stringToObjectMappings;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WorldGeneratorEvolved.BuildingBlock[] buildingBlocks;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<string, GameObject> stringToObjectDict;

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x10A3714", Offset = "0x10A3714", VA = "0x10A3714")]
	public GameObject GetObject(string _objectString)
	{
		return null;
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x10A378C", Offset = "0x10A378C", VA = "0x10A378C")]
	public void AddObject(GameObject g, string s)
	{
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0x10A3830", Offset = "0x10A3830", VA = "0x10A3830")]
	public string FindIdOfObject(GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0x10A3A98", Offset = "0x10A3A98", VA = "0x10A3A98")]
	private void Awake()
	{
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0x10A3C10", Offset = "0x10A3C10", VA = "0x10A3C10")]
	public StringToObjectMapper()
	{
	}
}
[Token(Token = "0x20003C6")]
[Obsolete("Not needed anymore because of OpenXR rework and custom physics calling")]
public class TimestepAdjuster : MonoBehaviour
{
	[Token(Token = "0x20003C7")]
	public enum TYPE
	{
		[Token(Token = "0x4001288")]
		STEAMVR,
		[Token(Token = "0x4001289")]
		OCULUS
	}

	[Token(Token = "0x20003C8")]
	[CompilerGenerated]
	private sealed class <SetupPhysicsTiming>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimestepAdjuster <>4__this;

		[Token(Token = "0x1700020B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600136A")]
			[Address(RVA = "0x10A3E7C", Offset = "0x10A3E7C", VA = "0x10A3E7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600136C")]
			[Address(RVA = "0x10A3EC4", Offset = "0x10A3EC4", VA = "0x10A3EC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x10A3D94", Offset = "0x10A3D94", VA = "0x10A3D94")]
		[DebuggerHidden]
		public <SetupPhysicsTiming>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x10A3DC4", Offset = "0x10A3DC4", VA = "0x10A3DC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x10A3DC8", Offset = "0x10A3DC8", VA = "0x10A3DC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x10A3E84", Offset = "0x10A3E84", VA = "0x10A3E84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TYPE type;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float lastDesiredFrequency;

	[Token(Token = "0x6001364")]
	[Address(RVA = "0x10A3D00", Offset = "0x10A3D00", VA = "0x10A3D00")]
	private void Start()
	{
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0x10A3D20", Offset = "0x10A3D20", VA = "0x10A3D20")]
	[IteratorStateMachine(typeof(<SetupPhysicsTiming>d__4))]
	public IEnumerator SetupPhysicsTiming()
	{
		return null;
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0x10A3DBC", Offset = "0x10A3DBC", VA = "0x10A3DBC")]
	public TimestepAdjuster()
	{
	}
}
[Token(Token = "0x20003C9")]
public class TransformFollow : MonoBehaviour
{
	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Shared Settings")]
	public bool purelyLocal;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool applyOffset;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 offset;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool applyRotation;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 overrideRotation;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Global Setttings")]
	public Transform transformToFollow;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool copyPosition;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform transformToCopyRotationFrom;

	[Token(Token = "0x600136D")]
	[Address(RVA = "0x10A3ECC", Offset = "0x10A3ECC", VA = "0x10A3ECC")]
	private void Update()
	{
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0x10A4080", Offset = "0x10A4080", VA = "0x10A4080")]
	public TransformFollow()
	{
	}
}
[Token(Token = "0x20003CA")]
public class TransitionThemeHandler : MonoBehaviour
{
	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer firstRenderer;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer secondRenderer;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isWall;

	[Token(Token = "0x600136F")]
	[Address(RVA = "0x10A4094", Offset = "0x10A4094", VA = "0x10A4094")]
	private void Start()
	{
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0x10A440C", Offset = "0x10A440C", VA = "0x10A440C")]
	public TransitionThemeHandler()
	{
	}
}
[Token(Token = "0x20003CC")]
public class Translator : MonoBehaviour
{
	[Token(Token = "0x6001373")]
	[Address(RVA = "0x10A4438", Offset = "0x10A4438", VA = "0x10A4438")]
	public static string GetRarityString(Rarity rarity)
	{
		return null;
	}

	[Token(Token = "0x6001374")]
	[Address(RVA = "0x10A44E8", Offset = "0x10A44E8", VA = "0x10A44E8")]
	public static string GetFloatToPerc(float val)
	{
		return null;
	}

	[Token(Token = "0x6001375")]
	[Address(RVA = "0x10A4578", Offset = "0x10A4578", VA = "0x10A4578")]
	public Translator()
	{
	}
}
[Token(Token = "0x20003CD")]
public class TriggerPushBack : MonoBehaviour
{
	[Token(Token = "0x6001376")]
	[Address(RVA = "0x10A4580", Offset = "0x10A4580", VA = "0x10A4580")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0x10A4710", Offset = "0x10A4710", VA = "0x10A4710")]
	public TriggerPushBack()
	{
	}
}
[Token(Token = "0x20003CE")]
public class UnlockAchievementOnDeath : MonoBehaviour
{
	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string achievementID;

	[Token(Token = "0x6001378")]
	[Address(RVA = "0x10A4718", Offset = "0x10A4718", VA = "0x10A4718")]
	private void Start()
	{
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0x10A47D0", Offset = "0x10A47D0", VA = "0x10A47D0")]
	private void UnlockAchievementOnDeath_DeathEvent(LivingBase l)
	{
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0x10A4850", Offset = "0x10A4850", VA = "0x10A4850")]
	public UnlockAchievementOnDeath()
	{
	}
}
[Token(Token = "0x20003CF")]
public class UnparentOnStart : MonoBehaviour
{
	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool addToKillAfterFloorComplete;

	[Token(Token = "0x600137B")]
	[Address(RVA = "0x10A4858", Offset = "0x10A4858", VA = "0x10A4858")]
	private void Start()
	{
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0x10A49A0", Offset = "0x10A49A0", VA = "0x10A49A0")]
	public UnparentOnStart()
	{
	}
}
[Token(Token = "0x20003D0")]
public class Util
{
	[Token(Token = "0x600137D")]
	[Address(RVA = "0x10A49B0", Offset = "0x10A49B0", VA = "0x10A49B0")]
	public static Vector3 GetDirToPlayer(Transform t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0x10A46C4", Offset = "0x10A46C4", VA = "0x10A46C4")]
	public static bool IsPlayerTag(string tag)
	{
		return default(bool);
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0x10A4AC0", Offset = "0x10A4AC0", VA = "0x10A4AC0")]
	public static Vector3 ToVector(float scale)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0x10A4B1C", Offset = "0x10A4B1C", VA = "0x10A4B1C")]
	public static int GetRandomNumberFromHash(int hash, int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0x10A4B9C", Offset = "0x10A4B9C", VA = "0x10A4B9C")]
	public static string ExtractNumbersFromString(string input)
	{
		return null;
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0x10A4CC8", Offset = "0x10A4CC8", VA = "0x10A4CC8")]
	public static string GetDungeonTitle(CURRENT_FLOOR _floor)
	{
		return null;
	}

	[Token(Token = "0x6001383")]
	[Address(RVA = "0x10A4DC4", Offset = "0x10A4DC4", VA = "0x10A4DC4")]
	public static bool HasParameter(string paramName, Animator _animo)
	{
		return default(bool);
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0x10A4E54", Offset = "0x10A4E54", VA = "0x10A4E54")]
	public static void DrawCircle(Texture2D tex, Color color, int x, int y, int radius = 3)
	{
	}

	[Token(Token = "0x6001385")]
	public static void Shuffle<T>(T[] array)
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0x10A4F60", Offset = "0x10A4F60", VA = "0x10A4F60")]
	public static bool ColorsEqual(Color c1, Color c2)
	{
		return default(bool);
	}

	[Token(Token = "0x6001387")]
	[Address(RVA = "0x10A5098", Offset = "0x10A5098", VA = "0x10A5098")]
	public static Quaternion SmoothLookY(Transform t, Vector3 newDirection, float strength = 4f)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0x10A51E4", Offset = "0x10A51E4", VA = "0x10A51E4")]
	public static Vector3 GetMiddleOfMesh(Mesh _mesh)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0x10A52D0", Offset = "0x10A52D0", VA = "0x10A52D0")]
	public static void Repeat(int count, Action action)
	{
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0x10A5314", Offset = "0x10A5314", VA = "0x10A5314")]
	public static Vector3 CalculateInitialVelocityArc(Transform initialPosTransform, Transform targetPosTransform, float launchAngle, float gravity = -9.81f)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x10A5464", Offset = "0x10A5464", VA = "0x10A5464")]
	public static string CreateWrappedString(int length, string txt)
	{
		return null;
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x10A5574", Offset = "0x10A5574", VA = "0x10A5574")]
	public static GameObject[] GetAllRooms()
	{
		return null;
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x10A55B8", Offset = "0x10A55B8", VA = "0x10A55B8")]
	public static GameObject[] GetAllRoomComponents()
	{
		return null;
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x10A55FC", Offset = "0x10A55FC", VA = "0x10A55FC")]
	public static bool IsValid(float chance)
	{
		return default(bool);
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x10A562C", Offset = "0x10A562C", VA = "0x10A562C")]
	public static bool IsValidWithLuck(float luck, float minChance, float maxChance)
	{
		return default(bool);
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x10A569C", Offset = "0x10A569C", VA = "0x10A569C")]
	public static bool IsValidWithLuck(float luck, float minChance, float maxChance, float defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0x10A5724", Offset = "0x10A5724", VA = "0x10A5724")]
	public static bool IsValidWithLuckHash(float luck, float minChance, float maxChance, float defaultValue, int hash)
	{
		return default(bool);
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0x10A57FC", Offset = "0x10A57FC", VA = "0x10A57FC")]
	public static bool IsValid(float chance, System.Random rng)
	{
		return default(bool);
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0x10A5834", Offset = "0x10A5834", VA = "0x10A5834")]
	public static Vector3 ClampVector(Vector3 minValues, Vector3 maxValues, Vector3 value)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001394")]
	[Address(RVA = "0x10A5870", Offset = "0x10A5870", VA = "0x10A5870")]
	public static Vector3 RandVector(float xMin, float xMax, float yMin, float yMax, float zMin, float zMax)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001395")]
	[Address(RVA = "0x10A58E0", Offset = "0x10A58E0", VA = "0x10A58E0")]
	public static int GetHashFromPosition(Vector3 position)
	{
		return default(int);
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0x10A5B7C", Offset = "0x10A5B7C", VA = "0x10A5B7C")]
	public static int Hash(int x)
	{
		return default(int);
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0x10A5B9C", Offset = "0x10A5B9C", VA = "0x10A5B9C")]
	public static Vector3 RandVector(Vector3 _min, Vector3 _max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0x10A5C10", Offset = "0x10A5C10", VA = "0x10A5C10")]
	public static float RandomRange(float min, float max, System.Random random)
	{
		return default(float);
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0x10A5C58", Offset = "0x10A5C58", VA = "0x10A5C58")]
	public static float RandomWithExclusion(float min, float max, float minExclusive, float maxExclusive)
	{
		return default(float);
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0x10A5C8C", Offset = "0x10A5C8C", VA = "0x10A5C8C")]
	public static ItemBase GetWeightedItemFromList(ItemBase[] itemList)
	{
		return null;
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0x10A5D98", Offset = "0x10A5D98", VA = "0x10A5D98")]
	public static void Log(object o)
	{
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0x10A5D9C", Offset = "0x10A5D9C", VA = "0x10A5D9C")]
	public Util()
	{
	}
}
[Token(Token = "0x20003D2")]
public class UtilBehavior : MonoBehaviour
{
	[Token(Token = "0x20003D3")]
	[CompilerGenerated]
	private sealed class <PopupRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UtilBehavior <>4__this;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <scale>5__2;

		[Token(Token = "0x1700020D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013A8")]
			[Address(RVA = "0x10A626C", Offset = "0x10A626C", VA = "0x10A626C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0x10A62B4", Offset = "0x10A62B4", VA = "0x10A62B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x10A5FBC", Offset = "0x10A5FBC", VA = "0x10A5FBC")]
		[DebuggerHidden]
		public <PopupRoutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x10A6014", Offset = "0x10A6014", VA = "0x10A6014", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x10A6018", Offset = "0x10A6018", VA = "0x10A6018", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x10A6274", Offset = "0x10A6274", VA = "0x10A6274", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D4")]
	[CompilerGenerated]
	private sealed class <ShrinkRoutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UtilBehavior <>4__this;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <scale>5__2;

		[Token(Token = "0x1700020F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013AE")]
			[Address(RVA = "0x10A64C8", Offset = "0x10A64C8", VA = "0x10A64C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013B0")]
			[Address(RVA = "0x10A6510", Offset = "0x10A6510", VA = "0x10A6510", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x10A5FE4", Offset = "0x10A5FE4", VA = "0x10A5FE4")]
		[DebuggerHidden]
		public <ShrinkRoutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x10A62BC", Offset = "0x10A62BC", VA = "0x10A62BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x10A62C0", Offset = "0x10A62C0", VA = "0x10A62C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x10A64D0", Offset = "0x10A64D0", VA = "0x10A64D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string openSound;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string closeSound;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool inRoutine;

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0x10A5E74", Offset = "0x10A5E74", VA = "0x10A5E74")]
	public void Popup(float speed = 4f)
	{
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0x10A5F18", Offset = "0x10A5F18", VA = "0x10A5F18")]
	public void Shrink(float speed = 4f)
	{
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x10A5E94", Offset = "0x10A5E94", VA = "0x10A5E94")]
	[IteratorStateMachine(typeof(<PopupRoutine>d__5))]
	public IEnumerator PopupRoutine(float speed = 4f)
	{
		return null;
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x10A5F38", Offset = "0x10A5F38", VA = "0x10A5F38")]
	[IteratorStateMachine(typeof(<ShrinkRoutine>d__6))]
	public IEnumerator ShrinkRoutine(float speed = 4f)
	{
		return null;
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x10A600C", Offset = "0x10A600C", VA = "0x10A600C")]
	public UtilBehavior()
	{
	}
}
[Token(Token = "0x20003D5")]
[Obsolete("Use VelocityEstimator!")]
public class Velocity : MonoBehaviour
{
	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 velocity;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 oldPos;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 newPos;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _ignoreTimer;

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0x10A6518", Offset = "0x10A6518", VA = "0x10A6518")]
	private void Start()
	{
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0x10A6548", Offset = "0x10A6548", VA = "0x10A6548")]
	public void ResetValues()
	{
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0x10A65E4", Offset = "0x10A65E4", VA = "0x10A65E4")]
	public void IgnoreVelocity(float _time)
	{
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0x10A65EC", Offset = "0x10A65EC", VA = "0x10A65EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0x10A6734", Offset = "0x10A6734", VA = "0x10A6734")]
	public Velocity()
	{
	}
}
[Token(Token = "0x20003D6")]
public class VelocityEstimator : MonoBehaviour
{
	[Token(Token = "0x20003D7")]
	[CompilerGenerated]
	private sealed class <EstimateVelocityCoroutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VelocityEstimator <>4__this;

		[Token(Token = "0x17000211")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0x10A7204", Offset = "0x10A7204", VA = "0x10A7204", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013C5")]
			[Address(RVA = "0x10A724C", Offset = "0x10A724C", VA = "0x10A724C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0x10A6D1C", Offset = "0x10A6D1C", VA = "0x10A6D1C")]
		[DebuggerHidden]
		public <EstimateVelocityCoroutine>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0x10A6D60", Offset = "0x10A6D60", VA = "0x10A6D60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0x10A6D64", Offset = "0x10A6D64", VA = "0x10A6D64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0x10A720C", Offset = "0x10A720C", VA = "0x10A720C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Tooltip("How many frames to average over for computing velocity")]
	public int velocityAverageFrames;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Tooltip("How many frames to average over for computing angular velocity")]
	public int angularVelocityAverageFrames;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool estimateOnAwake;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool mitigateCameraRigVelocity;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool restartEstimateOnEnable;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool estimateAngularVelocity;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UnityEngine.Coroutine routine;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int sampleCount;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3[] velocitySamples;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] angularVelocitySamples;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _firstTimeStarted;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 previousPosition;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion previousRotation;

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0x10A673C", Offset = "0x10A673C", VA = "0x10A673C")]
	public void BeginEstimatingVelocity()
	{
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0x10A6830", Offset = "0x10A6830", VA = "0x10A6830")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0x10A6774", Offset = "0x10A6774", VA = "0x10A6774")]
	public void FinishEstimatingVelocity()
	{
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0x10A6848", Offset = "0x10A6848", VA = "0x10A6848")]
	public Vector3 GetVelocityEstimate()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0x10A6910", Offset = "0x10A6910", VA = "0x10A6910")]
	public void ResetValues()
	{
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0x10A6A68", Offset = "0x10A6A68", VA = "0x10A6A68")]
	public Vector3 GetAngularVelocityEstimate()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0x10A6B30", Offset = "0x10A6B30", VA = "0x10A6B30")]
	public Vector3 GetAccelerationEstimate()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0x10A6C88", Offset = "0x10A6C88", VA = "0x10A6C88")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0x10A67BC", Offset = "0x10A67BC", VA = "0x10A67BC")]
	[IteratorStateMachine(typeof(<EstimateVelocityCoroutine>d__21))]
	private IEnumerator EstimateVelocityCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0x10A6D44", Offset = "0x10A6D44", VA = "0x10A6D44")]
	public VelocityEstimator()
	{
	}
}
[Token(Token = "0x20003D8")]
public class WeaponComboInterpreter : MonoBehaviour
{
	[Token(Token = "0x20003D9")]
	public class WeaponComboDiskRepresentation : GenericRepresentation
	{
		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string id;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string comboName;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string primaryWeaponName;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string secondaryWeaponName;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool showInPreparationScreen;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Sprite uiComboIcon;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Sprite uiStatIconPrimary;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Sprite uiStatIconSecondary;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject primaryWeapon;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject secondaryWeapon;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int orderInUI;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Dictionary<string, (string code, ModLoader.Mod mod)> itemOverrides;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Dictionary<string, (byte[] byteArray, ModLoader.Mod mod)> shapeOverrides;

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x10A7620", Offset = "0x10A7620", VA = "0x10A7620")]
		public WeaponComboDiskRepresentation(string code, string fileName, string id, ModLoader.Mod modReference)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x10A7770", Offset = "0x10A7770", VA = "0x10A7770")]
		public string GetLocalizedComboName()
		{
			return null;
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x10A77C8", Offset = "0x10A77C8", VA = "0x10A77C8")]
		public string GetLocalizedPrimaryWeaponName()
		{
			return null;
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x10A7820", Offset = "0x10A7820", VA = "0x10A7820")]
		public string GetLocalizedSecondaryWeaponName()
		{
			return null;
		}
	}

	[Token(Token = "0x20003DB")]
	[CompilerGenerated]
	private sealed class <ReadWeaponCombosFromDisk>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponComboInterpreter <>4__this;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DataCoroutine<Dictionary<string, (string code, ModLoader.Mod mod)>> <luaFilesRoutine>5__2;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DataCoroutine<Dictionary<string, (byte[] byteArray, ModLoader.Mod mod)>> <pngFilesRoutine>5__3;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<WeaponComboDiskRepresentation> <_tmpCombos>5__4;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<string>.Enumerator <>7__wrap4;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WeaponComboDiskRepresentation <_repre>5__6;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private DataCoroutine<Dictionary<string, (string code, ModLoader.Mod mod)>> <overrideFilesRoutine>5__7;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private DataCoroutine<Dictionary<string, (byte[] byteArray, ModLoader.Mod mod)>> <overrideShapesRoutine>5__8;

		[Token(Token = "0x17000213")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60013D5")]
			[Address(RVA = "0x10A867C", Offset = "0x10A867C", VA = "0x10A867C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0x10A86C4", Offset = "0x10A86C4", VA = "0x10A86C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x10A72C8", Offset = "0x10A72C8", VA = "0x10A72C8")]
		[DebuggerHidden]
		public <ReadWeaponCombosFromDisk>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x10A7900", Offset = "0x10A7900", VA = "0x10A7900", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x10A792C", Offset = "0x10A792C", VA = "0x10A792C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x10A862C", Offset = "0x10A862C", VA = "0x10A862C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x10A8684", Offset = "0x10A8684", VA = "0x10A8684", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WeaponComboDiskRepresentation[] weaponCombosOnDisk;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WeaponComboDiskRepresentation currentSelectedWeaponCombo;

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0x10A7254", Offset = "0x10A7254", VA = "0x10A7254")]
	[IteratorStateMachine(typeof(<ReadWeaponCombosFromDisk>d__3))]
	public IEnumerator ReadWeaponCombosFromDisk()
	{
		return null;
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0x10A72F0", Offset = "0x10A72F0", VA = "0x10A72F0")]
	public WeaponComboDiskRepresentation GetWeaponComboById(string id)
	{
		return null;
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0x10A73DC", Offset = "0x10A73DC", VA = "0x10A73DC")]
	private Sprite LoadSprite(Dictionary<string, (byte[] byteArray, ModLoader.Mod mod)> routine, string id, string name)
	{
		return null;
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0x10A7618", Offset = "0x10A7618", VA = "0x10A7618")]
	public WeaponComboInterpreter()
	{
	}
}
[Token(Token = "0x20003DE")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x17000215")]
	public static bool Initialized
	{
		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x10A8744", Offset = "0x10A8744", VA = "0x10A8744")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0x10A874C", Offset = "0x10A874C", VA = "0x10A874C")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x20003DF")]
public class TwitchIrcExample : MonoBehaviour
{
	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputField UsernameText;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField TokenText;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputField ChannelText;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text ChatText;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputField MessageText;

	[Token(Token = "0x60013DE")]
	[Address(RVA = "0x10A8754", Offset = "0x10A8754", VA = "0x10A8754")]
	private void Start()
	{
	}

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0x10A90B0", Offset = "0x10A90B0", VA = "0x10A90B0")]
	public void Connect()
	{
	}

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0x10A9478", Offset = "0x10A9478", VA = "0x10A9478")]
	public void MessageSend()
	{
	}

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0x10A9804", Offset = "0x10A9804", VA = "0x10A9804")]
	public void GoUrl(string url)
	{
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0x10A9810", Offset = "0x10A9810", VA = "0x10A9810")]
	private void OnServerMessage(string message)
	{
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0x10A98E8", Offset = "0x10A98E8", VA = "0x10A98E8")]
	private void OnChannelMessage(ChannelMessageEventArgs channelMessageArgs)
	{
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0x10A9BD0", Offset = "0x10A9BD0", VA = "0x10A9BD0")]
	private void OnUserJoined(UserJoinedEventArgs userJoinedArgs)
	{
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0x10A9CD8", Offset = "0x10A9CD8", VA = "0x10A9CD8")]
	private void OnUserLeft(UserLeftEventArgs userLeftArgs)
	{
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0x10A9DE0", Offset = "0x10A9DE0", VA = "0x10A9DE0")]
	private void OnExceptionThrown(Exception exeption)
	{
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0x10A9E38", Offset = "0x10A9E38", VA = "0x10A9E38")]
	public TwitchIrcExample()
	{
	}
}
[Token(Token = "0x20003E0")]
public class ADVRTwitchHelper : MonoBehaviour
{
	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int amountOfMsgs;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Queue<string> chatText;

	[Token(Token = "0x60013E8")]
	[Address(RVA = "0x10A9E40", Offset = "0x10A9E40", VA = "0x10A9E40")]
	private void Start()
	{
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0x10A9FDC", Offset = "0x10A9FDC", VA = "0x10A9FDC")]
	private void CheckLengthOfChat()
	{
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0x10AA050", Offset = "0x10AA050", VA = "0x10AA050")]
	public void GoUrl(string url)
	{
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0x10AA05C", Offset = "0x10AA05C", VA = "0x10AA05C")]
	private void OnServerMessage(string message)
	{
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0x10AA134", Offset = "0x10AA134", VA = "0x10AA134")]
	private void OnChannelMessage(ChannelMessageEventArgs channelMessageArgs)
	{
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0x10AA73C", Offset = "0x10AA73C", VA = "0x10AA73C")]
	private void OnUserJoined(UserJoinedEventArgs userJoinedArgs)
	{
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0x10AA844", Offset = "0x10AA844", VA = "0x10AA844")]
	private void OnUserLeft(UserLeftEventArgs userLeftArgs)
	{
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0x10AA94C", Offset = "0x10AA94C", VA = "0x10AA94C")]
	private void OnExceptionThrown(Exception exeption)
	{
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0x10AA9B8", Offset = "0x10AA9B8", VA = "0x10AA9B8")]
	public ADVRTwitchHelper()
	{
	}
}
[Token(Token = "0x20003E1")]
public delegate void UserJoined(UserJoinedEventArgs userJoinedArgs);
[Token(Token = "0x20003E2")]
public delegate void UserLeft(UserLeftEventArgs userLeftArgs);
[Token(Token = "0x20003E3")]
public delegate void ChannelMessage(ChannelMessageEventArgs channelMessageArgs);
[Token(Token = "0x20003E4")]
public delegate void ServerMessage(string message);
[Token(Token = "0x20003E5")]
public delegate void Connected();
[Token(Token = "0x20003E6")]
public delegate void ExceptionThrown(Exception exeption);
[Token(Token = "0x20003E7")]
public class TwitchIrc : MonoBehaviour
{
	[Token(Token = "0x20003E8")]
	[CompilerGenerated]
	private sealed class <Listen>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TwitchIrc <>4__this;

		[Token(Token = "0x17000216")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600141A")]
			[Address(RVA = "0x10ABBEC", Offset = "0x10ABBEC", VA = "0x10ABBEC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600141C")]
			[Address(RVA = "0x10ABC34", Offset = "0x10ABC34", VA = "0x10ABC34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x10AAF1C", Offset = "0x10AAF1C", VA = "0x10AAF1C")]
		[DebuggerHidden]
		public <Listen>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x10ABB38", Offset = "0x10ABB38", VA = "0x10ABB38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x10ABB3C", Offset = "0x10ABB3C", VA = "0x10ABB3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x10ABBF4", Offset = "0x10ABBF4", VA = "0x10ABBF4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UserJoined OnUserJoined;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UserLeft OnUserLeft;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ChannelMessage OnChannelMessage;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ServerMessage OnServerMessage;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Connected OnConnected;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ExceptionThrown OnExceptionThrown;

	[Token(Token = "0x40012E9")]
	private const string ServerName = "irc.twitch.tv";

	[Token(Token = "0x40012EA")]
	private const int ServerPort = 6667;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TwitchIrc Instance;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool ConnectOnAwake;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string Username;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string OauthToken;

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string Channel;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private TcpClient irc;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private NetworkStream stream;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string inputLine;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private StreamReader reader;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private StreamWriter writer;

	[NonSerialized]
	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool isConnected;

	[Token(Token = "0x6001409")]
	[Address(RVA = "0x10A9170", Offset = "0x10A9170", VA = "0x10A9170")]
	public void Connect()
	{
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0x10AACD0", Offset = "0x10AACD0", VA = "0x10AACD0")]
	public void Disconnect()
	{
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0x10AAD6C", Offset = "0x10AAD6C", VA = "0x10AAD6C")]
	public void JoinChannel()
	{
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0x10AAE50", Offset = "0x10AAE50", VA = "0x10AAE50")]
	public void LeaveChannel()
	{
	}

	[Token(Token = "0x600140D")]
	[Address(RVA = "0x10A9784", Offset = "0x10A9784", VA = "0x10A9784")]
	public void Message(string message)
	{
	}

	[Token(Token = "0x600140E")]
	[Address(RVA = "0x10AAEA8", Offset = "0x10AAEA8", VA = "0x10AAEA8")]
	[IteratorStateMachine(typeof(<Listen>d__24))]
	private IEnumerator Listen()
	{
		return null;
	}

	[Token(Token = "0x600140F")]
	[Address(RVA = "0x10AAF44", Offset = "0x10AAF44", VA = "0x10AAF44")]
	private void ParseData(string data)
	{
	}

	[Token(Token = "0x6001410")]
	[Address(RVA = "0x10AB62C", Offset = "0x10AB62C", VA = "0x10AB62C")]
	private string StripMessage(string message)
	{
		return null;
	}

	[Token(Token = "0x6001411")]
	[Address(RVA = "0x10AB494", Offset = "0x10AB494", VA = "0x10AB494")]
	private string JoinArray(string[] strArray, int startIndex)
	{
		return null;
	}

	[Token(Token = "0x6001412")]
	[Address(RVA = "0x10AAC94", Offset = "0x10AAC94", VA = "0x10AAC94")]
	private void Send(string message)
	{
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0x10ABA28", Offset = "0x10ABA28", VA = "0x10ABA28")]
	private void OnConnectedToServer()
	{
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0x10ABA2C", Offset = "0x10ABA2C", VA = "0x10ABA2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0x10ABB2C", Offset = "0x10ABB2C", VA = "0x10ABB2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0x10ABB30", Offset = "0x10ABB30", VA = "0x10ABB30")]
	public TwitchIrc()
	{
	}
}
namespace Irc
{
	[Token(Token = "0x20003E9")]
	public class UpdateUsersEventArgs : EventArgs
	{
		[Token(Token = "0x17000218")]
		public string Channel
		{
			[Token(Token = "0x600141D")]
			[Address(RVA = "0x10ABC3C", Offset = "0x10ABC3C", VA = "0x10ABC3C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600141E")]
			[Address(RVA = "0x10ABC44", Offset = "0x10ABC44", VA = "0x10ABC44")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x17000219")]
		public string[] UserList
		{
			[Token(Token = "0x600141F")]
			[Address(RVA = "0x10ABC4C", Offset = "0x10ABC4C", VA = "0x10ABC4C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001420")]
			[Address(RVA = "0x10ABC54", Offset = "0x10ABC54", VA = "0x10ABC54")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x10ABC5C", Offset = "0x10ABC5C", VA = "0x10ABC5C")]
		public UpdateUsersEventArgs(string Channel, string[] UserList)
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class UserJoinedEventArgs : EventArgs
	{
		[Token(Token = "0x1700021A")]
		public string Channel
		{
			[Token(Token = "0x6001422")]
			[Address(RVA = "0x10ABCE4", Offset = "0x10ABCE4", VA = "0x10ABCE4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001423")]
			[Address(RVA = "0x10ABCEC", Offset = "0x10ABCEC", VA = "0x10ABCEC")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		public string User
		{
			[Token(Token = "0x6001424")]
			[Address(RVA = "0x10ABCF4", Offset = "0x10ABCF4", VA = "0x10ABCF4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001425")]
			[Address(RVA = "0x10ABCFC", Offset = "0x10ABCFC", VA = "0x10ABCFC")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x10AB40C", Offset = "0x10AB40C", VA = "0x10AB40C")]
		public UserJoinedEventArgs(string Channel, string User)
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class UserLeftEventArgs : EventArgs
	{
		[Token(Token = "0x1700021C")]
		public string Channel
		{
			[Token(Token = "0x6001427")]
			[Address(RVA = "0x10ABD04", Offset = "0x10ABD04", VA = "0x10ABD04")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001428")]
			[Address(RVA = "0x10ABD0C", Offset = "0x10ABD0C", VA = "0x10ABD0C")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		public string User
		{
			[Token(Token = "0x6001429")]
			[Address(RVA = "0x10ABD14", Offset = "0x10ABD14", VA = "0x10ABD14")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600142A")]
			[Address(RVA = "0x10ABD1C", Offset = "0x10ABD1C", VA = "0x10ABD1C")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0x10AB5A4", Offset = "0x10AB5A4", VA = "0x10AB5A4")]
		public UserLeftEventArgs(string Channel, string User)
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class ChannelMessageEventArgs : EventArgs
	{
		[Token(Token = "0x1700021E")]
		public string Channel
		{
			[Token(Token = "0x600142C")]
			[Address(RVA = "0x10ABD24", Offset = "0x10ABD24", VA = "0x10ABD24")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600142D")]
			[Address(RVA = "0x10ABD2C", Offset = "0x10ABD2C", VA = "0x10ABD2C")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		public string From
		{
			[Token(Token = "0x600142E")]
			[Address(RVA = "0x10ABD34", Offset = "0x10ABD34", VA = "0x10ABD34")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600142F")]
			[Address(RVA = "0x10ABD3C", Offset = "0x10ABD3C", VA = "0x10ABD3C")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x17000220")]
		public string Message
		{
			[Token(Token = "0x6001430")]
			[Address(RVA = "0x10ABD44", Offset = "0x10ABD44", VA = "0x10ABD44")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001431")]
			[Address(RVA = "0x10ABD4C", Offset = "0x10ABD4C", VA = "0x10ABD4C")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0x10AB500", Offset = "0x10AB500", VA = "0x10AB500")]
		public ChannelMessageEventArgs(string Channel, string From, string Message)
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class StringEventArgs : EventArgs
	{
		[Token(Token = "0x17000221")]
		public string Result
		{
			[Token(Token = "0x6001433")]
			[Address(RVA = "0x10ABD54", Offset = "0x10ABD54", VA = "0x10ABD54")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001434")]
			[Address(RVA = "0x10ABD5C", Offset = "0x10ABD5C", VA = "0x10ABD5C")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0x10ABD64", Offset = "0x10ABD64", VA = "0x10ABD64")]
		public StringEventArgs(string s)
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0x10ABDD8", Offset = "0x10ABDD8", VA = "0x10ABDD8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003EE")]
	public class ExceptionEventArgs : EventArgs
	{
		[Token(Token = "0x17000222")]
		public Exception Exception
		{
			[Token(Token = "0x6001437")]
			[Address(RVA = "0x10ABDE0", Offset = "0x10ABDE0", VA = "0x10ABDE0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6001438")]
			[Address(RVA = "0x10ABDE8", Offset = "0x10ABDE8", VA = "0x10ABDE8")]
			[CompilerGenerated]
			internal set
			{
			}
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0x10ABDF0", Offset = "0x10ABDF0", VA = "0x10ABDF0")]
		public ExceptionEventArgs(Exception x)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0x10ABE64", Offset = "0x10ABE64", VA = "0x10ABE64", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace SFB
{
	[Token(Token = "0x20003EF")]
	public interface IStandaloneFileBrowser
	{
		[Token(Token = "0x600143B")]
		string[] OpenFilePanel(string title, string directory, ExtensionFilter[] extensions, bool multiselect);

		[Token(Token = "0x600143C")]
		string[] OpenFolderPanel(string title, string directory, bool multiselect);

		[Token(Token = "0x600143D")]
		string SaveFilePanel(string title, string directory, string defaultName, ExtensionFilter[] extensions);

		[Token(Token = "0x600143E")]
		void OpenFilePanelAsync(string title, string directory, ExtensionFilter[] extensions, bool multiselect, Action<string[]> cb);

		[Token(Token = "0x600143F")]
		void OpenFolderPanelAsync(string title, string directory, bool multiselect, Action<string[]> cb);

		[Token(Token = "0x6001440")]
		void SaveFilePanelAsync(string title, string directory, string defaultName, ExtensionFilter[] extensions, Action<string> cb);
	}
	[Token(Token = "0x20003F0")]
	public struct ExtensionFilter
	{
		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string Name;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string[] Extensions;

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x10ABE84", Offset = "0x10ABE84", VA = "0x10ABE84")]
		public ExtensionFilter(string filterName, params string[] filterExtensions)
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public class StandaloneFileBrowser
	{
		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IStandaloneFileBrowser _platformWrapper;

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x10ABEB4", Offset = "0x10ABEB4", VA = "0x10ABEB4")]
		static StandaloneFileBrowser()
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x10ABEB8", Offset = "0x10ABEB8", VA = "0x10ABEB8")]
		public static string[] OpenFilePanel(string title, string directory, string extension, bool multiselect)
		{
			return null;
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x10AC044", Offset = "0x10AC044", VA = "0x10AC044")]
		public static string[] OpenFilePanel(string title, string directory, ExtensionFilter[] extensions, bool multiselect)
		{
			return null;
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x10AC13C", Offset = "0x10AC13C", VA = "0x10AC13C")]
		public static void OpenFilePanelAsync(string title, string directory, string extension, bool multiselect, Action<string[]> cb)
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x10AC2D8", Offset = "0x10AC2D8", VA = "0x10AC2D8")]
		public static void OpenFilePanelAsync(string title, string directory, ExtensionFilter[] extensions, bool multiselect, Action<string[]> cb)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x10AC3DC", Offset = "0x10AC3DC", VA = "0x10AC3DC")]
		public static string[] OpenFolderPanel(string title, string directory, bool multiselect)
		{
			return null;
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x10AC4C8", Offset = "0x10AC4C8", VA = "0x10AC4C8")]
		public static void OpenFolderPanelAsync(string title, string directory, bool multiselect, Action<string[]> cb)
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x10AC5C4", Offset = "0x10AC5C4", VA = "0x10AC5C4")]
		public static string SaveFilePanel(string title, string directory, string defaultName, string extension)
		{
			return null;
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x10AC750", Offset = "0x10AC750", VA = "0x10AC750")]
		public static string SaveFilePanel(string title, string directory, string defaultName, ExtensionFilter[] extensions)
		{
			return null;
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x10AC84C", Offset = "0x10AC84C", VA = "0x10AC84C")]
		public static void SaveFilePanelAsync(string title, string directory, string defaultName, string extension, Action<string> cb)
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x10AC9E8", Offset = "0x10AC9E8", VA = "0x10AC9E8")]
		public static void SaveFilePanelAsync(string title, string directory, string defaultName, ExtensionFilter[] extensions, Action<string> cb)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x10ACAEC", Offset = "0x10ACAEC", VA = "0x10ACAEC")]
		public StandaloneFileBrowser()
		{
		}
	}
}
namespace RLD
{
	[Token(Token = "0x20003F2")]
	public class ObjectExtrudeGizmoDragEnd : IUndoRedoAction
	{
		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _wasExecuted;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool _destroyClones;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<GameObject> _targetParents;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<LocalTransformSnapshot> _undoTargetSnapshots;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<LocalTransformSnapshot> _redoTargetSnapshots;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> _extrudeClones;

		[Token(Token = "0x17000223")]
		public int NumTargets
		{
			[Token(Token = "0x600144E")]
			[Address(RVA = "0x10ACAF4", Offset = "0x10ACAF4", VA = "0x10ACAF4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x10ACB3C", Offset = "0x10ACB3C", VA = "0x10ACB3C")]
		public void SetTargetParents(IEnumerable<GameObject> targetParents)
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0x10ACBD4", Offset = "0x10ACBD4", VA = "0x10ACBD4")]
		public void TakeUndoTargetSnapshots()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0x10ACC0C", Offset = "0x10ACC0C", VA = "0x10ACC0C")]
		public void TakeRedoTargetSnapshots()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0x10ACC44", Offset = "0x10ACC44", VA = "0x10ACC44")]
		public void AddExtrudeClones(List<GameObject> extrudeClones)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0x10ACD88", Offset = "0x10ACD88", VA = "0x10ACD88")]
		public void AddExtrudeClone(GameObject extrudeClone)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0x10ACE84", Offset = "0x10ACE84", VA = "0x10ACE84", Slot = "4")]
		public void Execute()
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0x10ACF0C", Offset = "0x10ACF0C", VA = "0x10ACF0C", Slot = "5")]
		public void Undo()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0x10AD1CC", Offset = "0x10AD1CC", VA = "0x10AD1CC", Slot = "6")]
		public void Redo()
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0x10AD488", Offset = "0x10AD488", VA = "0x10AD488", Slot = "7")]
		public void OnRemovedFromUndoRedoStack()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0x10AD63C", Offset = "0x10AD63C", VA = "0x10AD63C")]
		public ObjectExtrudeGizmoDragEnd()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	public class GizmoArrowCap2DController : GizmoCap2DController
	{
		[Token(Token = "0x6001459")]
		[Address(RVA = "0x10AD774", Offset = "0x10AD774", VA = "0x10AD774")]
		public GizmoArrowCap2DController(GizmoCap2DControllerData controllerData)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0x10AD7D4", Offset = "0x10AD7D4", VA = "0x10AD7D4", Slot = "9")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0x10AD84C", Offset = "0x10AD84C", VA = "0x10AD84C", Slot = "10")]
		public override void UpdateTransforms()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0x10AD9DC", Offset = "0x10AD9DC", VA = "0x10AD9DC", Slot = "11")]
		public override void CapSlider2D(Vector2 sliderDirection, Vector2 sliderEndPt)
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0x10ADA74", Offset = "0x10ADA74", VA = "0x10ADA74", Slot = "12")]
		public override void CapSlider2DInvert(Vector2 sliderDirection, Vector2 sliderEndPt)
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0x10ADBD4", Offset = "0x10ADBD4", VA = "0x10ADBD4", Slot = "13")]
		public override float GetSliderAlignedRealLength()
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003F4")]
	public class GizmoCap2D : GizmoCap
	{
		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _quadIndex;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private QuadShape2D _quad;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _circleIndex;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CircleShape2D _circle;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _arrowIndex;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ConeShape2D _arrow;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GizmoTransform _transform;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GizmoOverrideColor _overrideFillColor;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GizmoOverrideColor _overrideBorderColor;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GizmoCap2DControllerData _controllerData;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IGizmoCap2DController[] _controllers;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GizmoCap2DLookAndFeel _lookAndFeel;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GizmoCap2DLookAndFeel _sharedLookAndFeel;

		[Token(Token = "0x17000224")]
		public Vector2 Position
		{
			[Token(Token = "0x600145F")]
			[Address(RVA = "0x10AD9C0", Offset = "0x10AD9C0", VA = "0x10AD9C0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001460")]
			[Address(RVA = "0x10ADA5C", Offset = "0x10ADA5C", VA = "0x10ADA5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6001461")]
			[Address(RVA = "0x10ADC58", Offset = "0x10ADC58", VA = "0x10ADC58")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000226")]
		public float RotationDegrees
		{
			[Token(Token = "0x6001462")]
			[Address(RVA = "0x10AD9A4", Offset = "0x10AD9A4", VA = "0x10AD9A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001463")]
			[Address(RVA = "0x10ADC78", Offset = "0x10ADC78", VA = "0x10ADC78")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public GizmoOverrideColor OverrideFillColor
		{
			[Token(Token = "0x6001464")]
			[Address(RVA = "0x10ADCC8", Offset = "0x10ADCC8", VA = "0x10ADCC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		public GizmoOverrideColor OverrideBorderColor
		{
			[Token(Token = "0x6001465")]
			[Address(RVA = "0x10ADCD0", Offset = "0x10ADCD0", VA = "0x10ADCD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		public IGizmoDragSession DragSession
		{
			[Token(Token = "0x6001466")]
			[Address(RVA = "0x10ADCD8", Offset = "0x10ADCD8", VA = "0x10ADCD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001467")]
			[Address(RVA = "0x10ADCF4", Offset = "0x10ADCF4", VA = "0x10ADCF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700022A")]
		public GizmoCap2DLookAndFeel LookAndFeel
		{
			[Token(Token = "0x6001468")]
			[Address(RVA = "0x10ADD10", Offset = "0x10ADD10", VA = "0x10ADD10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		public GizmoCap2DLookAndFeel SharedLookAndFeel
		{
			[Token(Token = "0x6001469")]
			[Address(RVA = "0x10ADD2C", Offset = "0x10ADD2C", VA = "0x10ADD2C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600146A")]
			[Address(RVA = "0x10ADD34", Offset = "0x10ADD34", VA = "0x10ADD34")]
			set
			{
			}
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0x10ADD3C", Offset = "0x10ADD3C", VA = "0x10ADD3C")]
		public GizmoCap2D(Gizmo gizmo, int handleId)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0x10AE95C", Offset = "0x10AE95C", VA = "0x10AE95C")]
		public void RegisterTransformAsDragTarget(IGizmoDragSession dragSession)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0x10AEA08", Offset = "0x10AEA08", VA = "0x10AEA08")]
		public void UnregisterTransformAsDragTarget(IGizmoDragSession dragSession)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0x10ADA44", Offset = "0x10ADA44", VA = "0x10ADA44")]
		public void AlignTransformAxis(int axisIndex, AxisSign axisSign, Vector2 axis)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x10AEB10", Offset = "0x10AEB10", VA = "0x10AEB10")]
		public float GetRealQuadWidth()
		{
			return default(float);
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x10AEB48", Offset = "0x10AEB48", VA = "0x10AEB48")]
		public float GetRealQuadHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x10AEB80", Offset = "0x10AEB80", VA = "0x10AEB80")]
		public float GetRealCircleRadius()
		{
			return default(float);
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x10AD934", Offset = "0x10AD934", VA = "0x10AD934")]
		public float GetRealArrowHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x10AD96C", Offset = "0x10AD96C", VA = "0x10AD96C")]
		public float GetRealArrowBaseRadius()
		{
			return default(float);
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0x10AEBB4", Offset = "0x10AEBB4", VA = "0x10AEBB4")]
		public void CapSlider2D(Vector2 sliderDirection, Vector2 sliderEndPt)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x10AECC4", Offset = "0x10AECC4", VA = "0x10AECC4")]
		public void CapSlider2DInvert(Vector2 sliderDirection, Vector2 sliderEndPt)
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x10AEDD4", Offset = "0x10AEDD4", VA = "0x10AEDD4", Slot = "12")]
		public override void Render(Camera camera)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x10AF1A0", Offset = "0x10AF1A0", VA = "0x10AF1A0")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x10AF318", Offset = "0x10AF318", VA = "0x10AF318", Slot = "13")]
		protected override void OnVisibilityStateChanged()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x10AF490", Offset = "0x10AF490", VA = "0x10AF490", Slot = "14")]
		protected override void OnHoverableStateChanged()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0x10AF4B4", Offset = "0x10AF4B4", VA = "0x10AF4B4")]
		private void OnGizmoPreUpdateBegin(Gizmo gizmo)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x10AF614", Offset = "0x10AF614", VA = "0x10AF614")]
		private void OnTransformChanged(GizmoTransform transform, GizmoTransform.ChangeData changeData)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x10AF718", Offset = "0x10AF718", VA = "0x10AF718")]
		private void OnGizmoPostEnabled(Gizmo gizmo)
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public class GizmoCap2DCollection
	{
		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<GizmoCap2D> _caps;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, GizmoCap2D> _handleIdToCap;

		[Token(Token = "0x1700022C")]
		public int Count
		{
			[Token(Token = "0x600147D")]
			[Address(RVA = "0x10AF71C", Offset = "0x10AF71C", VA = "0x10AF71C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700022D")]
		public GizmoCap2D this[int id]
		{
			[Token(Token = "0x600147E")]
			[Address(RVA = "0x10AF764", Offset = "0x10AF764", VA = "0x10AF764")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x10AF7BC", Offset = "0x10AF7BC", VA = "0x10AF7BC")]
		public bool Contains(GizmoCap2D cap)
		{
			return default(bool);
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x10AF820", Offset = "0x10AF820", VA = "0x10AF820")]
		public bool Contains(int capHandleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0x10AF878", Offset = "0x10AF878", VA = "0x10AF878")]
		public void Add(GizmoCap2D cap)
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0x10AF97C", Offset = "0x10AF97C", VA = "0x10AF97C")]
		public void Remove(GizmoCap2D cap)
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0x10AFA24", Offset = "0x10AFA24", VA = "0x10AFA24")]
		public void Make2DHoverPriorityLowerThan(Priority priority)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x10AFBB4", Offset = "0x10AFBB4", VA = "0x10AFBB4")]
		public void Make2DHoverPriorityHigherThan(Priority priority)
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x10AFD28", Offset = "0x10AFD28", VA = "0x10AFD28")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x10AFEBC", Offset = "0x10AFEBC", VA = "0x10AFEBC")]
		public void SetHoverable(bool hoverable)
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x10B0050", Offset = "0x10B0050", VA = "0x10B0050")]
		public void SetDragSession(IGizmoDragSession dragSession)
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x10B01B0", Offset = "0x10B01B0", VA = "0x10B01B0")]
		public void Render(Camera camera)
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x10B0308", Offset = "0x10B0308", VA = "0x10B0308")]
		public GizmoCap2DCollection()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public abstract class GizmoCap2DController : IGizmoCap2DController
	{
		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected GizmoCap2DControllerData _data;

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x10AD7A4", Offset = "0x10AD7A4", VA = "0x10AD7A4")]
		public GizmoCap2DController(GizmoCap2DControllerData controllerData)
		{
		}

		[Token(Token = "0x600148B")]
		public abstract void UpdateHandles();

		[Token(Token = "0x600148C")]
		public abstract void UpdateTransforms();

		[Token(Token = "0x600148D")]
		public abstract void CapSlider2D(Vector2 sliderDirection, Vector2 sliderEndPt);

		[Token(Token = "0x600148E")]
		public abstract void CapSlider2DInvert(Vector2 sliderDirection, Vector2 sliderEndPt);

		[Token(Token = "0x600148F")]
		public abstract float GetSliderAlignedRealLength();
	}
	[Token(Token = "0x20003F7")]
	public class GizmoCap2DControllerData
	{
		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gizmo Gizmo;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GizmoCap2D Cap;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GizmoHandle CapHandle;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public QuadShape2D Quad;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CircleShape2D Circle;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ConeShape2D Arrow;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int QuadIndex;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int CircleIndex;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int ArrowIndex;

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x10AE5FC", Offset = "0x10AE5FC", VA = "0x10AE5FC")]
		public GizmoCap2DControllerData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F8")]
	public class GizmoCap2DLookAndFeel
	{
		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GizmoFillMode2D _fillMode;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private GizmoCap2DType _capType;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _scale;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _circleRadius;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _quadWidth;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _quadHeight;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _arrowBaseRadius;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _arrowHeight;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _hoveredColor;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color _borderColor;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Color _hoveredBorderColor;

		[Token(Token = "0x1700022E")]
		public GizmoFillMode2D FillMode
		{
			[Token(Token = "0x6001491")]
			[Address(RVA = "0x10B03E0", Offset = "0x10B03E0", VA = "0x10B03E0")]
			get
			{
				return default(GizmoFillMode2D);
			}
			[Token(Token = "0x6001492")]
			[Address(RVA = "0x10B03E8", Offset = "0x10B03E8", VA = "0x10B03E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public GizmoCap2DType CapType
		{
			[Token(Token = "0x6001493")]
			[Address(RVA = "0x10B03F0", Offset = "0x10B03F0", VA = "0x10B03F0")]
			get
			{
				return default(GizmoCap2DType);
			}
			[Token(Token = "0x6001494")]
			[Address(RVA = "0x10B03F8", Offset = "0x10B03F8", VA = "0x10B03F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000230")]
		public float Scale
		{
			[Token(Token = "0x6001495")]
			[Address(RVA = "0x10B0400", Offset = "0x10B0400", VA = "0x10B0400")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001496")]
			[Address(RVA = "0x10B0408", Offset = "0x10B0408", VA = "0x10B0408")]
			set
			{
			}
		}

		[Token(Token = "0x17000231")]
		public float CircleRadius
		{
			[Token(Token = "0x6001497")]
			[Address(RVA = "0x10B0418", Offset = "0x10B0418", VA = "0x10B0418")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001498")]
			[Address(RVA = "0x10B0420", Offset = "0x10B0420", VA = "0x10B0420")]
			set
			{
			}
		}

		[Token(Token = "0x17000232")]
		public float QuadWidth
		{
			[Token(Token = "0x6001499")]
			[Address(RVA = "0x10B0428", Offset = "0x10B0428", VA = "0x10B0428")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600149A")]
			[Address(RVA = "0x10B0430", Offset = "0x10B0430", VA = "0x10B0430")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public float QuadHeight
		{
			[Token(Token = "0x600149B")]
			[Address(RVA = "0x10B0440", Offset = "0x10B0440", VA = "0x10B0440")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600149C")]
			[Address(RVA = "0x10B0448", Offset = "0x10B0448", VA = "0x10B0448")]
			set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public float ArrowBaseRadius
		{
			[Token(Token = "0x600149D")]
			[Address(RVA = "0x10B0458", Offset = "0x10B0458", VA = "0x10B0458")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600149E")]
			[Address(RVA = "0x10B0460", Offset = "0x10B0460", VA = "0x10B0460")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public float ArrowHeight
		{
			[Token(Token = "0x600149F")]
			[Address(RVA = "0x10B0470", Offset = "0x10B0470", VA = "0x10B0470")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014A0")]
			[Address(RVA = "0x10B0478", Offset = "0x10B0478", VA = "0x10B0478")]
			set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public Color Color
		{
			[Token(Token = "0x60014A1")]
			[Address(RVA = "0x10B0488", Offset = "0x10B0488", VA = "0x10B0488")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60014A2")]
			[Address(RVA = "0x10B0494", Offset = "0x10B0494", VA = "0x10B0494")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public Color HoveredColor
		{
			[Token(Token = "0x60014A3")]
			[Address(RVA = "0x10B04A0", Offset = "0x10B04A0", VA = "0x10B04A0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60014A4")]
			[Address(RVA = "0x10B04AC", Offset = "0x10B04AC", VA = "0x10B04AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public Color BorderColor
		{
			[Token(Token = "0x60014A5")]
			[Address(RVA = "0x10B04B8", Offset = "0x10B04B8", VA = "0x10B04B8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60014A6")]
			[Address(RVA = "0x10B04C4", Offset = "0x10B04C4", VA = "0x10B04C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public Color HoveredBorderColor
		{
			[Token(Token = "0x60014A7")]
			[Address(RVA = "0x10B04D0", Offset = "0x10B04D0", VA = "0x10B04D0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60014A8")]
			[Address(RVA = "0x10B04DC", Offset = "0x10B04DC", VA = "0x10B04DC")]
			set
			{
			}
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x10AE518", Offset = "0x10AE518", VA = "0x10AE518")]
		public GizmoCap2DLookAndFeel()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public enum GizmoCap2DType
	{
		[Token(Token = "0x4001333")]
		Quad,
		[Token(Token = "0x4001334")]
		Circle,
		[Token(Token = "0x4001335")]
		Arrow
	}
	[Token(Token = "0x20003FA")]
	public class GizmoCircleCap2DController : GizmoCap2DController
	{
		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x10AE634", Offset = "0x10AE634", VA = "0x10AE634")]
		public GizmoCircleCap2DController(GizmoCap2DControllerData controllerData)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x10B04E8", Offset = "0x10B04E8", VA = "0x10B04E8", Slot = "9")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x10B0560", Offset = "0x10B0560", VA = "0x10B0560", Slot = "10")]
		public override void UpdateTransforms()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x10B05E0", Offset = "0x10B05E0", VA = "0x10B05E0", Slot = "11")]
		public override void CapSlider2D(Vector2 sliderDirection, Vector2 sliderEndPt)
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x10B0734", Offset = "0x10B0734", VA = "0x10B0734", Slot = "12")]
		public override void CapSlider2DInvert(Vector2 sliderDirection, Vector2 sliderEndPt)
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x10B0890", Offset = "0x10B0890", VA = "0x10B0890", Slot = "13")]
		public override float GetSliderAlignedRealLength()
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003FB")]
	public class GizmoQuadCap2DController : GizmoCap2DController
	{
		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x10AE604", Offset = "0x10AE604", VA = "0x10AE604")]
		public GizmoQuadCap2DController(GizmoCap2DControllerData controllerData)
		{
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x10B08D8", Offset = "0x10B08D8", VA = "0x10B08D8", Slot = "9")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x10B0950", Offset = "0x10B0950", VA = "0x10B0950", Slot = "10")]
		public override void UpdateTransforms()
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x10B0A34", Offset = "0x10B0A34", VA = "0x10B0A34", Slot = "11")]
		public override void CapSlider2D(Vector2 sliderDirection, Vector2 sliderEndPt)
		{
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x10B0AE8", Offset = "0x10B0AE8", VA = "0x10B0AE8", Slot = "12")]
		public override void CapSlider2DInvert(Vector2 sliderDirection, Vector2 sliderEndPt)
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x10B0BA4", Offset = "0x10B0BA4", VA = "0x10B0BA4", Slot = "13")]
		public override float GetSliderAlignedRealLength()
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003FC")]
	public interface IGizmoCap2DController
	{
		[Token(Token = "0x60014B6")]
		void UpdateHandles();

		[Token(Token = "0x60014B7")]
		void UpdateTransforms();

		[Token(Token = "0x60014B8")]
		void CapSlider2D(Vector2 sliderDirection, Vector2 sliderEndPt);

		[Token(Token = "0x60014B9")]
		void CapSlider2DInvert(Vector2 sliderDirection, Vector2 sliderEndPt);

		[Token(Token = "0x60014BA")]
		float GetSliderAlignedRealLength();
	}
	[Token(Token = "0x20003FD")]
	public class GizmoBoxCap3DController : GizmoCap3DController
	{
		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x10B0BEC", Offset = "0x10B0BEC", VA = "0x10B0BEC")]
		public GizmoBoxCap3DController(GizmoCap3DControllerData controllerData)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x10B0C4C", Offset = "0x10B0C4C", VA = "0x10B0C4C", Slot = "9")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0x10B0D04", Offset = "0x10B0D04", VA = "0x10B0D04", Slot = "10")]
		public override void UpdateTransforms(float zoomFactor)
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0x10B0E48", Offset = "0x10B0E48", VA = "0x10B0E48", Slot = "11")]
		public override void CapSlider3D(Vector3 sliderDirection, Vector3 sliderEndPt, float zoomFactor)
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0x10B0F2C", Offset = "0x10B0F2C", VA = "0x10B0F2C", Slot = "12")]
		public override void CapSlider3DInvert(Vector3 sliderDirection, Vector3 sliderEndPt, float zoomFactor)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0x10B100C", Offset = "0x10B100C", VA = "0x10B100C", Slot = "13")]
		public override float GetSliderAlignedRealLength(float zoomFactor)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003FE")]
	public class GizmoCap3D : GizmoCap
	{
		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _coneIndex;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConeShape3D _cone;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _pyramidIndex;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PyramidShape3D _pyramid;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _boxIndex;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoxShape3D _box;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _sphereIndex;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SphereShape3D _sphere;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int _trPrismIndex;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TriangPrismShape3D _trPrism;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GizmoCap3DControllerData _controllerData;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IGizmoCap3DController[] _controllers;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GizmoTransform _transform;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GizmoOverrideColor _overrideColor;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GizmoCap3DLookAndFeel _lookAndFeel;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GizmoCap3DLookAndFeel _sharedLookAndFeel;

		[Token(Token = "0x1700023A")]
		public Vector3 Position
		{
			[Token(Token = "0x60014C1")]
			[Address(RVA = "0x10B0DA8", Offset = "0x10B0DA8", VA = "0x10B0DA8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60014C2")]
			[Address(RVA = "0x10B0F14", Offset = "0x10B0F14", VA = "0x10B0F14")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public Quaternion Rotation
		{
			[Token(Token = "0x60014C3")]
			[Address(RVA = "0x10B0DC8", Offset = "0x10B0DC8", VA = "0x10B0DC8")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60014C4")]
			[Address(RVA = "0x10B10C8", Offset = "0x10B10C8", VA = "0x10B10C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public GizmoOverrideColor OverrideColor
		{
			[Token(Token = "0x60014C5")]
			[Address(RVA = "0x10B11E8", Offset = "0x10B11E8", VA = "0x10B11E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023D")]
		public IGizmoDragSession DragSession
		{
			[Token(Token = "0x60014C6")]
			[Address(RVA = "0x10B11F0", Offset = "0x10B11F0", VA = "0x10B11F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C7")]
			[Address(RVA = "0x10B120C", Offset = "0x10B120C", VA = "0x10B120C")]
			set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public GizmoCap3DLookAndFeel LookAndFeel
		{
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x10B1228", Offset = "0x10B1228", VA = "0x10B1228")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023F")]
		public GizmoCap3DLookAndFeel SharedLookAndFeel
		{
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0x10B1244", Offset = "0x10B1244", VA = "0x10B1244")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014CA")]
			[Address(RVA = "0x10B124C", Offset = "0x10B124C", VA = "0x10B124C")]
			set
			{
			}
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x10B1254", Offset = "0x10B1254", VA = "0x10B1254")]
		public GizmoCap3D(Gizmo gizmo, int handleId)
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x10B1C54", Offset = "0x10B1C54", VA = "0x10B1C54")]
		public void RegisterTransformAsDragTarget(IGizmoDragSession dragSession)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x10B1D00", Offset = "0x10B1D00", VA = "0x10B1D00")]
		public void UnregisterTransformAsDragTarget(IGizmoDragSession dragSession)
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x10B0EFC", Offset = "0x10B0EFC", VA = "0x10B0EFC")]
		public void AlignTransformAxis(int axisIndex, AxisSign axisSign, Vector3 axis)
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x10B1B78", Offset = "0x10B1B78", VA = "0x10B1B78")]
		public void SetZoomFactorTransform(GizmoTransform transform)
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x10B1F00", Offset = "0x10B1F00", VA = "0x10B1F00")]
		public void CapSlider3D(Vector3 sliderDirection, Vector3 sliderEndPt)
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x10B20A0", Offset = "0x10B20A0", VA = "0x10B20A0")]
		public void CapSlider3DInvert(Vector3 sliderDirection, Vector3 sliderEndPt)
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0x10B21F4", Offset = "0x10B21F4", VA = "0x10B21F4")]
		public float GetSliderAlignedRealLength(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0x10B2054", Offset = "0x10B2054", VA = "0x10B2054")]
		public float GetZoomFactor(Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x10B22E4", Offset = "0x10B22E4", VA = "0x10B22E4")]
		public float GetRealConeHeight(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x10B2330", Offset = "0x10B2330", VA = "0x10B2330")]
		public float GetRealConeRadius(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0x10B237C", Offset = "0x10B237C", VA = "0x10B237C")]
		public float GetRealPyramidWidth(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0x10B23C8", Offset = "0x10B23C8", VA = "0x10B23C8")]
		public float GetRealPyramidDepth(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0x10B2414", Offset = "0x10B2414", VA = "0x10B2414")]
		public float GetRealPyramidHeight(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0x10B102C", Offset = "0x10B102C", VA = "0x10B102C")]
		public float GetRealBoxWidth(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0x10B2460", Offset = "0x10B2460", VA = "0x10B2460")]
		public float GetRealBoxHeight(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0x10B24AC", Offset = "0x10B24AC", VA = "0x10B24AC")]
		public float GetRealBoxDepth(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0x10B0DE8", Offset = "0x10B0DE8", VA = "0x10B0DE8")]
		public Vector3 GetRealBoxSize(float zoomFactor)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0x10B24F8", Offset = "0x10B24F8", VA = "0x10B24F8")]
		public float GetRealSphereRadius(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0x10B2544", Offset = "0x10B2544", VA = "0x10B2544")]
		public float GetRealTriPrismWidth(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0x10B2590", Offset = "0x10B2590", VA = "0x10B2590")]
		public float GetRealTriPrismHeight(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0x10B25DC", Offset = "0x10B25DC", VA = "0x10B25DC")]
		public float GetRealTriPrismDepth(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0x10B2628", Offset = "0x10B2628", VA = "0x10B2628")]
		public void ApplyZoomFactor(Camera camera)
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0x10B2740", Offset = "0x10B2740", VA = "0x10B2740", Slot = "12")]
		public override void Render(Camera camera)
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0x10B2BF8", Offset = "0x10B2BF8", VA = "0x10B2BF8")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x10B2D9C", Offset = "0x10B2D9C", VA = "0x10B2D9C", Slot = "13")]
		protected override void OnVisibilityStateChanged()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x10B2F40", Offset = "0x10B2F40", VA = "0x10B2F40", Slot = "14")]
		protected override void OnHoverableStateChanged()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x10B2F64", Offset = "0x10B2F64", VA = "0x10B2F64")]
		private void OnGizmoPreUpdateBegin(Gizmo gizmo)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x10B30F0", Offset = "0x10B30F0", VA = "0x10B30F0")]
		private void OnTransformChanged(GizmoTransform transform, GizmoTransform.ChangeData changeData)
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x10B3228", Offset = "0x10B3228", VA = "0x10B3228")]
		private void OnGizmoPostEnabled(Gizmo gizmo)
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x10B322C", Offset = "0x10B322C", VA = "0x10B322C")]
		private void OnGizmoPostDisabled(Gizmo gizmo)
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class GizmoCap3DCollection
	{
		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<GizmoCap3D> _caps;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, GizmoCap3D> _handleIdToCap;

		[Token(Token = "0x17000240")]
		public int Count
		{
			[Token(Token = "0x60014EA")]
			[Address(RVA = "0x10B3248", Offset = "0x10B3248", VA = "0x10B3248")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000241")]
		public GizmoCap3D this[int id]
		{
			[Token(Token = "0x60014EB")]
			[Address(RVA = "0x10B3290", Offset = "0x10B3290", VA = "0x10B3290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x10B32E8", Offset = "0x10B32E8", VA = "0x10B32E8")]
		public bool Contains(GizmoCap3D cap)
		{
			return default(bool);
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x10B334C", Offset = "0x10B334C", VA = "0x10B334C")]
		public bool Contains(int capHandleId)
		{
			return default(bool);
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x10B33A4", Offset = "0x10B33A4", VA = "0x10B33A4")]
		public void Add(GizmoCap3D cap)
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x10B34A8", Offset = "0x10B34A8", VA = "0x10B34A8")]
		public void Remove(GizmoCap3D cap)
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x10B3550", Offset = "0x10B3550", VA = "0x10B3550")]
		public void ApplyZoomFactor(Camera camera)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x10B36A0", Offset = "0x10B36A0", VA = "0x10B36A0")]
		public void SetZoomFactorTransform(GizmoTransform zoomFactorTransform)
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x10B3800", Offset = "0x10B3800", VA = "0x10B3800")]
		public void Make3DHoverPriorityLowerThan(Priority priority)
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x10B3990", Offset = "0x10B3990", VA = "0x10B3990")]
		public void Make3DHoverPriorityHigherThan(Priority priority)
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x10B3B04", Offset = "0x10B3B04", VA = "0x10B3B04")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x10B3C70", Offset = "0x10B3C70", VA = "0x10B3C70")]
		public List<GizmoCap3D> GetRenderSortedCaps(Camera renderCamera)
		{
			return null;
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x10B3DBC", Offset = "0x10B3DBC", VA = "0x10B3DBC")]
		public GizmoCap3DCollection()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public abstract class GizmoCap3DController : IGizmoCap3DController
	{
		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected GizmoCap3DControllerData _data;

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x10B0C1C", Offset = "0x10B0C1C", VA = "0x10B0C1C")]
		public GizmoCap3DController(GizmoCap3DControllerData controllerData)
		{
		}

		[Token(Token = "0x60014FA")]
		public abstract void UpdateHandles();

		[Token(Token = "0x60014FB")]
		public abstract void UpdateTransforms(float zoomFactor);

		[Token(Token = "0x60014FC")]
		public abstract void CapSlider3D(Vector3 sliderDirection, Vector3 sliderEndPt, float zoomFactor);

		[Token(Token = "0x60014FD")]
		public abstract void CapSlider3DInvert(Vector3 sliderDirection, Vector3 sliderEndPt, float zoomFactor);

		[Token(Token = "0x60014FE")]
		public abstract float GetSliderAlignedRealLength(float zoomFactor);
	}
	[Token(Token = "0x2000402")]
	public class GizmoCap3DControllerData
	{
		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gizmo Gizmo;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GizmoCap3D Cap;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GizmoHandle CapHandle;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ConeShape3D Cone;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PyramidShape3D Pyramid;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BoxShape3D Box;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SphereShape3D Sphere;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TriangPrismShape3D TrPrism;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int ConeIndex;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int PyramidIndex;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int BoxIndex;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int SphereIndex;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int TrPrismIndex;

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x10B1AF4", Offset = "0x10B1AF4", VA = "0x10B1AF4")]
		public GizmoCap3DControllerData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000403")]
	public class GizmoCap3DLookAndFeel
	{
		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GizmoCap3DType _capType;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private GizmoFillMode3D _fillMode;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GizmoShadeMode _shadeMode;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _scale;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _useZoomFactor;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _coneHeight;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _coneRadius;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _pyramidHeight;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _pyramidWidth;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _pyramidDepth;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _boxWidth;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _boxHeight;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _boxDepth;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _sphereRadius;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _trPrismWidth;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float _trPrismHeight;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float _trPrismDepth;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool _isSphereBorderVisible;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color _sphereBorderColor;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int _numSphereBorderPoints;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Color _hoveredColor;

		[Token(Token = "0x17000242")]
		public GizmoCap3DType CapType
		{
			[Token(Token = "0x6001500")]
			[Address(RVA = "0x10B3F28", Offset = "0x10B3F28", VA = "0x10B3F28")]
			get
			{
				return default(GizmoCap3DType);
			}
			[Token(Token = "0x6001501")]
			[Address(RVA = "0x10B3F30", Offset = "0x10B3F30", VA = "0x10B3F30")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public GizmoFillMode3D FillMode
		{
			[Token(Token = "0x6001502")]
			[Address(RVA = "0x10B3F38", Offset = "0x10B3F38", VA = "0x10B3F38")]
			get
			{
				return default(GizmoFillMode3D);
			}
			[Token(Token = "0x6001503")]
			[Address(RVA = "0x10B3F40", Offset = "0x10B3F40", VA = "0x10B3F40")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public GizmoShadeMode ShadeMode
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0x10B3F48", Offset = "0x10B3F48", VA = "0x10B3F48")]
			get
			{
				return default(GizmoShadeMode);
			}
			[Token(Token = "0x6001505")]
			[Address(RVA = "0x10B3F50", Offset = "0x10B3F50", VA = "0x10B3F50")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public float Scale
		{
			[Token(Token = "0x6001506")]
			[Address(RVA = "0x10B3F58", Offset = "0x10B3F58", VA = "0x10B3F58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001507")]
			[Address(RVA = "0x10B3F60", Offset = "0x10B3F60", VA = "0x10B3F60")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public bool UseZoomFactor
		{
			[Token(Token = "0x6001508")]
			[Address(RVA = "0x10B3F70", Offset = "0x10B3F70", VA = "0x10B3F70")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001509")]
			[Address(RVA = "0x10B3F78", Offset = "0x10B3F78", VA = "0x10B3F78")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public float ConeHeight
		{
			[Token(Token = "0x600150A")]
			[Address(RVA = "0x10B3F84", Offset = "0x10B3F84", VA = "0x10B3F84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600150B")]
			[Address(RVA = "0x10B3F8C", Offset = "0x10B3F8C", VA = "0x10B3F8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public float ConeRadius
		{
			[Token(Token = "0x600150C")]
			[Address(RVA = "0x10B3FA0", Offset = "0x10B3FA0", VA = "0x10B3FA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600150D")]
			[Address(RVA = "0x10B3FA8", Offset = "0x10B3FA8", VA = "0x10B3FA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public float PyramidHeight
		{
			[Token(Token = "0x600150E")]
			[Address(RVA = "0x10B3FBC", Offset = "0x10B3FBC", VA = "0x10B3FBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600150F")]
			[Address(RVA = "0x10B3FC4", Offset = "0x10B3FC4", VA = "0x10B3FC4")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public float PyramidWidth
		{
			[Token(Token = "0x6001510")]
			[Address(RVA = "0x10B3FD8", Offset = "0x10B3FD8", VA = "0x10B3FD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001511")]
			[Address(RVA = "0x10B3FE0", Offset = "0x10B3FE0", VA = "0x10B3FE0")]
			set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public float PyramidDepth
		{
			[Token(Token = "0x6001512")]
			[Address(RVA = "0x10B3FF4", Offset = "0x10B3FF4", VA = "0x10B3FF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001513")]
			[Address(RVA = "0x10B3FFC", Offset = "0x10B3FFC", VA = "0x10B3FFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public float BoxWidth
		{
			[Token(Token = "0x6001514")]
			[Address(RVA = "0x10B4010", Offset = "0x10B4010", VA = "0x10B4010")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001515")]
			[Address(RVA = "0x10B4018", Offset = "0x10B4018", VA = "0x10B4018")]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public float BoxHeight
		{
			[Token(Token = "0x6001516")]
			[Address(RVA = "0x10B402C", Offset = "0x10B402C", VA = "0x10B402C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001517")]
			[Address(RVA = "0x10B4034", Offset = "0x10B4034", VA = "0x10B4034")]
			set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public float BoxDepth
		{
			[Token(Token = "0x6001518")]
			[Address(RVA = "0x10B4048", Offset = "0x10B4048", VA = "0x10B4048")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001519")]
			[Address(RVA = "0x10B4050", Offset = "0x10B4050", VA = "0x10B4050")]
			set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public float SphereRadius
		{
			[Token(Token = "0x600151A")]
			[Address(RVA = "0x10B4064", Offset = "0x10B4064", VA = "0x10B4064")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600151B")]
			[Address(RVA = "0x10B406C", Offset = "0x10B406C", VA = "0x10B406C")]
			set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public float TrPrismWidth
		{
			[Token(Token = "0x600151C")]
			[Address(RVA = "0x10B4080", Offset = "0x10B4080", VA = "0x10B4080")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600151D")]
			[Address(RVA = "0x10B4088", Offset = "0x10B4088", VA = "0x10B4088")]
			set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public float TrPrismHeight
		{
			[Token(Token = "0x600151E")]
			[Address(RVA = "0x10B409C", Offset = "0x10B409C", VA = "0x10B409C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600151F")]
			[Address(RVA = "0x10B40A4", Offset = "0x10B40A4", VA = "0x10B40A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public float TrPrismDepth
		{
			[Token(Token = "0x6001520")]
			[Address(RVA = "0x10B40B8", Offset = "0x10B40B8", VA = "0x10B40B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001521")]
			[Address(RVA = "0x10B40C0", Offset = "0x10B40C0", VA = "0x10B40C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000253")]
		public bool IsSphereBorderVisible
		{
			[Token(Token = "0x6001522")]
			[Address(RVA = "0x10B40D4", Offset = "0x10B40D4", VA = "0x10B40D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001523")]
			[Address(RVA = "0x10B40DC", Offset = "0x10B40DC", VA = "0x10B40DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public Color SphereBorderColor
		{
			[Token(Token = "0x6001524")]
			[Address(RVA = "0x10B40E8", Offset = "0x10B40E8", VA = "0x10B40E8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001525")]
			[Address(RVA = "0x10B40F4", Offset = "0x10B40F4", VA = "0x10B40F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public int NumSphereBorderPoints
		{
			[Token(Token = "0x6001526")]
			[Address(RVA = "0x10B4100", Offset = "0x10B4100", VA = "0x10B4100")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001527")]
			[Address(RVA = "0x10B4108", Offset = "0x10B4108", VA = "0x10B4108")]
			set
			{
			}
		}

		[Token(Token = "0x17000256")]
		public Color Color
		{
			[Token(Token = "0x6001528")]
			[Address(RVA = "0x10B411C", Offset = "0x10B411C", VA = "0x10B411C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001529")]
			[Address(RVA = "0x10B4128", Offset = "0x10B4128", VA = "0x10B4128")]
			set
			{
			}
		}

		[Token(Token = "0x17000257")]
		public Color HoveredColor
		{
			[Token(Token = "0x600152A")]
			[Address(RVA = "0x10B4134", Offset = "0x10B4134", VA = "0x10B4134")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600152B")]
			[Address(RVA = "0x10B4140", Offset = "0x10B4140", VA = "0x10B4140")]
			set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public static float DefaultConeHeight
		{
			[Token(Token = "0x600152C")]
			[Address(RVA = "0x10B414C", Offset = "0x10B414C", VA = "0x10B414C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000259")]
		public static float DefaultConeRadius
		{
			[Token(Token = "0x600152D")]
			[Address(RVA = "0x10B4158", Offset = "0x10B4158", VA = "0x10B4158")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700025A")]
		public static float DefaultPyramidHeight
		{
			[Token(Token = "0x600152E")]
			[Address(RVA = "0x10B4160", Offset = "0x10B4160", VA = "0x10B4160")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700025B")]
		public static float DefaultPyramidWidth
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0x10B416C", Offset = "0x10B416C", VA = "0x10B416C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700025C")]
		public static float DefaultPyramidDepth
		{
			[Token(Token = "0x6001530")]
			[Address(RVA = "0x10B4178", Offset = "0x10B4178", VA = "0x10B4178")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0x10B1AFC", Offset = "0x10B1AFC", VA = "0x10B1AFC")]
		public GizmoCap3DLookAndFeel()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public enum GizmoCap3DType
	{
		[Token(Token = "0x400136E")]
		Cone,
		[Token(Token = "0x400136F")]
		Pyramid,
		[Token(Token = "0x4001370")]
		Box,
		[Token(Token = "0x4001371")]
		Sphere,
		[Token(Token = "0x4001372")]
		TriangPrism
	}
	[Token(Token = "0x2000405")]
	public class GizmoConeCap3DController : GizmoCap3DController
	{
		[Token(Token = "0x6001532")]
		[Address(RVA = "0x10B1B94", Offset = "0x10B1B94", VA = "0x10B1B94")]
		public GizmoConeCap3DController(GizmoCap3DControllerData controllerData)
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x10B4184", Offset = "0x10B4184", VA = "0x10B4184", Slot = "9")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0x10B423C", Offset = "0x10B423C", VA = "0x10B423C", Slot = "10")]
		public override void UpdateTransforms(float zoomFactor)
		{
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0x10B4300", Offset = "0x10B4300", VA = "0x10B4300", Slot = "11")]
		public override void CapSlider3D(Vector3 sliderDirection, Vector3 sliderEndPt, float zoomFactor)
		{
		}

		[Token(Token = "0x6001536")]
		[Address(RVA = "0x10B4378", Offset = "0x10B4378", VA = "0x10B4378", Slot = "12")]
		public override void CapSlider3DInvert(Vector3 sliderDirection, Vector3 sliderEndPt, float zoomFactor)
		{
		}

		[Token(Token = "0x6001537")]
		[Address(RVA = "0x10B4448", Offset = "0x10B4448", VA = "0x10B4448", Slot = "13")]
		public override float GetSliderAlignedRealLength(float zoomFactor)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000406")]
	public class GizmoPyramidCap3DController : GizmoCap3DController
	{
		[Token(Token = "0x6001538")]
		[Address(RVA = "0x10B1BC4", Offset = "0x10B1BC4", VA = "0x10B1BC4")]
		public GizmoPyramidCap3DController(GizmoCap3DControllerData controllerData)
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x10B4468", Offset = "0x10B4468", VA = "0x10B4468", Slot = "9")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x10B4520", Offset = "0x10B4520", VA = "0x10B4520", Slot = "10")]
		public override void UpdateTransforms(float zoomFactor)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x10B460C", Offset = "0x10B460C", VA = "0x10B460C", Slot = "11")]
		public override void CapSlider3D(Vector3 sliderDirection, Vector3 sliderEndPt, float zoomFactor)
		{
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x10B4684", Offset = "0x10B4684", VA = "0x10B4684", Slot = "12")]
		public override void CapSlider3DInvert(Vector3 sliderDirection, Vector3 sliderEndPt, float zoomFactor)
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x10B4754", Offset = "0x10B4754", VA = "0x10B4754", Slot = "13")]
		public override float GetSliderAlignedRealLength(float zoomFactor)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000407")]
	public class GizmoSphereCap3DController : GizmoCap3DController
	{
		[Token(Token = "0x600153E")]
		[Address(RVA = "0x10B1BF4", Offset = "0x10B1BF4", VA = "0x10B1BF4")]
		public GizmoSphereCap3DController(GizmoCap3DControllerData controllerData)
		{
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0x10B4774", Offset = "0x10B4774", VA = "0x10B4774", Slot = "9")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0x10B482C", Offset = "0x10B482C", VA = "0x10B482C", Slot = "10")]
		public override void UpdateTransforms(float zoomFactor)
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x10B48AC", Offset = "0x10B48AC", VA = "0x10B48AC", Slot = "11")]
		public override void CapSlider3D(Vector3 sliderDirection, Vector3 sliderEndPt, float zoomFactor)
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0x10B4950", Offset = "0x10B4950", VA = "0x10B4950", Slot = "12")]
		public override void CapSlider3DInvert(Vector3 sliderDirection, Vector3 sliderEndPt, float zoomFactor)
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0x10B4A0C", Offset = "0x10B4A0C", VA = "0x10B4A0C", Slot = "13")]
		public override float GetSliderAlignedRealLength(float zoomFactor)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000408")]
	public class GizmoTriPrismCap3DController : GizmoCap3DController
	{
		[Token(Token = "0x6001544")]
		[Address(RVA = "0x10B1C24", Offset = "0x10B1C24", VA = "0x10B1C24")]
		public GizmoTriPrismCap3DController(GizmoCap3DControllerData controllerData)
		{
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0x10B4A34", Offset = "0x10B4A34", VA = "0x10B4A34", Slot = "9")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x10B4AEC", Offset = "0x10B4AEC", VA = "0x10B4AEC", Slot = "10")]
		public override void UpdateTransforms(float zoomFactor)
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x10B4BD8", Offset = "0x10B4BD8", VA = "0x10B4BD8", Slot = "11")]
		public override void CapSlider3D(Vector3 sliderDirection, Vector3 sliderEndPt, float zoomFactor)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x10B4CCC", Offset = "0x10B4CCC", VA = "0x10B4CCC", Slot = "12")]
		public override void CapSlider3DInvert(Vector3 sliderDirection, Vector3 sliderEndPt, float zoomFactor)
		{
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0x10B4DF0", Offset = "0x10B4DF0", VA = "0x10B4DF0", Slot = "13")]
		public override float GetSliderAlignedRealLength(float zoomFactor)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000409")]
	public interface IGizmoCap3DController
	{
		[Token(Token = "0x600154A")]
		void UpdateHandles();

		[Token(Token = "0x600154B")]
		void UpdateTransforms(float zoomFactor);

		[Token(Token = "0x600154C")]
		void CapSlider3D(Vector3 sliderDirection, Vector3 sliderEndPt, float zoomFactor);

		[Token(Token = "0x600154D")]
		void CapSlider3DInvert(Vector3 sliderDirection, Vector3 sliderEndPt, float zoomFactor);

		[Token(Token = "0x600154E")]
		float GetSliderAlignedRealLength(float zoomFactor);
	}
	[Token(Token = "0x200040A")]
	public abstract class GizmoCap : IGizmoCap
	{
		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Gizmo _gizmo;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GizmoHandle _handle;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isVisible;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _isHoverable;

		[Token(Token = "0x1700025D")]
		protected GizmoHandle Handle
		{
			[Token(Token = "0x600154F")]
			[Address(RVA = "0x10B4E10", Offset = "0x10B4E10", VA = "0x10B4E10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025E")]
		public Gizmo Gizmo
		{
			[Token(Token = "0x6001550")]
			[Address(RVA = "0x10B4E18", Offset = "0x10B4E18", VA = "0x10B4E18", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		public int HandleId
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0x10AF184", Offset = "0x10AF184", VA = "0x10AF184", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000260")]
		public bool IsVisible
		{
			[Token(Token = "0x6001552")]
			[Address(RVA = "0x10B4E20", Offset = "0x10B4E20", VA = "0x10B4E20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000261")]
		public bool IsHoverable
		{
			[Token(Token = "0x6001553")]
			[Address(RVA = "0x10B4E28", Offset = "0x10B4E28", VA = "0x10B4E28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000262")]
		public bool IsHovered
		{
			[Token(Token = "0x6001554")]
			[Address(RVA = "0x10B4E30", Offset = "0x10B4E30", VA = "0x10B4E30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000263")]
		public Priority HoverPriority3D
		{
			[Token(Token = "0x6001555")]
			[Address(RVA = "0x10B3974", Offset = "0x10B3974", VA = "0x10B3974", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000264")]
		public Priority HoverPriority2D
		{
			[Token(Token = "0x6001556")]
			[Address(RVA = "0x10AFB98", Offset = "0x10AFB98", VA = "0x10AFB98", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000265")]
		public Priority GenericHoverPriority
		{
			[Token(Token = "0x6001557")]
			[Address(RVA = "0x10B4E68", Offset = "0x10B4E68", VA = "0x10B4E68", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x10AE58C", Offset = "0x10AE58C", VA = "0x10AE58C")]
		public GizmoCap(Gizmo gizmo, int handleId)
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0x10AFE94", Offset = "0x10AFE94", VA = "0x10AFE94", Slot = "10")]
		public void SetVisible(bool isVisible)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0x10B0028", Offset = "0x10B0028", VA = "0x10B0028", Slot = "9")]
		public void SetHoverable(bool isHoverable)
		{
		}

		[Token(Token = "0x600155B")]
		public abstract void Render(Camera camera);

		[Token(Token = "0x600155C")]
		protected abstract void OnVisibilityStateChanged();

		[Token(Token = "0x600155D")]
		protected abstract void OnHoverableStateChanged();
	}
	[Token(Token = "0x200040B")]
	public interface IGizmoCap
	{
		[Token(Token = "0x17000266")]
		Gizmo Gizmo
		{
			[Token(Token = "0x600155E")]
			get;
		}

		[Token(Token = "0x17000267")]
		int HandleId
		{
			[Token(Token = "0x600155F")]
			get;
		}

		[Token(Token = "0x17000268")]
		Priority HoverPriority3D
		{
			[Token(Token = "0x6001560")]
			get;
		}

		[Token(Token = "0x17000269")]
		Priority HoverPriority2D
		{
			[Token(Token = "0x6001561")]
			get;
		}

		[Token(Token = "0x1700026A")]
		Priority GenericHoverPriority
		{
			[Token(Token = "0x6001562")]
			get;
		}

		[Token(Token = "0x6001563")]
		void SetHoverable(bool isHoverable);

		[Token(Token = "0x6001564")]
		void SetVisible(bool isVisible);

		[Token(Token = "0x6001565")]
		void Render(Camera camera);
	}
	[Token(Token = "0x200040C")]
	public enum GizmoDimension
	{
		[Token(Token = "0x4001378")]
		None,
		[Token(Token = "0x4001379")]
		Dim2D,
		[Token(Token = "0x400137A")]
		Dim3D
	}
	[Token(Token = "0x200040D")]
	public struct GizmoDragInfo
	{
		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isDragged;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private int _handleId;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Vector3 _dragBeginPoint;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GizmoDragChannel _dragChannel;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GizmoDimension _handleDimension;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 _totalOffset;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion _totalRotation;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _totalScale;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _relativeOffset;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _relativeRotation;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 _relativeScale;

		[Token(Token = "0x1700026B")]
		public bool IsDragged
		{
			[Token(Token = "0x6001566")]
			[Address(RVA = "0x10B4E84", Offset = "0x10B4E84", VA = "0x10B4E84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001567")]
			[Address(RVA = "0x10B4E8C", Offset = "0x10B4E8C", VA = "0x10B4E8C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public int HandleId
		{
			[Token(Token = "0x6001568")]
			[Address(RVA = "0x10B4E98", Offset = "0x10B4E98", VA = "0x10B4E98")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001569")]
			[Address(RVA = "0x10B4EA0", Offset = "0x10B4EA0", VA = "0x10B4EA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public Vector3 DragBeginPoint
		{
			[Token(Token = "0x600156A")]
			[Address(RVA = "0x10B4EA8", Offset = "0x10B4EA8", VA = "0x10B4EA8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600156B")]
			[Address(RVA = "0x10B4EB4", Offset = "0x10B4EB4", VA = "0x10B4EB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700026E")]
		public GizmoDragChannel DragChannel
		{
			[Token(Token = "0x600156C")]
			[Address(RVA = "0x10B4EC0", Offset = "0x10B4EC0", VA = "0x10B4EC0")]
			get
			{
				return default(GizmoDragChannel);
			}
			[Token(Token = "0x600156D")]
			[Address(RVA = "0x10B4EC8", Offset = "0x10B4EC8", VA = "0x10B4EC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public GizmoDimension HandleDimension
		{
			[Token(Token = "0x600156E")]
			[Address(RVA = "0x10B4ED0", Offset = "0x10B4ED0", VA = "0x10B4ED0")]
			get
			{
				return default(GizmoDimension);
			}
			[Token(Token = "0x600156F")]
			[Address(RVA = "0x10B4ED8", Offset = "0x10B4ED8", VA = "0x10B4ED8")]
			set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public Vector3 TotalOffset
		{
			[Token(Token = "0x6001570")]
			[Address(RVA = "0x10B4EE0", Offset = "0x10B4EE0", VA = "0x10B4EE0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001571")]
			[Address(RVA = "0x10B4EEC", Offset = "0x10B4EEC", VA = "0x10B4EEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000271")]
		public Quaternion TotalRotation
		{
			[Token(Token = "0x6001572")]
			[Address(RVA = "0x10B4EF8", Offset = "0x10B4EF8", VA = "0x10B4EF8")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001573")]
			[Address(RVA = "0x10B4F04", Offset = "0x10B4F04", VA = "0x10B4F04")]
			set
			{
			}
		}

		[Token(Token = "0x17000272")]
		public Vector3 TotalScale
		{
			[Token(Token = "0x6001574")]
			[Address(RVA = "0x10B4F10", Offset = "0x10B4F10", VA = "0x10B4F10")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001575")]
			[Address(RVA = "0x10B4F1C", Offset = "0x10B4F1C", VA = "0x10B4F1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public Vector3 RelativeOffset
		{
			[Token(Token = "0x6001576")]
			[Address(RVA = "0x10B4F28", Offset = "0x10B4F28", VA = "0x10B4F28")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001577")]
			[Address(RVA = "0x10B4F34", Offset = "0x10B4F34", VA = "0x10B4F34")]
			set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public Quaternion RelativeRotation
		{
			[Token(Token = "0x6001578")]
			[Address(RVA = "0x10B4F40", Offset = "0x10B4F40", VA = "0x10B4F40")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001579")]
			[Address(RVA = "0x10B4F4C", Offset = "0x10B4F4C", VA = "0x10B4F4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public Vector3 RelativeScale
		{
			[Token(Token = "0x600157A")]
			[Address(RVA = "0x10B4F58", Offset = "0x10B4F58", VA = "0x10B4F58")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600157B")]
			[Address(RVA = "0x10B4F64", Offset = "0x10B4F64", VA = "0x10B4F64")]
			set
			{
			}
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0x10B4F70", Offset = "0x10B4F70", VA = "0x10B4F70")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public enum GizmoFillMode2D
	{
		[Token(Token = "0x4001387")]
		Filled,
		[Token(Token = "0x4001388")]
		Border,
		[Token(Token = "0x4001389")]
		FilledAndBorder
	}
	[Token(Token = "0x200040F")]
	public enum GizmoFillMode3D
	{
		[Token(Token = "0x400138B")]
		Filled,
		[Token(Token = "0x400138C")]
		Wire
	}
	[Token(Token = "0x2000410")]
	public struct GizmoHoverInfo
	{
		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _isHovered;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private int _handleId;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private GizmoDimension _handleDimension;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Vector3 _hoverPoint;

		[Token(Token = "0x17000276")]
		public bool IsHovered
		{
			[Token(Token = "0x600157D")]
			[Address(RVA = "0x10B5080", Offset = "0x10B5080", VA = "0x10B5080")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600157E")]
			[Address(RVA = "0x10B5088", Offset = "0x10B5088", VA = "0x10B5088")]
			set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public int HandleId
		{
			[Token(Token = "0x600157F")]
			[Address(RVA = "0x10B5094", Offset = "0x10B5094", VA = "0x10B5094")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001580")]
			[Address(RVA = "0x10B509C", Offset = "0x10B509C", VA = "0x10B509C")]
			set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public GizmoDimension HandleDimension
		{
			[Token(Token = "0x6001581")]
			[Address(RVA = "0x10B50A4", Offset = "0x10B50A4", VA = "0x10B50A4")]
			get
			{
				return default(GizmoDimension);
			}
			[Token(Token = "0x6001582")]
			[Address(RVA = "0x10B50AC", Offset = "0x10B50AC", VA = "0x10B50AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public Vector3 HoverPoint
		{
			[Token(Token = "0x6001583")]
			[Address(RVA = "0x10B50B4", Offset = "0x10B50B4", VA = "0x10B50B4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001584")]
			[Address(RVA = "0x10B50C0", Offset = "0x10B50C0", VA = "0x10B50C0")]
			set
			{
			}
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x10B50CC", Offset = "0x10B50CC", VA = "0x10B50CC")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public enum GizmoLine2DType
	{
		[Token(Token = "0x4001392")]
		Thin,
		[Token(Token = "0x4001393")]
		Box
	}
	[Token(Token = "0x2000412")]
	public enum GizmoLine3DType
	{
		[Token(Token = "0x4001395")]
		Thin,
		[Token(Token = "0x4001396")]
		Box,
		[Token(Token = "0x4001397")]
		Cylinder
	}
	[Token(Token = "0x2000413")]
	public enum GizmoMultiAxisScaleMode
	{
		[Token(Token = "0x4001399")]
		DoubleAxis,
		[Token(Token = "0x400139A")]
		Uniform
	}
	[Token(Token = "0x2000414")]
	public class GizmoOverrideColor
	{
		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _isActive;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Color _color;

		[Token(Token = "0x1700027A")]
		public bool IsActive
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0x10B5134", Offset = "0x10B5134", VA = "0x10B5134")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001587")]
			[Address(RVA = "0x10B513C", Offset = "0x10B513C", VA = "0x10B513C")]
			set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		public Color Color
		{
			[Token(Token = "0x6001588")]
			[Address(RVA = "0x10B5148", Offset = "0x10B5148", VA = "0x10B5148")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001589")]
			[Address(RVA = "0x10B5154", Offset = "0x10B5154", VA = "0x10B5154")]
			set
			{
			}
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0x10AE510", Offset = "0x10AE510", VA = "0x10AE510")]
		public GizmoOverrideColor()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public enum GizmoPlane2DType
	{
		[Token(Token = "0x400139E")]
		Quad,
		[Token(Token = "0x400139F")]
		Circle,
		[Token(Token = "0x40013A0")]
		Polygon
	}
	[Token(Token = "0x2000416")]
	public enum GizmoPlane3DType
	{
		[Token(Token = "0x40013A2")]
		Quad,
		[Token(Token = "0x40013A3")]
		RATriangle,
		[Token(Token = "0x40013A4")]
		Circle
	}
	[Token(Token = "0x2000417")]
	public enum GizmoShadeMode
	{
		[Token(Token = "0x40013A6")]
		Lit,
		[Token(Token = "0x40013A7")]
		Flat
	}
	[Token(Token = "0x2000418")]
	public enum GizmoSnapMode
	{
		[Token(Token = "0x40013A9")]
		Relative,
		[Token(Token = "0x40013AA")]
		Absolute
	}
	[Token(Token = "0x2000419")]
	public enum GizmoSpace
	{
		[Token(Token = "0x40013AC")]
		Global,
		[Token(Token = "0x40013AD")]
		Local
	}
	[Token(Token = "0x200041A")]
	public delegate void GizmoEntityTransformChangedHandler(GizmoTransform transform, GizmoTransform.ChangeData changeData);
	[Token(Token = "0x200041B")]
	public class GizmoTransform
	{
		[Token(Token = "0x200041C")]
		public enum ChangeReason
		{
			[Token(Token = "0x40013C0")]
			TRSChange,
			[Token(Token = "0x40013C1")]
			ParentChange
		}

		[Token(Token = "0x200041D")]
		public struct ChangeData
		{
			[Token(Token = "0x40013C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ChangeReason ChangeReason;

			[Token(Token = "0x40013C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public GizmoDimension TRSDimension;

			[Token(Token = "0x60015E1")]
			[Address(RVA = "0x10B8C8C", Offset = "0x10B8C8C", VA = "0x10B8C8C")]
			public ChangeData(ChangeReason changeReason, GizmoDimension trsDimension)
			{
			}
		}

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _firingChanged3DEvent;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _firingChanged2DEvent;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 _position3D;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _localPosition3D;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion _rotation3D;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion _localRotation3D;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector2 _position2D;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector2 _localPosition2D;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _rotation2DDegrees;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion _rotation2D;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _localRotation2DDegrees;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion _localRotation2D;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] _axes3D;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector2[] _axes2D;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GizmoTransform _parent;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<GizmoTransform> _children;

		[Token(Token = "0x1700027C")]
		public bool CanChange3D
		{
			[Token(Token = "0x6001591")]
			[Address(RVA = "0x10B52AC", Offset = "0x10B52AC", VA = "0x10B52AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027D")]
		public bool CanChange2D
		{
			[Token(Token = "0x6001592")]
			[Address(RVA = "0x10B52BC", Offset = "0x10B52BC", VA = "0x10B52BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027E")]
		public GizmoTransform Parent
		{
			[Token(Token = "0x6001593")]
			[Address(RVA = "0x10B52CC", Offset = "0x10B52CC", VA = "0x10B52CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027F")]
		public int NumChildren
		{
			[Token(Token = "0x6001594")]
			[Address(RVA = "0x10B52D4", Offset = "0x10B52D4", VA = "0x10B52D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000280")]
		public List<GizmoTransform> Children
		{
			[Token(Token = "0x6001595")]
			[Address(RVA = "0x10B531C", Offset = "0x10B531C", VA = "0x10B531C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000281")]
		public Vector3 Right3D
		{
			[Token(Token = "0x6001596")]
			[Address(RVA = "0x10B5398", Offset = "0x10B5398", VA = "0x10B5398")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000282")]
		public Vector3 Up3D
		{
			[Token(Token = "0x6001597")]
			[Address(RVA = "0x10B53C4", Offset = "0x10B53C4", VA = "0x10B53C4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000283")]
		public Vector3 Look3D
		{
			[Token(Token = "0x6001598")]
			[Address(RVA = "0x10B53F4", Offset = "0x10B53F4", VA = "0x10B53F4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000284")]
		public Vector2 Right2D
		{
			[Token(Token = "0x6001599")]
			[Address(RVA = "0x10B5424", Offset = "0x10B5424", VA = "0x10B5424")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000285")]
		public Vector2 Up2D
		{
			[Token(Token = "0x600159A")]
			[Address(RVA = "0x10B544C", Offset = "0x10B544C", VA = "0x10B544C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000286")]
		public Vector3 Position3D
		{
			[Token(Token = "0x600159B")]
			[Address(RVA = "0x10B5478", Offset = "0x10B5478", VA = "0x10B5478")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600159C")]
			[Address(RVA = "0x10B1078", Offset = "0x10B1078", VA = "0x10B1078")]
			set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public Vector2 Position2D
		{
			[Token(Token = "0x600159D")]
			[Address(RVA = "0x10B5490", Offset = "0x10B5490", VA = "0x10B5490")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600159E")]
			[Address(RVA = "0x10ADC1C", Offset = "0x10ADC1C", VA = "0x10ADC1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public Quaternion Rotation3D
		{
			[Token(Token = "0x600159F")]
			[Address(RVA = "0x10B54A0", Offset = "0x10B54A0", VA = "0x10B54A0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60015A0")]
			[Address(RVA = "0x10B10E0", Offset = "0x10B10E0", VA = "0x10B10E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public Quaternion Rotation2D
		{
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0x10B54D0", Offset = "0x10B54D0", VA = "0x10B54D0")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700028A")]
		public float Rotation2DDegrees
		{
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0x10B54DC", Offset = "0x10B54DC", VA = "0x10B54DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0x10ADCAC", Offset = "0x10ADCAC", VA = "0x10ADCAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public Vector3 LocalPosition3D
		{
			[Token(Token = "0x60015A4")]
			[Address(RVA = "0x10B5570", Offset = "0x10B5570", VA = "0x10B5570")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0x10B557C", Offset = "0x10B557C", VA = "0x10B557C")]
			set
			{
			}
		}

		[Token(Token = "0x1700028C")]
		public Vector2 LocalPosition2D
		{
			[Token(Token = "0x60015A6")]
			[Address(RVA = "0x10B55D8", Offset = "0x10B55D8", VA = "0x10B55D8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0x10B55E0", Offset = "0x10B55E0", VA = "0x10B55E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public Quaternion LocalRotation3D
		{
			[Token(Token = "0x60015A8")]
			[Address(RVA = "0x10B5624", Offset = "0x10B5624", VA = "0x10B5624")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0x10B5630", Offset = "0x10B5630", VA = "0x10B5630")]
			set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public Quaternion LocalRotation2D
		{
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0x10B575C", Offset = "0x10B575C", VA = "0x10B575C")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700028F")]
		public float LocalRotation2DDegrees
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0x10B5768", Offset = "0x10B5768", VA = "0x10B5768")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0x10B5770", Offset = "0x10B5770", VA = "0x10B5770")]
			set
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event GizmoEntityTransformChangedHandler Changed
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0x10AE8C0", Offset = "0x10AE8C0", VA = "0x10AE8C0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001590")]
			[Address(RVA = "0x10B5210", Offset = "0x10B5210", VA = "0x10B5210")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x10AE3B0", Offset = "0x10AE3B0", VA = "0x10AE3B0")]
		public GizmoTransform()
		{
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x10B5B28", Offset = "0x10B5B28", VA = "0x10B5B28")]
		public static List<GizmoTransform> FilterParentsOnly(IEnumerable<GizmoTransform> transforms)
		{
			return null;
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x10B61C4", Offset = "0x10B61C4", VA = "0x10B61C4")]
		public PlaneQuadrantId Get3DQuadrantFacingCamera(PlaneId planeId, Camera camera)
		{
			return default(PlaneQuadrantId);
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x10B63C0", Offset = "0x10B63C0", VA = "0x10B63C0")]
		public void Rotate3D(Quaternion rotation)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x10B643C", Offset = "0x10B643C", VA = "0x10B643C")]
		public void Rotate2D(float rotation)
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x10B645C", Offset = "0x10B645C", VA = "0x10B645C")]
		public void Rotate2D(Quaternion rotation)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x10B6498", Offset = "0x10B6498", VA = "0x10B6498")]
		public Vector3 TransformVector3D(Vector3 vec)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x10B64BC", Offset = "0x10B64BC", VA = "0x10B64BC")]
		public Vector2 TransformVector2D(Vector2 vec)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x10B64E0", Offset = "0x10B64E0", VA = "0x10B64E0")]
		public Vector3 TransformNormal3D(Vector3 normal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x10B65D4", Offset = "0x10B65D4", VA = "0x10B65D4")]
		public Vector2 TransformNormal2D(Vector2 normal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x10B66C0", Offset = "0x10B66C0", VA = "0x10B66C0")]
		public Vector3 InverseTransformNormal3D(Vector3 normal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x10B67C4", Offset = "0x10B67C4", VA = "0x10B67C4")]
		public Vector2 InverseTransformNormal2D(Vector2 normal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x10B68BC", Offset = "0x10B68BC", VA = "0x10B68BC")]
		public Vector3 TransformPoint3D(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x10B6904", Offset = "0x10B6904", VA = "0x10B6904")]
		public Vector2 TransformPoint2D(Vector2 point)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x10B6944", Offset = "0x10B6944", VA = "0x10B6944")]
		public Vector3 InverseTransformPoint3D(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x10B699C", Offset = "0x10B699C", VA = "0x10B699C")]
		public Vector2 InverseTransformPoint2D(Vector2 point)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x10B1DAC", Offset = "0x10B1DAC", VA = "0x10B1DAC")]
		public void AlignAxis3D(int axisIndex, AxisSign axisSign, Vector3 axis)
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x10AEAB4", Offset = "0x10AEAB4", VA = "0x10AEAB4")]
		public void AlignAxis2D(int axisIndex, AxisSign axisSign, Vector2 axis)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x10B61A8", Offset = "0x10B61A8", VA = "0x10B61A8")]
		public bool IsChildOf(GizmoTransform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x10AE664", Offset = "0x10AE664", VA = "0x10AE664")]
		public void SetParent(GizmoTransform newParent)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x10B6C88", Offset = "0x10B6C88", VA = "0x10B6C88")]
		public Vector3 GetAxis3D(AxisDescriptor axisDesc)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x10B6370", Offset = "0x10B6370", VA = "0x10B6370")]
		public Vector3 GetAxis3D(int axisIndex, AxisSign axisSign)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x10B6D00", Offset = "0x10B6D00", VA = "0x10B6D00")]
		public Vector2 GetAxis2D(AxisDescriptor axisDesc)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x10B69E4", Offset = "0x10B69E4", VA = "0x10B69E4")]
		public Vector2 GetAxis2D(int axisIndex, AxisSign axisSign)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x10B6D60", Offset = "0x10B6D60", VA = "0x10B6D60")]
		public Vector3[] GetAxes3D()
		{
			return null;
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x10B6DB8", Offset = "0x10B6DB8", VA = "0x10B6DB8")]
		public Vector2[] GetAxes2D()
		{
			return null;
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x10B6E10", Offset = "0x10B6E10", VA = "0x10B6E10")]
		public Plane GetPlane3D(PlaneId planeId, PlaneQuadrantId planeQuadrantId)
		{
			return default(Plane);
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x10B6F74", Offset = "0x10B6F74", VA = "0x10B6F74")]
		public Plane GetPlane3D(PlaneDescriptor planeDesc)
		{
			return default(Plane);
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x10B5484", Offset = "0x10B5484", VA = "0x10B5484")]
		private void ChangePosition3D(Vector3 position)
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x10B5498", Offset = "0x10B5498", VA = "0x10B5498")]
		private void ChangePosition2D(Vector2 position)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x10B54AC", Offset = "0x10B54AC", VA = "0x10B54AC")]
		private void ChangeRotation3D(Quaternion rotation)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x10B54E4", Offset = "0x10B54E4", VA = "0x10B54E4")]
		private void ChangeRotation2D(float rotation)
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x10B7404", Offset = "0x10B7404", VA = "0x10B7404")]
		private void ChangeRotation2D(Quaternion rotation)
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x10B55CC", Offset = "0x10B55CC", VA = "0x10B55CC")]
		private void ChangeLocalPosition3D(Vector3 localPosition)
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x10B561C", Offset = "0x10B561C", VA = "0x10B561C")]
		private void ChangeLocalPosition2D(Vector2 localPosition)
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x10B5738", Offset = "0x10B5738", VA = "0x10B5738")]
		private void ChangeLocalRotation3D(Quaternion localRotation)
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x10B578C", Offset = "0x10B578C", VA = "0x10B578C")]
		private void ChangeLocalRotation2D(float localRotation)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x10B7748", Offset = "0x10B7748", VA = "0x10B7748")]
		private void ChangeLocalRotation2D(Quaternion localRotation)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x10B6A2C", Offset = "0x10B6A2C", VA = "0x10B6A2C")]
		private void OnParentChanged()
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x10B70C4", Offset = "0x10B70C4", VA = "0x10B70C4")]
		private void OnPosition3DChanged()
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x10B716C", Offset = "0x10B716C", VA = "0x10B716C")]
		private void OnPosition2DChanged()
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x10B7428", Offset = "0x10B7428", VA = "0x10B7428")]
		private void OnLocalPosition3DChanged()
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x10B74C8", Offset = "0x10B74C8", VA = "0x10B74C8")]
		private void OnLocalPosition2DChanged()
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x10B7200", Offset = "0x10B7200", VA = "0x10B7200")]
		private void OnRotation3DChanged()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x10B72F8", Offset = "0x10B72F8", VA = "0x10B72F8")]
		private void OnRotation2DChanged()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x10B7554", Offset = "0x10B7554", VA = "0x10B7554")]
		private void OnLocalRotation3DChanged()
		{
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x10B7644", Offset = "0x10B7644", VA = "0x10B7644")]
		private void OnLocalRotation2DChanged()
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x10B776C", Offset = "0x10B776C", VA = "0x10B776C")]
		private void UpdateChildTransforms3D()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x10B79C0", Offset = "0x10B79C0", VA = "0x10B79C0")]
		private void UpdateChildTransforms2D()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x10B7C18", Offset = "0x10B7C18", VA = "0x10B7C18")]
		private void OnChanged(ChangeData changeData)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x10B580C", Offset = "0x10B580C", VA = "0x10B580C")]
		private void Update3DAxes()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x10B59BC", Offset = "0x10B59BC", VA = "0x10B59BC")]
		private void Update2DAxes()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public class GizmoTransformAxisMap2D
	{
		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2 _freeAxis;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AxisDescriptor _mappedAxisDesc;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GizmoTransform _transform;

		[Token(Token = "0x17000290")]
		public AxisDescriptor MappedAxisDesc
		{
			[Token(Token = "0x60015E2")]
			[Address(RVA = "0x10B8C94", Offset = "0x10B8C94", VA = "0x10B8C94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000291")]
		public int MappedAxisIndex
		{
			[Token(Token = "0x60015E3")]
			[Address(RVA = "0x10B8C9C", Offset = "0x10B8C9C", VA = "0x10B8C9C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000292")]
		public AxisSign MappedAxisSign
		{
			[Token(Token = "0x60015E4")]
			[Address(RVA = "0x10B8CB8", Offset = "0x10B8CB8", VA = "0x10B8CB8")]
			get
			{
				return default(AxisSign);
			}
		}

		[Token(Token = "0x17000293")]
		public bool IsMapped
		{
			[Token(Token = "0x60015E5")]
			[Address(RVA = "0x10B8CD4", Offset = "0x10B8CD4", VA = "0x10B8CD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000294")]
		public Vector2 Axis
		{
			[Token(Token = "0x60015E6")]
			[Address(RVA = "0x10B8CE4", Offset = "0x10B8CE4", VA = "0x10B8CE4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000295")]
		public GizmoTransform Transform
		{
			[Token(Token = "0x60015E7")]
			[Address(RVA = "0x10B8D10", Offset = "0x10B8D10", VA = "0x10B8D10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0x10B8D18", Offset = "0x10B8D18", VA = "0x10B8D18")]
		public void Map(GizmoTransform transform, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x10B8DC8", Offset = "0x10B8DC8", VA = "0x10B8DC8")]
		public void Unmap()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x10B8DD4", Offset = "0x10B8DD4", VA = "0x10B8DD4")]
		public void SetAxis(Vector2 axis)
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x10B8DE4", Offset = "0x10B8DE4", VA = "0x10B8DE4")]
		public void SetMappedAxis(Vector2 axis)
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x10B8E30", Offset = "0x10B8E30", VA = "0x10B8E30")]
		public void SetFreeAxis(Vector2 axis)
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x10B8EF4", Offset = "0x10B8EF4", VA = "0x10B8EF4")]
		public GizmoTransformAxisMap2D()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class GizmoTransformAxisMap3D
	{
		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _freeAxis;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AxisDescriptor _mappedAxisDesc;

		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GizmoTransform _transform;

		[Token(Token = "0x17000296")]
		public AxisDescriptor MappedAxisDesc
		{
			[Token(Token = "0x60015EE")]
			[Address(RVA = "0x10B8FA8", Offset = "0x10B8FA8", VA = "0x10B8FA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000297")]
		public int MappedAxisIndex
		{
			[Token(Token = "0x60015EF")]
			[Address(RVA = "0x10B8FB0", Offset = "0x10B8FB0", VA = "0x10B8FB0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000298")]
		public AxisSign MappedAxisSign
		{
			[Token(Token = "0x60015F0")]
			[Address(RVA = "0x10B8FCC", Offset = "0x10B8FCC", VA = "0x10B8FCC")]
			get
			{
				return default(AxisSign);
			}
		}

		[Token(Token = "0x17000299")]
		public bool IsMapped
		{
			[Token(Token = "0x60015F1")]
			[Address(RVA = "0x10B8FE8", Offset = "0x10B8FE8", VA = "0x10B8FE8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029A")]
		public Vector3 Axis
		{
			[Token(Token = "0x60015F2")]
			[Address(RVA = "0x10B8FF8", Offset = "0x10B8FF8", VA = "0x10B8FF8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700029B")]
		public GizmoTransform Transform
		{
			[Token(Token = "0x60015F3")]
			[Address(RVA = "0x10B9028", Offset = "0x10B9028", VA = "0x10B9028")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x10B9030", Offset = "0x10B9030", VA = "0x10B9030")]
		public void Map(GizmoTransform transform, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x10B90D8", Offset = "0x10B90D8", VA = "0x10B90D8")]
		public void Unmap()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x10B90E4", Offset = "0x10B90E4", VA = "0x10B90E4")]
		public void SetAxis(Vector3 axis)
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x10B90F4", Offset = "0x10B90F4", VA = "0x10B90F4")]
		public void SetMappedAxis(Vector3 axis)
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x10B91D8", Offset = "0x10B91D8", VA = "0x10B91D8")]
		public void SetFreeAxis(Vector3 axis)
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x10B92BC", Offset = "0x10B92BC", VA = "0x10B92BC")]
		public GizmoTransformAxisMap3D()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class LocalGizmoTransformSnapshot
	{
		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GizmoTransform _transform;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GizmoTransform _parentTransform;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _localPosition3D;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion _localRotation3D;

		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector2 _localPosition2D;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _localRotation2D_Degrees;

		[Token(Token = "0x1700029C")]
		public GizmoTransform Transform
		{
			[Token(Token = "0x60015FA")]
			[Address(RVA = "0x10B9378", Offset = "0x10B9378", VA = "0x10B9378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x10B9380", Offset = "0x10B9380", VA = "0x10B9380")]
		public static List<LocalGizmoTransformSnapshot> GetSnapshotCollection(IEnumerable<Gizmo> gizmos)
		{
			return null;
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x10B97A0", Offset = "0x10B97A0", VA = "0x10B97A0")]
		public void Snapshot(GizmoTransform transform)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x10B9800", Offset = "0x10B9800", VA = "0x10B9800")]
		public void Apply()
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x10B9798", Offset = "0x10B9798", VA = "0x10B9798")]
		public LocalGizmoTransformSnapshot()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class GizmoDblAxisOffsetDrag3D : GizmoPlaneDrag3D
	{
		[Token(Token = "0x2000422")]
		public struct WorkData
		{
			[Token(Token = "0x40013D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 DragOrigin;

			[Token(Token = "0x40013D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 Axis0;

			[Token(Token = "0x40013D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 Axis1;

			[Token(Token = "0x40013D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float SnapStep0;

			[Token(Token = "0x40013D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float SnapStep1;
		}

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _accumSnapDrag0;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _accumSnapDrag1;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private WorkData _workData;

		[Token(Token = "0x1700029D")]
		public override GizmoDragChannel DragChannel
		{
			[Token(Token = "0x60015FF")]
			[Address(RVA = "0x10B98C0", Offset = "0x10B98C0", VA = "0x10B98C0", Slot = "19")]
			get
			{
				return default(GizmoDragChannel);
			}
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x10B98C8", Offset = "0x10B98C8", VA = "0x10B98C8")]
		public void SetWorkData(WorkData workData)
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x10B9914", Offset = "0x10B9914", VA = "0x10B9914", Slot = "27")]
		protected override Plane CalculateDragPlane()
		{
			return default(Plane);
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x10B9A4C", Offset = "0x10B9A4C", VA = "0x10B9A4C", Slot = "23")]
		protected override void CalculateDragValues()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0x10B9BFC", Offset = "0x10B9BFC", VA = "0x10B9BFC", Slot = "26")]
		protected override void OnSessionEnd()
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x10B9C04", Offset = "0x10B9C04", VA = "0x10B9C04")]
		public GizmoDblAxisOffsetDrag3D()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class GizmoDblAxisRotationDrag3D : GizmoScreenDrag
	{
		[Token(Token = "0x2000424")]
		public struct WorkData
		{
			[Token(Token = "0x40013E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector2 ScreenAxis0;

			[Token(Token = "0x40013E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector2 ScreenAxis1;

			[Token(Token = "0x40013E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 Axis0;

			[Token(Token = "0x40013E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 Axis1;

			[Token(Token = "0x40013E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GizmoSnapMode SnapMode;

			[Token(Token = "0x40013E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float SnapStep0;

			[Token(Token = "0x40013E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float SnapStep1;
		}

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WorkData _workData;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool _adjustRotationForAbsSnap;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float _accumSnapDrag0;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float _accumSnapDrag1;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float _relativeRotation0;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float _relativeRotation1;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _totalRotation0;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float _totalRotation1;

		[Token(Token = "0x1700029E")]
		public override GizmoDragChannel DragChannel
		{
			[Token(Token = "0x6001605")]
			[Address(RVA = "0x10B9C1C", Offset = "0x10B9C1C", VA = "0x10B9C1C", Slot = "19")]
			get
			{
				return default(GizmoDragChannel);
			}
		}

		[Token(Token = "0x1700029F")]
		public float RelativeRotation0
		{
			[Token(Token = "0x6001606")]
			[Address(RVA = "0x10B9C24", Offset = "0x10B9C24", VA = "0x10B9C24")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002A0")]
		public float RelativeRotation1
		{
			[Token(Token = "0x6001607")]
			[Address(RVA = "0x10B9C2C", Offset = "0x10B9C2C", VA = "0x10B9C2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002A1")]
		public float TotalRotation0
		{
			[Token(Token = "0x6001608")]
			[Address(RVA = "0x10B9C34", Offset = "0x10B9C34", VA = "0x10B9C34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002A2")]
		public float TotalRotation1
		{
			[Token(Token = "0x6001609")]
			[Address(RVA = "0x10B9C3C", Offset = "0x10B9C3C", VA = "0x10B9C3C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x10B9C44", Offset = "0x10B9C44", VA = "0x10B9C44")]
		public void SetWorkData(WorkData workData)
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x10B9C94", Offset = "0x10B9C94", VA = "0x10B9C94", Slot = "23")]
		protected override void CalculateDragValues()
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x10BA2A4", Offset = "0x10BA2A4", VA = "0x10BA2A4", Slot = "26")]
		protected override void OnSessionEnd()
		{
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x10BA2B0", Offset = "0x10BA2B0", VA = "0x10BA2B0")]
		public GizmoDblAxisRotationDrag3D()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class GizmoDblAxisScaleDrag3D : GizmoPlaneDrag3D
	{
		[Token(Token = "0x2000426")]
		public struct WorkData
		{
			[Token(Token = "0x40013F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int AxisIndex0;

			[Token(Token = "0x40013F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int AxisIndex1;

			[Token(Token = "0x40013F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 DragOrigin;

			[Token(Token = "0x40013F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 Axis0;

			[Token(Token = "0x40013F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 Axis1;

			[Token(Token = "0x40013F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float SnapStep;
		}

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WorkData _workData;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float _accumSnapDrag0;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float _accumSnapDrag1;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float _scale0;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float _scale1;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float _relativeScale0;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float _relativeScale1;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _totalScale0;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float _totalScale1;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 _scaleDragAxis;

		[Token(Token = "0x170002A3")]
		public override GizmoDragChannel DragChannel
		{
			[Token(Token = "0x600160E")]
			[Address(RVA = "0x10BA2C8", Offset = "0x10BA2C8", VA = "0x10BA2C8", Slot = "19")]
			get
			{
				return default(GizmoDragChannel);
			}
		}

		[Token(Token = "0x170002A4")]
		public int AxisIndex0
		{
			[Token(Token = "0x600160F")]
			[Address(RVA = "0x10BA2D0", Offset = "0x10BA2D0", VA = "0x10BA2D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A5")]
		public int AxisIndex1
		{
			[Token(Token = "0x6001610")]
			[Address(RVA = "0x10BA2D8", Offset = "0x10BA2D8", VA = "0x10BA2D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A6")]
		public float RelativeScale0
		{
			[Token(Token = "0x6001611")]
			[Address(RVA = "0x10BA2E0", Offset = "0x10BA2E0", VA = "0x10BA2E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002A7")]
		public float RelativeScale1
		{
			[Token(Token = "0x6001612")]
			[Address(RVA = "0x10BA2E8", Offset = "0x10BA2E8", VA = "0x10BA2E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002A8")]
		public float TotalScale0
		{
			[Token(Token = "0x6001613")]
			[Address(RVA = "0x10BA2F0", Offset = "0x10BA2F0", VA = "0x10BA2F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002A9")]
		public float TotalScale1
		{
			[Token(Token = "0x6001614")]
			[Address(RVA = "0x10BA2F8", Offset = "0x10BA2F8", VA = "0x10BA2F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x10BA300", Offset = "0x10BA300", VA = "0x10BA300")]
		public void SetWorkData(WorkData workData)
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x10BA434", Offset = "0x10BA434", VA = "0x10BA434", Slot = "27")]
		protected override Plane CalculateDragPlane()
		{
			return default(Plane);
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x10BA56C", Offset = "0x10BA56C", VA = "0x10BA56C", Slot = "23")]
		protected override void CalculateDragValues()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x10BA850", Offset = "0x10BA850", VA = "0x10BA850", Slot = "26")]
		protected override void OnSessionEnd()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x10BA860", Offset = "0x10BA860", VA = "0x10BA860")]
		public GizmoDblAxisScaleDrag3D()
		{
		}
	}
	[Token(Token = "0x2000427")]
	public enum GizmoDragChannel
	{
		[Token(Token = "0x40013F8")]
		None,
		[Token(Token = "0x40013F9")]
		Offset,
		[Token(Token = "0x40013FA")]
		Rotation,
		[Token(Token = "0x40013FB")]
		Scale
	}
	[Token(Token = "0x2000428")]
	public abstract class GizmoDragSession : IGizmoDragSession
	{
		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<GizmoTransform> _targetTransforms;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Vector3 _totalDragOffset;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected Quaternion _totalDragRotation;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected Vector3 _totalDragScale;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 _relativeDragOffset;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Quaternion _relativeDragRotation;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected Vector3 _relativeDragScale;

		[Token(Token = "0x170002AA")]
		public int NumTargetTransforms
		{
			[Token(Token = "0x600161A")]
			[Address(RVA = "0x10BA874", Offset = "0x10BA874", VA = "0x10BA874")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002AB")]
		public Vector3 TotalDragOffset
		{
			[Token(Token = "0x600161B")]
			[Address(RVA = "0x10BA8BC", Offset = "0x10BA8BC", VA = "0x10BA8BC", Slot = "6")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002AC")]
		public Quaternion TotalDragRotation
		{
			[Token(Token = "0x600161C")]
			[Address(RVA = "0x10BA8C8", Offset = "0x10BA8C8", VA = "0x10BA8C8", Slot = "7")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170002AD")]
		public Vector3 TotalDragScale
		{
			[Token(Token = "0x600161D")]
			[Address(RVA = "0x10BA8D4", Offset = "0x10BA8D4", VA = "0x10BA8D4", Slot = "8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002AE")]
		public Vector3 RelativeDragOffset
		{
			[Token(Token = "0x600161E")]
			[Address(RVA = "0x10BA8E0", Offset = "0x10BA8E0", VA = "0x10BA8E0", Slot = "9")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002AF")]
		public Quaternion RelativeDragRotation
		{
			[Token(Token = "0x600161F")]
			[Address(RVA = "0x10BA8EC", Offset = "0x10BA8EC", VA = "0x10BA8EC", Slot = "10")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170002B0")]
		public Vector3 RelativeDragScale
		{
			[Token(Token = "0x6001620")]
			[Address(RVA = "0x10BA8F8", Offset = "0x10BA8F8", VA = "0x10BA8F8", Slot = "11")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002B1")]
		public abstract bool IsActive
		{
			[Token(Token = "0x6001621")]
			get;
		}

		[Token(Token = "0x170002B2")]
		public abstract GizmoDragChannel DragChannel
		{
			[Token(Token = "0x6001622")]
			get;
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x10BA904", Offset = "0x10BA904", VA = "0x10BA904", Slot = "12")]
		public bool ContainsTargetTransform(GizmoTransform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x10BA95C", Offset = "0x10BA95C", VA = "0x10BA95C", Slot = "13")]
		public void AddTargetTransform(GizmoTransform transform)
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x10BAA40", Offset = "0x10BAA40", VA = "0x10BAA40", Slot = "14")]
		public void RemoveTargetTransform(GizmoTransform transform)
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x10BAABC", Offset = "0x10BAABC", VA = "0x10BAABC", Slot = "15")]
		public bool Begin()
		{
			return default(bool);
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x10BAB18", Offset = "0x10BAB18", VA = "0x10BAB18", Slot = "16")]
		public bool Update()
		{
			return default(bool);
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x10BAE68", Offset = "0x10BAE68", VA = "0x10BAE68", Slot = "17")]
		public void End()
		{
		}

		[Token(Token = "0x6001629")]
		protected abstract bool DoBeginSession();

		[Token(Token = "0x600162A")]
		protected abstract bool DoUpdateSession();

		[Token(Token = "0x600162B")]
		protected abstract void DoEndSession();

		[Token(Token = "0x600162C")]
		protected abstract void CalculateDragValues();

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x10BAB7C", Offset = "0x10BAB7C", VA = "0x10BAB7C")]
		protected void ApplyDrag()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x10BAF94", Offset = "0x10BAF94", VA = "0x10BAF94", Slot = "24")]
		protected virtual bool CanBegin()
		{
			return default(bool);
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x10BAFB8", Offset = "0x10BAFB8", VA = "0x10BAFB8", Slot = "25")]
		protected virtual void OnSessionBegin()
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x10BAFBC", Offset = "0x10BAFBC", VA = "0x10BAFBC", Slot = "26")]
		protected virtual void OnSessionEnd()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x10BAFC0", Offset = "0x10BAFC0", VA = "0x10BAFC0")]
		protected GizmoDragSession()
		{
		}
	}
	[Token(Token = "0x2000429")]
	public class GizmoObjectVertexSnapDrag3D : GizmoDragSession
	{
		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IEnumerable<GameObject> _targetObjects;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _snapPivot;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool _isActive;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<GameObject> _destinationObjects;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GizmoObjectVertexSnapSettings _settings;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<GameObject> _visibleObjectBuffer;

		[Token(Token = "0x170002B3")]
		public override bool IsActive
		{
			[Token(Token = "0x6001632")]
			[Address(RVA = "0x10BB0C0", Offset = "0x10BB0C0", VA = "0x10BB0C0", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002B4")]
		public override GizmoDragChannel DragChannel
		{
			[Token(Token = "0x6001633")]
			[Address(RVA = "0x10BB0C8", Offset = "0x10BB0C8", VA = "0x10BB0C8", Slot = "19")]
			get
			{
				return default(GizmoDragChannel);
			}
		}

		[Token(Token = "0x170002B5")]
		public Vector3 SnapPivot
		{
			[Token(Token = "0x6001634")]
			[Address(RVA = "0x10BB0D0", Offset = "0x10BB0D0", VA = "0x10BB0D0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002B6")]
		public GizmoObjectVertexSnapSettings Settings
		{
			[Token(Token = "0x6001635")]
			[Address(RVA = "0x10BB0DC", Offset = "0x10BB0DC", VA = "0x10BB0DC")]
			set
			{
			}
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x10BB0EC", Offset = "0x10BB0EC", VA = "0x10BB0EC")]
		public void SetTargetObjects(IEnumerable<GameObject> targetObjects)
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x10BB138", Offset = "0x10BB138", VA = "0x10BB138")]
		public bool SelectSnapPivotPoint(Gizmo gizmo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x10BBD28", Offset = "0x10BBD28", VA = "0x10BBD28", Slot = "20")]
		protected override bool DoBeginSession()
		{
			return default(bool);
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x10BBD48", Offset = "0x10BBD48", VA = "0x10BBD48", Slot = "21")]
		protected override bool DoUpdateSession()
		{
			return default(bool);
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x10BC2D4", Offset = "0x10BC2D4", VA = "0x10BC2D4", Slot = "22")]
		protected override void DoEndSession()
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x10BC348", Offset = "0x10BC348", VA = "0x10BC348", Slot = "23")]
		protected override void CalculateDragValues()
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x10BB230", Offset = "0x10BB230", VA = "0x10BB230")]
		protected bool GetWorldPointClosestToInputDevice(Camera focusCamera, IEnumerable<GameObject> gameObjects, out Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x10BC6C4", Offset = "0x10BC6C4", VA = "0x10BC6C4")]
		protected bool CanUseObjectAsSnapDestination(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x10BBD5C", Offset = "0x10BBD5C", VA = "0x10BBD5C")]
		private void GatherDestinationObjects()
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x10BC70C", Offset = "0x10BC70C", VA = "0x10BC70C")]
		public GizmoObjectVertexSnapDrag3D()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042C")]
	public class GizmoObjectVertexSnapSettings : Settings
	{
		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int _snapDestinationLayers;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _canSnapToGrid;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _canSnapToObjectVerts;

		[Token(Token = "0x170002B7")]
		public int SnapDestinationLayers
		{
			[Token(Token = "0x6001644")]
			[Address(RVA = "0x10BCA34", Offset = "0x10BCA34", VA = "0x10BCA34")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001645")]
			[Address(RVA = "0x10BCA3C", Offset = "0x10BCA3C", VA = "0x10BCA3C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public bool CanSnapToGrid
		{
			[Token(Token = "0x6001646")]
			[Address(RVA = "0x10BCA44", Offset = "0x10BCA44", VA = "0x10BCA44")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001647")]
			[Address(RVA = "0x10BCA4C", Offset = "0x10BCA4C", VA = "0x10BCA4C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public bool CanSnapToObjectVerts
		{
			[Token(Token = "0x6001648")]
			[Address(RVA = "0x10BCA58", Offset = "0x10BCA58", VA = "0x10BCA58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001649")]
			[Address(RVA = "0x10BCA60", Offset = "0x10BCA60", VA = "0x10BCA60")]
			set
			{
			}
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x10BC6F8", Offset = "0x10BC6F8", VA = "0x10BC6F8")]
		public bool IsLayerSnapDestination(int objectLayer)
		{
			return default(bool);
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x10BCA6C", Offset = "0x10BCA6C", VA = "0x10BCA6C")]
		public void SetLayerSnapDestination(int objectLayer, bool isSnapDestination)
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x10BCA9C", Offset = "0x10BCA9C", VA = "0x10BCA9C")]
		public void Transfer(GizmoObjectVertexSnapSettings destination)
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x10BC80C", Offset = "0x10BC80C", VA = "0x10BC80C")]
		public GizmoObjectVertexSnapSettings()
		{
		}
	}
	[Token(Token = "0x200042D")]
	public abstract class GizmoPlaneDrag3D : GizmoDragSession
	{
		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isSnapEnabled;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _sensitivity;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected InputDevicePlaneDragSession3D _planeDragSession;

		[Token(Token = "0x170002BA")]
		public bool IsSnapEnabled
		{
			[Token(Token = "0x600164E")]
			[Address(RVA = "0x10BCAC8", Offset = "0x10BCAC8", VA = "0x10BCAC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600164F")]
			[Address(RVA = "0x10BCAD0", Offset = "0x10BCAD0", VA = "0x10BCAD0")]
			set
			{
			}
		}

		[Token(Token = "0x170002BB")]
		public float Sensitivity
		{
			[Token(Token = "0x6001650")]
			[Address(RVA = "0x10BCADC", Offset = "0x10BCADC", VA = "0x10BCADC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001651")]
			[Address(RVA = "0x10BCAE4", Offset = "0x10BCAE4", VA = "0x10BCAE4")]
			set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		public override bool IsActive
		{
			[Token(Token = "0x6001652")]
			[Address(RVA = "0x10BCAF8", Offset = "0x10BCAF8", VA = "0x10BCAF8", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0x10BCB18", Offset = "0x10BCB18", VA = "0x10BCB18", Slot = "20")]
		protected override bool DoBeginSession()
		{
			return default(bool);
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0x10BCC60", Offset = "0x10BCC60", VA = "0x10BCC60", Slot = "21")]
		protected override bool DoUpdateSession()
		{
			return default(bool);
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0x10BCC7C", Offset = "0x10BCC7C", VA = "0x10BCC7C", Slot = "22")]
		protected override void DoEndSession()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0x10BCCAC", Offset = "0x10BCCAC", VA = "0x10BCCAC")]
		protected bool CanSnap()
		{
			return default(bool);
		}

		[Token(Token = "0x6001657")]
		protected abstract Plane CalculateDragPlane();

		[Token(Token = "0x6001658")]
		[Address(RVA = "0x10B9C10", Offset = "0x10B9C10", VA = "0x10B9C10")]
		protected GizmoPlaneDrag3D()
		{
		}
	}
	[Token(Token = "0x200042E")]
	public abstract class GizmoScreenDrag : GizmoDragSession
	{
		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isSnapEnabled;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _sensitivity;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected InputDeviceScreenDragSession _screenDragSession;

		[Token(Token = "0x170002BD")]
		public bool IsSnapEnabled
		{
			[Token(Token = "0x6001659")]
			[Address(RVA = "0x10BCCB4", Offset = "0x10BCCB4", VA = "0x10BCCB4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600165A")]
			[Address(RVA = "0x10BCCBC", Offset = "0x10BCCBC", VA = "0x10BCCBC")]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public float Sensitivity
		{
			[Token(Token = "0x600165B")]
			[Address(RVA = "0x10BCCC8", Offset = "0x10BCCC8", VA = "0x10BCCC8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600165C")]
			[Address(RVA = "0x10BCCD0", Offset = "0x10BCCD0", VA = "0x10BCCD0")]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public override bool IsActive
		{
			[Token(Token = "0x600165D")]
			[Address(RVA = "0x10BCCE4", Offset = "0x10BCCE4", VA = "0x10BCCE4", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0x10BCD04", Offset = "0x10BCD04", VA = "0x10BCD04", Slot = "20")]
		protected override bool DoBeginSession()
		{
			return default(bool);
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0x10BCDC8", Offset = "0x10BCDC8", VA = "0x10BCDC8", Slot = "21")]
		protected override bool DoUpdateSession()
		{
			return default(bool);
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0x10BCDE4", Offset = "0x10BCDE4", VA = "0x10BCDE4", Slot = "22")]
		protected override void DoEndSession()
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0x10BCE14", Offset = "0x10BCE14", VA = "0x10BCE14")]
		protected bool CanSnap()
		{
			return default(bool);
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x10BA2BC", Offset = "0x10BA2BC", VA = "0x10BA2BC")]
		protected GizmoScreenDrag()
		{
		}
	}
	[Token(Token = "0x200042F")]
	public class GizmoSglAxisOffsetDrag3D : GizmoPlaneDrag3D
	{
		[Token(Token = "0x2000430")]
		public struct WorkData
		{
			[Token(Token = "0x4001419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 DragOrigin;

			[Token(Token = "0x400141A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 Axis;

			[Token(Token = "0x400141B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float SnapStep;
		}

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _accumSnapDrag;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private WorkData _workData;

		[Token(Token = "0x170002C0")]
		public Vector3 Axis
		{
			[Token(Token = "0x6001663")]
			[Address(RVA = "0x10BCE1C", Offset = "0x10BCE1C", VA = "0x10BCE1C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002C1")]
		public override GizmoDragChannel DragChannel
		{
			[Token(Token = "0x6001664")]
			[Address(RVA = "0x10BCE28", Offset = "0x10BCE28", VA = "0x10BCE28", Slot = "19")]
			get
			{
				return default(GizmoDragChannel);
			}
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x10BCE30", Offset = "0x10BCE30", VA = "0x10BCE30")]
		public void SetWorkData(WorkData workData)
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x10BCE7C", Offset = "0x10BCE7C", VA = "0x10BCE7C", Slot = "27")]
		protected override Plane CalculateDragPlane()
		{
			return default(Plane);
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x10BCF34", Offset = "0x10BCF34", VA = "0x10BCF34", Slot = "23")]
		protected override void CalculateDragValues()
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x10BD05C", Offset = "0x10BD05C", VA = "0x10BD05C", Slot = "26")]
		protected override void OnSessionEnd()
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x10BD064", Offset = "0x10BD064", VA = "0x10BD064")]
		public GizmoSglAxisOffsetDrag3D()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public class GizmoSglAxisRotationDrag3D : GizmoScreenDrag
	{
		[Token(Token = "0x2000432")]
		public struct WorkData
		{
			[Token(Token = "0x4001423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 RotationPlanePos;

			[Token(Token = "0x4001424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 Axis;

			[Token(Token = "0x4001425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GizmoSnapMode SnapMode;

			[Token(Token = "0x4001426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float SnapStep;
		}

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _accumSnapDrag;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Plane _rotationPlane;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 _screenDragCircleTangent;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private WorkData _workData;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool _adjustRotationForAbsSnap;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float _relativeRotation;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _totalRotation;

		[Token(Token = "0x170002C2")]
		public override GizmoDragChannel DragChannel
		{
			[Token(Token = "0x600166A")]
			[Address(RVA = "0x10BD070", Offset = "0x10BD070", VA = "0x10BD070", Slot = "19")]
			get
			{
				return default(GizmoDragChannel);
			}
		}

		[Token(Token = "0x170002C3")]
		public float RelativeRotation
		{
			[Token(Token = "0x600166B")]
			[Address(RVA = "0x10BD078", Offset = "0x10BD078", VA = "0x10BD078")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C4")]
		public float TotalRotation
		{
			[Token(Token = "0x600166C")]
			[Address(RVA = "0x10BD080", Offset = "0x10BD080", VA = "0x10BD080")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C5")]
		public Plane RotationPlane
		{
			[Token(Token = "0x600166D")]
			[Address(RVA = "0x10BD088", Offset = "0x10BD088", VA = "0x10BD088")]
			get
			{
				return default(Plane);
			}
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x10BD094", Offset = "0x10BD094", VA = "0x10BD094")]
		public void SetWorkData(WorkData workData)
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x10BD100", Offset = "0x10BD100", VA = "0x10BD100", Slot = "23")]
		protected override void CalculateDragValues()
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x10BD3DC", Offset = "0x10BD3DC", VA = "0x10BD3DC", Slot = "25")]
		protected override void OnSessionBegin()
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x10BD7B4", Offset = "0x10BD7B4", VA = "0x10BD7B4", Slot = "26")]
		protected override void OnSessionEnd()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x10BD814", Offset = "0x10BD814", VA = "0x10BD814")]
		public GizmoSglAxisRotationDrag3D()
		{
		}
	}
	[Token(Token = "0x2000433")]
	public class GizmoSglAxisScaleDrag3D : GizmoPlaneDrag3D
	{
		[Token(Token = "0x2000434")]
		public struct WorkData
		{
			[Token(Token = "0x400142C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int AxisIndex;

			[Token(Token = "0x400142D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 DragOrigin;

			[Token(Token = "0x400142E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 Axis;

			[Token(Token = "0x400142F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float SnapStep;

			[Token(Token = "0x4001430")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float EntityScale;
		}

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _accumSnapDrag;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private WorkData _workData;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _scale;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float _relativeScale;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float _totalScale;

		[Token(Token = "0x170002C6")]
		public override GizmoDragChannel DragChannel
		{
			[Token(Token = "0x6001673")]
			[Address(RVA = "0x10BD820", Offset = "0x10BD820", VA = "0x10BD820", Slot = "19")]
			get
			{
				return default(GizmoDragChannel);
			}
		}

		[Token(Token = "0x170002C7")]
		public int AxisIndex
		{
			[Token(Token = "0x6001674")]
			[Address(RVA = "0x10BD828", Offset = "0x10BD828", VA = "0x10BD828")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002C8")]
		public float RelativeScale
		{
			[Token(Token = "0x6001675")]
			[Address(RVA = "0x10BD830", Offset = "0x10BD830", VA = "0x10BD830")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C9")]
		public float TotalScale
		{
			[Token(Token = "0x6001676")]
			[Address(RVA = "0x10BD838", Offset = "0x10BD838", VA = "0x10BD838")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x10BD840", Offset = "0x10BD840", VA = "0x10BD840")]
		public void SetWorkData(WorkData workData)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x10BD888", Offset = "0x10BD888", VA = "0x10BD888", Slot = "27")]
		protected override Plane CalculateDragPlane()
		{
			return default(Plane);
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x10BD940", Offset = "0x10BD940", VA = "0x10BD940", Slot = "23")]
		protected override void CalculateDragValues()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x10BDAF8", Offset = "0x10BDAF8", VA = "0x10BDAF8", Slot = "26")]
		protected override void OnSessionEnd()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x10BDB10", Offset = "0x10BDB10", VA = "0x10BDB10")]
		public GizmoSglAxisScaleDrag3D()
		{
		}
	}
	[Token(Token = "0x2000435")]
	public class GizmoUniformScaleDrag3D : GizmoPlaneDrag3D
	{
		[Token(Token = "0x2000436")]
		public struct WorkData
		{
			[Token(Token = "0x4001439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 CameraRight;

			[Token(Token = "0x400143A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 CameraUp;

			[Token(Token = "0x400143B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 DragOrigin;

			[Token(Token = "0x400143C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float SnapStep;
		}

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private WorkData _workData;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 _planeAxis0;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector3 _planeAxis1;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float _accumSnapDrag;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float _scale;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _relativeScale;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float _totalScale;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 _scaleDragAxis;

		[Token(Token = "0x170002CA")]
		public override GizmoDragChannel DragChannel
		{
			[Token(Token = "0x600167C")]
			[Address(RVA = "0x10BDB24", Offset = "0x10BDB24", VA = "0x10BDB24", Slot = "19")]
			get
			{
				return default(GizmoDragChannel);
			}
		}

		[Token(Token = "0x170002CB")]
		public float TotalScale
		{
			[Token(Token = "0x600167D")]
			[Address(RVA = "0x10BDB2C", Offset = "0x10BDB2C", VA = "0x10BDB2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002CC")]
		public float RelativeScale
		{
			[Token(Token = "0x600167E")]
			[Address(RVA = "0x10BDB34", Offset = "0x10BDB34", VA = "0x10BDB34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x10BDB3C", Offset = "0x10BDB3C", VA = "0x10BDB3C")]
		public void SetWorkData(WorkData workData)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x10BDC70", Offset = "0x10BDC70", VA = "0x10BDC70", Slot = "27")]
		protected override Plane CalculateDragPlane()
		{
			return default(Plane);
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x10BDDC8", Offset = "0x10BDDC8", VA = "0x10BDDC8", Slot = "23")]
		protected override void CalculateDragValues()
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x10BDF00", Offset = "0x10BDF00", VA = "0x10BDF00", Slot = "26")]
		protected override void OnSessionEnd()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x10BDF0C", Offset = "0x10BDF0C", VA = "0x10BDF0C")]
		public GizmoUniformScaleDrag3D()
		{
		}
	}
	[Token(Token = "0x2000437")]
	public interface IGizmoDragSession
	{
		[Token(Token = "0x170002CD")]
		bool IsActive
		{
			[Token(Token = "0x6001684")]
			get;
		}

		[Token(Token = "0x170002CE")]
		GizmoDragChannel DragChannel
		{
			[Token(Token = "0x6001685")]
			get;
		}

		[Token(Token = "0x170002CF")]
		Vector3 TotalDragOffset
		{
			[Token(Token = "0x6001686")]
			get;
		}

		[Token(Token = "0x170002D0")]
		Quaternion TotalDragRotation
		{
			[Token(Token = "0x6001687")]
			get;
		}

		[Token(Token = "0x170002D1")]
		Vector3 TotalDragScale
		{
			[Token(Token = "0x6001688")]
			get;
		}

		[Token(Token = "0x170002D2")]
		Vector3 RelativeDragOffset
		{
			[Token(Token = "0x6001689")]
			get;
		}

		[Token(Token = "0x170002D3")]
		Quaternion RelativeDragRotation
		{
			[Token(Token = "0x600168A")]
			get;
		}

		[Token(Token = "0x170002D4")]
		Vector3 RelativeDragScale
		{
			[Token(Token = "0x600168B")]
			get;
		}

		[Token(Token = "0x600168C")]
		bool ContainsTargetTransform(GizmoTransform transform);

		[Token(Token = "0x600168D")]
		void AddTargetTransform(GizmoTransform transform);

		[Token(Token = "0x600168E")]
		void RemoveTargetTransform(GizmoTransform transform);

		[Token(Token = "0x600168F")]
		bool Begin();

		[Token(Token = "0x6001690")]
		bool Update();

		[Token(Token = "0x6001691")]
		void End();
	}
	[Serializable]
	[Token(Token = "0x2000438")]
	public abstract class GizmoBehaviour : IGizmoBehaviour
	{
		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Gizmo _gizmo;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool _isEnabled;

		[Token(Token = "0x170002D5")]
		public Gizmo Gizmo
		{
			[Token(Token = "0x6001692")]
			[Address(RVA = "0x10BDF20", Offset = "0x10BDF20", VA = "0x10BDF20", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D6")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001693")]
			[Address(RVA = "0x10BDF28", Offset = "0x10BDF28", VA = "0x10BDF28", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x10BDF30", Offset = "0x10BDF30", VA = "0x10BDF30", Slot = "6")]
		public void Init_SystemCall(GizmoBehaviorInitParams initParams)
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x10BDF38", Offset = "0x10BDF38", VA = "0x10BDF38", Slot = "7")]
		public void SetEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x10BDF78", Offset = "0x10BDF78", VA = "0x10BDF78", Slot = "26")]
		public virtual void OnAttached()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x10BDF7C", Offset = "0x10BDF7C", VA = "0x10BDF7C", Slot = "27")]
		public virtual void OnDetached()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x10BDF80", Offset = "0x10BDF80", VA = "0x10BDF80", Slot = "28")]
		public virtual void OnGizmoEnabled()
		{
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x10BDF84", Offset = "0x10BDF84", VA = "0x10BDF84", Slot = "29")]
		public virtual void OnGizmoDisabled()
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x10BDF88", Offset = "0x10BDF88", VA = "0x10BDF88", Slot = "30")]
		public virtual void OnEnabled()
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x10BDF8C", Offset = "0x10BDF8C", VA = "0x10BDF8C", Slot = "31")]
		public virtual void OnDisabled()
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x10BDF90", Offset = "0x10BDF90", VA = "0x10BDF90", Slot = "32")]
		public virtual void OnGizmoHandlePicked(int handleId)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x10BDF94", Offset = "0x10BDF94", VA = "0x10BDF94", Slot = "33")]
		public virtual bool OnGizmoCanBeginDrag(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x10BDF9C", Offset = "0x10BDF9C", VA = "0x10BDF9C", Slot = "34")]
		public virtual void OnGizmoAttemptHandleDragBegin(int handleId)
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x10BDFA0", Offset = "0x10BDFA0", VA = "0x10BDFA0", Slot = "35")]
		public virtual void OnGizmoDragBegin(int handleId)
		{
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x10BDFA4", Offset = "0x10BDFA4", VA = "0x10BDFA4", Slot = "36")]
		public virtual void OnGizmoDragUpdate(int handleId)
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x10BDFA8", Offset = "0x10BDFA8", VA = "0x10BDFA8", Slot = "37")]
		public virtual void OnGizmoDragEnd(int handleId)
		{
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x10BDFAC", Offset = "0x10BDFAC", VA = "0x10BDFAC", Slot = "38")]
		public virtual void OnGizmoHoverEnter(int handleId)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x10BDFB0", Offset = "0x10BDFB0", VA = "0x10BDFB0", Slot = "39")]
		public virtual void OnGizmoHoverExit(int handleId)
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x10BDFB4", Offset = "0x10BDFB4", VA = "0x10BDFB4", Slot = "40")]
		public virtual void OnGizmoUpdateBegin()
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x10BDFB8", Offset = "0x10BDFB8", VA = "0x10BDFB8", Slot = "41")]
		public virtual void OnGizmoUpdateEnd()
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x10BDFBC", Offset = "0x10BDFBC", VA = "0x10BDFBC", Slot = "42")]
		public virtual void OnGUI()
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x10BDFC0", Offset = "0x10BDFC0", VA = "0x10BDFC0", Slot = "43")]
		public virtual void OnGizmoRender(Camera camera)
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x10BDFC4", Offset = "0x10BDFC4", VA = "0x10BDFC4")]
		protected void CheckRequiredBehaviours(List<Type> reqBehaviourTypes)
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x10BE148", Offset = "0x10BE148", VA = "0x10BE148")]
		private void ThrowReqBehaviourExeception(Type reqBehaviorType)
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x10BE230", Offset = "0x10BE230", VA = "0x10BE230")]
		protected GizmoBehaviour()
		{
		}
	}
	[Token(Token = "0x2000439")]
	public class GizmoBehaviourCollection : IEnumerable
	{
		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<IGizmoBehaviour> _behaviours;

		[Token(Token = "0x170002D7")]
		public int Count
		{
			[Token(Token = "0x60016AB")]
			[Address(RVA = "0x10BE240", Offset = "0x10BE240", VA = "0x10BE240")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x10BE288", Offset = "0x10BE288", VA = "0x10BE288")]
		public bool Add(IGizmoBehaviour behaviour)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x10BE3AC", Offset = "0x10BE3AC", VA = "0x10BE3AC")]
		public bool Remove(IGizmoBehaviour behaviour)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AE")]
		public Type GetFirstBehaviourOfType<Type>() where Type : class, IGizmoBehaviour
		{
			return null;
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x10BE404", Offset = "0x10BE404", VA = "0x10BE404")]
		public IGizmoBehaviour GetFirstBehaviourOfType(Type behaviourType)
		{
			return null;
		}

		[Token(Token = "0x60016B0")]
		public List<Type> GetBehavioursOfType<Type>() where Type : class, IGizmoBehaviour
		{
			return null;
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x10BE488", Offset = "0x10BE488", VA = "0x10BE488")]
		public List<IGizmoBehaviour> GetBehavioursOfType(Type behaviourType)
		{
			return null;
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x10BE354", Offset = "0x10BE354", VA = "0x10BE354")]
		public bool Contains(IGizmoBehaviour behaviour)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x10BE778", Offset = "0x10BE778", VA = "0x10BE778")]
		public IEnumerator<IGizmoBehaviour> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x10BE808", Offset = "0x10BE808", VA = "0x10BE808", Slot = "4")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x10BE80C", Offset = "0x10BE80C", VA = "0x10BE80C")]
		public GizmoBehaviourCollection()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public struct GizmoBehaviorInitParams
	{
		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Gizmo Gizmo;
	}
	[Token(Token = "0x200043B")]
	public interface IGizmoBehaviour
	{
		[Token(Token = "0x170002D8")]
		Gizmo Gizmo
		{
			[Token(Token = "0x60016B6")]
			get;
		}

		[Token(Token = "0x170002D9")]
		bool IsEnabled
		{
			[Token(Token = "0x60016B7")]
			get;
		}

		[Token(Token = "0x60016B8")]
		void Init_SystemCall(GizmoBehaviorInitParams initParams);

		[Token(Token = "0x60016B9")]
		void SetEnabled(bool enabled);

		[Token(Token = "0x60016BA")]
		void OnAttached();

		[Token(Token = "0x60016BB")]
		void OnDetached();

		[Token(Token = "0x60016BC")]
		void OnEnabled();

		[Token(Token = "0x60016BD")]
		void OnDisabled();

		[Token(Token = "0x60016BE")]
		void OnGizmoEnabled();

		[Token(Token = "0x60016BF")]
		void OnGizmoDisabled();

		[Token(Token = "0x60016C0")]
		void OnGizmoHandlePicked(int handleId);

		[Token(Token = "0x60016C1")]
		bool OnGizmoCanBeginDrag(int handleId);

		[Token(Token = "0x60016C2")]
		void OnGizmoAttemptHandleDragBegin(int handleId);

		[Token(Token = "0x60016C3")]
		void OnGizmoHoverEnter(int handleId);

		[Token(Token = "0x60016C4")]
		void OnGizmoHoverExit(int handleId);

		[Token(Token = "0x60016C5")]
		void OnGizmoDragBegin(int handleId);

		[Token(Token = "0x60016C6")]
		void OnGizmoDragUpdate(int handleId);

		[Token(Token = "0x60016C7")]
		void OnGizmoDragEnd(int handleId);

		[Token(Token = "0x60016C8")]
		void OnGizmoUpdateBegin();

		[Token(Token = "0x60016C9")]
		void OnGizmoUpdateEnd();

		[Token(Token = "0x60016CA")]
		void OnGUI();

		[Token(Token = "0x60016CB")]
		void OnGizmoRender(Camera camera);
	}
	[Token(Token = "0x200043C")]
	public delegate void GizmoPostEnabledHandler(Gizmo gizmo);
	[Token(Token = "0x200043D")]
	public delegate void GizmoPostDisabledHandler(Gizmo gizmo);
	[Token(Token = "0x200043E")]
	public delegate void GizmoPreUpdateBeginHandler(Gizmo gizmo);
	[Token(Token = "0x200043F")]
	public delegate void GizmoPostUpdateEndHandler(Gizmo gizmo);
	[Token(Token = "0x2000440")]
	public delegate void GizmoPreHoverEnterHandler(Gizmo gizmo, int handleId);
	[Token(Token = "0x2000441")]
	public delegate void GizmoPostHoverEnterHandler(Gizmo gizmo, int handleId);
	[Token(Token = "0x2000442")]
	public delegate void GizmoPreHoverExitHandler(Gizmo gizmo, int handleId);
	[Token(Token = "0x2000443")]
	public delegate void GizmoPostHoverExitHandler(Gizmo gizmo, int handleId);
	[Token(Token = "0x2000444")]
	public delegate void GizmoPreDragBeginHandler(Gizmo gizmo, int handleId);
	[Token(Token = "0x2000445")]
	public delegate void GizmoPostDragBeginHandler(Gizmo gizmo, int handleId);
	[Token(Token = "0x2000446")]
	public delegate void GizmoPreDragUpdateHandler(Gizmo gizmo, int handleId);
	[Token(Token = "0x2000447")]
	public delegate void GizmoPostDragUpdateHandler(Gizmo gizmo, int handleId);
	[Token(Token = "0x2000448")]
	public delegate void GizmoPreDragEndHandler(Gizmo gizmo, int handleId);
	[Token(Token = "0x2000449")]
	public delegate void GizmoPostDragEndHandler(Gizmo gizmo, int handleId);
	[Token(Token = "0x200044A")]
	public delegate void GizmoPreHandlePickedHandler(Gizmo gizmo, int handleId);
	[Token(Token = "0x200044B")]
	public delegate void GizmoPostHandlePickedHandler(Gizmo gizmo, int handleId);
	[Token(Token = "0x200044C")]
	public delegate void GizmoPreDragBeginAttemptHandler(Gizmo gizmo, int handleId);
	[Token(Token = "0x200044D")]
	public delegate void GizmoPostDragBeginAttemptHandler(Gizmo gizmo, int handleId);
	[Serializable]
	[Token(Token = "0x200044E")]
	public class Gizmo
	{
		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _isEnabled;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GizmoHandleCollection _handles;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GizmoBehaviourCollection _behaviours;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GizmoHoverInfo _hoverInfo;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GizmoDragInfo _dragInfo;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private IGizmoHandle _hoveredHandle;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Priority _genericHoverPriority;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Priority _hoverPriority3D;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Priority _hoverPriority2D;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private IGizmoDragSession _activeDragSession;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private GizmoTransform _transform;

		[NonSerialized]
		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private MoveGizmo _moveGizmo;

		[NonSerialized]
		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private RotationGizmo _rotationGizmo;

		[NonSerialized]
		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private ScaleGizmo _scaleGizmo;

		[NonSerialized]
		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private UniversalGizmo _universalGizmo;

		[NonSerialized]
		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private ObjectTransformGizmo _objectTransformGizmo;

		[NonSerialized]
		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private BoxGizmo _boxGizmo;

		[NonSerialized]
		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private ObjectExtrudeGizmo _objectExtrudeGizmo;

		[NonSerialized]
		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private SceneGizmo _sceneGizmo;

		[Token(Token = "0x170002DA")]
		public static int InputDeviceDragButtonIndex
		{
			[Token(Token = "0x6001738")]
			[Address(RVA = "0x10C1FD0", Offset = "0x10C1FD0", VA = "0x10C1FD0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002DB")]
		public int NumHandles
		{
			[Token(Token = "0x6001739")]
			[Address(RVA = "0x10C1FD8", Offset = "0x10C1FD8", VA = "0x10C1FD8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002DC")]
		public Camera FocusCamera
		{
			[Token(Token = "0x600173A")]
			[Address(RVA = "0x10BB19C", Offset = "0x10BB19C", VA = "0x10BB19C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DD")]
		public bool IsEnabled
		{
			[Token(Token = "0x600173B")]
			[Address(RVA = "0x10C2038", Offset = "0x10C2038", VA = "0x10C2038")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002DE")]
		public Priority GenericHoverPriority
		{
			[Token(Token = "0x600173C")]
			[Address(RVA = "0x10C2040", Offset = "0x10C2040", VA = "0x10C2040")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DF")]
		public Priority HoverPriority3D
		{
			[Token(Token = "0x600173D")]
			[Address(RVA = "0x10C2048", Offset = "0x10C2048", VA = "0x10C2048")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E0")]
		public Priority HoverPriority2D
		{
			[Token(Token = "0x600173E")]
			[Address(RVA = "0x10C2050", Offset = "0x10C2050", VA = "0x10C2050")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E1")]
		public GizmoTransform Transform
		{
			[Token(Token = "0x600173F")]
			[Address(RVA = "0x10C2058", Offset = "0x10C2058", VA = "0x10C2058")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E2")]
		public GizmoHoverInfo HoverInfo
		{
			[Token(Token = "0x6001740")]
			[Address(RVA = "0x10C2060", Offset = "0x10C2060", VA = "0x10C2060")]
			get
			{
				return default(GizmoHoverInfo);
			}
		}

		[Token(Token = "0x170002E3")]
		public bool IsHovered
		{
			[Token(Token = "0x6001741")]
			[Address(RVA = "0x10C2074", Offset = "0x10C2074", VA = "0x10C2074")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E4")]
		public int HoverHandleId
		{
			[Token(Token = "0x6001742")]
			[Address(RVA = "0x10C207C", Offset = "0x10C207C", VA = "0x10C207C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002E5")]
		public GizmoDimension HoverHandleDimension
		{
			[Token(Token = "0x6001743")]
			[Address(RVA = "0x10C2084", Offset = "0x10C2084", VA = "0x10C2084")]
			get
			{
				return default(GizmoDimension);
			}
		}

		[Token(Token = "0x170002E6")]
		public Vector3 HoverPoint
		{
			[Token(Token = "0x6001744")]
			[Address(RVA = "0x10C208C", Offset = "0x10C208C", VA = "0x10C208C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002E7")]
		public GizmoDragInfo DragInfo
		{
			[Token(Token = "0x6001745")]
			[Address(RVA = "0x10C2098", Offset = "0x10C2098", VA = "0x10C2098")]
			get
			{
				return default(GizmoDragInfo);
			}
		}

		[Token(Token = "0x170002E8")]
		public bool IsDragged
		{
			[Token(Token = "0x6001746")]
			[Address(RVA = "0x10C20A8", Offset = "0x10C20A8", VA = "0x10C20A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E9")]
		public GizmoDragChannel ActiveDragChannel
		{
			[Token(Token = "0x6001747")]
			[Address(RVA = "0x10C20B0", Offset = "0x10C20B0", VA = "0x10C20B0")]
			get
			{
				return default(GizmoDragChannel);
			}
		}

		[Token(Token = "0x170002EA")]
		public int DragHandleId
		{
			[Token(Token = "0x6001748")]
			[Address(RVA = "0x10C20B8", Offset = "0x10C20B8", VA = "0x10C20B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002EB")]
		public Vector3 DragBeginPoint
		{
			[Token(Token = "0x6001749")]
			[Address(RVA = "0x10C20C0", Offset = "0x10C20C0", VA = "0x10C20C0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002EC")]
		public GizmoDimension DragHandleDimension
		{
			[Token(Token = "0x600174A")]
			[Address(RVA = "0x10C20CC", Offset = "0x10C20CC", VA = "0x10C20CC")]
			get
			{
				return default(GizmoDimension);
			}
		}

		[Token(Token = "0x170002ED")]
		public Vector3 TotalDragOffset
		{
			[Token(Token = "0x600174B")]
			[Address(RVA = "0x10C20D4", Offset = "0x10C20D4", VA = "0x10C20D4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002EE")]
		public Quaternion TotalDragRotation
		{
			[Token(Token = "0x600174C")]
			[Address(RVA = "0x10C20E0", Offset = "0x10C20E0", VA = "0x10C20E0")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170002EF")]
		public Vector3 TotalDragScale
		{
			[Token(Token = "0x600174D")]
			[Address(RVA = "0x10C20F0", Offset = "0x10C20F0", VA = "0x10C20F0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002F0")]
		public Vector3 RelativeDragOffset
		{
			[Token(Token = "0x600174E")]
			[Address(RVA = "0x10C2100", Offset = "0x10C2100", VA = "0x10C2100")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002F1")]
		public Quaternion RelativeDragRotation
		{
			[Token(Token = "0x600174F")]
			[Address(RVA = "0x10C2110", Offset = "0x10C2110", VA = "0x10C2110")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170002F2")]
		public Vector3 RelativeDragScale
		{
			[Token(Token = "0x6001750")]
			[Address(RVA = "0x10C2124", Offset = "0x10C2124", VA = "0x10C2124")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002F3")]
		public MoveGizmo MoveGizmo
		{
			[Token(Token = "0x6001751")]
			[Address(RVA = "0x10C2134", Offset = "0x10C2134", VA = "0x10C2134")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F4")]
		public RotationGizmo RotationGizmo
		{
			[Token(Token = "0x6001752")]
			[Address(RVA = "0x10C213C", Offset = "0x10C213C", VA = "0x10C213C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F5")]
		public ScaleGizmo ScaleGizmo
		{
			[Token(Token = "0x6001753")]
			[Address(RVA = "0x10C2144", Offset = "0x10C2144", VA = "0x10C2144")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F6")]
		public UniversalGizmo UniversalGizmo
		{
			[Token(Token = "0x6001754")]
			[Address(RVA = "0x10C214C", Offset = "0x10C214C", VA = "0x10C214C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F7")]
		public ObjectTransformGizmo ObjectTransformGizmo
		{
			[Token(Token = "0x6001755")]
			[Address(RVA = "0x10C2154", Offset = "0x10C2154", VA = "0x10C2154")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F8")]
		public BoxGizmo BoxGizmo
		{
			[Token(Token = "0x6001756")]
			[Address(RVA = "0x10C215C", Offset = "0x10C215C", VA = "0x10C215C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F9")]
		public ObjectExtrudeGizmo ObjectExtrudeGizmo
		{
			[Token(Token = "0x6001757")]
			[Address(RVA = "0x10C2164", Offset = "0x10C2164", VA = "0x10C2164")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FA")]
		public SceneGizmo SceneGizmo
		{
			[Token(Token = "0x6001758")]
			[Address(RVA = "0x10C216C", Offset = "0x10C216C", VA = "0x10C216C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000026")]
		public event GizmoPostEnabledHandler PostEnabled
		{
			[Token(Token = "0x6001714")]
			[Address(RVA = "0x10C09E0", Offset = "0x10C09E0", VA = "0x10C09E0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001715")]
			[Address(RVA = "0x10C0A7C", Offset = "0x10C0A7C", VA = "0x10C0A7C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event GizmoPostDisabledHandler PostDisabled
		{
			[Token(Token = "0x6001716")]
			[Address(RVA = "0x10C0B18", Offset = "0x10C0B18", VA = "0x10C0B18")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001717")]
			[Address(RVA = "0x10C0BB4", Offset = "0x10C0BB4", VA = "0x10C0BB4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event GizmoPreUpdateBeginHandler PreUpdateBegin
		{
			[Token(Token = "0x6001718")]
			[Address(RVA = "0x10C0C50", Offset = "0x10C0C50", VA = "0x10C0C50")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001719")]
			[Address(RVA = "0x10C0CEC", Offset = "0x10C0CEC", VA = "0x10C0CEC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event GizmoPostUpdateEndHandler PostUpdateEnd
		{
			[Token(Token = "0x600171A")]
			[Address(RVA = "0x10C0D88", Offset = "0x10C0D88", VA = "0x10C0D88")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600171B")]
			[Address(RVA = "0x10C0E24", Offset = "0x10C0E24", VA = "0x10C0E24")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event GizmoPreHoverEnterHandler PreHoverEnter
		{
			[Token(Token = "0x600171C")]
			[Address(RVA = "0x10C0EC0", Offset = "0x10C0EC0", VA = "0x10C0EC0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600171D")]
			[Address(RVA = "0x10C0F5C", Offset = "0x10C0F5C", VA = "0x10C0F5C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event GizmoPostHoverEnterHandler PostHoverEnter
		{
			[Token(Token = "0x600171E")]
			[Address(RVA = "0x10C0FF8", Offset = "0x10C0FF8", VA = "0x10C0FF8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600171F")]
			[Address(RVA = "0x10C1094", Offset = "0x10C1094", VA = "0x10C1094")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event GizmoPreHoverExitHandler PreHoverExit
		{
			[Token(Token = "0x6001720")]
			[Address(RVA = "0x10C1130", Offset = "0x10C1130", VA = "0x10C1130")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001721")]
			[Address(RVA = "0x10C11CC", Offset = "0x10C11CC", VA = "0x10C11CC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event GizmoPostHoverExitHandler PostHoverExit
		{
			[Token(Token = "0x6001722")]
			[Address(RVA = "0x10C1268", Offset = "0x10C1268", VA = "0x10C1268")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001723")]
			[Address(RVA = "0x10C1304", Offset = "0x10C1304", VA = "0x10C1304")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event GizmoPreDragBeginHandler PreDragBegin
		{
			[Token(Token = "0x6001724")]
			[Address(RVA = "0x10C13A0", Offset = "0x10C13A0", VA = "0x10C13A0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001725")]
			[Address(RVA = "0x10C143C", Offset = "0x10C143C", VA = "0x10C143C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event GizmoPostDragBeginHandler PostDragBegin
		{
			[Token(Token = "0x6001726")]
			[Address(RVA = "0x10C14D8", Offset = "0x10C14D8", VA = "0x10C14D8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001727")]
			[Address(RVA = "0x10C1574", Offset = "0x10C1574", VA = "0x10C1574")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event GizmoPreDragEndHandler PreDragEnd
		{
			[Token(Token = "0x6001728")]
			[Address(RVA = "0x10C1610", Offset = "0x10C1610", VA = "0x10C1610")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001729")]
			[Address(RVA = "0x10C16AC", Offset = "0x10C16AC", VA = "0x10C16AC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event GizmoPostDragEndHandler PostDragEnd
		{
			[Token(Token = "0x600172A")]
			[Address(RVA = "0x10C1748", Offset = "0x10C1748", VA = "0x10C1748")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600172B")]
			[Address(RVA = "0x10C17E4", Offset = "0x10C17E4", VA = "0x10C17E4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event GizmoPreDragUpdateHandler PreDragUpdate
		{
			[Token(Token = "0x600172C")]
			[Address(RVA = "0x10C1880", Offset = "0x10C1880", VA = "0x10C1880")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600172D")]
			[Address(RVA = "0x10C191C", Offset = "0x10C191C", VA = "0x10C191C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public event GizmoPostDragUpdateHandler PostDragUpdate
		{
			[Token(Token = "0x600172E")]
			[Address(RVA = "0x10C19B8", Offset = "0x10C19B8", VA = "0x10C19B8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600172F")]
			[Address(RVA = "0x10C1A54", Offset = "0x10C1A54", VA = "0x10C1A54")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public event GizmoPreHandlePickedHandler PreHandlePicked
		{
			[Token(Token = "0x6001730")]
			[Address(RVA = "0x10C1AF0", Offset = "0x10C1AF0", VA = "0x10C1AF0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001731")]
			[Address(RVA = "0x10C1B8C", Offset = "0x10C1B8C", VA = "0x10C1B8C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public event GizmoPostHandlePickedHandler PostHandlePicked
		{
			[Token(Token = "0x6001732")]
			[Address(RVA = "0x10C1C28", Offset = "0x10C1C28", VA = "0x10C1C28")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001733")]
			[Address(RVA = "0x10C1CC4", Offset = "0x10C1CC4", VA = "0x10C1CC4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public event GizmoPreDragBeginAttemptHandler PreDragBeginAttempt
		{
			[Token(Token = "0x6001734")]
			[Address(RVA = "0x10C1D60", Offset = "0x10C1D60", VA = "0x10C1D60")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001735")]
			[Address(RVA = "0x10C1DFC", Offset = "0x10C1DFC", VA = "0x10C1DFC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public event GizmoPostDragBeginAttemptHandler PostDragBeginAttempt
		{
			[Token(Token = "0x6001736")]
			[Address(RVA = "0x10C1E98", Offset = "0x10C1E98", VA = "0x10C1E98")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001737")]
			[Address(RVA = "0x10C1F34", Offset = "0x10C1F34", VA = "0x10C1F34")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x10C2174", Offset = "0x10C2174", VA = "0x10C2174")]
		public Gizmo()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x10C23FC", Offset = "0x10C23FC", VA = "0x10C23FC")]
		public Camera GetWorkCamera()
		{
			return null;
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x10C251C", Offset = "0x10C251C", VA = "0x10C251C")]
		public GizmoHandle CreateHandle(int id)
		{
			return null;
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x10C2988", Offset = "0x10C2988", VA = "0x10C2988")]
		public void SetEnabled(bool enabled)
		{
		}

		[Token(Token = "0x600175D")]
		public BehaviourType AddBehaviour<BehaviourType>() where BehaviourType : class, IGizmoBehaviour, new()
		{
			return null;
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x10C34AC", Offset = "0x10C34AC", VA = "0x10C34AC")]
		public bool AddBehaviour(IGizmoBehaviour behaviour)
		{
			return default(bool);
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x10C3C04", Offset = "0x10C3C04", VA = "0x10C3C04")]
		public bool RemoveBehaviour(IGizmoBehaviour behaviour)
		{
			return default(bool);
		}

		[Token(Token = "0x6001760")]
		public List<BehaviourType> GetBehavioursOfType<BehaviourType>() where BehaviourType : class, IGizmoBehaviour
		{
			return null;
		}

		[Token(Token = "0x6001761")]
		public BehaviourType GetFirstBehaviourOfType<BehaviourType>() where BehaviourType : class, IGizmoBehaviour
		{
			return null;
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x10BE130", Offset = "0x10BE130", VA = "0x10BE130")]
		public IGizmoBehaviour GetFirstBehaviourOfType(Type behaviourType)
		{
			return null;
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x10C3CEC", Offset = "0x10C3CEC", VA = "0x10C3CEC")]
		public List<GizmoHandleHoverData> GetAllHandlesHoverData(Ray hoverRay)
		{
			return null;
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0x10C4000", Offset = "0x10C4000", VA = "0x10C4000")]
		public IGizmoHandle GetHandleById_SystemCall(int handleId)
		{
			return null;
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0x10C4070", Offset = "0x10C4070", VA = "0x10C4070")]
		public void OnGUI_SystemCall()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x10C43C4", Offset = "0x10C43C4", VA = "0x10C43C4")]
		public void OnUpdateBegin_SystemCall()
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x10C4734", Offset = "0x10C4734", VA = "0x10C4734")]
		public void OnUpdateEnd_SystemCall()
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x10C4ACC", Offset = "0x10C4ACC", VA = "0x10C4ACC")]
		public void UpdateHandleHoverInfo_SystemCall(GizmoHoverInfo hoverInfo)
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x10C58E0", Offset = "0x10C58E0", VA = "0x10C58E0")]
		public void Render_SystemCall(Camera camera, Plane[] worldFrustumPlanes)
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x10C5D98", Offset = "0x10C5D98", VA = "0x10C5D98")]
		public void HandleInputDeviceEvents_SystemCall()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x10C5F7C", Offset = "0x10C5F7C", VA = "0x10C5F7C")]
		private void OnInputDevicePickButtonDown()
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0x10C648C", Offset = "0x10C648C", VA = "0x10C648C")]
		private void OnInputDevicePickButtonUp()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0x10C3044", Offset = "0x10C3044", VA = "0x10C3044")]
		private void EndDragSession()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0x10C6490", Offset = "0x10C6490", VA = "0x10C6490")]
		private void OnInputDeviceMoved()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0x10C6C9C", Offset = "0x10C6C9C", VA = "0x10C6C9C")]
		private void TryActivateDragSession()
		{
		}
	}
	[Token(Token = "0x200044F")]
	public class GizmoCollectionEnabledStateSnapshot
	{
		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<Gizmo, bool> _gizmoToState;

		[Token(Token = "0x6001770")]
		[Address(RVA = "0x10C7A64", Offset = "0x10C7A64", VA = "0x10C7A64")]
		public void Snapshot(IEnumerable<Gizmo> gizmos)
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x10C7D94", Offset = "0x10C7D94", VA = "0x10C7D94")]
		public void Apply()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x10C7F30", Offset = "0x10C7F30", VA = "0x10C7F30")]
		public GizmoCollectionEnabledStateSnapshot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000450")]
	public class GizmoEngineSettings : Settings
	{
		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool _enableGizmoSorting;

		[Token(Token = "0x170002FB")]
		public bool EnableGizmoSorting
		{
			[Token(Token = "0x6001773")]
			[Address(RVA = "0x10C7FB8", Offset = "0x10C7FB8", VA = "0x10C7FB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001774")]
			[Address(RVA = "0x10C7FC0", Offset = "0x10C7FC0", VA = "0x10C7FC0")]
			set
			{
			}
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x10C7FCC", Offset = "0x10C7FCC", VA = "0x10C7FCC")]
		public GizmoEngineSettings()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public delegate void GizmoHandleCanHoverHandler(int handleId, Gizmo ownerGizmo, GizmoHandleHoverData handleHoverData, YesNoAnswer answer);
	[Token(Token = "0x2000452")]
	public class GizmoHandle : IGizmoHandle
	{
		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GizmoHandleCanHoverHandler CanHover;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _id;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Gizmo _gizmo;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GizmoTransform _zoomFactorTransform;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Priority _genericHoverPriority;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Priority _hoverPriority2D;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Priority _hoverPriority3D;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GizmoHandleShape3D> _3DShapes;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<GizmoHandleShape2D> _2DShapes;

		[Token(Token = "0x170002FC")]
		public int Id
		{
			[Token(Token = "0x600177A")]
			[Address(RVA = "0x10C8174", Offset = "0x10C8174", VA = "0x10C8174", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002FD")]
		public Gizmo Gizmo
		{
			[Token(Token = "0x600177B")]
			[Address(RVA = "0x10C817C", Offset = "0x10C817C", VA = "0x10C817C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FE")]
		public IGizmoDragSession DragSession
		{
			[Token(Token = "0x600177C")]
			[Address(RVA = "0x10C8184", Offset = "0x10C8184", VA = "0x10C8184", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600177D")]
			[Address(RVA = "0x10C818C", Offset = "0x10C818C", VA = "0x10C818C", Slot = "7")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public Priority GenericHoverPriority
		{
			[Token(Token = "0x600177E")]
			[Address(RVA = "0x10C8194", Offset = "0x10C8194", VA = "0x10C8194", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000300")]
		public Priority HoverPriority2D
		{
			[Token(Token = "0x600177F")]
			[Address(RVA = "0x10C819C", Offset = "0x10C819C", VA = "0x10C819C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000301")]
		public Priority HoverPriority3D
		{
			[Token(Token = "0x6001780")]
			[Address(RVA = "0x10C81A4", Offset = "0x10C81A4", VA = "0x10C81A4", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000302")]
		public int Num3DShapes
		{
			[Token(Token = "0x6001781")]
			[Address(RVA = "0x10C81AC", Offset = "0x10C81AC", VA = "0x10C81AC", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000303")]
		public int Num2DShapes
		{
			[Token(Token = "0x6001782")]
			[Address(RVA = "0x10C81F4", Offset = "0x10C81F4", VA = "0x10C81F4", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000304")]
		public bool Has3DShapes
		{
			[Token(Token = "0x6001783")]
			[Address(RVA = "0x10C823C", Offset = "0x10C823C", VA = "0x10C823C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000305")]
		public bool Has2DShapes
		{
			[Token(Token = "0x6001784")]
			[Address(RVA = "0x10C8254", Offset = "0x10C8254", VA = "0x10C8254", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000306")]
		public bool Is2DHoverable
		{
			[Token(Token = "0x6001785")]
			[Address(RVA = "0x10C826C", Offset = "0x10C826C", VA = "0x10C826C", Slot = "15")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001786")]
			[Address(RVA = "0x10C8274", Offset = "0x10C8274", VA = "0x10C8274", Slot = "16")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000307")]
		public bool Is3DHoverable
		{
			[Token(Token = "0x6001787")]
			[Address(RVA = "0x10C8280", Offset = "0x10C8280", VA = "0x10C8280", Slot = "17")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001788")]
			[Address(RVA = "0x10C8288", Offset = "0x10C8288", VA = "0x10C8288", Slot = "18")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000308")]
		public bool Is2DVisible
		{
			[Token(Token = "0x6001789")]
			[Address(RVA = "0x10C8294", Offset = "0x10C8294", VA = "0x10C8294", Slot = "19")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600178A")]
			[Address(RVA = "0x10C829C", Offset = "0x10C829C", VA = "0x10C829C", Slot = "20")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000309")]
		public bool Is3DVisible
		{
			[Token(Token = "0x600178B")]
			[Address(RVA = "0x10C82A8", Offset = "0x10C82A8", VA = "0x10C82A8", Slot = "21")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600178C")]
			[Address(RVA = "0x10C82B0", Offset = "0x10C82B0", VA = "0x10C82B0", Slot = "22")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x10C2608", Offset = "0x10C2608", VA = "0x10C2608")]
		public GizmoHandle(Gizmo gizmo, int id)
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x10C82DC", Offset = "0x10C82DC", VA = "0x10C82DC", Slot = "23")]
		public float GetZoomFactor(Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x10C8368", Offset = "0x10C8368", VA = "0x10C8368", Slot = "24")]
		public void SetZoomFactorTransform(GizmoTransform transform)
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x10C82BC", Offset = "0x10C82BC", VA = "0x10C82BC", Slot = "25")]
		public void SetHoverable(bool isHoverable)
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x10C82CC", Offset = "0x10C82CC", VA = "0x10C82CC", Slot = "26")]
		public void SetVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x10C838C", Offset = "0x10C838C", VA = "0x10C838C", Slot = "27")]
		public Shape3D Get3DShape(int shapeIndex)
		{
			return null;
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0x10C83F0", Offset = "0x10C83F0", VA = "0x10C83F0", Slot = "28")]
		public Shape2D Get2DShape(int shapeIndex)
		{
			return null;
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x10C8454", Offset = "0x10C8454", VA = "0x10C8454", Slot = "29")]
		public void SetAll3DShapesVisible(bool visible)
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x10C8590", Offset = "0x10C8590", VA = "0x10C8590", Slot = "30")]
		public void Set3DShapeVisible(int shapeIndex, bool isVisible)
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x10C8604", Offset = "0x10C8604", VA = "0x10C8604", Slot = "35")]
		public bool Is3DShapeVisible(int shapeIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x10C8668", Offset = "0x10C8668", VA = "0x10C8668", Slot = "31")]
		public void Set3DShapeHoverable(int shapeIndex, bool isHoverable)
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x10C86DC", Offset = "0x10C86DC", VA = "0x10C86DC", Slot = "32")]
		public void SetAll2DShapesVisible(bool visible)
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x10C8818", Offset = "0x10C8818", VA = "0x10C8818", Slot = "33")]
		public void Set2DShapeVisible(int shapeIndex, bool isVisible)
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x10C888C", Offset = "0x10C888C", VA = "0x10C888C", Slot = "36")]
		public bool Is2DShapeVisible(int shapeIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x10C88F0", Offset = "0x10C88F0", VA = "0x10C88F0", Slot = "34")]
		public void Set2DShapeHoverable(int shapeIndex, bool isHoverable)
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x10C8964", Offset = "0x10C8964", VA = "0x10C8964", Slot = "37")]
		public bool Contains3DShape(Shape3D shape)
		{
			return default(bool);
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x10C8A74", Offset = "0x10C8A74", VA = "0x10C8A74", Slot = "38")]
		public bool Contains2DShape(Shape2D shape)
		{
			return default(bool);
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0x10C8B84", Offset = "0x10C8B84", VA = "0x10C8B84", Slot = "39")]
		public int Add3DShape(Shape3D shape)
		{
			return default(int);
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0x10C8CE4", Offset = "0x10C8CE4", VA = "0x10C8CE4", Slot = "40")]
		public int Add2DShape(Shape2D shape)
		{
			return default(int);
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0x10C8E44", Offset = "0x10C8E44", VA = "0x10C8E44", Slot = "41")]
		public void Remove3DShape(Shape3D shape)
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0x10C8F34", Offset = "0x10C8F34", VA = "0x10C8F34", Slot = "42")]
		public void Remove2DShape(Shape2D shape)
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0x10C9024", Offset = "0x10C9024", VA = "0x10C9024", Slot = "43")]
		public void Render3DSolid()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x10C9194", Offset = "0x10C9194", VA = "0x10C9194", Slot = "44")]
		public void Render3DWire()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x10C9304", Offset = "0x10C9304", VA = "0x10C9304", Slot = "45")]
		public void Render3DSolid(int shapeIndex)
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0x10C9390", Offset = "0x10C9390", VA = "0x10C9390", Slot = "46")]
		public void Render3DWire(int shapeIndex)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0x10C941C", Offset = "0x10C941C", VA = "0x10C941C", Slot = "47")]
		public void Render2DSolid(Camera camera)
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0x10C9594", Offset = "0x10C9594", VA = "0x10C9594", Slot = "48")]
		public void Render2DWire(Camera camera)
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x10C970C", Offset = "0x10C970C", VA = "0x10C970C", Slot = "49")]
		public void Render2DSolid(Camera camera, int shapeIndex)
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0x10C97AC", Offset = "0x10C97AC", VA = "0x10C97AC", Slot = "50")]
		public void Render2DWire(Camera camera, int shapeIndex)
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x10C984C", Offset = "0x10C984C", VA = "0x10C984C", Slot = "51")]
		public GizmoHandleHoverData GetHoverData(Ray hoverRay)
		{
			return null;
		}
	}
	[Token(Token = "0x2000457")]
	public class GizmoHandleCollection
	{
		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Gizmo _gizmo;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<IGizmoHandle> _handles;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<int, IGizmoHandle> _idToHandle;

		[Token(Token = "0x1700030A")]
		public Gizmo Gizmo
		{
			[Token(Token = "0x60017B3")]
			[Address(RVA = "0x10CA128", Offset = "0x10CA128", VA = "0x10CA128")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030B")]
		public int Count
		{
			[Token(Token = "0x60017B4")]
			[Address(RVA = "0x10C1FF0", Offset = "0x10C1FF0", VA = "0x10C1FF0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700030C")]
		public IGizmoHandle this[int index]
		{
			[Token(Token = "0x60017B5")]
			[Address(RVA = "0x10CA130", Offset = "0x10CA130", VA = "0x10CA130")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x10C2308", Offset = "0x10C2308", VA = "0x10C2308")]
		public GizmoHandleCollection(Gizmo gizmo)
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x10CA188", Offset = "0x10CA188", VA = "0x10CA188")]
		public void Clear()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x10C4018", Offset = "0x10C4018", VA = "0x10C4018")]
		public IGizmoHandle GetHandleById(int handleId)
		{
			return null;
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x10CA210", Offset = "0x10CA210", VA = "0x10CA210")]
		public bool Contains(IGizmoHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x10C25B0", Offset = "0x10C25B0", VA = "0x10C25B0")]
		public bool Contains(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x10C27B8", Offset = "0x10C27B8", VA = "0x10C27B8")]
		public void Add(IGizmoHandle handle)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x10CA2DC", Offset = "0x10CA2DC", VA = "0x10CA2DC")]
		public void Remove(IGizmoHandle handle)
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x10CA3D0", Offset = "0x10CA3D0", VA = "0x10CA3D0")]
		public List<IGizmoHandle> GetAll()
		{
			return null;
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x10C3D34", Offset = "0x10C3D34", VA = "0x10C3D34")]
		public List<GizmoHandleHoverData> GetAllHandlesHoverData(Ray hoverRay)
		{
			return null;
		}
	}
	[Token(Token = "0x2000458")]
	public class GizmoHandleHoverData
	{
		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _handleId;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Gizmo _gizmo;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GizmoDimension _handleDimension;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Ray _hoverRay;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _hoverPoint;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _hoverEnter3D;

		[Token(Token = "0x1700030D")]
		public int HandleId
		{
			[Token(Token = "0x60017BF")]
			[Address(RVA = "0x10CA44C", Offset = "0x10CA44C", VA = "0x10CA44C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700030E")]
		public Gizmo Gizmo
		{
			[Token(Token = "0x60017C0")]
			[Address(RVA = "0x10CA454", Offset = "0x10CA454", VA = "0x10CA454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030F")]
		public GizmoDimension HandleDimension
		{
			[Token(Token = "0x60017C1")]
			[Address(RVA = "0x10CA45C", Offset = "0x10CA45C", VA = "0x10CA45C")]
			get
			{
				return default(GizmoDimension);
			}
		}

		[Token(Token = "0x17000310")]
		public Ray HoverRay
		{
			[Token(Token = "0x60017C2")]
			[Address(RVA = "0x10CA464", Offset = "0x10CA464", VA = "0x10CA464")]
			get
			{
				return default(Ray);
			}
		}

		[Token(Token = "0x17000311")]
		public Vector3 HoverPoint
		{
			[Token(Token = "0x60017C3")]
			[Address(RVA = "0x10CA478", Offset = "0x10CA478", VA = "0x10CA478")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000312")]
		public float HoverEnter3D
		{
			[Token(Token = "0x60017C4")]
			[Address(RVA = "0x10CA484", Offset = "0x10CA484", VA = "0x10CA484")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x10C9F2C", Offset = "0x10C9F2C", VA = "0x10C9F2C")]
		public GizmoHandleHoverData(Ray hoverRay, IGizmoHandle gizmoHandle, float hoverEnter3D)
		{
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x10C9DD0", Offset = "0x10C9DD0", VA = "0x10C9DD0")]
		public GizmoHandleHoverData(Ray hoverRay, IGizmoHandle gizmoHandle, Vector2 hoverPt2D)
		{
		}
	}
	[Token(Token = "0x2000459")]
	public static class GizmoHandleId
	{
		[Token(Token = "0x17000313")]
		public static int None
		{
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0x10C58D8", Offset = "0x10C58D8", VA = "0x10C58D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000314")]
		public static int SceneGizmoMidCap
		{
			[Token(Token = "0x60017C8")]
			[Address(RVA = "0x10CA48C", Offset = "0x10CA48C", VA = "0x10CA48C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000315")]
		public static int SceneGizmoPositiveXAxis
		{
			[Token(Token = "0x60017C9")]
			[Address(RVA = "0x10CA494", Offset = "0x10CA494", VA = "0x10CA494")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000316")]
		public static int SceneGizmoPositiveYAxis
		{
			[Token(Token = "0x60017CA")]
			[Address(RVA = "0x10CA49C", Offset = "0x10CA49C", VA = "0x10CA49C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000317")]
		public static int SceneGizmoPositiveZAxis
		{
			[Token(Token = "0x60017CB")]
			[Address(RVA = "0x10CA4A4", Offset = "0x10CA4A4", VA = "0x10CA4A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000318")]
		public static int SceneGizmoNegativeXAxis
		{
			[Token(Token = "0x60017CC")]
			[Address(RVA = "0x10CA4AC", Offset = "0x10CA4AC", VA = "0x10CA4AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000319")]
		public static int SceneGizmoNegativeYAxis
		{
			[Token(Token = "0x60017CD")]
			[Address(RVA = "0x10CA4B4", Offset = "0x10CA4B4", VA = "0x10CA4B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700031A")]
		public static int SceneGizmoNegativeZAxis
		{
			[Token(Token = "0x60017CE")]
			[Address(RVA = "0x10CA4BC", Offset = "0x10CA4BC", VA = "0x10CA4BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700031B")]
		public static int SceneGizmoCamPrjSwitchLabel
		{
			[Token(Token = "0x60017CF")]
			[Address(RVA = "0x10CA4C4", Offset = "0x10CA4C4", VA = "0x10CA4C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700031C")]
		public static int PXSlider
		{
			[Token(Token = "0x60017D0")]
			[Address(RVA = "0x10CA4CC", Offset = "0x10CA4CC", VA = "0x10CA4CC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700031D")]
		public static int PYSlider
		{
			[Token(Token = "0x60017D1")]
			[Address(RVA = "0x10CA4D4", Offset = "0x10CA4D4", VA = "0x10CA4D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700031E")]
		public static int PZSlider
		{
			[Token(Token = "0x60017D2")]
			[Address(RVA = "0x10CA4DC", Offset = "0x10CA4DC", VA = "0x10CA4DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700031F")]
		public static int NXSlider
		{
			[Token(Token = "0x60017D3")]
			[Address(RVA = "0x10CA4E4", Offset = "0x10CA4E4", VA = "0x10CA4E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000320")]
		public static int NYSlider
		{
			[Token(Token = "0x60017D4")]
			[Address(RVA = "0x10CA4EC", Offset = "0x10CA4EC", VA = "0x10CA4EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000321")]
		public static int NZSlider
		{
			[Token(Token = "0x60017D5")]
			[Address(RVA = "0x10CA4F4", Offset = "0x10CA4F4", VA = "0x10CA4F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000322")]
		public static int PXCap
		{
			[Token(Token = "0x60017D6")]
			[Address(RVA = "0x10CA4FC", Offset = "0x10CA4FC", VA = "0x10CA4FC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000323")]
		public static int PYCap
		{
			[Token(Token = "0x60017D7")]
			[Address(RVA = "0x10CA504", Offset = "0x10CA504", VA = "0x10CA504")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000324")]
		public static int PZCap
		{
			[Token(Token = "0x60017D8")]
			[Address(RVA = "0x10CA50C", Offset = "0x10CA50C", VA = "0x10CA50C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000325")]
		public static int NXCap
		{
			[Token(Token = "0x60017D9")]
			[Address(RVA = "0x10CA514", Offset = "0x10CA514", VA = "0x10CA514")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000326")]
		public static int NYCap
		{
			[Token(Token = "0x60017DA")]
			[Address(RVA = "0x10CA51C", Offset = "0x10CA51C", VA = "0x10CA51C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000327")]
		public static int NZCap
		{
			[Token(Token = "0x60017DB")]
			[Address(RVA = "0x10CA524", Offset = "0x10CA524", VA = "0x10CA524")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000328")]
		public static int XRotationSlider
		{
			[Token(Token = "0x60017DC")]
			[Address(RVA = "0x10CA52C", Offset = "0x10CA52C", VA = "0x10CA52C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000329")]
		public static int YRotationSlider
		{
			[Token(Token = "0x60017DD")]
			[Address(RVA = "0x10CA534", Offset = "0x10CA534", VA = "0x10CA534")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700032A")]
		public static int ZRotationSlider
		{
			[Token(Token = "0x60017DE")]
			[Address(RVA = "0x10CA53C", Offset = "0x10CA53C", VA = "0x10CA53C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700032B")]
		public static int XYDblSlider
		{
			[Token(Token = "0x60017DF")]
			[Address(RVA = "0x10CA544", Offset = "0x10CA544", VA = "0x10CA544")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700032C")]
		public static int YZDblSlider
		{
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0x10CA54C", Offset = "0x10CA54C", VA = "0x10CA54C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700032D")]
		public static int ZXDblSlider
		{
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0x10CA554", Offset = "0x10CA554", VA = "0x10CA554")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700032E")]
		public static int PCamXSlider
		{
			[Token(Token = "0x60017E2")]
			[Address(RVA = "0x10CA55C", Offset = "0x10CA55C", VA = "0x10CA55C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700032F")]
		public static int PCamYSlider
		{
			[Token(Token = "0x60017E3")]
			[Address(RVA = "0x10CA564", Offset = "0x10CA564", VA = "0x10CA564")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000330")]
		public static int NCamXSlider
		{
			[Token(Token = "0x60017E4")]
			[Address(RVA = "0x10CA56C", Offset = "0x10CA56C", VA = "0x10CA56C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000331")]
		public static int NCamYSlider
		{
			[Token(Token = "0x60017E5")]
			[Address(RVA = "0x10CA574", Offset = "0x10CA574", VA = "0x10CA574")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000332")]
		public static int PCamXCap
		{
			[Token(Token = "0x60017E6")]
			[Address(RVA = "0x10CA57C", Offset = "0x10CA57C", VA = "0x10CA57C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000333")]
		public static int PCamYCap
		{
			[Token(Token = "0x60017E7")]
			[Address(RVA = "0x10CA584", Offset = "0x10CA584", VA = "0x10CA584")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000334")]
		public static int NCamXCap
		{
			[Token(Token = "0x60017E8")]
			[Address(RVA = "0x10CA58C", Offset = "0x10CA58C", VA = "0x10CA58C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000335")]
		public static int NCamYCap
		{
			[Token(Token = "0x60017E9")]
			[Address(RVA = "0x10CA594", Offset = "0x10CA594", VA = "0x10CA594")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000336")]
		public static int CamXYSlider
		{
			[Token(Token = "0x60017EA")]
			[Address(RVA = "0x10CA59C", Offset = "0x10CA59C", VA = "0x10CA59C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000337")]
		public static int CamXYRotation
		{
			[Token(Token = "0x60017EB")]
			[Address(RVA = "0x10CA5A4", Offset = "0x10CA5A4", VA = "0x10CA5A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000338")]
		public static int CamZRotation
		{
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0x10CA5AC", Offset = "0x10CA5AC", VA = "0x10CA5AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000339")]
		public static int VertSnap
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0x10CA5B4", Offset = "0x10CA5B4", VA = "0x10CA5B4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700033A")]
		public static int MidScaleCap
		{
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x10CA5BC", Offset = "0x10CA5BC", VA = "0x10CA5BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700033B")]
		public static int MidDisplayCap
		{
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0x10CA5C4", Offset = "0x10CA5C4", VA = "0x10CA5C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700033C")]
		public static int MidSnapCap
		{
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0x10CA5CC", Offset = "0x10CA5CC", VA = "0x10CA5CC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700033D")]
		public static int BoxTickLeftCenter
		{
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0x10CA5D4", Offset = "0x10CA5D4", VA = "0x10CA5D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700033E")]
		public static int BoxTickRightCenter
		{
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0x10CA5DC", Offset = "0x10CA5DC", VA = "0x10CA5DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700033F")]
		public static int BoxTickFrontCenter
		{
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0x10CA5E4", Offset = "0x10CA5E4", VA = "0x10CA5E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000340")]
		public static int BoxTickBackCenter
		{
			[Token(Token = "0x60017F4")]
			[Address(RVA = "0x10CA5EC", Offset = "0x10CA5EC", VA = "0x10CA5EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000341")]
		public static int BoxTickTopCenter
		{
			[Token(Token = "0x60017F5")]
			[Address(RVA = "0x10CA5F4", Offset = "0x10CA5F4", VA = "0x10CA5F4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000342")]
		public static int BoxTickBottomCenter
		{
			[Token(Token = "0x60017F6")]
			[Address(RVA = "0x10CA5FC", Offset = "0x10CA5FC", VA = "0x10CA5FC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000343")]
		public static int ExtrudeSliderLeft
		{
			[Token(Token = "0x60017F7")]
			[Address(RVA = "0x10CA604", Offset = "0x10CA604", VA = "0x10CA604")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000344")]
		public static int ExtrudeSliderRight
		{
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0x10CA60C", Offset = "0x10CA60C", VA = "0x10CA60C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000345")]
		public static int ExtrudeSliderFront
		{
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0x10CA614", Offset = "0x10CA614", VA = "0x10CA614")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000346")]
		public static int ExtrudeSliderBack
		{
			[Token(Token = "0x60017FA")]
			[Address(RVA = "0x10CA61C", Offset = "0x10CA61C", VA = "0x10CA61C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000347")]
		public static int ExtrudeSliderTop
		{
			[Token(Token = "0x60017FB")]
			[Address(RVA = "0x10CA624", Offset = "0x10CA624", VA = "0x10CA624")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000348")]
		public static int ExtrudeSliderBottom
		{
			[Token(Token = "0x60017FC")]
			[Address(RVA = "0x10CA62C", Offset = "0x10CA62C", VA = "0x10CA62C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000349")]
		public static int ExtrudeCapLeft
		{
			[Token(Token = "0x60017FD")]
			[Address(RVA = "0x10CA634", Offset = "0x10CA634", VA = "0x10CA634")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034A")]
		public static int ExtrudeCapRight
		{
			[Token(Token = "0x60017FE")]
			[Address(RVA = "0x10CA63C", Offset = "0x10CA63C", VA = "0x10CA63C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034B")]
		public static int ExtrudeCapFront
		{
			[Token(Token = "0x60017FF")]
			[Address(RVA = "0x10CA644", Offset = "0x10CA644", VA = "0x10CA644")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034C")]
		public static int ExtrudeCapBack
		{
			[Token(Token = "0x6001800")]
			[Address(RVA = "0x10CA64C", Offset = "0x10CA64C", VA = "0x10CA64C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034D")]
		public static int ExtrudeCapTop
		{
			[Token(Token = "0x6001801")]
			[Address(RVA = "0x10CA654", Offset = "0x10CA654", VA = "0x10CA654")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034E")]
		public static int ExtrudeCapBottom
		{
			[Token(Token = "0x6001802")]
			[Address(RVA = "0x10CA65C", Offset = "0x10CA65C", VA = "0x10CA65C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034F")]
		public static int MirrorPlane
		{
			[Token(Token = "0x6001803")]
			[Address(RVA = "0x10CA664", Offset = "0x10CA664", VA = "0x10CA664")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000350")]
		public static int SafeClientId
		{
			[Token(Token = "0x6001804")]
			[Address(RVA = "0x10CA66C", Offset = "0x10CA66C", VA = "0x10CA66C")]
			get
			{
				return default(int);
			}
		}
	}
	[Token(Token = "0x200045A")]
	public class GizmoHandleShape2D
	{
		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _isVisible;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool _isHoverable;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Shape2D _shape;

		[Token(Token = "0x17000351")]
		public Shape2D Shape
		{
			[Token(Token = "0x6001805")]
			[Address(RVA = "0x10CA674", Offset = "0x10CA674", VA = "0x10CA674")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000352")]
		public bool IsVisible
		{
			[Token(Token = "0x6001806")]
			[Address(RVA = "0x10CA67C", Offset = "0x10CA67C", VA = "0x10CA67C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001807")]
			[Address(RVA = "0x10CA684", Offset = "0x10CA684", VA = "0x10CA684")]
			set
			{
			}
		}

		[Token(Token = "0x17000353")]
		public bool IsHoverable
		{
			[Token(Token = "0x6001808")]
			[Address(RVA = "0x10CA690", Offset = "0x10CA690", VA = "0x10CA690")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001809")]
			[Address(RVA = "0x10CA698", Offset = "0x10CA698", VA = "0x10CA698")]
			set
			{
			}
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x10C8E0C", Offset = "0x10C8E0C", VA = "0x10C8E0C")]
		public GizmoHandleShape2D(Shape2D shape)
		{
		}
	}
	[Token(Token = "0x200045B")]
	public class GizmoHandleShape3D
	{
		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _isVisible;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool _isHoverable;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Shape3D _shape;

		[Token(Token = "0x17000354")]
		public Shape3D Shape
		{
			[Token(Token = "0x600180B")]
			[Address(RVA = "0x10CA6A4", Offset = "0x10CA6A4", VA = "0x10CA6A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000355")]
		public bool IsVisible
		{
			[Token(Token = "0x600180C")]
			[Address(RVA = "0x10CA6AC", Offset = "0x10CA6AC", VA = "0x10CA6AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600180D")]
			[Address(RVA = "0x10CA6B4", Offset = "0x10CA6B4", VA = "0x10CA6B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000356")]
		public bool IsHoverable
		{
			[Token(Token = "0x600180E")]
			[Address(RVA = "0x10CA6C0", Offset = "0x10CA6C0", VA = "0x10CA6C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600180F")]
			[Address(RVA = "0x10CA6C8", Offset = "0x10CA6C8", VA = "0x10CA6C8")]
			set
			{
			}
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0x10C8CAC", Offset = "0x10C8CAC", VA = "0x10C8CAC")]
		public GizmoHandleShape3D(Shape3D shape)
		{
		}
	}
	[Token(Token = "0x200045C")]
	public interface IGizmoHandle
	{
		[Token(Token = "0x17000357")]
		int Id
		{
			[Token(Token = "0x6001811")]
			get;
		}

		[Token(Token = "0x17000358")]
		Gizmo Gizmo
		{
			[Token(Token = "0x6001812")]
			get;
		}

		[Token(Token = "0x17000359")]
		IGizmoDragSession DragSession
		{
			[Token(Token = "0x6001813")]
			get;
			[Token(Token = "0x6001814")]
			set;
		}

		[Token(Token = "0x1700035A")]
		Priority GenericHoverPriority
		{
			[Token(Token = "0x6001815")]
			get;
		}

		[Token(Token = "0x1700035B")]
		Priority HoverPriority2D
		{
			[Token(Token = "0x6001816")]
			get;
		}

		[Token(Token = "0x1700035C")]
		Priority HoverPriority3D
		{
			[Token(Token = "0x6001817")]
			get;
		}

		[Token(Token = "0x1700035D")]
		int Num3DShapes
		{
			[Token(Token = "0x6001818")]
			get;
		}

		[Token(Token = "0x1700035E")]
		int Num2DShapes
		{
			[Token(Token = "0x6001819")]
			get;
		}

		[Token(Token = "0x1700035F")]
		bool Has3DShapes
		{
			[Token(Token = "0x600181A")]
			get;
		}

		[Token(Token = "0x17000360")]
		bool Has2DShapes
		{
			[Token(Token = "0x600181B")]
			get;
		}

		[Token(Token = "0x17000361")]
		bool Is2DHoverable
		{
			[Token(Token = "0x600181C")]
			get;
			[Token(Token = "0x600181D")]
			set;
		}

		[Token(Token = "0x17000362")]
		bool Is3DHoverable
		{
			[Token(Token = "0x600181E")]
			get;
			[Token(Token = "0x600181F")]
			set;
		}

		[Token(Token = "0x17000363")]
		bool Is2DVisible
		{
			[Token(Token = "0x6001820")]
			get;
			[Token(Token = "0x6001821")]
			set;
		}

		[Token(Token = "0x17000364")]
		bool Is3DVisible
		{
			[Token(Token = "0x6001822")]
			get;
			[Token(Token = "0x6001823")]
			set;
		}

		[Token(Token = "0x6001824")]
		float GetZoomFactor(Camera camera);

		[Token(Token = "0x6001825")]
		void SetZoomFactorTransform(GizmoTransform transform);

		[Token(Token = "0x6001826")]
		void SetHoverable(bool isHoverable);

		[Token(Token = "0x6001827")]
		void SetVisible(bool isVisible);

		[Token(Token = "0x6001828")]
		Shape3D Get3DShape(int shapeIndex);

		[Token(Token = "0x6001829")]
		Shape2D Get2DShape(int shapeIndex);

		[Token(Token = "0x600182A")]
		void SetAll3DShapesVisible(bool visible);

		[Token(Token = "0x600182B")]
		void Set3DShapeVisible(int shapeIndex, bool isVisible);

		[Token(Token = "0x600182C")]
		void Set3DShapeHoverable(int shapeIndex, bool isHoverable);

		[Token(Token = "0x600182D")]
		void SetAll2DShapesVisible(bool visible);

		[Token(Token = "0x600182E")]
		void Set2DShapeVisible(int shapeIndex, bool isVisible);

		[Token(Token = "0x600182F")]
		void Set2DShapeHoverable(int shapeIndex, bool isHoverable);

		[Token(Token = "0x6001830")]
		bool Is3DShapeVisible(int shapeIndex);

		[Token(Token = "0x6001831")]
		bool Is2DShapeVisible(int shapeIndex);

		[Token(Token = "0x6001832")]
		bool Contains3DShape(Shape3D shape);

		[Token(Token = "0x6001833")]
		bool Contains2DShape(Shape2D shape);

		[Token(Token = "0x6001834")]
		int Add3DShape(Shape3D shape);

		[Token(Token = "0x6001835")]
		int Add2DShape(Shape2D shape);

		[Token(Token = "0x6001836")]
		void Remove3DShape(Shape3D shape);

		[Token(Token = "0x6001837")]
		void Remove2DShape(Shape2D shape);

		[Token(Token = "0x6001838")]
		void Render3DSolid();

		[Token(Token = "0x6001839")]
		void Render3DWire();

		[Token(Token = "0x600183A")]
		void Render3DSolid(int shapeIndex);

		[Token(Token = "0x600183B")]
		void Render3DWire(int shapeIndex);

		[Token(Token = "0x600183C")]
		void Render2DSolid(Camera camera);

		[Token(Token = "0x600183D")]
		void Render2DWire(Camera camera);

		[Token(Token = "0x600183E")]
		void Render2DSolid(Camera camera, int shapeIndex);

		[Token(Token = "0x600183F")]
		void Render2DWire(Camera camera, int shapeIndex);

		[Token(Token = "0x6001840")]
		GizmoHandleHoverData GetHoverData(Ray hoverRay);
	}
	[Token(Token = "0x200045D")]
	public interface IRTTransformGizmoListener
	{
		[Token(Token = "0x6001841")]
		bool OnCanBeTransformed(Gizmo transformGizmo);

		[Token(Token = "0x6001842")]
		void OnTransformed(Gizmo transformGizmo);
	}
	[Token(Token = "0x200045E")]
	public class GizmoCircularMaterial : Singleton<GizmoCircularMaterial>
	{
		[Token(Token = "0x200045F")]
		public enum Type
		{
			[Token(Token = "0x400148E")]
			Circle,
			[Token(Token = "0x400148F")]
			Torus,
			[Token(Token = "0x4001490")]
			CylindricalTorus
		}

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Type _circularType;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material _circleMaterial;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material _torusMaterial;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _cylindricalTorusMaterial;

		[Token(Token = "0x17000365")]
		public Material CircleMaterial
		{
			[Token(Token = "0x6001843")]
			[Address(RVA = "0x10CA6D4", Offset = "0x10CA6D4", VA = "0x10CA6D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000366")]
		public Material TorusMaterial
		{
			[Token(Token = "0x6001844")]
			[Address(RVA = "0x10CA7F8", Offset = "0x10CA7F8", VA = "0x10CA7F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000367")]
		public Material CylindricalTorusMaterial
		{
			[Token(Token = "0x6001845")]
			[Address(RVA = "0x10CA91C", Offset = "0x10CA91C", VA = "0x10CA91C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000368")]
		public Material Material
		{
			[Token(Token = "0x6001846")]
			[Address(RVA = "0x10CAA40", Offset = "0x10CAA40", VA = "0x10CAA40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000369")]
		public Type CircularType
		{
			[Token(Token = "0x6001847")]
			[Address(RVA = "0x10CAA5C", Offset = "0x10CAA5C", VA = "0x10CAA5C")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x6001848")]
			[Address(RVA = "0x10CAA64", Offset = "0x10CAA64", VA = "0x10CAA64")]
			set
			{
			}
		}

		[Token(Token = "0x1700036A")]
		public bool IsLit
		{
			[Token(Token = "0x6001849")]
			[Address(RVA = "0x10CAA6C", Offset = "0x10CAA6C", VA = "0x10CAA6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700036B")]
		public float LightIntensity
		{
			[Token(Token = "0x600184A")]
			[Address(RVA = "0x10CAAD0", Offset = "0x10CAAD0", VA = "0x10CAAD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x10CAB28", Offset = "0x10CAB28", VA = "0x10CAB28")]
		public GizmoCircularMaterial()
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x10CAB9C", Offset = "0x10CAB9C", VA = "0x10CAB9C")]
		public void ResetValuesToSensibleDefaults()
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x10CADBC", Offset = "0x10CADBC", VA = "0x10CADBC")]
		public void SetCullAlphaScale(float scale)
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x10CAE24", Offset = "0x10CAE24", VA = "0x10CAE24")]
		public void SetShapeCenter(Vector3 center)
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x10CAEC8", Offset = "0x10CAEC8", VA = "0x10CAEC8")]
		public void SetTorusCoreRadius(float radius)
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x10CAF50", Offset = "0x10CAF50", VA = "0x10CAF50")]
		public void SetTorusTubeRadius(float radius)
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x10CAFD4", Offset = "0x10CAFD4", VA = "0x10CAFD4")]
		public void SetCylindricalTorusRadii(float hrzRadius, float vertRadius)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x10CB08C", Offset = "0x10CB08C", VA = "0x10CB08C")]
		public void SetCamera(Camera camera)
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x10CACF4", Offset = "0x10CACF4", VA = "0x10CACF4")]
		public void SetLit(bool isLit)
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x10CB154", Offset = "0x10CB154", VA = "0x10CB154")]
		public void SetLightDirection(Vector3 lightDir)
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x10CAD54", Offset = "0x10CAD54", VA = "0x10CAD54")]
		public void SetLightIntensity(float intensity)
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x10CB1D8", Offset = "0x10CB1D8", VA = "0x10CB1D8")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x10CABDC", Offset = "0x10CABDC", VA = "0x10CABDC")]
		public void SetZWriteEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x10CB260", Offset = "0x10CB260", VA = "0x10CB260")]
		public void SetZTestEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x10CAC3C", Offset = "0x10CAC3C", VA = "0x10CAC3C")]
		public void SetZTestAlways()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x10CB2CC", Offset = "0x10CB2CC", VA = "0x10CB2CC")]
		public void SetZTestLess()
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x10CAC98", Offset = "0x10CAC98", VA = "0x10CAC98")]
		public void SetCullModeBack()
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0x10CB328", Offset = "0x10CB328", VA = "0x10CB328")]
		public void SetCullModeFront()
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x10CB384", Offset = "0x10CB384", VA = "0x10CB384")]
		public void SetCullModeOff()
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x10CB3E0", Offset = "0x10CB3E0", VA = "0x10CB3E0")]
		public void SetPass(int passIndex)
		{
		}
	}
	[Token(Token = "0x2000460")]
	public class GizmoLabelMaterial : Singleton<GizmoLabelMaterial>
	{
		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Material _material;

		[Token(Token = "0x1700036C")]
		public Material Material
		{
			[Token(Token = "0x600185F")]
			[Address(RVA = "0x10CB400", Offset = "0x10CB400", VA = "0x10CB400")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x10CB524", Offset = "0x10CB524", VA = "0x10CB524")]
		public void ResetValuesToSensibleDefaults()
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x10CB58C", Offset = "0x10CB58C", VA = "0x10CB58C")]
		public void SetTexture(Texture2D texture)
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0x10CB5EC", Offset = "0x10CB5EC", VA = "0x10CB5EC")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x10CB674", Offset = "0x10CB674", VA = "0x10CB674")]
		public void SetPass(int passIndex)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x10CB52C", Offset = "0x10CB52C", VA = "0x10CB52C")]
		public void SetZWriteEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x10CB694", Offset = "0x10CB694", VA = "0x10CB694")]
		public void SetZTestLessEqual()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x10CB6F0", Offset = "0x10CB6F0", VA = "0x10CB6F0")]
		public void SetZTestAlways()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x10CB74C", Offset = "0x10CB74C", VA = "0x10CB74C")]
		public void SetZTestLess()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x10CB7A8", Offset = "0x10CB7A8", VA = "0x10CB7A8")]
		public GizmoLabelMaterial()
		{
		}
	}
	[Token(Token = "0x2000461")]
	public class GizmoLineMaterial : Singleton<GizmoLineMaterial>
	{
		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Material _material;

		[Token(Token = "0x1700036D")]
		public Material Material
		{
			[Token(Token = "0x6001869")]
			[Address(RVA = "0x10CB814", Offset = "0x10CB814", VA = "0x10CB814")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x10CB938", Offset = "0x10CB938", VA = "0x10CB938")]
		public void ResetValuesToSensibleDefaults()
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x10CBA10", Offset = "0x10CBA10", VA = "0x10CBA10")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x10CBA98", Offset = "0x10CBA98", VA = "0x10CBA98")]
		public void SetPass(int passIndex)
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x10CB954", Offset = "0x10CB954", VA = "0x10CB954")]
		public void SetZWriteEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x10CBAB8", Offset = "0x10CBAB8", VA = "0x10CBAB8")]
		public void SetZTestLessEqual()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x10CB9B4", Offset = "0x10CB9B4", VA = "0x10CB9B4")]
		public void SetZTestAlways()
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x10CBB14", Offset = "0x10CBB14", VA = "0x10CBB14")]
		public void SetZTestLess()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x10CBB70", Offset = "0x10CBB70", VA = "0x10CBB70")]
		public GizmoLineMaterial()
		{
		}
	}
	[Token(Token = "0x2000462")]
	public class GizmoSolidMaterial : Singleton<GizmoSolidMaterial>
	{
		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Material _material;

		[Token(Token = "0x1700036E")]
		public Material Material
		{
			[Token(Token = "0x6001872")]
			[Address(RVA = "0x10CBBDC", Offset = "0x10CBBDC", VA = "0x10CBBDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036F")]
		public bool IsLit
		{
			[Token(Token = "0x6001873")]
			[Address(RVA = "0x10CBD00", Offset = "0x10CBD00", VA = "0x10CBD00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000370")]
		public float LightIntensity
		{
			[Token(Token = "0x6001874")]
			[Address(RVA = "0x10CBD64", Offset = "0x10CBD64", VA = "0x10CBD64")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x10CBDBC", Offset = "0x10CBDBC", VA = "0x10CBDBC")]
		public GizmoSolidMaterial()
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x10CBE30", Offset = "0x10CBE30", VA = "0x10CBE30")]
		public void ResetValuesToSensibleDefaults()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x10CBF88", Offset = "0x10CBF88", VA = "0x10CBF88")]
		public void SetLit(bool isLit)
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x10CC050", Offset = "0x10CC050", VA = "0x10CC050")]
		public void SetLightDirection(Vector3 lightDir)
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x10CBFE8", Offset = "0x10CBFE8", VA = "0x10CBFE8")]
		public void SetLightIntensity(float intensity)
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x10CC0D4", Offset = "0x10CC0D4", VA = "0x10CC0D4")]
		public void SetColor(Color color)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x10CBE70", Offset = "0x10CBE70", VA = "0x10CBE70")]
		public void SetZWriteEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x10CC15C", Offset = "0x10CC15C", VA = "0x10CC15C")]
		public void SetZTestEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x10CBED0", Offset = "0x10CBED0", VA = "0x10CBED0")]
		public void SetZTestAlways()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x10CC1C8", Offset = "0x10CC1C8", VA = "0x10CC1C8")]
		public void SetZTestLess()
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x10CBF2C", Offset = "0x10CBF2C", VA = "0x10CBF2C")]
		public void SetCullModeBack()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x10CC224", Offset = "0x10CC224", VA = "0x10CC224")]
		public void SetCullModeFront()
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x10CC280", Offset = "0x10CC280", VA = "0x10CC280")]
		public void SetCullModeOff()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x10CC2DC", Offset = "0x10CC2DC", VA = "0x10CC2DC")]
		public void SetPass(int passIndex)
		{
		}
	}
	[Token(Token = "0x2000463")]
	public delegate void ObjectExtrudeGizmoExtrudeUpdateHandler(List<GameObject> clones);
	[Serializable]
	[Token(Token = "0x2000464")]
	public class ObjectExtrudeGizmo : GizmoBehaviour
	{
		[Token(Token = "0x2000465")]
		private struct HandleDragExtrudeData
		{
			[Token(Token = "0x40014A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 ExtrudeDir;

			[Token(Token = "0x40014AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 ExtrudeCenter;

			[Token(Token = "0x40014AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int AxisIndex;
		}

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> _objectBuffer;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _boxSize;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private GizmoSpace _extrudeSpace;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> _targetParents;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HashSet<GameObject> _ignoredParentObjects;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ObjectBounds.QueryConfig _boundsQConfig;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SceneOverlapFilter _sceneOverlapFilter;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ObjectExtrudeGizmoDragEnd _dragEndAction;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private HandleDragExtrudeData _handleDragExtrData;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GizmoLineSlider3D _rightExtrude;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GizmoLineSlider3D _upExtrude;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GizmoLineSlider3D _frontExtrude;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GizmoLineSlider3D _leftExtrude;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GizmoLineSlider3D _bottomExtrude;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GizmoLineSlider3D _backExtrude;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GizmoLineSlider3DCollection _extrudeSliders;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ObjectExtrudeGizmoLookAndFeel3D _lookAndFeel3D;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ObjectExtrudeGizmoLookAndFeel3D _sharedLookAndFeel3D;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private ObjectExtrudeGizmoHotkeys _hotkeys;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ObjectExtrudeGizmoHotkeys _sharedHotkeys;

		[Token(Token = "0x17000371")]
		public ObjectExtrudeGizmoLookAndFeel3D LookAndFeel3D
		{
			[Token(Token = "0x6001889")]
			[Address(RVA = "0x10CC5B0", Offset = "0x10CC5B0", VA = "0x10CC5B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000372")]
		public ObjectExtrudeGizmoLookAndFeel3D SharedLookAndFeel3D
		{
			[Token(Token = "0x600188A")]
			[Address(RVA = "0x10CC5CC", Offset = "0x10CC5CC", VA = "0x10CC5CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600188B")]
			[Address(RVA = "0x10CC5D4", Offset = "0x10CC5D4", VA = "0x10CC5D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000373")]
		public ObjectExtrudeGizmoHotkeys Hotkeys
		{
			[Token(Token = "0x600188C")]
			[Address(RVA = "0x10CC708", Offset = "0x10CC708", VA = "0x10CC708")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000374")]
		public ObjectExtrudeGizmoHotkeys SharedHotkeys
		{
			[Token(Token = "0x600188D")]
			[Address(RVA = "0x10CC724", Offset = "0x10CC724", VA = "0x10CC724")]
			get
			{
				return null;
			}
			[Token(Token = "0x600188E")]
			[Address(RVA = "0x10CC72C", Offset = "0x10CC72C", VA = "0x10CC72C")]
			set
			{
			}
		}

		[Token(Token = "0x17000375")]
		public Vector3 BoxCenter
		{
			[Token(Token = "0x600188F")]
			[Address(RVA = "0x10CC734", Offset = "0x10CC734", VA = "0x10CC734")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000376")]
		public Quaternion BoxRotation
		{
			[Token(Token = "0x6001890")]
			[Address(RVA = "0x10CC75C", Offset = "0x10CC75C", VA = "0x10CC75C")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000377")]
		public Vector3 BoxSize
		{
			[Token(Token = "0x6001891")]
			[Address(RVA = "0x10CC784", Offset = "0x10CC784", VA = "0x10CC784")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000378")]
		public Vector3 BoxRight
		{
			[Token(Token = "0x6001892")]
			[Address(RVA = "0x10CC790", Offset = "0x10CC790", VA = "0x10CC790")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000379")]
		public Vector3 BoxUp
		{
			[Token(Token = "0x6001893")]
			[Address(RVA = "0x10CC80C", Offset = "0x10CC80C", VA = "0x10CC80C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700037A")]
		public Vector3 BoxLook
		{
			[Token(Token = "0x6001894")]
			[Address(RVA = "0x10CC888", Offset = "0x10CC888", VA = "0x10CC888")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700037B")]
		public OBB OBB
		{
			[Token(Token = "0x6001895")]
			[Address(RVA = "0x10CC904", Offset = "0x10CC904", VA = "0x10CC904")]
			get
			{
				return default(OBB);
			}
		}

		[Token(Token = "0x1700037C")]
		public GizmoSpace ExtrudeSpace
		{
			[Token(Token = "0x6001896")]
			[Address(RVA = "0x10CC998", Offset = "0x10CC998", VA = "0x10CC998")]
			get
			{
				return default(GizmoSpace);
			}
		}

		[Token(Token = "0x1700037D")]
		public int NumTargetParents
		{
			[Token(Token = "0x6001897")]
			[Address(RVA = "0x10CC9A0", Offset = "0x10CC9A0", VA = "0x10CC9A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000038")]
		public event ObjectExtrudeGizmoExtrudeUpdateHandler ExtrudeUpdate
		{
			[Token(Token = "0x6001887")]
			[Address(RVA = "0x10CC478", Offset = "0x10CC478", VA = "0x10CC478")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6001888")]
			[Address(RVA = "0x10CC514", Offset = "0x10CC514", VA = "0x10CC514")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x10CC9E8", Offset = "0x10CC9E8", VA = "0x10CC9E8")]
		public bool OwnsHandle(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x10CCA3C", Offset = "0x10CCA3C", VA = "0x10CCA3C")]
		public bool IsRightExtrudeHandle(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x10CCA94", Offset = "0x10CCA94", VA = "0x10CCA94")]
		public bool IsLeftExtrudeHandle(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x10CCAEC", Offset = "0x10CCAEC", VA = "0x10CCAEC")]
		public bool IsTopExtrudeHandle(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x10CCB44", Offset = "0x10CCB44", VA = "0x10CCB44")]
		public bool IsBottomExtrudeHandle(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x10CCB9C", Offset = "0x10CCB9C", VA = "0x10CCB9C")]
		public bool IsFrontExtrudeHandle(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x10CCBF4", Offset = "0x10CCBF4", VA = "0x10CCBF4")]
		public bool IsBackExtrudeHandle(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x10CCC4C", Offset = "0x10CCC4C", VA = "0x10CCC4C")]
		public void SetIgnoredParentObjects(IEnumerable<GameObject> ignoredParentObjects)
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x10CCF6C", Offset = "0x10CCF6C", VA = "0x10CCF6C")]
		public void SetExtrudeSpace(GizmoSpace extrudeSpace)
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x10CD560", Offset = "0x10CD560", VA = "0x10CD560")]
		public void SetExtrudeTargets(IEnumerable<GameObject> extrudeTargets)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x10CCFA4", Offset = "0x10CCFA4", VA = "0x10CCFA4")]
		public void FitBoxToTargets()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x10CD9E4", Offset = "0x10CD9E4", VA = "0x10CD9E4", Slot = "27")]
		public override void OnDetached()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x10CDB84", Offset = "0x10CDB84", VA = "0x10CDB84", Slot = "30")]
		public override void OnEnabled()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x10CDC18", Offset = "0x10CDC18", VA = "0x10CDC18", Slot = "31")]
		public override void OnDisabled()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x10CDCAC", Offset = "0x10CDCAC", VA = "0x10CDCAC", Slot = "28")]
		public override void OnGizmoEnabled()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x10CDCBC", Offset = "0x10CDCBC", VA = "0x10CDCBC", Slot = "26")]
		public override void OnAttached()
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x10CE2D0", Offset = "0x10CE2D0", VA = "0x10CE2D0", Slot = "40")]
		public override void OnGizmoUpdateBegin()
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x10CE7BC", Offset = "0x10CE7BC", VA = "0x10CE7BC", Slot = "43")]
		public override void OnGizmoRender(Camera camera)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x10CEAE4", Offset = "0x10CEAE4", VA = "0x10CEAE4", Slot = "35")]
		public override void OnGizmoDragBegin(int handleId)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x10CEE54", Offset = "0x10CEE54", VA = "0x10CEE54", Slot = "36")]
		public override void OnGizmoDragUpdate(int handleId)
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x10CFA80", Offset = "0x10CFA80", VA = "0x10CFA80", Slot = "37")]
		public override void OnGizmoDragEnd(int handleId)
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x10CE460", Offset = "0x10CE460", VA = "0x10CE460")]
		private void UpdateExtrudeSliderTransforms()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x10CFAC0", Offset = "0x10CFAC0", VA = "0x10CFAC0")]
		private void OnGizmoTransformChanged(GizmoTransform gizmoTransform, GizmoTransform.ChangeData changeData)
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x10CD744", Offset = "0x10CD744", VA = "0x10CD744")]
		private void SetAABB(AABB aabb)
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x10CD91C", Offset = "0x10CD91C", VA = "0x10CD91C")]
		private void SetOBB(OBB obb)
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x10CD84C", Offset = "0x10CD84C", VA = "0x10CD84C")]
		private void UpdateSnapSteps()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x10CE1B0", Offset = "0x10CE1B0", VA = "0x10CE1B0")]
		private void ValidateBoxSize()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x10CC5F0", Offset = "0x10CC5F0", VA = "0x10CC5F0")]
		private void SetupSharedLookAndFeel()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x10CFAF4", Offset = "0x10CFAF4", VA = "0x10CFAF4")]
		private void OnUndoRedoEnd(IUndoRedoAction action)
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x10CFB78", Offset = "0x10CFB78", VA = "0x10CFB78")]
		public ObjectExtrudeGizmo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000467")]
	public class ObjectExtrudeGizmoHotkeys : Settings
	{
		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Hotkeys _enableOverlapTest;

		[Token(Token = "0x1700037E")]
		public Hotkeys EnableOverlapTest
		{
			[Token(Token = "0x60018B9")]
			[Address(RVA = "0x10D0160", Offset = "0x10D0160", VA = "0x10D0160")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x10CFFC0", Offset = "0x10CFFC0", VA = "0x10CFFC0")]
		public ObjectExtrudeGizmoHotkeys()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000468")]
	public class ObjectExtrudeGizmoLookAndFeel3D : Settings
	{
		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color _boxWireColor;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GizmoLineSlider3DLookAndFeel[] _sglSlidersLookAndFeel;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool[] _extrudeSliderVis;

		[Token(Token = "0x1700037F")]
		public bool UseZoomFactor
		{
			[Token(Token = "0x60018BB")]
			[Address(RVA = "0x10D0168", Offset = "0x10D0168", VA = "0x10D0168")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000380")]
		public Color BoxWireColor
		{
			[Token(Token = "0x60018BC")]
			[Address(RVA = "0x10D01A0", Offset = "0x10D01A0", VA = "0x10D01A0")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000381")]
		public GizmoCap3DType SliderCapType
		{
			[Token(Token = "0x60018BD")]
			[Address(RVA = "0x10D01AC", Offset = "0x10D01AC", VA = "0x10D01AC")]
			get
			{
				return default(GizmoCap3DType);
			}
		}

		[Token(Token = "0x17000382")]
		public GizmoShadeMode SliderCapShadeMode
		{
			[Token(Token = "0x60018BE")]
			[Address(RVA = "0x10D01E4", Offset = "0x10D01E4", VA = "0x10D01E4")]
			get
			{
				return default(GizmoShadeMode);
			}
		}

		[Token(Token = "0x17000383")]
		public GizmoFillMode3D SliderCapFillMode
		{
			[Token(Token = "0x60018BF")]
			[Address(RVA = "0x10D021C", Offset = "0x10D021C", VA = "0x10D021C")]
			get
			{
				return default(GizmoFillMode3D);
			}
		}

		[Token(Token = "0x17000384")]
		public Color XColor
		{
			[Token(Token = "0x60018C0")]
			[Address(RVA = "0x10D0254", Offset = "0x10D0254", VA = "0x10D0254")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000385")]
		public Color YColor
		{
			[Token(Token = "0x60018C1")]
			[Address(RVA = "0x10D02CC", Offset = "0x10D02CC", VA = "0x10D02CC")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000386")]
		public Color ZColor
		{
			[Token(Token = "0x60018C2")]
			[Address(RVA = "0x10D0304", Offset = "0x10D0304", VA = "0x10D0304")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000387")]
		public Color HoveredColor
		{
			[Token(Token = "0x60018C3")]
			[Address(RVA = "0x10D033C", Offset = "0x10D033C", VA = "0x10D033C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000388")]
		public float SliderBoxCapWidth
		{
			[Token(Token = "0x60018C4")]
			[Address(RVA = "0x10D0370", Offset = "0x10D0370", VA = "0x10D0370")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000389")]
		public float SliderBoxCapHeight
		{
			[Token(Token = "0x60018C5")]
			[Address(RVA = "0x10D03A8", Offset = "0x10D03A8", VA = "0x10D03A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038A")]
		public float SliderBoxCapDepth
		{
			[Token(Token = "0x60018C6")]
			[Address(RVA = "0x10D03E0", Offset = "0x10D03E0", VA = "0x10D03E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038B")]
		public float SliderConeCapHeight
		{
			[Token(Token = "0x60018C7")]
			[Address(RVA = "0x10D0418", Offset = "0x10D0418", VA = "0x10D0418")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038C")]
		public float SliderConeCapBaseRadius
		{
			[Token(Token = "0x60018C8")]
			[Address(RVA = "0x10D0450", Offset = "0x10D0450", VA = "0x10D0450")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038D")]
		public float SliderPyramidCapWidth
		{
			[Token(Token = "0x60018C9")]
			[Address(RVA = "0x10D0488", Offset = "0x10D0488", VA = "0x10D0488")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038E")]
		public float SliderPyramidCapHeight
		{
			[Token(Token = "0x60018CA")]
			[Address(RVA = "0x10D04C0", Offset = "0x10D04C0", VA = "0x10D04C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038F")]
		public float SliderPyramidCapDepth
		{
			[Token(Token = "0x60018CB")]
			[Address(RVA = "0x10D04F8", Offset = "0x10D04F8", VA = "0x10D04F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000390")]
		public float SliderTriPrismCapWidth
		{
			[Token(Token = "0x60018CC")]
			[Address(RVA = "0x10D0530", Offset = "0x10D0530", VA = "0x10D0530")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000391")]
		public float SliderTriPrismCapHeight
		{
			[Token(Token = "0x60018CD")]
			[Address(RVA = "0x10D0568", Offset = "0x10D0568", VA = "0x10D0568")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000392")]
		public float SliderTriPrismCapDepth
		{
			[Token(Token = "0x60018CE")]
			[Address(RVA = "0x10D05A0", Offset = "0x10D05A0", VA = "0x10D05A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000393")]
		public float SliderSphereCapRadius
		{
			[Token(Token = "0x60018CF")]
			[Address(RVA = "0x10D05D8", Offset = "0x10D05D8", VA = "0x10D05D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x10CFD90", Offset = "0x10CFD90", VA = "0x10CFD90")]
		public ObjectExtrudeGizmoLookAndFeel3D()
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x10CE778", Offset = "0x10CE778", VA = "0x10CE778")]
		public bool IsExtrudeSliderVisible(int axisIndex, AxisSign axisSign)
		{
			return default(bool);
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x10D0714", Offset = "0x10D0714", VA = "0x10D0714")]
		public void SetExtrudeSliderVisible(int axisIndex, AxisSign axisSign, bool isVisible)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x10D075C", Offset = "0x10D075C", VA = "0x10D075C")]
		public void SetBoxWireColor(Color color)
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x10D06C8", Offset = "0x10D06C8", VA = "0x10D06C8")]
		public void SetSliderCapType(GizmoCap3DType capType)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x10D0768", Offset = "0x10D0768", VA = "0x10D0768")]
		public void SetSliderBoxCapWidth(float width)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x10D07E0", Offset = "0x10D07E0", VA = "0x10D07E0")]
		public void SetSliderBoxCapHeight(float height)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x10D0858", Offset = "0x10D0858", VA = "0x10D0858")]
		public void SetSliderBoxCapDepth(float depth)
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x10D08D0", Offset = "0x10D08D0", VA = "0x10D08D0")]
		public void SetSliderConeCapHeight(float height)
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x10D0948", Offset = "0x10D0948", VA = "0x10D0948")]
		public void SetSliderConeCapBaseRadius(float radius)
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x10D09C0", Offset = "0x10D09C0", VA = "0x10D09C0")]
		public void SetSliderPyramidCapWidth(float width)
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0x10D0A38", Offset = "0x10D0A38", VA = "0x10D0A38")]
		public void SetSliderPyramidCapHeight(float height)
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0x10D0AB0", Offset = "0x10D0AB0", VA = "0x10D0AB0")]
		public void SetSliderPyramidCapDepth(float depth)
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0x10D0B28", Offset = "0x10D0B28", VA = "0x10D0B28")]
		public void SetSliderTriPrismCapWidth(float width)
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x10D0BA0", Offset = "0x10D0BA0", VA = "0x10D0BA0")]
		public void SetSliderTriPrismCapHeight(float height)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x10D0C18", Offset = "0x10D0C18", VA = "0x10D0C18")]
		public void SetSliderTriPrismCapDepth(float depth)
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x10D0C90", Offset = "0x10D0C90", VA = "0x10D0C90")]
		public void SetSliderSphereCapRadius(float radius)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x10D0D08", Offset = "0x10D0D08", VA = "0x10D0D08")]
		public void SetUseZoomFactor(bool useZoomFactor)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x10D0D58", Offset = "0x10D0D58", VA = "0x10D0D58")]
		public void SetSliderCapShadeMode(GizmoShadeMode shadeMode)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x10D0DA4", Offset = "0x10D0DA4", VA = "0x10D0DA4")]
		public void SetSliderCapFillMode(GizmoFillMode3D fillMode)
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x10D0610", Offset = "0x10D0610", VA = "0x10D0610")]
		public void SetAxisColor(int axisIndex, Color color)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x10D0DF0", Offset = "0x10D0DF0", VA = "0x10D0DF0")]
		public void SetHoveredColor(Color hoveredColor)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x10CFAC4", Offset = "0x10CFAC4", VA = "0x10CFAC4")]
		public void ConnectSliderLookAndFeel(GizmoLineSlider3D slider, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x10D0288", Offset = "0x10D0288", VA = "0x10D0288")]
		private GizmoLineSlider3DLookAndFeel GetSglSliderLookAndFeel(int axisIndex, AxisSign axisSign)
		{
			return null;
		}
	}
	[Token(Token = "0x2000469")]
	public delegate void GizmoEngineCanDoHoverUpdateHandler(YesNoAnswer answer);
	[Token(Token = "0x200046A")]
	public enum GizmosEnginePipelineStage
	{
		[Token(Token = "0x40014B3")]
		Update,
		[Token(Token = "0x40014B4")]
		PostUpdate,
		[Token(Token = "0x40014B5")]
		Render,
		[Token(Token = "0x40014B6")]
		PostRender,
		[Token(Token = "0x40014B7")]
		GUI,
		[Token(Token = "0x40014B8")]
		PostGUI
	}
	[Token(Token = "0x200046B")]
	public class RTGizmosEngine : MonoSingleton<RTGizmosEngine>, IHoverableSceneEntityContainer
	{
		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EditorToolbar _mainToolbar;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GizmoEngineSettings _settings;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GizmosEnginePipelineStage _pipelineStage;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Gizmo _draggedGizmo;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _justReleasedDrag;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gizmo _hoveredGizmo;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GizmoHoverInfo _gizmoHoverInfo;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Gizmo> _gizmos;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<ISceneGizmo> _sceneGizmos;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<RTSceneGizmoCamera> _sceneGizmoCameras;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<Camera> _renderCameras;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private SceneGizmoLookAndFeel _sharedSceneGizmoLookAndFeel;

		[Token(Token = "0x17000394")]
		public GizmoEngineSettings Settings
		{
			[Token(Token = "0x60018EE")]
			[Address(RVA = "0x10D110C", Offset = "0x10D110C", VA = "0x10D110C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000395")]
		public GizmosEnginePipelineStage PipelineStage
		{
			[Token(Token = "0x60018EF")]
			[Address(RVA = "0x10D1114", Offset = "0x10D1114", VA = "0x10D1114")]
			get
			{
				return default(GizmosEnginePipelineStage);
			}
		}

		[Token(Token = "0x17000396")]
		public Camera RenderStageCamera
		{
			[Token(Token = "0x60018F0")]
			[Address(RVA = "0x10C24A8", Offset = "0x10C24A8", VA = "0x10C24A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000397")]
		public bool HasHoveredSceneEntity
		{
			[Token(Token = "0x60018F1")]
			[Address(RVA = "0x10D111C", Offset = "0x10D111C", VA = "0x10D111C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000398")]
		public bool IsAnyGizmoHovered
		{
			[Token(Token = "0x60018F2")]
			[Address(RVA = "0x10D112C", Offset = "0x10D112C", VA = "0x10D112C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000399")]
		public Gizmo HoveredGizmo
		{
			[Token(Token = "0x60018F3")]
			[Address(RVA = "0x10D113C", Offset = "0x10D113C", VA = "0x10D113C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039A")]
		public Gizmo DraggedGizmo
		{
			[Token(Token = "0x60018F4")]
			[Address(RVA = "0x10D1144", Offset = "0x10D1144", VA = "0x10D1144")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039B")]
		public bool JustReleasedDrag
		{
			[Token(Token = "0x60018F5")]
			[Address(RVA = "0x10D114C", Offset = "0x10D114C", VA = "0x10D114C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700039C")]
		public int NumRenderCameras
		{
			[Token(Token = "0x60018F6")]
			[Address(RVA = "0x10CEA9C", Offset = "0x10CEA9C", VA = "0x10CEA9C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700039D")]
		public SceneGizmoLookAndFeel SharedSceneGizmoLookAndFeel
		{
			[Token(Token = "0x60018F7")]
			[Address(RVA = "0x10D1154", Offset = "0x10D1154", VA = "0x10D1154")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000039")]
		public event GizmoEngineCanDoHoverUpdateHandler CanDoHoverUpdate
		{
			[Token(Token = "0x60018EC")]
			[Address(RVA = "0x10D0FD4", Offset = "0x10D0FD4", VA = "0x10D0FD4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60018ED")]
			[Address(RVA = "0x10D1070", Offset = "0x10D1070", VA = "0x10D1070")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x10D115C", Offset = "0x10D115C", VA = "0x10D115C")]
		public void AddRenderCamera(Camera camera)
		{
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x10D1238", Offset = "0x10D1238", VA = "0x10D1238")]
		public bool IsRenderCamera(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x10D1290", Offset = "0x10D1290", VA = "0x10D1290")]
		public void RemoveRenderCamera(Camera camera)
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x10D12E8", Offset = "0x10D12E8", VA = "0x10D12E8")]
		public RTSceneGizmoCamera CreateSceneGizmoCamera(Camera sceneCamera, ISceneGizmoCamViewportUpdater viewportUpdater)
		{
			return null;
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x10C5CAC", Offset = "0x10C5CAC", VA = "0x10C5CAC")]
		public bool IsSceneGizmoCamera(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x10D14F8", Offset = "0x10D14F8", VA = "0x10D14F8")]
		public ISceneGizmo GetSceneGizmoByCamera(Camera sceneCamera)
		{
			return null;
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x10D1720", Offset = "0x10D1720", VA = "0x10D1720")]
		public Gizmo CreateGizmo()
		{
			return null;
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x10D18E0", Offset = "0x10D18E0", VA = "0x10D18E0")]
		public void RemoveGizmo(Gizmo gizmo)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x10D19FC", Offset = "0x10D19FC", VA = "0x10D19FC")]
		public SceneGizmo CreateSceneGizmo(Camera sceneCamera)
		{
			return null;
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x10D1B50", Offset = "0x10D1B50", VA = "0x10D1B50")]
		public MoveGizmo CreateMoveGizmo()
		{
			return null;
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x10D1BD0", Offset = "0x10D1BD0", VA = "0x10D1BD0")]
		public ObjectTransformGizmo CreateObjectMoveGizmo()
		{
			return null;
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0x10D1C48", Offset = "0x10D1C48", VA = "0x10D1C48")]
		public RotationGizmo CreateRotationGizmo()
		{
			return null;
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0x10D1CC8", Offset = "0x10D1CC8", VA = "0x10D1CC8")]
		public ObjectTransformGizmo CreateObjectRotationGizmo()
		{
			return null;
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x10D1D40", Offset = "0x10D1D40", VA = "0x10D1D40")]
		public ScaleGizmo CreateScaleGizmo()
		{
			return null;
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0x10D1DC0", Offset = "0x10D1DC0", VA = "0x10D1DC0")]
		public ObjectTransformGizmo CreateObjectScaleGizmo()
		{
			return null;
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0x10D1E54", Offset = "0x10D1E54", VA = "0x10D1E54")]
		public UniversalGizmo CreateUniversalGizmo()
		{
			return null;
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x10D1ED4", Offset = "0x10D1ED4", VA = "0x10D1ED4")]
		public ObjectTransformGizmo CreateObjectUniversalGizmo()
		{
			return null;
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x10D1F4C", Offset = "0x10D1F4C", VA = "0x10D1F4C")]
		public BoxGizmo CreateBoxGizmo()
		{
			return null;
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x10D1FCC", Offset = "0x10D1FCC", VA = "0x10D1FCC")]
		public BoxGizmo CreateObjectBoxScaleGizmo()
		{
			return null;
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0x10D2004", Offset = "0x10D2004", VA = "0x10D2004")]
		public ObjectExtrudeGizmo CreateObjectExtrudeGizmo()
		{
			return null;
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x10D2080", Offset = "0x10D2080", VA = "0x10D2080")]
		public void Update_SystemCall()
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x10D285C", Offset = "0x10D285C", VA = "0x10D285C")]
		public GizmoHandleHoverData GetGizmoHandleHoverData(Gizmo gizmo)
		{
			return null;
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x10D2C24", Offset = "0x10D2C24", VA = "0x10D2C24")]
		public void Render_SystemCall(Camera renderCamera)
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x10D2ACC", Offset = "0x10D2ACC", VA = "0x10D2ACC")]
		private void SortHandleHoverDataCollection(List<GizmoHandleHoverData> hoverDataCollection, Vector3 inputDevicePos)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x10D1788", Offset = "0x10D1788", VA = "0x10D1788")]
		private void RegisterGizmo(Gizmo gizmo)
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x10D18E4", Offset = "0x10D18E4", VA = "0x10D18E4")]
		private void UnregisterGizmo(Gizmo gizmo)
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x10D2F90", Offset = "0x10D2F90", VA = "0x10D2F90")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x10D30E8", Offset = "0x10D30E8", VA = "0x10D30E8")]
		private void OnGizmoDragBegin(Gizmo gizmo, int handleId)
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x10D30F0", Offset = "0x10D30F0", VA = "0x10D30F0")]
		private void OnGizmoDragEnd(Gizmo gizmo, int handleId)
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x10D3118", Offset = "0x10D3118", VA = "0x10D3118")]
		public RTGizmosEngine()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class GizmoScaleGuide
	{
		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GizmoScaleGuideLookAndFeel _lookAndFeel;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GizmoScaleGuideLookAndFeel _sharedLookAndFeel;

		[Token(Token = "0x1700039E")]
		public GizmoScaleGuideLookAndFeel LookAndFeel
		{
			[Token(Token = "0x600191C")]
			[Address(RVA = "0x10D4D9C", Offset = "0x10D4D9C", VA = "0x10D4D9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039F")]
		public GizmoScaleGuideLookAndFeel SharedLookAndFeel
		{
			[Token(Token = "0x600191D")]
			[Address(RVA = "0x10D4DB8", Offset = "0x10D4DB8", VA = "0x10D4DB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600191E")]
			[Address(RVA = "0x10D4DC0", Offset = "0x10D4DC0", VA = "0x10D4DC0")]
			set
			{
			}
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x10D4DC8", Offset = "0x10D4DC8", VA = "0x10D4DC8")]
		public void Render(IEnumerable<GameObject> gameObjects, Camera camera)
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x10D5418", Offset = "0x10D5418", VA = "0x10D5418")]
		public GizmoScaleGuide()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000470")]
	public class GizmoScaleGuideLookAndFeel
	{
		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool _useZoomFactor;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Color _xAxisColor;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color _yAxisColor;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Color _zAxisColor;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _axisLength;

		[Token(Token = "0x170003A0")]
		public bool UseZoomFactor
		{
			[Token(Token = "0x6001921")]
			[Address(RVA = "0x10D54E0", Offset = "0x10D54E0", VA = "0x10D54E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001922")]
			[Address(RVA = "0x10D54E8", Offset = "0x10D54E8", VA = "0x10D54E8")]
			set
			{
			}
		}

		[Token(Token = "0x170003A1")]
		public Color XAxisColor
		{
			[Token(Token = "0x6001923")]
			[Address(RVA = "0x10D54F4", Offset = "0x10D54F4", VA = "0x10D54F4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001924")]
			[Address(RVA = "0x10D5500", Offset = "0x10D5500", VA = "0x10D5500")]
			set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		public Color YAxisColor
		{
			[Token(Token = "0x6001925")]
			[Address(RVA = "0x10D550C", Offset = "0x10D550C", VA = "0x10D550C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001926")]
			[Address(RVA = "0x10D5518", Offset = "0x10D5518", VA = "0x10D5518")]
			set
			{
			}
		}

		[Token(Token = "0x170003A3")]
		public Color ZAxisColor
		{
			[Token(Token = "0x6001927")]
			[Address(RVA = "0x10D5524", Offset = "0x10D5524", VA = "0x10D5524")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001928")]
			[Address(RVA = "0x10D5530", Offset = "0x10D5530", VA = "0x10D5530")]
			set
			{
			}
		}

		[Token(Token = "0x170003A4")]
		public float AxisLength
		{
			[Token(Token = "0x6001929")]
			[Address(RVA = "0x10D553C", Offset = "0x10D553C", VA = "0x10D553C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600192A")]
			[Address(RVA = "0x10D5544", Offset = "0x10D5544", VA = "0x10D5544")]
			set
			{
			}
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x10D5488", Offset = "0x10D5488", VA = "0x10D5488")]
		public GizmoScaleGuideLookAndFeel()
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class GizmoScalerHandle
	{
		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _handleId;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<int> _scaleDragAxisIndices;

		[Token(Token = "0x170003A5")]
		public int HandleId
		{
			[Token(Token = "0x600192C")]
			[Address(RVA = "0x10D5554", Offset = "0x10D5554", VA = "0x10D5554")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003A6")]
		public List<int> ScaleDragAxisIndices
		{
			[Token(Token = "0x600192D")]
			[Address(RVA = "0x10D555C", Offset = "0x10D555C", VA = "0x10D555C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x10D55D8", Offset = "0x10D55D8", VA = "0x10D55D8")]
		public GizmoScalerHandle(int handleId, IEnumerable<int> scaleDragAxisIndices)
		{
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x10D56C0", Offset = "0x10D56C0", VA = "0x10D56C0")]
		public bool ContainsScaleDragAxisIndex(int scaleDragAxisIndex)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000472")]
	public interface ISceneGizmo
	{
		[Token(Token = "0x170003A7")]
		Gizmo OwnerGizmo
		{
			[Token(Token = "0x6001930")]
			get;
		}

		[Token(Token = "0x170003A8")]
		Camera SceneCamera
		{
			[Token(Token = "0x6001931")]
			get;
		}
	}
	[Token(Token = "0x2000473")]
	public interface ISceneGizmoCamViewportUpdater
	{
		[Token(Token = "0x6001932")]
		void Update(RTSceneGizmoCamera sceneGizmoCamera);
	}
	[Token(Token = "0x2000474")]
	public class RTSceneGizmoCamera : MonoBehaviour
	{
		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera _camera;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform _transform;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _lookAtPoint;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _fieldOfView;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _orthoSize;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _offsetFromFocusPt;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera _sceneCamera;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ISceneGizmoCamViewportUpdater _viewportUpdater;

		[Token(Token = "0x170003A9")]
		public Camera Camera
		{
			[Token(Token = "0x6001933")]
			[Address(RVA = "0x10D5718", Offset = "0x10D5718", VA = "0x10D5718")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AA")]
		public Camera SceneCamera
		{
			[Token(Token = "0x6001934")]
			[Address(RVA = "0x10D5720", Offset = "0x10D5720", VA = "0x10D5720")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001935")]
			[Address(RVA = "0x10D5728", Offset = "0x10D5728", VA = "0x10D5728")]
			set
			{
			}
		}

		[Token(Token = "0x170003AB")]
		public ISceneGizmoCamViewportUpdater ViewportUpdater
		{
			[Token(Token = "0x6001936")]
			[Address(RVA = "0x10D580C", Offset = "0x10D580C", VA = "0x10D580C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001937")]
			[Address(RVA = "0x10D5814", Offset = "0x10D5814", VA = "0x10D5814")]
			set
			{
			}
		}

		[Token(Token = "0x170003AC")]
		public Vector3 WorldPosition
		{
			[Token(Token = "0x6001938")]
			[Address(RVA = "0x10D5824", Offset = "0x10D5824", VA = "0x10D5824")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001939")]
			[Address(RVA = "0x10D5840", Offset = "0x10D5840", VA = "0x10D5840")]
			set
			{
			}
		}

		[Token(Token = "0x170003AD")]
		public Quaternion WorldRotation
		{
			[Token(Token = "0x600193A")]
			[Address(RVA = "0x10D585C", Offset = "0x10D585C", VA = "0x10D585C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600193B")]
			[Address(RVA = "0x10D5878", Offset = "0x10D5878", VA = "0x10D5878")]
			set
			{
			}
		}

		[Token(Token = "0x170003AE")]
		public Vector3 Right
		{
			[Token(Token = "0x600193C")]
			[Address(RVA = "0x10D5894", Offset = "0x10D5894", VA = "0x10D5894")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003AF")]
		public Vector3 Up
		{
			[Token(Token = "0x600193D")]
			[Address(RVA = "0x10D58B0", Offset = "0x10D58B0", VA = "0x10D58B0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003B0")]
		public Vector3 Look
		{
			[Token(Token = "0x600193E")]
			[Address(RVA = "0x10D58CC", Offset = "0x10D58CC", VA = "0x10D58CC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003B1")]
		public Vector3 LookAtPoint
		{
			[Token(Token = "0x600193F")]
			[Address(RVA = "0x10D58E8", Offset = "0x10D58E8", VA = "0x10D58E8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0x10D58F4", Offset = "0x10D58F4", VA = "0x10D58F4")]
		public void Update_SystemCall()
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0x10D5A78", Offset = "0x10D5A78", VA = "0x10D5A78")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0x10D5B04", Offset = "0x10D5B04", VA = "0x10D5B04")]
		private void Start()
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0x10D5D4C", Offset = "0x10D5D4C", VA = "0x10D5D4C")]
		public RTSceneGizmoCamera()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public class SceneGizmoAxisCap : SceneGizmoCap
	{
		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AxisDescriptor _axisDesc;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BoxFace _midAxisBoxFace;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GizmoTransform _zoomFactorTransform;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ColorRef _color;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ColorTransition _colorTransition;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Texture2D _labelTexture;

		[Token(Token = "0x6001944")]
		[Address(RVA = "0x10D5DC0", Offset = "0x10D5DC0", VA = "0x10D5DC0")]
		public SceneGizmoAxisCap(SceneGizmo sceneGizmo, int id, AxisDescriptor gizmoAxisDesc)
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0x10D6284", Offset = "0x10D6284", VA = "0x10D6284", Slot = "4")]
		public override void Render(Camera camera)
		{
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0x10D69AC", Offset = "0x10D69AC", VA = "0x10D69AC")]
		private void OnGizmoPreUpdateBegin(Gizmo gizmo)
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x10D6C80", Offset = "0x10D6C80", VA = "0x10D6C80")]
		private void UpdateHoverPermission()
		{
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0x10D6A2C", Offset = "0x10D6A2C", VA = "0x10D6A2C")]
		private void UpdateColor()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x10D6CCC", Offset = "0x10D6CCC", VA = "0x10D6CCC")]
		private void UpdateTransform(Camera camera)
		{
		}

		[Token(Token = "0x600194A")]
		[Address(RVA = "0x10D7020", Offset = "0x10D7020", VA = "0x10D7020")]
		private void OnGizmoHandlePicked(Gizmo gizmo, int handleId)
		{
		}
	}
	[Token(Token = "0x2000476")]
	public class SceneGizmoCamPrjSwitchLabel
	{
		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SceneGizmo _sceneGizmo;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GizmoHandle _handle;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private QuadShape2D _labelQuad;

		[Token(Token = "0x170003B2")]
		public GizmoHandle Handle
		{
			[Token(Token = "0x600194B")]
			[Address(RVA = "0x10D7190", Offset = "0x10D7190", VA = "0x10D7190")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B3")]
		public int Id
		{
			[Token(Token = "0x600194C")]
			[Address(RVA = "0x10D7198", Offset = "0x10D7198", VA = "0x10D7198")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x10D71B4", Offset = "0x10D71B4", VA = "0x10D71B4")]
		public SceneGizmoCamPrjSwitchLabel(SceneGizmo sceneGizmo)
		{
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x10D7360", Offset = "0x10D7360", VA = "0x10D7360")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0x10D7A98", Offset = "0x10D7A98", VA = "0x10D7A98")]
		private void OnGizmoPreUpdateBegin(Gizmo gizmo)
		{
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0x10D7ADC", Offset = "0x10D7ADC", VA = "0x10D7ADC")]
		private void UpdateTransform()
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x10D7CA8", Offset = "0x10D7CA8", VA = "0x10D7CA8")]
		private void OnGizmoHandlePicked(Gizmo gizmo, int handleId)
		{
		}
	}
	[Token(Token = "0x2000477")]
	public abstract class SceneGizmoCap
	{
		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected SceneGizmo _sceneGizmo;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected GizmoCap3D _cap;

		[Token(Token = "0x170003B4")]
		public int HandleId
		{
			[Token(Token = "0x6001952")]
			[Address(RVA = "0x10D7174", Offset = "0x10D7174", VA = "0x10D7174")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003B5")]
		public Vector3 Position
		{
			[Token(Token = "0x6001953")]
			[Address(RVA = "0x10D7D44", Offset = "0x10D7D44", VA = "0x10D7D44")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x10D6194", Offset = "0x10D6194", VA = "0x10D6194")]
		public SceneGizmoCap(SceneGizmo sceneGizmo, int capHandleId)
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x10D7D60", Offset = "0x10D7D60", VA = "0x10D7D60")]
		public void SetHoverable(bool isHoverable)
		{
		}

		[Token(Token = "0x6001956")]
		public abstract void Render(Camera camera);
	}
	[Token(Token = "0x2000478")]
	public class SceneGizmoMidCap : SceneGizmoCap
	{
		[Token(Token = "0x6001957")]
		[Address(RVA = "0x10D7D80", Offset = "0x10D7D80", VA = "0x10D7D80")]
		public SceneGizmoMidCap(SceneGizmo sceneGizmo)
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x10D7EE8", Offset = "0x10D7EE8", VA = "0x10D7EE8", Slot = "4")]
		public override void Render(Camera camera)
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x10D7F08", Offset = "0x10D7F08", VA = "0x10D7F08")]
		private void OnGizmoPreUpdateBegin(Gizmo gizmo)
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x10D7F4C", Offset = "0x10D7F4C", VA = "0x10D7F4C")]
		private void OnGizmoHandlePicked(Gizmo gizmo, int handleId)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000479")]
	public class SceneGizmo : GizmoBehaviour, ISceneGizmo
	{
		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SceneGizmoCamPrjSwitchLabel _camPrjSwitchLabel;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SceneGizmoMidCap _midAxisHandle;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SceneGizmoAxisCap[] _axesHandles;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<SceneGizmoCap> _renderSortedHandles;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RTSceneGizmoCamera _sceneGizmoCamera;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SceneGizmoLookAndFeel _lookAndFeel;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SceneGizmoLookAndFeel _sharedLookAndFeel;

		[Token(Token = "0x170003B6")]
		public RTSceneGizmoCamera SceneGizmoCamera
		{
			[Token(Token = "0x600195B")]
			[Address(RVA = "0x10D7FEC", Offset = "0x10D7FEC", VA = "0x10D7FEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B7")]
		public Gizmo OwnerGizmo
		{
			[Token(Token = "0x600195C")]
			[Address(RVA = "0x10D7FF4", Offset = "0x10D7FF4", VA = "0x10D7FF4", Slot = "44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B8")]
		public Camera SceneCamera
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0x10D7FFC", Offset = "0x10D7FFC", VA = "0x10D7FFC", Slot = "45")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B9")]
		public SceneGizmoLookAndFeel LookAndFeel
		{
			[Token(Token = "0x600195E")]
			[Address(RVA = "0x10D6238", Offset = "0x10D6238", VA = "0x10D6238")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BA")]
		public SceneGizmoLookAndFeel SharedLookAndFeel
		{
			[Token(Token = "0x600195F")]
			[Address(RVA = "0x10D8018", Offset = "0x10D8018", VA = "0x10D8018")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001960")]
			[Address(RVA = "0x10D8020", Offset = "0x10D8020", VA = "0x10D8020")]
			set
			{
			}
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x10D8028", Offset = "0x10D8028", VA = "0x10D8028", Slot = "26")]
		public override void OnAttached()
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x10D878C", Offset = "0x10D878C", VA = "0x10D878C", Slot = "42")]
		public override void OnGUI()
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x10D87A4", Offset = "0x10D87A4", VA = "0x10D87A4", Slot = "43")]
		public override void OnGizmoRender(Camera camera)
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x10D8A10", Offset = "0x10D8A10", VA = "0x10D8A10")]
		public SceneGizmo()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class SceneGizmoCamViewportUpdater : ISceneGizmoCamViewportUpdater
	{
		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SceneGizmo _sceneGizmo;

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x10D875C", Offset = "0x10D875C", VA = "0x10D875C")]
		public SceneGizmoCamViewportUpdater(SceneGizmo sceneGizmo)
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0x10D8E60", Offset = "0x10D8E60", VA = "0x10D8E60", Slot = "4")]
		public void Update(RTSceneGizmoCamera sceneGizmoCamera)
		{
		}
	}
	[Token(Token = "0x200047C")]
	public enum SceneGizmoScreenCorner
	{
		[Token(Token = "0x40014F1")]
		TopLeft,
		[Token(Token = "0x40014F2")]
		TopRight,
		[Token(Token = "0x40014F3")]
		BottomRight,
		[Token(Token = "0x40014F4")]
		BottomLeft
	}
	[Serializable]
	[Token(Token = "0x200047D")]
	public class SceneGizmoLookAndFeel : Settings
	{
		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float _baseScreenSize;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly float _invBaseScreenSize;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GizmoCap3DLookAndFeel _midCapLookAndFeel;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GizmoCap3DLookAndFeel[] _axesCapsLookAndFeel;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SceneGizmoScreenCorner _screenCorner;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector2 _screenOffset;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _screenSize;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color _axesLabelTint;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color _camPrjSwitchLabelTint;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool _isCamPrjSwitchLabelVisible;

		[Token(Token = "0x170003BB")]
		private GizmoCap3DLookAndFeel AxisCapLookAndFeel
		{
			[Token(Token = "0x6001969")]
			[Address(RVA = "0x10D9034", Offset = "0x10D9034", VA = "0x10D9034")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003BC")]
		public SceneGizmoScreenCorner ScreenCorner
		{
			[Token(Token = "0x600196A")]
			[Address(RVA = "0x10D905C", Offset = "0x10D905C", VA = "0x10D905C")]
			get
			{
				return default(SceneGizmoScreenCorner);
			}
			[Token(Token = "0x600196B")]
			[Address(RVA = "0x10D9064", Offset = "0x10D9064", VA = "0x10D9064")]
			set
			{
			}
		}

		[Token(Token = "0x170003BD")]
		public Vector2 ScreenOffset
		{
			[Token(Token = "0x600196C")]
			[Address(RVA = "0x10D906C", Offset = "0x10D906C", VA = "0x10D906C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600196D")]
			[Address(RVA = "0x10D9074", Offset = "0x10D9074", VA = "0x10D9074")]
			set
			{
			}
		}

		[Token(Token = "0x170003BE")]
		public float ScreenSize
		{
			[Token(Token = "0x600196E")]
			[Address(RVA = "0x10D907C", Offset = "0x10D907C", VA = "0x10D907C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600196F")]
			[Address(RVA = "0x10D9084", Offset = "0x10D9084", VA = "0x10D9084")]
			set
			{
			}
		}

		[Token(Token = "0x170003BF")]
		public Color AxesLabelTint
		{
			[Token(Token = "0x6001970")]
			[Address(RVA = "0x10D918C", Offset = "0x10D918C", VA = "0x10D918C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001971")]
			[Address(RVA = "0x10D9198", Offset = "0x10D9198", VA = "0x10D9198")]
			set
			{
			}
		}

		[Token(Token = "0x170003C0")]
		public Color CamPrjSwitchLabelTint
		{
			[Token(Token = "0x6001972")]
			[Address(RVA = "0x10D91A4", Offset = "0x10D91A4", VA = "0x10D91A4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001973")]
			[Address(RVA = "0x10D91B0", Offset = "0x10D91B0", VA = "0x10D91B0")]
			set
			{
			}
		}

		[Token(Token = "0x170003C1")]
		public bool IsCamPrjSwitchLabelVisible
		{
			[Token(Token = "0x6001974")]
			[Address(RVA = "0x10D91BC", Offset = "0x10D91BC", VA = "0x10D91BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001975")]
			[Address(RVA = "0x10D91C4", Offset = "0x10D91C4", VA = "0x10D91C4")]
			set
			{
			}
		}

		[Token(Token = "0x170003C2")]
		public Texture2D CamPerspModeLabelTexture
		{
			[Token(Token = "0x6001976")]
			[Address(RVA = "0x10D7900", Offset = "0x10D7900", VA = "0x10D7900")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C3")]
		public Texture2D CamOrthoModeLabelTexture
		{
			[Token(Token = "0x6001977")]
			[Address(RVA = "0x10D79CC", Offset = "0x10D79CC", VA = "0x10D79CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C4")]
		public Color HoveredColor
		{
			[Token(Token = "0x6001978")]
			[Address(RVA = "0x10D6ED4", Offset = "0x10D6ED4", VA = "0x10D6ED4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170003C5")]
		public GizmoCap3DType AxesCapType
		{
			[Token(Token = "0x6001979")]
			[Address(RVA = "0x10D91D0", Offset = "0x10D91D0", VA = "0x10D91D0")]
			get
			{
				return default(GizmoCap3DType);
			}
		}

		[Token(Token = "0x170003C6")]
		public GizmoCap3DType MidCapType
		{
			[Token(Token = "0x600197A")]
			[Address(RVA = "0x10D6F14", Offset = "0x10D6F14", VA = "0x10D6F14")]
			get
			{
				return default(GizmoCap3DType);
			}
		}

		[Token(Token = "0x170003C7")]
		public float MidCapBoxSize
		{
			[Token(Token = "0x600197B")]
			[Address(RVA = "0x10D6FA8", Offset = "0x10D6FA8", VA = "0x10D6FA8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003C8")]
		public float MidCapSphereRadius
		{
			[Token(Token = "0x600197C")]
			[Address(RVA = "0x10D6F30", Offset = "0x10D6F30", VA = "0x10D6F30")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003C9")]
		public float AxisConeHeight
		{
			[Token(Token = "0x600197D")]
			[Address(RVA = "0x10D91EC", Offset = "0x10D91EC", VA = "0x10D91EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003CA")]
		public float AxisConeRadius
		{
			[Token(Token = "0x600197E")]
			[Address(RVA = "0x10D9268", Offset = "0x10D9268", VA = "0x10D9268")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003CB")]
		public float AxisPyramidWidth
		{
			[Token(Token = "0x600197F")]
			[Address(RVA = "0x10D92E4", Offset = "0x10D92E4", VA = "0x10D92E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003CC")]
		public float AxisPyramidHeight
		{
			[Token(Token = "0x6001980")]
			[Address(RVA = "0x10D9360", Offset = "0x10D9360", VA = "0x10D9360")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003CD")]
		public float AxisPyramidDepth
		{
			[Token(Token = "0x6001981")]
			[Address(RVA = "0x10D93DC", Offset = "0x10D93DC", VA = "0x10D93DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003CE")]
		public float AxisLabelScreenSize
		{
			[Token(Token = "0x6001982")]
			[Address(RVA = "0x10D6938", Offset = "0x10D6938", VA = "0x10D6938")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003CF")]
		public float AxisCamAlignFadeOutThreshold
		{
			[Token(Token = "0x6001983")]
			[Address(RVA = "0x10D6EF4", Offset = "0x10D6EF4", VA = "0x10D6EF4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003D0")]
		public float AxisCamAlignFadeOutDuration
		{
			[Token(Token = "0x6001984")]
			[Address(RVA = "0x10D6F00", Offset = "0x10D6F00", VA = "0x10D6F00")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003D1")]
		public float AxisCamAlignFadeOutAlpha
		{
			[Token(Token = "0x6001985")]
			[Address(RVA = "0x10D6F0C", Offset = "0x10D6F0C", VA = "0x10D6F0C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x10D8B0C", Offset = "0x10D8B0C", VA = "0x10D8B0C")]
		public SceneGizmoLookAndFeel()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x10D9458", Offset = "0x10D9458", VA = "0x10D9458")]
		public void SetMidCapColor(Color color)
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x10D94A0", Offset = "0x10D94A0", VA = "0x10D94A0")]
		public void SetAxisCapColor(Color color, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x10D6EB4", Offset = "0x10D6EB4", VA = "0x10D6EB4")]
		public Color GetAxisCapColor(int axisIndex, AxisSign axisSign)
		{
			return default(Color);
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x10D9568", Offset = "0x10D9568", VA = "0x10D9568")]
		public void SetHoveredColor(Color hoveredColor)
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x10D95D0", Offset = "0x10D95D0", VA = "0x10D95D0")]
		public void SetMidCapFillMode(GizmoFillMode3D fillMode)
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0x10D95EC", Offset = "0x10D95EC", VA = "0x10D95EC")]
		public void SetAxisCapFillMode(GizmoFillMode3D fillMode)
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x10D9630", Offset = "0x10D9630", VA = "0x10D9630")]
		public void SetMidCapShadeMode(GizmoShadeMode shadeMode)
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x10D964C", Offset = "0x10D964C", VA = "0x10D964C")]
		public void SetAxisCapShadeMode(GizmoShadeMode shadeMode)
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x10D9690", Offset = "0x10D9690", VA = "0x10D9690")]
		public List<Enum> GetAllowedMidCapTypes()
		{
			return null;
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x10D9810", Offset = "0x10D9810", VA = "0x10D9810")]
		public List<Enum> GetAllowedAxesCapTypes()
		{
			return null;
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x10D998C", Offset = "0x10D998C", VA = "0x10D998C")]
		public bool IsMidCapTypeAllowed(GizmoCap3DType capType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x10D9478", Offset = "0x10D9478", VA = "0x10D9478")]
		public void SetMidCapType(GizmoCap3DType capType)
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x10D999C", Offset = "0x10D999C", VA = "0x10D999C")]
		public bool IsAxisCapTypeAllowed(GizmoCap3DType capType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x10D94E0", Offset = "0x10D94E0", VA = "0x10D94E0")]
		public void SetAxisCapType(GizmoCap3DType capType)
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x10D689C", Offset = "0x10D689C", VA = "0x10D689C")]
		public float GetAxesLabelWorldSize(Camera gizmoCam, Vector3 labelWorldPos)
		{
			return default(float);
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x10D7C0C", Offset = "0x10D7C0C", VA = "0x10D7C0C")]
		public Vector2 CalculateMaxPrjSwitchLabelRectSize()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x10D7EC4", Offset = "0x10D7EC4", VA = "0x10D7EC4")]
		public void ConnectMidCapLookAndFeel(GizmoCap3D midCap)
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x10D6254", Offset = "0x10D6254", VA = "0x10D6254")]
		public void ConnectAxisCapLookAndFeel(GizmoCap3D axisCap, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x10D9524", Offset = "0x10D9524", VA = "0x10D9524")]
		private GizmoCap3DLookAndFeel GetAxisCapLookAndFeel(int axisIndex, AxisSign axisSign)
		{
			return null;
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x10D9094", Offset = "0x10D9094", VA = "0x10D9094")]
		private void OnScreenSizeChanged()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200047E")]
	public class BoxGizmo : GizmoBehaviour
	{
		[Token(Token = "0x200047F")]
		public enum Usage
		{
			[Token(Token = "0x4001517")]
			Generic,
			[Token(Token = "0x4001518")]
			ObjectScale
		}

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Usage _usage;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isUsagePermanent;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _boxSize;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject _targetHierarchy;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _targetHierarchyTransform;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LocalTransformSnapshot _dragBeginTargetTransformSnapshot;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GizmoCap2D _rightTick;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GizmoCap2D _topTick;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GizmoCap2D _backTick;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GizmoCap2D _leftTick;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GizmoCap2D _bottomTick;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GizmoCap2D _frontTick;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GizmoCap2DCollection _ticks;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _scaleFromCenter;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 _scalePivot;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GizmoSglAxisScaleDrag3D.WorkData _scaleDragWorkData;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GizmoSglAxisScaleDrag3D _scaleDrag;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private BoxGizmoSettings3D _settings3D;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private BoxGizmoSettings3D _sharedSettings3D;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private BoxGizmoLookAndFeel3D _lookAndFeel3D;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private BoxGizmoLookAndFeel3D _sharedLookAndFeel3D;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private BoxGizmoHotkeys _hotkeys;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private BoxGizmoHotkeys _sharedHotkeys;

		[Token(Token = "0x170003D2")]
		public BoxGizmoSettings3D Settings3D
		{
			[Token(Token = "0x600199C")]
			[Address(RVA = "0x10D99F8", Offset = "0x10D99F8", VA = "0x10D99F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D3")]
		public BoxGizmoSettings3D SharedSettings3D
		{
			[Token(Token = "0x600199D")]
			[Address(RVA = "0x10D9A14", Offset = "0x10D9A14", VA = "0x10D9A14")]
			get
			{
				return null;
			}
			[Token(Token = "0x600199E")]
			[Address(RVA = "0x10D9A1C", Offset = "0x10D9A1C", VA = "0x10D9A1C")]
			set
			{
			}
		}

		[Token(Token = "0x170003D4")]
		public BoxGizmoLookAndFeel3D LookAndFeel3D
		{
			[Token(Token = "0x600199F")]
			[Address(RVA = "0x10D9A28", Offset = "0x10D9A28", VA = "0x10D9A28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D5")]
		public BoxGizmoLookAndFeel3D SharedLookAndFeel3D
		{
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0x10D9A44", Offset = "0x10D9A44", VA = "0x10D9A44")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A1")]
			[Address(RVA = "0x10D9A4C", Offset = "0x10D9A4C", VA = "0x10D9A4C")]
			set
			{
			}
		}

		[Token(Token = "0x170003D6")]
		public BoxGizmoHotkeys Hotkeys
		{
			[Token(Token = "0x60019A2")]
			[Address(RVA = "0x10D9B80", Offset = "0x10D9B80", VA = "0x10D9B80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D7")]
		public BoxGizmoHotkeys SharedHotkeys
		{
			[Token(Token = "0x60019A3")]
			[Address(RVA = "0x10D9B9C", Offset = "0x10D9B9C", VA = "0x10D9B9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A4")]
			[Address(RVA = "0x10D9BA4", Offset = "0x10D9BA4", VA = "0x10D9BA4")]
			set
			{
			}
		}

		[Token(Token = "0x170003D8")]
		public Usage BoxUsage
		{
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0x10D9BAC", Offset = "0x10D9BAC", VA = "0x10D9BAC")]
			get
			{
				return default(Usage);
			}
		}

		[Token(Token = "0x170003D9")]
		public bool IsUsagePermanent
		{
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0x10D9BB4", Offset = "0x10D9BB4", VA = "0x10D9BB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003DA")]
		public Vector3 BoxCenter
		{
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0x10D9BBC", Offset = "0x10D9BBC", VA = "0x10D9BBC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003DB")]
		public Quaternion BoxRotation
		{
			[Token(Token = "0x60019A8")]
			[Address(RVA = "0x10D9BE4", Offset = "0x10D9BE4", VA = "0x10D9BE4")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170003DC")]
		public Vector3 BoxRight
		{
			[Token(Token = "0x60019A9")]
			[Address(RVA = "0x10D9C0C", Offset = "0x10D9C0C", VA = "0x10D9C0C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003DD")]
		public Vector3 BoxUp
		{
			[Token(Token = "0x60019AA")]
			[Address(RVA = "0x10D9C88", Offset = "0x10D9C88", VA = "0x10D9C88")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003DE")]
		public Vector3 BoxLook
		{
			[Token(Token = "0x60019AB")]
			[Address(RVA = "0x10D9D04", Offset = "0x10D9D04", VA = "0x10D9D04")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x10D9D80", Offset = "0x10D9D80", VA = "0x10D9D80", Slot = "27")]
		public override void OnDetached()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x10D9F20", Offset = "0x10D9F20", VA = "0x10D9F20", Slot = "30")]
		public override void OnEnabled()
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x10D9FB4", Offset = "0x10D9FB4", VA = "0x10D9FB4", Slot = "31")]
		public override void OnDisabled()
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x10DA048", Offset = "0x10DA048", VA = "0x10DA048", Slot = "28")]
		public override void OnGizmoEnabled()
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x10DA058", Offset = "0x10DA058", VA = "0x10DA058")]
		public void MakeUsagePermanent()
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x10DA064", Offset = "0x10DA064", VA = "0x10DA064")]
		public bool OwnsHandle(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x10DA080", Offset = "0x10DA080", VA = "0x10DA080")]
		public bool IsXTick(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x10DA0D8", Offset = "0x10DA0D8", VA = "0x10DA0D8")]
		public bool IsYTick(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x10DA130", Offset = "0x10DA130", VA = "0x10DA130")]
		public bool IsZTick(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x10DA188", Offset = "0x10DA188", VA = "0x10DA188")]
		public void SetSnapEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x10DA1A8", Offset = "0x10DA1A8", VA = "0x10DA1A8")]
		public void SetSize(Vector3 size)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x10DA4B0", Offset = "0x10DA4B0", VA = "0x10DA4B0")]
		public void SetUsage(Usage usage)
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x10DA530", Offset = "0x10DA530", VA = "0x10DA530")]
		public bool SetTargetHierarchy(GameObject targetHierarchy)
		{
			return default(bool);
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x10DA6B0", Offset = "0x10DA6B0", VA = "0x10DA6B0")]
		public bool FitBoxToTargetHierarchy()
		{
			return default(bool);
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x10DA884", Offset = "0x10DA884", VA = "0x10DA884", Slot = "26")]
		public override void OnAttached()
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x10DAC14", Offset = "0x10DAC14", VA = "0x10DAC14", Slot = "33")]
		public override bool OnGizmoCanBeginDrag(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x10DAD38", Offset = "0x10DAD38", VA = "0x10DAD38", Slot = "40")]
		public override void OnGizmoUpdateBegin()
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x10DAEF8", Offset = "0x10DAEF8", VA = "0x10DAEF8", Slot = "43")]
		public override void OnGizmoRender(Camera camera)
		{
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x10DB1A0", Offset = "0x10DB1A0", VA = "0x10DB1A0", Slot = "34")]
		public override void OnGizmoAttemptHandleDragBegin(int handleId)
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x10DB7B4", Offset = "0x10DB7B4", VA = "0x10DB7B4", Slot = "36")]
		public override void OnGizmoDragUpdate(int handleId)
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x10DBA4C", Offset = "0x10DBA4C", VA = "0x10DBA4C", Slot = "37")]
		public override void OnGizmoDragEnd(int handleId)
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x10DBCA4", Offset = "0x10DBCA4", VA = "0x10DBCA4")]
		private void OnUndoRedoEnd(IUndoRedoAction action)
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x10DA210", Offset = "0x10DA210", VA = "0x10DA210")]
		private void UpdateTickPositions()
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x10DADC4", Offset = "0x10DADC4", VA = "0x10DADC4")]
		private void ValidateBoxSize()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x10D9A68", Offset = "0x10D9A68", VA = "0x10D9A68")]
		private void SetupSharedLookAndFeel()
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x10D9A24", Offset = "0x10D9A24", VA = "0x10D9A24")]
		private void SetupSharedSettings()
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x10DBD58", Offset = "0x10DBD58", VA = "0x10DBD58")]
		private void OnGizmoTransformChanged(GizmoTransform gizmoTransform, GizmoTransform.ChangeData changeData)
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x10DA7F8", Offset = "0x10DA7F8", VA = "0x10DA7F8")]
		private OBB CalcTargetRootOBB(GameObject targetRoot)
		{
			return default(OBB);
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x10DBD5C", Offset = "0x10DBD5C", VA = "0x10DBD5C")]
		public BoxGizmo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000480")]
	public class BoxGizmoHotkeys : Settings
	{
		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Hotkeys _enableSnapping;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Hotkeys _enableCenterPivot;

		[Token(Token = "0x170003DF")]
		public Hotkeys EnableSnapping
		{
			[Token(Token = "0x60019C9")]
			[Address(RVA = "0x10DC224", Offset = "0x10DC224", VA = "0x10DC224")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003E0")]
		public Hotkeys EnableCenterPivot
		{
			[Token(Token = "0x60019CA")]
			[Address(RVA = "0x10DC22C", Offset = "0x10DC22C", VA = "0x10DC22C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x10DC11C", Offset = "0x10DC11C", VA = "0x10DC11C")]
		public BoxGizmoHotkeys()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000481")]
	public class BoxGizmoLookAndFeel3D : Settings
	{
		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color _boxWireColor;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GizmoCap2DLookAndFeel[] _tickLookAndFeel;

		[Token(Token = "0x170003E1")]
		public Color BoxWireColor
		{
			[Token(Token = "0x60019CC")]
			[Address(RVA = "0x10DC234", Offset = "0x10DC234", VA = "0x10DC234")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170003E2")]
		public Color XTickColor
		{
			[Token(Token = "0x60019CD")]
			[Address(RVA = "0x10DC240", Offset = "0x10DC240", VA = "0x10DC240")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170003E3")]
		public Color YTickColor
		{
			[Token(Token = "0x60019CE")]
			[Address(RVA = "0x10DC2B8", Offset = "0x10DC2B8", VA = "0x10DC2B8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170003E4")]
		public Color ZTickColor
		{
			[Token(Token = "0x60019CF")]
			[Address(RVA = "0x10DC2F0", Offset = "0x10DC2F0", VA = "0x10DC2F0")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170003E5")]
		public Color TickBorderColor
		{
			[Token(Token = "0x60019D0")]
			[Address(RVA = "0x10DC328", Offset = "0x10DC328", VA = "0x10DC328")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170003E6")]
		public Color TickHoveredColor
		{
			[Token(Token = "0x60019D1")]
			[Address(RVA = "0x10DC35C", Offset = "0x10DC35C", VA = "0x10DC35C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170003E7")]
		public Color TickHoveredBorderColor
		{
			[Token(Token = "0x60019D2")]
			[Address(RVA = "0x10DC390", Offset = "0x10DC390", VA = "0x10DC390")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170003E8")]
		public GizmoCap2DType TickType
		{
			[Token(Token = "0x60019D3")]
			[Address(RVA = "0x10DC3C4", Offset = "0x10DC3C4", VA = "0x10DC3C4")]
			get
			{
				return default(GizmoCap2DType);
			}
		}

		[Token(Token = "0x170003E9")]
		public float TickQuadWidth
		{
			[Token(Token = "0x60019D4")]
			[Address(RVA = "0x10DC3F4", Offset = "0x10DC3F4", VA = "0x10DC3F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003EA")]
		public float TickQuadHeight
		{
			[Token(Token = "0x60019D5")]
			[Address(RVA = "0x10DC424", Offset = "0x10DC424", VA = "0x10DC424")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003EB")]
		public float TickCircleRadius
		{
			[Token(Token = "0x60019D6")]
			[Address(RVA = "0x10DC454", Offset = "0x10DC454", VA = "0x10DC454")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x10DBF14", Offset = "0x10DBF14", VA = "0x10DBF14")]
		public BoxGizmoLookAndFeel3D()
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x10DC764", Offset = "0x10DC764", VA = "0x10DC764")]
		public List<Enum> GetAllowedTickTypes()
		{
			return null;
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x10DC8E0", Offset = "0x10DC8E0", VA = "0x10DC8E0")]
		public bool IsTickTypeAllowed(GizmoCap2DType tickType)
		{
			return default(bool);
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x10DC8EC", Offset = "0x10DC8EC", VA = "0x10DC8EC")]
		public void SetBoxWireColor(Color color)
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x10DC484", Offset = "0x10DC484", VA = "0x10DC484")]
		public void SetAxisTickColor(int axisIndex, Color color)
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x10DC54C", Offset = "0x10DC54C", VA = "0x10DC54C")]
		public void SetTickBorderColor(Color color)
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x10DC4F4", Offset = "0x10DC4F4", VA = "0x10DC4F4")]
		public void SetTickHoveredColor(Color color)
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x10DC5A4", Offset = "0x10DC5A4", VA = "0x10DC5A4")]
		public void SetTickHoveredBorderColor(Color color)
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x10DC720", Offset = "0x10DC720", VA = "0x10DC720")]
		public void SetTickType(GizmoCap2DType tickType)
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x10DC5FC", Offset = "0x10DC5FC", VA = "0x10DC5FC")]
		public void SetTickQuadWidth(float width)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x10DC66C", Offset = "0x10DC66C", VA = "0x10DC66C")]
		public void SetTickQuadHeight(float height)
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x10DC6DC", Offset = "0x10DC6DC", VA = "0x10DC6DC")]
		public void SetTickCircleRadius(float radius)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x10DBD28", Offset = "0x10DBD28", VA = "0x10DBD28")]
		public void ConnectTickLookAndFeel(GizmoCap2D tick, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x10DC274", Offset = "0x10DC274", VA = "0x10DC274")]
		private GizmoCap2DLookAndFeel GetTickLookAndFeel(int axisIndex, AxisSign axisSign)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000482")]
	public class BoxGizmoSettings3D : Settings
	{
		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _xSnapStep;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _ySnapStep;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _zSnapStep;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _dragSensitivity;

		[Token(Token = "0x170003EC")]
		public float XSnapStep
		{
			[Token(Token = "0x60019E5")]
			[Address(RVA = "0x10DC8F8", Offset = "0x10DC8F8", VA = "0x10DC8F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003ED")]
		public float YSnapStep
		{
			[Token(Token = "0x60019E6")]
			[Address(RVA = "0x10DC900", Offset = "0x10DC900", VA = "0x10DC900")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003EE")]
		public float ZSnapStep
		{
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0x10DC908", Offset = "0x10DC908", VA = "0x10DC908")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003EF")]
		public float DragSensitivity
		{
			[Token(Token = "0x60019E8")]
			[Address(RVA = "0x10DC910", Offset = "0x10DC910", VA = "0x10DC910")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x10DC918", Offset = "0x10DC918", VA = "0x10DC918")]
		public void SetXSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x10DC92C", Offset = "0x10DC92C", VA = "0x10DC92C")]
		public void SetYSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x10DC940", Offset = "0x10DC940", VA = "0x10DC940")]
		public void SetZSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x10DC954", Offset = "0x10DC954", VA = "0x10DC954")]
		public void SetDragSensitivity(float sensitivity)
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x10DBF00", Offset = "0x10DBF00", VA = "0x10DBF00")]
		public BoxGizmoSettings3D()
		{
		}
	}
	[Token(Token = "0x2000483")]
	public class GizmoBoxLineSlider2DController : GizmoLineSlider2DController
	{
		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x10DC968", Offset = "0x10DC968", VA = "0x10DC968")]
		public GizmoBoxLineSlider2DController(GizmoLineSlider2DControllerData controllerData)
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x10DC9C8", Offset = "0x10DC9C8", VA = "0x10DC9C8", Slot = "7")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x10DCA20", Offset = "0x10DCA20", VA = "0x10DCA20", Slot = "9")]
		public override void UpdateEpsilons()
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x10DCA94", Offset = "0x10DCA94", VA = "0x10DCA94", Slot = "8")]
		public override void UpdateTransforms()
		{
		}
	}
	[Token(Token = "0x2000484")]
	public class GizmoLineSlider2D : GizmoSlider
	{
		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SegmentShape2D _segment;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private QuadShape2D _quad;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _segmentIndex;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _quadIndex;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GizmoDragChannel _dragChannel;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GizmoSglAxisOffsetDrag3D _offsetDrag;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 _offsetDragOrigin;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GizmoSglAxisRotationDrag3D _rotationDrag;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GizmoRotationArc2D _rotationArc;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GizmoSglAxisScaleDrag3D _scaleDrag;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 _scaleDragOrigin;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 _scaleAxis;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _scaleDragAxisIndex;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private IGizmoDragSession _selectedDragSession;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GizmoCap2D _cap2D;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GizmoTransform _transform;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GizmoTransformAxisMap2D _directionAxisMap;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GizmoOverrideColor _overrideFillColor;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GizmoOverrideColor _overrideBorderColor;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GizmoLineSlider2DControllerData _controllerData;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IGizmoLineSlider2DController[] _controllers;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GizmoLineSlider2DSettings _settings;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private GizmoLineSlider2DSettings _sharedSettings;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private GizmoLineSlider2DLookAndFeel _lookAndFeel;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private GizmoLineSlider2DLookAndFeel _sharedLookAndFeel;

		[Token(Token = "0x170003F0")]
		public Quaternion Rotation
		{
			[Token(Token = "0x60019F2")]
			[Address(RVA = "0x10DCDA0", Offset = "0x10DCDA0", VA = "0x10DCDA0")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170003F1")]
		public float RotationDegrees
		{
			[Token(Token = "0x60019F3")]
			[Address(RVA = "0x10DCDC0", Offset = "0x10DCDC0", VA = "0x10DCDC0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003F2")]
		public Vector2 StartPosition
		{
			[Token(Token = "0x60019F4")]
			[Address(RVA = "0x10DCD84", Offset = "0x10DCD84", VA = "0x10DCD84")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60019F5")]
			[Address(RVA = "0x10DCDDC", Offset = "0x10DCDDC", VA = "0x10DCDDC")]
			set
			{
			}
		}

		[Token(Token = "0x170003F3")]
		public Vector2 Direction
		{
			[Token(Token = "0x60019F6")]
			[Address(RVA = "0x10DCDF8", Offset = "0x10DCDF8", VA = "0x10DCDF8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170003F4")]
		public Vector3 OffsetDragOrigin
		{
			[Token(Token = "0x60019F7")]
			[Address(RVA = "0x10DCE14", Offset = "0x10DCE14", VA = "0x10DCE14")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60019F8")]
			[Address(RVA = "0x10DCE20", Offset = "0x10DCE20", VA = "0x10DCE20")]
			set
			{
			}
		}

		[Token(Token = "0x170003F5")]
		public Vector3 ScaleDragOrigin
		{
			[Token(Token = "0x60019F9")]
			[Address(RVA = "0x10DCE2C", Offset = "0x10DCE2C", VA = "0x10DCE2C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60019FA")]
			[Address(RVA = "0x10DCE38", Offset = "0x10DCE38", VA = "0x10DCE38")]
			set
			{
			}
		}

		[Token(Token = "0x170003F6")]
		public int ScaleDragAxisIndex
		{
			[Token(Token = "0x60019FB")]
			[Address(RVA = "0x10DCE44", Offset = "0x10DCE44", VA = "0x10DCE44")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019FC")]
			[Address(RVA = "0x10DCE4C", Offset = "0x10DCE4C", VA = "0x10DCE4C")]
			set
			{
			}
		}

		[Token(Token = "0x170003F7")]
		public int Cap2DHandleId
		{
			[Token(Token = "0x60019FD")]
			[Address(RVA = "0x10DCE64", Offset = "0x10DCE64", VA = "0x10DCE64")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003F8")]
		public bool IsDragged
		{
			[Token(Token = "0x60019FE")]
			[Address(RVA = "0x10DCE80", Offset = "0x10DCE80", VA = "0x10DCE80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F9")]
		public bool IsMoving
		{
			[Token(Token = "0x60019FF")]
			[Address(RVA = "0x10DCF18", Offset = "0x10DCF18", VA = "0x10DCF18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003FA")]
		public bool IsRotating
		{
			[Token(Token = "0x6001A00")]
			[Address(RVA = "0x10DCF3C", Offset = "0x10DCF3C", VA = "0x10DCF3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003FB")]
		public bool IsScaling
		{
			[Token(Token = "0x6001A01")]
			[Address(RVA = "0x10DCF60", Offset = "0x10DCF60", VA = "0x10DCF60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003FC")]
		public bool Is2DCapVisible
		{
			[Token(Token = "0x6001A02")]
			[Address(RVA = "0x10DCF84", Offset = "0x10DCF84", VA = "0x10DCF84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003FD")]
		public bool Is2DCapHoverable
		{
			[Token(Token = "0x6001A03")]
			[Address(RVA = "0x10DCFA0", Offset = "0x10DCFA0", VA = "0x10DCFA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003FE")]
		public Vector3 TotalDragOffset
		{
			[Token(Token = "0x6001A04")]
			[Address(RVA = "0x10DCFBC", Offset = "0x10DCFBC", VA = "0x10DCFBC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003FF")]
		public Vector3 RelativeDragOffset
		{
			[Token(Token = "0x6001A05")]
			[Address(RVA = "0x10DCFDC", Offset = "0x10DCFDC", VA = "0x10DCFDC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000400")]
		public float TotalDragRotation
		{
			[Token(Token = "0x6001A06")]
			[Address(RVA = "0x10DCFFC", Offset = "0x10DCFFC", VA = "0x10DCFFC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000401")]
		public float RelativeDragRotation
		{
			[Token(Token = "0x6001A07")]
			[Address(RVA = "0x10DD018", Offset = "0x10DD018", VA = "0x10DD018")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000402")]
		public float TotalDragScale
		{
			[Token(Token = "0x6001A08")]
			[Address(RVA = "0x10DD034", Offset = "0x10DD034", VA = "0x10DD034")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000403")]
		public float RelativeDragScale
		{
			[Token(Token = "0x6001A09")]
			[Address(RVA = "0x10DD050", Offset = "0x10DD050", VA = "0x10DD050")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000404")]
		public GizmoOverrideColor OverrideFillColor
		{
			[Token(Token = "0x6001A0A")]
			[Address(RVA = "0x10DD06C", Offset = "0x10DD06C", VA = "0x10DD06C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000405")]
		public GizmoOverrideColor OverrideBorderColor
		{
			[Token(Token = "0x6001A0B")]
			[Address(RVA = "0x10DD074", Offset = "0x10DD074", VA = "0x10DD074")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000406")]
		public GizmoLineSlider2DSettings Settings
		{
			[Token(Token = "0x6001A0C")]
			[Address(RVA = "0x10DCA78", Offset = "0x10DCA78", VA = "0x10DCA78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000407")]
		public GizmoLineSlider2DSettings SharedSettings
		{
			[Token(Token = "0x6001A0D")]
			[Address(RVA = "0x10DD07C", Offset = "0x10DD07C", VA = "0x10DD07C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A0E")]
			[Address(RVA = "0x10DD084", Offset = "0x10DD084", VA = "0x10DD084")]
			set
			{
			}
		}

		[Token(Token = "0x17000408")]
		public GizmoLineSlider2DLookAndFeel LookAndFeel
		{
			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0x10DD08C", Offset = "0x10DD08C", VA = "0x10DD08C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000409")]
		public GizmoLineSlider2DLookAndFeel SharedLookAndFeel
		{
			[Token(Token = "0x6001A10")]
			[Address(RVA = "0x10DD0A8", Offset = "0x10DD0A8", VA = "0x10DD0A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A11")]
			[Address(RVA = "0x10DD0B0", Offset = "0x10DD0B0", VA = "0x10DD0B0")]
			set
			{
			}
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x10DD108", Offset = "0x10DD108", VA = "0x10DD108")]
		public GizmoLineSlider2D(Gizmo gizmo, int handleId, int capHandleId)
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x10DDCA4", Offset = "0x10DDCA4", VA = "0x10DDCA4", Slot = "13")]
		public override void SetSnapEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x10DDCDC", Offset = "0x10DDCDC", VA = "0x10DDCDC")]
		public void Set2DCapVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x10DDCFC", Offset = "0x10DDCFC", VA = "0x10DDCFC")]
		public void Set2DCapHoverable(bool isHoverable)
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x10DCCDC", Offset = "0x10DCCDC", VA = "0x10DCCDC")]
		public Vector2 GetRealDirection()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x10DCB64", Offset = "0x10DCB64", VA = "0x10DCB64")]
		public float GetRealLength()
		{
			return default(float);
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x10DDD1C", Offset = "0x10DDD1C", VA = "0x10DDD1C")]
		public Vector2 GetRealEndPosition()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x10DCD50", Offset = "0x10DCD50", VA = "0x10DCD50")]
		public float GetRealBoxThickness()
		{
			return default(float);
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x10DDD7C", Offset = "0x10DDD7C", VA = "0x10DDD7C")]
		public void MapDirection(int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0x10DDDD4", Offset = "0x10DDDD4", VA = "0x10DDDD4")]
		public void SetDirection(Vector2 directionAxis)
		{
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x10DDC50", Offset = "0x10DDC50", VA = "0x10DDC50")]
		public void AddTargetTransform(GizmoTransform transform)
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x10DDE20", Offset = "0x10DDE20", VA = "0x10DDE20")]
		public void AddTargetTransform(GizmoTransform transform, GizmoDragChannel dragChannel)
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x10DDE70", Offset = "0x10DDE70", VA = "0x10DDE70")]
		public void RemoveTargetTransform(GizmoTransform transform)
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x10DDEC4", Offset = "0x10DDEC4", VA = "0x10DDEC4")]
		public void RemoveTargetTransform(GizmoTransform transform, GizmoDragChannel dragChannel)
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x10DDBDC", Offset = "0x10DDBDC", VA = "0x10DDBDC")]
		public void SetDragChannel(GizmoDragChannel dragChannel)
		{
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x10DDF14", Offset = "0x10DDF14", VA = "0x10DDF14", Slot = "14")]
		public override void Render(Camera camera)
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x10DE394", Offset = "0x10DE394", VA = "0x10DE394")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x10DE5EC", Offset = "0x10DE5EC", VA = "0x10DE5EC", Slot = "15")]
		protected override void OnVisibilityStateChanged()
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x10DE844", Offset = "0x10DE844", VA = "0x10DE844", Slot = "16")]
		protected override void OnHoverableStateChanged()
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x10DE868", Offset = "0x10DE868", VA = "0x10DE868")]
		private void OnGizmoPreUpdateBegin(Gizmo gizmo)
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x10DEB78", Offset = "0x10DEB78", VA = "0x10DEB78")]
		private void OnGizmoAttemptHandleDragBegin(Gizmo gizmo, int handleId)
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x10DF024", Offset = "0x10DF024", VA = "0x10DF024")]
		private void OnTransformChanged(GizmoTransform transform, GizmoTransform.ChangeData changeData)
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x10DF170", Offset = "0x10DF170", VA = "0x10DF170")]
		private void OnGizmoHandleHoverEnter(Gizmo gizmo, int handleId)
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x10DF2C4", Offset = "0x10DF2C4", VA = "0x10DF2C4")]
		private void OnGizmoHandleHoverExit(Gizmo gizmo, int handleId)
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x10DF340", Offset = "0x10DF340", VA = "0x10DF340")]
		private void OnGizmoHandleDragUpdate(Gizmo gizmo, int handleId)
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x10DD0CC", Offset = "0x10DD0CC", VA = "0x10DD0CC")]
		private void SetupSharedLookAndFeel()
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x10DF3B8", Offset = "0x10DF3B8", VA = "0x10DF3B8")]
		private void OnGizmoPostEnabled(Gizmo gizmo)
		{
		}
	}
	[Token(Token = "0x2000485")]
	public class GizmoLineSlider2DCollection
	{
		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<GizmoLineSlider2D> _sliders;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, GizmoLineSlider2D> _handleIdToSlider;

		[Token(Token = "0x1700040A")]
		public int Count
		{
			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0x10DF3BC", Offset = "0x10DF3BC", VA = "0x10DF3BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700040B")]
		public GizmoLineSlider2D this[int id]
		{
			[Token(Token = "0x6001A2E")]
			[Address(RVA = "0x10DF404", Offset = "0x10DF404", VA = "0x10DF404")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x10DF45C", Offset = "0x10DF45C", VA = "0x10DF45C")]
		public bool Contains(GizmoLineSlider2D slider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x10DF4C8", Offset = "0x10DF4C8", VA = "0x10DF4C8")]
		public bool Contains(int sliderHandleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x10DF520", Offset = "0x10DF520", VA = "0x10DF520")]
		public bool ContainsCapId(int capHandleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x10DF624", Offset = "0x10DF624", VA = "0x10DF624")]
		public void Add(GizmoLineSlider2D slider)
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x10DF730", Offset = "0x10DF730", VA = "0x10DF730")]
		public void Remove(GizmoLineSlider2D slider)
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x10DF7E0", Offset = "0x10DF7E0", VA = "0x10DF7E0")]
		public void Make2DHoverPriorityLowerThan(Priority priority)
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x10DF94C", Offset = "0x10DF94C", VA = "0x10DF94C")]
		public void Make2DHoverPriorityHigherThan(Priority priority)
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x10DFAB8", Offset = "0x10DFAB8", VA = "0x10DFAB8")]
		public void SetSnapEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x10DFC18", Offset = "0x10DFC18", VA = "0x10DFC18")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x10DFD70", Offset = "0x10DFD70", VA = "0x10DFD70")]
		public void Set2DCapsVisible(bool visible)
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x10DFED4", Offset = "0x10DFED4", VA = "0x10DFED4")]
		public void SetOffsetDragOrigin(Vector3 dragOrigin)
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x10E0038", Offset = "0x10E0038", VA = "0x10E0038")]
		public void Render(Camera camera)
		{
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0x10E0194", Offset = "0x10E0194", VA = "0x10E0194")]
		public GizmoLineSlider2DCollection()
		{
		}
	}
	[Token(Token = "0x2000487")]
	public abstract class GizmoLineSlider2DController : IGizmoLineSlider2DController
	{
		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected GizmoLineSlider2DControllerData _data;

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x10DC998", Offset = "0x10DC998", VA = "0x10DC998")]
		public GizmoLineSlider2DController(GizmoLineSlider2DControllerData controllerData)
		{
		}

		[Token(Token = "0x6001A3F")]
		public abstract void UpdateHandles();

		[Token(Token = "0x6001A40")]
		public abstract void UpdateTransforms();

		[Token(Token = "0x6001A41")]
		public abstract void UpdateEpsilons();
	}
	[Token(Token = "0x2000488")]
	public class GizmoLineSlider2DControllerData
	{
		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gizmo Gizmo;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GizmoLineSlider2D Slider;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GizmoHandle SliderHandle;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SegmentShape2D Segment;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public QuadShape2D Quad;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int SegmentIndex;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int QuadIndex;

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x10DDA7C", Offset = "0x10DDA7C", VA = "0x10DDA7C")]
		public GizmoLineSlider2DControllerData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000489")]
	public class GizmoLineSlider2DLookAndFeel
	{
		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GizmoLine2DType _lineType;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private GizmoFillMode2D _fillMode;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _length;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _scale;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _boxThickness;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool _isRotationArcVisible;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color _hoveredColor;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color _borderColor;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color _hoveredBorderColor;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GizmoRotationArc2DLookAndFeel _rotationArcLookAndFeel;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GizmoCap2DLookAndFeel _capLookAndFeel;

		[Token(Token = "0x1700040C")]
		public GizmoLine2DType LineType
		{
			[Token(Token = "0x6001A43")]
			[Address(RVA = "0x10E02A0", Offset = "0x10E02A0", VA = "0x10E02A0")]
			get
			{
				return default(GizmoLine2DType);
			}
			[Token(Token = "0x6001A44")]
			[Address(RVA = "0x10E02A8", Offset = "0x10E02A8", VA = "0x10E02A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700040D")]
		public GizmoFillMode2D FillMode
		{
			[Token(Token = "0x6001A45")]
			[Address(RVA = "0x10E02B0", Offset = "0x10E02B0", VA = "0x10E02B0")]
			get
			{
				return default(GizmoFillMode2D);
			}
			[Token(Token = "0x6001A46")]
			[Address(RVA = "0x10E02B8", Offset = "0x10E02B8", VA = "0x10E02B8")]
			set
			{
			}
		}

		[Token(Token = "0x1700040E")]
		public float Length
		{
			[Token(Token = "0x6001A47")]
			[Address(RVA = "0x10E02C0", Offset = "0x10E02C0", VA = "0x10E02C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A48")]
			[Address(RVA = "0x10E02C8", Offset = "0x10E02C8", VA = "0x10E02C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700040F")]
		public float Scale
		{
			[Token(Token = "0x6001A49")]
			[Address(RVA = "0x10E02D8", Offset = "0x10E02D8", VA = "0x10E02D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A4A")]
			[Address(RVA = "0x10E02E0", Offset = "0x10E02E0", VA = "0x10E02E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000410")]
		public GizmoCap2DLookAndFeel CapLookAndFeel
		{
			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0x10E02F0", Offset = "0x10E02F0", VA = "0x10E02F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000411")]
		public float BoxThickness
		{
			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0x10E02F8", Offset = "0x10E02F8", VA = "0x10E02F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0x10E0300", Offset = "0x10E0300", VA = "0x10E0300")]
			set
			{
			}
		}

		[Token(Token = "0x17000412")]
		public bool IsRotationArcVisible
		{
			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0x10E0310", Offset = "0x10E0310", VA = "0x10E0310")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0x10E0318", Offset = "0x10E0318", VA = "0x10E0318")]
			set
			{
			}
		}

		[Token(Token = "0x17000413")]
		public Color Color
		{
			[Token(Token = "0x6001A50")]
			[Address(RVA = "0x10E0324", Offset = "0x10E0324", VA = "0x10E0324")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0x10E0330", Offset = "0x10E0330", VA = "0x10E0330")]
			set
			{
			}
		}

		[Token(Token = "0x17000414")]
		public Color HoveredColor
		{
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0x10E033C", Offset = "0x10E033C", VA = "0x10E033C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0x10E0348", Offset = "0x10E0348", VA = "0x10E0348")]
			set
			{
			}
		}

		[Token(Token = "0x17000415")]
		public Color BorderColor
		{
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0x10E0354", Offset = "0x10E0354", VA = "0x10E0354")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0x10E0360", Offset = "0x10E0360", VA = "0x10E0360")]
			set
			{
			}
		}

		[Token(Token = "0x17000416")]
		public Color HoveredBorderColor
		{
			[Token(Token = "0x6001A56")]
			[Address(RVA = "0x10E036C", Offset = "0x10E036C", VA = "0x10E036C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0x10E0378", Offset = "0x10E0378", VA = "0x10E0378")]
			set
			{
			}
		}

		[Token(Token = "0x17000417")]
		public GizmoRotationArc2DLookAndFeel RotationArcLookAndFeel
		{
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0x10E0384", Offset = "0x10E0384", VA = "0x10E0384")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x10DDAA4", Offset = "0x10DDAA4", VA = "0x10DDAA4")]
		public GizmoLineSlider2DLookAndFeel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200048A")]
	public class GizmoLineSlider2DSettings
	{
		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float _lineHoverEps;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float _boxHoverEps;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _offsetSnapStep;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _rotationSnapStep;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GizmoSnapMode _rotationSnapMode;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _scaleSnapStep;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _offsetSensitivity;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _rotationSensitivity;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _scaleSensitivity;

		[Token(Token = "0x17000418")]
		public float LineHoverEps
		{
			[Token(Token = "0x6001A5A")]
			[Address(RVA = "0x10E038C", Offset = "0x10E038C", VA = "0x10E038C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A5B")]
			[Address(RVA = "0x10E0394", Offset = "0x10E0394", VA = "0x10E0394")]
			set
			{
			}
		}

		[Token(Token = "0x17000419")]
		public float BoxHoverEps
		{
			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0x10E03A4", Offset = "0x10E03A4", VA = "0x10E03A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0x10E03AC", Offset = "0x10E03AC", VA = "0x10E03AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700041A")]
		public float OffsetSnapStep
		{
			[Token(Token = "0x6001A5E")]
			[Address(RVA = "0x10E03BC", Offset = "0x10E03BC", VA = "0x10E03BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A5F")]
			[Address(RVA = "0x10E03C4", Offset = "0x10E03C4", VA = "0x10E03C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700041B")]
		public float RotationSnapStep
		{
			[Token(Token = "0x6001A60")]
			[Address(RVA = "0x10E03D8", Offset = "0x10E03D8", VA = "0x10E03D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A61")]
			[Address(RVA = "0x10E03E0", Offset = "0x10E03E0", VA = "0x10E03E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700041C")]
		public GizmoSnapMode RotationSnapMode
		{
			[Token(Token = "0x6001A62")]
			[Address(RVA = "0x10E03F4", Offset = "0x10E03F4", VA = "0x10E03F4")]
			get
			{
				return default(GizmoSnapMode);
			}
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0x10E03FC", Offset = "0x10E03FC", VA = "0x10E03FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700041D")]
		public float ScaleSnapStep
		{
			[Token(Token = "0x6001A64")]
			[Address(RVA = "0x10E0404", Offset = "0x10E0404", VA = "0x10E0404")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A65")]
			[Address(RVA = "0x10E040C", Offset = "0x10E040C", VA = "0x10E040C")]
			set
			{
			}
		}

		[Token(Token = "0x1700041E")]
		public float OffsetSensitivity
		{
			[Token(Token = "0x6001A66")]
			[Address(RVA = "0x10E0420", Offset = "0x10E0420", VA = "0x10E0420")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A67")]
			[Address(RVA = "0x10E0428", Offset = "0x10E0428", VA = "0x10E0428")]
			set
			{
			}
		}

		[Token(Token = "0x1700041F")]
		public float RotationSensitivity
		{
			[Token(Token = "0x6001A68")]
			[Address(RVA = "0x10E043C", Offset = "0x10E043C", VA = "0x10E043C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0x10E0444", Offset = "0x10E0444", VA = "0x10E0444")]
			set
			{
			}
		}

		[Token(Token = "0x17000420")]
		public float ScaleSensitivity
		{
			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0x10E0458", Offset = "0x10E0458", VA = "0x10E0458")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0x10E0460", Offset = "0x10E0460", VA = "0x10E0460")]
			set
			{
			}
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x10DDA84", Offset = "0x10DDA84", VA = "0x10DDA84")]
		public GizmoLineSlider2DSettings()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class GizmoThinLineSlider2DController : GizmoLineSlider2DController
	{
		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x10DDBAC", Offset = "0x10DDBAC", VA = "0x10DDBAC")]
		public GizmoThinLineSlider2DController(GizmoLineSlider2DControllerData controllerData)
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x10E0474", Offset = "0x10E0474", VA = "0x10E0474", Slot = "7")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x10E04CC", Offset = "0x10E04CC", VA = "0x10E04CC", Slot = "9")]
		public override void UpdateEpsilons()
		{
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x10E0518", Offset = "0x10E0518", VA = "0x10E0518", Slot = "8")]
		public override void UpdateTransforms()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public interface IGizmoLineSlider2DController
	{
		[Token(Token = "0x6001A71")]
		void UpdateHandles();

		[Token(Token = "0x6001A72")]
		void UpdateTransforms();

		[Token(Token = "0x6001A73")]
		void UpdateEpsilons();
	}
	[Token(Token = "0x200048D")]
	public enum GizmoCircle2DBorderType
	{
		[Token(Token = "0x400155B")]
		Thin
	}
	[Token(Token = "0x200048E")]
	public class GizmoCirclePlaneSlider2DController : GizmoPlaneSlider2DController
	{
		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x10E059C", Offset = "0x10E059C", VA = "0x10E059C")]
		public GizmoCirclePlaneSlider2DController(GizmoPlaneSlider2DControllerData controllerData)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x10E05FC", Offset = "0x10E05FC", VA = "0x10E05FC", Slot = "8")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x10E06D0", Offset = "0x10E06D0", VA = "0x10E06D0", Slot = "10")]
		public override void UpdateEpsilons()
		{
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x10E0738", Offset = "0x10E0738", VA = "0x10E0738", Slot = "9")]
		public override void UpdateTransforms()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x10E0978", Offset = "0x10E0978", VA = "0x10E0978", Slot = "11")]
		public override Vector2 GetRealExtentPoint(Shape2DExtentPoint extentPt)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x200048F")]
	public class GizmoPlaneSlider2D : GizmoSlider
	{
		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _quadIndex;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _circleIndex;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _polygonIndex;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private QuadShape2D _quad;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CircleShape2D _circle;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PolygonShape2D _polygon;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GizmoQuad2DBorder _quadBorder;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GizmoCircle2DBorder _circleBorder;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GizmoPolygon2DBorder _polygonBorder;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _isBorderVisible;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _isBorderHoverable;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GizmoTransform _transform;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GizmoDragChannel _dragChannel;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IGizmoDragSession _selectedDragSession;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GizmoDblAxisOffsetDrag3D _offsetDrag;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _offsetDragOrigin;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GizmoSglAxisRotationDrag3D _rotationDrag;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GizmoRotationArc2D _rotationArc;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GizmoDblAxisScaleDrag3D _scaleDrag;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 _scaleDragOrigin;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 _scaleAxisRight;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 _scaleAxisUp;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int _scaleDragAxisIndexRight;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int _scaleDragAxisIndexUp;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private GizmoPlaneSlider2DControllerData _controllerData;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private IGizmoPlaneSlider2DController[] _controllers;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private GizmoPlaneSlider2DSettings _settings;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private GizmoPlaneSlider2DSettings _sharedSettings;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private GizmoPlaneSlider2DLookAndFeel _lookAndFeel;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private GizmoPlaneSlider2DLookAndFeel _sharedLookAndFeel;

		[Token(Token = "0x17000421")]
		public GizmoPlaneSlider2DSettings Settings
		{
			[Token(Token = "0x6001A79")]
			[Address(RVA = "0x10E071C", Offset = "0x10E071C", VA = "0x10E071C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000422")]
		public GizmoPlaneSlider2DSettings SharedSettings
		{
			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0x10E099C", Offset = "0x10E099C", VA = "0x10E099C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0x10E09A4", Offset = "0x10E09A4", VA = "0x10E09A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000423")]
		public GizmoPlaneSlider2DLookAndFeel LookAndFeel
		{
			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0x10E09AC", Offset = "0x10E09AC", VA = "0x10E09AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000424")]
		public GizmoPlaneSlider2DLookAndFeel SharedLookAndFeel
		{
			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0x10E09C8", Offset = "0x10E09C8", VA = "0x10E09C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0x10E09D0", Offset = "0x10E09D0", VA = "0x10E09D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000425")]
		public Vector2 Position
		{
			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0x10E07B0", Offset = "0x10E07B0", VA = "0x10E07B0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001A80")]
			[Address(RVA = "0x10E09E0", Offset = "0x10E09E0", VA = "0x10E09E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000426")]
		public Vector2 PolyCenter
		{
			[Token(Token = "0x6001A81")]
			[Address(RVA = "0x10E09FC", Offset = "0x10E09FC", VA = "0x10E09FC")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000427")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6001A82")]
			[Address(RVA = "0x10E0A40", Offset = "0x10E0A40", VA = "0x10E0A40")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000428")]
		public float RotationDegrees
		{
			[Token(Token = "0x6001A83")]
			[Address(RVA = "0x10E07CC", Offset = "0x10E07CC", VA = "0x10E07CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A84")]
			[Address(RVA = "0x10E0A60", Offset = "0x10E0A60", VA = "0x10E0A60")]
			set
			{
			}
		}

		[Token(Token = "0x17000429")]
		public Vector2 Right
		{
			[Token(Token = "0x6001A85")]
			[Address(RVA = "0x10E0A7C", Offset = "0x10E0A7C", VA = "0x10E0A7C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700042A")]
		public Vector2 Up
		{
			[Token(Token = "0x6001A86")]
			[Address(RVA = "0x10E0AA0", Offset = "0x10E0AA0", VA = "0x10E0AA0")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700042B")]
		public Vector3 OffsetDragOrigin
		{
			[Token(Token = "0x6001A87")]
			[Address(RVA = "0x10E0AC4", Offset = "0x10E0AC4", VA = "0x10E0AC4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A88")]
			[Address(RVA = "0x10E0AD0", Offset = "0x10E0AD0", VA = "0x10E0AD0")]
			set
			{
			}
		}

		[Token(Token = "0x1700042C")]
		public GizmoDragChannel DragChannel
		{
			[Token(Token = "0x6001A89")]
			[Address(RVA = "0x10E0ADC", Offset = "0x10E0ADC", VA = "0x10E0ADC")]
			get
			{
				return default(GizmoDragChannel);
			}
		}

		[Token(Token = "0x1700042D")]
		public Vector3 ScaleDragOrigin
		{
			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0x10E0AE4", Offset = "0x10E0AE4", VA = "0x10E0AE4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0x10E0AF0", Offset = "0x10E0AF0", VA = "0x10E0AF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700042E")]
		public int ScaleDragAxisIndexRight
		{
			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0x10E0AFC", Offset = "0x10E0AFC", VA = "0x10E0AFC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A8D")]
			[Address(RVA = "0x10E0B04", Offset = "0x10E0B04", VA = "0x10E0B04")]
			set
			{
			}
		}

		[Token(Token = "0x1700042F")]
		public int ScaleDragAxisIndexUp
		{
			[Token(Token = "0x6001A8E")]
			[Address(RVA = "0x10E0B1C", Offset = "0x10E0B1C", VA = "0x10E0B1C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A8F")]
			[Address(RVA = "0x10E0B24", Offset = "0x10E0B24", VA = "0x10E0B24")]
			set
			{
			}
		}

		[Token(Token = "0x17000430")]
		public Vector3 TotalDragOffset
		{
			[Token(Token = "0x6001A90")]
			[Address(RVA = "0x10E0B3C", Offset = "0x10E0B3C", VA = "0x10E0B3C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000431")]
		public Vector3 RelativeDragOffset
		{
			[Token(Token = "0x6001A91")]
			[Address(RVA = "0x10E0B5C", Offset = "0x10E0B5C", VA = "0x10E0B5C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000432")]
		public float TotalDragRotation
		{
			[Token(Token = "0x6001A92")]
			[Address(RVA = "0x10E0B7C", Offset = "0x10E0B7C", VA = "0x10E0B7C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000433")]
		public float RelativeDragRotation
		{
			[Token(Token = "0x6001A93")]
			[Address(RVA = "0x10E0B98", Offset = "0x10E0B98", VA = "0x10E0B98")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000434")]
		public float TotalDragScaleRight
		{
			[Token(Token = "0x6001A94")]
			[Address(RVA = "0x10E0BB4", Offset = "0x10E0BB4", VA = "0x10E0BB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000435")]
		public float RelativeDragScaleRight
		{
			[Token(Token = "0x6001A95")]
			[Address(RVA = "0x10E0BD0", Offset = "0x10E0BD0", VA = "0x10E0BD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000436")]
		public float TotalDragScaleUp
		{
			[Token(Token = "0x6001A96")]
			[Address(RVA = "0x10E0BEC", Offset = "0x10E0BEC", VA = "0x10E0BEC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000437")]
		public float RelativeDragScaleUp
		{
			[Token(Token = "0x6001A97")]
			[Address(RVA = "0x10E0C08", Offset = "0x10E0C08", VA = "0x10E0C08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000438")]
		public bool IsBorderVisible
		{
			[Token(Token = "0x6001A98")]
			[Address(RVA = "0x10E0C24", Offset = "0x10E0C24", VA = "0x10E0C24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000439")]
		public bool IsBorderHoverable
		{
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0x10E0C2C", Offset = "0x10E0C2C", VA = "0x10E0C2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700043A")]
		public bool IsDragged
		{
			[Token(Token = "0x6001A9A")]
			[Address(RVA = "0x10E0C34", Offset = "0x10E0C34", VA = "0x10E0C34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700043B")]
		public bool IsMoving
		{
			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0x10E0C94", Offset = "0x10E0C94", VA = "0x10E0C94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700043C")]
		public bool IsRotating
		{
			[Token(Token = "0x6001A9C")]
			[Address(RVA = "0x10E0CB8", Offset = "0x10E0CB8", VA = "0x10E0CB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700043D")]
		public bool IsScaling
		{
			[Token(Token = "0x6001A9D")]
			[Address(RVA = "0x10E0CDC", Offset = "0x10E0CDC", VA = "0x10E0CDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x10E0D00", Offset = "0x10E0D00", VA = "0x10E0D00")]
		public GizmoPlaneSlider2D(Gizmo gizmo, int handleId)
		{
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x10E1900", Offset = "0x10E1900", VA = "0x10E1900")]
		public void SetBorderVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x10E19FC", Offset = "0x10E19FC", VA = "0x10E19FC")]
		public void SetBorderHoverable(bool isHoverable)
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x10E1A5C", Offset = "0x10E1A5C", VA = "0x10E1A5C", Slot = "13")]
		public override void SetSnapEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x10E1A94", Offset = "0x10E1A94", VA = "0x10E1A94")]
		public void SetPolyCwPoints(List<Vector2> cwPoints, bool isClosed)
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x10E1BB0", Offset = "0x10E1BB0", VA = "0x10E1BB0")]
		public void MakePolySphereBorder(Vector3 sphereCenter, float sphereRadius, int numPoints, Camera camera)
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x10E1D04", Offset = "0x10E1D04", VA = "0x10E1D04")]
		public float GetRealQuadWidth()
		{
			return default(float);
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x10E1E84", Offset = "0x10E1E84", VA = "0x10E1E84")]
		public float GetRealQuadHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x10E2010", Offset = "0x10E2010", VA = "0x10E2010")]
		public Vector2 GetRealQuadSize()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x10E07E8", Offset = "0x10E07E8", VA = "0x10E07E8")]
		public float GetRealCircleRadius()
		{
			return default(float);
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x10E2040", Offset = "0x10E2040", VA = "0x10E2040")]
		public Vector2 GetRealExtentPoint(Shape2DExtentPoint extentPt)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x10E18A0", Offset = "0x10E18A0", VA = "0x10E18A0")]
		public void SetDragChannel(GizmoDragChannel dragChannel)
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x10E184C", Offset = "0x10E184C", VA = "0x10E184C")]
		public void AddTargetTransform(GizmoTransform transform)
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x10E2128", Offset = "0x10E2128", VA = "0x10E2128")]
		public void AddTargetTransform(GizmoTransform transform, GizmoDragChannel dragChannel)
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x10E217C", Offset = "0x10E217C", VA = "0x10E217C")]
		public void RemoveTargetTransform(GizmoTransform transform)
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x10E21D0", Offset = "0x10E21D0", VA = "0x10E21D0")]
		public void RemoveTargetTransform(GizmoTransform transform, GizmoDragChannel dragChannel)
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x10E2224", Offset = "0x10E2224", VA = "0x10E2224", Slot = "14")]
		public override void Render(Camera camera)
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x10E25A0", Offset = "0x10E25A0", VA = "0x10E25A0")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x10E27B4", Offset = "0x10E27B4", VA = "0x10E27B4", Slot = "15")]
		protected override void OnVisibilityStateChanged()
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x10E29C8", Offset = "0x10E29C8", VA = "0x10E29C8", Slot = "16")]
		protected override void OnHoverableStateChanged()
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x10E2A08", Offset = "0x10E2A08", VA = "0x10E2A08")]
		private void OnGizmoPreUpdateBegin(Gizmo gizmo)
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x10E2C74", Offset = "0x10E2C74", VA = "0x10E2C74")]
		private void OnTransformChanged(GizmoTransform transform, GizmoTransform.ChangeData changeData)
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x10E2D78", Offset = "0x10E2D78", VA = "0x10E2D78")]
		private void OnGizmoAttemptHandleDragBegin(Gizmo gizmo, int handleId)
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x10E352C", Offset = "0x10E352C", VA = "0x10E352C")]
		private void OnGizmoHandleDragUpdate(Gizmo gizmo, int handleId)
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x10E358C", Offset = "0x10E358C", VA = "0x10E358C")]
		private void OnGizmoPostEnabled(Gizmo gizmo)
		{
		}
	}
	[Token(Token = "0x2000490")]
	public abstract class GizmoPlaneSlider2DController : IGizmoPlaneSlider2DController
	{
		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected GizmoPlaneSlider2DControllerData _data;

		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x10E05CC", Offset = "0x10E05CC", VA = "0x10E05CC")]
		public GizmoPlaneSlider2DController(GizmoPlaneSlider2DControllerData controllerData)
		{
		}

		[Token(Token = "0x6001AB8")]
		public abstract void UpdateHandles();

		[Token(Token = "0x6001AB9")]
		public abstract void UpdateTransforms();

		[Token(Token = "0x6001ABA")]
		public abstract void UpdateEpsilons();

		[Token(Token = "0x6001ABB")]
		public abstract Vector2 GetRealExtentPoint(Shape2DExtentPoint extentPt);
	}
	[Token(Token = "0x2000491")]
	public class GizmoPlaneSlider2DControllerData
	{
		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gizmo Gizmo;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GizmoPlaneSlider2D Slider;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GizmoHandle SliderHandle;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GizmoQuad2DBorder QuadBorder;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GizmoCircle2DBorder CircleBorder;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GizmoPolygon2DBorder PolygonBorder;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public QuadShape2D Quad;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CircleShape2D Circle;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PolygonShape2D Polygon;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int QuadIndex;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int CircleIndex;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int PolygonIndex;

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x10E16D4", Offset = "0x10E16D4", VA = "0x10E16D4")]
		public GizmoPlaneSlider2DControllerData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000492")]
	public class GizmoPlaneSlider2DLookAndFeel
	{
		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GizmoFillMode2D _fillMode;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private GizmoPlane2DType _planeType;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _scale;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _quadWidth;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _quadHeight;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _circleRadius;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _isRotationArcVisible;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GizmoRotationArc2DLookAndFeel _rotationArcLookAndFeel;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color _hoveredColor;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Color _borderColor;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Color _hoveredBorderColor;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GizmoQuad2DBorderType _quadBorderType;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private GizmoCircle2DBorderType _circleBorderType;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GizmoPolygon2DBorderType _polygonBorderType;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float _borderPolyThickness;

		[Token(Token = "0x1700043E")]
		public GizmoFillMode2D FillMode
		{
			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0x10E3590", Offset = "0x10E3590", VA = "0x10E3590")]
			get
			{
				return default(GizmoFillMode2D);
			}
			[Token(Token = "0x6001ABE")]
			[Address(RVA = "0x10E3598", Offset = "0x10E3598", VA = "0x10E3598")]
			set
			{
			}
		}

		[Token(Token = "0x1700043F")]
		public GizmoPlane2DType PlaneType
		{
			[Token(Token = "0x6001ABF")]
			[Address(RVA = "0x10E35A0", Offset = "0x10E35A0", VA = "0x10E35A0")]
			get
			{
				return default(GizmoPlane2DType);
			}
			[Token(Token = "0x6001AC0")]
			[Address(RVA = "0x10E35A8", Offset = "0x10E35A8", VA = "0x10E35A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000440")]
		public float Scale
		{
			[Token(Token = "0x6001AC1")]
			[Address(RVA = "0x10E35B0", Offset = "0x10E35B0", VA = "0x10E35B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AC2")]
			[Address(RVA = "0x10E35B8", Offset = "0x10E35B8", VA = "0x10E35B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000441")]
		public float QuadWidth
		{
			[Token(Token = "0x6001AC3")]
			[Address(RVA = "0x10E35C8", Offset = "0x10E35C8", VA = "0x10E35C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0x10E35D0", Offset = "0x10E35D0", VA = "0x10E35D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000442")]
		public float QuadHeight
		{
			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0x10E35E0", Offset = "0x10E35E0", VA = "0x10E35E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AC6")]
			[Address(RVA = "0x10E35E8", Offset = "0x10E35E8", VA = "0x10E35E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000443")]
		public float CircleRadius
		{
			[Token(Token = "0x6001AC7")]
			[Address(RVA = "0x10E35F8", Offset = "0x10E35F8", VA = "0x10E35F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AC8")]
			[Address(RVA = "0x10E3600", Offset = "0x10E3600", VA = "0x10E3600")]
			set
			{
			}
		}

		[Token(Token = "0x17000444")]
		public bool IsRotationArcVisible
		{
			[Token(Token = "0x6001AC9")]
			[Address(RVA = "0x10E3610", Offset = "0x10E3610", VA = "0x10E3610")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001ACA")]
			[Address(RVA = "0x10E3618", Offset = "0x10E3618", VA = "0x10E3618")]
			set
			{
			}
		}

		[Token(Token = "0x17000445")]
		public GizmoRotationArc2DLookAndFeel RotationArcLookAndFeel
		{
			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0x10E3624", Offset = "0x10E3624", VA = "0x10E3624")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000446")]
		public Color Color
		{
			[Token(Token = "0x6001ACC")]
			[Address(RVA = "0x10E362C", Offset = "0x10E362C", VA = "0x10E362C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001ACD")]
			[Address(RVA = "0x10E3638", Offset = "0x10E3638", VA = "0x10E3638")]
			set
			{
			}
		}

		[Token(Token = "0x17000447")]
		public Color HoveredColor
		{
			[Token(Token = "0x6001ACE")]
			[Address(RVA = "0x10E3644", Offset = "0x10E3644", VA = "0x10E3644")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0x10E3650", Offset = "0x10E3650", VA = "0x10E3650")]
			set
			{
			}
		}

		[Token(Token = "0x17000448")]
		public Color BorderColor
		{
			[Token(Token = "0x6001AD0")]
			[Address(RVA = "0x10E365C", Offset = "0x10E365C", VA = "0x10E365C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001AD1")]
			[Address(RVA = "0x10E3668", Offset = "0x10E3668", VA = "0x10E3668")]
			set
			{
			}
		}

		[Token(Token = "0x17000449")]
		public Color HoveredBorderColor
		{
			[Token(Token = "0x6001AD2")]
			[Address(RVA = "0x10E3674", Offset = "0x10E3674", VA = "0x10E3674")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001AD3")]
			[Address(RVA = "0x10E3680", Offset = "0x10E3680", VA = "0x10E3680")]
			set
			{
			}
		}

		[Token(Token = "0x1700044A")]
		public GizmoQuad2DBorderType QuadBorderType
		{
			[Token(Token = "0x6001AD4")]
			[Address(RVA = "0x10E368C", Offset = "0x10E368C", VA = "0x10E368C")]
			get
			{
				return default(GizmoQuad2DBorderType);
			}
			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0x10E3694", Offset = "0x10E3694", VA = "0x10E3694")]
			set
			{
			}
		}

		[Token(Token = "0x1700044B")]
		public GizmoCircle2DBorderType CircleBorderType
		{
			[Token(Token = "0x6001AD6")]
			[Address(RVA = "0x10E369C", Offset = "0x10E369C", VA = "0x10E369C")]
			get
			{
				return default(GizmoCircle2DBorderType);
			}
			[Token(Token = "0x6001AD7")]
			[Address(RVA = "0x10E36A4", Offset = "0x10E36A4", VA = "0x10E36A4")]
			set
			{
			}
		}

		[Token(Token = "0x1700044C")]
		public GizmoPolygon2DBorderType PolygonBorderType
		{
			[Token(Token = "0x6001AD8")]
			[Address(RVA = "0x10E36AC", Offset = "0x10E36AC", VA = "0x10E36AC")]
			get
			{
				return default(GizmoPolygon2DBorderType);
			}
			[Token(Token = "0x6001AD9")]
			[Address(RVA = "0x10E36B4", Offset = "0x10E36B4", VA = "0x10E36B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700044D")]
		public float BorderPolyThickness
		{
			[Token(Token = "0x6001ADA")]
			[Address(RVA = "0x10E36BC", Offset = "0x10E36BC", VA = "0x10E36BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ADB")]
			[Address(RVA = "0x10E36C4", Offset = "0x10E36C4", VA = "0x10E36C4")]
			set
			{
			}
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x10E1718", Offset = "0x10E1718", VA = "0x10E1718")]
		public GizmoPlaneSlider2DLookAndFeel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000493")]
	public class GizmoPlaneSlider2DSettings
	{
		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float _areaHoverEps;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float _borderLineHoverEps;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _thickBorderPolyHoverEps;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _offsetSnapStepRight;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _offsetSnapStepUp;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _rotationSnapStep;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GizmoSnapMode _rotationSnapMode;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _scaleSnapStepRight;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _scaleSnapStepUp;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _proportionalScaleSnapStep;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _offsetSensitivity;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _rotationSensitivity;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _scaleSensitivity;

		[Token(Token = "0x1700044E")]
		public float AreaHoverEps
		{
			[Token(Token = "0x6001ADD")]
			[Address(RVA = "0x10E36D4", Offset = "0x10E36D4", VA = "0x10E36D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001ADE")]
			[Address(RVA = "0x10E36DC", Offset = "0x10E36DC", VA = "0x10E36DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700044F")]
		public float BorderLineHoverEps
		{
			[Token(Token = "0x6001ADF")]
			[Address(RVA = "0x10E36EC", Offset = "0x10E36EC", VA = "0x10E36EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AE0")]
			[Address(RVA = "0x10E36F4", Offset = "0x10E36F4", VA = "0x10E36F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000450")]
		public float ThickBorderPolyHoverEps
		{
			[Token(Token = "0x6001AE1")]
			[Address(RVA = "0x10E3704", Offset = "0x10E3704", VA = "0x10E3704")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AE2")]
			[Address(RVA = "0x10E370C", Offset = "0x10E370C", VA = "0x10E370C")]
			set
			{
			}
		}

		[Token(Token = "0x17000451")]
		public float OffsetSnapStepRight
		{
			[Token(Token = "0x6001AE3")]
			[Address(RVA = "0x10E371C", Offset = "0x10E371C", VA = "0x10E371C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AE4")]
			[Address(RVA = "0x10E3724", Offset = "0x10E3724", VA = "0x10E3724")]
			set
			{
			}
		}

		[Token(Token = "0x17000452")]
		public float OffsetSnapStepUp
		{
			[Token(Token = "0x6001AE5")]
			[Address(RVA = "0x10E3738", Offset = "0x10E3738", VA = "0x10E3738")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0x10E3740", Offset = "0x10E3740", VA = "0x10E3740")]
			set
			{
			}
		}

		[Token(Token = "0x17000453")]
		public float RotationSnapStep
		{
			[Token(Token = "0x6001AE7")]
			[Address(RVA = "0x10E3754", Offset = "0x10E3754", VA = "0x10E3754")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0x10E375C", Offset = "0x10E375C", VA = "0x10E375C")]
			set
			{
			}
		}

		[Token(Token = "0x17000454")]
		public GizmoSnapMode RotationSnapMode
		{
			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0x10E3770", Offset = "0x10E3770", VA = "0x10E3770")]
			get
			{
				return default(GizmoSnapMode);
			}
			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0x10E3778", Offset = "0x10E3778", VA = "0x10E3778")]
			set
			{
			}
		}

		[Token(Token = "0x17000455")]
		public float ScaleSnapStepRight
		{
			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0x10E3780", Offset = "0x10E3780", VA = "0x10E3780")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0x10E3788", Offset = "0x10E3788", VA = "0x10E3788")]
			set
			{
			}
		}

		[Token(Token = "0x17000456")]
		public float ScaleSnapStepUp
		{
			[Token(Token = "0x6001AED")]
			[Address(RVA = "0x10E379C", Offset = "0x10E379C", VA = "0x10E379C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AEE")]
			[Address(RVA = "0x10E37A4", Offset = "0x10E37A4", VA = "0x10E37A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000457")]
		public float ProportionalScaleSnapStep
		{
			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0x10E37B8", Offset = "0x10E37B8", VA = "0x10E37B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0x10E37C0", Offset = "0x10E37C0", VA = "0x10E37C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000458")]
		public float OffsetSensitivity
		{
			[Token(Token = "0x6001AF1")]
			[Address(RVA = "0x10E37D4", Offset = "0x10E37D4", VA = "0x10E37D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0x10E37DC", Offset = "0x10E37DC", VA = "0x10E37DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000459")]
		public float RotationSensitivity
		{
			[Token(Token = "0x6001AF3")]
			[Address(RVA = "0x10E37F0", Offset = "0x10E37F0", VA = "0x10E37F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0x10E37F8", Offset = "0x10E37F8", VA = "0x10E37F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700045A")]
		public float ScaleSensitivity
		{
			[Token(Token = "0x6001AF5")]
			[Address(RVA = "0x10E380C", Offset = "0x10E380C", VA = "0x10E380C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AF6")]
			[Address(RVA = "0x10E3814", Offset = "0x10E3814", VA = "0x10E3814")]
			set
			{
			}
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x10E16DC", Offset = "0x10E16DC", VA = "0x10E16DC")]
		public GizmoPlaneSlider2DSettings()
		{
		}
	}
	[Token(Token = "0x2000494")]
	public enum GizmoPolygon2DBorderType
	{
		[Token(Token = "0x40015A5")]
		Thin,
		[Token(Token = "0x40015A6")]
		Thick
	}
	[Token(Token = "0x2000495")]
	public class GizmoPolygonPlaneSlider2DController : GizmoPlaneSlider2DController
	{
		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x10E181C", Offset = "0x10E181C", VA = "0x10E181C")]
		public GizmoPolygonPlaneSlider2DController(GizmoPlaneSlider2DControllerData controllerData)
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x10E3828", Offset = "0x10E3828", VA = "0x10E3828", Slot = "8")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x10E38FC", Offset = "0x10E38FC", VA = "0x10E38FC", Slot = "10")]
		public override void UpdateEpsilons()
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x10E3948", Offset = "0x10E3948", VA = "0x10E3948", Slot = "9")]
		public override void UpdateTransforms()
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x10E396C", Offset = "0x10E396C", VA = "0x10E396C", Slot = "11")]
		public override Vector2 GetRealExtentPoint(Shape2DExtentPoint extentPt)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000496")]
	public enum GizmoQuad2DBorderType
	{
		[Token(Token = "0x40015A8")]
		Thin
	}
	[Token(Token = "0x2000497")]
	public class GizmoQuadPlaneSlider2DController : GizmoPlaneSlider2DController
	{
		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x10E17EC", Offset = "0x10E17EC", VA = "0x10E17EC")]
		public GizmoQuadPlaneSlider2DController(GizmoPlaneSlider2DControllerData controllerData)
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x10E3990", Offset = "0x10E3990", VA = "0x10E3990", Slot = "8")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x10E3A64", Offset = "0x10E3A64", VA = "0x10E3A64", Slot = "10")]
		public override void UpdateEpsilons()
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x10E3ABC", Offset = "0x10E3ABC", VA = "0x10E3ABC", Slot = "9")]
		public override void UpdateTransforms()
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x10E3B5C", Offset = "0x10E3B5C", VA = "0x10E3B5C", Slot = "11")]
		public override Vector2 GetRealExtentPoint(Shape2DExtentPoint extentPt)
		{
			return default(Vector2);
		}
	}
	[Token(Token = "0x2000498")]
	public interface IGizmoPlaneSlider2DController
	{
		[Token(Token = "0x6001B02")]
		void UpdateHandles();

		[Token(Token = "0x6001B03")]
		void UpdateTransforms();

		[Token(Token = "0x6001B04")]
		void UpdateEpsilons();

		[Token(Token = "0x6001B05")]
		Vector2 GetRealExtentPoint(Shape2DExtentPoint extentPt);
	}
	[Token(Token = "0x2000499")]
	public class GizmoBoxLineSlider3DController : GizmoLineSlider3DController
	{
		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x10E3B80", Offset = "0x10E3B80", VA = "0x10E3B80")]
		public GizmoBoxLineSlider3DController(GizmoLineSlider3DControllerData controllerData)
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x10E3B88", Offset = "0x10E3B88", VA = "0x10E3B88", Slot = "8")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x10E3C00", Offset = "0x10E3C00", VA = "0x10E3C00", Slot = "9")]
		public override void UpdateTransforms(float zoomFactor)
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x10E4014", Offset = "0x10E4014", VA = "0x10E4014", Slot = "10")]
		public override void UpdateEpsilons(float zoomFactor)
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x10E4088", Offset = "0x10E4088", VA = "0x10E4088", Slot = "11")]
		public override float GetRealSizeAlongDirection(Vector3 direction, float zoomFactor)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200049A")]
	public class GizmoCylinderLineSlider3DController : GizmoLineSlider3DController
	{
		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x10E41F8", Offset = "0x10E41F8", VA = "0x10E41F8")]
		public GizmoCylinderLineSlider3DController(GizmoLineSlider3DControllerData controllerData)
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x10E4200", Offset = "0x10E4200", VA = "0x10E4200", Slot = "8")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x10E4278", Offset = "0x10E4278", VA = "0x10E4278", Slot = "9")]
		public override void UpdateTransforms(float zoomFactor)
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x10E4390", Offset = "0x10E4390", VA = "0x10E4390", Slot = "10")]
		public override void UpdateEpsilons(float zoomFactor)
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x10E43E0", Offset = "0x10E43E0", VA = "0x10E43E0", Slot = "11")]
		public override float GetRealSizeAlongDirection(Vector3 direction, float zoomFactor)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200049B")]
	public class GizmoLineSlider3D : GizmoSlider
	{
		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SegmentShape3D _segment;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private BoxShape3D _box;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CylinderShape3D _cylinder;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _segmentIndex;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _boxIndex;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _cylinderIndex;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IGizmoLineSlider3DController[] _controllers;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GizmoLineSlider3DControllerData _controllerData;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GizmoDragChannel _dragChannel;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GizmoSglAxisOffsetDrag3D _offsetDrag;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GizmoSglAxisRotationDrag3D _rotationDrag;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GizmoRotationArc3D _rotationArc;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GizmoSglAxisScaleDrag3D _scaleDrag;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _scaleDragAxisIndex;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<GizmoScalerHandle> _scalerHandles;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private IGizmoDragSession _selectedDragSession;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GizmoCap3D _cap3D;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GizmoTransform _transform;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GizmoTransformAxisMap3D _directionAxisMap;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GizmoTransformAxisMap3D _dragRotationAxisMap;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GizmoOverrideColor _overrideColor;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GizmoLineSlider3DSettings _settings;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GizmoLineSlider3DSettings _sharedSettings;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GizmoLineSlider3DLookAndFeel _lookAndFeel;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private GizmoLineSlider3DLookAndFeel _sharedLookAndFeel;

		[Token(Token = "0x1700045B")]
		public Vector3 Direction
		{
			[Token(Token = "0x6001B10")]
			[Address(RVA = "0x10E449C", Offset = "0x10E449C", VA = "0x10E449C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700045C")]
		public Vector3 DragRotationAxis
		{
			[Token(Token = "0x6001B11")]
			[Address(RVA = "0x10E44B8", Offset = "0x10E44B8", VA = "0x10E44B8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700045D")]
		public int ScaleDragAxisIndex
		{
			[Token(Token = "0x6001B12")]
			[Address(RVA = "0x10E44D4", Offset = "0x10E44D4", VA = "0x10E44D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001B13")]
			[Address(RVA = "0x10E44DC", Offset = "0x10E44DC", VA = "0x10E44DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700045E")]
		public Vector3 StartPosition
		{
			[Token(Token = "0x6001B14")]
			[Address(RVA = "0x10E3FF4", Offset = "0x10E3FF4", VA = "0x10E3FF4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001B15")]
			[Address(RVA = "0x10E44F4", Offset = "0x10E44F4", VA = "0x10E44F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700045F")]
		public GizmoDragChannel DragChannel
		{
			[Token(Token = "0x6001B16")]
			[Address(RVA = "0x10E4510", Offset = "0x10E4510", VA = "0x10E4510")]
			get
			{
				return default(GizmoDragChannel);
			}
		}

		[Token(Token = "0x17000460")]
		public bool IsDragged
		{
			[Token(Token = "0x6001B17")]
			[Address(RVA = "0x10E4518", Offset = "0x10E4518", VA = "0x10E4518")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000461")]
		public bool IsMoving
		{
			[Token(Token = "0x6001B18")]
			[Address(RVA = "0x10E45B0", Offset = "0x10E45B0", VA = "0x10E45B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000462")]
		public bool IsRotating
		{
			[Token(Token = "0x6001B19")]
			[Address(RVA = "0x10E45D4", Offset = "0x10E45D4", VA = "0x10E45D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000463")]
		public bool IsScaling
		{
			[Token(Token = "0x6001B1A")]
			[Address(RVA = "0x10E45F8", Offset = "0x10E45F8", VA = "0x10E45F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000464")]
		public bool Is3DCapVisible
		{
			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0x10E461C", Offset = "0x10E461C", VA = "0x10E461C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000465")]
		public bool Is3DCapHoverable
		{
			[Token(Token = "0x6001B1C")]
			[Address(RVA = "0x10E4638", Offset = "0x10E4638", VA = "0x10E4638")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000466")]
		public int Cap3DHandleId
		{
			[Token(Token = "0x6001B1D")]
			[Address(RVA = "0x10E4654", Offset = "0x10E4654", VA = "0x10E4654")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000467")]
		public Vector3 TotalDragOffset
		{
			[Token(Token = "0x6001B1E")]
			[Address(RVA = "0x10E4670", Offset = "0x10E4670", VA = "0x10E4670")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000468")]
		public Vector3 RelativeDragOffset
		{
			[Token(Token = "0x6001B1F")]
			[Address(RVA = "0x10E4690", Offset = "0x10E4690", VA = "0x10E4690")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000469")]
		public float TotalDragRotation
		{
			[Token(Token = "0x6001B20")]
			[Address(RVA = "0x10E46B0", Offset = "0x10E46B0", VA = "0x10E46B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700046A")]
		public float RelativeDragRotation
		{
			[Token(Token = "0x6001B21")]
			[Address(RVA = "0x10E46CC", Offset = "0x10E46CC", VA = "0x10E46CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700046B")]
		public float TotalDragScale
		{
			[Token(Token = "0x6001B22")]
			[Address(RVA = "0x10E46E8", Offset = "0x10E46E8", VA = "0x10E46E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700046C")]
		public float RelativeDragScale
		{
			[Token(Token = "0x6001B23")]
			[Address(RVA = "0x10E4704", Offset = "0x10E4704", VA = "0x10E4704")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700046D")]
		public GizmoOverrideColor OverrideColor
		{
			[Token(Token = "0x6001B24")]
			[Address(RVA = "0x10E4720", Offset = "0x10E4720", VA = "0x10E4720")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046E")]
		public GizmoOverrideColor Cap3DOverrideColor
		{
			[Token(Token = "0x6001B25")]
			[Address(RVA = "0x10E4728", Offset = "0x10E4728", VA = "0x10E4728")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046F")]
		public GizmoLineSlider3DSettings Settings
		{
			[Token(Token = "0x6001B26")]
			[Address(RVA = "0x10E406C", Offset = "0x10E406C", VA = "0x10E406C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000470")]
		public GizmoLineSlider3DSettings SharedSettings
		{
			[Token(Token = "0x6001B27")]
			[Address(RVA = "0x10E4744", Offset = "0x10E4744", VA = "0x10E4744")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B28")]
			[Address(RVA = "0x10E474C", Offset = "0x10E474C", VA = "0x10E474C")]
			set
			{
			}
		}

		[Token(Token = "0x17000471")]
		public GizmoLineSlider3DLookAndFeel LookAndFeel
		{
			[Token(Token = "0x6001B29")]
			[Address(RVA = "0x10E4754", Offset = "0x10E4754", VA = "0x10E4754")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000472")]
		public GizmoLineSlider3DLookAndFeel SharedLookAndFeel
		{
			[Token(Token = "0x6001B2A")]
			[Address(RVA = "0x10E4770", Offset = "0x10E4770", VA = "0x10E4770")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0x10E4778", Offset = "0x10E4778", VA = "0x10E4778")]
			set
			{
			}
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x10E47D0", Offset = "0x10E47D0", VA = "0x10E47D0")]
		public GizmoLineSlider3D(Gizmo gizmo, int handleId, int capHandleId)
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x10E538C", Offset = "0x10E538C", VA = "0x10E538C")]
		public bool IsScalerHandleRegistered(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x10E5488", Offset = "0x10E5488", VA = "0x10E5488")]
		public bool IsScalerHandleRegistered(int handleId, int scaleDragAxisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x10E55C0", Offset = "0x10E55C0", VA = "0x10E55C0")]
		public void RegisterScalerHandle(int handleId, IEnumerable<int> scaleDragAxisIndices)
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x10E56D0", Offset = "0x10E56D0", VA = "0x10E56D0")]
		public void UnregisterScalerHandle(int handleId)
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x10E57AC", Offset = "0x10E57AC", VA = "0x10E57AC", Slot = "13")]
		public override void SetSnapEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x10E57E4", Offset = "0x10E57E4", VA = "0x10E57E4")]
		public void Set3DCapVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x10E5804", Offset = "0x10E5804", VA = "0x10E5804")]
		public void Set3DCapHoverable(bool isHoverable)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x10E5824", Offset = "0x10E5824", VA = "0x10E5824")]
		public void SetZoomFactorTransform(GizmoTransform transform)
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x10E5840", Offset = "0x10E5840", VA = "0x10E5840")]
		public float GetZoomFactor(Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x10E3CD8", Offset = "0x10E3CD8", VA = "0x10E3CD8")]
		public Vector3 GetRealDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x10E588C", Offset = "0x10E588C", VA = "0x10E588C")]
		public float GetRealSizeAlongDirection(Camera camera, Vector3 direction)
		{
			return default(float);
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x10E3E18", Offset = "0x10E3E18", VA = "0x10E3E18")]
		public float GetRealLength(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x10E59B8", Offset = "0x10E59B8", VA = "0x10E59B8")]
		public float GetRealLengthWith3DCap(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x10E59FC", Offset = "0x10E59FC", VA = "0x10E59FC")]
		public Vector3 GetRealEndPosition(float zoomFactor)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x10E5A84", Offset = "0x10E5A84", VA = "0x10E5A84")]
		public Vector3 GetRealEndPositionWith3DCap(float zoomFactor)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x10E3F5C", Offset = "0x10E3F5C", VA = "0x10E3F5C")]
		public float GetRealBoxHeight(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x10E3FA8", Offset = "0x10E3FA8", VA = "0x10E3FA8")]
		public float GetRealBoxDepth(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x10E4344", Offset = "0x10E4344", VA = "0x10E4344")]
		public float GetRealCylinderRadius(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x10E5274", Offset = "0x10E5274", VA = "0x10E5274")]
		public void MapDirection(int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x10E5B0C", Offset = "0x10E5B0C", VA = "0x10E5B0C")]
		public void MapDragRotationAxis(GizmoTransform mapTransform, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x10E5B6C", Offset = "0x10E5B6C", VA = "0x10E5B6C")]
		public void UnmapDragRotationAxis()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x10E5B9C", Offset = "0x10E5B9C", VA = "0x10E5B9C")]
		public void SetDirection(Vector3 directionAxis)
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x10E5BFC", Offset = "0x10E5BFC", VA = "0x10E5BFC")]
		public void SetDragRotationAxis(Vector3 rotationAxis)
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x10E5338", Offset = "0x10E5338", VA = "0x10E5338")]
		public void AddTargetTransform(GizmoTransform transform)
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x10E5C6C", Offset = "0x10E5C6C", VA = "0x10E5C6C")]
		public void AddTargetTransform(GizmoTransform transform, GizmoDragChannel dragChannel)
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x10E5CC0", Offset = "0x10E5CC0", VA = "0x10E5CC0")]
		public void RemoveTargetTransform(GizmoTransform transform)
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x10E5D14", Offset = "0x10E5D14", VA = "0x10E5D14")]
		public void RemoveTargetTransform(GizmoTransform transform, GizmoDragChannel dragChannel)
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x10E52C4", Offset = "0x10E52C4", VA = "0x10E52C4")]
		public void SetDragChannel(GizmoDragChannel dragChannel)
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x10E5D68", Offset = "0x10E5D68", VA = "0x10E5D68")]
		public void ApplyZoomFactor(Camera camera)
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x10E5F08", Offset = "0x10E5F08", VA = "0x10E5F08", Slot = "14")]
		public override void Render(Camera camera)
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x10E641C", Offset = "0x10E641C", VA = "0x10E641C")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0x10E66B4", Offset = "0x10E66B4", VA = "0x10E66B4", Slot = "15")]
		protected override void OnVisibilityStateChanged()
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x10E694C", Offset = "0x10E694C", VA = "0x10E694C", Slot = "16")]
		protected override void OnHoverableStateChanged()
		{
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x10E6970", Offset = "0x10E6970", VA = "0x10E6970")]
		private void OnGizmoPreUpdateBegin(Gizmo gizmo)
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0x10E6CF4", Offset = "0x10E6CF4", VA = "0x10E6CF4")]
		private void OnGizmoAttemptHandleDragBegin(Gizmo gizmo, int handleId)
		{
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0x10E6F84", Offset = "0x10E6F84", VA = "0x10E6F84")]
		private void OnTransformChanged(GizmoTransform transform, GizmoTransform.ChangeData changeData)
		{
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0x10E7114", Offset = "0x10E7114", VA = "0x10E7114")]
		private void OnGizmoHandleHoverEnter(Gizmo gizmo, int handleId)
		{
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0x10E71F0", Offset = "0x10E71F0", VA = "0x10E71F0")]
		private void OnGizmoPostEnabled(Gizmo gizmo)
		{
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0x10E71F4", Offset = "0x10E71F4", VA = "0x10E71F4")]
		private void OnGizmoPostDisabled(Gizmo gizmo)
		{
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0x10E7224", Offset = "0x10E7224", VA = "0x10E7224")]
		private void OnGizmoHandleHoverExit(Gizmo gizmo, int handleId)
		{
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0x10E4794", Offset = "0x10E4794", VA = "0x10E4794")]
		private void SetupSharedLookAndFeel()
		{
		}
	}
	[Token(Token = "0x200049F")]
	public class GizmoLineSlider3DCollection
	{
		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<GizmoLineSlider3D> _sliders;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, GizmoLineSlider3D> _handleIdToSlider;

		[Token(Token = "0x17000473")]
		public int Count
		{
			[Token(Token = "0x6001B5C")]
			[Address(RVA = "0x10E730C", Offset = "0x10E730C", VA = "0x10E730C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000474")]
		public GizmoLineSlider3D this[int id]
		{
			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0x10E7354", Offset = "0x10E7354", VA = "0x10E7354")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0x10E73AC", Offset = "0x10E73AC", VA = "0x10E73AC")]
		public bool Contains(GizmoLineSlider3D slider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x10E742C", Offset = "0x10E742C", VA = "0x10E742C")]
		public bool Contains(int sliderHandleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x10E7484", Offset = "0x10E7484", VA = "0x10E7484")]
		public bool ContainsCapId(int capHandleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x10E7588", Offset = "0x10E7588", VA = "0x10E7588")]
		public void Add(GizmoLineSlider3D slider)
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x10E768C", Offset = "0x10E768C", VA = "0x10E768C")]
		public void Remove(GizmoLineSlider3D slider)
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x10E7734", Offset = "0x10E7734", VA = "0x10E7734")]
		public void ApplyZoomFactor(Camera camera)
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x10E7888", Offset = "0x10E7888", VA = "0x10E7888")]
		public void SetZoomFactorTransform(GizmoTransform zoomFactorTransform)
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x10E79DC", Offset = "0x10E79DC", VA = "0x10E79DC")]
		public void Make3DHoverPriorityLowerThan(Priority priority)
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x10E7B6C", Offset = "0x10E7B6C", VA = "0x10E7B6C")]
		public void Make3DHoverPriorityHigherThan(Priority priority)
		{
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x10E7CE0", Offset = "0x10E7CE0", VA = "0x10E7CE0")]
		public void SetSnapEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x10E7E40", Offset = "0x10E7E40", VA = "0x10E7E40")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x10E7FB8", Offset = "0x10E7FB8", VA = "0x10E7FB8")]
		public void Set3DCapsVisible(bool visible)
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x10E8110", Offset = "0x10E8110", VA = "0x10E8110")]
		public void SetDragChannel(GizmoDragChannel dragChannel)
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x10E8264", Offset = "0x10E8264", VA = "0x10E8264")]
		public void RegisterScalerHandle(int handleId, IEnumerable<int> scaleDragAxisIndices)
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x10E83B8", Offset = "0x10E83B8", VA = "0x10E83B8")]
		public List<GizmoLineSlider3D> GetRenderSortedSliders(Camera renderCamera)
		{
			return null;
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x10E8518", Offset = "0x10E8518", VA = "0x10E8518")]
		public GizmoLineSlider3DCollection()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	public abstract class GizmoLineSlider3DController : IGizmoLineSlider3DController
	{
		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected GizmoLineSlider3DControllerData _data;

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x10E86F4", Offset = "0x10E86F4", VA = "0x10E86F4")]
		public GizmoLineSlider3DController(GizmoLineSlider3DControllerData controllerData)
		{
		}

		[Token(Token = "0x6001B73")]
		public abstract void UpdateHandles();

		[Token(Token = "0x6001B74")]
		public abstract void UpdateTransforms(float zoomFactor);

		[Token(Token = "0x6001B75")]
		public abstract void UpdateEpsilons(float zoomFactor);

		[Token(Token = "0x6001B76")]
		public abstract float GetRealSizeAlongDirection(Vector3 direction, float zoomFactor);
	}
	[Token(Token = "0x20004A3")]
	public class GizmoLineSlider3DControllerData
	{
		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gizmo Gizmo;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GizmoLineSlider3D Slider;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GizmoHandle SliderHandle;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SegmentShape3D Segment;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BoxShape3D Box;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CylinderShape3D Cylinder;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int SegmentIndex;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int BoxIndex;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int CylinderIndex;

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x10E8724", Offset = "0x10E8724", VA = "0x10E8724")]
		public GizmoLineSlider3DControllerData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A4")]
	public class GizmoLineSlider3DLookAndFeel
	{
		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GizmoShadeMode _shadeMode;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private GizmoLine3DType _lineType;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GizmoFillMode3D _fillMode;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _length;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _scale;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool _useZoomFactor;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _boxHeight;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _boxDepth;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _cylinderRadius;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _isRotationArcVisible;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GizmoRotationArc3DLookAndFeel _rotationArcLookAndFeel;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color _hoveredColor;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GizmoCap3DLookAndFeel _capLookAndFeel;

		[Token(Token = "0x17000475")]
		public GizmoShadeMode ShadeMode
		{
			[Token(Token = "0x6001B78")]
			[Address(RVA = "0x10E872C", Offset = "0x10E872C", VA = "0x10E872C")]
			get
			{
				return default(GizmoShadeMode);
			}
			[Token(Token = "0x6001B79")]
			[Address(RVA = "0x10E8734", Offset = "0x10E8734", VA = "0x10E8734")]
			set
			{
			}
		}

		[Token(Token = "0x17000476")]
		public GizmoLine3DType LineType
		{
			[Token(Token = "0x6001B7A")]
			[Address(RVA = "0x10E873C", Offset = "0x10E873C", VA = "0x10E873C")]
			get
			{
				return default(GizmoLine3DType);
			}
			[Token(Token = "0x6001B7B")]
			[Address(RVA = "0x10E8744", Offset = "0x10E8744", VA = "0x10E8744")]
			set
			{
			}
		}

		[Token(Token = "0x17000477")]
		public GizmoFillMode3D FillMode
		{
			[Token(Token = "0x6001B7C")]
			[Address(RVA = "0x10E874C", Offset = "0x10E874C", VA = "0x10E874C")]
			get
			{
				return default(GizmoFillMode3D);
			}
			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0x10E8754", Offset = "0x10E8754", VA = "0x10E8754")]
			set
			{
			}
		}

		[Token(Token = "0x17000478")]
		public float Length
		{
			[Token(Token = "0x6001B7E")]
			[Address(RVA = "0x10E875C", Offset = "0x10E875C", VA = "0x10E875C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B7F")]
			[Address(RVA = "0x10E8764", Offset = "0x10E8764", VA = "0x10E8764")]
			set
			{
			}
		}

		[Token(Token = "0x17000479")]
		public float Scale
		{
			[Token(Token = "0x6001B80")]
			[Address(RVA = "0x10E8774", Offset = "0x10E8774", VA = "0x10E8774")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B81")]
			[Address(RVA = "0x10E877C", Offset = "0x10E877C", VA = "0x10E877C")]
			set
			{
			}
		}

		[Token(Token = "0x1700047A")]
		public bool UseZoomFactor
		{
			[Token(Token = "0x6001B82")]
			[Address(RVA = "0x10E878C", Offset = "0x10E878C", VA = "0x10E878C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B83")]
			[Address(RVA = "0x10E8794", Offset = "0x10E8794", VA = "0x10E8794")]
			set
			{
			}
		}

		[Token(Token = "0x1700047B")]
		public bool IsRotationArcVisible
		{
			[Token(Token = "0x6001B84")]
			[Address(RVA = "0x10E87A0", Offset = "0x10E87A0", VA = "0x10E87A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B85")]
			[Address(RVA = "0x10E87A8", Offset = "0x10E87A8", VA = "0x10E87A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700047C")]
		public GizmoRotationArc3DLookAndFeel RotationArcLookAndFeel
		{
			[Token(Token = "0x6001B86")]
			[Address(RVA = "0x10E87B4", Offset = "0x10E87B4", VA = "0x10E87B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047D")]
		public GizmoCap3DLookAndFeel CapLookAndFeel
		{
			[Token(Token = "0x6001B87")]
			[Address(RVA = "0x10E87BC", Offset = "0x10E87BC", VA = "0x10E87BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700047E")]
		public float BoxHeight
		{
			[Token(Token = "0x6001B88")]
			[Address(RVA = "0x10E87C4", Offset = "0x10E87C4", VA = "0x10E87C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B89")]
			[Address(RVA = "0x10E87CC", Offset = "0x10E87CC", VA = "0x10E87CC")]
			set
			{
			}
		}

		[Token(Token = "0x1700047F")]
		public float BoxDepth
		{
			[Token(Token = "0x6001B8A")]
			[Address(RVA = "0x10E87DC", Offset = "0x10E87DC", VA = "0x10E87DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0x10E87E4", Offset = "0x10E87E4", VA = "0x10E87E4")]
			set
			{
			}
		}

		[Token(Token = "0x17000480")]
		public float CylinderRadius
		{
			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0x10E87F4", Offset = "0x10E87F4", VA = "0x10E87F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0x10E87FC", Offset = "0x10E87FC", VA = "0x10E87FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000481")]
		public Color Color
		{
			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0x10E880C", Offset = "0x10E880C", VA = "0x10E880C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0x10E8818", Offset = "0x10E8818", VA = "0x10E8818")]
			set
			{
			}
		}

		[Token(Token = "0x17000482")]
		public Color HoveredColor
		{
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0x10E8824", Offset = "0x10E8824", VA = "0x10E8824")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001B91")]
			[Address(RVA = "0x10E8830", Offset = "0x10E8830", VA = "0x10E8830")]
			set
			{
			}
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x10E883C", Offset = "0x10E883C", VA = "0x10E883C")]
		public GizmoLineSlider3DLookAndFeel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004A5")]
	public class GizmoLineSlider3DSettings
	{
		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float _lineHoverEps;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float _boxHoverEps;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _cylinderHoverEps;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _offsetSnapStep;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _rotationSnapStep;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private GizmoSnapMode _rotationSnapMode;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _scaleSnapStep;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _offsetSensitivity;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _rotationSensitivity;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _scaleSensitivity;

		[Token(Token = "0x17000483")]
		public float LineHoverEps
		{
			[Token(Token = "0x6001B93")]
			[Address(RVA = "0x10E8990", Offset = "0x10E8990", VA = "0x10E8990")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B94")]
			[Address(RVA = "0x10E8998", Offset = "0x10E8998", VA = "0x10E8998")]
			set
			{
			}
		}

		[Token(Token = "0x17000484")]
		public float BoxHoverEps
		{
			[Token(Token = "0x6001B95")]
			[Address(RVA = "0x10E89A8", Offset = "0x10E89A8", VA = "0x10E89A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B96")]
			[Address(RVA = "0x10E89B0", Offset = "0x10E89B0", VA = "0x10E89B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000485")]
		public float CylinderHoverEps
		{
			[Token(Token = "0x6001B97")]
			[Address(RVA = "0x10E89C0", Offset = "0x10E89C0", VA = "0x10E89C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B98")]
			[Address(RVA = "0x10E89C8", Offset = "0x10E89C8", VA = "0x10E89C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000486")]
		public float OffsetSnapStep
		{
			[Token(Token = "0x6001B99")]
			[Address(RVA = "0x10E89D8", Offset = "0x10E89D8", VA = "0x10E89D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B9A")]
			[Address(RVA = "0x10E89E0", Offset = "0x10E89E0", VA = "0x10E89E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000487")]
		public float RotationSnapStep
		{
			[Token(Token = "0x6001B9B")]
			[Address(RVA = "0x10E89F4", Offset = "0x10E89F4", VA = "0x10E89F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0x10E89FC", Offset = "0x10E89FC", VA = "0x10E89FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000488")]
		public GizmoSnapMode RotationSnapMode
		{
			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0x10E8A10", Offset = "0x10E8A10", VA = "0x10E8A10")]
			get
			{
				return default(GizmoSnapMode);
			}
			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0x10E8A18", Offset = "0x10E8A18", VA = "0x10E8A18")]
			set
			{
			}
		}

		[Token(Token = "0x17000489")]
		public float ScaleSnapStep
		{
			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0x10E8A20", Offset = "0x10E8A20", VA = "0x10E8A20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BA0")]
			[Address(RVA = "0x10E8A28", Offset = "0x10E8A28", VA = "0x10E8A28")]
			set
			{
			}
		}

		[Token(Token = "0x1700048A")]
		public float OffsetSensitivity
		{
			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0x10E8A3C", Offset = "0x10E8A3C", VA = "0x10E8A3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BA2")]
			[Address(RVA = "0x10E8A44", Offset = "0x10E8A44", VA = "0x10E8A44")]
			set
			{
			}
		}

		[Token(Token = "0x1700048B")]
		public float RotationSensitivity
		{
			[Token(Token = "0x6001BA3")]
			[Address(RVA = "0x10E8A58", Offset = "0x10E8A58", VA = "0x10E8A58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BA4")]
			[Address(RVA = "0x10E8A60", Offset = "0x10E8A60", VA = "0x10E8A60")]
			set
			{
			}
		}

		[Token(Token = "0x1700048C")]
		public float ScaleSensitivity
		{
			[Token(Token = "0x6001BA5")]
			[Address(RVA = "0x10E8A74", Offset = "0x10E8A74", VA = "0x10E8A74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001BA6")]
			[Address(RVA = "0x10E8A7C", Offset = "0x10E8A7C", VA = "0x10E8A7C")]
			set
			{
			}
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0x10E8A90", Offset = "0x10E8A90", VA = "0x10E8A90")]
		public GizmoLineSlider3DSettings()
		{
		}
	}
	[Token(Token = "0x20004A6")]
	public class GizmoThinLineSlider3DController : GizmoLineSlider3DController
	{
		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0x10E8AB8", Offset = "0x10E8AB8", VA = "0x10E8AB8")]
		public GizmoThinLineSlider3DController(GizmoLineSlider3DControllerData controllerData)
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0x10E8AE8", Offset = "0x10E8AE8", VA = "0x10E8AE8", Slot = "8")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0x10E8B60", Offset = "0x10E8B60", VA = "0x10E8B60", Slot = "9")]
		public override void UpdateTransforms(float zoomFactor)
		{
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0x10E8C10", Offset = "0x10E8C10", VA = "0x10E8C10", Slot = "10")]
		public override void UpdateEpsilons(float zoomFactor)
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0x10E8C60", Offset = "0x10E8C60", VA = "0x10E8C60", Slot = "11")]
		public override float GetRealSizeAlongDirection(Vector3 direction, float zoomFactor)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20004A7")]
	public interface IGizmoLineSlider3DController
	{
		[Token(Token = "0x6001BAD")]
		void UpdateHandles();

		[Token(Token = "0x6001BAE")]
		void UpdateTransforms(float zoomFactor);

		[Token(Token = "0x6001BAF")]
		void UpdateEpsilons(float zoomFactor);

		[Token(Token = "0x6001BB0")]
		float GetRealSizeAlongDirection(Vector3 direction, float zoomFactor);
	}
	[Token(Token = "0x20004A8")]
	public enum GizmoCircle3DBorderType
	{
		[Token(Token = "0x40015ED")]
		Thin,
		[Token(Token = "0x40015EE")]
		Torus,
		[Token(Token = "0x40015EF")]
		CylindricalTorus
	}
	[Token(Token = "0x20004A9")]
	public class GizmoCirclePlaneSlider3DController : GizmoPlaneSlider3DController
	{
		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0x10E8CF4", Offset = "0x10E8CF4", VA = "0x10E8CF4")]
		public GizmoCirclePlaneSlider3DController(GizmoPlaneSlider3DControllerData controllerData)
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0x10E8D54", Offset = "0x10E8D54", VA = "0x10E8D54", Slot = "7")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0x10E93E0", Offset = "0x10E93E0", VA = "0x10E93E0", Slot = "9")]
		public override void UpdateEpsilons(float zoomFactor)
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0x10E94A8", Offset = "0x10E94A8", VA = "0x10E94A8", Slot = "8")]
		public override void UpdateTransforms(float zoomFactor)
		{
		}
	}
	[Token(Token = "0x20004AA")]
	public class GizmoPlaneSlider3D : GizmoSlider
	{
		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _quadIndex;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _raTriangleIndex;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _circleIndex;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private QuadShape3D _quad;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RightAngTriangle3D _raTriangle;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CircleShape3D _circle;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GizmoQuad3DBorder _quadBorder;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GizmoRATriangle3DBorder _raTriangleBorder;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GizmoCircle3DBorder _circleBorder;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _isBorderHoverable;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _isBorderVisible;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GizmoTransform _transform;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GizmoDragChannel _dragChannel;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IGizmoDragSession _selectedDragSession;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GizmoDblAxisOffsetDrag3D _dblAxisOffsetDrag;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GizmoSglAxisRotationDrag3D _rotationDrag;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GizmoRotationArc3D _rotationArc;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GizmoDblAxisScaleDrag3D _scaleDrag;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int _scaleDragAxisIndexRight;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int _scaleDragAxisIndexUp;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GizmoPlaneSlider3DControllerData _controllerData;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private IGizmoPlaneSlider3DController[] _controllers;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GizmoPlaneSlider3DSettings _settings;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GizmoPlaneSlider3DSettings _sharedSettings;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GizmoPlaneSlider3DLookAndFeel _lookAndFeel;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GizmoPlaneSlider3DLookAndFeel _sharedLookAndFeel;

		[Token(Token = "0x1700048D")]
		public GizmoPlaneSlider3DSettings Settings
		{
			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0x10E948C", Offset = "0x10E948C", VA = "0x10E948C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700048E")]
		public GizmoPlaneSlider3DSettings SharedSettings
		{
			[Token(Token = "0x6001BB6")]
			[Address(RVA = "0x10E9748", Offset = "0x10E9748", VA = "0x10E9748")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BB7")]
			[Address(RVA = "0x10E9750", Offset = "0x10E9750", VA = "0x10E9750")]
			set
			{
			}
		}

		[Token(Token = "0x1700048F")]
		public GizmoPlaneSlider3DLookAndFeel LookAndFeel
		{
			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0x10E9758", Offset = "0x10E9758", VA = "0x10E9758")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000490")]
		public GizmoPlaneSlider3DLookAndFeel SharedLookAndFeel
		{
			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0x10E9774", Offset = "0x10E9774", VA = "0x10E9774")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BBA")]
			[Address(RVA = "0x10E977C", Offset = "0x10E977C", VA = "0x10E977C")]
			set
			{
			}
		}

		[Token(Token = "0x17000491")]
		public Plane Plane
		{
			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0x10E9784", Offset = "0x10E9784", VA = "0x10E9784")]
			get
			{
				return default(Plane);
			}
		}

		[Token(Token = "0x17000492")]
		public Vector3 Position
		{
			[Token(Token = "0x6001BBC")]
			[Address(RVA = "0x10E9528", Offset = "0x10E9528", VA = "0x10E9528")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0x10E97D0", Offset = "0x10E97D0", VA = "0x10E97D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000493")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6001BBE")]
			[Address(RVA = "0x10E9604", Offset = "0x10E9604", VA = "0x10E9604")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001BBF")]
			[Address(RVA = "0x10E97EC", Offset = "0x10E97EC", VA = "0x10E97EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000494")]
		public Quaternion LocalRotation
		{
			[Token(Token = "0x6001BC0")]
			[Address(RVA = "0x10E9808", Offset = "0x10E9808", VA = "0x10E9808")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001BC1")]
			[Address(RVA = "0x10E9828", Offset = "0x10E9828", VA = "0x10E9828")]
			set
			{
			}
		}

		[Token(Token = "0x17000495")]
		public Vector3 Right
		{
			[Token(Token = "0x6001BC2")]
			[Address(RVA = "0x10E9844", Offset = "0x10E9844", VA = "0x10E9844")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000496")]
		public Vector3 Up
		{
			[Token(Token = "0x6001BC3")]
			[Address(RVA = "0x10E9868", Offset = "0x10E9868", VA = "0x10E9868")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000497")]
		public Vector3 Look
		{
			[Token(Token = "0x6001BC4")]
			[Address(RVA = "0x10E988C", Offset = "0x10E988C", VA = "0x10E988C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000498")]
		public Vector3 Normal
		{
			[Token(Token = "0x6001BC5")]
			[Address(RVA = "0x10E97CC", Offset = "0x10E97CC", VA = "0x10E97CC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000499")]
		public GizmoDragChannel DragChannel
		{
			[Token(Token = "0x6001BC6")]
			[Address(RVA = "0x10E98B0", Offset = "0x10E98B0", VA = "0x10E98B0")]
			get
			{
				return default(GizmoDragChannel);
			}
		}

		[Token(Token = "0x1700049A")]
		public int ScaleDragAxisIndexRight
		{
			[Token(Token = "0x6001BC7")]
			[Address(RVA = "0x10E98B8", Offset = "0x10E98B8", VA = "0x10E98B8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BC8")]
			[Address(RVA = "0x10E98C0", Offset = "0x10E98C0", VA = "0x10E98C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700049B")]
		public int ScaleDragAxisIndexUp
		{
			[Token(Token = "0x6001BC9")]
			[Address(RVA = "0x10E98D8", Offset = "0x10E98D8", VA = "0x10E98D8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001BCA")]
			[Address(RVA = "0x10E98E0", Offset = "0x10E98E0", VA = "0x10E98E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700049C")]
		public Vector3 TotalDragOffset
		{
			[Token(Token = "0x6001BCB")]
			[Address(RVA = "0x10E98F8", Offset = "0x10E98F8", VA = "0x10E98F8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700049D")]
		public Vector3 RelativeDragOffset
		{
			[Token(Token = "0x6001BCC")]
			[Address(RVA = "0x10E9918", Offset = "0x10E9918", VA = "0x10E9918")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700049E")]
		public float TotalDragRotation
		{
			[Token(Token = "0x6001BCD")]
			[Address(RVA = "0x10E9938", Offset = "0x10E9938", VA = "0x10E9938")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700049F")]
		public float RelativeDragRotation
		{
			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0x10E9954", Offset = "0x10E9954", VA = "0x10E9954")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004A0")]
		public float TotalDragScaleRight
		{
			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0x10E9970", Offset = "0x10E9970", VA = "0x10E9970")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004A1")]
		public float RelativeDragScaleRight
		{
			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0x10E998C", Offset = "0x10E998C", VA = "0x10E998C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004A2")]
		public float TotalDragScaleUp
		{
			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0x10E99A8", Offset = "0x10E99A8", VA = "0x10E99A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004A3")]
		public float RelativeDragScaleUp
		{
			[Token(Token = "0x6001BD2")]
			[Address(RVA = "0x10E99C4", Offset = "0x10E99C4", VA = "0x10E99C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170004A4")]
		public bool IsBorderVisible
		{
			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0x10E99E0", Offset = "0x10E99E0", VA = "0x10E99E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004A5")]
		public bool IsBorderHoverable
		{
			[Token(Token = "0x6001BD4")]
			[Address(RVA = "0x10E99E8", Offset = "0x10E99E8", VA = "0x10E99E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004A6")]
		public bool IsDragged
		{
			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0x10E99F0", Offset = "0x10E99F0", VA = "0x10E99F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004A7")]
		public bool IsMoving
		{
			[Token(Token = "0x6001BD6")]
			[Address(RVA = "0x10E9A44", Offset = "0x10E9A44", VA = "0x10E9A44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004A8")]
		public bool IsRotating
		{
			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0x10E9A68", Offset = "0x10E9A68", VA = "0x10E9A68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004A9")]
		public bool IsScaling
		{
			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0x10E9A8C", Offset = "0x10E9A8C", VA = "0x10E9A8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0x10E9AB0", Offset = "0x10E9AB0", VA = "0x10E9AB0")]
		public GizmoPlaneSlider3D(Gizmo gizmo, int handleId)
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0x10EBBD0", Offset = "0x10EBBD0", VA = "0x10EBBD0")]
		public void SetBorderVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0x10EBCCC", Offset = "0x10EBCCC", VA = "0x10EBCCC")]
		public void SetBorderHoverable(bool isHoverable)
		{
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0x10EBF38", Offset = "0x10EBF38", VA = "0x10EBF38", Slot = "13")]
		public override void SetSnapEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0x10EBF70", Offset = "0x10EBF70", VA = "0x10EBF70")]
		public void SetZoomFactorTransform(GizmoTransform transform)
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0x10EBF8C", Offset = "0x10EBF8C", VA = "0x10EBF8C")]
		public float GetZoomFactor(Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0x10EBFD8", Offset = "0x10EBFD8", VA = "0x10EBFD8")]
		public float GetRealQuadWidth(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0x10EC084", Offset = "0x10EC084", VA = "0x10EC084")]
		public float GetRealQuadHeight(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0x10EC130", Offset = "0x10EC130", VA = "0x10EC130")]
		public Vector2 GetRealQuadSize(float zoomFactor)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0x10E9548", Offset = "0x10E9548", VA = "0x10E9548")]
		public float GetRealCircleRadius(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0x10EC1EC", Offset = "0x10EC1EC", VA = "0x10EC1EC")]
		public float GetRealRATriXLength(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0x10EC298", Offset = "0x10EC298", VA = "0x10EC298")]
		public float GetRealRATriYLength(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0x10EC344", Offset = "0x10EC344", VA = "0x10EC344")]
		public Vector2 GetRealRATriSize(float zoomFactor)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0x10EC400", Offset = "0x10EC400", VA = "0x10EC400")]
		public void AlignToQuadrant(GizmoTransform transform, PlaneId planeId, PlaneQuadrantId quadrantId, bool alignXToFirstAxis)
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0x10EC528", Offset = "0x10EC528", VA = "0x10EC528")]
		public void MakeSliderPlane(GizmoTransform sliderPlaneTransform, PlaneId planeId, GizmoLineSlider3D firstAxisSlider, GizmoLineSlider3D secondAxisSlider, Camera camera)
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0x10EC7A0", Offset = "0x10EC7A0", VA = "0x10EC7A0")]
		public Vector3 GetQuadCornerPosition(QuadCorner corner)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0x10EC724", Offset = "0x10EC724", VA = "0x10EC724")]
		public void SetQuadCornerPosition(QuadCorner corner, Vector3 cornerPosition)
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0x10EC7BC", Offset = "0x10EC7BC", VA = "0x10EC7BC")]
		public void ApplyZoomFactor(Camera camera)
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0x10EBB1C", Offset = "0x10EBB1C", VA = "0x10EBB1C")]
		public void SetDragChannel(GizmoDragChannel dragChannel)
		{
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0x10EBB7C", Offset = "0x10EBB7C", VA = "0x10EBB7C")]
		public void AddTargetTransform(GizmoTransform transform)
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x10EC8F0", Offset = "0x10EC8F0", VA = "0x10EC8F0")]
		public void AddTargetTransform(GizmoTransform transform, GizmoDragChannel dragChannel)
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x10EC944", Offset = "0x10EC944", VA = "0x10EC944")]
		public void RemoveTargetTransform(GizmoTransform transform)
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x10EC998", Offset = "0x10EC998", VA = "0x10EC998")]
		public void RemoveTargetTransform(GizmoTransform transform, GizmoDragChannel dragChannel)
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x10EC9EC", Offset = "0x10EC9EC", VA = "0x10EC9EC", Slot = "14")]
		public override void Render(Camera camera)
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x10EDFB8", Offset = "0x10EDFB8", VA = "0x10EDFB8")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x10EE1FC", Offset = "0x10EE1FC", VA = "0x10EE1FC", Slot = "15")]
		protected override void OnVisibilityStateChanged()
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x10EE440", Offset = "0x10EE440", VA = "0x10EE440", Slot = "16")]
		protected override void OnHoverableStateChanged()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x10EE498", Offset = "0x10EE498", VA = "0x10EE498")]
		private void OnGizmoPreUpdateBegin(Gizmo gizmo)
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x10EE734", Offset = "0x10EE734", VA = "0x10EE734")]
		private void OnTransformChanged(GizmoTransform transform, GizmoTransform.ChangeData changeData)
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x10EE86C", Offset = "0x10EE86C", VA = "0x10EE86C")]
		private void OnGizmoAttemptHandleDragBegin(Gizmo gizmo, int handleId)
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x10EEB70", Offset = "0x10EEB70", VA = "0x10EEB70")]
		private void OnCanHoverHandle(int handleId, Gizmo gizmo, GizmoHandleHoverData hoverData, YesNoAnswer answer)
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0x10EEDB8", Offset = "0x10EEDB8", VA = "0x10EEDB8")]
		private void OnGizmoPostEnabled(Gizmo gizmo)
		{
		}
	}
	[Token(Token = "0x20004AB")]
	public class GizmoPlaneSlider3DCollection
	{
		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<GizmoPlaneSlider3D> _sliders;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, GizmoPlaneSlider3D> _handleIdToSlider;

		[Token(Token = "0x170004AA")]
		public int Count
		{
			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0x10EEDBC", Offset = "0x10EEDBC", VA = "0x10EEDBC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004AB")]
		public GizmoPlaneSlider3D this[int id]
		{
			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0x10EEE04", Offset = "0x10EEE04", VA = "0x10EEE04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0x10EEE5C", Offset = "0x10EEE5C", VA = "0x10EEE5C")]
		public bool Contains(GizmoPlaneSlider3D slider)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x10EEEC0", Offset = "0x10EEEC0", VA = "0x10EEEC0")]
		public bool Contains(int sliderHandleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x10EEF18", Offset = "0x10EEF18", VA = "0x10EEF18")]
		public void Add(GizmoPlaneSlider3D slider)
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x10EF01C", Offset = "0x10EF01C", VA = "0x10EF01C")]
		public void Remove(GizmoPlaneSlider3D slider)
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x10EF0C4", Offset = "0x10EF0C4", VA = "0x10EF0C4")]
		public void ApplyZoomFactor(Camera camera)
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x10EF214", Offset = "0x10EF214", VA = "0x10EF214")]
		public void SetZoomFactorTransform(GizmoTransform zoomFactorTransform)
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x10EF374", Offset = "0x10EF374", VA = "0x10EF374")]
		public void Make3DHoverPriorityLowerThan(Priority priority)
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x10EF4E8", Offset = "0x10EF4E8", VA = "0x10EF4E8")]
		public void Make3DHoverPriorityHigherThan(Priority priority)
		{
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x10EF65C", Offset = "0x10EF65C", VA = "0x10EF65C")]
		public void SetSnapEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x10EF7BC", Offset = "0x10EF7BC", VA = "0x10EF7BC")]
		public void SetVisible(bool isVisible, bool includeBorder)
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x10EFA04", Offset = "0x10EFA04", VA = "0x10EFA04")]
		public void SetBorderVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0x10EFB58", Offset = "0x10EFB58", VA = "0x10EFB58")]
		public void SetHoverable(bool isHoverable, bool includeBorder)
		{
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x10EFDB8", Offset = "0x10EFDB8", VA = "0x10EFDB8")]
		public void SetBorderHoverable(bool isHoverable)
		{
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0x10EFF0C", Offset = "0x10EFF0C", VA = "0x10EFF0C")]
		public List<GizmoPlaneSlider3D> GetRenderSortedSliders(Camera renderCamera)
		{
			return null;
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0x10F0058", Offset = "0x10F0058", VA = "0x10F0058")]
		public GizmoPlaneSlider3DCollection()
		{
		}
	}
	[Token(Token = "0x20004AD")]
	public abstract class GizmoPlaneSlider3DController : IGizmoPlaneSlider3DController
	{
		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected GizmoPlaneSlider3DControllerData _data;

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x10E8D24", Offset = "0x10E8D24", VA = "0x10E8D24")]
		public GizmoPlaneSlider3DController(GizmoPlaneSlider3DControllerData controllerData)
		{
		}

		[Token(Token = "0x6001C0D")]
		public abstract void UpdateHandles();

		[Token(Token = "0x6001C0E")]
		public abstract void UpdateTransforms(float zoomFactor);

		[Token(Token = "0x6001C0F")]
		public abstract void UpdateEpsilons(float zoomFactor);
	}
	[Token(Token = "0x20004AE")]
	public class GizmoPlaneSlider3DControllerData
	{
		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gizmo Gizmo;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GizmoPlaneSlider3D Slider;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GizmoHandle SliderHandle;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GizmoQuad3DBorder QuadBorder;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public QuadShape3D Quad;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GizmoRATriangle3DBorder RATriangleBorder;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RightAngTriangle3D RATriangle;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GizmoCircle3DBorder CircleBorder;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CircleShape3D Circle;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int QuadIndex;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int RATriangleIndex;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int CircleIndex;

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x10EA538", Offset = "0x10EA538", VA = "0x10EA538")]
		public GizmoPlaneSlider3DControllerData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004AF")]
	public class GizmoPlaneSlider3DLookAndFeel
	{
		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GizmoPlane3DType _planeType;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float _scale;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _useZoomFactor;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _quadWidth;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _quadHeight;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _raTriangleXLength;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _raTriangleYLength;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _circleRadius;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _borderBoxHeight;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _borderBoxDepth;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _borderTorusThickness;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private int _numBorderTorusWireAxialSlices;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _borderCylTorusWidth;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _borderCylTorusHeight;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GizmoShadeMode _shadeMode;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private Color _hoveredColor;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private Color _borderColor;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Color _hoveredBorderColor;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float _borderCircleCullAlphaScale;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private GizmoShadeMode _borderShadeMode;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private GizmoFillMode3D _borderFillMode;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GizmoQuad3DBorderType _quadBorderType;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private GizmoRATriangle3DBorderType _raTriangleBorderType;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GizmoCircle3DBorderType _circleBorderType;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private bool _isRotationArcVisible;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GizmoRotationArc3DLookAndFeel _rotationArcLookAndFeel;

		[Token(Token = "0x170004AC")]
		public GizmoShadeMode ShadeMode
		{
			[Token(Token = "0x6001C11")]
			[Address(RVA = "0x10F01C4", Offset = "0x10F01C4", VA = "0x10F01C4")]
			get
			{
				return default(GizmoShadeMode);
			}
			[Token(Token = "0x6001C12")]
			[Address(RVA = "0x10F01CC", Offset = "0x10F01CC", VA = "0x10F01CC")]
			set
			{
			}
		}

		[Token(Token = "0x170004AD")]
		public GizmoPlane3DType PlaneType
		{
			[Token(Token = "0x6001C13")]
			[Address(RVA = "0x10F01D4", Offset = "0x10F01D4", VA = "0x10F01D4")]
			get
			{
				return default(GizmoPlane3DType);
			}
			[Token(Token = "0x6001C14")]
			[Address(RVA = "0x10F01DC", Offset = "0x10F01DC", VA = "0x10F01DC")]
			set
			{
			}
		}

		[Token(Token = "0x170004AE")]
		public float Scale
		{
			[Token(Token = "0x6001C15")]
			[Address(RVA = "0x10F01E4", Offset = "0x10F01E4", VA = "0x10F01E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C16")]
			[Address(RVA = "0x10F01EC", Offset = "0x10F01EC", VA = "0x10F01EC")]
			set
			{
			}
		}

		[Token(Token = "0x170004AF")]
		public bool UseZoomFactor
		{
			[Token(Token = "0x6001C17")]
			[Address(RVA = "0x10F01FC", Offset = "0x10F01FC", VA = "0x10F01FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C18")]
			[Address(RVA = "0x10F0204", Offset = "0x10F0204", VA = "0x10F0204")]
			set
			{
			}
		}

		[Token(Token = "0x170004B0")]
		public float QuadWidth
		{
			[Token(Token = "0x6001C19")]
			[Address(RVA = "0x10F0210", Offset = "0x10F0210", VA = "0x10F0210")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0x10F0218", Offset = "0x10F0218", VA = "0x10F0218")]
			set
			{
			}
		}

		[Token(Token = "0x170004B1")]
		public float QuadHeight
		{
			[Token(Token = "0x6001C1B")]
			[Address(RVA = "0x10F0228", Offset = "0x10F0228", VA = "0x10F0228")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0x10F0230", Offset = "0x10F0230", VA = "0x10F0230")]
			set
			{
			}
		}

		[Token(Token = "0x170004B2")]
		public float RATriangleXLength
		{
			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0x10F0240", Offset = "0x10F0240", VA = "0x10F0240")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0x10F0248", Offset = "0x10F0248", VA = "0x10F0248")]
			set
			{
			}
		}

		[Token(Token = "0x170004B3")]
		public float RATriangleYLength
		{
			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0x10F0258", Offset = "0x10F0258", VA = "0x10F0258")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C20")]
			[Address(RVA = "0x10F0260", Offset = "0x10F0260", VA = "0x10F0260")]
			set
			{
			}
		}

		[Token(Token = "0x170004B4")]
		public float CircleRadius
		{
			[Token(Token = "0x6001C21")]
			[Address(RVA = "0x10F0270", Offset = "0x10F0270", VA = "0x10F0270")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C22")]
			[Address(RVA = "0x10F0278", Offset = "0x10F0278", VA = "0x10F0278")]
			set
			{
			}
		}

		[Token(Token = "0x170004B5")]
		public float BorderCircleCullAlphaScale
		{
			[Token(Token = "0x6001C23")]
			[Address(RVA = "0x10F0288", Offset = "0x10F0288", VA = "0x10F0288")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C24")]
			[Address(RVA = "0x10F0290", Offset = "0x10F0290", VA = "0x10F0290")]
			set
			{
			}
		}

		[Token(Token = "0x170004B6")]
		public float BorderBoxHeight
		{
			[Token(Token = "0x6001C25")]
			[Address(RVA = "0x10F02AC", Offset = "0x10F02AC", VA = "0x10F02AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C26")]
			[Address(RVA = "0x10F02B4", Offset = "0x10F02B4", VA = "0x10F02B4")]
			set
			{
			}
		}

		[Token(Token = "0x170004B7")]
		public float BorderBoxDepth
		{
			[Token(Token = "0x6001C27")]
			[Address(RVA = "0x10F02C4", Offset = "0x10F02C4", VA = "0x10F02C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C28")]
			[Address(RVA = "0x10F02CC", Offset = "0x10F02CC", VA = "0x10F02CC")]
			set
			{
			}
		}

		[Token(Token = "0x170004B8")]
		public float BorderTorusThickness
		{
			[Token(Token = "0x6001C29")]
			[Address(RVA = "0x10F02DC", Offset = "0x10F02DC", VA = "0x10F02DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0x10F02E4", Offset = "0x10F02E4", VA = "0x10F02E4")]
			set
			{
			}
		}

		[Token(Token = "0x170004B9")]
		public float BorderCylTorusWidth
		{
			[Token(Token = "0x6001C2B")]
			[Address(RVA = "0x10F02F4", Offset = "0x10F02F4", VA = "0x10F02F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0x10F02FC", Offset = "0x10F02FC", VA = "0x10F02FC")]
			set
			{
			}
		}

		[Token(Token = "0x170004BA")]
		public float BorderCylTorusHeight
		{
			[Token(Token = "0x6001C2D")]
			[Address(RVA = "0x10F030C", Offset = "0x10F030C", VA = "0x10F030C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0x10F0314", Offset = "0x10F0314", VA = "0x10F0314")]
			set
			{
			}
		}

		[Token(Token = "0x170004BB")]
		public int NumBorderTorusWireAxialSlices
		{
			[Token(Token = "0x6001C2F")]
			[Address(RVA = "0x10F0324", Offset = "0x10F0324", VA = "0x10F0324")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001C30")]
			[Address(RVA = "0x10F032C", Offset = "0x10F032C", VA = "0x10F032C")]
			set
			{
			}
		}

		[Token(Token = "0x170004BC")]
		public Color Color
		{
			[Token(Token = "0x6001C31")]
			[Address(RVA = "0x10F0340", Offset = "0x10F0340", VA = "0x10F0340")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001C32")]
			[Address(RVA = "0x10F034C", Offset = "0x10F034C", VA = "0x10F034C")]
			set
			{
			}
		}

		[Token(Token = "0x170004BD")]
		public Color HoveredColor
		{
			[Token(Token = "0x6001C33")]
			[Address(RVA = "0x10F0358", Offset = "0x10F0358", VA = "0x10F0358")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001C34")]
			[Address(RVA = "0x10F0364", Offset = "0x10F0364", VA = "0x10F0364")]
			set
			{
			}
		}

		[Token(Token = "0x170004BE")]
		public Color BorderColor
		{
			[Token(Token = "0x6001C35")]
			[Address(RVA = "0x10F0370", Offset = "0x10F0370", VA = "0x10F0370")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001C36")]
			[Address(RVA = "0x10F037C", Offset = "0x10F037C", VA = "0x10F037C")]
			set
			{
			}
		}

		[Token(Token = "0x170004BF")]
		public Color HoveredBorderColor
		{
			[Token(Token = "0x6001C37")]
			[Address(RVA = "0x10F0388", Offset = "0x10F0388", VA = "0x10F0388")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001C38")]
			[Address(RVA = "0x10F0394", Offset = "0x10F0394", VA = "0x10F0394")]
			set
			{
			}
		}

		[Token(Token = "0x170004C0")]
		public GizmoShadeMode BorderShadeMode
		{
			[Token(Token = "0x6001C39")]
			[Address(RVA = "0x10F03A0", Offset = "0x10F03A0", VA = "0x10F03A0")]
			get
			{
				return default(GizmoShadeMode);
			}
			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0x10F03A8", Offset = "0x10F03A8", VA = "0x10F03A8")]
			set
			{
			}
		}

		[Token(Token = "0x170004C1")]
		public GizmoFillMode3D BorderFillMode
		{
			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0x10F03B0", Offset = "0x10F03B0", VA = "0x10F03B0")]
			get
			{
				return default(GizmoFillMode3D);
			}
			[Token(Token = "0x6001C3C")]
			[Address(RVA = "0x10F03B8", Offset = "0x10F03B8", VA = "0x10F03B8")]
			set
			{
			}
		}

		[Token(Token = "0x170004C2")]
		public GizmoQuad3DBorderType QuadBorderType
		{
			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0x10F03C0", Offset = "0x10F03C0", VA = "0x10F03C0")]
			get
			{
				return default(GizmoQuad3DBorderType);
			}
			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0x10F03C8", Offset = "0x10F03C8", VA = "0x10F03C8")]
			set
			{
			}
		}

		[Token(Token = "0x170004C3")]
		public GizmoCircle3DBorderType CircleBorderType
		{
			[Token(Token = "0x6001C3F")]
			[Address(RVA = "0x10F03D0", Offset = "0x10F03D0", VA = "0x10F03D0")]
			get
			{
				return default(GizmoCircle3DBorderType);
			}
			[Token(Token = "0x6001C40")]
			[Address(RVA = "0x10F03D8", Offset = "0x10F03D8", VA = "0x10F03D8")]
			set
			{
			}
		}

		[Token(Token = "0x170004C4")]
		public GizmoRATriangle3DBorderType RATriangleBorderType
		{
			[Token(Token = "0x6001C41")]
			[Address(RVA = "0x10F03E0", Offset = "0x10F03E0", VA = "0x10F03E0")]
			get
			{
				return default(GizmoRATriangle3DBorderType);
			}
			[Token(Token = "0x6001C42")]
			[Address(RVA = "0x10F03E8", Offset = "0x10F03E8", VA = "0x10F03E8")]
			set
			{
			}
		}

		[Token(Token = "0x170004C5")]
		public bool IsRotationArcVisible
		{
			[Token(Token = "0x6001C43")]
			[Address(RVA = "0x10F03F0", Offset = "0x10F03F0", VA = "0x10F03F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C44")]
			[Address(RVA = "0x10F03F8", Offset = "0x10F03F8", VA = "0x10F03F8")]
			set
			{
			}
		}

		[Token(Token = "0x170004C6")]
		public GizmoRotationArc3DLookAndFeel RotationArcLookAndFeel
		{
			[Token(Token = "0x6001C45")]
			[Address(RVA = "0x10F0404", Offset = "0x10F0404", VA = "0x10F0404")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x10EA58C", Offset = "0x10EA58C", VA = "0x10EA58C")]
		public GizmoPlaneSlider3DLookAndFeel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004B0")]
	public class GizmoPlaneSlider3DSettings
	{
		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float _areaHoverEps;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float _extrudeHoverEps;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _borderLineHoverEps;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _borderBoxHoverEps;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _borderTorusHoverEps;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool _isCircleHoverCullEnabled;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _offsetSnapStepRight;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _offsetSnapStepUp;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _rotationSnapStep;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private GizmoSnapMode _rotationSnapMode;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _scaleSnapStepRight;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _scaleSnapStepUp;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _proportionalScaleSnapStep;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _offsetSensitivity;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _rotationSensitivity;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float _scaleSensitivity;

		[Token(Token = "0x170004C7")]
		public float AreaHoverEps
		{
			[Token(Token = "0x6001C47")]
			[Address(RVA = "0x10F040C", Offset = "0x10F040C", VA = "0x10F040C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C48")]
			[Address(RVA = "0x10F0414", Offset = "0x10F0414", VA = "0x10F0414")]
			set
			{
			}
		}

		[Token(Token = "0x170004C8")]
		public float ExtrudeHoverEps
		{
			[Token(Token = "0x6001C49")]
			[Address(RVA = "0x10F0424", Offset = "0x10F0424", VA = "0x10F0424")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0x10F042C", Offset = "0x10F042C", VA = "0x10F042C")]
			set
			{
			}
		}

		[Token(Token = "0x170004C9")]
		public float BorderLineHoverEps
		{
			[Token(Token = "0x6001C4B")]
			[Address(RVA = "0x10F043C", Offset = "0x10F043C", VA = "0x10F043C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0x10F0444", Offset = "0x10F0444", VA = "0x10F0444")]
			set
			{
			}
		}

		[Token(Token = "0x170004CA")]
		public float BorderBoxHoverEps
		{
			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0x10F0454", Offset = "0x10F0454", VA = "0x10F0454")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0x10F045C", Offset = "0x10F045C", VA = "0x10F045C")]
			set
			{
			}
		}

		[Token(Token = "0x170004CB")]
		public float BorderTorusHoverEps
		{
			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0x10F046C", Offset = "0x10F046C", VA = "0x10F046C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C50")]
			[Address(RVA = "0x10F0474", Offset = "0x10F0474", VA = "0x10F0474")]
			set
			{
			}
		}

		[Token(Token = "0x170004CC")]
		public bool IsCircleHoverCullEnabled
		{
			[Token(Token = "0x6001C51")]
			[Address(RVA = "0x10F0484", Offset = "0x10F0484", VA = "0x10F0484")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C52")]
			[Address(RVA = "0x10F048C", Offset = "0x10F048C", VA = "0x10F048C")]
			set
			{
			}
		}

		[Token(Token = "0x170004CD")]
		public float OffsetSnapStepRight
		{
			[Token(Token = "0x6001C53")]
			[Address(RVA = "0x10F0498", Offset = "0x10F0498", VA = "0x10F0498")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C54")]
			[Address(RVA = "0x10F04A0", Offset = "0x10F04A0", VA = "0x10F04A0")]
			set
			{
			}
		}

		[Token(Token = "0x170004CE")]
		public float OffsetSnapStepUp
		{
			[Token(Token = "0x6001C55")]
			[Address(RVA = "0x10F04B4", Offset = "0x10F04B4", VA = "0x10F04B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C56")]
			[Address(RVA = "0x10F04BC", Offset = "0x10F04BC", VA = "0x10F04BC")]
			set
			{
			}
		}

		[Token(Token = "0x170004CF")]
		public float RotationSnapStep
		{
			[Token(Token = "0x6001C57")]
			[Address(RVA = "0x10F04D0", Offset = "0x10F04D0", VA = "0x10F04D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C58")]
			[Address(RVA = "0x10F04D8", Offset = "0x10F04D8", VA = "0x10F04D8")]
			set
			{
			}
		}

		[Token(Token = "0x170004D0")]
		public GizmoSnapMode RotationSnapMode
		{
			[Token(Token = "0x6001C59")]
			[Address(RVA = "0x10F04EC", Offset = "0x10F04EC", VA = "0x10F04EC")]
			get
			{
				return default(GizmoSnapMode);
			}
			[Token(Token = "0x6001C5A")]
			[Address(RVA = "0x10F04F4", Offset = "0x10F04F4", VA = "0x10F04F4")]
			set
			{
			}
		}

		[Token(Token = "0x170004D1")]
		public float ScaleSnapStepRight
		{
			[Token(Token = "0x6001C5B")]
			[Address(RVA = "0x10F04FC", Offset = "0x10F04FC", VA = "0x10F04FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0x10F0504", Offset = "0x10F0504", VA = "0x10F0504")]
			set
			{
			}
		}

		[Token(Token = "0x170004D2")]
		public float ScaleSnapStepUp
		{
			[Token(Token = "0x6001C5D")]
			[Address(RVA = "0x10F0518", Offset = "0x10F0518", VA = "0x10F0518")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0x10F0520", Offset = "0x10F0520", VA = "0x10F0520")]
			set
			{
			}
		}

		[Token(Token = "0x170004D3")]
		public float ProportionalScaleSnapStep
		{
			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0x10F0534", Offset = "0x10F0534", VA = "0x10F0534")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C60")]
			[Address(RVA = "0x10F053C", Offset = "0x10F053C", VA = "0x10F053C")]
			set
			{
			}
		}

		[Token(Token = "0x170004D4")]
		public float OffsetSensitivity
		{
			[Token(Token = "0x6001C61")]
			[Address(RVA = "0x10F0550", Offset = "0x10F0550", VA = "0x10F0550")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C62")]
			[Address(RVA = "0x10F0558", Offset = "0x10F0558", VA = "0x10F0558")]
			set
			{
			}
		}

		[Token(Token = "0x170004D5")]
		public float RotationSensitivity
		{
			[Token(Token = "0x6001C63")]
			[Address(RVA = "0x10F056C", Offset = "0x10F056C", VA = "0x10F056C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C64")]
			[Address(RVA = "0x10F0574", Offset = "0x10F0574", VA = "0x10F0574")]
			set
			{
			}
		}

		[Token(Token = "0x170004D6")]
		public float ScaleSensitivity
		{
			[Token(Token = "0x6001C65")]
			[Address(RVA = "0x10F0588", Offset = "0x10F0588", VA = "0x10F0588")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001C66")]
			[Address(RVA = "0x10F0590", Offset = "0x10F0590", VA = "0x10F0590")]
			set
			{
			}
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x10EA540", Offset = "0x10EA540", VA = "0x10EA540")]
		public GizmoPlaneSlider3DSettings()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	public enum GizmoQuad3DBorderType
	{
		[Token(Token = "0x4001646")]
		Thin,
		[Token(Token = "0x4001647")]
		Box
	}
	[Token(Token = "0x20004B2")]
	public class GizmoQuadPlaneSlider3DController : GizmoPlaneSlider3DController
	{
		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x10EBABC", Offset = "0x10EBABC", VA = "0x10EBABC")]
		public GizmoQuadPlaneSlider3DController(GizmoPlaneSlider3DControllerData controllerData)
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x10F05A4", Offset = "0x10F05A4", VA = "0x10F05A4", Slot = "7")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x10F066C", Offset = "0x10F066C", VA = "0x10F066C", Slot = "9")]
		public override void UpdateEpsilons(float zoomFactor)
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x10F0724", Offset = "0x10F0724", VA = "0x10F0724", Slot = "8")]
		public override void UpdateTransforms(float zoomFactor)
		{
		}
	}
	[Token(Token = "0x20004B3")]
	public enum GizmoRATriangle3DBorderType
	{
		[Token(Token = "0x4001649")]
		Thin
	}
	[Token(Token = "0x20004B4")]
	public class GizmoRATrianglePlaneSlider3DController : GizmoPlaneSlider3DController
	{
		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x10EBAEC", Offset = "0x10EBAEC", VA = "0x10EBAEC")]
		public GizmoRATrianglePlaneSlider3DController(GizmoPlaneSlider3DControllerData controllerData)
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x10F08C4", Offset = "0x10F08C4", VA = "0x10F08C4", Slot = "7")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x10F098C", Offset = "0x10F098C", VA = "0x10F098C", Slot = "9")]
		public override void UpdateEpsilons(float zoomFactor)
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x10F0A30", Offset = "0x10F0A30", VA = "0x10F0A30", Slot = "8")]
		public override void UpdateTransforms(float zoomFactor)
		{
		}
	}
	[Token(Token = "0x20004B5")]
	public interface IGizmoPlaneSlider3DController
	{
		[Token(Token = "0x6001C70")]
		void UpdateHandles();

		[Token(Token = "0x6001C71")]
		void UpdateTransforms(float zoomFactor);

		[Token(Token = "0x6001C72")]
		void UpdateEpsilons(float zoomFactor);
	}
	[Token(Token = "0x20004B6")]
	public class GizmoCircle2DBorder
	{
		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GizmoPlaneSlider2D _planeSlider;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GizmoHandle _targetHandle;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CircleShape2D _targetCircle;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isVisible;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _isHoverable;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _borderCircleIndex;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CircleShape2D _borderCircle;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GizmoCircle2DBorderControllerData _controllerData;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IGizmoCircle2DBorderController[] _controllers;

		[Token(Token = "0x170004D7")]
		public bool IsVisible
		{
			[Token(Token = "0x6001C73")]
			[Address(RVA = "0x10F0C0C", Offset = "0x10F0C0C", VA = "0x10F0C0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004D8")]
		public bool IsHoverable
		{
			[Token(Token = "0x6001C74")]
			[Address(RVA = "0x10F0C14", Offset = "0x10F0C14", VA = "0x10F0C14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x10F0C1C", Offset = "0x10F0C1C", VA = "0x10F0C1C")]
		public GizmoCircle2DBorder(GizmoPlaneSlider2D planeSlider, GizmoHandle targetHandle, CircleShape2D targetCircle)
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x10F0FD4", Offset = "0x10F0FD4", VA = "0x10F0FD4")]
		public void SetVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x10F1238", Offset = "0x10F1238", VA = "0x10F1238")]
		public void SetHoverable(bool isHoverable)
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x10F1160", Offset = "0x10F1160", VA = "0x10F1160")]
		public void OnCircleShapeChanged()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x10F1264", Offset = "0x10F1264", VA = "0x10F1264")]
		public void Render(Camera camera)
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x10F1414", Offset = "0x10F1414", VA = "0x10F1414")]
		private void OnGizmoPreUpdateBegin(Gizmo gizmo)
		{
		}
	}
	[Token(Token = "0x20004B7")]
	public abstract class GizmoCircle2DBorderController : IGizmoCircle2DBorderController
	{
		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected GizmoCircle2DBorderControllerData _data;

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x10F157C", Offset = "0x10F157C", VA = "0x10F157C")]
		public GizmoCircle2DBorderController(GizmoCircle2DBorderControllerData data)
		{
		}

		[Token(Token = "0x6001C7C")]
		public abstract void UpdateHandles();

		[Token(Token = "0x6001C7D")]
		public abstract void UpdateEpsilons();

		[Token(Token = "0x6001C7E")]
		public abstract void UpdateTransforms();
	}
	[Token(Token = "0x20004B8")]
	public class GizmoCircle2DBorderControllerData
	{
		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gizmo Gizmo;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GizmoPlaneSlider2D PlaneSlider;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GizmoCircle2DBorder Border;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GizmoHandle TargetHandle;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CircleShape2D TargetCircle;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CircleShape2D BorderCircle;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int BorderCircleIndex;

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x10F0F9C", Offset = "0x10F0F9C", VA = "0x10F0F9C")]
		public GizmoCircle2DBorderControllerData()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	public class GizmoThinCircle2DBorderController : GizmoCircle2DBorderController
	{
		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x10F0FA4", Offset = "0x10F0FA4", VA = "0x10F0FA4")]
		public GizmoThinCircle2DBorderController(GizmoCircle2DBorderControllerData data)
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x10F15AC", Offset = "0x10F15AC", VA = "0x10F15AC", Slot = "7")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x10F15E0", Offset = "0x10F15E0", VA = "0x10F15E0", Slot = "8")]
		public override void UpdateEpsilons()
		{
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x10F1620", Offset = "0x10F1620", VA = "0x10F1620", Slot = "9")]
		public override void UpdateTransforms()
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public interface IGizmoCircle2DBorderController
	{
		[Token(Token = "0x6001C84")]
		void UpdateHandles();

		[Token(Token = "0x6001C85")]
		void UpdateEpsilons();

		[Token(Token = "0x6001C86")]
		void UpdateTransforms();
	}
	[Token(Token = "0x20004BB")]
	public class GizmoPolygon2DBorder
	{
		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GizmoPlaneSlider2D _planeSlider;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GizmoHandle _targetHandle;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PolygonShape2D _targetPolygon;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isVisible;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _isHoverable;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _borderPolygonIndex;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _thickBorderPolygonIndex;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PolygonShape2D _borderPolygon;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PolygonShape2D _thickBorderPolygon;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GizmoPolygon2DBorderControllerData _controllerData;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IGizmoPolygon2DBorderController[] _controllers;

		[Token(Token = "0x170004D9")]
		public bool IsVisible
		{
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0x10F1660", Offset = "0x10F1660", VA = "0x10F1660")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004DA")]
		public bool IsHoverable
		{
			[Token(Token = "0x6001C88")]
			[Address(RVA = "0x10F1668", Offset = "0x10F1668", VA = "0x10F1668")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x10F1670", Offset = "0x10F1670", VA = "0x10F1670")]
		public GizmoPolygon2DBorder(GizmoPlaneSlider2D planeSlider, GizmoHandle targetHandle, PolygonShape2D targetPolygon)
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x10F1B4C", Offset = "0x10F1B4C", VA = "0x10F1B4C")]
		public void SetVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x10F1DB0", Offset = "0x10F1DB0", VA = "0x10F1DB0")]
		public void SetHoverable(bool isHoverable)
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x10F1CD8", Offset = "0x10F1CD8", VA = "0x10F1CD8")]
		public void OnPolygonShapeChanged()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x10F1E00", Offset = "0x10F1E00", VA = "0x10F1E00")]
		public void Render(Camera camera)
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x10F1FFC", Offset = "0x10F1FFC", VA = "0x10F1FFC")]
		private void OnGizmoPreUpdateBegin(Gizmo gizmo)
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public abstract class GizmoPolygon2DBorderController : IGizmoPolygon2DBorderController
	{
		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected GizmoPolygon2DBorderControllerData _data;

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x10F2164", Offset = "0x10F2164", VA = "0x10F2164")]
		public GizmoPolygon2DBorderController(GizmoPolygon2DBorderControllerData data)
		{
		}

		[Token(Token = "0x6001C90")]
		public abstract void UpdateHandles();

		[Token(Token = "0x6001C91")]
		public abstract void UpdateEpsilons();

		[Token(Token = "0x6001C92")]
		public abstract void UpdateTransforms();
	}
	[Token(Token = "0x20004BD")]
	public class GizmoPolygon2DBorderControllerData
	{
		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gizmo Gizmo;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GizmoPlaneSlider2D PlaneSlider;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GizmoPolygon2DBorder Border;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GizmoHandle TargetHandle;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PolygonShape2D TargetPolygon;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PolygonShape2D BorderPolygon;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PolygonShape2D ThickBorderPolygon;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int BorderPolygonIndex;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int ThickBorderPolygonIndex;

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x10F1AE4", Offset = "0x10F1AE4", VA = "0x10F1AE4")]
		public GizmoPolygon2DBorderControllerData()
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class GizmoThickPolygon2DBorderController : GizmoPolygon2DBorderController
	{
		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x10F1B1C", Offset = "0x10F1B1C", VA = "0x10F1B1C")]
		public GizmoThickPolygon2DBorderController(GizmoPolygon2DBorderControllerData data)
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x10F2194", Offset = "0x10F2194", VA = "0x10F2194", Slot = "7")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x10F21EC", Offset = "0x10F21EC", VA = "0x10F21EC", Slot = "8")]
		public override void UpdateEpsilons()
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x10F222C", Offset = "0x10F222C", VA = "0x10F222C", Slot = "9")]
		public override void UpdateTransforms()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	public class GizmoThinPolygon2DBorderController : GizmoPolygon2DBorderController
	{
		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x10F1AEC", Offset = "0x10F1AEC", VA = "0x10F1AEC")]
		public GizmoThinPolygon2DBorderController(GizmoPolygon2DBorderControllerData data)
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x10F229C", Offset = "0x10F229C", VA = "0x10F229C", Slot = "7")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x10F22F4", Offset = "0x10F22F4", VA = "0x10F22F4", Slot = "8")]
		public override void UpdateEpsilons()
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x10F2334", Offset = "0x10F2334", VA = "0x10F2334", Slot = "9")]
		public override void UpdateTransforms()
		{
		}
	}
	[Token(Token = "0x20004C0")]
	public interface IGizmoPolygon2DBorderController
	{
		[Token(Token = "0x6001C9C")]
		void UpdateHandles();

		[Token(Token = "0x6001C9D")]
		void UpdateEpsilons();

		[Token(Token = "0x6001C9E")]
		void UpdateTransforms();
	}
	[Token(Token = "0x20004C1")]
	public class GizmoQuad2DBorder
	{
		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GizmoPlaneSlider2D _planeSlider;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GizmoHandle _targetHandle;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private QuadShape2D _targetQuad;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isVisible;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _isHoverable;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _borderQuadIndex;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private QuadShape2D _borderQuad;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GizmoQuad2DBorderControllerData _controllerData;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IGizmoQuad2DBorderController[] _controllers;

		[Token(Token = "0x170004DB")]
		public bool IsVisible
		{
			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0x10F235C", Offset = "0x10F235C", VA = "0x10F235C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004DC")]
		public bool IsHoverable
		{
			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0x10F2364", Offset = "0x10F2364", VA = "0x10F2364")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x10F236C", Offset = "0x10F236C", VA = "0x10F236C")]
		public GizmoQuad2DBorder(GizmoPlaneSlider2D planeSlider, GizmoHandle targetHandle, QuadShape2D targetQuad)
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x10F2724", Offset = "0x10F2724", VA = "0x10F2724")]
		public void SetVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x10F2988", Offset = "0x10F2988", VA = "0x10F2988")]
		public void SetHoverable(bool isHoverable)
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x10F28B0", Offset = "0x10F28B0", VA = "0x10F28B0")]
		public void OnQuadShapeChanged()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x10F29B4", Offset = "0x10F29B4", VA = "0x10F29B4")]
		public void Render(Camera camera)
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x10F2B64", Offset = "0x10F2B64", VA = "0x10F2B64")]
		private void OnGizmoPreUpdateBegin(Gizmo gizmo)
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public abstract class GizmoQuad2DBorderController : IGizmoQuad2DBorderController
	{
		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected GizmoQuad2DBorderControllerData _data;

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x10F2CCC", Offset = "0x10F2CCC", VA = "0x10F2CCC")]
		public GizmoQuad2DBorderController(GizmoQuad2DBorderControllerData data)
		{
		}

		[Token(Token = "0x6001CA8")]
		public abstract void UpdateHandles();

		[Token(Token = "0x6001CA9")]
		public abstract void UpdateEpsilons();

		[Token(Token = "0x6001CAA")]
		public abstract void UpdateTransforms();
	}
	[Token(Token = "0x20004C3")]
	public class GizmoQuad2DBorderControllerData
	{
		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gizmo Gizmo;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GizmoPlaneSlider2D PlaneSlider;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GizmoQuad2DBorder Border;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GizmoHandle TargetHandle;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public QuadShape2D TargetQuad;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public QuadShape2D BorderQuad;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int BorderQuadIndex;

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x10F26EC", Offset = "0x10F26EC", VA = "0x10F26EC")]
		public GizmoQuad2DBorderControllerData()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public class GizmoThinQuad2DBorderController : GizmoQuad2DBorderController
	{
		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x10F26F4", Offset = "0x10F26F4", VA = "0x10F26F4")]
		public GizmoThinQuad2DBorderController(GizmoQuad2DBorderControllerData data)
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x10F2CFC", Offset = "0x10F2CFC", VA = "0x10F2CFC", Slot = "7")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x10F2D30", Offset = "0x10F2D30", VA = "0x10F2D30", Slot = "8")]
		public override void UpdateEpsilons()
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x10F2D70", Offset = "0x10F2D70", VA = "0x10F2D70", Slot = "9")]
		public override void UpdateTransforms()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	public interface IGizmoQuad2DBorderController
	{
		[Token(Token = "0x6001CB0")]
		void UpdateHandles();

		[Token(Token = "0x6001CB1")]
		void UpdateEpsilons();

		[Token(Token = "0x6001CB2")]
		void UpdateTransforms();
	}
	[Token(Token = "0x20004C6")]
	public class GizmoCircle3DBorder
	{
		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GizmoPlaneSlider3D _planeSlider;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GizmoHandle _targetHandle;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CircleShape3D _targetCircle;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isVisible;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _isHoverable;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _borderCircleIndex;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _borderTorusIndex;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _borderCylTorusIndex;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CircleShape3D _borderCircle;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TorusShape3D _borderTorus;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CylTorusShape3D _borderCylTorus;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GizmoCircle3DBorderControllerData _controllerData;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IGizmoCircle3DBorderController[] _controllers;

		[Token(Token = "0x170004DD")]
		public bool IsVisible
		{
			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0x10F2DC4", Offset = "0x10F2DC4", VA = "0x10F2DC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004DE")]
		public bool IsHoverable
		{
			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0x10F2DCC", Offset = "0x10F2DCC", VA = "0x10F2DCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004DF")]
		public Gizmo Gizmo
		{
			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0x10F2DD4", Offset = "0x10F2DD4", VA = "0x10F2DD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x10EB53C", Offset = "0x10EB53C", VA = "0x10EB53C")]
		public GizmoCircle3DBorder(GizmoPlaneSlider3D planeSlider, GizmoHandle targetHandle, CircleShape3D targetCircle)
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x10E91F4", Offset = "0x10E91F4", VA = "0x10E91F4")]
		public void SetVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x10EBECC", Offset = "0x10EBECC", VA = "0x10EBECC")]
		public void SetHoverable(bool isHoverable)
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x10F2E88", Offset = "0x10F2E88", VA = "0x10F2E88")]
		public float GetZoomFactor(Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x10F2EA0", Offset = "0x10F2EA0", VA = "0x10F2EA0")]
		public float GetRealTorusThickness(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x10F2EE4", Offset = "0x10F2EE4", VA = "0x10F2EE4")]
		public float GetRealCylTorusWidth(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x10F2F28", Offset = "0x10F2F28", VA = "0x10F2F28")]
		public float GetRealCylTorusHeight(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x10E9624", Offset = "0x10E9624", VA = "0x10E9624")]
		public void OnCircleShapeChanged()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x10ED7D4", Offset = "0x10ED7D4", VA = "0x10ED7D4")]
		public void Render(Camera camera)
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x10F2FFC", Offset = "0x10F2FFC", VA = "0x10F2FFC")]
		private void OnGizmoPreUpdateBegin(Gizmo gizmo)
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public abstract class GizmoCircle3DBorderController : IGizmoCircle3DBorderController
	{
		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected GizmoCircle3DBorderControllerData _data;

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x10F31C0", Offset = "0x10F31C0", VA = "0x10F31C0")]
		public GizmoCircle3DBorderController(GizmoCircle3DBorderControllerData controllerData)
		{
		}

		[Token(Token = "0x6001CC1")]
		public abstract void UpdateHandles();

		[Token(Token = "0x6001CC2")]
		public abstract void UpdateEpsilons(float zoomFactor);

		[Token(Token = "0x6001CC3")]
		public abstract void UpdateTransforms(float zoomFactor);
	}
	[Token(Token = "0x20004C8")]
	public class GizmoCircle3DBorderControllerData
	{
		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gizmo Gizmo;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GizmoPlaneSlider3D PlaneSlider;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GizmoCircle3DBorder Border;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GizmoHandle TargetHandle;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CircleShape3D TargetCircle;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CircleShape3D BorderCircle;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TorusShape3D BorderTorus;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CylTorusShape3D BorderCylTorus;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int BorderCircleIndex;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int BorderTorusIndex;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int BorderCylTorusIndex;

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x10F2DF0", Offset = "0x10F2DF0", VA = "0x10F2DF0")]
		public GizmoCircle3DBorderControllerData()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	public class GizmoCylindricalTorusCircle3DBorderController : GizmoCircle3DBorderController
	{
		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x10F2E58", Offset = "0x10F2E58", VA = "0x10F2E58")]
		public GizmoCylindricalTorusCircle3DBorderController(GizmoCircle3DBorderControllerData controllerData)
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x10F31F0", Offset = "0x10F31F0", VA = "0x10F31F0", Slot = "7")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x10F3268", Offset = "0x10F3268", VA = "0x10F3268", Slot = "8")]
		public override void UpdateEpsilons(float zoomFactor)
		{
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x10F32E4", Offset = "0x10F32E4", VA = "0x10F32E4", Slot = "9")]
		public override void UpdateTransforms(float zoomFactor)
		{
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x10F2FB4", Offset = "0x10F2FB4", VA = "0x10F2FB4")]
		public float GetTorusCoreRadius(float zoomFactor)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20004CA")]
	public class GizmoThinCircle3DBorderController : GizmoCircle3DBorderController
	{
		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x10F2DF8", Offset = "0x10F2DF8", VA = "0x10F2DF8")]
		public GizmoThinCircle3DBorderController(GizmoCircle3DBorderControllerData controllerData)
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x10F3444", Offset = "0x10F3444", VA = "0x10F3444", Slot = "7")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x10F34BC", Offset = "0x10F34BC", VA = "0x10F34BC", Slot = "8")]
		public override void UpdateEpsilons(float zoomFactor)
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x10F3538", Offset = "0x10F3538", VA = "0x10F3538", Slot = "9")]
		public override void UpdateTransforms(float zoomFactor)
		{
		}
	}
	[Token(Token = "0x20004CB")]
	public class GizmoTorusCircle3DBorderController : GizmoCircle3DBorderController
	{
		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x10F2E28", Offset = "0x10F2E28", VA = "0x10F2E28")]
		public GizmoTorusCircle3DBorderController(GizmoCircle3DBorderControllerData controllerData)
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x10F3580", Offset = "0x10F3580", VA = "0x10F3580", Slot = "7")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x10F35F8", Offset = "0x10F35F8", VA = "0x10F35F8", Slot = "8")]
		public override void UpdateEpsilons(float zoomFactor)
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x10F3648", Offset = "0x10F3648", VA = "0x10F3648", Slot = "9")]
		public override void UpdateTransforms(float zoomFactor)
		{
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x10F2F6C", Offset = "0x10F2F6C", VA = "0x10F2F6C")]
		public float GetTorusCoreRadius(float zoomFactor)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20004CC")]
	public interface IGizmoCircle3DBorderController
	{
		[Token(Token = "0x6001CD3")]
		void UpdateHandles();

		[Token(Token = "0x6001CD4")]
		void UpdateEpsilons(float zoomFactor);

		[Token(Token = "0x6001CD5")]
		void UpdateTransforms(float zoomFactor);
	}
	[Token(Token = "0x20004CD")]
	public class GizmoBoxQuad3DBorderController : GizmoQuad3DBorderController
	{
		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x10F3778", Offset = "0x10F3778", VA = "0x10F3778")]
		public GizmoBoxQuad3DBorderController(GizmoQuad3DBorderControllerData data)
		{
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x10F37D8", Offset = "0x10F37D8", VA = "0x10F37D8", Slot = "7")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x10F39D0", Offset = "0x10F39D0", VA = "0x10F39D0", Slot = "8")]
		public override void UpdateEpsilons(float zoomFactor)
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x10F3B4C", Offset = "0x10F3B4C", VA = "0x10F3B4C", Slot = "9")]
		public override void UpdateTransforms(float zoomFactor)
		{
		}
	}
	[Token(Token = "0x20004CE")]
	public class GizmoQuad3DBorder
	{
		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GizmoPlaneSlider3D _planeSlider;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GizmoHandle _targetHandle;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private QuadShape3D _targetQuad;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isVisible;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _isHoverable;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _borderQuadIndex;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private QuadShape3D _borderQuad;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int _topBoxIndex;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoxShape3D _topBox;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _rightBoxIndex;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BoxShape3D _rightBox;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _bottomBoxIndex;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoxShape3D _bottomBox;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _leftBoxIndex;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BoxShape3D _leftBox;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _topLeftBoxIndex;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BoxShape3D _topLeftBox;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _topRightBoxIndex;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private BoxShape3D _topRightBox;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _bottomRightBoxIndex;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BoxShape3D _bottomRightBox;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int _bottomLeftBoxIndex;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private BoxShape3D _bottomLeftBox;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<int> _sortedBoxIndices;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GizmoQuad3DBorderControllerData _controllerData;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private IGizmoQuad3DBorderController[] _controllers;

		[Token(Token = "0x170004E0")]
		public bool IsVisible
		{
			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0x10F4388", Offset = "0x10F4388", VA = "0x10F4388")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E1")]
		public bool IsHoverable
		{
			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0x10F4390", Offset = "0x10F4390", VA = "0x10F4390")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E2")]
		public Gizmo Gizmo
		{
			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0x10F4398", Offset = "0x10F4398", VA = "0x10F4398")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x10EA6F4", Offset = "0x10EA6F4", VA = "0x10EA6F4")]
		public GizmoQuad3DBorder(GizmoPlaneSlider3D planeSlider, GizmoHandle targetHandle, QuadShape3D targetQuad)
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x10E8E1C", Offset = "0x10E8E1C", VA = "0x10E8E1C")]
		public void SetVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x10EBD20", Offset = "0x10EBD20", VA = "0x10EBD20")]
		public void SetHoverable(bool isHoverable)
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x10F43EC", Offset = "0x10F43EC", VA = "0x10F43EC")]
		public float GetZoomFactor(Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x10F4300", Offset = "0x10F4300", VA = "0x10F4300")]
		public float GetRealBoxHeight(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x10F4344", Offset = "0x10F4344", VA = "0x10F4344")]
		public float GetRealBoxDepth(float zoomFactor)
		{
			return default(float);
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x10F07A0", Offset = "0x10F07A0", VA = "0x10F07A0")]
		public void OnQuadShapeChanged()
		{
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x10ED048", Offset = "0x10ED048", VA = "0x10ED048")]
		public void Render(Camera camera)
		{
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x10F440C", Offset = "0x10F440C", VA = "0x10F440C")]
		private void OnGizmoPreUpdateBegin(Gizmo gizmo)
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public abstract class GizmoQuad3DBorderController : IGizmoQuad3DBorderController
	{
		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected GizmoQuad3DBorderControllerData _data;

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x10F37A8", Offset = "0x10F37A8", VA = "0x10F37A8")]
		public GizmoQuad3DBorderController(GizmoQuad3DBorderControllerData data)
		{
		}

		[Token(Token = "0x6001CE9")]
		public abstract void UpdateHandles();

		[Token(Token = "0x6001CEA")]
		public abstract void UpdateEpsilons(float zoomFactor);

		[Token(Token = "0x6001CEB")]
		public abstract void UpdateTransforms(float zoomFactor);
	}
	[Token(Token = "0x20004D1")]
	public class GizmoQuad3DBorderControllerData
	{
		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gizmo Gizmo;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GizmoPlaneSlider3D PlaneSlider;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GizmoQuad3DBorder Border;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GizmoHandle TargetHandle;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public QuadShape3D TargetQuad;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public QuadShape3D BorderQuad;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BoxShape3D TopBox;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BoxShape3D RightBox;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BoxShape3D BottomBox;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BoxShape3D LeftBox;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BoxShape3D TopLeftBox;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BoxShape3D TopRightBox;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BoxShape3D BottomRightBox;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BoxShape3D BottomLeftBox;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int BorderQuadIndex;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int TopBoxIndex;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int RightBoxIndex;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int BottomBoxIndex;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int LeftBoxIndex;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int TopLeftBoxIndex;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int TopRightBoxIndex;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int BottomRightBoxIndex;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public int BottomLeftBoxIndex;

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x10F43B4", Offset = "0x10F43B4", VA = "0x10F43B4")]
		public GizmoQuad3DBorderControllerData()
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public class GizmoThinQuad3DBorderController : GizmoQuad3DBorderController
	{
		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x10F43BC", Offset = "0x10F43BC", VA = "0x10F43BC")]
		public GizmoThinQuad3DBorderController(GizmoQuad3DBorderControllerData data)
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x10F4734", Offset = "0x10F4734", VA = "0x10F4734", Slot = "7")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x10F4858", Offset = "0x10F4858", VA = "0x10F4858", Slot = "8")]
		public override void UpdateEpsilons(float zoomFactor)
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x10F48C4", Offset = "0x10F48C4", VA = "0x10F48C4", Slot = "9")]
		public override void UpdateTransforms(float zoomFactor)
		{
		}
	}
	[Token(Token = "0x20004D3")]
	public interface IGizmoQuad3DBorderController
	{
		[Token(Token = "0x6001CF1")]
		void UpdateHandles();

		[Token(Token = "0x6001CF2")]
		void UpdateEpsilons(float zoomFactor);

		[Token(Token = "0x6001CF3")]
		void UpdateTransforms(float zoomFactor);
	}
	[Token(Token = "0x20004D4")]
	public class GizmoRATriangle3DBorder
	{
		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GizmoPlaneSlider3D _planeSlider;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GizmoHandle _targetHandle;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RightAngTriangle3D _targetTriangle;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isVisible;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _isHoverable;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int _borderTriangleIndex;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RightAngTriangle3D _borderTriangle;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GizmoRATriangle3DBorderControllerData _controllerData;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IGizmoRATriangle3DBorderController[] _controllers;

		[Token(Token = "0x170004E3")]
		public bool IsVisible
		{
			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0x10F490C", Offset = "0x10F490C", VA = "0x10F490C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E4")]
		public bool IsHoverable
		{
			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0x10F4914", Offset = "0x10F4914", VA = "0x10F4914")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004E5")]
		public Gizmo Gizmo
		{
			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0x10F491C", Offset = "0x10F491C", VA = "0x10F491C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0x10EB1B8", Offset = "0x10EB1B8", VA = "0x10EB1B8")]
		public GizmoRATriangle3DBorder(GizmoPlaneSlider3D planeSlider, GizmoHandle targetHandle, RightAngTriangle3D targetRiangle)
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x10E9008", Offset = "0x10E9008", VA = "0x10E9008")]
		public void SetVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x10EBEA0", Offset = "0x10EBEA0", VA = "0x10EBEA0")]
		public void SetHoverable(bool isHoverable)
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x10F4970", Offset = "0x10F4970", VA = "0x10F4970")]
		public float GetZoomFactor(Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x10F0AE8", Offset = "0x10F0AE8", VA = "0x10F0AE8")]
		public void OnTriangleShapeChanged()
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x10ED5E4", Offset = "0x10ED5E4", VA = "0x10ED5E4")]
		public void Render(Camera camera)
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x10F4988", Offset = "0x10F4988", VA = "0x10F4988")]
		private void OnGizmoPreUpdateBegin(Gizmo gizmo)
		{
		}
	}
	[Token(Token = "0x20004D5")]
	public abstract class GizmoRATriangle3DBorderController : IGizmoRATriangle3DBorderController
	{
		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected GizmoRATriangle3DBorderControllerData _data;

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x10F4B4C", Offset = "0x10F4B4C", VA = "0x10F4B4C")]
		public GizmoRATriangle3DBorderController(GizmoRATriangle3DBorderControllerData controllerData)
		{
		}

		[Token(Token = "0x6001CFF")]
		public abstract void UpdateHandles();

		[Token(Token = "0x6001D00")]
		public abstract void UpdateEpsilons(float zoomFactor);

		[Token(Token = "0x6001D01")]
		public abstract void UpdateTransforms(float zoomFactor);
	}
	[Token(Token = "0x20004D6")]
	public class GizmoRATriangle3DBorderControllerData
	{
		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Gizmo Gizmo;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GizmoPlaneSlider3D PlaneSlider;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GizmoRATriangle3DBorder Border;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GizmoHandle TargetHandle;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RightAngTriangle3D TargetTriangle;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public RightAngTriangle3D BorderTriangle;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int BorderTriangleIndex;

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x10F4938", Offset = "0x10F4938", VA = "0x10F4938")]
		public GizmoRATriangle3DBorderControllerData()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	public class GizmoThinRATriangle3DBorderController : GizmoRATriangle3DBorderController
	{
		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x10F4940", Offset = "0x10F4940", VA = "0x10F4940")]
		public GizmoThinRATriangle3DBorderController(GizmoRATriangle3DBorderControllerData controllerData)
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x10F4B7C", Offset = "0x10F4B7C", VA = "0x10F4B7C", Slot = "7")]
		public override void UpdateHandles()
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x10F4BB0", Offset = "0x10F4BB0", VA = "0x10F4BB0", Slot = "8")]
		public override void UpdateEpsilons(float zoomFactor)
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x10F4C2C", Offset = "0x10F4C2C", VA = "0x10F4C2C", Slot = "9")]
		public override void UpdateTransforms(float zoomFactor)
		{
		}
	}
	[Token(Token = "0x20004D8")]
	public interface IGizmoRATriangle3DBorderController
	{
		[Token(Token = "0x6001D07")]
		void UpdateHandles();

		[Token(Token = "0x6001D08")]
		void UpdateEpsilons(float zoomFactor);

		[Token(Token = "0x6001D09")]
		void UpdateTransforms(float zoomFactor);
	}
	[Token(Token = "0x20004D9")]
	public class GizmoRotationArc2D
	{
		[Token(Token = "0x20004DA")]
		public enum ArcType
		{
			[Token(Token = "0x40016E4")]
			Standard,
			[Token(Token = "0x40016E5")]
			PolyProjected
		}

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ArcShape2D _arc;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ArcType _type;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PolygonShape2D _projectionPoly;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _numProjectedPoints;

		[Token(Token = "0x170004E6")]
		public float RotationAngle
		{
			[Token(Token = "0x6001D0A")]
			[Address(RVA = "0x10F4CA4", Offset = "0x10F4CA4", VA = "0x10F4CA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0x10F4CC0", Offset = "0x10F4CC0", VA = "0x10F4CC0")]
			set
			{
			}
		}

		[Token(Token = "0x170004E7")]
		public ArcType Type
		{
			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0x10F4CDC", Offset = "0x10F4CDC", VA = "0x10F4CDC")]
			get
			{
				return default(ArcType);
			}
			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0x10F4CE4", Offset = "0x10F4CE4", VA = "0x10F4CE4")]
			set
			{
			}
		}

		[Token(Token = "0x170004E8")]
		public PolygonShape2D ProjectionPoly
		{
			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0x10F4CEC", Offset = "0x10F4CEC", VA = "0x10F4CEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0x10F4CF4", Offset = "0x10F4CF4", VA = "0x10F4CF4")]
			set
			{
			}
		}

		[Token(Token = "0x170004E9")]
		public int NumProjectedPoints
		{
			[Token(Token = "0x6001D10")]
			[Address(RVA = "0x10F4CFC", Offset = "0x10F4CFC", VA = "0x10F4CFC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D11")]
			[Address(RVA = "0x10F4D04", Offset = "0x10F4D04", VA = "0x10F4D04")]
			set
			{
			}
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x10F4D18", Offset = "0x10F4D18", VA = "0x10F4D18")]
		public void SetArcData(Vector2 arcOrigin, Vector2 arcStart, float radius)
		{
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0x10F4D70", Offset = "0x10F4D70", VA = "0x10F4D70")]
		public void Render(GizmoRotationArc2DLookAndFeel lookAndFeel, Camera camera)
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0x10F5440", Offset = "0x10F5440", VA = "0x10F5440")]
		public GizmoRotationArc2D()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004DB")]
	public class GizmoRotationArc2DLookAndFeel
	{
		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool _useShortestRotation;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private GizmoRotationArcFillFlags _fillFlags;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color _borderColor;

		[Token(Token = "0x170004EA")]
		public bool UseShortestRotation
		{
			[Token(Token = "0x6001D15")]
			[Address(RVA = "0x10F54BC", Offset = "0x10F54BC", VA = "0x10F54BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D16")]
			[Address(RVA = "0x10F54C4", Offset = "0x10F54C4", VA = "0x10F54C4")]
			set
			{
			}
		}

		[Token(Token = "0x170004EB")]
		public GizmoRotationArcFillFlags FillFlags
		{
			[Token(Token = "0x6001D17")]
			[Address(RVA = "0x10F54D0", Offset = "0x10F54D0", VA = "0x10F54D0")]
			get
			{
				return default(GizmoRotationArcFillFlags);
			}
			[Token(Token = "0x6001D18")]
			[Address(RVA = "0x10F54D8", Offset = "0x10F54D8", VA = "0x10F54D8")]
			set
			{
			}
		}

		[Token(Token = "0x170004EC")]
		public Color Color
		{
			[Token(Token = "0x6001D19")]
			[Address(RVA = "0x10F54E0", Offset = "0x10F54E0", VA = "0x10F54E0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0x10F54EC", Offset = "0x10F54EC", VA = "0x10F54EC")]
			set
			{
			}
		}

		[Token(Token = "0x170004ED")]
		public Color BorderColor
		{
			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0x10F54F8", Offset = "0x10F54F8", VA = "0x10F54F8")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001D1C")]
			[Address(RVA = "0x10F5504", Offset = "0x10F5504", VA = "0x10F5504")]
			set
			{
			}
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x10F5510", Offset = "0x10F5510", VA = "0x10F5510")]
		public GizmoRotationArc2DLookAndFeel()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	public class GizmoRotationArc3D
	{
		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ArcShape3D _arc;

		[Token(Token = "0x170004EE")]
		public float RotationAngle
		{
			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0x10F5558", Offset = "0x10F5558", VA = "0x10F5558")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0x10ECDAC", Offset = "0x10ECDAC", VA = "0x10ECDAC")]
			set
			{
			}
		}

		[Token(Token = "0x170004EF")]
		public float Radius
		{
			[Token(Token = "0x6001D20")]
			[Address(RVA = "0x10F5574", Offset = "0x10F5574", VA = "0x10F5574")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D21")]
			[Address(RVA = "0x10ECDC8", Offset = "0x10ECDC8", VA = "0x10ECDC8")]
			set
			{
			}
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x10EEAEC", Offset = "0x10EEAEC", VA = "0x10EEAEC")]
		public void SetArcData(Vector3 rotationAxis, Vector3 arcOrigin, Vector3 arcStart, float radius)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x10ECDE4", Offset = "0x10ECDE4", VA = "0x10ECDE4")]
		public void Render(GizmoRotationArc3DLookAndFeel lookAndFeel)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x10EA4C4", Offset = "0x10EA4C4", VA = "0x10EA4C4")]
		public GizmoRotationArc3D()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004DD")]
	public class GizmoRotationArc3DLookAndFeel
	{
		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool _useShortestRotation;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private GizmoRotationArcFillFlags _fillFlags;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color _borderColor;

		[Token(Token = "0x170004F0")]
		public bool UseShortestRotation
		{
			[Token(Token = "0x6001D25")]
			[Address(RVA = "0x10F5590", Offset = "0x10F5590", VA = "0x10F5590")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D26")]
			[Address(RVA = "0x10F5598", Offset = "0x10F5598", VA = "0x10F5598")]
			set
			{
			}
		}

		[Token(Token = "0x170004F1")]
		public GizmoRotationArcFillFlags FillFlags
		{
			[Token(Token = "0x6001D27")]
			[Address(RVA = "0x10F55A4", Offset = "0x10F55A4", VA = "0x10F55A4")]
			get
			{
				return default(GizmoRotationArcFillFlags);
			}
			[Token(Token = "0x6001D28")]
			[Address(RVA = "0x10F55AC", Offset = "0x10F55AC", VA = "0x10F55AC")]
			set
			{
			}
		}

		[Token(Token = "0x170004F2")]
		public Color Color
		{
			[Token(Token = "0x6001D29")]
			[Address(RVA = "0x10F55B4", Offset = "0x10F55B4", VA = "0x10F55B4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0x10F55C0", Offset = "0x10F55C0", VA = "0x10F55C0")]
			set
			{
			}
		}

		[Token(Token = "0x170004F3")]
		public Color BorderColor
		{
			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0x10F55CC", Offset = "0x10F55CC", VA = "0x10F55CC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001D2C")]
			[Address(RVA = "0x10F55D8", Offset = "0x10F55D8", VA = "0x10F55D8")]
			set
			{
			}
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x10E8948", Offset = "0x10E8948", VA = "0x10E8948")]
		public GizmoRotationArc3DLookAndFeel()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	[Flags]
	public enum GizmoRotationArcFillFlags
	{
		[Token(Token = "0x40016F0")]
		None = 0,
		[Token(Token = "0x40016F1")]
		Area = 1,
		[Token(Token = "0x40016F2")]
		ExtremitiesBorder = 2,
		[Token(Token = "0x40016F3")]
		ArcBorder = 4,
		[Token(Token = "0x40016F4")]
		All = 7
	}
	[Token(Token = "0x20004DF")]
	public abstract class GizmoSlider : IGizmoSlider
	{
		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GizmoHandle _handle;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Gizmo _gizmo;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isVisible;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _isHoverable;

		[Token(Token = "0x170004F4")]
		protected GizmoHandle Handle
		{
			[Token(Token = "0x6001D2E")]
			[Address(RVA = "0x10F55E4", Offset = "0x10F55E4", VA = "0x10F55E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F5")]
		public Gizmo Gizmo
		{
			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0x10F55EC", Offset = "0x10F55EC", VA = "0x10F55EC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004F6")]
		public int HandleId
		{
			[Token(Token = "0x6001D30")]
			[Address(RVA = "0x10E7410", Offset = "0x10E7410", VA = "0x10E7410", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170004F7")]
		public bool IsVisible
		{
			[Token(Token = "0x6001D31")]
			[Address(RVA = "0x10F55F4", Offset = "0x10F55F4", VA = "0x10F55F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004F8")]
		public bool IsHoverable
		{
			[Token(Token = "0x6001D32")]
			[Address(RVA = "0x10F55FC", Offset = "0x10F55FC", VA = "0x10F55FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004F9")]
		public bool IsHovered
		{
			[Token(Token = "0x6001D33")]
			[Address(RVA = "0x10ED010", Offset = "0x10ED010", VA = "0x10ED010")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170004FA")]
		public Priority HoverPriority3D
		{
			[Token(Token = "0x6001D34")]
			[Address(RVA = "0x10E7B50", Offset = "0x10E7B50", VA = "0x10E7B50", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FB")]
		public Priority HoverPriority2D
		{
			[Token(Token = "0x6001D35")]
			[Address(RVA = "0x10F5604", Offset = "0x10F5604", VA = "0x10F5604", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170004FC")]
		public Priority GenericHoverPriority
		{
			[Token(Token = "0x6001D36")]
			[Address(RVA = "0x10F5620", Offset = "0x10F5620", VA = "0x10F5620", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x10EA684", Offset = "0x10EA684", VA = "0x10EA684")]
		public GizmoSlider(Gizmo gizmo, int handleId)
		{
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x10E7FA0", Offset = "0x10E7FA0", VA = "0x10E7FA0", Slot = "10")]
		public void SetVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x10EFDA0", Offset = "0x10EFDA0", VA = "0x10EFDA0", Slot = "9")]
		public void SetHoverable(bool isHoverable)
		{
		}

		[Token(Token = "0x6001D3A")]
		public abstract void SetSnapEnabled(bool isEnabled);

		[Token(Token = "0x6001D3B")]
		public abstract void Render(Camera camera);

		[Token(Token = "0x6001D3C")]
		protected abstract void OnVisibilityStateChanged();

		[Token(Token = "0x6001D3D")]
		protected abstract void OnHoverableStateChanged();
	}
	[Token(Token = "0x20004E0")]
	public interface IGizmoSlider
	{
		[Token(Token = "0x170004FD")]
		Gizmo Gizmo
		{
			[Token(Token = "0x6001D3E")]
			get;
		}

		[Token(Token = "0x170004FE")]
		int HandleId
		{
			[Token(Token = "0x6001D3F")]
			get;
		}

		[Token(Token = "0x170004FF")]
		Priority HoverPriority3D
		{
			[Token(Token = "0x6001D40")]
			get;
		}

		[Token(Token = "0x17000500")]
		Priority HoverPriority2D
		{
			[Token(Token = "0x6001D41")]
			get;
		}

		[Token(Token = "0x17000501")]
		Priority GenericHoverPriority
		{
			[Token(Token = "0x6001D42")]
			get;
		}

		[Token(Token = "0x6001D43")]
		void SetHoverable(bool isHoverable);

		[Token(Token = "0x6001D44")]
		void SetVisible(bool isVisible);

		[Token(Token = "0x6001D45")]
		void SetSnapEnabled(bool isEnabled);

		[Token(Token = "0x6001D46")]
		void Render(Camera camera);
	}
	[Token(Token = "0x20004E1")]
	public enum GizmoObjectTransformPivot
	{
		[Token(Token = "0x40016FA")]
		ObjectGroupCenter,
		[Token(Token = "0x40016FB")]
		ObjectMeshPivot,
		[Token(Token = "0x40016FC")]
		ObjectCenterPivot,
		[Token(Token = "0x40016FD")]
		CustomWorldPivot,
		[Token(Token = "0x40016FE")]
		CustomObjectLocalPivot
	}
	[Serializable]
	[Token(Token = "0x20004E2")]
	public class MoveGizmo : GizmoBehaviour
	{
		[Token(Token = "0x20004E3")]
		public enum VertexSnapState
		{
			[Token(Token = "0x4001724")]
			SelectingPivot,
			[Token(Token = "0x4001725")]
			Snapping,
			[Token(Token = "0x4001726")]
			Inactive
		}

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GizmoLineSlider3D _pXSlider;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GizmoLineSlider3D _pYSlider;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GizmoLineSlider3D _pZSlider;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GizmoLineSlider3D _nXSlider;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GizmoLineSlider3D _nYSlider;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GizmoLineSlider3D _nZSlider;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GizmoLineSlider3DCollection _axesSliders;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GizmoPlaneSlider3D _xySlider;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GizmoPlaneSlider3D _yzSlider;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GizmoPlaneSlider3D _zxSlider;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GizmoPlaneSlider3DCollection _dblSliders;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GizmoCap3D _midCap;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _isVertexSnapEnabled;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GizmoCap2D _vertSnapCap;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GizmoObjectVertexSnapDrag3D _vertexSnapDrag;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _postVSnapPosRestore;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _is2DModeEnabled;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GizmoLineSlider2D _p2DModeXSlider;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GizmoLineSlider2D _p2DModeYSlider;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GizmoLineSlider2D _n2DModeXSlider;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GizmoLineSlider2D _n2DModeYSlider;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GizmoLineSlider2DCollection _2DModeSliders;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GizmoPlaneSlider2D _2DModeDblSlider;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private bool _useSnapEnableHotkey;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		[SerializeField]
		private bool _useVertSnapEnableHotkey;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		[SerializeField]
		private bool _use2DModeEnableHotkey;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private MoveGizmoHotkeys _hotkeys;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private MoveGizmoSettings2D _settings2D;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private MoveGizmoSettings3D _settings3D;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private MoveGizmoLookAndFeel2D _lookAndFeel2D;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private MoveGizmoLookAndFeel3D _lookAndFeel3D;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private MoveGizmoHotkeys _sharedHotkeys;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private MoveGizmoSettings2D _sharedSettings2D;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private MoveGizmoSettings3D _sharedSettings3D;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private MoveGizmoLookAndFeel2D _sharedLookAndFeel2D;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private MoveGizmoLookAndFeel3D _sharedLookAndFeel3D;

		[Token(Token = "0x17000502")]
		public MoveGizmoSettings2D Settings2D
		{
			[Token(Token = "0x6001D47")]
			[Address(RVA = "0x10F563C", Offset = "0x10F563C", VA = "0x10F563C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000503")]
		public MoveGizmoSettings3D Settings3D
		{
			[Token(Token = "0x6001D48")]
			[Address(RVA = "0x10F5658", Offset = "0x10F5658", VA = "0x10F5658")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000504")]
		public MoveGizmoLookAndFeel2D LookAndFeel2D
		{
			[Token(Token = "0x6001D49")]
			[Address(RVA = "0x10F5674", Offset = "0x10F5674", VA = "0x10F5674")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000505")]
		public MoveGizmoLookAndFeel3D LookAndFeel3D
		{
			[Token(Token = "0x6001D4A")]
			[Address(RVA = "0x10F5690", Offset = "0x10F5690", VA = "0x10F5690")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000506")]
		public MoveGizmoHotkeys Hotkeys
		{
			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0x10F56AC", Offset = "0x10F56AC", VA = "0x10F56AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000507")]
		public MoveGizmoSettings2D SharedSettings2D
		{
			[Token(Token = "0x6001D4C")]
			[Address(RVA = "0x10F56C8", Offset = "0x10F56C8", VA = "0x10F56C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0x10F56D0", Offset = "0x10F56D0", VA = "0x10F56D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000508")]
		public MoveGizmoSettings3D SharedSettings3D
		{
			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0x10F59BC", Offset = "0x10F59BC", VA = "0x10F59BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0x10F59C4", Offset = "0x10F59C4", VA = "0x10F59C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000509")]
		public MoveGizmoLookAndFeel2D SharedLookAndFeel2D
		{
			[Token(Token = "0x6001D50")]
			[Address(RVA = "0x10F59E4", Offset = "0x10F59E4", VA = "0x10F59E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D51")]
			[Address(RVA = "0x10F59EC", Offset = "0x10F59EC", VA = "0x10F59EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700050A")]
		public MoveGizmoLookAndFeel3D SharedLookAndFeel3D
		{
			[Token(Token = "0x6001D52")]
			[Address(RVA = "0x10F5CF4", Offset = "0x10F5CF4", VA = "0x10F5CF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D53")]
			[Address(RVA = "0x10F5CFC", Offset = "0x10F5CFC", VA = "0x10F5CFC")]
			set
			{
			}
		}

		[Token(Token = "0x1700050B")]
		public MoveGizmoHotkeys SharedHotkeys
		{
			[Token(Token = "0x6001D54")]
			[Address(RVA = "0x10F5D1C", Offset = "0x10F5D1C", VA = "0x10F5D1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D55")]
			[Address(RVA = "0x10F5D24", Offset = "0x10F5D24", VA = "0x10F5D24")]
			set
			{
			}
		}

		[Token(Token = "0x1700050C")]
		public bool UseSnapEnableHotkey
		{
			[Token(Token = "0x6001D56")]
			[Address(RVA = "0x10F5D34", Offset = "0x10F5D34", VA = "0x10F5D34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D57")]
			[Address(RVA = "0x10F5D3C", Offset = "0x10F5D3C", VA = "0x10F5D3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700050D")]
		public bool UseVertSnapEnableHotkey
		{
			[Token(Token = "0x6001D58")]
			[Address(RVA = "0x10F5D48", Offset = "0x10F5D48", VA = "0x10F5D48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D59")]
			[Address(RVA = "0x10F5D50", Offset = "0x10F5D50", VA = "0x10F5D50")]
			set
			{
			}
		}

		[Token(Token = "0x1700050E")]
		public bool Use2DModeEnableHotkey
		{
			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0x10F5D5C", Offset = "0x10F5D5C", VA = "0x10F5D5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0x10F5D64", Offset = "0x10F5D64", VA = "0x10F5D64")]
			set
			{
			}
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x10F5D70", Offset = "0x10F5D70", VA = "0x10F5D70")]
		public VertexSnapState GetVertexSnapState()
		{
			return default(VertexSnapState);
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x10F5DAC", Offset = "0x10F5DAC", VA = "0x10F5DAC")]
		public float GetZoomFactor(Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x10F5E88", Offset = "0x10F5E88", VA = "0x10F5E88")]
		public float GetZoomFactor(Vector3 position, Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x10F5F50", Offset = "0x10F5F50", VA = "0x10F5F50")]
		public bool OwnsHandle(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x10F6014", Offset = "0x10F6014", VA = "0x10F6014")]
		public void SetAxesLinesHoverable(bool hoverable)
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x10F60D8", Offset = "0x10F60D8", VA = "0x10F60D8")]
		public void SetSnapEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x10F614C", Offset = "0x10F614C", VA = "0x10F614C")]
		public void SetVertexSnapEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x10F61F8", Offset = "0x10F61F8", VA = "0x10F61F8")]
		public void Set2DModeEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x10F6584", Offset = "0x10F6584", VA = "0x10F6584")]
		public void SetVertexSnapTargetObjects(IEnumerable<GameObject> targetObjects)
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x10F65A0", Offset = "0x10F65A0", VA = "0x10F65A0", Slot = "26")]
		public override void OnAttached()
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x10F6FD0", Offset = "0x10F6FD0", VA = "0x10F6FD0", Slot = "27")]
		public override void OnDetached()
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x10F7064", Offset = "0x10F7064", VA = "0x10F7064", Slot = "30")]
		public override void OnEnabled()
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x10F70F8", Offset = "0x10F70F8", VA = "0x10F70F8", Slot = "31")]
		public override void OnDisabled()
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x10F718C", Offset = "0x10F718C", VA = "0x10F718C", Slot = "28")]
		public override void OnGizmoEnabled()
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x10F719C", Offset = "0x10F719C", VA = "0x10F719C", Slot = "40")]
		public override void OnGizmoUpdateBegin()
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x10F7C3C", Offset = "0x10F7C3C", VA = "0x10F7C3C", Slot = "43")]
		public override void OnGizmoRender(Camera camera)
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x10F7F34", Offset = "0x10F7F34", VA = "0x10F7F34", Slot = "36")]
		public override void OnGizmoDragUpdate(int handleId)
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x10F7AC4", Offset = "0x10F7AC4", VA = "0x10F7AC4")]
		private void PlaceDblSlidersInSliderPlanes(Camera camera)
		{
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x10F5A0C", Offset = "0x10F5A0C", VA = "0x10F5A0C")]
		private void SetupSharedLookAndFeel()
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x10F56F0", Offset = "0x10F56F0", VA = "0x10F56F0")]
		private void SetupSharedSettings()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x10F6368", Offset = "0x10F6368", VA = "0x10F6368")]
		private void Update2DGizmoPosition()
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x10F63C8", Offset = "0x10F63C8", VA = "0x10F63C8")]
		private void Update2DModeHandlePositions()
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x10F7FD8", Offset = "0x10F7FD8", VA = "0x10F7FD8")]
		private void OnGizmoTransformChanged(GizmoTransform transform, GizmoTransform.ChangeData changeData)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x10F651C", Offset = "0x10F651C", VA = "0x10F651C")]
		private void Hide2DModeHandles()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x10F7FDC", Offset = "0x10F7FDC", VA = "0x10F7FDC")]
		public MoveGizmo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E4")]
	public class MoveGizmoHotkeys : Settings
	{
		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Hotkeys _enable2DMode;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Hotkeys _enableSnapping;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Hotkeys _enableVertexSnapping;

		[Token(Token = "0x1700050F")]
		public Hotkeys Enable2DMode
		{
			[Token(Token = "0x6001D75")]
			[Address(RVA = "0x10F86FC", Offset = "0x10F86FC", VA = "0x10F86FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000510")]
		public Hotkeys EnableSnapping
		{
			[Token(Token = "0x6001D76")]
			[Address(RVA = "0x10F8704", Offset = "0x10F8704", VA = "0x10F8704")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000511")]
		public Hotkeys EnableVertexSnapping
		{
			[Token(Token = "0x6001D77")]
			[Address(RVA = "0x10F870C", Offset = "0x10F870C", VA = "0x10F870C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x10F823C", Offset = "0x10F823C", VA = "0x10F823C")]
		public MoveGizmoHotkeys()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004E5")]
	public class MoveGizmoLookAndFeel2D : Settings
	{
		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GizmoPlaneSlider2DLookAndFeel _dblSliderLookAndFeel;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GizmoLineSlider2DLookAndFeel[] _sglSliderLookAndFeel;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool _isDblSliderVisible;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool[] _sglSliderVis;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool[] _sglSliderCapVis;

		[Token(Token = "0x17000512")]
		public float Scale
		{
			[Token(Token = "0x6001D79")]
			[Address(RVA = "0x10F8714", Offset = "0x10F8714", VA = "0x10F8714")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000513")]
		public float SliderLength
		{
			[Token(Token = "0x6001D7A")]
			[Address(RVA = "0x10F8744", Offset = "0x10F8744", VA = "0x10F8744")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000514")]
		public float BoxSliderThickness
		{
			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0x10F8774", Offset = "0x10F8774", VA = "0x10F8774")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000515")]
		public float SliderArrowCapHeight
		{
			[Token(Token = "0x6001D7C")]
			[Address(RVA = "0x10F87A4", Offset = "0x10F87A4", VA = "0x10F87A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000516")]
		public float SliderArrowCapBaseRadius
		{
			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0x10F87DC", Offset = "0x10F87DC", VA = "0x10F87DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000517")]
		public float SliderQuadCapWidth
		{
			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0x10F8814", Offset = "0x10F8814", VA = "0x10F8814")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000518")]
		public float SliderQuadCapHeight
		{
			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0x10F884C", Offset = "0x10F884C", VA = "0x10F884C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000519")]
		public float SliderCircleCapRadius
		{
			[Token(Token = "0x6001D80")]
			[Address(RVA = "0x10F8884", Offset = "0x10F8884", VA = "0x10F8884")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700051A")]
		public float DblSliderQuadWidth
		{
			[Token(Token = "0x6001D81")]
			[Address(RVA = "0x10F88BC", Offset = "0x10F88BC", VA = "0x10F88BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700051B")]
		public float DblSliderQuadHeight
		{
			[Token(Token = "0x6001D82")]
			[Address(RVA = "0x10F88D8", Offset = "0x10F88D8", VA = "0x10F88D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700051C")]
		public float DblSliderCircleRadius
		{
			[Token(Token = "0x6001D83")]
			[Address(RVA = "0x10F88F4", Offset = "0x10F88F4", VA = "0x10F88F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700051D")]
		public Color XColor
		{
			[Token(Token = "0x6001D84")]
			[Address(RVA = "0x10F8910", Offset = "0x10F8910", VA = "0x10F8910")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700051E")]
		public Color YColor
		{
			[Token(Token = "0x6001D85")]
			[Address(RVA = "0x10F8988", Offset = "0x10F8988", VA = "0x10F8988")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700051F")]
		public Color XBorderColor
		{
			[Token(Token = "0x6001D86")]
			[Address(RVA = "0x10F89C0", Offset = "0x10F89C0", VA = "0x10F89C0")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000520")]
		public Color YBorderColor
		{
			[Token(Token = "0x6001D87")]
			[Address(RVA = "0x10F89F4", Offset = "0x10F89F4", VA = "0x10F89F4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000521")]
		public Color DblSliderColor
		{
			[Token(Token = "0x6001D88")]
			[Address(RVA = "0x10F8A2C", Offset = "0x10F8A2C", VA = "0x10F8A2C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000522")]
		public Color DblSliderBorderColor
		{
			[Token(Token = "0x6001D89")]
			[Address(RVA = "0x10F8A4C", Offset = "0x10F8A4C", VA = "0x10F8A4C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000523")]
		public Color DblSliderHoveredColor
		{
			[Token(Token = "0x6001D8A")]
			[Address(RVA = "0x10F8A6C", Offset = "0x10F8A6C", VA = "0x10F8A6C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000524")]
		public Color DblSliderHoveredBorderColor
		{
			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0x10F8A8C", Offset = "0x10F8A8C", VA = "0x10F8A8C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000525")]
		public bool IsDblSliderVisible
		{
			[Token(Token = "0x6001D8C")]
			[Address(RVA = "0x10F8AAC", Offset = "0x10F8AAC", VA = "0x10F8AAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000526")]
		public Color SliderHoveredColor
		{
			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0x10F8AB4", Offset = "0x10F8AB4", VA = "0x10F8AB4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000527")]
		public Color SliderHoveredBorderColor
		{
			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0x10F8AE8", Offset = "0x10F8AE8", VA = "0x10F8AE8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000528")]
		public GizmoFillMode2D SliderFillMode
		{
			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0x10F8B1C", Offset = "0x10F8B1C", VA = "0x10F8B1C")]
			get
			{
				return default(GizmoFillMode2D);
			}
		}

		[Token(Token = "0x17000529")]
		public GizmoFillMode2D SliderCapFillMode
		{
			[Token(Token = "0x6001D90")]
			[Address(RVA = "0x10F8B4C", Offset = "0x10F8B4C", VA = "0x10F8B4C")]
			get
			{
				return default(GizmoFillMode2D);
			}
		}

		[Token(Token = "0x1700052A")]
		public GizmoFillMode2D DblSliderFillMode
		{
			[Token(Token = "0x6001D91")]
			[Address(RVA = "0x10F8B84", Offset = "0x10F8B84", VA = "0x10F8B84")]
			get
			{
				return default(GizmoFillMode2D);
			}
		}

		[Token(Token = "0x1700052B")]
		public GizmoCap2DType SliderCapType
		{
			[Token(Token = "0x6001D92")]
			[Address(RVA = "0x10F8BA0", Offset = "0x10F8BA0", VA = "0x10F8BA0")]
			get
			{
				return default(GizmoCap2DType);
			}
		}

		[Token(Token = "0x1700052C")]
		public GizmoLine2DType SliderLineType
		{
			[Token(Token = "0x6001D93")]
			[Address(RVA = "0x10F8BD8", Offset = "0x10F8BD8", VA = "0x10F8BD8")]
			get
			{
				return default(GizmoLine2DType);
			}
		}

		[Token(Token = "0x1700052D")]
		public GizmoPlane2DType DblSliderPlaneType
		{
			[Token(Token = "0x6001D94")]
			[Address(RVA = "0x10F8C08", Offset = "0x10F8C08", VA = "0x10F8C08")]
			get
			{
				return default(GizmoPlane2DType);
			}
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0x10F839C", Offset = "0x10F839C", VA = "0x10F839C")]
		public MoveGizmoLookAndFeel2D()
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x10F906C", Offset = "0x10F906C", VA = "0x10F906C")]
		public bool IsDblSliderPlaneTypeAllowed(GizmoPlane2DType planeType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0x10F9078", Offset = "0x10F9078", VA = "0x10F9078")]
		public List<Enum> GetAllowedDblSliderPlaneTypes()
		{
			return null;
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x10F91F4", Offset = "0x10F91F4", VA = "0x10F91F4")]
		public void SetDblSliderVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0x10F9200", Offset = "0x10F9200", VA = "0x10F9200")]
		public bool IsSliderVisible(int axisIndex, AxisSign axisSign)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x10F7B74", Offset = "0x10F7B74", VA = "0x10F7B74")]
		public bool IsPositiveSliderVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0x10F7BD4", Offset = "0x10F7BD4", VA = "0x10F7BD4")]
		public bool IsNegativeSliderVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0x10F8F40", Offset = "0x10F8F40", VA = "0x10F8F40")]
		public void SetSliderVisible(int axisIndex, AxisSign axisSign, bool isVisible)
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x10F9244", Offset = "0x10F9244", VA = "0x10F9244")]
		public bool IsSliderCapVisible(int axisIndex, AxisSign axisSign)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x10F7BA4", Offset = "0x10F7BA4", VA = "0x10F7BA4")]
		public bool IsPositiveSliderCapVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x10F7C08", Offset = "0x10F7C08", VA = "0x10F7C08")]
		public bool IsNegativeSliderCapVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x10F8F88", Offset = "0x10F8F88", VA = "0x10F8F88")]
		public void SetSliderCapVisible(int axisIndex, AxisSign axisSign, bool isVisible)
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x10F8C24", Offset = "0x10F8C24", VA = "0x10F8C24")]
		public void SetAxisColor(int axisIndex, Color color)
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x10F8CDC", Offset = "0x10F8CDC", VA = "0x10F8CDC")]
		public void SetAxisBorderColor(int axisIndex, Color color)
		{
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x10F8D94", Offset = "0x10F8D94", VA = "0x10F8D94")]
		public void SetSliderHoveredFillColor(Color color)
		{
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x10F8DFC", Offset = "0x10F8DFC", VA = "0x10F8DFC")]
		public void SetSliderHoveredBorderColor(Color color)
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x10F8EFC", Offset = "0x10F8EFC", VA = "0x10F8EFC")]
		public void SetSliderFillMode(GizmoFillMode2D fillMode)
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x10F8FD0", Offset = "0x10F8FD0", VA = "0x10F8FD0")]
		public void SetDblSliderFillMode(GizmoFillMode2D fillMode)
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x10F8EB0", Offset = "0x10F8EB0", VA = "0x10F8EB0")]
		public void SetSliderCapFillMode(GizmoFillMode2D fillMode)
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x10F9288", Offset = "0x10F9288", VA = "0x10F9288")]
		public void SetSliderLineType(GizmoLine2DType lineType)
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x10F92CC", Offset = "0x10F92CC", VA = "0x10F92CC")]
		public void SetBoxSliderThickness(float thickness)
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x10F933C", Offset = "0x10F933C", VA = "0x10F933C")]
		public void SetSliderLength(float length)
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x10F8E64", Offset = "0x10F8E64", VA = "0x10F8E64")]
		public void SetSliderCapType(GizmoCap2DType capType)
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x10F93AC", Offset = "0x10F93AC", VA = "0x10F93AC")]
		public void SetSliderArrowCapBaseRadius(float radius)
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x10F9424", Offset = "0x10F9424", VA = "0x10F9424")]
		public void SetSliderArrowCapHeight(float height)
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x10F949C", Offset = "0x10F949C", VA = "0x10F949C")]
		public void SetSliderQuadCapWidth(float width)
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x10F9514", Offset = "0x10F9514", VA = "0x10F9514")]
		public void SetSliderQuadCapHeight(float height)
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x10F958C", Offset = "0x10F958C", VA = "0x10F958C")]
		public void SetSliderCircleCapRadius(float radius)
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x10F95D8", Offset = "0x10F95D8", VA = "0x10F95D8")]
		public void SetDblSliderPlaneType(GizmoPlane2DType sliderType)
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x10F95F4", Offset = "0x10F95F4", VA = "0x10F95F4")]
		public void SetDblSliderQuadWidth(float width)
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x10F9610", Offset = "0x10F9610", VA = "0x10F9610")]
		public void SetDblSliderQuadHeight(float height)
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0x10F962C", Offset = "0x10F962C", VA = "0x10F962C")]
		public void SetDblSliderCircleRadius(float radius)
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0x10F8FEC", Offset = "0x10F8FEC", VA = "0x10F8FEC")]
		public void SetDblSliderColor(Color color)
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x10F900C", Offset = "0x10F900C", VA = "0x10F900C")]
		public void SetDblSliderBorderColor(Color color)
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0x10F902C", Offset = "0x10F902C", VA = "0x10F902C")]
		public void SetDblSliderHoveredColor(Color color)
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0x10F904C", Offset = "0x10F904C", VA = "0x10F904C")]
		public void SetDblSliderHoveredBorderColor(Color color)
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0x10F9648", Offset = "0x10F9648", VA = "0x10F9648")]
		public void SetScale(float scale)
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0x10F7F84", Offset = "0x10F7F84", VA = "0x10F7F84")]
		public void ConnectSliderLookAndFeel(GizmoLineSlider2D slider, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x10F7FB4", Offset = "0x10F7FB4", VA = "0x10F7FB4")]
		public void ConnectDblSliderLookAndFeel(GizmoPlaneSlider2D slider)
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0x10F8944", Offset = "0x10F8944", VA = "0x10F8944")]
		private GizmoLineSlider2DLookAndFeel GetSliderLookAndFeel(int axisIndex, AxisSign axisSign)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004E6")]
	public class MoveGizmoLookAndFeel3D : Settings
	{
		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool _isMidCapVisible;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GizmoCap3DLookAndFeel _midCapLookAndFeel;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GizmoCap2DLookAndFeel _vertSnapCapLookAndFeel;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool[] _sglSliderVis;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool[] _sglSliderCapVis;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool[] _dblSliderVis;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GizmoLineSlider3DLookAndFeel[] _sglSlidersLookAndFeel;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GizmoPlaneSlider3DLookAndFeel[] _dblSlidersLookAndFeel;

		[Token(Token = "0x1700052E")]
		public float Scale
		{
			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0x10F96EC", Offset = "0x10F96EC", VA = "0x10F96EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700052F")]
		public bool UseZoomFactor
		{
			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0x10F9708", Offset = "0x10F9708", VA = "0x10F9708")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000530")]
		public float SliderLength
		{
			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0x10F9724", Offset = "0x10F9724", VA = "0x10F9724")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000531")]
		public float BoxSliderHeight
		{
			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0x10F9754", Offset = "0x10F9754", VA = "0x10F9754")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000532")]
		public float BoxSliderDepth
		{
			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0x10F9784", Offset = "0x10F9784", VA = "0x10F9784")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000533")]
		public float CylinderSliderRadius
		{
			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0x10F97B4", Offset = "0x10F97B4", VA = "0x10F97B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000534")]
		public float SliderBoxCapWidth
		{
			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0x10F97E4", Offset = "0x10F97E4", VA = "0x10F97E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000535")]
		public float SliderBoxCapHeight
		{
			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0x10F981C", Offset = "0x10F981C", VA = "0x10F981C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000536")]
		public float SliderBoxCapDepth
		{
			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0x10F9854", Offset = "0x10F9854", VA = "0x10F9854")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000537")]
		public float SliderConeCapHeight
		{
			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0x10F988C", Offset = "0x10F988C", VA = "0x10F988C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000538")]
		public float SliderConeCapBaseRadius
		{
			[Token(Token = "0x6001DC7")]
			[Address(RVA = "0x10F98C4", Offset = "0x10F98C4", VA = "0x10F98C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000539")]
		public float SliderPyramidCapWidth
		{
			[Token(Token = "0x6001DC8")]
			[Address(RVA = "0x10F98FC", Offset = "0x10F98FC", VA = "0x10F98FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700053A")]
		public float SliderPyramidCapHeight
		{
			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0x10F9934", Offset = "0x10F9934", VA = "0x10F9934")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700053B")]
		public float SliderPyramidCapDepth
		{
			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0x10F996C", Offset = "0x10F996C", VA = "0x10F996C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700053C")]
		public float SliderTriPrismCapWidth
		{
			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0x10F99A4", Offset = "0x10F99A4", VA = "0x10F99A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700053D")]
		public float SliderTriPrismCapHeight
		{
			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0x10F99DC", Offset = "0x10F99DC", VA = "0x10F99DC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700053E")]
		public float SliderTriPrismCapDepth
		{
			[Token(Token = "0x6001DCD")]
			[Address(RVA = "0x10F9A14", Offset = "0x10F9A14", VA = "0x10F9A14")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700053F")]
		public float SliderSphereCapRadius
		{
			[Token(Token = "0x6001DCE")]
			[Address(RVA = "0x10F9A4C", Offset = "0x10F9A4C", VA = "0x10F9A4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000540")]
		public GizmoFillMode3D SliderFillMode
		{
			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0x10F9A84", Offset = "0x10F9A84", VA = "0x10F9A84")]
			get
			{
				return default(GizmoFillMode3D);
			}
		}

		[Token(Token = "0x17000541")]
		public GizmoFillMode3D SliderCapFillMode
		{
			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0x10F9AB4", Offset = "0x10F9AB4", VA = "0x10F9AB4")]
			get
			{
				return default(GizmoFillMode3D);
			}
		}

		[Token(Token = "0x17000542")]
		public GizmoCap3DType SliderCapType
		{
			[Token(Token = "0x6001DD1")]
			[Address(RVA = "0x10F9AEC", Offset = "0x10F9AEC", VA = "0x10F9AEC")]
			get
			{
				return default(GizmoCap3DType);
			}
		}

		[Token(Token = "0x17000543")]
		public GizmoShadeMode SliderShadeMode
		{
			[Token(Token = "0x6001DD2")]
			[Address(RVA = "0x10F9B24", Offset = "0x10F9B24", VA = "0x10F9B24")]
			get
			{
				return default(GizmoShadeMode);
			}
		}

		[Token(Token = "0x17000544")]
		public GizmoShadeMode SliderCapShadeMode
		{
			[Token(Token = "0x6001DD3")]
			[Address(RVA = "0x10F9B54", Offset = "0x10F9B54", VA = "0x10F9B54")]
			get
			{
				return default(GizmoShadeMode);
			}
		}

		[Token(Token = "0x17000545")]
		public GizmoLine3DType SliderLineType
		{
			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0x10F9B8C", Offset = "0x10F9B8C", VA = "0x10F9B8C")]
			get
			{
				return default(GizmoLine3DType);
			}
		}

		[Token(Token = "0x17000546")]
		public Color XColor
		{
			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0x10F9BBC", Offset = "0x10F9BBC", VA = "0x10F9BBC")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000547")]
		public Color YColor
		{
			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0x10F9C34", Offset = "0x10F9C34", VA = "0x10F9C34")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000548")]
		public Color ZColor
		{
			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0x10F9C6C", Offset = "0x10F9C6C", VA = "0x10F9C6C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000549")]
		public float DblSliderSize
		{
			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0x10F9CA4", Offset = "0x10F9CA4", VA = "0x10F9CA4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700054A")]
		public float DblSliderBorderBoxHeight
		{
			[Token(Token = "0x6001DD9")]
			[Address(RVA = "0x10F9CD4", Offset = "0x10F9CD4", VA = "0x10F9CD4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700054B")]
		public float DblSliderBorderBoxDepth
		{
			[Token(Token = "0x6001DDA")]
			[Address(RVA = "0x10F9D04", Offset = "0x10F9D04", VA = "0x10F9D04")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700054C")]
		public float DblSliderFillAlpha
		{
			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0x10F9D34", Offset = "0x10F9D34", VA = "0x10F9D34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700054D")]
		public GizmoShadeMode DblSliderBorderShadeMode
		{
			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0x10F9D64", Offset = "0x10F9D64", VA = "0x10F9D64")]
			get
			{
				return default(GizmoShadeMode);
			}
		}

		[Token(Token = "0x1700054E")]
		public GizmoQuad3DBorderType DblSliderBorderType
		{
			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0x10F9D94", Offset = "0x10F9D94", VA = "0x10F9D94")]
			get
			{
				return default(GizmoQuad3DBorderType);
			}
		}

		[Token(Token = "0x1700054F")]
		public GizmoFillMode3D DblSliderBorderFillMode
		{
			[Token(Token = "0x6001DDE")]
			[Address(RVA = "0x10F9DC4", Offset = "0x10F9DC4", VA = "0x10F9DC4")]
			get
			{
				return default(GizmoFillMode3D);
			}
		}

		[Token(Token = "0x17000550")]
		public float VertSnapCapQuadWidth
		{
			[Token(Token = "0x6001DDF")]
			[Address(RVA = "0x10F9DF4", Offset = "0x10F9DF4", VA = "0x10F9DF4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000551")]
		public float VertSnapCapQuadHeight
		{
			[Token(Token = "0x6001DE0")]
			[Address(RVA = "0x10F9E10", Offset = "0x10F9E10", VA = "0x10F9E10")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000552")]
		public float VertSnapCapCircleRadius
		{
			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0x10F9E2C", Offset = "0x10F9E2C", VA = "0x10F9E2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000553")]
		public Color VertSnapCapColor
		{
			[Token(Token = "0x6001DE2")]
			[Address(RVA = "0x10F9E48", Offset = "0x10F9E48", VA = "0x10F9E48")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000554")]
		public Color VertSnapCapBorderColor
		{
			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0x10F9E68", Offset = "0x10F9E68", VA = "0x10F9E68")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000555")]
		public Color VertSnapCapHoveredColor
		{
			[Token(Token = "0x6001DE4")]
			[Address(RVA = "0x10F9E88", Offset = "0x10F9E88", VA = "0x10F9E88")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000556")]
		public Color VertSnapCapHoveredBorderColor
		{
			[Token(Token = "0x6001DE5")]
			[Address(RVA = "0x10F9EA8", Offset = "0x10F9EA8", VA = "0x10F9EA8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000557")]
		public GizmoFillMode2D VertSnapCapFillMode
		{
			[Token(Token = "0x6001DE6")]
			[Address(RVA = "0x10F9EC8", Offset = "0x10F9EC8", VA = "0x10F9EC8")]
			get
			{
				return default(GizmoFillMode2D);
			}
		}

		[Token(Token = "0x17000558")]
		public GizmoCap2DType VertSnapCapType
		{
			[Token(Token = "0x6001DE7")]
			[Address(RVA = "0x10F9EE4", Offset = "0x10F9EE4", VA = "0x10F9EE4")]
			get
			{
				return default(GizmoCap2DType);
			}
		}

		[Token(Token = "0x17000559")]
		public bool IsMidCapVisible
		{
			[Token(Token = "0x6001DE8")]
			[Address(RVA = "0x10F9F00", Offset = "0x10F9F00", VA = "0x10F9F00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0x10F9F08", Offset = "0x10F9F08", VA = "0x10F9F08")]
			set
			{
			}
		}

		[Token(Token = "0x1700055A")]
		public float MidCapBoxWidth
		{
			[Token(Token = "0x6001DEA")]
			[Address(RVA = "0x10F9F14", Offset = "0x10F9F14", VA = "0x10F9F14")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700055B")]
		public float MidCapBoxHeight
		{
			[Token(Token = "0x6001DEB")]
			[Address(RVA = "0x10F9F30", Offset = "0x10F9F30", VA = "0x10F9F30")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700055C")]
		public float MidCapBoxDepth
		{
			[Token(Token = "0x6001DEC")]
			[Address(RVA = "0x10F9F4C", Offset = "0x10F9F4C", VA = "0x10F9F4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700055D")]
		public float MidCapSphereRadius
		{
			[Token(Token = "0x6001DED")]
			[Address(RVA = "0x10F9F68", Offset = "0x10F9F68", VA = "0x10F9F68")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700055E")]
		public Color MidCapColor
		{
			[Token(Token = "0x6001DEE")]
			[Address(RVA = "0x10F9F84", Offset = "0x10F9F84", VA = "0x10F9F84")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700055F")]
		public GizmoFillMode3D MidCapFillMode
		{
			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0x10F9FA4", Offset = "0x10F9FA4", VA = "0x10F9FA4")]
			get
			{
				return default(GizmoFillMode3D);
			}
		}

		[Token(Token = "0x17000560")]
		public GizmoShadeMode MidCapShadeMode
		{
			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0x10F9FC0", Offset = "0x10F9FC0", VA = "0x10F9FC0")]
			get
			{
				return default(GizmoShadeMode);
			}
		}

		[Token(Token = "0x17000561")]
		public GizmoCap3DType MidCapType
		{
			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0x10F9FDC", Offset = "0x10F9FDC", VA = "0x10F9FDC")]
			get
			{
				return default(GizmoCap3DType);
			}
		}

		[Token(Token = "0x17000562")]
		public Color HoveredColor
		{
			[Token(Token = "0x6001DF2")]
			[Address(RVA = "0x10F9FF8", Offset = "0x10F9FF8", VA = "0x10F9FF8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x10FA02C", Offset = "0x10FA02C", VA = "0x10FA02C")]
		public MoveGizmoLookAndFeel3D()
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x10FAAA4", Offset = "0x10FAAA4", VA = "0x10FAAA4")]
		public bool IsVertSnapCapTypeAllowed(GizmoCap2DType capType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x10FAAB0", Offset = "0x10FAAB0", VA = "0x10FAAB0")]
		public List<Enum> GetAllowedVertSnapCapTypes()
		{
			return null;
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x10FAC2C", Offset = "0x10FAC2C", VA = "0x10FAC2C")]
		public void SetVertSnapCapType(GizmoCap2DType capType)
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x10FAC50", Offset = "0x10FAC50", VA = "0x10FAC50")]
		public void SetVertSnapCapQuadWidth(float width)
		{
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x10FAC6C", Offset = "0x10FAC6C", VA = "0x10FAC6C")]
		public void SetVertSnapCapQuadHeight(float height)
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x10FAC88", Offset = "0x10FAC88", VA = "0x10FAC88")]
		public void SetVertSnapCapCircleRadius(float radius)
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x10FAA08", Offset = "0x10FAA08", VA = "0x10FAA08")]
		public void SetVertSnapCapFillMode(GizmoFillMode2D fillMode)
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x10FAA24", Offset = "0x10FAA24", VA = "0x10FAA24")]
		public void SetVertSnapCapColor(Color color)
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x10FAA44", Offset = "0x10FAA44", VA = "0x10FAA44")]
		public void SetVertSnapCapBorderColor(Color color)
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x10FAA64", Offset = "0x10FAA64", VA = "0x10FAA64")]
		public void SetVertSnapCapHoveredColor(Color color)
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x10FAA84", Offset = "0x10FAA84", VA = "0x10FAA84")]
		public void SetVertSnapCapHoveredBorderColor(Color color)
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x10FACA4", Offset = "0x10FACA4", VA = "0x10FACA4")]
		public bool IsMidCapTypeAllowed(GizmoCap3DType capType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x10FACB4", Offset = "0x10FACB4", VA = "0x10FACB4")]
		public List<Enum> GetAllowedMidCapTypes()
		{
			return null;
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x10FA9A4", Offset = "0x10FA9A4", VA = "0x10FA9A4")]
		public void SetMidCapType(GizmoCap3DType capType)
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x10FAE34", Offset = "0x10FAE34", VA = "0x10FAE34")]
		public void SetMidCapBoxWidth(float width)
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x10FAE50", Offset = "0x10FAE50", VA = "0x10FAE50")]
		public void SetMidCapBoxHeight(float height)
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x10FAE6C", Offset = "0x10FAE6C", VA = "0x10FAE6C")]
		public void SetMidCapBoxDepth(float depth)
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x10FA9CC", Offset = "0x10FA9CC", VA = "0x10FA9CC")]
		public void SetMidCapSphereRadius(float radius)
		{
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x10FA9E8", Offset = "0x10FA9E8", VA = "0x10FA9E8")]
		public void SetMidCapColor(Color color)
		{
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x10FAE88", Offset = "0x10FAE88", VA = "0x10FAE88")]
		public bool IsSliderVisible(int axisIndex, AxisSign axisSign)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0x10FAECC", Offset = "0x10FAECC", VA = "0x10FAECC")]
		public bool IsDblSliderVisible(PlaneId planeId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x10FAEFC", Offset = "0x10FAEFC", VA = "0x10FAEFC")]
		public bool IsSliderCapVisible(int axisIndex, AxisSign axisSign)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x10FAF40", Offset = "0x10FAF40", VA = "0x10FAF40")]
		public bool IsPositiveSliderVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x10FAF70", Offset = "0x10FAF70", VA = "0x10FAF70")]
		public bool IsPositiveSliderCapVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x10FAFA0", Offset = "0x10FAFA0", VA = "0x10FAFA0")]
		public bool IsNegativeSliderVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x10FAFD4", Offset = "0x10FAFD4", VA = "0x10FAFD4")]
		public bool IsNegativeSliderCapVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x10FA914", Offset = "0x10FA914", VA = "0x10FA914")]
		public void SetSliderVisible(int axisIndex, AxisSign axisSign, bool isVisible)
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x10FA8E0", Offset = "0x10FA8E0", VA = "0x10FA8E0")]
		public void SetDblSliderVisible(PlaneId planeId, bool isVisible)
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x10FA95C", Offset = "0x10FA95C", VA = "0x10FA95C")]
		public void SetSliderCapVisible(int axisIndex, AxisSign axisSign, bool isVisible)
		{
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x10FB008", Offset = "0x10FB008", VA = "0x10FB008")]
		public void SetPositiveSliderVisible(int axisIndex, bool isVisible)
		{
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x10FB03C", Offset = "0x10FB03C", VA = "0x10FB03C")]
		public void SetPositiveCapVisible(int axisIndex, bool isVisible)
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x10FB070", Offset = "0x10FB070", VA = "0x10FB070")]
		public void SetNegativeSliderVisible(int axisIndex, bool isVisible)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x10FB0A8", Offset = "0x10FB0A8", VA = "0x10FB0A8")]
		public void SetNegativeCapVisible(int axisIndex, bool isVisible)
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x10FA530", Offset = "0x10FA530", VA = "0x10FA530")]
		public void SetSliderLength(float axisLength)
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x10FB0E0", Offset = "0x10FB0E0", VA = "0x10FB0E0")]
		public void SetSliderLineType(GizmoLine3DType lineType)
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x10FB124", Offset = "0x10FB124", VA = "0x10FB124")]
		public void SetDblSliderBorderType(GizmoQuad3DBorderType borderType)
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x10FB168", Offset = "0x10FB168", VA = "0x10FB168")]
		public void SetDblSliderBorderBoxHeight(float height)
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x10FB1D8", Offset = "0x10FB1D8", VA = "0x10FB1D8")]
		public void SetDblSliderBorderBoxDepth(float depth)
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x10FB248", Offset = "0x10FB248", VA = "0x10FB248")]
		public void SetBoxSliderHeight(float height)
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0x10FB2B8", Offset = "0x10FB2B8", VA = "0x10FB2B8")]
		public void SetBoxSliderDepth(float depth)
		{
		}

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x10FB328", Offset = "0x10FB328", VA = "0x10FB328")]
		public void SetCylinderSliderRadius(float radius)
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x10FA85C", Offset = "0x10FA85C", VA = "0x10FA85C")]
		public void SetDblSliderSize(float size)
		{
		}

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x10FB398", Offset = "0x10FB398", VA = "0x10FB398")]
		public void SetScale(float scale)
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x10FB484", Offset = "0x10FB484", VA = "0x10FB484")]
		public void SetUseZoomFactor(bool useZoomFactor)
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x10FA5A0", Offset = "0x10FA5A0", VA = "0x10FA5A0")]
		public void SetAxisColor(int axisIndex, Color color)
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x10FA7A0", Offset = "0x10FA7A0", VA = "0x10FA7A0")]
		public void SetDblSliderFillAlpha(float alpha)
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x10FA6A8", Offset = "0x10FA6A8", VA = "0x10FA6A8")]
		public void SetHoveredColor(Color hoveredColor)
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x10FB548", Offset = "0x10FB548", VA = "0x10FB548")]
		public void SetSliderShadeMode(GizmoShadeMode shadeMode)
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x10FB58C", Offset = "0x10FB58C", VA = "0x10FB58C")]
		public void SetSliderCapShadeMode(GizmoShadeMode shadeMode)
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x10FB5D8", Offset = "0x10FB5D8", VA = "0x10FB5D8")]
		public void SetMidCapShadeMode(GizmoShadeMode shadeMode)
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x10FB5F4", Offset = "0x10FB5F4", VA = "0x10FB5F4")]
		public void SetDblSliderBorderShadeMode(GizmoShadeMode shadeMode)
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x10FB638", Offset = "0x10FB638", VA = "0x10FB638")]
		public void SetSliderCapType(GizmoCap3DType capType)
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x10FB684", Offset = "0x10FB684", VA = "0x10FB684")]
		public void SetSliderFillMode(GizmoFillMode3D fillMode)
		{
		}

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x10FB6C8", Offset = "0x10FB6C8", VA = "0x10FB6C8")]
		public void SetSliderCapFillMode(GizmoFillMode3D fillMode)
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x10FB714", Offset = "0x10FB714", VA = "0x10FB714")]
		public void SetMidCapFillMode(GizmoFillMode3D fillMode)
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x10FB730", Offset = "0x10FB730", VA = "0x10FB730")]
		public void SetDblSliderBorderFillMode(GizmoFillMode3D fillMode)
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0x10FB774", Offset = "0x10FB774", VA = "0x10FB774")]
		public void SetSliderBoxCapWidth(float width)
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x10FB7EC", Offset = "0x10FB7EC", VA = "0x10FB7EC")]
		public void SetSliderBoxCapHeight(float height)
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x10FB864", Offset = "0x10FB864", VA = "0x10FB864")]
		public void SetSliderBoxCapDepth(float depth)
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x10FB8DC", Offset = "0x10FB8DC", VA = "0x10FB8DC")]
		public void SetSliderConeCapHeight(float height)
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x10FB954", Offset = "0x10FB954", VA = "0x10FB954")]
		public void SetSliderConeCapBaseRadius(float radius)
		{
		}

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x10FB9CC", Offset = "0x10FB9CC", VA = "0x10FB9CC")]
		public void SetSliderPyramidCapWidth(float width)
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x10FBA44", Offset = "0x10FBA44", VA = "0x10FBA44")]
		public void SetSliderPyramidCapHeight(float height)
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x10FBABC", Offset = "0x10FBABC", VA = "0x10FBABC")]
		public void SetSliderPyramidCapDepth(float depth)
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x10FBB34", Offset = "0x10FBB34", VA = "0x10FBB34")]
		public void SetSliderTriPrismCapWidth(float width)
		{
		}

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0x10FBBAC", Offset = "0x10FBBAC", VA = "0x10FBBAC")]
		public void SetSliderTriPrismCapHeight(float height)
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0x10FBC24", Offset = "0x10FBC24", VA = "0x10FBC24")]
		public void SetSliderTriPrismCapDepth(float depth)
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x10FBC9C", Offset = "0x10FBC9C", VA = "0x10FBC9C")]
		public void SetSliderSphereCapRadius(float radius)
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0x10FBD14", Offset = "0x10FBD14", VA = "0x10FBD14")]
		public void ConnectSliderLookAndFeel(GizmoLineSlider3D slider, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x10FBD44", Offset = "0x10FBD44", VA = "0x10FBD44")]
		public void ConnectDblSliderLookAndFeel(GizmoPlaneSlider3D dblSlider, PlaneId planeId)
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x10FBD70", Offset = "0x10FBD70", VA = "0x10FBD70")]
		public void ConnectMidCapLookAndFeel(GizmoCap3D midCap)
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x10FBD94", Offset = "0x10FBD94", VA = "0x10FBD94")]
		public void ConnectVertSnapCapLookAndFeel(GizmoCap2D vertSnapCap)
		{
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0x10F9BF0", Offset = "0x10F9BF0", VA = "0x10F9BF0")]
		private GizmoLineSlider3DLookAndFeel GetSglSliderLookAndFeel(int axisIndex, AxisSign axisSign)
		{
			return null;
		}

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0x10FB518", Offset = "0x10FB518", VA = "0x10FB518")]
		private GizmoPlaneSlider3DLookAndFeel GetDblSliderLookAndFeel(PlaneId planeId)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004E7")]
	public class MoveGizmoSettings2D : Settings
	{
		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GizmoPlaneSlider2DSettings _dblSliderSettings;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GizmoLineSlider2DSettings[] _sglSliderSettings;

		[Token(Token = "0x17000563")]
		public float LineSliderHoverEps
		{
			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0x10FBDB8", Offset = "0x10FBDB8", VA = "0x10FBDB8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000564")]
		public float BoxSliderHoverEps
		{
			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0x10FBDE8", Offset = "0x10FBDE8", VA = "0x10FBDE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000565")]
		public float XSnapStep
		{
			[Token(Token = "0x6001E40")]
			[Address(RVA = "0x10FBE18", Offset = "0x10FBE18", VA = "0x10FBE18")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000566")]
		public float YSnapStep
		{
			[Token(Token = "0x6001E41")]
			[Address(RVA = "0x10FBE34", Offset = "0x10FBE34", VA = "0x10FBE34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000567")]
		public float DragSensitivity
		{
			[Token(Token = "0x6001E42")]
			[Address(RVA = "0x10FBE50", Offset = "0x10FBE50", VA = "0x10FBE50")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x10FBE6C", Offset = "0x10FBE6C", VA = "0x10FBE6C")]
		public MoveGizmoSettings2D()
		{
		}

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x10FBFC4", Offset = "0x10FBFC4", VA = "0x10FBFC4")]
		public void SetLineSliderHoverEps(float eps)
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x10FC034", Offset = "0x10FC034", VA = "0x10FC034")]
		public void SetBoxSliderHoverEps(float eps)
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x10FC0A4", Offset = "0x10FC0A4", VA = "0x10FC0A4")]
		public void SetXSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x10FC164", Offset = "0x10FC164", VA = "0x10FC164")]
		public void SetYSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x10FC1E4", Offset = "0x10FC1E4", VA = "0x10FC1E4")]
		public void SetDragSensitivity(float sensitivity)
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x10FC268", Offset = "0x10FC268", VA = "0x10FC268")]
		public void ConnectSliderSettings(GizmoLineSlider2D slider, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x10FC298", Offset = "0x10FC298", VA = "0x10FC298")]
		public void ConnectDblSliderSettings(GizmoPlaneSlider2D slider)
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x10FC120", Offset = "0x10FC120", VA = "0x10FC120")]
		private GizmoLineSlider2DSettings GetSliderSettings(int axisIndex, AxisSign axisSign)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004E8")]
	public class MoveGizmoSettings3D : Settings
	{
		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GizmoObjectVertexSnapSettings _vertexSnapSettings;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GizmoLineSlider3DSettings[] _sglSliderSettings;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GizmoPlaneSlider3DSettings[] _dblSliderSettings;

		[Token(Token = "0x17000568")]
		public GizmoObjectVertexSnapSettings VertexSnapSettings
		{
			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0x10FC2BC", Offset = "0x10FC2BC", VA = "0x10FC2BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000569")]
		public float LineSliderHoverEps
		{
			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0x10FC2C4", Offset = "0x10FC2C4", VA = "0x10FC2C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700056A")]
		public float BoxSliderHoverEps
		{
			[Token(Token = "0x6001E4E")]
			[Address(RVA = "0x10FC2F4", Offset = "0x10FC2F4", VA = "0x10FC2F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700056B")]
		public float CylinderSliderHoverEps
		{
			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0x10FC324", Offset = "0x10FC324", VA = "0x10FC324")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700056C")]
		public float XSnapStep
		{
			[Token(Token = "0x6001E50")]
			[Address(RVA = "0x10FC354", Offset = "0x10FC354", VA = "0x10FC354")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700056D")]
		public float YSnapStep
		{
			[Token(Token = "0x6001E51")]
			[Address(RVA = "0x10FC3C8", Offset = "0x10FC3C8", VA = "0x10FC3C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700056E")]
		public float ZSnapStep
		{
			[Token(Token = "0x6001E52")]
			[Address(RVA = "0x10FC3FC", Offset = "0x10FC3FC", VA = "0x10FC3FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700056F")]
		public float DragSensitivity
		{
			[Token(Token = "0x6001E53")]
			[Address(RVA = "0x10FC430", Offset = "0x10FC430", VA = "0x10FC430")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x10FC460", Offset = "0x10FC460", VA = "0x10FC460")]
		public MoveGizmoSettings3D()
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x10FC6F8", Offset = "0x10FC6F8", VA = "0x10FC6F8")]
		public void SetLineSliderHoverEps(float eps)
		{
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x10FC768", Offset = "0x10FC768", VA = "0x10FC768")]
		public void SetBoxSliderHoverEps(float eps)
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x10FC7D8", Offset = "0x10FC7D8", VA = "0x10FC7D8")]
		public void SetCylinderSliderHoverEps(float eps)
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0x10FC848", Offset = "0x10FC848", VA = "0x10FC848")]
		public void SetXSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x10FC918", Offset = "0x10FC918", VA = "0x10FC918")]
		public void SetYSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x10FC9BC", Offset = "0x10FC9BC", VA = "0x10FC9BC")]
		public void SetZSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x10FCA60", Offset = "0x10FCA60", VA = "0x10FCA60")]
		public void SetDragSensitivity(float sensitivity)
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x10FCB1C", Offset = "0x10FCB1C", VA = "0x10FCB1C")]
		public void ConnectSliderSettings(GizmoLineSlider3D slider, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x10FCB4C", Offset = "0x10FCB4C", VA = "0x10FCB4C")]
		public void ConnectDblSliderSettings(GizmoPlaneSlider3D dblSlider, PlaneId planeId)
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x10FC384", Offset = "0x10FC384", VA = "0x10FC384")]
		private GizmoLineSlider3DSettings GetSglSliderSettings(int axisIndex, AxisSign axisSign)
		{
			return null;
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x10FC8E8", Offset = "0x10FC8E8", VA = "0x10FC8E8")]
		private GizmoPlaneSlider3DSettings GetDblSliderSettings(PlaneId planeId)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004E9")]
	public class ObjectTransformGizmo : GizmoBehaviour
	{
		[Token(Token = "0x20004EA")]
		public class ObjectRestrictions
		{
			[Token(Token = "0x400174E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool[] _moveAxesMask;

			[Token(Token = "0x400174F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool[] _scaleAxesMask;

			[Token(Token = "0x4001750")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private HashSet<int> _handleMask;

			[Token(Token = "0x6001E97")]
			[Address(RVA = "0x10FFCA0", Offset = "0x10FFCA0", VA = "0x10FFCA0")]
			public bool CanMoveAlongAllAxes()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E98")]
			[Address(RVA = "0x10FFCF8", Offset = "0x10FFCF8", VA = "0x10FFCF8")]
			public bool CanScaleAlongAllAxes()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E99")]
			[Address(RVA = "0x10FFD50", Offset = "0x10FFD50", VA = "0x10FFD50")]
			public bool CanMoveAlongAxis(int axisIndex)
			{
				return default(bool);
			}

			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0x10FFD80", Offset = "0x10FFD80", VA = "0x10FFD80")]
			public bool CanScaleAlongAxis(int axisIndex)
			{
				return default(bool);
			}

			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0x10FFDB0", Offset = "0x10FFDB0", VA = "0x10FFDB0")]
			public void SetCanMoveAlongAxis(int axisIndex, bool canMove)
			{
			}

			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0x10FFDE4", Offset = "0x10FFDE4", VA = "0x10FFDE4")]
			public void SetCanScaleAlongAxis(int axisIndex, bool canScale)
			{
			}

			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0x10FF5C4", Offset = "0x10FF5C4", VA = "0x10FF5C4")]
			public bool IsAffectedByHandle(int handleId)
			{
				return default(bool);
			}

			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0x10FFE18", Offset = "0x10FFE18", VA = "0x10FFE18")]
			public void SetIsAffectedByHandle(int handleId, bool isAffected)
			{
			}

			[Token(Token = "0x6001E9F")]
			[Address(RVA = "0x10FF628", Offset = "0x10FF628", VA = "0x10FF628")]
			public Vector3 AdjustMoveVector(Vector3 moveVector)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0x10FFA78", Offset = "0x10FFA78", VA = "0x10FFA78")]
			public Vector3 AdjustScaleVector(Vector3 scaleVector)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0x10FFEAC", Offset = "0x10FFEAC", VA = "0x10FFEAC")]
			public ObjectRestrictions()
			{
			}
		}

		[Token(Token = "0x20004EB")]
		[Flags]
		public enum Channels
		{
			[Token(Token = "0x4001752")]
			None = 0,
			[Token(Token = "0x4001753")]
			Position = 1,
			[Token(Token = "0x4001754")]
			Rotation = 2,
			[Token(Token = "0x4001755")]
			Scale = 4,
			[Token(Token = "0x4001756")]
			All = 7
		}

		[Token(Token = "0x20004EC")]
		private enum TargetObjectMode
		{
			[Token(Token = "0x4001758")]
			Multiple,
			[Token(Token = "0x4001759")]
			Single
		}

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TargetObjectMode _targetObjectMode;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Channels _transformChannelFlags;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IEnumerable<GameObject> _targetObjects;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject _targetPivotObject;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<LocalTransformSnapshot> _preTransformSnapshots;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> _transformableParents;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AABB _targetGroupAABBOnDragBegin;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private GizmoSpace _transformSpace;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isTransformSpacePermanent;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private GizmoObjectTransformPivot _transformPivot;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isTransformPivotPermanent;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool _scaleConstraintEnabled;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 _minPositiveScale;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 _customWorldPivot;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Dictionary<GameObject, Vector3> _objectToCustomLocalPivot;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<GameObject, ObjectRestrictions> _objectToRestrictions;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ObjectTransformGizmoSettings _settings;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private ObjectTransformGizmoSettings _sharedSettings;

		[Token(Token = "0x17000570")]
		public GizmoObjectTransformPivot TransformPivot
		{
			[Token(Token = "0x6001E60")]
			[Address(RVA = "0x10FCB78", Offset = "0x10FCB78", VA = "0x10FCB78")]
			get
			{
				return default(GizmoObjectTransformPivot);
			}
		}

		[Token(Token = "0x17000571")]
		public bool IsTransformPivotPermanent
		{
			[Token(Token = "0x6001E61")]
			[Address(RVA = "0x10FCB80", Offset = "0x10FCB80", VA = "0x10FCB80")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000572")]
		public GizmoSpace TransformSpace
		{
			[Token(Token = "0x6001E62")]
			[Address(RVA = "0x10FCB88", Offset = "0x10FCB88", VA = "0x10FCB88")]
			get
			{
				return default(GizmoSpace);
			}
		}

		[Token(Token = "0x17000573")]
		public bool IsTransformSpacePermanent
		{
			[Token(Token = "0x6001E63")]
			[Address(RVA = "0x10FCB90", Offset = "0x10FCB90", VA = "0x10FCB90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000574")]
		public Channels TransformChannelFlags
		{
			[Token(Token = "0x6001E64")]
			[Address(RVA = "0x10FCB98", Offset = "0x10FCB98", VA = "0x10FCB98")]
			get
			{
				return default(Channels);
			}
		}

		[Token(Token = "0x17000575")]
		public bool CanAffectPosition
		{
			[Token(Token = "0x6001E65")]
			[Address(RVA = "0x10FCBA0", Offset = "0x10FCBA0", VA = "0x10FCBA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000576")]
		public bool CanAffectRotation
		{
			[Token(Token = "0x6001E66")]
			[Address(RVA = "0x10FCBAC", Offset = "0x10FCBAC", VA = "0x10FCBAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000577")]
		public bool CanAffectScale
		{
			[Token(Token = "0x6001E67")]
			[Address(RVA = "0x10FCBB8", Offset = "0x10FCBB8", VA = "0x10FCBB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000578")]
		public Vector3 CustomWorldPivot
		{
			[Token(Token = "0x6001E68")]
			[Address(RVA = "0x10FCBC4", Offset = "0x10FCBC4", VA = "0x10FCBC4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000579")]
		public ObjectTransformGizmoSettings Settings
		{
			[Token(Token = "0x6001E69")]
			[Address(RVA = "0x10FCBD0", Offset = "0x10FCBD0", VA = "0x10FCBD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057A")]
		public ObjectTransformGizmoSettings SharedSettings
		{
			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0x10FCBEC", Offset = "0x10FCBEC", VA = "0x10FCBEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E6B")]
			[Address(RVA = "0x10FCBF4", Offset = "0x10FCBF4", VA = "0x10FCBF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700057B")]
		public bool ScaleConstraintEnabled
		{
			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0x10FCBFC", Offset = "0x10FCBFC", VA = "0x10FCBFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E6D")]
			[Address(RVA = "0x10FCC04", Offset = "0x10FCC04", VA = "0x10FCC04")]
			set
			{
			}
		}

		[Token(Token = "0x1700057C")]
		public Vector3 MinPositiveScale
		{
			[Token(Token = "0x6001E6E")]
			[Address(RVA = "0x10FCC10", Offset = "0x10FCC10", VA = "0x10FCC10")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E6F")]
			[Address(RVA = "0x10FCC1C", Offset = "0x10FCC1C", VA = "0x10FCC1C")]
			set
			{
			}
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x10FCC78", Offset = "0x10FCC78", VA = "0x10FCC78", Slot = "26")]
		public override void OnAttached()
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x10FCDB0", Offset = "0x10FCDB0", VA = "0x10FCDB0", Slot = "27")]
		public override void OnDetached()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0x10FCEE8", Offset = "0x10FCEE8", VA = "0x10FCEE8")]
		public void MakeTransformSpacePermanent()
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0x10FCEF4", Offset = "0x10FCEF4", VA = "0x10FCEF4")]
		public void MakeTransformPivotPermanent()
		{
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0x10FCF00", Offset = "0x10FCF00", VA = "0x10FCF00")]
		public bool ContainsRestrictionsForObject(GameObject targetObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0x10FCFAC", Offset = "0x10FCFAC", VA = "0x10FCFAC")]
		public void RegisterObjectRestrictions(GameObject targetObject, ObjectRestrictions restrictions)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0x10FD034", Offset = "0x10FD034", VA = "0x10FD034")]
		public void RegisterObjectRestrictions(List<GameObject> targetObjects, ObjectRestrictions restrictions)
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x10FD178", Offset = "0x10FD178", VA = "0x10FD178")]
		public void UnregisterObjectRestrictions(GameObject targetObject)
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x10FD1EC", Offset = "0x10FD1EC", VA = "0x10FD1EC")]
		public ObjectRestrictions GetObjectRestrictions(GameObject targetObject)
		{
			return null;
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x10FD264", Offset = "0x10FD264", VA = "0x10FD264")]
		public void SetTransformChannelFlags(Channels flags)
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x10FD29C", Offset = "0x10FD29C", VA = "0x10FD29C")]
		public void SetCanAffectPosition(bool affectPosition)
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x10FD2E8", Offset = "0x10FD2E8", VA = "0x10FD2E8")]
		public void SetCanAffectRotation(bool affectRotation)
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x10FD334", Offset = "0x10FD334", VA = "0x10FD334")]
		public void SetCanAffectScale(bool affectScale)
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x10FD380", Offset = "0x10FD380", VA = "0x10FD380")]
		public void SetTargetPivotObject(GameObject targetPivotObject)
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x10FD400", Offset = "0x10FD400", VA = "0x10FD400")]
		public void SetTargetObjects(IEnumerable<GameObject> targetObjects)
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0x10FD460", Offset = "0x10FD460", VA = "0x10FD460")]
		public void SetTargetObject(GameObject targetObject)
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0x10FD5A8", Offset = "0x10FD5A8", VA = "0x10FD5A8")]
		public void SetTransformPivot(GizmoObjectTransformPivot transformPivot)
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0x10FD858", Offset = "0x10FD858", VA = "0x10FD858")]
		public void SetCustomWorldPivot(Vector3 pivot)
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0x10FD8B8", Offset = "0x10FD8B8", VA = "0x10FD8B8")]
		public void SetObjectCustomLocalPivot(GameObject gameObj, Vector3 pivot)
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0x10FDA10", Offset = "0x10FDA10", VA = "0x10FDA10")]
		public Vector3 GetObjectCustomLocalPivot(GameObject gameObj)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0x10FDB44", Offset = "0x10FDB44", VA = "0x10FDB44")]
		public void SetTransformSpace(GizmoSpace transformSpace)
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0x10FDCA4", Offset = "0x10FDCA4", VA = "0x10FDCA4")]
		public AABB GetTargetObjectGroupWorldAABB()
		{
			return default(AABB);
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0x10FE16C", Offset = "0x10FE16C", VA = "0x10FE16C")]
		public int GetNumTransformableParentObjects()
		{
			return default(int);
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x10FD5F8", Offset = "0x10FD5F8", VA = "0x10FD5F8")]
		public void RefreshPosition()
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x10FDB94", Offset = "0x10FDB94", VA = "0x10FDB94")]
		public void RefreshRotation()
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x10FD3E8", Offset = "0x10FD3E8", VA = "0x10FD3E8")]
		public void RefreshPositionAndRotation()
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x10FE548", Offset = "0x10FE548", VA = "0x10FE548", Slot = "35")]
		public override void OnGizmoDragBegin(int handleId)
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x10FE5B0", Offset = "0x10FE5B0", VA = "0x10FE5B0", Slot = "36")]
		public override void OnGizmoDragUpdate(int handleId)
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x10FF230", Offset = "0x10FF230", VA = "0x10FF230", Slot = "37")]
		public override void OnGizmoDragEnd(int handleId)
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x10FE1B8", Offset = "0x10FE1B8", VA = "0x10FE1B8")]
		private List<GameObject> GetTransformableParentObjects()
		{
			return null;
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x10FF3A0", Offset = "0x10FF3A0", VA = "0x10FF3A0")]
		private void OnUndoRedoEnd(IUndoRedoAction action)
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x10FE660", Offset = "0x10FE660", VA = "0x10FE660")]
		private void MoveObjects(Vector3 moveVector)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x10FF42C", Offset = "0x10FF42C", VA = "0x10FF42C")]
		private void MoveObject(GameObject gameObject, Vector3 moveVector)
		{
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x10FE7B8", Offset = "0x10FE7B8", VA = "0x10FE7B8")]
		private void RotateObjects(Quaternion rotation)
		{
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x10FF698", Offset = "0x10FF698", VA = "0x10FF698")]
		private void RotateObject(GameObject gameObject, Quaternion rotation, Vector3 rotationPivot)
		{
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x10FED38", Offset = "0x10FED38", VA = "0x10FED38")]
		private void ScaleObjects()
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x10FF828", Offset = "0x10FF828", VA = "0x10FF828")]
		private void ScaleObject(GameObject gameObject, Vector3 scalePivot)
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x10FE0A4", Offset = "0x10FE0A4", VA = "0x10FE0A4")]
		private ObjectBounds.QueryConfig GetObjectBoundsQConfig()
		{
			return default(ObjectBounds.QueryConfig);
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x10FFAE8", Offset = "0x10FFAE8", VA = "0x10FFAE8")]
		public ObjectTransformGizmo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004ED")]
	public class ObjectTransformGizmoSettings : Settings
	{
		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int _transformableLayers;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<GameObject> _nonTransformableObjects;

		[Token(Token = "0x1700057D")]
		public int TransformableLayers
		{
			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0x10FFFBC", Offset = "0x10FFFBC", VA = "0x10FFFBC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0x10FFFC4", Offset = "0x10FFFC4", VA = "0x10FFFC4")]
			set
			{
			}
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x10FF2E8", Offset = "0x10FF2E8", VA = "0x10FF2E8")]
		public bool IsLayerTransformable(int objectLayer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x10FFFCC", Offset = "0x10FFFCC", VA = "0x10FFFCC")]
		public void SetLayerTransformable(int objectLayer, bool isTransformable)
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x10FF2F4", Offset = "0x10FF2F4", VA = "0x10FF2F4")]
		public bool IsObjectTransformable(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x10FFFFC", Offset = "0x10FFFFC", VA = "0x10FFFFC")]
		public void SetObjectTransformable(GameObject gameObject, bool isTransformable)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x11000D8", Offset = "0x11000D8", VA = "0x11000D8")]
		public void SetObjectCollectionTransformable(List<GameObject> gameObjectCollection, bool areTransformable)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x10FFC10", Offset = "0x10FFC10", VA = "0x10FFC10")]
		public ObjectTransformGizmoSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004EE")]
	public class RotationGizmo : GizmoBehaviour
	{
		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GizmoPlaneSlider3D _xSlider;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GizmoPlaneSlider3D _ySlider;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GizmoPlaneSlider3D _zSlider;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GizmoPlaneSlider3DCollection _axesSliders;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GizmoCap3D _midCap;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GizmoDblAxisRotationDrag3D _camXYRotationDrag;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GizmoPlaneSlider2D _camLookSlider;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private RotationGizmoHotkeys _hotkeys;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private RotationGizmoSettings3D _settings3D;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RotationGizmoLookAndFeel3D _lookAndFeel3D;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool _useSnapEnableHotkey;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RotationGizmoHotkeys _sharedHotkeys;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RotationGizmoSettings3D _sharedSettings3D;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RotationGizmoLookAndFeel3D _sharedLookAndFeel3D;

		[Token(Token = "0x1700057E")]
		public RotationGizmoSettings3D Settings3D
		{
			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0x1100220", Offset = "0x1100220", VA = "0x1100220")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700057F")]
		public RotationGizmoLookAndFeel3D LookAndFeel3D
		{
			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0x110023C", Offset = "0x110023C", VA = "0x110023C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000580")]
		public RotationGizmoHotkeys Hotkeys
		{
			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0x1100258", Offset = "0x1100258", VA = "0x1100258")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000581")]
		public RotationGizmoSettings3D SharedSettings3D
		{
			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0x1100274", Offset = "0x1100274", VA = "0x1100274")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0x110027C", Offset = "0x110027C", VA = "0x110027C")]
			set
			{
			}
		}

		[Token(Token = "0x17000582")]
		public RotationGizmoLookAndFeel3D SharedLookAndFeel3D
		{
			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0x1100350", Offset = "0x1100350", VA = "0x1100350")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0x1100358", Offset = "0x1100358", VA = "0x1100358")]
			set
			{
			}
		}

		[Token(Token = "0x17000583")]
		public RotationGizmoHotkeys SharedHotkeys
		{
			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0x1100460", Offset = "0x1100460", VA = "0x1100460")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0x1100468", Offset = "0x1100468", VA = "0x1100468")]
			set
			{
			}
		}

		[Token(Token = "0x17000584")]
		public bool UseSnapEnableHotkey
		{
			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0x1100470", Offset = "0x1100470", VA = "0x1100470")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0x1100478", Offset = "0x1100478", VA = "0x1100478")]
			set
			{
			}
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x1100484", Offset = "0x1100484", VA = "0x1100484")]
		public float GetZoomFactor(Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0x1100580", Offset = "0x1100580", VA = "0x1100580")]
		public float GetZoomFactor(Vector3 position, Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x110064C", Offset = "0x110064C", VA = "0x110064C")]
		public bool OwnsHandle(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x11006A0", Offset = "0x11006A0", VA = "0x11006A0")]
		public void SetMidCapHoverable(bool hoverable)
		{
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x11006C0", Offset = "0x11006C0", VA = "0x11006C0")]
		public void SetSnapEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x110071C", Offset = "0x110071C", VA = "0x110071C", Slot = "28")]
		public override void OnGizmoEnabled()
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x110072C", Offset = "0x110072C", VA = "0x110072C", Slot = "27")]
		public override void OnDetached()
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0x11007C0", Offset = "0x11007C0", VA = "0x11007C0", Slot = "30")]
		public override void OnEnabled()
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x1100854", Offset = "0x1100854", VA = "0x1100854", Slot = "31")]
		public override void OnDisabled()
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x11008E8", Offset = "0x11008E8", VA = "0x11008E8", Slot = "26")]
		public override void OnAttached()
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x1100C64", Offset = "0x1100C64", VA = "0x1100C64", Slot = "40")]
		public override void OnGizmoUpdateBegin()
		{
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x1100F58", Offset = "0x1100F58", VA = "0x1100F58", Slot = "43")]
		public override void OnGizmoRender(Camera camera)
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x11010B0", Offset = "0x11010B0", VA = "0x11010B0", Slot = "34")]
		public override void OnGizmoAttemptHandleDragBegin(int handleId)
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x1100EA0", Offset = "0x1100EA0", VA = "0x1100EA0")]
		private void UpdateCamLookSlider(Camera camera)
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0x1100374", Offset = "0x1100374", VA = "0x1100374")]
		private void SetupSharedLookAndFeel()
		{
		}

		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x1100298", Offset = "0x1100298", VA = "0x1100298")]
		private void SetupSharedSettings()
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x110136C", Offset = "0x110136C", VA = "0x110136C")]
		private void OnGizmoTransformChanged(GizmoTransform gizmoTransform, GizmoTransform.ChangeData changeData)
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x11013B8", Offset = "0x11013B8", VA = "0x11013B8")]
		public RotationGizmo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004EF")]
	public class RotationGizmoHotkeys : Settings
	{
		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Hotkeys _enableSnapping;

		[Token(Token = "0x17000585")]
		public Hotkeys EnableSnapping
		{
			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0x1101A9C", Offset = "0x1101A9C", VA = "0x1101A9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x1101518", Offset = "0x1101518", VA = "0x1101518")]
		public RotationGizmoHotkeys()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F0")]
	public class RotationGizmoLookAndFeel3D : Settings
	{
		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool _isMidCapVisible;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GizmoCap3DLookAndFeel _midCapLookAndFeel;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool[] _axesVis;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GizmoPlaneSlider3DLookAndFeel[] _axesLookAndFeel;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool _isCamLookSliderVisible;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _camLookSliderRadiusOffset;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GizmoPlaneSlider2DLookAndFeel _camLookSliderLookAndFeel;

		[Token(Token = "0x17000586")]
		public float Scale
		{
			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0x1101AA4", Offset = "0x1101AA4", VA = "0x1101AA4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000587")]
		public float Radius
		{
			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0x1101AC0", Offset = "0x1101AC0", VA = "0x1101AC0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000588")]
		public bool UseZoomFactor
		{
			[Token(Token = "0x6001ECB")]
			[Address(RVA = "0x1100564", Offset = "0x1100564", VA = "0x1100564")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000589")]
		public Color XBorderColor
		{
			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0x1101ADC", Offset = "0x1101ADC", VA = "0x1101ADC")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700058A")]
		public Color YBorderColor
		{
			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0x1101B10", Offset = "0x1101B10", VA = "0x1101B10")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700058B")]
		public Color ZBorderColor
		{
			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0x1101B48", Offset = "0x1101B48", VA = "0x1101B48")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700058C")]
		public Color HoveredColor
		{
			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0x1101B80", Offset = "0x1101B80", VA = "0x1101B80")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700058D")]
		public float AxisTorusThickness
		{
			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0x1101BB4", Offset = "0x1101BB4", VA = "0x1101BB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700058E")]
		public float AxisCylTorusWidth
		{
			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0x1101BE4", Offset = "0x1101BE4", VA = "0x1101BE4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700058F")]
		public float AxisCylTorusHeight
		{
			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0x1101C14", Offset = "0x1101C14", VA = "0x1101C14")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000590")]
		public float AxisCullAlphaScale
		{
			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0x1101C44", Offset = "0x1101C44", VA = "0x1101C44")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000591")]
		public GizmoShadeMode ShadeMode
		{
			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0x1101C74", Offset = "0x1101C74", VA = "0x1101C74")]
			get
			{
				return default(GizmoShadeMode);
			}
		}

		[Token(Token = "0x17000592")]
		public GizmoCircle3DBorderType AxisBorderType
		{
			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0x1101C90", Offset = "0x1101C90", VA = "0x1101C90")]
			get
			{
				return default(GizmoCircle3DBorderType);
			}
		}

		[Token(Token = "0x17000593")]
		public GizmoFillMode3D AxisBorderFillMode
		{
			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0x1101CC0", Offset = "0x1101CC0", VA = "0x1101CC0")]
			get
			{
				return default(GizmoFillMode3D);
			}
		}

		[Token(Token = "0x17000594")]
		public int NumAxisTorusWireAxialSlices
		{
			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0x1101CF0", Offset = "0x1101CF0", VA = "0x1101CF0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000595")]
		public Color RotationArcColor
		{
			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0x1101D20", Offset = "0x1101D20", VA = "0x1101D20")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000596")]
		public Color RotationArcBorderColor
		{
			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0x1101D5C", Offset = "0x1101D5C", VA = "0x1101D5C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000597")]
		public bool UseShortestRotationArc
		{
			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0x1101D98", Offset = "0x1101D98", VA = "0x1101D98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000598")]
		public bool IsRotationArcVisible
		{
			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0x1101DD0", Offset = "0x1101DD0", VA = "0x1101DD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000599")]
		public Color MidCapColor
		{
			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0x1101E00", Offset = "0x1101E00", VA = "0x1101E00")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700059A")]
		public Color MidCapBorderColor
		{
			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0x1101E20", Offset = "0x1101E20", VA = "0x1101E20")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700059B")]
		public Color HoveredMidCapColor
		{
			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0x1101E40", Offset = "0x1101E40", VA = "0x1101E40")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700059C")]
		public bool IsMidCapVisible
		{
			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0x1101E60", Offset = "0x1101E60", VA = "0x1101E60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700059D")]
		public bool IsMidCapBorderVisible
		{
			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0x1101E68", Offset = "0x1101E68", VA = "0x1101E68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700059E")]
		public float CamLookSliderRadiusOffset
		{
			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0x1101E84", Offset = "0x1101E84", VA = "0x1101E84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700059F")]
		public Color CamLookSliderBorderColor
		{
			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0x1101E8C", Offset = "0x1101E8C", VA = "0x1101E8C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170005A0")]
		public Color CamLookSliderHoveredBorderColor
		{
			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0x1101EAC", Offset = "0x1101EAC", VA = "0x1101EAC")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170005A1")]
		public GizmoPolygon2DBorderType CamLookSliderPolyBorderType
		{
			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0x1101ECC", Offset = "0x1101ECC", VA = "0x1101ECC")]
			get
			{
				return default(GizmoPolygon2DBorderType);
			}
		}

		[Token(Token = "0x170005A2")]
		public float CamLookSliderPolyBorderThickness
		{
			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0x1101EE8", Offset = "0x1101EE8", VA = "0x1101EE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005A3")]
		public bool IsCamLookSliderVisible
		{
			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0x1101F04", Offset = "0x1101F04", VA = "0x1101F04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x1101758", Offset = "0x1101758", VA = "0x1101758")]
		public RotationGizmoLookAndFeel3D()
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x1100E70", Offset = "0x1100E70", VA = "0x1100E70")]
		public bool IsAxisVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x1101F0C", Offset = "0x1101F0C", VA = "0x1101F0C")]
		public void SetAxisVisible(int axisIndex, bool isVisible)
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x11021A4", Offset = "0x11021A4", VA = "0x11021A4")]
		public void SetShadeMode(GizmoShadeMode shadeMode)
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x11021F8", Offset = "0x11021F8", VA = "0x11021F8")]
		public void SetAxisBorderFillMode(GizmoFillMode3D fillMode)
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x110213C", Offset = "0x110213C", VA = "0x110213C")]
		public void SetNumAxisTorusWireAxialSlices(int numSlices)
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x110223C", Offset = "0x110223C", VA = "0x110223C")]
		public void SetUseZoomFactor(bool useZoomFactor)
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x1102290", Offset = "0x1102290", VA = "0x1102290")]
		public void SetScale(float scale)
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x1101FC0", Offset = "0x1101FC0", VA = "0x1101FC0")]
		public void SetRadius(float radius)
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x1102314", Offset = "0x1102314", VA = "0x1102314")]
		public void SetAxisBorderCullAlphaScale(float scale)
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x1102384", Offset = "0x1102384", VA = "0x1102384")]
		public void SetAxisBorderType(GizmoCircle3DBorderType borderType)
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x11023C8", Offset = "0x11023C8", VA = "0x11023C8")]
		public void SetAxisTorusThickness(float thickness)
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x1102438", Offset = "0x1102438", VA = "0x1102438")]
		public void SetAxisCylTorusWidth(float width)
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x11024A8", Offset = "0x11024A8", VA = "0x11024A8")]
		public void SetAxisCylTorusHeight(float height)
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x1102518", Offset = "0x1102518", VA = "0x1102518")]
		public void SetMidCapVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x1101F40", Offset = "0x1101F40", VA = "0x1101F40")]
		public void SetMidCapColor(Color color)
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x1101F60", Offset = "0x1101F60", VA = "0x1101F60")]
		public void SetHoveredMidCapColor(Color color)
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x1101F80", Offset = "0x1101F80", VA = "0x1101F80")]
		public void SetMidCapBorderVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x1101FA0", Offset = "0x1101FA0", VA = "0x1101FA0")]
		public void SetMidCapBorderColor(Color color)
		{
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x1102044", Offset = "0x1102044", VA = "0x1102044")]
		public void SetAxisBorderColor(int axisIndex, Color color)
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x1102080", Offset = "0x1102080", VA = "0x1102080")]
		public void SetHoveredColor(Color hoveredColor)
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x1102524", Offset = "0x1102524", VA = "0x1102524")]
		public void SetRotationArcColor(Color color)
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x110259C", Offset = "0x110259C", VA = "0x110259C")]
		public void SetRotationArcBorderColor(Color color)
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x1102614", Offset = "0x1102614", VA = "0x1102614")]
		public void SetUseShortestRotationArc(bool useShortest)
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x1102678", Offset = "0x1102678", VA = "0x1102678")]
		public void SetRotationArcVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x11026CC", Offset = "0x11026CC", VA = "0x11026CC")]
		public void SetCamLookSliderRadiusOffset(float offset)
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x11020FC", Offset = "0x11020FC", VA = "0x11020FC")]
		public void SetCamLookSliderBorderColor(Color color)
		{
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x110211C", Offset = "0x110211C", VA = "0x110211C")]
		public void SetCamLookSliderHoveredBorderColor(Color color)
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x11026DC", Offset = "0x11026DC", VA = "0x11026DC")]
		public void SetCamLookSliderVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x11026E8", Offset = "0x11026E8", VA = "0x11026E8")]
		public void SetCamLookSliderPolyBorderType(GizmoPolygon2DBorderType polyBorderType)
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x11020E0", Offset = "0x11020E0", VA = "0x11020E0")]
		public void SetCamLookSliderPolyBorderThickness(float thickness)
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x1101288", Offset = "0x1101288", VA = "0x1101288")]
		public void ConnectSliderLookAndFeel(GizmoPlaneSlider3D slider, int axisIndex)
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x11012E8", Offset = "0x11012E8", VA = "0x11012E8")]
		public void ConnectMidCapLookAndFeel(GizmoCap3D cap)
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x11012C4", Offset = "0x11012C4", VA = "0x11012C4")]
		public void ConnectCamLookSliderLookAndFeel(GizmoPlaneSlider2D slider)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F1")]
	public class RotationGizmoSettings3D : Settings
	{
		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _camRightSnapStep;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _camUpSnapStep;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GizmoPlaneSlider3DSettings[] _sliderSettings;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GizmoPlaneSlider2DSettings _camLookSliderSettings;

		[Token(Token = "0x170005A4")]
		public float AxisLineHoverEps
		{
			[Token(Token = "0x6001F09")]
			[Address(RVA = "0x1102704", Offset = "0x1102704", VA = "0x1102704")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005A5")]
		public float AxisTorusHoverEps
		{
			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0x1102734", Offset = "0x1102734", VA = "0x1102734")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005A6")]
		public float CamLookLineHoverEps
		{
			[Token(Token = "0x6001F0B")]
			[Address(RVA = "0x1102764", Offset = "0x1102764", VA = "0x1102764")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005A7")]
		public float CamLookThickHoverEps
		{
			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0x1102780", Offset = "0x1102780", VA = "0x1102780")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005A8")]
		public bool CanHoverCulledPixels
		{
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0x110279C", Offset = "0x110279C", VA = "0x110279C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005A9")]
		public GizmoSnapMode SnapMode
		{
			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0x1101258", Offset = "0x1101258", VA = "0x1101258")]
			get
			{
				return default(GizmoSnapMode);
			}
		}

		[Token(Token = "0x170005AA")]
		public float XSnapStep
		{
			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0x11027D4", Offset = "0x11027D4", VA = "0x11027D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005AB")]
		public float YSnapStep
		{
			[Token(Token = "0x6001F10")]
			[Address(RVA = "0x1102804", Offset = "0x1102804", VA = "0x1102804")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005AC")]
		public float ZSnapStep
		{
			[Token(Token = "0x6001F11")]
			[Address(RVA = "0x1102838", Offset = "0x1102838", VA = "0x1102838")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005AD")]
		public float CamRightSnapStep
		{
			[Token(Token = "0x6001F12")]
			[Address(RVA = "0x110286C", Offset = "0x110286C", VA = "0x110286C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005AE")]
		public float CamUpSnapStep
		{
			[Token(Token = "0x6001F13")]
			[Address(RVA = "0x1102874", Offset = "0x1102874", VA = "0x1102874")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005AF")]
		public float CamLookSnapStep
		{
			[Token(Token = "0x6001F14")]
			[Address(RVA = "0x110287C", Offset = "0x110287C", VA = "0x110287C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005B0")]
		public float DragSensitivity
		{
			[Token(Token = "0x6001F15")]
			[Address(RVA = "0x1100E40", Offset = "0x1100E40", VA = "0x1100E40")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0x11015C0", Offset = "0x11015C0", VA = "0x11015C0")]
		public RotationGizmoSettings3D()
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x11028B4", Offset = "0x11028B4", VA = "0x11028B4")]
		public void SetCanHoverCulledPixels(bool canHover)
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x1102970", Offset = "0x1102970", VA = "0x1102970")]
		public void SetAxisLineHoverEps(float eps)
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x1102900", Offset = "0x1102900", VA = "0x1102900")]
		public void SetAxisTorusHoverEps(float eps)
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x1102898", Offset = "0x1102898", VA = "0x1102898")]
		public void SetCamLookLineHoverEps(float eps)
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x11029E0", Offset = "0x11029E0", VA = "0x11029E0")]
		public void SetCamLookThickHoverEps(float eps)
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x11029FC", Offset = "0x11029FC", VA = "0x11029FC")]
		public void SetAxisSnapStep(int axisIndex, float snapStep)
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x1102A34", Offset = "0x1102A34", VA = "0x1102A34")]
		public void SetCamRightSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0x1102A48", Offset = "0x1102A48", VA = "0x1102A48")]
		public void SetCamUpSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x1102A5C", Offset = "0x1102A5C", VA = "0x1102A5C")]
		public void SetCamLookSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0x1102A78", Offset = "0x1102A78", VA = "0x1102A78")]
		public void SetSnapMode(GizmoSnapMode snapMode)
		{
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x1102AC8", Offset = "0x1102AC8", VA = "0x1102AC8")]
		public void SetDragSensitivity(float sensitivity)
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x110130C", Offset = "0x110130C", VA = "0x110130C")]
		public void ConnectSliderSettings(GizmoPlaneSlider3D slider, int axisIndex)
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0x1101348", Offset = "0x1101348", VA = "0x1101348")]
		public void ConnectCamLookSliderSettings(GizmoPlaneSlider2D slider)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F2")]
	public class ScaleGizmo : GizmoBehaviour
	{
		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GizmoLineSlider3D _pstvXSlider;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GizmoLineSlider3D _pstvYSlider;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GizmoLineSlider3D _pstvZSlider;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GizmoLineSlider3D _negXSlider;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GizmoLineSlider3D _negYSlider;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GizmoLineSlider3D _negZSlider;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GizmoLineSlider3DCollection _axesSliders;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GizmoMultiAxisScaleMode _multiAxisScaleMode;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GizmoPlaneSlider3D _xySlider;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GizmoPlaneSlider3D _yzSlider;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GizmoPlaneSlider3D _zxSlider;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GizmoPlaneSlider3DCollection _dblSliders;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GizmoCap3D _midCap;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GizmoUniformScaleDrag3D _unformScaleDrag;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GizmoScaleGuide _scaleGuide;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private IEnumerable<GameObject> _scaleGuideTargetObjects;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ScaleGizmoLookAndFeel3D _lookAndFeel3D;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private ScaleGizmoSettings3D _settings3D;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private ScaleGizmoHotkeys _hotkeys;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private bool _useSnapEnableHotkey;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		[SerializeField]
		private bool _useMultiAxisScaleModeHotkey;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ScaleGizmoLookAndFeel3D _sharedLookAndFeel3D;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ScaleGizmoSettings3D _sharedSettings3D;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ScaleGizmoHotkeys _sharedHotkeys;

		[Token(Token = "0x170005B1")]
		public GizmoMultiAxisScaleMode MultiAxisScaleMode
		{
			[Token(Token = "0x6001F24")]
			[Address(RVA = "0x1102B4C", Offset = "0x1102B4C", VA = "0x1102B4C")]
			get
			{
				return default(GizmoMultiAxisScaleMode);
			}
		}

		[Token(Token = "0x170005B2")]
		public ScaleGizmoLookAndFeel3D LookAndFeel3D
		{
			[Token(Token = "0x6001F25")]
			[Address(RVA = "0x1102B54", Offset = "0x1102B54", VA = "0x1102B54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B3")]
		public ScaleGizmoSettings3D Settings3D
		{
			[Token(Token = "0x6001F26")]
			[Address(RVA = "0x1102B70", Offset = "0x1102B70", VA = "0x1102B70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B4")]
		public ScaleGizmoHotkeys Hotkeys
		{
			[Token(Token = "0x6001F27")]
			[Address(RVA = "0x1102B8C", Offset = "0x1102B8C", VA = "0x1102B8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005B5")]
		public ScaleGizmoHotkeys SharedHotkeys
		{
			[Token(Token = "0x6001F28")]
			[Address(RVA = "0x1102BA8", Offset = "0x1102BA8", VA = "0x1102BA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F29")]
			[Address(RVA = "0x1102BB0", Offset = "0x1102BB0", VA = "0x1102BB0")]
			set
			{
			}
		}

		[Token(Token = "0x170005B6")]
		public ScaleGizmoSettings3D SharedSettings3D
		{
			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0x1102BF0", Offset = "0x1102BF0", VA = "0x1102BF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0x1102BF8", Offset = "0x1102BF8", VA = "0x1102BF8")]
			set
			{
			}
		}

		[Token(Token = "0x170005B7")]
		public ScaleGizmoLookAndFeel3D SharedLookAndFeel3D
		{
			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0x1102DA4", Offset = "0x1102DA4", VA = "0x1102DA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0x1102DAC", Offset = "0x1102DAC", VA = "0x1102DAC")]
			set
			{
			}
		}

		[Token(Token = "0x170005B8")]
		public bool UseSnapEnableHotkey
		{
			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0x1102FC0", Offset = "0x1102FC0", VA = "0x1102FC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0x1102FC8", Offset = "0x1102FC8", VA = "0x1102FC8")]
			set
			{
			}
		}

		[Token(Token = "0x170005B9")]
		public bool UseMultiAxisScaleModeHotkey
		{
			[Token(Token = "0x6001F30")]
			[Address(RVA = "0x1102FD4", Offset = "0x1102FD4", VA = "0x1102FD4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F31")]
			[Address(RVA = "0x1102FDC", Offset = "0x1102FDC", VA = "0x1102FDC")]
			set
			{
			}
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x1102FE8", Offset = "0x1102FE8", VA = "0x1102FE8")]
		public float GetZoomFactor(Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x11030E4", Offset = "0x11030E4", VA = "0x11030E4")]
		public float GetZoomFactor(Vector3 position, Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x11031B0", Offset = "0x11031B0", VA = "0x11031B0")]
		public bool OwnsHandle(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x1103234", Offset = "0x1103234", VA = "0x1103234")]
		public void SetAxesLinesHoverable(bool hoverable)
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x11032D4", Offset = "0x11032D4", VA = "0x11032D4")]
		public void SetSnapEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x1103324", Offset = "0x1103324", VA = "0x1103324")]
		public void SetMultiAxisScaleMode(GizmoMultiAxisScaleMode scaleMode)
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x11033D0", Offset = "0x11033D0", VA = "0x11033D0")]
		public void SetScaleGuideTargetObjects(IEnumerable<GameObject> targetObjects)
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x11033D8", Offset = "0x11033D8", VA = "0x11033D8", Slot = "28")]
		public override void OnGizmoEnabled()
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x11033E8", Offset = "0x11033E8", VA = "0x11033E8", Slot = "26")]
		public override void OnAttached()
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x1103C94", Offset = "0x1103C94", VA = "0x1103C94", Slot = "40")]
		public override void OnGizmoUpdateBegin()
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x1104340", Offset = "0x1104340", VA = "0x1104340", Slot = "43")]
		public override void OnGizmoRender(Camera camera)
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x1104678", Offset = "0x1104678", VA = "0x1104678", Slot = "34")]
		public override void OnGizmoAttemptHandleDragBegin(int handleId)
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x1104284", Offset = "0x1104284", VA = "0x1104284")]
		private void PlaceDblSlidersInSliderPlanes(Camera camera)
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x1102DC8", Offset = "0x1102DC8", VA = "0x1102DC8")]
		private void SetupSharedLookAndFeel()
		{
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x1102C14", Offset = "0x1102C14", VA = "0x1102C14")]
		private void SetupSharedSettings()
		{
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x1104894", Offset = "0x1104894", VA = "0x1104894")]
		public ScaleGizmo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F3")]
	public class ScaleGizmoHotkeys : Settings
	{
		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Hotkeys _enableSnapping;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Hotkeys _changeMultiAxisMode;

		[Token(Token = "0x170005BA")]
		public Hotkeys EnableSnapping
		{
			[Token(Token = "0x6001F42")]
			[Address(RVA = "0x110528C", Offset = "0x110528C", VA = "0x110528C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005BB")]
		public Hotkeys ChangeMultiAxisMode
		{
			[Token(Token = "0x6001F43")]
			[Address(RVA = "0x1105294", Offset = "0x1105294", VA = "0x1105294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x1105184", Offset = "0x1105184", VA = "0x1105184")]
		public ScaleGizmoHotkeys()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F4")]
	public class ScaleGizmoLookAndFeel3D : Settings
	{
		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GizmoCap3DLookAndFeel _midCapLookAndFeel;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool[] _sglSliderVis;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool[] _sglSliderCapVis;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool[] _dblSliderVis;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GizmoScaleGuideLookAndFeel _scaleGuideLookAndFeel;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool _isScaleGuideVisible;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GizmoLineSlider3DLookAndFeel[] _sglSlidersLookAndFeel;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GizmoPlaneSlider3DLookAndFeel[] _dblSlidersLookAndFeel;

		[Token(Token = "0x170005BC")]
		public float Scale
		{
			[Token(Token = "0x6001F45")]
			[Address(RVA = "0x110529C", Offset = "0x110529C", VA = "0x110529C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005BD")]
		public bool UseZoomFactor
		{
			[Token(Token = "0x6001F46")]
			[Address(RVA = "0x11030C8", Offset = "0x11030C8", VA = "0x11030C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005BE")]
		public float SliderLength
		{
			[Token(Token = "0x6001F47")]
			[Address(RVA = "0x11052B8", Offset = "0x11052B8", VA = "0x11052B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005BF")]
		public float BoxSliderHeight
		{
			[Token(Token = "0x6001F48")]
			[Address(RVA = "0x11052E8", Offset = "0x11052E8", VA = "0x11052E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005C0")]
		public float BoxSliderDepth
		{
			[Token(Token = "0x6001F49")]
			[Address(RVA = "0x1105318", Offset = "0x1105318", VA = "0x1105318")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005C1")]
		public float CylinderSliderRadius
		{
			[Token(Token = "0x6001F4A")]
			[Address(RVA = "0x1105348", Offset = "0x1105348", VA = "0x1105348")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005C2")]
		public float SliderBoxCapWidth
		{
			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0x1105378", Offset = "0x1105378", VA = "0x1105378")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005C3")]
		public float SliderBoxCapHeight
		{
			[Token(Token = "0x6001F4C")]
			[Address(RVA = "0x11053B0", Offset = "0x11053B0", VA = "0x11053B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005C4")]
		public float SliderBoxCapDepth
		{
			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0x11053E8", Offset = "0x11053E8", VA = "0x11053E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005C5")]
		public float SliderConeCapHeight
		{
			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0x1105420", Offset = "0x1105420", VA = "0x1105420")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005C6")]
		public float SliderConeCapBaseRadius
		{
			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0x1105458", Offset = "0x1105458", VA = "0x1105458")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005C7")]
		public float SliderPyramidCapWidth
		{
			[Token(Token = "0x6001F50")]
			[Address(RVA = "0x1105490", Offset = "0x1105490", VA = "0x1105490")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005C8")]
		public float SliderPyramidCapHeight
		{
			[Token(Token = "0x6001F51")]
			[Address(RVA = "0x11054C8", Offset = "0x11054C8", VA = "0x11054C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005C9")]
		public float SliderPyramidCapDepth
		{
			[Token(Token = "0x6001F52")]
			[Address(RVA = "0x1105500", Offset = "0x1105500", VA = "0x1105500")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005CA")]
		public float SliderTriPrismCapWidth
		{
			[Token(Token = "0x6001F53")]
			[Address(RVA = "0x1105538", Offset = "0x1105538", VA = "0x1105538")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005CB")]
		public float SliderTriPrismCapHeight
		{
			[Token(Token = "0x6001F54")]
			[Address(RVA = "0x1105570", Offset = "0x1105570", VA = "0x1105570")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005CC")]
		public float SliderTriPrismCapDepth
		{
			[Token(Token = "0x6001F55")]
			[Address(RVA = "0x11055A8", Offset = "0x11055A8", VA = "0x11055A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005CD")]
		public float SliderSphereCapRadius
		{
			[Token(Token = "0x6001F56")]
			[Address(RVA = "0x11055E0", Offset = "0x11055E0", VA = "0x11055E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005CE")]
		public GizmoFillMode3D SliderFillMode
		{
			[Token(Token = "0x6001F57")]
			[Address(RVA = "0x1105618", Offset = "0x1105618", VA = "0x1105618")]
			get
			{
				return default(GizmoFillMode3D);
			}
		}

		[Token(Token = "0x170005CF")]
		public GizmoFillMode3D SliderCapFillMode
		{
			[Token(Token = "0x6001F58")]
			[Address(RVA = "0x1105648", Offset = "0x1105648", VA = "0x1105648")]
			get
			{
				return default(GizmoFillMode3D);
			}
		}

		[Token(Token = "0x170005D0")]
		public GizmoCap3DType SliderCapType
		{
			[Token(Token = "0x6001F59")]
			[Address(RVA = "0x1105680", Offset = "0x1105680", VA = "0x1105680")]
			get
			{
				return default(GizmoCap3DType);
			}
		}

		[Token(Token = "0x170005D1")]
		public GizmoShadeMode SliderShadeMode
		{
			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0x11056B8", Offset = "0x11056B8", VA = "0x11056B8")]
			get
			{
				return default(GizmoShadeMode);
			}
		}

		[Token(Token = "0x170005D2")]
		public GizmoShadeMode SliderCapShadeMode
		{
			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0x11056E8", Offset = "0x11056E8", VA = "0x11056E8")]
			get
			{
				return default(GizmoShadeMode);
			}
		}

		[Token(Token = "0x170005D3")]
		public GizmoLine3DType SliderLineType
		{
			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0x1105720", Offset = "0x1105720", VA = "0x1105720")]
			get
			{
				return default(GizmoLine3DType);
			}
		}

		[Token(Token = "0x170005D4")]
		public Color XColor
		{
			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0x1105750", Offset = "0x1105750", VA = "0x1105750")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170005D5")]
		public Color YColor
		{
			[Token(Token = "0x6001F5E")]
			[Address(RVA = "0x11057C8", Offset = "0x11057C8", VA = "0x11057C8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170005D6")]
		public Color ZColor
		{
			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0x1105800", Offset = "0x1105800", VA = "0x1105800")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170005D7")]
		public float DblSliderSize
		{
			[Token(Token = "0x6001F60")]
			[Address(RVA = "0x1105838", Offset = "0x1105838", VA = "0x1105838")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005D8")]
		public float DblSliderFillAlpha
		{
			[Token(Token = "0x6001F61")]
			[Address(RVA = "0x1105868", Offset = "0x1105868", VA = "0x1105868")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005D9")]
		public float MidCapBoxWidth
		{
			[Token(Token = "0x6001F62")]
			[Address(RVA = "0x1105898", Offset = "0x1105898", VA = "0x1105898")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005DA")]
		public float MidCapBoxHeight
		{
			[Token(Token = "0x6001F63")]
			[Address(RVA = "0x11058B4", Offset = "0x11058B4", VA = "0x11058B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005DB")]
		public float MidCapBoxDepth
		{
			[Token(Token = "0x6001F64")]
			[Address(RVA = "0x11058D0", Offset = "0x11058D0", VA = "0x11058D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005DC")]
		public float MidCapSphereRadius
		{
			[Token(Token = "0x6001F65")]
			[Address(RVA = "0x11058EC", Offset = "0x11058EC", VA = "0x11058EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005DD")]
		public GizmoCap3DType MidCapType
		{
			[Token(Token = "0x6001F66")]
			[Address(RVA = "0x1105908", Offset = "0x1105908", VA = "0x1105908")]
			get
			{
				return default(GizmoCap3DType);
			}
		}

		[Token(Token = "0x170005DE")]
		public GizmoShadeMode MidCapShadeMode
		{
			[Token(Token = "0x6001F67")]
			[Address(RVA = "0x1105924", Offset = "0x1105924", VA = "0x1105924")]
			get
			{
				return default(GizmoShadeMode);
			}
		}

		[Token(Token = "0x170005DF")]
		public GizmoFillMode3D MidCapFillMode
		{
			[Token(Token = "0x6001F68")]
			[Address(RVA = "0x1105940", Offset = "0x1105940", VA = "0x1105940")]
			get
			{
				return default(GizmoFillMode3D);
			}
		}

		[Token(Token = "0x170005E0")]
		public Color MidCapColor
		{
			[Token(Token = "0x6001F69")]
			[Address(RVA = "0x110595C", Offset = "0x110595C", VA = "0x110595C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170005E1")]
		public Color HoveredColor
		{
			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0x110597C", Offset = "0x110597C", VA = "0x110597C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x170005E2")]
		public bool IsScaleGuideVisible
		{
			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0x11059B0", Offset = "0x11059B0", VA = "0x11059B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170005E3")]
		public float ScaleGuideAxisLength
		{
			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0x11059B8", Offset = "0x11059B8", VA = "0x11059B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x1104A6C", Offset = "0x1104A6C", VA = "0x1104A6C")]
		public ScaleGizmoLookAndFeel3D()
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x1105FD4", Offset = "0x1105FD4", VA = "0x1105FD4")]
		public void SetScaleGuideVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x1104254", Offset = "0x1104254", VA = "0x1104254")]
		public bool IsDblSliderVisible(PlaneId planeId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x1105FA0", Offset = "0x1105FA0", VA = "0x1105FA0")]
		public void SetDblSliderVisible(PlaneId planeId, bool isVisible)
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x1105FE0", Offset = "0x1105FE0", VA = "0x1105FE0")]
		public bool IsSliderVisible(int axisIndex, AxisSign axisSign)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x1106024", Offset = "0x1106024", VA = "0x1106024")]
		public bool IsSliderCapVisible(int axisIndex, AxisSign axisSign)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x110418C", Offset = "0x110418C", VA = "0x110418C")]
		public bool IsPositiveSliderVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x11041BC", Offset = "0x11041BC", VA = "0x11041BC")]
		public bool IsPositiveSliderCapVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x11041EC", Offset = "0x11041EC", VA = "0x11041EC")]
		public bool IsNegativeSliderVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x1104220", Offset = "0x1104220", VA = "0x1104220")]
		public bool IsNegativeSliderCapVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x1105D18", Offset = "0x1105D18", VA = "0x1105D18")]
		public void SetSliderVisible(int axisIndex, AxisSign axisSign, bool isVisible)
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x1105D60", Offset = "0x1105D60", VA = "0x1105D60")]
		public void SetSliderCapVisible(int axisIndex, AxisSign axisSign, bool isVisible)
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x1106068", Offset = "0x1106068", VA = "0x1106068")]
		public void SetPositiveSliderVisible(int axisIndex, bool isVisible)
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x110609C", Offset = "0x110609C", VA = "0x110609C")]
		public void SetPositiveCapVisible(int axisIndex, bool isVisible)
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x11060D0", Offset = "0x11060D0", VA = "0x11060D0")]
		public void SetNegativeSliderVisible(int axisIndex, bool isVisible)
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0x1106108", Offset = "0x1106108", VA = "0x1106108")]
		public void SetNegativeCapVisible(int axisIndex, bool isVisible)
		{
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x1105A20", Offset = "0x1105A20", VA = "0x1105A20")]
		public void SetSliderLength(float axisLength)
		{
		}

		[Token(Token = "0x6001F7E")]
		[Address(RVA = "0x1106140", Offset = "0x1106140", VA = "0x1106140")]
		public void SetSliderLineType(GizmoLine3DType lineType)
		{
		}

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x1106184", Offset = "0x1106184", VA = "0x1106184")]
		public void SetBoxSliderHeight(float height)
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x11061F4", Offset = "0x11061F4", VA = "0x11061F4")]
		public void SetBoxSliderDepth(float depth)
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x1106264", Offset = "0x1106264", VA = "0x1106264")]
		public void SetCylinderSliderRadius(float radius)
		{
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x11062D4", Offset = "0x11062D4", VA = "0x11062D4")]
		public void SetScale(float scale)
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x11063C0", Offset = "0x11063C0", VA = "0x11063C0")]
		public void SetUseZoomFactor(bool useZoomFactor)
		{
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x1106460", Offset = "0x1106460", VA = "0x1106460")]
		public void SetScaleGuideAxisLength(float length)
		{
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x1105A90", Offset = "0x1105A90", VA = "0x1105A90")]
		public void SetAxisColor(int axisIndex, Color color)
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x1105E60", Offset = "0x1105E60", VA = "0x1105E60")]
		public void SetDblSliderFillAlpha(float alpha)
		{
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x1105DA8", Offset = "0x1105DA8", VA = "0x1105DA8")]
		public void SetMidCapColor(Color color)
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x1105C04", Offset = "0x1105C04", VA = "0x1105C04")]
		public void SetHoveredColor(Color hoveredColor)
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x11064AC", Offset = "0x11064AC", VA = "0x11064AC")]
		public void SetSliderShadeMode(GizmoShadeMode shadeMode)
		{
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x11064F0", Offset = "0x11064F0", VA = "0x11064F0")]
		public void SetSliderCapShadeMode(GizmoShadeMode shadeMode)
		{
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x110653C", Offset = "0x110653C", VA = "0x110653C")]
		public void SetMidCapShadeMode(GizmoShadeMode shadeMode)
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x11059D4", Offset = "0x11059D4", VA = "0x11059D4")]
		public void SetSliderCapType(GizmoCap3DType capType)
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x1105DC8", Offset = "0x1105DC8", VA = "0x1105DC8")]
		public void SetMidCapType(GizmoCap3DType capType)
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x1106558", Offset = "0x1106558", VA = "0x1106558")]
		public bool IsMidCapTypeAllowed(GizmoCap3DType capType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x1106568", Offset = "0x1106568", VA = "0x1106568")]
		public List<Enum> GetAllowedMidCapTypes()
		{
			return null;
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x11066E8", Offset = "0x11066E8", VA = "0x11066E8")]
		public void SetSliderFillMode(GizmoFillMode3D fillMode)
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x110672C", Offset = "0x110672C", VA = "0x110672C")]
		public void SetSliderCapFillMode(GizmoFillMode3D fillMode)
		{
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x1106778", Offset = "0x1106778", VA = "0x1106778")]
		public void SetMidCapFillMode(GizmoFillMode3D fillMode)
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x1106794", Offset = "0x1106794", VA = "0x1106794")]
		public void SetSliderBoxCapWidth(float width)
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x110680C", Offset = "0x110680C", VA = "0x110680C")]
		public void SetSliderBoxCapHeight(float height)
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x1106884", Offset = "0x1106884", VA = "0x1106884")]
		public void SetSliderBoxCapDepth(float depth)
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x11068FC", Offset = "0x11068FC", VA = "0x11068FC")]
		public void SetSliderConeCapHeight(float height)
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x1106974", Offset = "0x1106974", VA = "0x1106974")]
		public void SetSliderConeCapBaseRadius(float radius)
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x11069EC", Offset = "0x11069EC", VA = "0x11069EC")]
		public void SetSliderPyramidCapWidth(float width)
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x1106A64", Offset = "0x1106A64", VA = "0x1106A64")]
		public void SetSliderPyramidCapHeight(float height)
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x1106ADC", Offset = "0x1106ADC", VA = "0x1106ADC")]
		public void SetSliderPyramidCapDepth(float depth)
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x1106B54", Offset = "0x1106B54", VA = "0x1106B54")]
		public void SetSliderTriPrismCapWidth(float width)
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x1106BCC", Offset = "0x1106BCC", VA = "0x1106BCC")]
		public void SetSliderTriPrismCapHeight(float height)
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x1106C44", Offset = "0x1106C44", VA = "0x1106C44")]
		public void SetSliderTriPrismCapDepth(float depth)
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x1106CBC", Offset = "0x1106CBC", VA = "0x1106CBC")]
		public void SetSliderSphereCapRadius(float radius)
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x1105DF0", Offset = "0x1105DF0", VA = "0x1105DF0")]
		public void SetMidCapBoxWidth(float width)
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x1105E0C", Offset = "0x1105E0C", VA = "0x1105E0C")]
		public void SetMidCapBoxHeight(float height)
		{
		}

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x1105E28", Offset = "0x1105E28", VA = "0x1105E28")]
		public void SetMidCapBoxDepth(float depth)
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x1105E44", Offset = "0x1105E44", VA = "0x1105E44")]
		public void SetMidCapSphereRadius(float radius)
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x1105F1C", Offset = "0x1105F1C", VA = "0x1105F1C")]
		public void SetDblSliderSize(float size)
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x1104794", Offset = "0x1104794", VA = "0x1104794")]
		public void ConnectSliderLookAndFeel(GizmoLineSlider3D slider, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x11047C4", Offset = "0x11047C4", VA = "0x11047C4")]
		public void ConnectMidCapLookAndFeel(GizmoCap3D cap)
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x110480C", Offset = "0x110480C", VA = "0x110480C")]
		public void ConnectDblSliderLookAndFeel(GizmoPlaneSlider3D slider, PlaneId planeId)
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x11047E8", Offset = "0x11047E8", VA = "0x11047E8")]
		public void ConnectGizmoScaleGuideLookAndFeel(GizmoScaleGuide scaleGuide)
		{
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x1105784", Offset = "0x1105784", VA = "0x1105784")]
		private GizmoLineSlider3DLookAndFeel GetSglSliderLookAndFeel(int axisIndex, AxisSign axisSign)
		{
			return null;
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x110647C", Offset = "0x110647C", VA = "0x110647C")]
		private GizmoPlaneSlider3DLookAndFeel GetDblSliderLookAndFeel(PlaneId planeId)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004F5")]
	public class ScaleGizmoSettings3D : Settings
	{
		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _uniformSnapStep;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GizmoLineSlider3DSettings[] _sglSliderSettings;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GizmoPlaneSlider3DSettings[] _dblSliderSettings;

		[Token(Token = "0x170005E4")]
		public float LineSliderHoverEps
		{
			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0x1106D34", Offset = "0x1106D34", VA = "0x1106D34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005E5")]
		public float BoxSliderHoverEps
		{
			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0x1106D64", Offset = "0x1106D64", VA = "0x1106D64")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005E6")]
		public float CylinderSliderHoverEps
		{
			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0x1106D94", Offset = "0x1106D94", VA = "0x1106D94")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005E7")]
		public float XSnapStep
		{
			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0x1106DC4", Offset = "0x1106DC4", VA = "0x1106DC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005E8")]
		public float YSnapStep
		{
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0x1106E38", Offset = "0x1106E38", VA = "0x1106E38")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005E9")]
		public float ZSnapStep
		{
			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0x1106E6C", Offset = "0x1106E6C", VA = "0x1106E6C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005EA")]
		public float XYSnapStep
		{
			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0x1106EA0", Offset = "0x1106EA0", VA = "0x1106EA0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005EB")]
		public float YZSnapStep
		{
			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0x1106EF0", Offset = "0x1106EF0", VA = "0x1106EF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005EC")]
		public float ZXSnapStep
		{
			[Token(Token = "0x6001FB2")]
			[Address(RVA = "0x1106F10", Offset = "0x1106F10", VA = "0x1106F10")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005ED")]
		public float UniformSnapStep
		{
			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0x1106F30", Offset = "0x1106F30", VA = "0x1106F30")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170005EE")]
		public float DragSensitivity
		{
			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0x110415C", Offset = "0x110415C", VA = "0x110415C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x1104F10", Offset = "0x1104F10", VA = "0x1104F10")]
		public ScaleGizmoSettings3D()
		{
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x1106FA8", Offset = "0x1106FA8", VA = "0x1106FA8")]
		public void SetLineSliderHoverEps(float eps)
		{
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x1107018", Offset = "0x1107018", VA = "0x1107018")]
		public void SetBoxSliderHoverEps(float eps)
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x1107088", Offset = "0x1107088", VA = "0x1107088")]
		public void SetCylinderSliderHoverEps(float eps)
		{
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x11070F8", Offset = "0x11070F8", VA = "0x11070F8")]
		public void SetXSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x1107198", Offset = "0x1107198", VA = "0x1107198")]
		public void SetYSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x110723C", Offset = "0x110723C", VA = "0x110723C")]
		public void SetZSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x11072E0", Offset = "0x11072E0", VA = "0x11072E0")]
		public void SetXYSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x1107310", Offset = "0x1107310", VA = "0x1107310")]
		public void SetYZSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x1107340", Offset = "0x1107340", VA = "0x1107340")]
		public void SetZXSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x1107370", Offset = "0x1107370", VA = "0x1107370")]
		public void SetUniformScaleSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x1106F38", Offset = "0x1106F38", VA = "0x1106F38")]
		public void SetDragSensitivity(float sensitivity)
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x1104838", Offset = "0x1104838", VA = "0x1104838")]
		public void ConnectSliderSettings(GizmoLineSlider3D slider, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x1104868", Offset = "0x1104868", VA = "0x1104868")]
		public void ConnectDblSliderSettings(GizmoPlaneSlider3D dblSlider, PlaneId planeId)
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x1106DF4", Offset = "0x1106DF4", VA = "0x1106DF4")]
		private GizmoLineSlider3DSettings GetSglSliderSettings(int axisIndex, AxisSign axisSign)
		{
			return null;
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x1106EC0", Offset = "0x1106EC0", VA = "0x1106EC0")]
		private GizmoPlaneSlider3DSettings GetDblSliderSettings(PlaneId planeId)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004F6")]
	public class UniversalGizmo : GizmoBehaviour
	{
		[Token(Token = "0x20004F7")]
		public enum MvVertexSnapState
		{
			[Token(Token = "0x40017CA")]
			SelectingPivot,
			[Token(Token = "0x40017CB")]
			Snapping,
			[Token(Token = "0x40017CC")]
			Inactive
		}

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GizmoLineSlider3D _mvPXSlider;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GizmoLineSlider3D _mvPYSlider;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GizmoLineSlider3D _mvPZSlider;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GizmoLineSlider3D _mvNXSlider;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GizmoLineSlider3D _mvNYSlider;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GizmoLineSlider3D _mvNZSlider;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GizmoLineSlider3DCollection _mvAxesSliders;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GizmoPlaneSlider3D _mvXYSlider;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GizmoPlaneSlider3D _mvYZSlider;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GizmoPlaneSlider3D _mvZXSlider;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GizmoPlaneSlider3DCollection _mvDblSliders;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _isMvVertexSnapEnabled;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GizmoCap2D _mvVertSnapCap;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GizmoObjectVertexSnapDrag3D _mvVertexSnapDrag;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 _mvPostVSnapPosRestore;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GizmoLineSlider2D _mvP2DModeXSlider;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GizmoLineSlider2D _mvP2DModeYSlider;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private GizmoLineSlider2D _mvN2DModeXSlider;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GizmoLineSlider2D _mvN2DModeYSlider;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private GizmoLineSlider2DCollection _mv2DModeSliders;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private GizmoPlaneSlider2D _mv2DModeDblSlider;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private GizmoPlaneSlider3D _rtXSlider;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private GizmoPlaneSlider3D _rtYSlider;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private GizmoPlaneSlider3D _rtZSlider;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private GizmoPlaneSlider3DCollection _rtAxesSliders;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private GizmoCap3D _rtMidCap;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private GizmoDblAxisRotationDrag3D _rtCamXYRotationDrag;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private GizmoPlaneSlider2D _rtCamLookSlider;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private GizmoCap3D _scMidCap;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private GizmoUniformScaleDrag3D _scUnformScaleDrag;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private GizmoScaleGuide _scScaleGuide;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private IEnumerable<GameObject> _scScaleGuideTargetObjects;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool _is2DModeEnabled;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private UniversalGizmoSettings2D _settings2D;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private UniversalGizmoSettings2D _sharedSettings2D;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private UniversalGizmoSettings3D _settings3D;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private UniversalGizmoSettings3D _sharedSettings3D;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private UniversalGizmoLookAndFeel2D _lookAndFeel2D;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private UniversalGizmoLookAndFeel2D _sharedLookAndFeel2D;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private UniversalGizmoLookAndFeel3D _lookAndFeel3D;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private UniversalGizmoLookAndFeel3D _sharedLookAndFeel3D;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private UniversalGizmoHotkeys _hotkeys;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private UniversalGizmoHotkeys _sharedHotkeys;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private bool _useSnapEnableHotkey;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		[SerializeField]
		private bool _useVertSnapEnableHotkey;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
		[SerializeField]
		private bool _use2DModeEnableHotkey;

		[Token(Token = "0x170005EF")]
		public UniversalGizmoSettings2D Settings2D
		{
			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0x1107384", Offset = "0x1107384", VA = "0x1107384")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F0")]
		public UniversalGizmoSettings2D SharedSettings2D
		{
			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0x11073A0", Offset = "0x11073A0", VA = "0x11073A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FC7")]
			[Address(RVA = "0x11073A8", Offset = "0x11073A8", VA = "0x11073A8")]
			set
			{
			}
		}

		[Token(Token = "0x170005F1")]
		public UniversalGizmoSettings3D Settings3D
		{
			[Token(Token = "0x6001FC8")]
			[Address(RVA = "0x1107748", Offset = "0x1107748", VA = "0x1107748")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F2")]
		public UniversalGizmoSettings3D SharedSettings3D
		{
			[Token(Token = "0x6001FC9")]
			[Address(RVA = "0x1107764", Offset = "0x1107764", VA = "0x1107764")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FCA")]
			[Address(RVA = "0x110776C", Offset = "0x110776C", VA = "0x110776C")]
			set
			{
			}
		}

		[Token(Token = "0x170005F3")]
		public UniversalGizmoLookAndFeel2D LookAndFeel2D
		{
			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0x110778C", Offset = "0x110778C", VA = "0x110778C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F4")]
		public UniversalGizmoLookAndFeel2D SharedLookAndFeel2D
		{
			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0x11077A8", Offset = "0x11077A8", VA = "0x11077A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FCD")]
			[Address(RVA = "0x11077B0", Offset = "0x11077B0", VA = "0x11077B0")]
			set
			{
			}
		}

		[Token(Token = "0x170005F5")]
		public UniversalGizmoLookAndFeel3D LookAndFeel3D
		{
			[Token(Token = "0x6001FCE")]
			[Address(RVA = "0x1107BBC", Offset = "0x1107BBC", VA = "0x1107BBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F6")]
		public UniversalGizmoLookAndFeel3D SharedLookAndFeel3D
		{
			[Token(Token = "0x6001FCF")]
			[Address(RVA = "0x1107BD8", Offset = "0x1107BD8", VA = "0x1107BD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FD0")]
			[Address(RVA = "0x1107BE0", Offset = "0x1107BE0", VA = "0x1107BE0")]
			set
			{
			}
		}

		[Token(Token = "0x170005F7")]
		public UniversalGizmoHotkeys Hotkeys
		{
			[Token(Token = "0x6001FD1")]
			[Address(RVA = "0x1107C00", Offset = "0x1107C00", VA = "0x1107C00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005F8")]
		public UniversalGizmoHotkeys SharedHotkeys
		{
			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0x1107C1C", Offset = "0x1107C1C", VA = "0x1107C1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0x1107C24", Offset = "0x1107C24", VA = "0x1107C24")]
			set
			{
			}
		}

		[Token(Token = "0x170005F9")]
		public bool UseSnapEnableHotkey
		{
			[Token(Token = "0x6001FD4")]
			[Address(RVA = "0x1107C34", Offset = "0x1107C34", VA = "0x1107C34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0x1107C3C", Offset = "0x1107C3C", VA = "0x1107C3C")]
			set
			{
			}
		}

		[Token(Token = "0x170005FA")]
		public bool UseVertSnapEnableHotkey
		{
			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0x1107C48", Offset = "0x1107C48", VA = "0x1107C48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0x1107C50", Offset = "0x1107C50", VA = "0x1107C50")]
			set
			{
			}
		}

		[Token(Token = "0x170005FB")]
		public bool Use2DModeEnableHotkey
		{
			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0x1107C5C", Offset = "0x1107C5C", VA = "0x1107C5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001FD9")]
			[Address(RVA = "0x1107C64", Offset = "0x1107C64", VA = "0x1107C64")]
			set
			{
			}
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x1107C70", Offset = "0x1107C70", VA = "0x1107C70")]
		public MvVertexSnapState GetMvVertexSnapState()
		{
			return default(MvVertexSnapState);
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x1107CAC", Offset = "0x1107CAC", VA = "0x1107CAC")]
		public float GetMvZoomFactor(Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x1107D88", Offset = "0x1107D88", VA = "0x1107D88")]
		public float GetMvZoomFactor(Vector3 position, Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x1107E50", Offset = "0x1107E50", VA = "0x1107E50")]
		public float GetRtZoomFactor(Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x1107F2C", Offset = "0x1107F2C", VA = "0x1107F2C")]
		public float GetRtZoomFactor(Vector3 position, Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x1107FF4", Offset = "0x1107FF4", VA = "0x1107FF4")]
		public float GetScZoomFactor(Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x11080D0", Offset = "0x11080D0", VA = "0x11080D0")]
		public float GetScZoomFactor(Vector3 position, Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x1108198", Offset = "0x1108198", VA = "0x1108198")]
		public bool IsDraggingMoveHandle()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x1108298", Offset = "0x1108298", VA = "0x1108298")]
		public bool IsDraggingRotationHandle()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x1108350", Offset = "0x1108350", VA = "0x1108350")]
		public bool IsDraggingScaleHandle()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x11081E4", Offset = "0x11081E4", VA = "0x11081E4")]
		public bool IsMoveHandle(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x11082E4", Offset = "0x11082E4", VA = "0x11082E4")]
		public bool IsRotationHandle(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x11083B0", Offset = "0x11083B0", VA = "0x11083B0")]
		public bool IsScaleHandle(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x11083DC", Offset = "0x11083DC", VA = "0x11083DC")]
		public bool OwnsHandle(int handleId)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x1108434", Offset = "0x1108434", VA = "0x1108434")]
		public void SetSnapEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x1108500", Offset = "0x1108500", VA = "0x1108500")]
		public void SetMvVertexSnapEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x1108644", Offset = "0x1108644", VA = "0x1108644")]
		public void Set2DModeEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x1108A14", Offset = "0x1108A14", VA = "0x1108A14")]
		public void SetMvVertexSnapTargetObjects(IEnumerable<GameObject> targetObjects)
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x1108A30", Offset = "0x1108A30", VA = "0x1108A30")]
		public void SetMvAxesLinesHoverable(bool hoverable)
		{
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x1108AD0", Offset = "0x1108AD0", VA = "0x1108AD0")]
		public void SetRtMidCapHoverable(bool hoverable)
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x1108AF0", Offset = "0x1108AF0", VA = "0x1108AF0")]
		public void SetScaleGuideTargetObjects(IEnumerable<GameObject> targetObjects)
		{
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x1108B00", Offset = "0x1108B00", VA = "0x1108B00", Slot = "26")]
		public override void OnAttached()
		{
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x1109928", Offset = "0x1109928", VA = "0x1109928", Slot = "27")]
		public override void OnDetached()
		{
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x11099BC", Offset = "0x11099BC", VA = "0x11099BC", Slot = "30")]
		public override void OnEnabled()
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x1109A50", Offset = "0x1109A50", VA = "0x1109A50", Slot = "31")]
		public override void OnDisabled()
		{
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x1109AE4", Offset = "0x1109AE4", VA = "0x1109AE4", Slot = "28")]
		public override void OnGizmoEnabled()
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x1109AF4", Offset = "0x1109AF4", VA = "0x1109AF4", Slot = "40")]
		public override void OnGizmoUpdateBegin()
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x110A800", Offset = "0x110A800", VA = "0x110A800", Slot = "43")]
		public override void OnGizmoRender(Camera camera)
		{
		}

		[Token(Token = "0x6001FF6")]
		[Address(RVA = "0x110AC7C", Offset = "0x110AC7C", VA = "0x110AC7C", Slot = "36")]
		public override void OnGizmoDragUpdate(int handleId)
		{
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x110ACCC", Offset = "0x110ACCC", VA = "0x110ACCC", Slot = "35")]
		public override void OnGizmoDragBegin(int handleId)
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x110AD74", Offset = "0x110AD74", VA = "0x110AD74", Slot = "37")]
		public override void OnGizmoDragEnd(int handleId)
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x110ADD0", Offset = "0x110ADD0", VA = "0x110ADD0", Slot = "34")]
		public override void OnGizmoAttemptHandleDragBegin(int handleId)
		{
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x110A5C4", Offset = "0x110A5C4", VA = "0x110A5C4")]
		private void PlaceMvDblSlidersInSliderPlanes(Camera camera)
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x11077D0", Offset = "0x11077D0", VA = "0x11077D0")]
		private void SetupSharedLookAndFeel()
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x11073C8", Offset = "0x11073C8", VA = "0x11073C8")]
		private void SetupSharedSettings()
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x1108800", Offset = "0x1108800", VA = "0x1108800")]
		private void Update2DGizmoPosition()
		{
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x1108860", Offset = "0x1108860", VA = "0x1108860")]
		private void Update2DModeHandlePositions()
		{
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x110B0B0", Offset = "0x110B0B0", VA = "0x110B0B0")]
		private void OnGizmoTransformChanged(GizmoTransform transform, GizmoTransform.ChangeData changeData)
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x11089B4", Offset = "0x11089B4", VA = "0x11089B4")]
		private void Hide2DModeHandles()
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x110A748", Offset = "0x110A748", VA = "0x110A748")]
		private void UpdateRtCamLookSlider(Camera camera)
		{
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x11087A0", Offset = "0x11087A0", VA = "0x11087A0")]
		private void SetMoveHandlesVisible(bool visible)
		{
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x11085C8", Offset = "0x11085C8", VA = "0x11085C8")]
		private void SetRotationHandlesVisible(bool visible)
		{
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x1108624", Offset = "0x1108624", VA = "0x1108624")]
		private void SetScaleHandlesVisible(bool visible)
		{
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x110B110", Offset = "0x110B110", VA = "0x110B110")]
		public UniversalGizmo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F8")]
	public class UniversalGizmoHotkeys : Settings
	{
		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Hotkeys _enable2DMode;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Hotkeys _enableSnapping;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Hotkeys _enableVertexSnapping;

		[Token(Token = "0x170005FC")]
		public Hotkeys Enable2DMode
		{
			[Token(Token = "0x6002006")]
			[Address(RVA = "0x110B910", Offset = "0x110B910", VA = "0x110B910")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FD")]
		public Hotkeys EnableSnapping
		{
			[Token(Token = "0x6002007")]
			[Address(RVA = "0x110B918", Offset = "0x110B918", VA = "0x110B918")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170005FE")]
		public Hotkeys EnableVertexSnapping
		{
			[Token(Token = "0x6002008")]
			[Address(RVA = "0x110B920", Offset = "0x110B920", VA = "0x110B920")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x110B7B0", Offset = "0x110B7B0", VA = "0x110B7B0")]
		public UniversalGizmoHotkeys()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004F9")]
	public class UniversalGizmoLookAndFeel2D : Settings
	{
		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private UniversalGizmoSettingsCategory _displayCategory;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GizmoPlaneSlider2DLookAndFeel _mvDblSliderLookAndFeel;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GizmoLineSlider2DLookAndFeel[] _mvSglSliderLookAndFeel;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool _isMvDblSliderVisible;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool[] _mvSglSliderVis;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool[] _mvSglSliderCapVis;

		[Token(Token = "0x170005FF")]
		public float MvScale
		{
			[Token(Token = "0x600200A")]
			[Address(RVA = "0x110B928", Offset = "0x110B928", VA = "0x110B928")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000600")]
		public float MvSliderLength
		{
			[Token(Token = "0x600200B")]
			[Address(RVA = "0x110B958", Offset = "0x110B958", VA = "0x110B958")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000601")]
		public float MvBoxSliderThickness
		{
			[Token(Token = "0x600200C")]
			[Address(RVA = "0x110B988", Offset = "0x110B988", VA = "0x110B988")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000602")]
		public float MvSliderArrowCapHeight
		{
			[Token(Token = "0x600200D")]
			[Address(RVA = "0x110B9B8", Offset = "0x110B9B8", VA = "0x110B9B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000603")]
		public float MvSliderArrowCapBaseRadius
		{
			[Token(Token = "0x600200E")]
			[Address(RVA = "0x110B9F0", Offset = "0x110B9F0", VA = "0x110B9F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000604")]
		public float MvSliderQuadCapWidth
		{
			[Token(Token = "0x600200F")]
			[Address(RVA = "0x110BA28", Offset = "0x110BA28", VA = "0x110BA28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000605")]
		public float MvSliderQuadCapHeight
		{
			[Token(Token = "0x6002010")]
			[Address(RVA = "0x110BA60", Offset = "0x110BA60", VA = "0x110BA60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000606")]
		public float MvSliderCircleCapRadius
		{
			[Token(Token = "0x6002011")]
			[Address(RVA = "0x110BA98", Offset = "0x110BA98", VA = "0x110BA98")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000607")]
		public float MvDblSliderQuadWidth
		{
			[Token(Token = "0x6002012")]
			[Address(RVA = "0x110BAD0", Offset = "0x110BAD0", VA = "0x110BAD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000608")]
		public float MvDblSliderQuadHeight
		{
			[Token(Token = "0x6002013")]
			[Address(RVA = "0x110BAEC", Offset = "0x110BAEC", VA = "0x110BAEC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000609")]
		public float MvDblSliderCircleRadius
		{
			[Token(Token = "0x6002014")]
			[Address(RVA = "0x110BB08", Offset = "0x110BB08", VA = "0x110BB08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700060A")]
		public Color MvXColor
		{
			[Token(Token = "0x6002015")]
			[Address(RVA = "0x110BB24", Offset = "0x110BB24", VA = "0x110BB24")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700060B")]
		public Color MvYColor
		{
			[Token(Token = "0x6002016")]
			[Address(RVA = "0x110BB9C", Offset = "0x110BB9C", VA = "0x110BB9C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700060C")]
		public Color MvXBorderColor
		{
			[Token(Token = "0x6002017")]
			[Address(RVA = "0x110BBD4", Offset = "0x110BBD4", VA = "0x110BBD4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700060D")]
		public Color MvYBorderColor
		{
			[Token(Token = "0x6002018")]
			[Address(RVA = "0x110BC08", Offset = "0x110BC08", VA = "0x110BC08")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700060E")]
		public Color MvDblSliderColor
		{
			[Token(Token = "0x6002019")]
			[Address(RVA = "0x110BC40", Offset = "0x110BC40", VA = "0x110BC40")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700060F")]
		public Color MvDblSliderBorderColor
		{
			[Token(Token = "0x600201A")]
			[Address(RVA = "0x110BC60", Offset = "0x110BC60", VA = "0x110BC60")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000610")]
		public Color MvDblSliderHoveredColor
		{
			[Token(Token = "0x600201B")]
			[Address(RVA = "0x110BC80", Offset = "0x110BC80", VA = "0x110BC80")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000611")]
		public Color MvDblSliderHoveredBorderColor
		{
			[Token(Token = "0x600201C")]
			[Address(RVA = "0x110BCA0", Offset = "0x110BCA0", VA = "0x110BCA0")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000612")]
		public bool IsMvDblSliderVisible
		{
			[Token(Token = "0x600201D")]
			[Address(RVA = "0x110BCC0", Offset = "0x110BCC0", VA = "0x110BCC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000613")]
		public Color MvSliderHoveredColor
		{
			[Token(Token = "0x600201E")]
			[Address(RVA = "0x110BCC8", Offset = "0x110BCC8", VA = "0x110BCC8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000614")]
		public Color MvSliderHoveredBorderColor
		{
			[Token(Token = "0x600201F")]
			[Address(RVA = "0x110BCFC", Offset = "0x110BCFC", VA = "0x110BCFC")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000615")]
		public GizmoFillMode2D MvSliderFillMode
		{
			[Token(Token = "0x6002020")]
			[Address(RVA = "0x110BD30", Offset = "0x110BD30", VA = "0x110BD30")]
			get
			{
				return default(GizmoFillMode2D);
			}
		}

		[Token(Token = "0x17000616")]
		public GizmoFillMode2D MvSliderCapFillMode
		{
			[Token(Token = "0x6002021")]
			[Address(RVA = "0x110BD60", Offset = "0x110BD60", VA = "0x110BD60")]
			get
			{
				return default(GizmoFillMode2D);
			}
		}

		[Token(Token = "0x17000617")]
		public GizmoFillMode2D MvDblSliderFillMode
		{
			[Token(Token = "0x6002022")]
			[Address(RVA = "0x110BD98", Offset = "0x110BD98", VA = "0x110BD98")]
			get
			{
				return default(GizmoFillMode2D);
			}
		}

		[Token(Token = "0x17000618")]
		public GizmoCap2DType MvSliderCapType
		{
			[Token(Token = "0x6002023")]
			[Address(RVA = "0x110BDB4", Offset = "0x110BDB4", VA = "0x110BDB4")]
			get
			{
				return default(GizmoCap2DType);
			}
		}

		[Token(Token = "0x17000619")]
		public GizmoLine2DType MvSliderLineType
		{
			[Token(Token = "0x6002024")]
			[Address(RVA = "0x110BDEC", Offset = "0x110BDEC", VA = "0x110BDEC")]
			get
			{
				return default(GizmoLine2DType);
			}
		}

		[Token(Token = "0x1700061A")]
		public GizmoPlane2DType MvDblSliderPlaneType
		{
			[Token(Token = "0x6002025")]
			[Address(RVA = "0x110BE1C", Offset = "0x110BE1C", VA = "0x110BE1C")]
			get
			{
				return default(GizmoPlane2DType);
			}
		}

		[Token(Token = "0x1700061B")]
		public UniversalGizmoSettingsCategory DisplayCategory
		{
			[Token(Token = "0x6002026")]
			[Address(RVA = "0x110BE38", Offset = "0x110BE38", VA = "0x110BE38")]
			get
			{
				return default(UniversalGizmoSettingsCategory);
			}
			[Token(Token = "0x6002027")]
			[Address(RVA = "0x110BE40", Offset = "0x110BE40", VA = "0x110BE40")]
			set
			{
			}
		}

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x110B450", Offset = "0x110B450", VA = "0x110B450")]
		public UniversalGizmoLookAndFeel2D()
		{
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x110C290", Offset = "0x110C290", VA = "0x110C290")]
		public void SetMvDblSliderVisible(bool isVisible)
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x110C29C", Offset = "0x110C29C", VA = "0x110C29C")]
		public bool IsMvSliderVisible(int axisIndex, AxisSign axisSign)
		{
			return default(bool);
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x110A680", Offset = "0x110A680", VA = "0x110A680")]
		public bool IsMvPositiveSliderVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x110A6E0", Offset = "0x110A6E0", VA = "0x110A6E0")]
		public bool IsMvNegativeSliderVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x110C164", Offset = "0x110C164", VA = "0x110C164")]
		public void SetMvSliderVisible(int axisIndex, AxisSign axisSign, bool isVisible)
		{
		}

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x110C2E0", Offset = "0x110C2E0", VA = "0x110C2E0")]
		public bool IsMvSliderCapVisible(int axisIndex, AxisSign axisSign)
		{
			return default(bool);
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x110A6B0", Offset = "0x110A6B0", VA = "0x110A6B0")]
		public bool IsMvPositiveSliderCapVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x110A714", Offset = "0x110A714", VA = "0x110A714")]
		public bool IsMvNegativeSliderCapVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x110C1AC", Offset = "0x110C1AC", VA = "0x110C1AC")]
		public void SetMvSliderCapVisible(int axisIndex, AxisSign axisSign, bool isVisible)
		{
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x110BE48", Offset = "0x110BE48", VA = "0x110BE48")]
		public void SetMvAxisColor(int axisIndex, Color color)
		{
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x110BF00", Offset = "0x110BF00", VA = "0x110BF00")]
		public void SetMvAxisBorderColor(int axisIndex, Color color)
		{
		}

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x110BFB8", Offset = "0x110BFB8", VA = "0x110BFB8")]
		public void SetMvSliderHoveredFillColor(Color color)
		{
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x110C020", Offset = "0x110C020", VA = "0x110C020")]
		public void SetMvSliderHoveredBorderColor(Color color)
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x110C120", Offset = "0x110C120", VA = "0x110C120")]
		public void SetMvSliderFillMode(GizmoFillMode2D fillMode)
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x110C1F4", Offset = "0x110C1F4", VA = "0x110C1F4")]
		public void SetMvDblSliderFillMode(GizmoFillMode2D fillMode)
		{
		}

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x110C0D4", Offset = "0x110C0D4", VA = "0x110C0D4")]
		public void SetMvSliderCapFillMode(GizmoFillMode2D fillMode)
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x110C324", Offset = "0x110C324", VA = "0x110C324")]
		public void SetMvSliderLineType(GizmoLine2DType lineType)
		{
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x110C368", Offset = "0x110C368", VA = "0x110C368")]
		public void SetMvBoxSliderThickness(float thickness)
		{
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x110C3D8", Offset = "0x110C3D8", VA = "0x110C3D8")]
		public void SetMvSliderLength(float length)
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x110C088", Offset = "0x110C088", VA = "0x110C088")]
		public void SetMvSliderCapType(GizmoCap2DType capType)
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x110C448", Offset = "0x110C448", VA = "0x110C448")]
		public void SetMvSliderArrowCapBaseRadius(float radius)
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0x110C4C0", Offset = "0x110C4C0", VA = "0x110C4C0")]
		public void SetMvSliderArrowCapHeight(float height)
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x110C538", Offset = "0x110C538", VA = "0x110C538")]
		public void SetMvSliderQuadCapWidth(float width)
		{
		}

		[Token(Token = "0x6002040")]
		[Address(RVA = "0x110C5B0", Offset = "0x110C5B0", VA = "0x110C5B0")]
		public void SetMvSliderQuadCapHeight(float height)
		{
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x110C628", Offset = "0x110C628", VA = "0x110C628")]
		public void SetMvSliderCircleCapRadius(float radius)
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x110C674", Offset = "0x110C674", VA = "0x110C674")]
		public void SetMvDblSliderPlaneType(GizmoPlane2DType sliderType)
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0x110C690", Offset = "0x110C690", VA = "0x110C690")]
		public void SetMvDblSliderQuadWidth(float width)
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0x110C6AC", Offset = "0x110C6AC", VA = "0x110C6AC")]
		public void SetMvDblSliderQuadHeight(float height)
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x110C6C8", Offset = "0x110C6C8", VA = "0x110C6C8")]
		public void SetMvDblSliderCircleRadius(float radius)
		{
		}

		[Token(Token = "0x6002046")]
		[Address(RVA = "0x110C210", Offset = "0x110C210", VA = "0x110C210")]
		public void SetMvDblSliderColor(Color color)
		{
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x110C230", Offset = "0x110C230", VA = "0x110C230")]
		public void SetMvDblSliderBorderColor(Color color)
		{
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x110C250", Offset = "0x110C250", VA = "0x110C250")]
		public void SetMvDblSliderHoveredColor(Color color)
		{
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0x110C270", Offset = "0x110C270", VA = "0x110C270")]
		public void SetMvDblSliderHoveredBorderColor(Color color)
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0x110C6E4", Offset = "0x110C6E4", VA = "0x110C6E4")]
		public void SetMvScale(float scale)
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0x110B05C", Offset = "0x110B05C", VA = "0x110B05C")]
		public void ConnectMvSliderLookAndFeel(GizmoLineSlider2D slider, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0x110B08C", Offset = "0x110B08C", VA = "0x110B08C")]
		public void ConnectMvDblSliderLookAndFeel(GizmoPlaneSlider2D slider)
		{
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0x110C788", Offset = "0x110C788", VA = "0x110C788")]
		public void Inherit(MoveGizmoLookAndFeel2D lookAndFeel)
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0x110BB58", Offset = "0x110BB58", VA = "0x110BB58")]
		private GizmoLineSlider2DLookAndFeel GetMvSliderLookAndFeel(int axisIndex, AxisSign axisSign)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004FA")]
	public class UniversalGizmoLookAndFeel3D : Settings
	{
		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private UniversalGizmoSettingsCategory _displayCategory;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GizmoCap2DLookAndFeel _mvVertSnapCapLookAndFeel;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool[] _mvSglSliderVis;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool[] _mvSglSliderCapVis;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool[] _mvDblSliderVis;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GizmoLineSlider3DLookAndFeel[] _mvSglSlidersLookAndFeel;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GizmoPlaneSlider3DLookAndFeel[] _mvDblSlidersLookAndFeel;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool _isRtMidCapVisible;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GizmoCap3DLookAndFeel _rtMidCapLookAndFeel;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool[] _rtAxesVis;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GizmoPlaneSlider3DLookAndFeel[] _rtAxesLookAndFeel;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _isRtCamLookSliderVisible;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float _rtCamLookSliderRadiusOffset;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GizmoPlaneSlider2DLookAndFeel _rtCamLookSliderLookAndFeel;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GizmoCap3DLookAndFeel _scMidCapLookAndFeel;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool[] _scSglSliderVis;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private bool[] _scSglSliderCapVis;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool[] _scDblSliderVis;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool _isScMidCapVisible;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GizmoScaleGuideLookAndFeel _scScaleGuideLookAndFeel;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private bool _isScScaleGuideVisible;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private GizmoLineSlider3DLookAndFeel[] _scSglSlidersLookAndFeel;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private GizmoPlaneSlider3DLookAndFeel[] _scDblSlidersLookAndFeel;

		[Token(Token = "0x1700061C")]
		public float MvScale
		{
			[Token(Token = "0x600204F")]
			[Address(RVA = "0x110CBAC", Offset = "0x110CBAC", VA = "0x110CBAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700061D")]
		public bool MvUseZoomFactor
		{
			[Token(Token = "0x6002050")]
			[Address(RVA = "0x110CBDC", Offset = "0x110CBDC", VA = "0x110CBDC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700061E")]
		public float MvSliderLength
		{
			[Token(Token = "0x6002051")]
			[Address(RVA = "0x110CC0C", Offset = "0x110CC0C", VA = "0x110CC0C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700061F")]
		public float MvBoxSliderHeight
		{
			[Token(Token = "0x6002052")]
			[Address(RVA = "0x110CC3C", Offset = "0x110CC3C", VA = "0x110CC3C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000620")]
		public float MvBoxSliderDepth
		{
			[Token(Token = "0x6002053")]
			[Address(RVA = "0x110CC6C", Offset = "0x110CC6C", VA = "0x110CC6C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000621")]
		public float MvCylinderSliderRadius
		{
			[Token(Token = "0x6002054")]
			[Address(RVA = "0x110CC9C", Offset = "0x110CC9C", VA = "0x110CC9C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000622")]
		public float MvSliderBoxCapWidth
		{
			[Token(Token = "0x6002055")]
			[Address(RVA = "0x110CCCC", Offset = "0x110CCCC", VA = "0x110CCCC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000623")]
		public float MvSliderBoxCapHeight
		{
			[Token(Token = "0x6002056")]
			[Address(RVA = "0x110CD04", Offset = "0x110CD04", VA = "0x110CD04")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000624")]
		public float MvSliderBoxCapDepth
		{
			[Token(Token = "0x6002057")]
			[Address(RVA = "0x110CD3C", Offset = "0x110CD3C", VA = "0x110CD3C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000625")]
		public float MvSliderConeCapHeight
		{
			[Token(Token = "0x6002058")]
			[Address(RVA = "0x110CD74", Offset = "0x110CD74", VA = "0x110CD74")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000626")]
		public float MvSliderConeCapBaseRadius
		{
			[Token(Token = "0x6002059")]
			[Address(RVA = "0x110CDAC", Offset = "0x110CDAC", VA = "0x110CDAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000627")]
		public float MvSliderPyramidCapWidth
		{
			[Token(Token = "0x600205A")]
			[Address(RVA = "0x110CDE4", Offset = "0x110CDE4", VA = "0x110CDE4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000628")]
		public float MvSliderPyramidCapHeight
		{
			[Token(Token = "0x600205B")]
			[Address(RVA = "0x110CE1C", Offset = "0x110CE1C", VA = "0x110CE1C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000629")]
		public float MvSliderPyramidCapDepth
		{
			[Token(Token = "0x600205C")]
			[Address(RVA = "0x110CE54", Offset = "0x110CE54", VA = "0x110CE54")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700062A")]
		public float MvSliderTriPrismCapWidth
		{
			[Token(Token = "0x600205D")]
			[Address(RVA = "0x110CE8C", Offset = "0x110CE8C", VA = "0x110CE8C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700062B")]
		public float MvSliderTriPrismCapHeight
		{
			[Token(Token = "0x600205E")]
			[Address(RVA = "0x110CEC4", Offset = "0x110CEC4", VA = "0x110CEC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700062C")]
		public float MvSliderTriPrismCapDepth
		{
			[Token(Token = "0x600205F")]
			[Address(RVA = "0x110CEFC", Offset = "0x110CEFC", VA = "0x110CEFC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700062D")]
		public float MvSliderSphereCapRadius
		{
			[Token(Token = "0x6002060")]
			[Address(RVA = "0x110CF34", Offset = "0x110CF34", VA = "0x110CF34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700062E")]
		public GizmoFillMode3D MvSliderFillMode
		{
			[Token(Token = "0x6002061")]
			[Address(RVA = "0x110CF6C", Offset = "0x110CF6C", VA = "0x110CF6C")]
			get
			{
				return default(GizmoFillMode3D);
			}
		}

		[Token(Token = "0x1700062F")]
		public GizmoFillMode3D MvSliderCapFillMode
		{
			[Token(Token = "0x6002062")]
			[Address(RVA = "0x110CF9C", Offset = "0x110CF9C", VA = "0x110CF9C")]
			get
			{
				return default(GizmoFillMode3D);
			}
		}

		[Token(Token = "0x17000630")]
		public GizmoCap3DType MvSliderCapType
		{
			[Token(Token = "0x6002063")]
			[Address(RVA = "0x110CFD4", Offset = "0x110CFD4", VA = "0x110CFD4")]
			get
			{
				return default(GizmoCap3DType);
			}
		}

		[Token(Token = "0x17000631")]
		public GizmoShadeMode MvSliderShadeMode
		{
			[Token(Token = "0x6002064")]
			[Address(RVA = "0x110D00C", Offset = "0x110D00C", VA = "0x110D00C")]
			get
			{
				return default(GizmoShadeMode);
			}
		}

		[Token(Token = "0x17000632")]
		public GizmoShadeMode MvSliderCapShadeMode
		{
			[Token(Token = "0x6002065")]
			[Address(RVA = "0x110D03C", Offset = "0x110D03C", VA = "0x110D03C")]
			get
			{
				return default(GizmoShadeMode);
			}
		}

		[Token(Token = "0x17000633")]
		public GizmoLine3DType MvSliderLineType
		{
			[Token(Token = "0x6002066")]
			[Address(RVA = "0x110D074", Offset = "0x110D074", VA = "0x110D074")]
			get
			{
				return default(GizmoLine3DType);
			}
		}

		[Token(Token = "0x17000634")]
		public Color MvPXColor
		{
			[Token(Token = "0x6002067")]
			[Address(RVA = "0x110D0A4", Offset = "0x110D0A4", VA = "0x110D0A4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000635")]
		public Color MvNXColor
		{
			[Token(Token = "0x6002068")]
			[Address(RVA = "0x110D11C", Offset = "0x110D11C", VA = "0x110D11C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000636")]
		public Color MvPYColor
		{
			[Token(Token = "0x6002069")]
			[Address(RVA = "0x110D154", Offset = "0x110D154", VA = "0x110D154")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000637")]
		public Color MvNYColor
		{
			[Token(Token = "0x600206A")]
			[Address(RVA = "0x110D18C", Offset = "0x110D18C", VA = "0x110D18C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000638")]
		public Color MvPZColor
		{
			[Token(Token = "0x600206B")]
			[Address(RVA = "0x110D1C4", Offset = "0x110D1C4", VA = "0x110D1C4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000639")]
		public Color MvNZColor
		{
			[Token(Token = "0x600206C")]
			[Address(RVA = "0x110D1FC", Offset = "0x110D1FC", VA = "0x110D1FC")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700063A")]
		public float MvDblSliderSize
		{
			[Token(Token = "0x600206D")]
			[Address(RVA = "0x110D234", Offset = "0x110D234", VA = "0x110D234")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700063B")]
		public float MvDblSliderBorderBoxHeight
		{
			[Token(Token = "0x600206E")]
			[Address(RVA = "0x110D264", Offset = "0x110D264", VA = "0x110D264")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700063C")]
		public float MvDblSliderBorderBoxDepth
		{
			[Token(Token = "0x600206F")]
			[Address(RVA = "0x110D294", Offset = "0x110D294", VA = "0x110D294")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700063D")]
		public float MvDblSliderFillAlpha
		{
			[Token(Token = "0x6002070")]
			[Address(RVA = "0x110D2C4", Offset = "0x110D2C4", VA = "0x110D2C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700063E")]
		public GizmoShadeMode MvDblSliderBorderShadeMode
		{
			[Token(Token = "0x6002071")]
			[Address(RVA = "0x110D2F4", Offset = "0x110D2F4", VA = "0x110D2F4")]
			get
			{
				return default(GizmoShadeMode);
			}
		}

		[Token(Token = "0x1700063F")]
		public GizmoQuad3DBorderType MvDblSliderBorderType
		{
			[Token(Token = "0x6002072")]
			[Address(RVA = "0x110D324", Offset = "0x110D324", VA = "0x110D324")]
			get
			{
				return default(GizmoQuad3DBorderType);
			}
		}

		[Token(Token = "0x17000640")]
		public GizmoFillMode3D MvDblSliderBorderFillMode
		{
			[Token(Token = "0x6002073")]
			[Address(RVA = "0x110D354", Offset = "0x110D354", VA = "0x110D354")]
			get
			{
				return default(GizmoFillMode3D);
			}
		}

		[Token(Token = "0x17000641")]
		public float MvVertSnapCapQuadWidth
		{
			[Token(Token = "0x6002074")]
			[Address(RVA = "0x110D384", Offset = "0x110D384", VA = "0x110D384")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000642")]
		public float MvVertSnapCapQuadHeight
		{
			[Token(Token = "0x6002075")]
			[Address(RVA = "0x110D3A0", Offset = "0x110D3A0", VA = "0x110D3A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000643")]
		public float MvVertSnapCapCircleRadius
		{
			[Token(Token = "0x6002076")]
			[Address(RVA = "0x110D3BC", Offset = "0x110D3BC", VA = "0x110D3BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000644")]
		public Color MvVertSnapCapColor
		{
			[Token(Token = "0x6002077")]
			[Address(RVA = "0x110D3D8", Offset = "0x110D3D8", VA = "0x110D3D8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000645")]
		public Color MvVertSnapCapBorderColor
		{
			[Token(Token = "0x6002078")]
			[Address(RVA = "0x110D3F8", Offset = "0x110D3F8", VA = "0x110D3F8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000646")]
		public Color MvVertSnapCapHoveredColor
		{
			[Token(Token = "0x6002079")]
			[Address(RVA = "0x110D418", Offset = "0x110D418", VA = "0x110D418")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000647")]
		public Color MvVertSnapCapHoveredBorderColor
		{
			[Token(Token = "0x600207A")]
			[Address(RVA = "0x110D438", Offset = "0x110D438", VA = "0x110D438")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000648")]
		public GizmoFillMode2D MvVertSnapCapFillMode
		{
			[Token(Token = "0x600207B")]
			[Address(RVA = "0x110D458", Offset = "0x110D458", VA = "0x110D458")]
			get
			{
				return default(GizmoFillMode2D);
			}
		}

		[Token(Token = "0x17000649")]
		public GizmoCap2DType MvVertSnapCapType
		{
			[Token(Token = "0x600207C")]
			[Address(RVA = "0x110D474", Offset = "0x110D474", VA = "0x110D474")]
			get
			{
				return default(GizmoCap2DType);
			}
		}

		[Token(Token = "0x1700064A")]
		public Color MvHoveredColor
		{
			[Token(Token = "0x600207D")]
			[Address(RVA = "0x110D490", Offset = "0x110D490", VA = "0x110D490")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700064B")]
		public float RtScale
		{
			[Token(Token = "0x600207E")]
			[Address(RVA = "0x110D4C4", Offset = "0x110D4C4", VA = "0x110D4C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700064C")]
		public float RtRadius
		{
			[Token(Token = "0x600207F")]
			[Address(RVA = "0x110D4E0", Offset = "0x110D4E0", VA = "0x110D4E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700064D")]
		public bool RtUseZoomFactor
		{
			[Token(Token = "0x6002080")]
			[Address(RVA = "0x110D4FC", Offset = "0x110D4FC", VA = "0x110D4FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700064E")]
		public Color RtXBorderColor
		{
			[Token(Token = "0x6002081")]
			[Address(RVA = "0x110D518", Offset = "0x110D518", VA = "0x110D518")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700064F")]
		public Color RtYBorderColor
		{
			[Token(Token = "0x6002082")]
			[Address(RVA = "0x110D54C", Offset = "0x110D54C", VA = "0x110D54C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000650")]
		public Color RtZBorderColor
		{
			[Token(Token = "0x6002083")]
			[Address(RVA = "0x110D584", Offset = "0x110D584", VA = "0x110D584")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000651")]
		public Color RtHoveredColor
		{
			[Token(Token = "0x6002084")]
			[Address(RVA = "0x110D5BC", Offset = "0x110D5BC", VA = "0x110D5BC")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000652")]
		public float RtAxisTorusThickness
		{
			[Token(Token = "0x6002085")]
			[Address(RVA = "0x110D5F0", Offset = "0x110D5F0", VA = "0x110D5F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000653")]
		public float RtAxisCylTorusWidth
		{
			[Token(Token = "0x6002086")]
			[Address(RVA = "0x110D620", Offset = "0x110D620", VA = "0x110D620")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000654")]
		public float RtAxisCylTorusHeight
		{
			[Token(Token = "0x6002087")]
			[Address(RVA = "0x110D650", Offset = "0x110D650", VA = "0x110D650")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000655")]
		public float RtAxisCullAlphaScale
		{
			[Token(Token = "0x6002088")]
			[Address(RVA = "0x110D680", Offset = "0x110D680", VA = "0x110D680")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000656")]
		public GizmoShadeMode RtShadeMode
		{
			[Token(Token = "0x6002089")]
			[Address(RVA = "0x110D6B0", Offset = "0x110D6B0", VA = "0x110D6B0")]
			get
			{
				return default(GizmoShadeMode);
			}
		}

		[Token(Token = "0x17000657")]
		public GizmoCircle3DBorderType RtAxisBorderType
		{
			[Token(Token = "0x600208A")]
			[Address(RVA = "0x110D6CC", Offset = "0x110D6CC", VA = "0x110D6CC")]
			get
			{
				return default(GizmoCircle3DBorderType);
			}
		}

		[Token(Token = "0x17000658")]
		public GizmoFillMode3D RtAxisBorderFillMode
		{
			[Token(Token = "0x600208B")]
			[Address(RVA = "0x110D6FC", Offset = "0x110D6FC", VA = "0x110D6FC")]
			get
			{
				return default(GizmoFillMode3D);
			}
		}

		[Token(Token = "0x17000659")]
		public int RtNumAxisTorusWireAxialSlices
		{
			[Token(Token = "0x600208C")]
			[Address(RVA = "0x110D72C", Offset = "0x110D72C", VA = "0x110D72C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700065A")]
		public Color RtRotationArcColor
		{
			[Token(Token = "0x600208D")]
			[Address(RVA = "0x110D75C", Offset = "0x110D75C", VA = "0x110D75C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700065B")]
		public Color RtRotationArcBorderColor
		{
			[Token(Token = "0x600208E")]
			[Address(RVA = "0x110D798", Offset = "0x110D798", VA = "0x110D798")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700065C")]
		public bool RtUseShortestRotationArc
		{
			[Token(Token = "0x600208F")]
			[Address(RVA = "0x110D7D4", Offset = "0x110D7D4", VA = "0x110D7D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700065D")]
		public bool IsRtRotationArcVisible
		{
			[Token(Token = "0x6002090")]
			[Address(RVA = "0x110D80C", Offset = "0x110D80C", VA = "0x110D80C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700065E")]
		public Color RtMidCapColor
		{
			[Token(Token = "0x6002091")]
			[Address(RVA = "0x110D83C", Offset = "0x110D83C", VA = "0x110D83C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700065F")]
		public Color RtHoveredMidCapColor
		{
			[Token(Token = "0x6002092")]
			[Address(RVA = "0x110D85C", Offset = "0x110D85C", VA = "0x110D85C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000660")]
		public bool IsRtMidCapVisible
		{
			[Token(Token = "0x6002093")]
			[Address(RVA = "0x110D87C", Offset = "0x110D87C", VA = "0x110D87C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000661")]
		public bool IsRtMidCapBorderVisible
		{
			[Token(Token = "0x6002094")]
			[Address(RVA = "0x110D884", Offset = "0x110D884", VA = "0x110D884")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000662")]
		public float RtCamLookSliderRadiusOffset
		{
			[Token(Token = "0x6002095")]
			[Address(RVA = "0x110D8A0", Offset = "0x110D8A0", VA = "0x110D8A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000663")]
		public Color RtCamLookSliderBorderColor
		{
			[Token(Token = "0x6002096")]
			[Address(RVA = "0x110D8A8", Offset = "0x110D8A8", VA = "0x110D8A8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000664")]
		public Color RtCamLookSliderHoveredBorderColor
		{
			[Token(Token = "0x6002097")]
			[Address(RVA = "0x110D8C8", Offset = "0x110D8C8", VA = "0x110D8C8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000665")]
		public GizmoPolygon2DBorderType RtCamLookSliderPolyBorderType
		{
			[Token(Token = "0x6002098")]
			[Address(RVA = "0x110D8E8", Offset = "0x110D8E8", VA = "0x110D8E8")]
			get
			{
				return default(GizmoPolygon2DBorderType);
			}
		}

		[Token(Token = "0x17000666")]
		public float RtCamLookSliderPolyBorderThickness
		{
			[Token(Token = "0x6002099")]
			[Address(RVA = "0x110D904", Offset = "0x110D904", VA = "0x110D904")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000667")]
		public bool IsRtCamLookSliderVisible
		{
			[Token(Token = "0x600209A")]
			[Address(RVA = "0x110D920", Offset = "0x110D920", VA = "0x110D920")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000668")]
		public float ScScale
		{
			[Token(Token = "0x600209B")]
			[Address(RVA = "0x110D928", Offset = "0x110D928", VA = "0x110D928")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000669")]
		public bool ScUseZoomFactor
		{
			[Token(Token = "0x600209C")]
			[Address(RVA = "0x110D944", Offset = "0x110D944", VA = "0x110D944")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700066A")]
		public float ScSliderLength
		{
			[Token(Token = "0x600209D")]
			[Address(RVA = "0x110D960", Offset = "0x110D960", VA = "0x110D960")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700066B")]
		public float ScBoxSliderHeight
		{
			[Token(Token = "0x600209E")]
			[Address(RVA = "0x110D990", Offset = "0x110D990", VA = "0x110D990")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700066C")]
		public float ScBoxSliderDepth
		{
			[Token(Token = "0x600209F")]
			[Address(RVA = "0x110D9C0", Offset = "0x110D9C0", VA = "0x110D9C0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700066D")]
		public float ScCylinderSliderRadius
		{
			[Token(Token = "0x60020A0")]
			[Address(RVA = "0x110D9F0", Offset = "0x110D9F0", VA = "0x110D9F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700066E")]
		public float ScSliderBoxCapWidth
		{
			[Token(Token = "0x60020A1")]
			[Address(RVA = "0x110DA20", Offset = "0x110DA20", VA = "0x110DA20")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700066F")]
		public float ScSliderBoxCapHeight
		{
			[Token(Token = "0x60020A2")]
			[Address(RVA = "0x110DA58", Offset = "0x110DA58", VA = "0x110DA58")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000670")]
		public float ScSliderBoxCapDepth
		{
			[Token(Token = "0x60020A3")]
			[Address(RVA = "0x110DA90", Offset = "0x110DA90", VA = "0x110DA90")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000671")]
		public float ScSliderConeCapHeight
		{
			[Token(Token = "0x60020A4")]
			[Address(RVA = "0x110DAC8", Offset = "0x110DAC8", VA = "0x110DAC8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000672")]
		public float ScSliderConeCapBaseRadius
		{
			[Token(Token = "0x60020A5")]
			[Address(RVA = "0x110DB00", Offset = "0x110DB00", VA = "0x110DB00")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000673")]
		public float ScSliderPyramidCapWidth
		{
			[Token(Token = "0x60020A6")]
			[Address(RVA = "0x110DB38", Offset = "0x110DB38", VA = "0x110DB38")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000674")]
		public float ScSliderPyramidCapHeight
		{
			[Token(Token = "0x60020A7")]
			[Address(RVA = "0x110DB70", Offset = "0x110DB70", VA = "0x110DB70")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000675")]
		public float ScSliderPyramidCapDepth
		{
			[Token(Token = "0x60020A8")]
			[Address(RVA = "0x110DBA8", Offset = "0x110DBA8", VA = "0x110DBA8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000676")]
		public float ScSliderTriPrismCapWidth
		{
			[Token(Token = "0x60020A9")]
			[Address(RVA = "0x110DBE0", Offset = "0x110DBE0", VA = "0x110DBE0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000677")]
		public float ScSliderTriPrismCapHeight
		{
			[Token(Token = "0x60020AA")]
			[Address(RVA = "0x110DC18", Offset = "0x110DC18", VA = "0x110DC18")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000678")]
		public float ScSliderTriPrismCapDepth
		{
			[Token(Token = "0x60020AB")]
			[Address(RVA = "0x110DC50", Offset = "0x110DC50", VA = "0x110DC50")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000679")]
		public float ScSliderSphereCapRadius
		{
			[Token(Token = "0x60020AC")]
			[Address(RVA = "0x110DC88", Offset = "0x110DC88", VA = "0x110DC88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700067A")]
		public GizmoFillMode3D ScSliderFillMode
		{
			[Token(Token = "0x60020AD")]
			[Address(RVA = "0x110DCC0", Offset = "0x110DCC0", VA = "0x110DCC0")]
			get
			{
				return default(GizmoFillMode3D);
			}
		}

		[Token(Token = "0x1700067B")]
		public GizmoFillMode3D ScSliderCapFillMode
		{
			[Token(Token = "0x60020AE")]
			[Address(RVA = "0x110DCF0", Offset = "0x110DCF0", VA = "0x110DCF0")]
			get
			{
				return default(GizmoFillMode3D);
			}
		}

		[Token(Token = "0x1700067C")]
		public GizmoCap3DType ScSliderCapType
		{
			[Token(Token = "0x60020AF")]
			[Address(RVA = "0x110DD28", Offset = "0x110DD28", VA = "0x110DD28")]
			get
			{
				return default(GizmoCap3DType);
			}
		}

		[Token(Token = "0x1700067D")]
		public GizmoShadeMode ScSliderShadeMode
		{
			[Token(Token = "0x60020B0")]
			[Address(RVA = "0x110DD60", Offset = "0x110DD60", VA = "0x110DD60")]
			get
			{
				return default(GizmoShadeMode);
			}
		}

		[Token(Token = "0x1700067E")]
		public GizmoShadeMode ScSliderCapShadeMode
		{
			[Token(Token = "0x60020B1")]
			[Address(RVA = "0x110DD90", Offset = "0x110DD90", VA = "0x110DD90")]
			get
			{
				return default(GizmoShadeMode);
			}
		}

		[Token(Token = "0x1700067F")]
		public GizmoLine3DType ScSliderLineType
		{
			[Token(Token = "0x60020B2")]
			[Address(RVA = "0x110DDC8", Offset = "0x110DDC8", VA = "0x110DDC8")]
			get
			{
				return default(GizmoLine3DType);
			}
		}

		[Token(Token = "0x17000680")]
		public Color ScPXColor
		{
			[Token(Token = "0x60020B3")]
			[Address(RVA = "0x110DDF8", Offset = "0x110DDF8", VA = "0x110DDF8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000681")]
		public Color ScNXColor
		{
			[Token(Token = "0x60020B4")]
			[Address(RVA = "0x110DE70", Offset = "0x110DE70", VA = "0x110DE70")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000682")]
		public Color ScPYColor
		{
			[Token(Token = "0x60020B5")]
			[Address(RVA = "0x110DEA8", Offset = "0x110DEA8", VA = "0x110DEA8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000683")]
		public Color ScNYColor
		{
			[Token(Token = "0x60020B6")]
			[Address(RVA = "0x110DEE0", Offset = "0x110DEE0", VA = "0x110DEE0")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000684")]
		public Color ScPZColor
		{
			[Token(Token = "0x60020B7")]
			[Address(RVA = "0x110DF18", Offset = "0x110DF18", VA = "0x110DF18")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000685")]
		public Color ScNZColor
		{
			[Token(Token = "0x60020B8")]
			[Address(RVA = "0x110DF50", Offset = "0x110DF50", VA = "0x110DF50")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000686")]
		public float ScDblSliderSize
		{
			[Token(Token = "0x60020B9")]
			[Address(RVA = "0x110DF88", Offset = "0x110DF88", VA = "0x110DF88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000687")]
		public float ScDblSliderFillAlpha
		{
			[Token(Token = "0x60020BA")]
			[Address(RVA = "0x110DFB8", Offset = "0x110DFB8", VA = "0x110DFB8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000688")]
		public float ScMidCapBoxWidth
		{
			[Token(Token = "0x60020BB")]
			[Address(RVA = "0x110DFE8", Offset = "0x110DFE8", VA = "0x110DFE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000689")]
		public float ScMidCapBoxHeight
		{
			[Token(Token = "0x60020BC")]
			[Address(RVA = "0x110E004", Offset = "0x110E004", VA = "0x110E004")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700068A")]
		public float ScMidCapBoxDepth
		{
			[Token(Token = "0x60020BD")]
			[Address(RVA = "0x110E020", Offset = "0x110E020", VA = "0x110E020")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700068B")]
		public float ScMidCapSphereRadius
		{
			[Token(Token = "0x60020BE")]
			[Address(RVA = "0x110E03C", Offset = "0x110E03C", VA = "0x110E03C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700068C")]
		public GizmoCap3DType ScMidCapType
		{
			[Token(Token = "0x60020BF")]
			[Address(RVA = "0x110E058", Offset = "0x110E058", VA = "0x110E058")]
			get
			{
				return default(GizmoCap3DType);
			}
		}

		[Token(Token = "0x1700068D")]
		public GizmoShadeMode ScMidCapShadeMode
		{
			[Token(Token = "0x60020C0")]
			[Address(RVA = "0x110E074", Offset = "0x110E074", VA = "0x110E074")]
			get
			{
				return default(GizmoShadeMode);
			}
		}

		[Token(Token = "0x1700068E")]
		public GizmoFillMode3D ScMidCapFillMode
		{
			[Token(Token = "0x60020C1")]
			[Address(RVA = "0x110E090", Offset = "0x110E090", VA = "0x110E090")]
			get
			{
				return default(GizmoFillMode3D);
			}
		}

		[Token(Token = "0x1700068F")]
		public bool IsScMidCapVisible
		{
			[Token(Token = "0x60020C2")]
			[Address(RVA = "0x110E0AC", Offset = "0x110E0AC", VA = "0x110E0AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000690")]
		public Color ScMidCapColor
		{
			[Token(Token = "0x60020C3")]
			[Address(RVA = "0x110E0B4", Offset = "0x110E0B4", VA = "0x110E0B4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000691")]
		public Color ScHoveredColor
		{
			[Token(Token = "0x60020C4")]
			[Address(RVA = "0x110E0D4", Offset = "0x110E0D4", VA = "0x110E0D4")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000692")]
		public bool IsScScaleGuideVisible
		{
			[Token(Token = "0x60020C5")]
			[Address(RVA = "0x110E108", Offset = "0x110E108", VA = "0x110E108")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000693")]
		public float ScScaleGuideAxisLength
		{
			[Token(Token = "0x60020C6")]
			[Address(RVA = "0x110E110", Offset = "0x110E110", VA = "0x110E110")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000694")]
		public UniversalGizmoSettingsCategory DisplayCategory
		{
			[Token(Token = "0x60020C7")]
			[Address(RVA = "0x110E12C", Offset = "0x110E12C", VA = "0x110E12C")]
			get
			{
				return default(UniversalGizmoSettingsCategory);
			}
			[Token(Token = "0x60020C8")]
			[Address(RVA = "0x110E134", Offset = "0x110E134", VA = "0x110E134")]
			set
			{
			}
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x110E13C", Offset = "0x110E13C", VA = "0x110E13C")]
		public UniversalGizmoLookAndFeel3D()
		{
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x110F9DC", Offset = "0x110F9DC", VA = "0x110F9DC")]
		public bool IsMvVertSnapCapTypeAllowed(GizmoCap2DType capType)
		{
			return default(bool);
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x110F9E8", Offset = "0x110F9E8", VA = "0x110F9E8")]
		public List<Enum> GetAllowedMvVertSnapCapTypes()
		{
			return null;
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x110FB64", Offset = "0x110FB64", VA = "0x110FB64")]
		public void SetMvVertSnapCapType(GizmoCap2DType capType)
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x110FB88", Offset = "0x110FB88", VA = "0x110FB88")]
		public void SetMvVertSnapCapQuadWidth(float width)
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x110FBA4", Offset = "0x110FBA4", VA = "0x110FBA4")]
		public void SetMvVertSnapCapQuadHeight(float height)
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x110FBC0", Offset = "0x110FBC0", VA = "0x110FBC0")]
		public void SetMvVertSnapCapCircleRadius(float radius)
		{
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x110F0A8", Offset = "0x110F0A8", VA = "0x110F0A8")]
		public void SetMvVertSnapCapFillMode(GizmoFillMode2D fillMode)
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x110F0C4", Offset = "0x110F0C4", VA = "0x110F0C4")]
		public void SetMvVertSnapCapColor(Color color)
		{
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x110F0E4", Offset = "0x110F0E4", VA = "0x110F0E4")]
		public void SetMvVertSnapCapBorderColor(Color color)
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x110F104", Offset = "0x110F104", VA = "0x110F104")]
		public void SetMvVertSnapCapHoveredColor(Color color)
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x110F124", Offset = "0x110F124", VA = "0x110F124")]
		public void SetMvVertSnapCapHoveredBorderColor(Color color)
		{
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x110FBDC", Offset = "0x110FBDC", VA = "0x110FBDC")]
		public bool IsMvSliderVisible(int axisIndex, AxisSign axisSign)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x110FC20", Offset = "0x110FC20", VA = "0x110FC20")]
		public bool IsMvDblSliderVisible(PlaneId planeId)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x110FC50", Offset = "0x110FC50", VA = "0x110FC50")]
		public bool IsMvSliderCapVisible(int axisIndex, AxisSign axisSign)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x110FC94", Offset = "0x110FC94", VA = "0x110FC94")]
		public bool IsMvPositiveSliderVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x110FCC4", Offset = "0x110FCC4", VA = "0x110FCC4")]
		public bool IsMvPositiveSliderCapVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x110FCF4", Offset = "0x110FCF4", VA = "0x110FCF4")]
		public bool IsMvNegativeSliderVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x110FD28", Offset = "0x110FD28", VA = "0x110FD28")]
		public bool IsMvNegativeSliderCapVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x110F018", Offset = "0x110F018", VA = "0x110F018")]
		public void SetMvSliderVisible(int axisIndex, AxisSign axisSign, bool isVisible)
		{
		}

		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x110EFE4", Offset = "0x110EFE4", VA = "0x110EFE4")]
		public void SetMvDblSliderVisible(PlaneId planeId, bool isVisible)
		{
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x110F060", Offset = "0x110F060", VA = "0x110F060")]
		public void SetMvSliderCapVisible(int axisIndex, AxisSign axisSign, bool isVisible)
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x110FD5C", Offset = "0x110FD5C", VA = "0x110FD5C")]
		public void SetMvPositiveSliderVisible(int axisIndex, bool isVisible)
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x110FD90", Offset = "0x110FD90", VA = "0x110FD90")]
		public void SetMvPositiveSliderCapVisible(int axisIndex, bool isVisible)
		{
		}

		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x110FDC4", Offset = "0x110FDC4", VA = "0x110FDC4")]
		public void SetMvNegativeSliderVisible(int axisIndex, bool isVisible)
		{
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x110FDFC", Offset = "0x110FDFC", VA = "0x110FDFC")]
		public void SetMvNegativeSliderCapVisible(int axisIndex, bool isVisible)
		{
		}

		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x110EC34", Offset = "0x110EC34", VA = "0x110EC34")]
		public void SetMvSliderLength(float axisLength)
		{
		}

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x110FE34", Offset = "0x110FE34", VA = "0x110FE34")]
		public void SetMvSliderLineType(GizmoLine3DType lineType)
		{
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x110FE78", Offset = "0x110FE78", VA = "0x110FE78")]
		public void SetMvDblSliderBorderType(GizmoQuad3DBorderType borderType)
		{
		}

		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x110FEBC", Offset = "0x110FEBC", VA = "0x110FEBC")]
		public void SetMvDblSliderBorderBoxHeight(float height)
		{
		}

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x110FF2C", Offset = "0x110FF2C", VA = "0x110FF2C")]
		public void SetMvDblSliderBorderBoxDepth(float depth)
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x110FF9C", Offset = "0x110FF9C", VA = "0x110FF9C")]
		public void SetMvBoxSliderHeight(float height)
		{
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x111000C", Offset = "0x111000C", VA = "0x111000C")]
		public void SetMvBoxSliderDepth(float depth)
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x111007C", Offset = "0x111007C", VA = "0x111007C")]
		public void SetMvCylinderSliderRadius(float radius)
		{
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x110EF60", Offset = "0x110EF60", VA = "0x110EF60")]
		public void SetMvDblSliderSize(float size)
		{
		}

		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x11100EC", Offset = "0x11100EC", VA = "0x11100EC")]
		public void SetMvScale(float scale)
		{
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x11101C8", Offset = "0x11101C8", VA = "0x11101C8")]
		public void SetMvUseZoomFactor(bool useZoomFactor)
		{
		}

		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x110ECA4", Offset = "0x110ECA4", VA = "0x110ECA4")]
		public void SetMvAxisColor(int axisIndex, Color color)
		{
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x110EEA4", Offset = "0x110EEA4", VA = "0x110EEA4")]
		public void SetMvDblSliderFillAlpha(float alpha)
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x110EDAC", Offset = "0x110EDAC", VA = "0x110EDAC")]
		public void SetMvHoveredColor(Color hoveredColor)
		{
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x1110280", Offset = "0x1110280", VA = "0x1110280")]
		public void SetMvSliderShadeMode(GizmoShadeMode shadeMode)
		{
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x11102C4", Offset = "0x11102C4", VA = "0x11102C4")]
		public void SetMvSliderCapShadeMode(GizmoShadeMode shadeMode)
		{
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x1110310", Offset = "0x1110310", VA = "0x1110310")]
		public void SetMvDblSliderBorderShadeMode(GizmoShadeMode shadeMode)
		{
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x1110354", Offset = "0x1110354", VA = "0x1110354")]
		public void SetMvSliderCapType(GizmoCap3DType capType)
		{
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0x11103A0", Offset = "0x11103A0", VA = "0x11103A0")]
		public void SetMvSliderFillMode(GizmoFillMode3D fillMode)
		{
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0x11103E4", Offset = "0x11103E4", VA = "0x11103E4")]
		public void SetMvSliderCapFillMode(GizmoFillMode3D fillMode)
		{
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0x1110430", Offset = "0x1110430", VA = "0x1110430")]
		public void SetMvDblSliderBorderFillMode(GizmoFillMode3D fillMode)
		{
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0x1110474", Offset = "0x1110474", VA = "0x1110474")]
		public void SetMvSliderBoxCapWidth(float width)
		{
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x11104EC", Offset = "0x11104EC", VA = "0x11104EC")]
		public void SetMvSliderBoxCapHeight(float height)
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x1110564", Offset = "0x1110564", VA = "0x1110564")]
		public void SetMvSliderBoxCapDepth(float depth)
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x11105DC", Offset = "0x11105DC", VA = "0x11105DC")]
		public void SetMvSliderConeCapHeight(float height)
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x1110654", Offset = "0x1110654", VA = "0x1110654")]
		public void SetMvSliderConeCapBaseRadius(float radius)
		{
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x11106CC", Offset = "0x11106CC", VA = "0x11106CC")]
		public void SetMvSliderPyramidCapWidth(float width)
		{
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x1110744", Offset = "0x1110744", VA = "0x1110744")]
		public void SetMvSliderPyramidCapHeight(float height)
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x11107BC", Offset = "0x11107BC", VA = "0x11107BC")]
		public void SetMvSliderPyramidCapDepth(float depth)
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x1110834", Offset = "0x1110834", VA = "0x1110834")]
		public void SetMvSliderTriPrismCapWidth(float width)
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x11108AC", Offset = "0x11108AC", VA = "0x11108AC")]
		public void SetMvSliderTriPrismCapHeight(float height)
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0x1110924", Offset = "0x1110924", VA = "0x1110924")]
		public void SetMvSliderTriPrismCapDepth(float depth)
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0x111099C", Offset = "0x111099C", VA = "0x111099C")]
		public void SetMvSliderSphereCapRadius(float radius)
		{
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0x1110A14", Offset = "0x1110A14", VA = "0x1110A14")]
		public void ConnectMvSliderLookAndFeel(GizmoLineSlider3D slider, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0x1110A44", Offset = "0x1110A44", VA = "0x1110A44")]
		public void ConnectMvDblSliderLookAndFeel(GizmoPlaneSlider3D dblSlider, PlaneId planeId)
		{
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0x1110A70", Offset = "0x1110A70", VA = "0x1110A70")]
		public void ConnectMvVertSnapCapLookAndFeel(GizmoCap2D vertSnapCap)
		{
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0x1110A94", Offset = "0x1110A94", VA = "0x1110A94")]
		public void Inherit(MoveGizmoLookAndFeel3D lookAndFeel)
		{
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0x110D0D8", Offset = "0x110D0D8", VA = "0x110D0D8")]
		private GizmoLineSlider3DLookAndFeel GetMvSglSliderLookAndFeel(int axisIndex, AxisSign axisSign)
		{
			return null;
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0x1110250", Offset = "0x1110250", VA = "0x1110250")]
		private GizmoPlaneSlider3DLookAndFeel GetMvDblSliderLookAndFeel(PlaneId planeId)
		{
			return null;
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0x111113C", Offset = "0x111113C", VA = "0x111113C")]
		public bool IsRtAxisVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0x110F144", Offset = "0x110F144", VA = "0x110F144")]
		public void SetRtAxisVisible(int axisIndex, bool isVisible)
		{
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0x111116C", Offset = "0x111116C", VA = "0x111116C")]
		public void SetRtShadeMode(GizmoShadeMode shadeMode)
		{
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0x11111C0", Offset = "0x11111C0", VA = "0x11111C0")]
		public void SetRtAxisBorderFillMode(GizmoFillMode3D fillMode)
		{
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0x110F374", Offset = "0x110F374", VA = "0x110F374")]
		public void SetRtNumAxisTorusWireAxialSlices(int numSlices)
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0x1111204", Offset = "0x1111204", VA = "0x1111204")]
		public void SetRtUseZoomFactor(bool useZoomFactor)
		{
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0x1111258", Offset = "0x1111258", VA = "0x1111258")]
		public void SetRtScale(float scale)
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0x110F1F8", Offset = "0x110F1F8", VA = "0x110F1F8")]
		public void SetRtRadius(float radius)
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0x11112DC", Offset = "0x11112DC", VA = "0x11112DC")]
		public void SetRtAxisBorderCullAlphaScale(float scale)
		{
		}

		[Token(Token = "0x6002113")]
		[Address(RVA = "0x111134C", Offset = "0x111134C", VA = "0x111134C")]
		public void SetRtAxisBorderType(GizmoCircle3DBorderType borderType)
		{
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0x1111390", Offset = "0x1111390", VA = "0x1111390")]
		public void SetRtAxisTorusThickness(float thickness)
		{
		}

		[Token(Token = "0x6002115")]
		[Address(RVA = "0x1111400", Offset = "0x1111400", VA = "0x1111400")]
		public void SetRtAxisCylTorusWidth(float width)
		{
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0x1111470", Offset = "0x1111470", VA = "0x1111470")]
		public void SetRtAxisCylTorusHeight(float height)
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0x11114E0", Offset = "0x11114E0", VA = "0x11114E0")]
		public void SetRtMidCapVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0x110F178", Offset = "0x110F178", VA = "0x110F178")]
		public void SetRtMidCapColor(Color color)
		{
		}

		[Token(Token = "0x6002119")]
		[Address(RVA = "0x110F198", Offset = "0x110F198", VA = "0x110F198")]
		public void SetRtHoveredMidCapColor(Color color)
		{
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0x110F1B8", Offset = "0x110F1B8", VA = "0x110F1B8")]
		public void SetRtMidCapBorderVisible(bool isVisible)
		{
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x110F1D8", Offset = "0x110F1D8", VA = "0x110F1D8")]
		public void SetRtMidCapBorderColor(Color color)
		{
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x110F27C", Offset = "0x110F27C", VA = "0x110F27C")]
		public void SetRtAxisBorderColor(int axisIndex, Color color)
		{
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0x110F2B8", Offset = "0x110F2B8", VA = "0x110F2B8")]
		public void SetRtHoveredColor(Color hoveredColor)
		{
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0x11114EC", Offset = "0x11114EC", VA = "0x11114EC")]
		public void SetRtRotationArcColor(Color color)
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0x1111564", Offset = "0x1111564", VA = "0x1111564")]
		public void SetRtRotationArcBorderColor(Color color)
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0x11115DC", Offset = "0x11115DC", VA = "0x11115DC")]
		public void SetRtUseShortestRotationArc(bool useShortest)
		{
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x1111640", Offset = "0x1111640", VA = "0x1111640")]
		public void SetRtRotationArcVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x1111694", Offset = "0x1111694", VA = "0x1111694")]
		public void SetRtCamLookSliderRadiusOffset(float offset)
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0x110F334", Offset = "0x110F334", VA = "0x110F334")]
		public void SetRtCamLookSliderBorderColor(Color color)
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x110F354", Offset = "0x110F354", VA = "0x110F354")]
		public void SetRtCamLookSliderHoveredBorderColor(Color color)
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x11116A4", Offset = "0x11116A4", VA = "0x11116A4")]
		public void SetRtCamLookSliderVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x11116B0", Offset = "0x11116B0", VA = "0x11116B0")]
		public void SetRtCamLookSliderPolyBorderType(GizmoPolygon2DBorderType polyBorderType)
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x110F318", Offset = "0x110F318", VA = "0x110F318")]
		public void SetRtCamLookSliderPolyBorderThickness(float thickness)
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x11116CC", Offset = "0x11116CC", VA = "0x11116CC")]
		public void ConnectRtSliderLookAndFeel(GizmoPlaneSlider3D slider, int axisIndex)
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x1111708", Offset = "0x1111708", VA = "0x1111708")]
		public void ConnectRtMidCapLookAndFeel(GizmoCap3D cap)
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x111172C", Offset = "0x111172C", VA = "0x111172C")]
		public void ConnectRtCamLookSliderLookAndFeel(GizmoPlaneSlider2D slider)
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x1111750", Offset = "0x1111750", VA = "0x1111750")]
		public void Inherit(RotationGizmoLookAndFeel3D lookAndFeel)
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x1111A70", Offset = "0x1111A70", VA = "0x1111A70")]
		public void SetScScaleGuideVisible(bool isVisible)
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x1111A7C", Offset = "0x1111A7C", VA = "0x1111A7C")]
		public bool IsScDblSliderVisible(PlaneId planeId)
		{
			return default(bool);
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x110F9A8", Offset = "0x110F9A8", VA = "0x110F9A8")]
		public void SetScDblSliderVisible(PlaneId planeId, bool isVisible)
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x1111AAC", Offset = "0x1111AAC", VA = "0x1111AAC")]
		public bool IsScSliderVisible(int axisIndex, AxisSign axisSign)
		{
			return default(bool);
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x1111AF0", Offset = "0x1111AF0", VA = "0x1111AF0")]
		public bool IsScSliderCapVisible(int axisIndex, AxisSign axisSign)
		{
			return default(bool);
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x1111B34", Offset = "0x1111B34", VA = "0x1111B34")]
		public bool IsScPositiveSliderVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x1111B64", Offset = "0x1111B64", VA = "0x1111B64")]
		public bool IsScPositiveSliderCapVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x1111B94", Offset = "0x1111B94", VA = "0x1111B94")]
		public bool IsScNegativeSliderVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x1111BC8", Offset = "0x1111BC8", VA = "0x1111BC8")]
		public bool IsScNegativeSliderCapVisible(int axisIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x110F720", Offset = "0x110F720", VA = "0x110F720")]
		public void SetScSliderVisible(int axisIndex, AxisSign axisSign, bool isVisible)
		{
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x110F768", Offset = "0x110F768", VA = "0x110F768")]
		public void SetScSliderCapVisible(int axisIndex, AxisSign axisSign, bool isVisible)
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x1111BFC", Offset = "0x1111BFC", VA = "0x1111BFC")]
		public void SetScPositiveSliderVisible(int axisIndex, bool isVisible)
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x1111C30", Offset = "0x1111C30", VA = "0x1111C30")]
		public void SetScPositiveSliderCapVisible(int axisIndex, bool isVisible)
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x1111C64", Offset = "0x1111C64", VA = "0x1111C64")]
		public void SetScNegativeSliderVisible(int axisIndex, bool isVisible)
		{
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x1111C9C", Offset = "0x1111C9C", VA = "0x1111C9C")]
		public void SetScNegativeSliderCapVisible(int axisIndex, bool isVisible)
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x110F428", Offset = "0x110F428", VA = "0x110F428")]
		public void SetScSliderLength(float axisLength)
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x1111CD4", Offset = "0x1111CD4", VA = "0x1111CD4")]
		public void SetScSliderLineType(GizmoLine3DType lineType)
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x1111D18", Offset = "0x1111D18", VA = "0x1111D18")]
		public void SetScBoxSliderHeight(float height)
		{
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x1111D88", Offset = "0x1111D88", VA = "0x1111D88")]
		public void SetScBoxSliderDepth(float depth)
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x1111DF8", Offset = "0x1111DF8", VA = "0x1111DF8")]
		public void SetScCylinderSliderRadius(float radius)
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x1111E68", Offset = "0x1111E68", VA = "0x1111E68")]
		public void SetScScale(float scale)
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x1111F54", Offset = "0x1111F54", VA = "0x1111F54")]
		public void SetScUseZoomFactor(bool useZoomFactor)
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x1111FF4", Offset = "0x1111FF4", VA = "0x1111FF4")]
		public void SetScScaleGuideAxisLength(float length)
		{
		}

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x110F498", Offset = "0x110F498", VA = "0x110F498")]
		public void SetScAxisColor(int axisIndex, Color color)
		{
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0x110F868", Offset = "0x110F868", VA = "0x110F868")]
		public void SetScDblSliderFillAlpha(float alpha)
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0x110F7B0", Offset = "0x110F7B0", VA = "0x110F7B0")]
		public void SetScMidCapColor(Color color)
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0x1112040", Offset = "0x1112040", VA = "0x1112040")]
		public void SetScMidCapVisible(bool visible)
		{
		}

		[Token(Token = "0x6002147")]
		[Address(RVA = "0x110F60C", Offset = "0x110F60C", VA = "0x110F60C")]
		public void SetScHoveredColor(Color hoveredColor)
		{
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0x111204C", Offset = "0x111204C", VA = "0x111204C")]
		public void SetScSliderShadeMode(GizmoShadeMode shadeMode)
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x1112090", Offset = "0x1112090", VA = "0x1112090")]
		public void SetScSliderCapShadeMode(GizmoShadeMode shadeMode)
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0x11120DC", Offset = "0x11120DC", VA = "0x11120DC")]
		public void SetScMidCapShadeMode(GizmoShadeMode shadeMode)
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0x110F3DC", Offset = "0x110F3DC", VA = "0x110F3DC")]
		public void SetScSliderCapType(GizmoCap3DType capType)
		{
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x110F7D0", Offset = "0x110F7D0", VA = "0x110F7D0")]
		public void SetScMidCapType(GizmoCap3DType capType)
		{
		}

		[Token(Token = "0x600214D")]
		[Address(RVA = "0x11120F8", Offset = "0x11120F8", VA = "0x11120F8")]
		public bool IsScMidCapTypeAllowed(GizmoCap3DType capType)
		{
			return default(bool);
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0x1112108", Offset = "0x1112108", VA = "0x1112108")]
		public List<Enum> GetAllowedScMidCapTypes()
		{
			return null;
		}

		[Token(Token = "0x600214F")]
		[Address(RVA = "0x1112288", Offset = "0x1112288", VA = "0x1112288")]
		public void SetScSliderFillMode(GizmoFillMode3D fillMode)
		{
		}

		[Token(Token = "0x6002150")]
		[Address(RVA = "0x11122CC", Offset = "0x11122CC", VA = "0x11122CC")]
		public void SetScSliderCapFillMode(GizmoFillMode3D fillMode)
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0x1112318", Offset = "0x1112318", VA = "0x1112318")]
		public void SetScMidCapFillMode(GizmoFillMode3D fillMode)
		{
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0x1112334", Offset = "0x1112334", VA = "0x1112334")]
		public void SetScSliderBoxCapWidth(float width)
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0x11123AC", Offset = "0x11123AC", VA = "0x11123AC")]
		public void SetScSliderBoxCapHeight(float height)
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x1112424", Offset = "0x1112424", VA = "0x1112424")]
		public void SetScSliderBoxCapDepth(float depth)
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x111249C", Offset = "0x111249C", VA = "0x111249C")]
		public void SetScSliderConeCapHeight(float height)
		{
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x1112514", Offset = "0x1112514", VA = "0x1112514")]
		public void SetScSliderConeCapBaseRadius(float radius)
		{
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x111258C", Offset = "0x111258C", VA = "0x111258C")]
		public void SetScSliderPyramidCapWidth(float width)
		{
		}

		[Token(Token = "0x6002158")]
		[Address(RVA = "0x1112604", Offset = "0x1112604", VA = "0x1112604")]
		public void SetScSliderPyramidCapHeight(float height)
		{
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x111267C", Offset = "0x111267C", VA = "0x111267C")]
		public void SetScSliderPyramidCapDepth(float depth)
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0x11126F4", Offset = "0x11126F4", VA = "0x11126F4")]
		public void SetScSliderTriPrismCapWidth(float width)
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0x111276C", Offset = "0x111276C", VA = "0x111276C")]
		public void SetScSliderTriPrismCapHeight(float height)
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0x11127E4", Offset = "0x11127E4", VA = "0x11127E4")]
		public void SetScSliderTriPrismCapDepth(float depth)
		{
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0x111285C", Offset = "0x111285C", VA = "0x111285C")]
		public void SetScSliderSphereCapRadius(float radius)
		{
		}

		[Token(Token = "0x600215E")]
		[Address(RVA = "0x110F7F8", Offset = "0x110F7F8", VA = "0x110F7F8")]
		public void SetScMidCapBoxWidth(float width)
		{
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0x110F814", Offset = "0x110F814", VA = "0x110F814")]
		public void SetScMidCapBoxHeight(float height)
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0x110F830", Offset = "0x110F830", VA = "0x110F830")]
		public void SetScMidCapBoxDepth(float depth)
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0x110F84C", Offset = "0x110F84C", VA = "0x110F84C")]
		public void SetScMidCapSphereRadius(float radius)
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0x110F924", Offset = "0x110F924", VA = "0x110F924")]
		public void SetScDblSliderSize(float size)
		{
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0x11128D4", Offset = "0x11128D4", VA = "0x11128D4")]
		public void ConnectScSliderLookAndFeel(GizmoLineSlider3D slider, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0x1112904", Offset = "0x1112904", VA = "0x1112904")]
		public void ConnectScMidCapLookAndFeel(GizmoCap3D cap)
		{
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0x1112928", Offset = "0x1112928", VA = "0x1112928")]
		public void ConnectScDblSliderLookAndFeel(GizmoPlaneSlider3D slider, PlaneId planeId)
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0x1112954", Offset = "0x1112954", VA = "0x1112954")]
		public void ConnectScGizmoScaleGuideLookAndFeel(GizmoScaleGuide scaleGuide)
		{
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0x1112978", Offset = "0x1112978", VA = "0x1112978")]
		public void Inherit(ScaleGizmoLookAndFeel3D lookAndFeel)
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0x110DE2C", Offset = "0x110DE2C", VA = "0x110DE2C")]
		private GizmoLineSlider3DLookAndFeel GetScSglSliderLookAndFeel(int axisIndex, AxisSign axisSign)
		{
			return null;
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0x1112010", Offset = "0x1112010", VA = "0x1112010")]
		private GizmoPlaneSlider3DLookAndFeel GetScDblSliderLookAndFeel(PlaneId planeId)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004FB")]
	public class UniversalGizmoSettings2D : Settings
	{
		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private UniversalGizmoSettingsCategory _displayCategory;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GizmoPlaneSlider2DSettings _mvDblSliderSettings;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GizmoLineSlider2DSettings[] _mvSglSliderSettings;

		[Token(Token = "0x17000695")]
		public float MvLineSliderHoverEps
		{
			[Token(Token = "0x600216A")]
			[Address(RVA = "0x1112FB0", Offset = "0x1112FB0", VA = "0x1112FB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000696")]
		public float MvBoxSliderHoverEps
		{
			[Token(Token = "0x600216B")]
			[Address(RVA = "0x1112FE0", Offset = "0x1112FE0", VA = "0x1112FE0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000697")]
		public float MvXSnapStep
		{
			[Token(Token = "0x600216C")]
			[Address(RVA = "0x1113010", Offset = "0x1113010", VA = "0x1113010")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000698")]
		public float MvYSnapStep
		{
			[Token(Token = "0x600216D")]
			[Address(RVA = "0x111302C", Offset = "0x111302C", VA = "0x111302C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000699")]
		public float MvDragSensitivity
		{
			[Token(Token = "0x600216E")]
			[Address(RVA = "0x1113048", Offset = "0x1113048", VA = "0x1113048")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700069A")]
		public UniversalGizmoSettingsCategory DisplayCategory
		{
			[Token(Token = "0x600216F")]
			[Address(RVA = "0x1113064", Offset = "0x1113064", VA = "0x1113064")]
			get
			{
				return default(UniversalGizmoSettingsCategory);
			}
			[Token(Token = "0x6002170")]
			[Address(RVA = "0x111306C", Offset = "0x111306C", VA = "0x111306C")]
			set
			{
			}
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0x1113074", Offset = "0x1113074", VA = "0x1113074")]
		public UniversalGizmoSettings2D()
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0x11131CC", Offset = "0x11131CC", VA = "0x11131CC")]
		public void SetMvLineSliderHoverEps(float eps)
		{
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0x111323C", Offset = "0x111323C", VA = "0x111323C")]
		public void SetMvBoxSliderHoverEps(float eps)
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0x11132AC", Offset = "0x11132AC", VA = "0x11132AC")]
		public void SetMvXSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0x111336C", Offset = "0x111336C", VA = "0x111336C")]
		public void SetMvYSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x6002176")]
		[Address(RVA = "0x11133EC", Offset = "0x11133EC", VA = "0x11133EC")]
		public void SetMvDragSensitivity(float sensitivity)
		{
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0x1113470", Offset = "0x1113470", VA = "0x1113470")]
		public void ConnectMvSliderSettings(GizmoLineSlider2D slider, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x6002178")]
		[Address(RVA = "0x11134A0", Offset = "0x11134A0", VA = "0x11134A0")]
		public void ConnectMvDblSliderSettings(GizmoPlaneSlider2D slider)
		{
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0x11134C4", Offset = "0x11134C4", VA = "0x11134C4")]
		public void Inherit(MoveGizmoSettings2D settings)
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0x1113328", Offset = "0x1113328", VA = "0x1113328")]
		private GizmoLineSlider2DSettings GetMvSliderSettings(int axisIndex, AxisSign axisSign)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20004FC")]
	public class UniversalGizmoSettings3D : Settings
	{
		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private UniversalGizmoSettingsCategory _displayCategory;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GizmoObjectVertexSnapSettings _mvVertexSnapSettings;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GizmoLineSlider3DSettings[] _mvSglSliderSettings;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GizmoPlaneSlider3DSettings[] _mvDblSliderSettings;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _rtCamRightSnapStep;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _rtCamUpSnapStep;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GizmoPlaneSlider3DSettings[] _rtSliderSettings;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GizmoPlaneSlider2DSettings _rtCamLookSliderSettings;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _scUniformSnapStep;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GizmoLineSlider3DSettings[] _scSglSliderSettings;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GizmoPlaneSlider3DSettings[] _scDblSliderSettings;

		[Token(Token = "0x1700069B")]
		public GizmoObjectVertexSnapSettings VertexSnapSettings
		{
			[Token(Token = "0x600217B")]
			[Address(RVA = "0x1113548", Offset = "0x1113548", VA = "0x1113548")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700069C")]
		public float MvLineSliderHoverEps
		{
			[Token(Token = "0x600217C")]
			[Address(RVA = "0x1113550", Offset = "0x1113550", VA = "0x1113550")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700069D")]
		public float MvBoxSliderHoverEps
		{
			[Token(Token = "0x600217D")]
			[Address(RVA = "0x1113580", Offset = "0x1113580", VA = "0x1113580")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700069E")]
		public float MvCylinderSliderHoverEps
		{
			[Token(Token = "0x600217E")]
			[Address(RVA = "0x11135B0", Offset = "0x11135B0", VA = "0x11135B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700069F")]
		public float MvXSnapStep
		{
			[Token(Token = "0x600217F")]
			[Address(RVA = "0x11135E0", Offset = "0x11135E0", VA = "0x11135E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006A0")]
		public float MvYSnapStep
		{
			[Token(Token = "0x6002180")]
			[Address(RVA = "0x1113654", Offset = "0x1113654", VA = "0x1113654")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006A1")]
		public float MvZSnapStep
		{
			[Token(Token = "0x6002181")]
			[Address(RVA = "0x1113688", Offset = "0x1113688", VA = "0x1113688")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006A2")]
		public float MvDragSensitivity
		{
			[Token(Token = "0x6002182")]
			[Address(RVA = "0x11136BC", Offset = "0x11136BC", VA = "0x11136BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006A3")]
		public float RtAxisLineHoverEps
		{
			[Token(Token = "0x6002183")]
			[Address(RVA = "0x11136EC", Offset = "0x11136EC", VA = "0x11136EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006A4")]
		public float RtAxisTorusHoverEps
		{
			[Token(Token = "0x6002184")]
			[Address(RVA = "0x111371C", Offset = "0x111371C", VA = "0x111371C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006A5")]
		public float RtCamLookLineHoverEps
		{
			[Token(Token = "0x6002185")]
			[Address(RVA = "0x111374C", Offset = "0x111374C", VA = "0x111374C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006A6")]
		public float RtCamLookThickHoverEps
		{
			[Token(Token = "0x6002186")]
			[Address(RVA = "0x1113768", Offset = "0x1113768", VA = "0x1113768")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006A7")]
		public bool RtCanHoverCulledPixels
		{
			[Token(Token = "0x6002187")]
			[Address(RVA = "0x1113784", Offset = "0x1113784", VA = "0x1113784")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006A8")]
		public GizmoSnapMode RtSnapMode
		{
			[Token(Token = "0x6002188")]
			[Address(RVA = "0x11137BC", Offset = "0x11137BC", VA = "0x11137BC")]
			get
			{
				return default(GizmoSnapMode);
			}
		}

		[Token(Token = "0x170006A9")]
		public float RtXSnapStep
		{
			[Token(Token = "0x6002189")]
			[Address(RVA = "0x11137EC", Offset = "0x11137EC", VA = "0x11137EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006AA")]
		public float RtYSnapStep
		{
			[Token(Token = "0x600218A")]
			[Address(RVA = "0x111381C", Offset = "0x111381C", VA = "0x111381C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006AB")]
		public float RtZSnapStep
		{
			[Token(Token = "0x600218B")]
			[Address(RVA = "0x1113850", Offset = "0x1113850", VA = "0x1113850")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006AC")]
		public float RtCamRightSnapStep
		{
			[Token(Token = "0x600218C")]
			[Address(RVA = "0x1113884", Offset = "0x1113884", VA = "0x1113884")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006AD")]
		public float RtCamUpSnapStep
		{
			[Token(Token = "0x600218D")]
			[Address(RVA = "0x111388C", Offset = "0x111388C", VA = "0x111388C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006AE")]
		public float RtCamLookSnapStep
		{
			[Token(Token = "0x600218E")]
			[Address(RVA = "0x1113894", Offset = "0x1113894", VA = "0x1113894")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006AF")]
		public float RtDragSensitivity
		{
			[Token(Token = "0x600218F")]
			[Address(RVA = "0x11138B0", Offset = "0x11138B0", VA = "0x11138B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006B0")]
		public float ScLineSliderHoverEps
		{
			[Token(Token = "0x6002190")]
			[Address(RVA = "0x11138E0", Offset = "0x11138E0", VA = "0x11138E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006B1")]
		public float ScBoxSliderHoverEps
		{
			[Token(Token = "0x6002191")]
			[Address(RVA = "0x1113910", Offset = "0x1113910", VA = "0x1113910")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006B2")]
		public float ScCylinderSliderHoverEps
		{
			[Token(Token = "0x6002192")]
			[Address(RVA = "0x1113940", Offset = "0x1113940", VA = "0x1113940")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006B3")]
		public float ScXSnapStep
		{
			[Token(Token = "0x6002193")]
			[Address(RVA = "0x1113970", Offset = "0x1113970", VA = "0x1113970")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006B4")]
		public float ScYSnapStep
		{
			[Token(Token = "0x6002194")]
			[Address(RVA = "0x11139E4", Offset = "0x11139E4", VA = "0x11139E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006B5")]
		public float ScZSnapStep
		{
			[Token(Token = "0x6002195")]
			[Address(RVA = "0x1113A18", Offset = "0x1113A18", VA = "0x1113A18")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006B6")]
		public float ScXYSnapStep
		{
			[Token(Token = "0x6002196")]
			[Address(RVA = "0x1113A4C", Offset = "0x1113A4C", VA = "0x1113A4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006B7")]
		public float ScYZSnapStep
		{
			[Token(Token = "0x6002197")]
			[Address(RVA = "0x1113A9C", Offset = "0x1113A9C", VA = "0x1113A9C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006B8")]
		public float ScZXSnapStep
		{
			[Token(Token = "0x6002198")]
			[Address(RVA = "0x1113ABC", Offset = "0x1113ABC", VA = "0x1113ABC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006B9")]
		public float ScUniformSnapStep
		{
			[Token(Token = "0x6002199")]
			[Address(RVA = "0x1113ADC", Offset = "0x1113ADC", VA = "0x1113ADC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006BA")]
		public float ScDragSensitivity
		{
			[Token(Token = "0x600219A")]
			[Address(RVA = "0x1113AE4", Offset = "0x1113AE4", VA = "0x1113AE4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006BB")]
		public UniversalGizmoSettingsCategory DisplayCategory
		{
			[Token(Token = "0x600219B")]
			[Address(RVA = "0x1113B14", Offset = "0x1113B14", VA = "0x1113B14")]
			get
			{
				return default(UniversalGizmoSettingsCategory);
			}
			[Token(Token = "0x600219C")]
			[Address(RVA = "0x1113B1C", Offset = "0x1113B1C", VA = "0x1113B1C")]
			set
			{
			}
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0x1113B24", Offset = "0x1113B24", VA = "0x1113B24")]
		public UniversalGizmoSettings3D()
		{
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0x11141F8", Offset = "0x11141F8", VA = "0x11141F8")]
		public void SetMvLineSliderHoverEps(float eps)
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0x1114268", Offset = "0x1114268", VA = "0x1114268")]
		public void SetMvBoxSliderHoverEps(float eps)
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x11142D8", Offset = "0x11142D8", VA = "0x11142D8")]
		public void SetMvCylinderSliderHoverEps(float eps)
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x1114348", Offset = "0x1114348", VA = "0x1114348")]
		public void SetMvXSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x1114418", Offset = "0x1114418", VA = "0x1114418")]
		public void SetMvYSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x11144BC", Offset = "0x11144BC", VA = "0x11144BC")]
		public void SetMvZSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x1114560", Offset = "0x1114560", VA = "0x1114560")]
		public void SetMvDragSensitivity(float sensitivity)
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x111461C", Offset = "0x111461C", VA = "0x111461C")]
		public void ConnectMvSliderSettings(GizmoLineSlider3D slider, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x111464C", Offset = "0x111464C", VA = "0x111464C")]
		public void ConnectMvDblSliderSettings(GizmoPlaneSlider3D dblSlider, PlaneId planeId)
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x1114678", Offset = "0x1114678", VA = "0x1114678")]
		public void Inherit(MoveGizmoSettings3D settings)
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x1113610", Offset = "0x1113610", VA = "0x1113610")]
		private GizmoLineSlider3DSettings GetMvSglSliderSettings(int axisIndex, AxisSign axisSign)
		{
			return null;
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x11143E8", Offset = "0x11143E8", VA = "0x11143E8")]
		private GizmoPlaneSlider3DSettings GetMvDblSliderSettings(PlaneId planeId)
		{
			return null;
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x11140CC", Offset = "0x11140CC", VA = "0x11140CC")]
		public void SetRtCanHoverCulledPixels(bool canHover)
		{
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x1114738", Offset = "0x1114738", VA = "0x1114738")]
		public void SetRtAxisLineHoverEps(float eps)
		{
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x1114118", Offset = "0x1114118", VA = "0x1114118")]
		public void SetRtAxisTorusHoverEps(float eps)
		{
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x11140B0", Offset = "0x11140B0", VA = "0x11140B0")]
		public void SetRtCamLookLineHoverEps(float eps)
		{
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0x11147A8", Offset = "0x11147A8", VA = "0x11147A8")]
		public void SetRtCamLookThickHoverEps(float eps)
		{
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0x11147C4", Offset = "0x11147C4", VA = "0x11147C4")]
		public void SetRtAxisSnapStep(int axisIndex, float snapStep)
		{
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x11147FC", Offset = "0x11147FC", VA = "0x11147FC")]
		public void SetRtCamRightSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x1114810", Offset = "0x1114810", VA = "0x1114810")]
		public void SetRtCamUpSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0x1114824", Offset = "0x1114824", VA = "0x1114824")]
		public void SetRtCamLookSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x1114840", Offset = "0x1114840", VA = "0x1114840")]
		public void SetRtSnapMode(GizmoSnapMode snapMode)
		{
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0x1114890", Offset = "0x1114890", VA = "0x1114890")]
		public void SetRtDragSensitivity(float sensitivity)
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x1114914", Offset = "0x1114914", VA = "0x1114914")]
		public void ConnectRtSliderSettings(GizmoPlaneSlider3D slider, int axisIndex)
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x1114950", Offset = "0x1114950", VA = "0x1114950")]
		public void ConnectRtCamLookSliderSettings(GizmoPlaneSlider2D slider)
		{
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x1114974", Offset = "0x1114974", VA = "0x1114974")]
		public void Inherit(RotationGizmoSettings3D settings)
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x1114ABC", Offset = "0x1114ABC", VA = "0x1114ABC")]
		public void SetScLineSliderHoverEps(float eps)
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x1114B2C", Offset = "0x1114B2C", VA = "0x1114B2C")]
		public void SetScBoxSliderHoverEps(float eps)
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x1114B9C", Offset = "0x1114B9C", VA = "0x1114B9C")]
		public void SetScCylinderSliderHoverEps(float eps)
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x1114C0C", Offset = "0x1114C0C", VA = "0x1114C0C")]
		public void SetScXSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x1114CAC", Offset = "0x1114CAC", VA = "0x1114CAC")]
		public void SetScYSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x1114D50", Offset = "0x1114D50", VA = "0x1114D50")]
		public void SetScZSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x1114DF4", Offset = "0x1114DF4", VA = "0x1114DF4")]
		public void SetScXYSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x1114E24", Offset = "0x1114E24", VA = "0x1114E24")]
		public void SetScYZSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x1114E54", Offset = "0x1114E54", VA = "0x1114E54")]
		public void SetScZXSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x1114E84", Offset = "0x1114E84", VA = "0x1114E84")]
		public void SetScUniformScaleSnapStep(float snapStep)
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x1114188", Offset = "0x1114188", VA = "0x1114188")]
		public void SetScDragSensitivity(float sensitivity)
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x1114E98", Offset = "0x1114E98", VA = "0x1114E98")]
		public void ConnectScSliderSettings(GizmoLineSlider3D slider, int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x1114EC8", Offset = "0x1114EC8", VA = "0x1114EC8")]
		public void ConnectScDblSliderSettings(GizmoPlaneSlider3D dblSlider, PlaneId planeId)
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x1114EF4", Offset = "0x1114EF4", VA = "0x1114EF4")]
		public void Inherit(ScaleGizmoSettings3D settings)
		{
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0x11139A0", Offset = "0x11139A0", VA = "0x11139A0")]
		private GizmoLineSlider3DSettings GetScSglSliderSettings(int axisIndex, AxisSign axisSign)
		{
			return null;
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0x1113A6C", Offset = "0x1113A6C", VA = "0x1113A6C")]
		private GizmoPlaneSlider3DSettings GetScDblSliderSettings(PlaneId planeId)
		{
			return null;
		}
	}
	[Token(Token = "0x20004FD")]
	public enum UniversalGizmoSettingsCategory
	{
		[Token(Token = "0x40017FC")]
		Move,
		[Token(Token = "0x40017FD")]
		Rotate,
		[Token(Token = "0x40017FE")]
		Scale
	}
	[Token(Token = "0x20004FE")]
	public enum UniversalGizmoSettingsType
	{
		[Token(Token = "0x4001800")]
		Settings2D,
		[Token(Token = "0x4001801")]
		Settings3D,
		[Token(Token = "0x4001802")]
		LookAndFeel2D,
		[Token(Token = "0x4001803")]
		LookAndFeel3D
	}
	[Token(Token = "0x20004FF")]
	public delegate void RLDAppInitializedHandler();
	[Token(Token = "0x2000500")]
	public class RLDApp : MonoSingleton<RLDApp>, IRLDApplication
	{
		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera _renderCamera;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderPipelineId _renderPipelineId;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private DynamicConvertSettings _dynamicConvertSettings;

		[Token(Token = "0x170006BC")]
		public DynamicConvertSettings DynamicConvertSettings
		{
			[Token(Token = "0x60021CE")]
			[Address(RVA = "0x1115234", Offset = "0x1115234", VA = "0x1115234")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006BD")]
		public RenderPipelineId RenderPipelineId
		{
			[Token(Token = "0x60021CF")]
			[Address(RVA = "0x111523C", Offset = "0x111523C", VA = "0x111523C")]
			get
			{
				return default(RenderPipelineId);
			}
		}

		[Token(Token = "0x170006BE")]
		public Camera RenderCamera
		{
			[Token(Token = "0x60021D0")]
			[Address(RVA = "0x1115244", Offset = "0x1115244", VA = "0x1115244")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400003A")]
		public event RLDAppInitializedHandler Initialized
		{
			[Token(Token = "0x60021CC")]
			[Address(RVA = "0x11150FC", Offset = "0x11150FC", VA = "0x11150FC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60021CD")]
			[Address(RVA = "0x1115198", Offset = "0x1115198", VA = "0x1115198")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x111524C", Offset = "0x111524C", VA = "0x111524C")]
		private void OnSceneCanRenderCameraIcon(Camera camera, YesNoAnswer answer)
		{
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x111537C", Offset = "0x111537C", VA = "0x111537C")]
		private void OnCanCameraUseScrollWheel(YesNoAnswer answer)
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x111541C", Offset = "0x111541C", VA = "0x111541C")]
		private void OnCanCameraProcessInput(YesNoAnswer answer)
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0x11154B8", Offset = "0x11154B8", VA = "0x11154B8")]
		private void OnCanUndoRedo(UndoRedoOpType undoRedoOpType, YesNoAnswer answer)
		{
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0x11155EC", Offset = "0x11155EC", VA = "0x11155EC")]
		private void OnCanDoGizmoHoverUpdate(YesNoAnswer answer)
		{
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0x11156F4", Offset = "0x11156F4", VA = "0x11156F4")]
		private void OnCanObjectSelectionClickAndMultiSelectDeselect(YesNoAnswer answer)
		{
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x11157A8", Offset = "0x11157A8", VA = "0x11157A8")]
		private void OnViewportsCameraAdded(Camera camera)
		{
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x1115824", Offset = "0x1115824", VA = "0x1115824")]
		private void OnViewportCameraRemoved(Camera camera)
		{
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x11158A0", Offset = "0x11158A0", VA = "0x11158A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x1116200", Offset = "0x1116200", VA = "0x1116200")]
		private void DetectRenderPipeline()
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x11169D4", Offset = "0x11169D4", VA = "0x11169D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x1116B18", Offset = "0x1116B18", VA = "0x1116B18")]
		private void Update()
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x1116F10", Offset = "0x1116F10", VA = "0x1116F10")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x111756C", Offset = "0x111756C", VA = "0x111756C")]
		private void OnBeginCameraRendering(ScriptableRenderContext context, Camera camera)
		{
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x1117578", Offset = "0x1117578", VA = "0x1117578")]
		private void OnEndCameraRendering(ScriptableRenderContext context, Camera camera)
		{
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x111757C", Offset = "0x111757C", VA = "0x111757C")]
		public RLDApp()
		{
		}
	}
	[Token(Token = "0x2000501")]
	public interface IRLDApplication
	{
	}
	[Token(Token = "0x2000502")]
	public class SphereTree<T>
	{
		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SphereTreeNode<T> _root;

		[Token(Token = "0x60021E1")]
		public SphereTree()
		{
		}

		[Token(Token = "0x60021E2")]
		public void DebugDraw()
		{
		}

		[Token(Token = "0x60021E3")]
		public SphereTreeNode<T> AddNode(T nodeData, Sphere sphere)
		{
			return null;
		}

		[Token(Token = "0x60021E4")]
		public void RemoveNode(SphereTreeNode<T> node)
		{
		}

		[Token(Token = "0x60021E5")]
		public void OnNodeSphereUpdated(SphereTreeNode<T> node)
		{
		}

		[Token(Token = "0x60021E6")]
		public bool RaycastAll(Ray ray, List<SphereTreeNodeRayHit<T>> hits)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E7")]
		public bool OverlapBox(OBB box, List<SphereTreeNode<T>> nodes)
		{
			return default(bool);
		}

		[Token(Token = "0x60021E8")]
		private void InsertNode(SphereTreeNode<T> node)
		{
		}
	}
	[Token(Token = "0x2000503")]
	public class SphereTreeNode<T>
	{
		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SphereTreeNode<T> _stackTop;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SphereTreeNode<T> _stackPrevious;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Sphere _sphere;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _data;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SphereTreeNode<T> _parent;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SphereTreeNode<T>[] _children;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int _numChildren;

		[Token(Token = "0x170006BF")]
		public SphereTreeNode<T>[] Children
		{
			[Token(Token = "0x60021E9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006C0")]
		public int NumChildren
		{
			[Token(Token = "0x60021EA")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170006C1")]
		public bool IsLeaf
		{
			[Token(Token = "0x60021EB")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170006C2")]
		public Sphere Sphere
		{
			[Token(Token = "0x60021EE")]
			get
			{
				return default(Sphere);
			}
			[Token(Token = "0x60021EF")]
			set
			{
			}
		}

		[Token(Token = "0x170006C3")]
		public Vector3 Center
		{
			[Token(Token = "0x60021F0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60021F1")]
			set
			{
			}
		}

		[Token(Token = "0x170006C4")]
		public float Radius
		{
			[Token(Token = "0x60021F2")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60021F3")]
			set
			{
			}
		}

		[Token(Token = "0x170006C5")]
		public SphereTreeNode<T> Parent
		{
			[Token(Token = "0x60021F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006C6")]
		public T Data
		{
			[Token(Token = "0x60021F5")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60021F6")]
			set
			{
			}
		}

		[Token(Token = "0x170006C7")]
		public SphereTreeNode<T> StackTop
		{
			[Token(Token = "0x60021F7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021EC")]
		public SphereTreeNode()
		{
		}

		[Token(Token = "0x60021ED")]
		public SphereTreeNode(T data, Sphere sphere)
		{
		}

		[Token(Token = "0x60021F8")]
		public void StackPush(SphereTreeNode<T> node)
		{
		}

		[Token(Token = "0x60021F9")]
		public SphereTreeNode<T> StackPop()
		{
			return null;
		}

		[Token(Token = "0x60021FA")]
		public bool IsOutsideParent()
		{
			return default(bool);
		}

		[Token(Token = "0x60021FB")]
		public SphereTreeNode<T> ClosestChild(SphereTreeNode<T> node)
		{
			return null;
		}

		[Token(Token = "0x60021FC")]
		public void SetParent(SphereTreeNode<T> newParent)
		{
		}

		[Token(Token = "0x60021FD")]
		public void EncapsulateChildrenBottomUp()
		{
		}

		[Token(Token = "0x60021FE")]
		public void DebugDraw()
		{
		}
	}
	[Token(Token = "0x2000504")]
	public class SphereTreeNodeRayHit<T>
	{
		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private SphereTreeNode<T> _hitNode;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 _hitPoint;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _hitEnter;

		[Token(Token = "0x170006C8")]
		public SphereTreeNode<T> HitNode
		{
			[Token(Token = "0x60021FF")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006C9")]
		public Vector3 HitPoint
		{
			[Token(Token = "0x6002200")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170006CA")]
		public float HitEnter
		{
			[Token(Token = "0x6002201")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002202")]
		public SphereTreeNodeRayHit(Ray ray, SphereTreeNode<T> hitNode, float hitEnter)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000505")]
	public class CameraBackgroundSettings : Settings
	{
		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color _firstColor;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Color _secondColor;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _gradientOffset;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool _isVisible;

		[Token(Token = "0x170006CB")]
		public Color FirstColor
		{
			[Token(Token = "0x6002203")]
			[Address(RVA = "0x1117630", Offset = "0x1117630", VA = "0x1117630")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002204")]
			[Address(RVA = "0x111763C", Offset = "0x111763C", VA = "0x111763C")]
			set
			{
			}
		}

		[Token(Token = "0x170006CC")]
		public Color SecondColor
		{
			[Token(Token = "0x6002205")]
			[Address(RVA = "0x1117648", Offset = "0x1117648", VA = "0x1117648")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002206")]
			[Address(RVA = "0x1117654", Offset = "0x1117654", VA = "0x1117654")]
			set
			{
			}
		}

		[Token(Token = "0x170006CD")]
		public float GradientOffset
		{
			[Token(Token = "0x6002207")]
			[Address(RVA = "0x1117660", Offset = "0x1117660", VA = "0x1117660")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002208")]
			[Address(RVA = "0x1117668", Offset = "0x1117668", VA = "0x1117668")]
			set
			{
			}
		}

		[Token(Token = "0x170006CE")]
		public bool IsVisible
		{
			[Token(Token = "0x6002209")]
			[Address(RVA = "0x1117684", Offset = "0x1117684", VA = "0x1117684")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600220A")]
			[Address(RVA = "0x111768C", Offset = "0x111768C", VA = "0x111768C")]
			set
			{
			}
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x1117698", Offset = "0x1117698", VA = "0x1117698")]
		public CameraBackgroundSettings()
		{
		}
	}
	[Token(Token = "0x2000506")]
	public static class CameraFocus
	{
		[Token(Token = "0x2000507")]
		public class Data
		{
			[Token(Token = "0x4001817")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector3 _cameraWorldPosition;

			[Token(Token = "0x4001818")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Vector3 _focusPoint;

			[Token(Token = "0x4001819")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float _focusPointOffset;

			[Token(Token = "0x170006CF")]
			public Vector3 CameraWorldPosition
			{
				[Token(Token = "0x600220D")]
				[Address(RVA = "0x1117944", Offset = "0x1117944", VA = "0x1117944")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170006D0")]
			public Vector3 FocusPoint
			{
				[Token(Token = "0x600220E")]
				[Address(RVA = "0x1117950", Offset = "0x1117950", VA = "0x1117950")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x170006D1")]
			public float FocusPointOffset
			{
				[Token(Token = "0x600220F")]
				[Address(RVA = "0x111795C", Offset = "0x111795C", VA = "0x111795C")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6002210")]
			[Address(RVA = "0x1117888", Offset = "0x1117888", VA = "0x1117888")]
			public Data(Vector3 cameraWorldPosition, Vector3 focusPoint)
			{
			}
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x11176D0", Offset = "0x11176D0", VA = "0x11176D0")]
		public static Data CalculateFocusData(Camera camera, AABB focusAABB, CameraFocusSettings focusSettings)
		{
			return null;
		}
	}
	[Token(Token = "0x2000508")]
	public enum CameraFocusMode
	{
		[Token(Token = "0x400181B")]
		Instant,
		[Token(Token = "0x400181C")]
		Constant,
		[Token(Token = "0x400181D")]
		Smooth
	}
	[Serializable]
	[Token(Token = "0x2000509")]
	public class CameraFocusSettings : Settings
	{
		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private CameraFocusMode _focusMode;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _constantSpeed;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _smoothTime;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _focusDistanceAdd;

		[Token(Token = "0x170006D2")]
		public CameraFocusMode FocusMode
		{
			[Token(Token = "0x6002211")]
			[Address(RVA = "0x1117964", Offset = "0x1117964", VA = "0x1117964")]
			get
			{
				return default(CameraFocusMode);
			}
			[Token(Token = "0x6002212")]
			[Address(RVA = "0x111796C", Offset = "0x111796C", VA = "0x111796C")]
			set
			{
			}
		}

		[Token(Token = "0x170006D3")]
		public float ConstantSpeed
		{
			[Token(Token = "0x6002213")]
			[Address(RVA = "0x1117974", Offset = "0x1117974", VA = "0x1117974")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002214")]
			[Address(RVA = "0x111797C", Offset = "0x111797C", VA = "0x111797C")]
			set
			{
			}
		}

		[Token(Token = "0x170006D4")]
		public float SmoothTime
		{
			[Token(Token = "0x6002215")]
			[Address(RVA = "0x1117990", Offset = "0x1117990", VA = "0x1117990")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002216")]
			[Address(RVA = "0x1117998", Offset = "0x1117998", VA = "0x1117998")]
			set
			{
			}
		}

		[Token(Token = "0x170006D5")]
		public float FocusDistanceAdd
		{
			[Token(Token = "0x6002217")]
			[Address(RVA = "0x11179AC", Offset = "0x11179AC", VA = "0x11179AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002218")]
			[Address(RVA = "0x11179B4", Offset = "0x11179B4", VA = "0x11179B4")]
			set
			{
			}
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x11179C8", Offset = "0x11179C8", VA = "0x11179C8")]
		public CameraFocusSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200050A")]
	public class CameraHotkeys : Settings
	{
		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Hotkeys _moveForward;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Hotkeys _moveBack;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Hotkeys _strafeLeft;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Hotkeys _strafeRight;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Hotkeys _moveUp;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Hotkeys _moveDown;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Hotkeys _pan;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Hotkeys _lookAround;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Hotkeys _orbit;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Hotkeys _alternateMoveSpeed;

		[Token(Token = "0x170006D6")]
		public Hotkeys MoveForward
		{
			[Token(Token = "0x600221A")]
			[Address(RVA = "0x11179F0", Offset = "0x11179F0", VA = "0x11179F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006D7")]
		public Hotkeys MoveBack
		{
			[Token(Token = "0x600221B")]
			[Address(RVA = "0x11179F8", Offset = "0x11179F8", VA = "0x11179F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006D8")]
		public Hotkeys StrafeLeft
		{
			[Token(Token = "0x600221C")]
			[Address(RVA = "0x1117A00", Offset = "0x1117A00", VA = "0x1117A00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006D9")]
		public Hotkeys StrafeRight
		{
			[Token(Token = "0x600221D")]
			[Address(RVA = "0x1117A08", Offset = "0x1117A08", VA = "0x1117A08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006DA")]
		public Hotkeys MoveUp
		{
			[Token(Token = "0x600221E")]
			[Address(RVA = "0x1117A10", Offset = "0x1117A10", VA = "0x1117A10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006DB")]
		public Hotkeys MoveDown
		{
			[Token(Token = "0x600221F")]
			[Address(RVA = "0x1117A18", Offset = "0x1117A18", VA = "0x1117A18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006DC")]
		public Hotkeys Pan
		{
			[Token(Token = "0x6002220")]
			[Address(RVA = "0x1117A20", Offset = "0x1117A20", VA = "0x1117A20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006DD")]
		public Hotkeys LookAround
		{
			[Token(Token = "0x6002221")]
			[Address(RVA = "0x1117A28", Offset = "0x1117A28", VA = "0x1117A28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006DE")]
		public Hotkeys Orbit
		{
			[Token(Token = "0x6002222")]
			[Address(RVA = "0x1117A30", Offset = "0x1117A30", VA = "0x1117A30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170006DF")]
		public Hotkeys AlternateMoveSpeed
		{
			[Token(Token = "0x6002223")]
			[Address(RVA = "0x1117A38", Offset = "0x1117A38", VA = "0x1117A38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0x1117A40", Offset = "0x1117A40", VA = "0x1117A40")]
		public CameraHotkeys()
		{
		}
	}
	[Token(Token = "0x200050B")]
	public enum CameraLookAroundMode
	{
		[Token(Token = "0x400182D")]
		Standard,
		[Token(Token = "0x400182E")]
		Smooth
	}
	[Serializable]
	[Token(Token = "0x200050C")]
	public class CameraLookAroundSettings : Settings
	{
		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private CameraLookAroundMode _lookAroundMode;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _standardLookAroundSensitivity;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _smoothLookAroundSensitivity;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float smoothValue;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _invertX;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[SerializeField]
		private bool _invertY;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[SerializeField]
		private bool _isLookAroundEnabled;

		[Token(Token = "0x170006E0")]
		public CameraLookAroundMode LookAroundMode
		{
			[Token(Token = "0x6002225")]
			[Address(RVA = "0x1117DD8", Offset = "0x1117DD8", VA = "0x1117DD8")]
			get
			{
				return default(CameraLookAroundMode);
			}
			[Token(Token = "0x6002226")]
			[Address(RVA = "0x1117DE0", Offset = "0x1117DE0", VA = "0x1117DE0")]
			set
			{
			}
		}

		[Token(Token = "0x170006E1")]
		public float StandardLookAroundSensitivity
		{
			[Token(Token = "0x6002227")]
			[Address(RVA = "0x1117DE8", Offset = "0x1117DE8", VA = "0x1117DE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002228")]
			[Address(RVA = "0x1117DF0", Offset = "0x1117DF0", VA = "0x1117DF0")]
			set
			{
			}
		}

		[Token(Token = "0x170006E2")]
		public float SmoothLookAroundSensitivity
		{
			[Token(Token = "0x6002229")]
			[Address(RVA = "0x1117E04", Offset = "0x1117E04", VA = "0x1117E04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600222A")]
			[Address(RVA = "0x1117E0C", Offset = "0x1117E0C", VA = "0x1117E0C")]
			set
			{
			}
		}

		[Token(Token = "0x170006E3")]
		public float Sensitivity
		{
			[Token(Token = "0x600222B")]
			[Address(RVA = "0x1117E20", Offset = "0x1117E20", VA = "0x1117E20")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006E4")]
		public float SmoothValue
		{
			[Token(Token = "0x600222C")]
			[Address(RVA = "0x1117E3C", Offset = "0x1117E3C", VA = "0x1117E3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600222D")]
			[Address(RVA = "0x1117E44", Offset = "0x1117E44", VA = "0x1117E44")]
			set
			{
			}
		}

		[Token(Token = "0x170006E5")]
		public bool InvertX
		{
			[Token(Token = "0x600222E")]
			[Address(RVA = "0x1117E58", Offset = "0x1117E58", VA = "0x1117E58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600222F")]
			[Address(RVA = "0x1117E60", Offset = "0x1117E60", VA = "0x1117E60")]
			set
			{
			}
		}

		[Token(Token = "0x170006E6")]
		public bool InvertY
		{
			[Token(Token = "0x6002230")]
			[Address(RVA = "0x1117E6C", Offset = "0x1117E6C", VA = "0x1117E6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002231")]
			[Address(RVA = "0x1117E74", Offset = "0x1117E74", VA = "0x1117E74")]
			set
			{
			}
		}

		[Token(Token = "0x170006E7")]
		public bool IsLookAroundEnabled
		{
			[Token(Token = "0x6002232")]
			[Address(RVA = "0x1117E80", Offset = "0x1117E80", VA = "0x1117E80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002233")]
			[Address(RVA = "0x1117E88", Offset = "0x1117E88", VA = "0x1117E88")]
			set
			{
			}
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x1117E94", Offset = "0x1117E94", VA = "0x1117E94")]
		public CameraLookAroundSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200050D")]
	public class CameraMoveSettings : Settings
	{
		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float _minMoveSpeed;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _moveSpeed;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _alternateMoveSpeed;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _accelerationRate;

		[Token(Token = "0x170006E8")]
		public float MoveSpeed
		{
			[Token(Token = "0x6002235")]
			[Address(RVA = "0x1117EB4", Offset = "0x1117EB4", VA = "0x1117EB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002236")]
			[Address(RVA = "0x1117EBC", Offset = "0x1117EBC", VA = "0x1117EBC")]
			set
			{
			}
		}

		[Token(Token = "0x170006E9")]
		public float AlternateMoveSpeed
		{
			[Token(Token = "0x6002237")]
			[Address(RVA = "0x1117F30", Offset = "0x1117F30", VA = "0x1117F30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002238")]
			[Address(RVA = "0x1117F38", Offset = "0x1117F38", VA = "0x1117F38")]
			set
			{
			}
		}

		[Token(Token = "0x170006EA")]
		public float AccelerationRate
		{
			[Token(Token = "0x6002239")]
			[Address(RVA = "0x1117FAC", Offset = "0x1117FAC", VA = "0x1117FAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600223A")]
			[Address(RVA = "0x1117FB4", Offset = "0x1117FB4", VA = "0x1117FB4")]
			set
			{
			}
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0x1117FC4", Offset = "0x1117FC4", VA = "0x1117FC4")]
		public CameraMoveSettings()
		{
		}
	}
	[Token(Token = "0x200050E")]
	public enum CameraOrbitMode
	{
		[Token(Token = "0x400183B")]
		Standard,
		[Token(Token = "0x400183C")]
		Smooth
	}
	[Serializable]
	[Token(Token = "0x200050F")]
	public class CameraOrbitSettings : Settings
	{
		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private CameraOrbitMode _orbitMode;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _standardOrbitSensitivity;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _smoothOrbitSensitivity;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _smoothValue;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _invertX;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[SerializeField]
		private bool _invertY;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[SerializeField]
		private bool _isOrbitEnabled;

		[Token(Token = "0x170006EB")]
		public CameraOrbitMode OrbitMode
		{
			[Token(Token = "0x600223D")]
			[Address(RVA = "0x1118030", Offset = "0x1118030", VA = "0x1118030")]
			get
			{
				return default(CameraOrbitMode);
			}
			[Token(Token = "0x600223E")]
			[Address(RVA = "0x1118038", Offset = "0x1118038", VA = "0x1118038")]
			set
			{
			}
		}

		[Token(Token = "0x170006EC")]
		public float StandardOrbitSensitivity
		{
			[Token(Token = "0x600223F")]
			[Address(RVA = "0x1118040", Offset = "0x1118040", VA = "0x1118040")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002240")]
			[Address(RVA = "0x1118048", Offset = "0x1118048", VA = "0x1118048")]
			set
			{
			}
		}

		[Token(Token = "0x170006ED")]
		public float SmoothOrbitSensitivity
		{
			[Token(Token = "0x6002241")]
			[Address(RVA = "0x111805C", Offset = "0x111805C", VA = "0x111805C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002242")]
			[Address(RVA = "0x1118064", Offset = "0x1118064", VA = "0x1118064")]
			set
			{
			}
		}

		[Token(Token = "0x170006EE")]
		public float OrbitSensitivity
		{
			[Token(Token = "0x6002243")]
			[Address(RVA = "0x1118078", Offset = "0x1118078", VA = "0x1118078")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006EF")]
		public float SmoothValue
		{
			[Token(Token = "0x6002244")]
			[Address(RVA = "0x1118094", Offset = "0x1118094", VA = "0x1118094")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002245")]
			[Address(RVA = "0x111809C", Offset = "0x111809C", VA = "0x111809C")]
			set
			{
			}
		}

		[Token(Token = "0x170006F0")]
		public bool InvertX
		{
			[Token(Token = "0x6002246")]
			[Address(RVA = "0x11180B0", Offset = "0x11180B0", VA = "0x11180B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002247")]
			[Address(RVA = "0x11180B8", Offset = "0x11180B8", VA = "0x11180B8")]
			set
			{
			}
		}

		[Token(Token = "0x170006F1")]
		public bool InvertY
		{
			[Token(Token = "0x6002248")]
			[Address(RVA = "0x11180C4", Offset = "0x11180C4", VA = "0x11180C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002249")]
			[Address(RVA = "0x11180CC", Offset = "0x11180CC", VA = "0x11180CC")]
			set
			{
			}
		}

		[Token(Token = "0x170006F2")]
		public bool IsOrbitEnabled
		{
			[Token(Token = "0x600224A")]
			[Address(RVA = "0x11180D8", Offset = "0x11180D8", VA = "0x11180D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600224B")]
			[Address(RVA = "0x11180E0", Offset = "0x11180E0", VA = "0x11180E0")]
			set
			{
			}
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0x11180EC", Offset = "0x11180EC", VA = "0x11180EC")]
		public CameraOrbitSettings()
		{
		}
	}
	[Token(Token = "0x2000510")]
	public enum CameraPanMode
	{
		[Token(Token = "0x4001845")]
		Standard,
		[Token(Token = "0x4001846")]
		Smooth
	}
	[Serializable]
	[Token(Token = "0x2000511")]
	public class CameraPanSettings : Settings
	{
		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private CameraPanMode _panMode;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _standardPanSensitivity;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _smoothPanSensitivity;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _smoothValue;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _invertX;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[SerializeField]
		private bool _invertY;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[SerializeField]
		private bool _isPanningEnabled;

		[Token(Token = "0x170006F3")]
		public CameraPanMode PanMode
		{
			[Token(Token = "0x600224D")]
			[Address(RVA = "0x111810C", Offset = "0x111810C", VA = "0x111810C")]
			get
			{
				return default(CameraPanMode);
			}
			[Token(Token = "0x600224E")]
			[Address(RVA = "0x1118114", Offset = "0x1118114", VA = "0x1118114")]
			set
			{
			}
		}

		[Token(Token = "0x170006F4")]
		public float StandardPanSensitivity
		{
			[Token(Token = "0x600224F")]
			[Address(RVA = "0x111811C", Offset = "0x111811C", VA = "0x111811C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002250")]
			[Address(RVA = "0x1118124", Offset = "0x1118124", VA = "0x1118124")]
			set
			{
			}
		}

		[Token(Token = "0x170006F5")]
		public float SmoothPanSensitivity
		{
			[Token(Token = "0x6002251")]
			[Address(RVA = "0x1118138", Offset = "0x1118138", VA = "0x1118138")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002252")]
			[Address(RVA = "0x1118140", Offset = "0x1118140", VA = "0x1118140")]
			set
			{
			}
		}

		[Token(Token = "0x170006F6")]
		public float Sensitivity
		{
			[Token(Token = "0x6002253")]
			[Address(RVA = "0x1118154", Offset = "0x1118154", VA = "0x1118154")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170006F7")]
		public float SmoothValue
		{
			[Token(Token = "0x6002254")]
			[Address(RVA = "0x1118170", Offset = "0x1118170", VA = "0x1118170")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002255")]
			[Address(RVA = "0x1118178", Offset = "0x1118178", VA = "0x1118178")]
			set
			{
			}
		}

		[Token(Token = "0x170006F8")]
		public bool InvertX
		{
			[Token(Token = "0x6002256")]
			[Address(RVA = "0x111818C", Offset = "0x111818C", VA = "0x111818C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002257")]
			[Address(RVA = "0x1118194", Offset = "0x1118194", VA = "0x1118194")]
			set
			{
			}
		}

		[Token(Token = "0x170006F9")]
		public bool InvertY
		{
			[Token(Token = "0x6002258")]
			[Address(RVA = "0x11181A0", Offset = "0x11181A0", VA = "0x11181A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002259")]
			[Address(RVA = "0x11181A8", Offset = "0x11181A8", VA = "0x11181A8")]
			set
			{
			}
		}

		[Token(Token = "0x170006FA")]
		public bool IsPanningEnabled
		{
			[Token(Token = "0x600225A")]
			[Address(RVA = "0x11181B4", Offset = "0x11181B4", VA = "0x11181B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600225B")]
			[Address(RVA = "0x11181BC", Offset = "0x11181BC", VA = "0x11181BC")]
			set
			{
			}
		}

		[Token(Token = "0x600225C")]
		[Address(RVA = "0x11181C8", Offset = "0x11181C8", VA = "0x11181C8")]
		public CameraPanSettings()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public delegate void CameraProjectionSwitchBeginHandler(CameraPrjSwitchTransition.Type transitionType);
	[Token(Token = "0x2000513")]
	public delegate void CameraProjectionSwitchUpdateHandler(CameraPrjSwitchTransition.Type transitionType);
	[Token(Token = "0x2000514")]
	public delegate void CameraProjectionSwitchEndHandler(CameraPrjSwitchTransition.Type transitionType);
	[Token(Token = "0x2000515")]
	public class CameraPrjSwitchTransition
	{
		[Token(Token = "0x2000516")]
		public enum Type
		{
			[Token(Token = "0x400185B")]
			None,
			[Token(Token = "0x400185C")]
			ToOrtho,
			[Token(Token = "0x400185D")]
			ToPerspective
		}

		[Token(Token = "0x2000517")]
		[CompilerGenerated]
		private sealed class <DoTransition>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400185E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400185F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001860")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraPrjSwitchTransition <>4__this;

			[Token(Token = "0x4001861")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <frustumHeight>5__2;

			[Token(Token = "0x4001862")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <targetFOV>5__3;

			[Token(Token = "0x4001863")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <invDuration>5__4;

			[Token(Token = "0x4001864")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <fovSpeed>5__5;

			[Token(Token = "0x4001865")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Transform <_targetTransform>5__6;

			[Token(Token = "0x17000703")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002282")]
				[Address(RVA = "0x111920C", Offset = "0x111920C", VA = "0x111920C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000704")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002284")]
				[Address(RVA = "0x1119254", Offset = "0x1119254", VA = "0x1119254", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600227F")]
			[Address(RVA = "0x1118D44", Offset = "0x1118D44", VA = "0x1118D44")]
			[DebuggerHidden]
			public <DoTransition>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6002280")]
			[Address(RVA = "0x1118D88", Offset = "0x1118D88", VA = "0x1118D88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002281")]
			[Address(RVA = "0x1118D8C", Offset = "0x1118D8C", VA = "0x1118D8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002283")]
			[Address(RVA = "0x1119214", Offset = "0x1119214", VA = "0x1119214", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IEnumerator _transitionCrtn;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MonoBehaviour _targetMono;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera _targetCamera;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _camFieldOfView;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 _camFocusPoint;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 _camRestorePosition;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Type _transitionType;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _durationInSeconds;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _progress;

		[Token(Token = "0x170006FB")]
		public MonoBehaviour TargetMono
		{
			[Token(Token = "0x600226F")]
			[Address(RVA = "0x11189FC", Offset = "0x11189FC", VA = "0x11189FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002270")]
			[Address(RVA = "0x1118A04", Offset = "0x1118A04", VA = "0x1118A04")]
			set
			{
			}
		}

		[Token(Token = "0x170006FC")]
		public Camera TargetCamera
		{
			[Token(Token = "0x6002271")]
			[Address(RVA = "0x1118A9C", Offset = "0x1118A9C", VA = "0x1118A9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002272")]
			[Address(RVA = "0x1118AA4", Offset = "0x1118AA4", VA = "0x1118AA4")]
			set
			{
			}
		}

		[Token(Token = "0x170006FD")]
		public Type TransitionType
		{
			[Token(Token = "0x6002273")]
			[Address(RVA = "0x1118B2C", Offset = "0x1118B2C", VA = "0x1118B2C")]
			get
			{
				return default(Type);
			}
		}

		[Token(Token = "0x170006FE")]
		public float DurationInSeconds
		{
			[Token(Token = "0x6002274")]
			[Address(RVA = "0x1118B34", Offset = "0x1118B34", VA = "0x1118B34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002275")]
			[Address(RVA = "0x1118B3C", Offset = "0x1118B3C", VA = "0x1118B3C")]
			set
			{
			}
		}

		[Token(Token = "0x170006FF")]
		public float Progress
		{
			[Token(Token = "0x6002276")]
			[Address(RVA = "0x1118B60", Offset = "0x1118B60", VA = "0x1118B60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000700")]
		public float CamFieldOfView
		{
			[Token(Token = "0x6002277")]
			[Address(RVA = "0x1118B68", Offset = "0x1118B68", VA = "0x1118B68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002278")]
			[Address(RVA = "0x1118B70", Offset = "0x1118B70", VA = "0x1118B70")]
			set
			{
			}
		}

		[Token(Token = "0x17000701")]
		public Vector3 CamFocusPoint
		{
			[Token(Token = "0x6002279")]
			[Address(RVA = "0x1118B88", Offset = "0x1118B88", VA = "0x1118B88")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600227A")]
			[Address(RVA = "0x1118B94", Offset = "0x1118B94", VA = "0x1118B94")]
			set
			{
			}
		}

		[Token(Token = "0x17000702")]
		public bool IsActive
		{
			[Token(Token = "0x600227B")]
			[Address(RVA = "0x1118A8C", Offset = "0x1118A8C", VA = "0x1118A8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400003B")]
		public event CameraProjectionSwitchBeginHandler TransitionBegin
		{
			[Token(Token = "0x6002269")]
			[Address(RVA = "0x1118654", Offset = "0x1118654", VA = "0x1118654")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600226A")]
			[Address(RVA = "0x11186F0", Offset = "0x11186F0", VA = "0x11186F0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003C")]
		public event CameraProjectionSwitchUpdateHandler TransitionUpdate
		{
			[Token(Token = "0x600226B")]
			[Address(RVA = "0x111878C", Offset = "0x111878C", VA = "0x111878C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600226C")]
			[Address(RVA = "0x1118828", Offset = "0x1118828", VA = "0x1118828")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public event CameraProjectionSwitchBeginHandler TransitionEnd
		{
			[Token(Token = "0x600226D")]
			[Address(RVA = "0x11188C4", Offset = "0x11188C4", VA = "0x11188C4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600226E")]
			[Address(RVA = "0x1118960", Offset = "0x1118960", VA = "0x1118960")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600227C")]
		[Address(RVA = "0x1118BAC", Offset = "0x1118BAC", VA = "0x1118BAC")]
		public void Begin()
		{
		}

		[Token(Token = "0x600227D")]
		[Address(RVA = "0x1118CD0", Offset = "0x1118CD0", VA = "0x1118CD0")]
		[IteratorStateMachine(typeof(<DoTransition>d__41))]
		private IEnumerator DoTransition()
		{
			return null;
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0x1118D6C", Offset = "0x1118D6C", VA = "0x1118D6C")]
		public CameraPrjSwitchTransition()
		{
		}
	}
	[Token(Token = "0x2000518")]
	public enum CameraProjectionSwitchMode
	{
		[Token(Token = "0x4001867")]
		Transition,
		[Token(Token = "0x4001868")]
		Instant
	}
	[Serializable]
	[Token(Token = "0x2000519")]
	public class CameraProjectionSwitchSettings : Settings
	{
		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private CameraProjectionSwitchMode _switchMode;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _transitionDurationInSeconds;

		[Token(Token = "0x17000705")]
		public CameraProjectionSwitchMode SwitchMode
		{
			[Token(Token = "0x6002285")]
			[Address(RVA = "0x111925C", Offset = "0x111925C", VA = "0x111925C")]
			get
			{
				return default(CameraProjectionSwitchMode);
			}
			[Token(Token = "0x6002286")]
			[Address(RVA = "0x1119264", Offset = "0x1119264", VA = "0x1119264")]
			set
			{
			}
		}

		[Token(Token = "0x17000706")]
		public float TransitionDurationInSeconds
		{
			[Token(Token = "0x6002287")]
			[Address(RVA = "0x111926C", Offset = "0x111926C", VA = "0x111926C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002288")]
			[Address(RVA = "0x1119274", Offset = "0x1119274", VA = "0x1119274")]
			set
			{
			}
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0x1119288", Offset = "0x1119288", VA = "0x1119288")]
		public CameraProjectionSwitchSettings()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public enum CameraRotationSwitchMode
	{
		[Token(Token = "0x400186C")]
		Constant,
		[Token(Token = "0x400186D")]
		Smooth,
		[Token(Token = "0x400186E")]
		Instant
	}
	[Serializable]
	[Token(Token = "0x200051B")]
	public class CameraRotationSwitchSettings : Settings
	{
		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float _minConstantDuration;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private CameraRotationSwitchMode _switchMode;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _constantSwitchDurationInSeconds;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _smoothValue;

		[Token(Token = "0x17000707")]
		public CameraRotationSwitchMode SwitchMode
		{
			[Token(Token = "0x600228A")]
			[Address(RVA = "0x111929C", Offset = "0x111929C", VA = "0x111929C")]
			get
			{
				return default(CameraRotationSwitchMode);
			}
			[Token(Token = "0x600228B")]
			[Address(RVA = "0x11192A4", Offset = "0x11192A4", VA = "0x11192A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000708")]
		public float ConstantSwitchDurationInSeconds
		{
			[Token(Token = "0x600228C")]
			[Address(RVA = "0x11192AC", Offset = "0x11192AC", VA = "0x11192AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600228D")]
			[Address(RVA = "0x11192B4", Offset = "0x11192B4", VA = "0x11192B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000709")]
		public float SmoothValue
		{
			[Token(Token = "0x600228E")]
			[Address(RVA = "0x1119328", Offset = "0x1119328", VA = "0x1119328")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600228F")]
			[Address(RVA = "0x1119330", Offset = "0x1119330", VA = "0x1119330")]
			set
			{
			}
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0x1119344", Offset = "0x1119344", VA = "0x1119344")]
		public CameraRotationSwitchSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200051C")]
	public class CameraSettings : Settings
	{
		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool _canProcessInput;

		[Token(Token = "0x1700070A")]
		public bool CanProcessInput
		{
			[Token(Token = "0x6002292")]
			[Address(RVA = "0x11193B0", Offset = "0x11193B0", VA = "0x11193B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002293")]
			[Address(RVA = "0x11193B8", Offset = "0x11193B8", VA = "0x11193B8")]
			set
			{
			}
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0x11193C4", Offset = "0x11193C4", VA = "0x11193C4")]
		public CameraSettings()
		{
		}
	}
	[Token(Token = "0x200051D")]
	public class CameraViewVolume
	{
		[Token(Token = "0x200051E")]
		public enum VPoint
		{
			[Token(Token = "0x400187D")]
			NearTopLeft,
			[Token(Token = "0x400187E")]
			NearTopRight,
			[Token(Token = "0x400187F")]
			NearBottomRight,
			[Token(Token = "0x4001880")]
			NearBottomLeft,
			[Token(Token = "0x4001881")]
			FarTopLeft,
			[Token(Token = "0x4001882")]
			FarTopRight,
			[Token(Token = "0x4001883")]
			FarBottomRight,
			[Token(Token = "0x4001884")]
			FarBottomLeft
		}

		[Token(Token = "0x200051F")]
		public enum VPlane
		{
			[Token(Token = "0x4001886")]
			Left,
			[Token(Token = "0x4001887")]
			Right,
			[Token(Token = "0x4001888")]
			Bottom,
			[Token(Token = "0x4001889")]
			Top,
			[Token(Token = "0x400188A")]
			Near,
			[Token(Token = "0x400188B")]
			Far
		}

		[Token(Token = "0x4001874")]
		private const int _numWorldPoints = 8;

		[Token(Token = "0x4001875")]
		private const int _numWorldPlanes = 6;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3[] _worldPoints;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Plane[] _worldPlanes;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2 _farPlaneSize;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 _nearPlaneSize;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AABB _worldAABB;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private OBB _worldOBB;

		[Token(Token = "0x1700070B")]
		public Plane LeftPlane
		{
			[Token(Token = "0x6002295")]
			[Address(RVA = "0x11193D4", Offset = "0x11193D4", VA = "0x11193D4")]
			get
			{
				return default(Plane);
			}
		}

		[Token(Token = "0x1700070C")]
		public Plane RightPlane
		{
			[Token(Token = "0x6002296")]
			[Address(RVA = "0x1119400", Offset = "0x1119400", VA = "0x1119400")]
			get
			{
				return default(Plane);
			}
		}

		[Token(Token = "0x1700070D")]
		public Plane BottomPlane
		{
			[Token(Token = "0x6002297")]
			[Address(RVA = "0x1119430", Offset = "0x1119430", VA = "0x1119430")]
			get
			{
				return default(Plane);
			}
		}

		[Token(Token = "0x1700070E")]
		public Plane TopPlane
		{
			[Token(Token = "0x6002298")]
			[Address(RVA = "0x1119460", Offset = "0x1119460", VA = "0x1119460")]
			get
			{
				return default(Plane);
			}
		}

		[Token(Token = "0x1700070F")]
		public Plane NearPlane
		{
			[Token(Token = "0x6002299")]
			[Address(RVA = "0x1119490", Offset = "0x1119490", VA = "0x1119490")]
			get
			{
				return default(Plane);
			}
		}

		[Token(Token = "0x17000710")]
		public Plane FarPlane
		{
			[Token(Token = "0x600229A")]
			[Address(RVA = "0x11194C0", Offset = "0x11194C0", VA = "0x11194C0")]
			get
			{
				return default(Plane);
			}
		}

		[Token(Token = "0x17000711")]
		public Vector3 NearTopLeft
		{
			[Token(Token = "0x600229B")]
			[Address(RVA = "0x11194F0", Offset = "0x11194F0", VA = "0x11194F0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000712")]
		public Vector3 NearTopRight
		{
			[Token(Token = "0x600229C")]
			[Address(RVA = "0x111951C", Offset = "0x111951C", VA = "0x111951C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000713")]
		public Vector3 NearBottomRight
		{
			[Token(Token = "0x600229D")]
			[Address(RVA = "0x111954C", Offset = "0x111954C", VA = "0x111954C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000714")]
		public Vector3 NearBottomLeft
		{
			[Token(Token = "0x600229E")]
			[Address(RVA = "0x111957C", Offset = "0x111957C", VA = "0x111957C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000715")]
		public Vector3 FarTopLeft
		{
			[Token(Token = "0x600229F")]
			[Address(RVA = "0x11195AC", Offset = "0x11195AC", VA = "0x11195AC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000716")]
		public Vector3 FarTopRight
		{
			[Token(Token = "0x60022A0")]
			[Address(RVA = "0x11195DC", Offset = "0x11195DC", VA = "0x11195DC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000717")]
		public Vector3 FarBottomRight
		{
			[Token(Token = "0x60022A1")]
			[Address(RVA = "0x111960C", Offset = "0x111960C", VA = "0x111960C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000718")]
		public Vector3 FarBottomLeft
		{
			[Token(Token = "0x60022A2")]
			[Address(RVA = "0x111963C", Offset = "0x111963C", VA = "0x111963C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000719")]
		public Vector2 FarPlaneSize
		{
			[Token(Token = "0x60022A3")]
			[Address(RVA = "0x111966C", Offset = "0x111966C", VA = "0x111966C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700071A")]
		public Vector2 NearPlaneSize
		{
			[Token(Token = "0x60022A4")]
			[Address(RVA = "0x1119674", Offset = "0x1119674", VA = "0x1119674")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700071B")]
		public AABB WorldAABB
		{
			[Token(Token = "0x60022A5")]
			[Address(RVA = "0x111967C", Offset = "0x111967C", VA = "0x111967C")]
			get
			{
				return default(AABB);
			}
		}

		[Token(Token = "0x1700071C")]
		public OBB WorldOBB
		{
			[Token(Token = "0x60022A6")]
			[Address(RVA = "0x1119690", Offset = "0x1119690", VA = "0x1119690")]
			get
			{
				return default(OBB);
			}
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0x11196A8", Offset = "0x11196A8", VA = "0x11196A8")]
		public CameraViewVolume()
		{
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0x1119788", Offset = "0x1119788", VA = "0x1119788")]
		public CameraViewVolume(Camera camera)
		{
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0x1119878", Offset = "0x1119878", VA = "0x1119878")]
		public void FromCamera(Camera camera)
		{
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0x111A658", Offset = "0x111A658", VA = "0x111A658")]
		public List<Vector3> GetNearPlanePoints()
		{
			return null;
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0x111A870", Offset = "0x111A870", VA = "0x111A870")]
		public static Plane[] GetCameraWorldPlanes(Camera camera)
		{
			return null;
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0x111A928", Offset = "0x111A928", VA = "0x111A928")]
		public bool CheckAABB(AABB aabb)
		{
			return default(bool);
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0x111A974", Offset = "0x111A974", VA = "0x111A974")]
		public static bool CheckAABB(Camera camera, AABB aabb)
		{
			return default(bool);
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0x111AA68", Offset = "0x111AA68", VA = "0x111AA68")]
		public static bool CheckAABB(Camera camera, AABB aabb, Plane[] cameraWorldPlanes)
		{
			return default(bool);
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0x1119C9C", Offset = "0x1119C9C", VA = "0x1119C9C")]
		private void CalculateWorldPoints(Camera camera)
		{
		}
	}
	[Token(Token = "0x2000520")]
	public enum CameraZoomMode
	{
		[Token(Token = "0x400188D")]
		Standard,
		[Token(Token = "0x400188E")]
		Smooth
	}
	[Serializable]
	[Token(Token = "0x2000521")]
	public class CameraZoomSettings : Settings
	{
		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private CameraZoomMode _zoomMode;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _orthoStandardZoomSensitivity;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _perspStandardZoomSensitivity;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _orthoSmoothZoomSensitivity;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _perspSmoothZoomSensitivity;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _orthoZoomSmoothValue;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _perspZoomSmoothValue;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool _invertZoomAxis;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[SerializeField]
		private bool _isZoomEnabled;

		[Token(Token = "0x1700071D")]
		public CameraZoomMode ZoomMode
		{
			[Token(Token = "0x60022B0")]
			[Address(RVA = "0x111AAB4", Offset = "0x111AAB4", VA = "0x111AAB4")]
			get
			{
				return default(CameraZoomMode);
			}
			[Token(Token = "0x60022B1")]
			[Address(RVA = "0x111AABC", Offset = "0x111AABC", VA = "0x111AABC")]
			set
			{
			}
		}

		[Token(Token = "0x1700071E")]
		public float OrthoStandardZoomSensitivity
		{
			[Token(Token = "0x60022B2")]
			[Address(RVA = "0x111AAC4", Offset = "0x111AAC4", VA = "0x111AAC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022B3")]
			[Address(RVA = "0x111AACC", Offset = "0x111AACC", VA = "0x111AACC")]
			set
			{
			}
		}

		[Token(Token = "0x1700071F")]
		public float PerspStandardZoomSensitivity
		{
			[Token(Token = "0x60022B4")]
			[Address(RVA = "0x111AAE0", Offset = "0x111AAE0", VA = "0x111AAE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022B5")]
			[Address(RVA = "0x111AAE8", Offset = "0x111AAE8", VA = "0x111AAE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000720")]
		public float OrthoSmoothZoomSensitivity
		{
			[Token(Token = "0x60022B6")]
			[Address(RVA = "0x111AAFC", Offset = "0x111AAFC", VA = "0x111AAFC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022B7")]
			[Address(RVA = "0x111AB04", Offset = "0x111AB04", VA = "0x111AB04")]
			set
			{
			}
		}

		[Token(Token = "0x17000721")]
		public float PerspSmoothZoomSensitivity
		{
			[Token(Token = "0x60022B8")]
			[Address(RVA = "0x111AB18", Offset = "0x111AB18", VA = "0x111AB18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022B9")]
			[Address(RVA = "0x111AB20", Offset = "0x111AB20", VA = "0x111AB20")]
			set
			{
			}
		}

		[Token(Token = "0x17000722")]
		public float OrthoZoomSmoothValue
		{
			[Token(Token = "0x60022BA")]
			[Address(RVA = "0x111AB34", Offset = "0x111AB34", VA = "0x111AB34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022BB")]
			[Address(RVA = "0x111AB3C", Offset = "0x111AB3C", VA = "0x111AB3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000723")]
		public float PerspZoomSmoothValue
		{
			[Token(Token = "0x60022BC")]
			[Address(RVA = "0x111AB50", Offset = "0x111AB50", VA = "0x111AB50")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60022BD")]
			[Address(RVA = "0x111AB58", Offset = "0x111AB58", VA = "0x111AB58")]
			set
			{
			}
		}

		[Token(Token = "0x17000724")]
		public bool InvertZoomAxis
		{
			[Token(Token = "0x60022BE")]
			[Address(RVA = "0x111AB6C", Offset = "0x111AB6C", VA = "0x111AB6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022BF")]
			[Address(RVA = "0x111AB74", Offset = "0x111AB74", VA = "0x111AB74")]
			set
			{
			}
		}

		[Token(Token = "0x17000725")]
		public bool IsZoomEnabled
		{
			[Token(Token = "0x60022C0")]
			[Address(RVA = "0x111AB80", Offset = "0x111AB80", VA = "0x111AB80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022C1")]
			[Address(RVA = "0x111AB88", Offset = "0x111AB88", VA = "0x111AB88")]
			set
			{
			}
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0x111AB94", Offset = "0x111AB94", VA = "0x111AB94")]
		public float GetZoomSmoothValue(Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x111ABCC", Offset = "0x111ABCC", VA = "0x111ABCC")]
		public float GetZoomSensitivity(Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x111AC38", Offset = "0x111AC38", VA = "0x111AC38")]
		public CameraZoomSettings()
		{
		}
	}
	[Token(Token = "0x2000522")]
	public class RTCameraBackground : MonoSingleton<RTCameraBackground>
	{
		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CameraBackgroundSettings _bkSettings;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<Camera> _renderIgnoreCameras;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Camera, CameraBackgroundSettings> _cameraToBkSettings;

		[Token(Token = "0x17000726")]
		public CameraBackgroundSettings Settings
		{
			[Token(Token = "0x60022C5")]
			[Address(RVA = "0x111AC60", Offset = "0x111AC60", VA = "0x111AC60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x111AC68", Offset = "0x111AC68", VA = "0x111AC68")]
		public void SetCameraBkSettings(Camera camera, CameraBackgroundSettings bkSettings)
		{
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0x111AD84", Offset = "0x111AD84", VA = "0x111AD84")]
		public List<Camera> GetAllRenderIgnoreCameras()
		{
			return null;
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x111AE00", Offset = "0x111AE00", VA = "0x111AE00")]
		public bool IsRenderIgnoreCamera(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x111AE58", Offset = "0x111AE58", VA = "0x111AE58")]
		public void AddRenderIgnoreCamera(Camera camera)
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x111AF24", Offset = "0x111AF24", VA = "0x111AF24")]
		public void RemoveRenderIgnoreCamera(Camera camera)
		{
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x11171C0", Offset = "0x11171C0", VA = "0x11171C0")]
		public void Render_SystemCall(Camera renderCamera)
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x111AF7C", Offset = "0x111AF7C", VA = "0x111AF7C")]
		public RTCameraBackground()
		{
		}
	}
	[Token(Token = "0x2000523")]
	public class RTCameraViewports : Singleton<RTCameraViewports>
	{
		[Token(Token = "0x2000524")]
		public delegate void CameraAddedHandler(Camera camera);

		[Token(Token = "0x2000525")]
		public delegate void CameraRemovedHandler(Camera camera);

		[Token(Token = "0x2000526")]
		public delegate void FocusCameraChangedHandler(Camera oldFocusCam, Camera newFocusCam);

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Camera> _cameras;

		[Token(Token = "0x17000727")]
		public Camera FocusCamera
		{
			[Token(Token = "0x60022D3")]
			[Address(RVA = "0x111B33C", Offset = "0x111B33C", VA = "0x111B33C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000728")]
		public int NumCameras
		{
			[Token(Token = "0x60022D4")]
			[Address(RVA = "0x111B3B0", Offset = "0x111B3B0", VA = "0x111B3B0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400003E")]
		public event CameraAddedHandler CameraAdded
		{
			[Token(Token = "0x60022CD")]
			[Address(RVA = "0x11167B8", Offset = "0x11167B8", VA = "0x11167B8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60022CE")]
			[Address(RVA = "0x111B0CC", Offset = "0x111B0CC", VA = "0x111B0CC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400003F")]
		public event CameraRemovedHandler CameraRemoved
		{
			[Token(Token = "0x60022CF")]
			[Address(RVA = "0x1116938", Offset = "0x1116938", VA = "0x1116938")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60022D0")]
			[Address(RVA = "0x111B168", Offset = "0x111B168", VA = "0x111B168")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000040")]
		public event FocusCameraChangedHandler FocusCameraChanged
		{
			[Token(Token = "0x60022D1")]
			[Address(RVA = "0x111B204", Offset = "0x111B204", VA = "0x111B204")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60022D2")]
			[Address(RVA = "0x111B2A0", Offset = "0x111B2A0", VA = "0x111B2A0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0x111B3F8", Offset = "0x111B3F8", VA = "0x111B3F8")]
		public bool ContainsCamera(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0x111B450", Offset = "0x111B450", VA = "0x111B450")]
		public void AddCamera(Camera camera, Rect normViewRect)
		{
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x111B5C4", Offset = "0x111B5C4", VA = "0x111B5C4")]
		public void AddCamera(Camera camera)
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x111B6EC", Offset = "0x111B6EC", VA = "0x111B6EC")]
		public void RemoveCamera(Camera camera)
		{
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0x111B7B0", Offset = "0x111B7B0", VA = "0x111B7B0")]
		public void SetFocusCamera(int cameraIndex)
		{
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x111B834", Offset = "0x111B834", VA = "0x111B834")]
		public void SetFocusCamera(Camera camera)
		{
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0x111BA50", Offset = "0x111BA50", VA = "0x111BA50")]
		public RTCameraViewports()
		{
		}
	}
	[Token(Token = "0x2000527")]
	public delegate void CameraCanProcessInputHandler(YesNoAnswer answer);
	[Token(Token = "0x2000528")]
	public delegate void CameraCanUseScrollWheelHandler(YesNoAnswer answer);
	[Token(Token = "0x2000529")]
	public class RTFocusCamera : MonoSingleton<RTFocusCamera>
	{
		[Token(Token = "0x200052A")]
		private enum MoveDirection
		{
			[Token(Token = "0x40018BE")]
			Left,
			[Token(Token = "0x40018BF")]
			Right,
			[Token(Token = "0x40018C0")]
			Up,
			[Token(Token = "0x40018C1")]
			Down,
			[Token(Token = "0x40018C2")]
			Forward,
			[Token(Token = "0x40018C3")]
			Backwards
		}

		[Token(Token = "0x200052B")]
		[CompilerGenerated]
		private sealed class <DoSmoothPan>d__128 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RTFocusCamera <>4__this;

			[Token(Token = "0x40018C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float deviceAxisX;

			[Token(Token = "0x40018C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float deviceAxisY;

			[Token(Token = "0x40018C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2 <panAmount>5__2;

			[Token(Token = "0x17000745")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002344")]
				[Address(RVA = "0x111ED80", Offset = "0x111ED80", VA = "0x111ED80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000746")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002346")]
				[Address(RVA = "0x111EDC8", Offset = "0x111EDC8", VA = "0x111EDC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002341")]
			[Address(RVA = "0x111E548", Offset = "0x111E548", VA = "0x111E548")]
			[DebuggerHidden]
			public <DoSmoothPan>d__128(int <>1__state)
			{
			}

			[Token(Token = "0x6002342")]
			[Address(RVA = "0x111EBFC", Offset = "0x111EBFC", VA = "0x111EBFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002343")]
			[Address(RVA = "0x111EC00", Offset = "0x111EC00", VA = "0x111EC00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002345")]
			[Address(RVA = "0x111ED88", Offset = "0x111ED88", VA = "0x111ED88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200052C")]
		[CompilerGenerated]
		private sealed class <DoSmoothLookAround>d__129 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RTFocusCamera <>4__this;

			[Token(Token = "0x40018CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float deviceAxisX;

			[Token(Token = "0x40018CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float deviceAxisY;

			[Token(Token = "0x40018CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2 <rotationAmount>5__2;

			[Token(Token = "0x17000747")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600234A")]
				[Address(RVA = "0x111EF54", Offset = "0x111EF54", VA = "0x111EF54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000748")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600234C")]
				[Address(RVA = "0x111EF9C", Offset = "0x111EF9C", VA = "0x111EF9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002347")]
			[Address(RVA = "0x111E570", Offset = "0x111E570", VA = "0x111E570")]
			[DebuggerHidden]
			public <DoSmoothLookAround>d__129(int <>1__state)
			{
			}

			[Token(Token = "0x6002348")]
			[Address(RVA = "0x111EDD0", Offset = "0x111EDD0", VA = "0x111EDD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002349")]
			[Address(RVA = "0x111EDD4", Offset = "0x111EDD4", VA = "0x111EDD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600234B")]
			[Address(RVA = "0x111EF5C", Offset = "0x111EF5C", VA = "0x111EF5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200052D")]
		[CompilerGenerated]
		private sealed class <DoSmoothOrbit>d__130 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RTFocusCamera <>4__this;

			[Token(Token = "0x40018D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float deviceAxisX;

			[Token(Token = "0x40018D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float deviceAxisY;

			[Token(Token = "0x40018D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector2 <rotationAmount>5__2;

			[Token(Token = "0x17000749")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002350")]
				[Address(RVA = "0x111F128", Offset = "0x111F128", VA = "0x111F128", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700074A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002352")]
				[Address(RVA = "0x111F170", Offset = "0x111F170", VA = "0x111F170", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600234D")]
			[Address(RVA = "0x111E598", Offset = "0x111E598", VA = "0x111E598")]
			[DebuggerHidden]
			public <DoSmoothOrbit>d__130(int <>1__state)
			{
			}

			[Token(Token = "0x600234E")]
			[Address(RVA = "0x111EFA4", Offset = "0x111EFA4", VA = "0x111EFA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600234F")]
			[Address(RVA = "0x111EFA8", Offset = "0x111EFA8", VA = "0x111EFA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002351")]
			[Address(RVA = "0x111F130", Offset = "0x111F130", VA = "0x111F130", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200052E")]
		[CompilerGenerated]
		private sealed class <DoSmoothZoom>d__131 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RTFocusCamera <>4__this;

			[Token(Token = "0x40018D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float deviceScroll;

			[Token(Token = "0x40018DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <zoomAmount>5__2;

			[Token(Token = "0x1700074B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002356")]
				[Address(RVA = "0x111F2D0", Offset = "0x111F2D0", VA = "0x111F2D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700074C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002358")]
				[Address(RVA = "0x111F318", Offset = "0x111F318", VA = "0x111F318", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002353")]
			[Address(RVA = "0x111E5C0", Offset = "0x111E5C0", VA = "0x111E5C0")]
			[DebuggerHidden]
			public <DoSmoothZoom>d__131(int <>1__state)
			{
			}

			[Token(Token = "0x6002354")]
			[Address(RVA = "0x111F178", Offset = "0x111F178", VA = "0x111F178", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002355")]
			[Address(RVA = "0x111F17C", Offset = "0x111F17C", VA = "0x111F17C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002357")]
			[Address(RVA = "0x111F2D8", Offset = "0x111F2D8", VA = "0x111F2D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200052F")]
		[CompilerGenerated]
		private sealed class <DoConstantRotationSwitch>d__132 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RTFocusCamera <>4__this;

			[Token(Token = "0x40018DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion targetRotation;

			[Token(Token = "0x40018DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Quaternion <sourceRotation>5__2;

			[Token(Token = "0x40018E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x1700074D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600235C")]
				[Address(RVA = "0x111F4CC", Offset = "0x111F4CC", VA = "0x111F4CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700074E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600235E")]
				[Address(RVA = "0x111F514", Offset = "0x111F514", VA = "0x111F514", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002359")]
			[Address(RVA = "0x111E5E8", Offset = "0x111E5E8", VA = "0x111E5E8")]
			[DebuggerHidden]
			public <DoConstantRotationSwitch>d__132(int <>1__state)
			{
			}

			[Token(Token = "0x600235A")]
			[Address(RVA = "0x111F320", Offset = "0x111F320", VA = "0x111F320", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600235B")]
			[Address(RVA = "0x111F324", Offset = "0x111F324", VA = "0x111F324", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600235D")]
			[Address(RVA = "0x111F4D4", Offset = "0x111F4D4", VA = "0x111F4D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000530")]
		[CompilerGenerated]
		private sealed class <DoSmoothRotationSwitch>d__133 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RTFocusCamera <>4__this;

			[Token(Token = "0x40018E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Quaternion targetRotation;

			[Token(Token = "0x1700074F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002362")]
				[Address(RVA = "0x111F6E0", Offset = "0x111F6E0", VA = "0x111F6E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000750")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002364")]
				[Address(RVA = "0x111F728", Offset = "0x111F728", VA = "0x111F728", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600235F")]
			[Address(RVA = "0x111E610", Offset = "0x111E610", VA = "0x111E610")]
			[DebuggerHidden]
			public <DoSmoothRotationSwitch>d__133(int <>1__state)
			{
			}

			[Token(Token = "0x6002360")]
			[Address(RVA = "0x111F51C", Offset = "0x111F51C", VA = "0x111F51C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002361")]
			[Address(RVA = "0x111F520", Offset = "0x111F520", VA = "0x111F520", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002363")]
			[Address(RVA = "0x111F6E8", Offset = "0x111F6E8", VA = "0x111F6E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000531")]
		[CompilerGenerated]
		private sealed class <DoConstantFocus>d__134 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RTFocusCamera <>4__this;

			[Token(Token = "0x40018E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CameraFocus.Data focusData;

			[Token(Token = "0x40018E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <targetOrthoSize>5__2;

			[Token(Token = "0x40018EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <camMoveDir>5__3;

			[Token(Token = "0x40018EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <distanceToTravel>5__4;

			[Token(Token = "0x40018EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <initialCamOrthoSize>5__5;

			[Token(Token = "0x17000751")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002368")]
				[Address(RVA = "0x111FB80", Offset = "0x111FB80", VA = "0x111FB80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000752")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600236A")]
				[Address(RVA = "0x111FBC8", Offset = "0x111FBC8", VA = "0x111FBC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002365")]
			[Address(RVA = "0x111E638", Offset = "0x111E638", VA = "0x111E638")]
			[DebuggerHidden]
			public <DoConstantFocus>d__134(int <>1__state)
			{
			}

			[Token(Token = "0x6002366")]
			[Address(RVA = "0x111F730", Offset = "0x111F730", VA = "0x111F730", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002367")]
			[Address(RVA = "0x111F734", Offset = "0x111F734", VA = "0x111F734", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002369")]
			[Address(RVA = "0x111FB88", Offset = "0x111FB88", VA = "0x111FB88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000532")]
		[CompilerGenerated]
		private sealed class <DoSmoothFocus>d__135 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40018ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40018EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40018EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RTFocusCamera <>4__this;

			[Token(Token = "0x40018F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CameraFocus.Data focusData;

			[Token(Token = "0x40018F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <targetOrthoSize>5__2;

			[Token(Token = "0x40018F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <camMoveDir>5__3;

			[Token(Token = "0x40018F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <elapsedTime>5__4;

			[Token(Token = "0x17000753")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600236E")]
				[Address(RVA = "0x1134DB4", Offset = "0x1134DB4", VA = "0x1134DB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000754")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002370")]
				[Address(RVA = "0x1134DFC", Offset = "0x1134DFC", VA = "0x1134DFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600236B")]
			[Address(RVA = "0x11349E0", Offset = "0x11349E0", VA = "0x11349E0")]
			[DebuggerHidden]
			public <DoSmoothFocus>d__135(int <>1__state)
			{
			}

			[Token(Token = "0x600236C")]
			[Address(RVA = "0x1134A08", Offset = "0x1134A08", VA = "0x1134A08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600236D")]
			[Address(RVA = "0x1134A0C", Offset = "0x1134A0C", VA = "0x1134A0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600236F")]
			[Address(RVA = "0x1134DBC", Offset = "0x1134DBC", VA = "0x1134DBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Camera _targetCamera;

		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _targetTransform;

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float _fieldOfView;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WorldTransformSnapshot _worldTransformSnapshot;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CameraPrjSwitchTransition _prjSwitchTranstion;

		[Token(Token = "0x40018A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isDoingFocus;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IEnumerator _focusCrtn;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _isDoingRotationSwitch;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IEnumerator _genricCamTransformCrtn;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _isObjectVisibilityDirty;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<GameObject> _visibleObjects;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _focusPointOffset;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 _lastFocusPoint;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool[] _moveDirFlags;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float _currentAcceleration;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private CameraSettings _settings;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private CameraMoveSettings _moveSettings;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private CameraPanSettings _panSettings;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private CameraLookAroundSettings _lookAroundSettings;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private CameraOrbitSettings _orbitSettings;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private CameraZoomSettings _zoomSettings;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private CameraFocusSettings _focusSettings;

		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private CameraRotationSwitchSettings _rotationSwitchSettings;

		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private CameraProjectionSwitchSettings _projectionSwitchSettings;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private CameraHotkeys _hotkeys;

		[Token(Token = "0x17000729")]
		public Camera TargetCamera
		{
			[Token(Token = "0x60022FA")]
			[Address(RVA = "0x111C228", Offset = "0x111C228", VA = "0x111C228")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700072A")]
		public bool IsDoingProjectionSwitch
		{
			[Token(Token = "0x60022FB")]
			[Address(RVA = "0x111C230", Offset = "0x111C230", VA = "0x111C230")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700072B")]
		public CameraPrjSwitchTransition.Type PrjSwitchTransitionType
		{
			[Token(Token = "0x60022FC")]
			[Address(RVA = "0x111C254", Offset = "0x111C254", VA = "0x111C254")]
			get
			{
				return default(CameraPrjSwitchTransition.Type);
			}
		}

		[Token(Token = "0x1700072C")]
		public bool IsDoingRotationSwitch
		{
			[Token(Token = "0x60022FD")]
			[Address(RVA = "0x111C270", Offset = "0x111C270", VA = "0x111C270")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700072D")]
		public float PrjSwitchProgress
		{
			[Token(Token = "0x60022FE")]
			[Address(RVA = "0x111C278", Offset = "0x111C278", VA = "0x111C278")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700072E")]
		public float PrjSwitchDurationInSeconds
		{
			[Token(Token = "0x60022FF")]
			[Address(RVA = "0x111C294", Offset = "0x111C294", VA = "0x111C294")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700072F")]
		public bool IsDoingFocus
		{
			[Token(Token = "0x6002300")]
			[Address(RVA = "0x111C2B0", Offset = "0x111C2B0", VA = "0x111C2B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000730")]
		public Vector3 WorldPosition
		{
			[Token(Token = "0x6002301")]
			[Address(RVA = "0x111C2B8", Offset = "0x111C2B8", VA = "0x111C2B8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002302")]
			[Address(RVA = "0x111C2D4", Offset = "0x111C2D4", VA = "0x111C2D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000731")]
		public Quaternion WorldRotation
		{
			[Token(Token = "0x6002303")]
			[Address(RVA = "0x111C470", Offset = "0x111C470", VA = "0x111C470")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002304")]
			[Address(RVA = "0x111C48C", Offset = "0x111C48C", VA = "0x111C48C")]
			set
			{
			}
		}

		[Token(Token = "0x17000732")]
		public Vector3 Right
		{
			[Token(Token = "0x6002305")]
			[Address(RVA = "0x111C4A8", Offset = "0x111C4A8", VA = "0x111C4A8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000733")]
		public Vector3 Up
		{
			[Token(Token = "0x6002306")]
			[Address(RVA = "0x111C4C4", Offset = "0x111C4C4", VA = "0x111C4C4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000734")]
		public Vector3 Look
		{
			[Token(Token = "0x6002307")]
			[Address(RVA = "0x111C4E0", Offset = "0x111C4E0", VA = "0x111C4E0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000735")]
		public bool IsMovingForward
		{
			[Token(Token = "0x6002308")]
			[Address(RVA = "0x111C4FC", Offset = "0x111C4FC", VA = "0x111C4FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000736")]
		public bool IsMovingBackwards
		{
			[Token(Token = "0x6002309")]
			[Address(RVA = "0x111C528", Offset = "0x111C528", VA = "0x111C528")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000737")]
		public bool IsMovingLeft
		{
			[Token(Token = "0x600230A")]
			[Address(RVA = "0x111C554", Offset = "0x111C554", VA = "0x111C554")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000738")]
		public bool IsMovingRight
		{
			[Token(Token = "0x600230B")]
			[Address(RVA = "0x111C57C", Offset = "0x111C57C", VA = "0x111C57C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000739")]
		public bool IsMovingUp
		{
			[Token(Token = "0x600230C")]
			[Address(RVA = "0x111C5A8", Offset = "0x111C5A8", VA = "0x111C5A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700073A")]
		public bool IsMovingDown
		{
			[Token(Token = "0x600230D")]
			[Address(RVA = "0x111C5D4", Offset = "0x111C5D4", VA = "0x111C5D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700073B")]
		public CameraSettings Settings
		{
			[Token(Token = "0x600230E")]
			[Address(RVA = "0x111C600", Offset = "0x111C600", VA = "0x111C600")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700073C")]
		public CameraMoveSettings MoveSettings
		{
			[Token(Token = "0x600230F")]
			[Address(RVA = "0x111C608", Offset = "0x111C608", VA = "0x111C608")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700073D")]
		public CameraPanSettings PanSettings
		{
			[Token(Token = "0x6002310")]
			[Address(RVA = "0x111C610", Offset = "0x111C610", VA = "0x111C610")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700073E")]
		public CameraLookAroundSettings LookAroundSettings
		{
			[Token(Token = "0x6002311")]
			[Address(RVA = "0x111C618", Offset = "0x111C618", VA = "0x111C618")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700073F")]
		public CameraOrbitSettings OrbitSettings
		{
			[Token(Token = "0x6002312")]
			[Address(RVA = "0x111C620", Offset = "0x111C620", VA = "0x111C620")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000740")]
		public CameraZoomSettings ZoomSettings
		{
			[Token(Token = "0x6002313")]
			[Address(RVA = "0x111C628", Offset = "0x111C628", VA = "0x111C628")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000741")]
		public CameraFocusSettings FocusSettings
		{
			[Token(Token = "0x6002314")]
			[Address(RVA = "0x111C630", Offset = "0x111C630", VA = "0x111C630")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000742")]
		public CameraRotationSwitchSettings RotationSwitchSettings
		{
			[Token(Token = "0x6002315")]
			[Address(RVA = "0x111C638", Offset = "0x111C638", VA = "0x111C638")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000743")]
		public CameraProjectionSwitchSettings ProjectionSwitchSettings
		{
			[Token(Token = "0x6002316")]
			[Address(RVA = "0x111C640", Offset = "0x111C640", VA = "0x111C640")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000744")]
		public CameraHotkeys Hotkeys
		{
			[Token(Token = "0x6002317")]
			[Address(RVA = "0x111C648", Offset = "0x111C648", VA = "0x111C648")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000041")]
		public event CameraProjectionSwitchBeginHandler PrjSwitchTransitionBegin
		{
			[Token(Token = "0x60022F0")]
			[Address(RVA = "0x111BD48", Offset = "0x111BD48", VA = "0x111BD48")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60022F1")]
			[Address(RVA = "0x111BDE4", Offset = "0x111BDE4", VA = "0x111BDE4")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event CameraProjectionSwitchUpdateHandler PrjSwitchTransitionUpdate
		{
			[Token(Token = "0x60022F2")]
			[Address(RVA = "0x111BE80", Offset = "0x111BE80", VA = "0x111BE80")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60022F3")]
			[Address(RVA = "0x111BF1C", Offset = "0x111BF1C", VA = "0x111BF1C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public event CameraProjectionSwitchBeginHandler PrjSwitchTransitionEnd
		{
			[Token(Token = "0x60022F4")]
			[Address(RVA = "0x111BFB8", Offset = "0x111BFB8", VA = "0x111BFB8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60022F5")]
			[Address(RVA = "0x111C054", Offset = "0x111C054", VA = "0x111C054")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000044")]
		public event CameraCanProcessInputHandler CanProcessInput
		{
			[Token(Token = "0x60022F6")]
			[Address(RVA = "0x1116460", Offset = "0x1116460", VA = "0x1116460")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60022F7")]
			[Address(RVA = "0x111C0F0", Offset = "0x111C0F0", VA = "0x111C0F0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000045")]
		public event CameraCanUseScrollWheelHandler CanUseScrollWheel
		{
			[Token(Token = "0x60022F8")]
			[Address(RVA = "0x1116638", Offset = "0x1116638", VA = "0x1116638")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60022F9")]
			[Address(RVA = "0x111C18C", Offset = "0x111C18C", VA = "0x111C18C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x111C650", Offset = "0x111C650", VA = "0x111C650")]
		public bool IsViewportHoveredByDevice()
		{
			return default(bool);
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x111B950", Offset = "0x111B950", VA = "0x111B950")]
		public void SetTargetCamera(Camera camera)
		{
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x111C814", Offset = "0x111C814", VA = "0x111C814")]
		public void SetFieldOfView(float fov)
		{
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x111C848", Offset = "0x111C848", VA = "0x111C848")]
		public void SetObjectVisibilityDirty()
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x111C854", Offset = "0x111C854", VA = "0x111C854")]
		public void GetVisibleObjects(List<GameObject> visibleObjects)
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x111CB1C", Offset = "0x111CB1C", VA = "0x111CB1C")]
		public void PerformRotationSwitch(Quaternion targetRotation)
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x111CDE4", Offset = "0x111CDE4", VA = "0x111CDE4")]
		public void PerformProjectionSwitch()
		{
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x111CED4", Offset = "0x111CED4", VA = "0x111CED4")]
		public void Focus(AABB focusAABB)
		{
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0x1116E40", Offset = "0x1116E40", VA = "0x1116E40")]
		public void Update_SystemCall()
		{
		}

		[Token(Token = "0x6002321")]
		[Address(RVA = "0x111D934", Offset = "0x111D934", VA = "0x111D934")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002322")]
		[Address(RVA = "0x111DB14", Offset = "0x111DB14", VA = "0x111DB14")]
		private void Start()
		{
		}

		[Token(Token = "0x6002323")]
		[Address(RVA = "0x111D218", Offset = "0x111D218", VA = "0x111D218")]
		private void HandleMouseAndKeyboardInput()
		{
		}

		[Token(Token = "0x6002324")]
		[Address(RVA = "0x111E370", Offset = "0x111E370", VA = "0x111E370")]
		private bool CanUseMouseScrollWheel()
		{
			return default(bool);
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0x111D148", Offset = "0x111D148", VA = "0x111D148")]
		private bool CanCameraProcessInput()
		{
			return default(bool);
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0x111DB78", Offset = "0x111DB78", VA = "0x111DB78")]
		private void Zoom(float zoomAmount)
		{
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x111C348", Offset = "0x111C348", VA = "0x111C348")]
		private Vector3 GetFocusPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x111E408", Offset = "0x111E408", VA = "0x111E408")]
		private float CalculateScrollZoomAmount(float deviceScroll)
		{
			return default(float);
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x111DDE4", Offset = "0x111DDE4", VA = "0x111DDE4")]
		private void Pan(Vector2 panAmount)
		{
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x111E244", Offset = "0x111E244", VA = "0x111E244")]
		public void LookAround(float degreesLocalX, float degreesWorldY)
		{
		}

		[Token(Token = "0x600232B")]
		[Address(RVA = "0x111DFBC", Offset = "0x111DFBC", VA = "0x111DFBC")]
		private void Orbit(float degreesLocalX, float degreesWorldY)
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0x111CFC8", Offset = "0x111CFC8", VA = "0x111CFC8")]
		private void PerformInstantFocus(CameraFocus.Data focusData)
		{
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0x111CEA0", Offset = "0x111CEA0", VA = "0x111CEA0")]
		private void PerformInstantProjectionSwitch()
		{
		}

		[Token(Token = "0x600232E")]
		[Address(RVA = "0x111E1B0", Offset = "0x111E1B0", VA = "0x111E1B0")]
		private Vector2 CalculateLookAroundRotation(float deviceAxisX, float deviceAxisY)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x111DF28", Offset = "0x111DF28", VA = "0x111DF28")]
		private Vector2 CalculateOrbitRotation(float deviceAxisX, float deviceAxisY)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0x111DCD8", Offset = "0x111DCD8", VA = "0x111DCD8")]
		private Vector2 CalculatePanAmount(float deviceAxisX, float deviceAxisY)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0x111CC24", Offset = "0x111CC24", VA = "0x111CC24")]
		private void StopCamTransform()
		{
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x111CC68", Offset = "0x111CC68", VA = "0x111CC68")]
		private void StopFocus()
		{
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0x111C3B4", Offset = "0x111C3B4", VA = "0x111C3B4")]
		private void SetFocusPoint(Vector3 focusPoint)
		{
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x111C780", Offset = "0x111C780", VA = "0x111C780")]
		private void AdjustOrthoSizeForFocusPt()
		{
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0x111DEA0", Offset = "0x111DEA0", VA = "0x111DEA0")]
		[IteratorStateMachine(typeof(<DoSmoothPan>d__128))]
		private IEnumerator DoSmoothPan(float deviceAxisX, float deviceAxisY)
		{
			return null;
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0x111E2E8", Offset = "0x111E2E8", VA = "0x111E2E8")]
		[IteratorStateMachine(typeof(<DoSmoothLookAround>d__129))]
		private IEnumerator DoSmoothLookAround(float deviceAxisX, float deviceAxisY)
		{
			return null;
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0x111E128", Offset = "0x111E128", VA = "0x111E128")]
		[IteratorStateMachine(typeof(<DoSmoothOrbit>d__130))]
		private IEnumerator DoSmoothOrbit(float deviceAxisX, float deviceAxisY)
		{
			return null;
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x111E4C4", Offset = "0x111E4C4", VA = "0x111E4C4")]
		[IteratorStateMachine(typeof(<DoSmoothZoom>d__131))]
		private IEnumerator DoSmoothZoom(float deviceScroll)
		{
			return null;
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x111CCAC", Offset = "0x111CCAC", VA = "0x111CCAC")]
		[IteratorStateMachine(typeof(<DoConstantRotationSwitch>d__132))]
		private IEnumerator DoConstantRotationSwitch(Quaternion targetRotation)
		{
			return null;
		}

		[Token(Token = "0x600233A")]
		[Address(RVA = "0x111CD48", Offset = "0x111CD48", VA = "0x111CD48")]
		[IteratorStateMachine(typeof(<DoSmoothRotationSwitch>d__133))]
		private IEnumerator DoSmoothRotationSwitch(Quaternion targetRotation)
		{
			return null;
		}

		[Token(Token = "0x600233B")]
		[Address(RVA = "0x111D028", Offset = "0x111D028", VA = "0x111D028")]
		[IteratorStateMachine(typeof(<DoConstantFocus>d__134))]
		private IEnumerator DoConstantFocus(CameraFocus.Data focusData)
		{
			return null;
		}

		[Token(Token = "0x600233C")]
		[Address(RVA = "0x111D0B8", Offset = "0x111D0B8", VA = "0x111D0B8")]
		[IteratorStateMachine(typeof(<DoSmoothFocus>d__135))]
		private IEnumerator DoSmoothFocus(CameraFocus.Data focusData)
		{
			return null;
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0x111E660", Offset = "0x111E660", VA = "0x111E660")]
		private void OnPrjSwitchTransitionBegin(CameraPrjSwitchTransition.Type transitionType)
		{
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x111E67C", Offset = "0x111E67C", VA = "0x111E67C")]
		private void OnPrjSwitchTransitionUpate(CameraPrjSwitchTransition.Type transitionType)
		{
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0x111E698", Offset = "0x111E698", VA = "0x111E698")]
		private void OnPrjSwitchTransitionEnd(CameraPrjSwitchTransition.Type transitionType)
		{
		}

		[Token(Token = "0x6002340")]
		[Address(RVA = "0x111E6B4", Offset = "0x111E6B4", VA = "0x111E6B4")]
		public RTFocusCamera()
		{
		}
	}
	[Token(Token = "0x2000533")]
	public class Priority
	{
		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _priority;

		[Token(Token = "0x17000755")]
		public int Value
		{
			[Token(Token = "0x6002371")]
			[Address(RVA = "0x1134E04", Offset = "0x1134E04", VA = "0x1134E04")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002372")]
			[Address(RVA = "0x1134E0C", Offset = "0x1134E0C", VA = "0x1134E0C")]
			set
			{
			}
		}

		[Token(Token = "0x17000756")]
		public static int Lowest
		{
			[Token(Token = "0x6002373")]
			[Address(RVA = "0x1134E14", Offset = "0x1134E14", VA = "0x1134E14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000757")]
		public static int Highest
		{
			[Token(Token = "0x6002374")]
			[Address(RVA = "0x1134E1C", Offset = "0x1134E1C", VA = "0x1134E1C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0x1134E24", Offset = "0x1134E24", VA = "0x1134E24")]
		public void MakeLowest()
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0x1134E30", Offset = "0x1134E30", VA = "0x1134E30")]
		public void MakeHighest()
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0x1134E3C", Offset = "0x1134E3C", VA = "0x1134E3C")]
		public void MakeLowerThan(Priority priority)
		{
		}

		[Token(Token = "0x6002378")]
		[Address(RVA = "0x1134E5C", Offset = "0x1134E5C", VA = "0x1134E5C")]
		public void MakeHigherThan(Priority priority)
		{
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0x1134E7C", Offset = "0x1134E7C", VA = "0x1134E7C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0x1134E84", Offset = "0x1134E84", VA = "0x1134E84", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0x1134F10", Offset = "0x1134F10", VA = "0x1134F10")]
		public int CompareTo(Priority other)
		{
			return default(int);
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0x1134F30", Offset = "0x1134F30", VA = "0x1134F30")]
		public static bool operator ==(Priority firstPriority, Priority secondPriority)
		{
			return default(bool);
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0x1134F58", Offset = "0x1134F58", VA = "0x1134F58")]
		public static bool operator !=(Priority firstPriority, Priority secondPriority)
		{
			return default(bool);
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0x1134F80", Offset = "0x1134F80", VA = "0x1134F80")]
		public static bool operator >(Priority firstPriority, Priority secondPriority)
		{
			return default(bool);
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0x1134FA8", Offset = "0x1134FA8", VA = "0x1134FA8")]
		public static bool operator >=(Priority firstPriority, Priority secondPriority)
		{
			return default(bool);
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0x1134FD0", Offset = "0x1134FD0", VA = "0x1134FD0")]
		public static bool operator <(Priority firstPriority, Priority secondPriority)
		{
			return default(bool);
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0x1134FF8", Offset = "0x1134FF8", VA = "0x1134FF8")]
		public static bool operator <=(Priority firstPriority, Priority secondPriority)
		{
			return default(bool);
		}

		[Token(Token = "0x6002382")]
		[Address(RVA = "0x1135020", Offset = "0x1135020", VA = "0x1135020")]
		public Priority()
		{
		}
	}
	[Token(Token = "0x2000534")]
	public enum RenderPipelineId
	{
		[Token(Token = "0x40018F6")]
		Standard,
		[Token(Token = "0x40018F7")]
		URP,
		[Token(Token = "0x40018F8")]
		HDRP
	}
	[Token(Token = "0x2000535")]
	public class Vec3Samples
	{
		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _maxNumSamples;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Vector3> _samples;

		[Token(Token = "0x17000758")]
		public int NumSamples
		{
			[Token(Token = "0x6002383")]
			[Address(RVA = "0x1135028", Offset = "0x1135028", VA = "0x1135028")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000759")]
		public int MaxNumSamples
		{
			[Token(Token = "0x6002384")]
			[Address(RVA = "0x1135070", Offset = "0x1135070", VA = "0x1135070")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0x1135078", Offset = "0x1135078", VA = "0x1135078")]
		public void AddSample(Vector3 sample)
		{
		}

		[Token(Token = "0x6002386")]
		[Address(RVA = "0x11351BC", Offset = "0x11351BC", VA = "0x11351BC")]
		public void SetMaxNumSamples(int maxNumSamples)
		{
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0x1135260", Offset = "0x1135260", VA = "0x1135260")]
		public Vector3 GetAverage()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0x1135498", Offset = "0x1135498", VA = "0x1135498")]
		public Vec3Samples()
		{
		}
	}
	[Token(Token = "0x2000536")]
	public class YesNoAnswer
	{
		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _hasYes;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool _hasNo;

		[Token(Token = "0x1700075A")]
		public bool HasYes
		{
			[Token(Token = "0x6002389")]
			[Address(RVA = "0x1135528", Offset = "0x1135528", VA = "0x1135528")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700075B")]
		public bool HasNo
		{
			[Token(Token = "0x600238A")]
			[Address(RVA = "0x1135530", Offset = "0x1135530", VA = "0x1135530")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700075C")]
		public bool HasOnlyYes
		{
			[Token(Token = "0x600238B")]
			[Address(RVA = "0x1135538", Offset = "0x1135538", VA = "0x1135538")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0x1135558", Offset = "0x1135558", VA = "0x1135558")]
		public void Yes()
		{
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0x1135564", Offset = "0x1135564", VA = "0x1135564")]
		public void No()
		{
		}

		[Token(Token = "0x600238E")]
		[Address(RVA = "0x1135570", Offset = "0x1135570", VA = "0x1135570")]
		public YesNoAnswer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000537")]
	public class EditorToolbar
	{
		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Color _activeTabColor;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _numTabsPerRow;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EditorToolbarTab[] _tabs;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _activeTabIndex;

		[Token(Token = "0x1700075D")]
		public int ActiveTabIndex
		{
			[Token(Token = "0x600238F")]
			[Address(RVA = "0x1135578", Offset = "0x1135578", VA = "0x1135578")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700075E")]
		public EditorToolbarTab ActiveTab
		{
			[Token(Token = "0x6002390")]
			[Address(RVA = "0x1135580", Offset = "0x1135580", VA = "0x1135580")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700075F")]
		public Color ActiveTabColor
		{
			[Token(Token = "0x6002391")]
			[Address(RVA = "0x11355B4", Offset = "0x11355B4", VA = "0x11355B4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002392")]
			[Address(RVA = "0x11355C0", Offset = "0x11355C0", VA = "0x11355C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000760")]
		public int NumTabsPerRow
		{
			[Token(Token = "0x6002393")]
			[Address(RVA = "0x11355CC", Offset = "0x11355CC", VA = "0x11355CC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002394")]
			[Address(RVA = "0x11355D4", Offset = "0x11355D4", VA = "0x11355D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000761")]
		public int NumTabs
		{
			[Token(Token = "0x6002395")]
			[Address(RVA = "0x11355E4", Offset = "0x11355E4", VA = "0x11355E4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0x1135600", Offset = "0x1135600", VA = "0x1135600")]
		public EditorToolbar(EditorToolbarTab[] tabs, int numTabsPerRow, Color activeTabColor)
		{
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0x1135688", Offset = "0x1135688", VA = "0x1135688")]
		public EditorToolbarTab GetTabByIndex(int tabIndex)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000538")]
	public class EditorToolbarTab
	{
		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _tooltip;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _text;

		[NonSerialized]
		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EditorToolbar _targetToolbar;

		[NonSerialized]
		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Settings> _targetSettings;

		[Token(Token = "0x17000762")]
		public string Tooltip
		{
			[Token(Token = "0x6002399")]
			[Address(RVA = "0x11357F0", Offset = "0x11357F0", VA = "0x11357F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600239A")]
			[Address(RVA = "0x11357E0", Offset = "0x11357E0", VA = "0x11357E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000763")]
		public string Text
		{
			[Token(Token = "0x600239B")]
			[Address(RVA = "0x11357F8", Offset = "0x11357F8", VA = "0x11357F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600239C")]
			[Address(RVA = "0x11357D0", Offset = "0x11357D0", VA = "0x11357D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000764")]
		public EditorToolbar TargetToolbar
		{
			[Token(Token = "0x600239D")]
			[Address(RVA = "0x1135800", Offset = "0x1135800", VA = "0x1135800")]
			get
			{
				return null;
			}
			[Token(Token = "0x600239E")]
			[Address(RVA = "0x1135808", Offset = "0x1135808", VA = "0x1135808")]
			set
			{
			}
		}

		[Token(Token = "0x17000765")]
		public int NumTargetSettings
		{
			[Token(Token = "0x600239F")]
			[Address(RVA = "0x1135818", Offset = "0x1135818", VA = "0x1135818")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0x11356B8", Offset = "0x11356B8", VA = "0x11356B8")]
		public EditorToolbarTab(string text, string tooltip)
		{
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0x1135860", Offset = "0x1135860", VA = "0x1135860")]
		public void AddTargetSettings(Settings targetSettings)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000539")]
	public abstract class Settings
	{
		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool _canBeDisplayed;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[SerializeField]
		protected bool _isExpanded;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _foldoutLabel;

		[Token(Token = "0x17000766")]
		public bool CanBeDisplayed
		{
			[Token(Token = "0x60023A1")]
			[Address(RVA = "0x1135948", Offset = "0x1135948", VA = "0x1135948")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023A2")]
			[Address(RVA = "0x1135950", Offset = "0x1135950", VA = "0x1135950")]
			set
			{
			}
		}

		[Token(Token = "0x17000767")]
		public bool UsesFoldout
		{
			[Token(Token = "0x60023A3")]
			[Address(RVA = "0x113595C", Offset = "0x113595C", VA = "0x113595C")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023A4")]
			[Address(RVA = "0x1135964", Offset = "0x1135964", VA = "0x1135964")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000768")]
		public string FoldoutLabel
		{
			[Token(Token = "0x60023A5")]
			[Address(RVA = "0x1135970", Offset = "0x1135970", VA = "0x1135970")]
			get
			{
				return null;
			}
			[Token(Token = "0x60023A6")]
			[Address(RVA = "0x1135978", Offset = "0x1135978", VA = "0x1135978")]
			set
			{
			}
		}

		[Token(Token = "0x17000769")]
		public bool IsExpanded
		{
			[Token(Token = "0x60023A7")]
			[Address(RVA = "0x1135988", Offset = "0x1135988", VA = "0x1135988")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60023A8")]
			[Address(RVA = "0x1135990", Offset = "0x1135990", VA = "0x1135990")]
			set
			{
			}
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0x113599C", Offset = "0x113599C", VA = "0x113599C")]
		protected Settings()
		{
		}
	}
	[Token(Token = "0x200053A")]
	public class ColorRef
	{
		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Color _value;

		[Token(Token = "0x1700076A")]
		public Color Value
		{
			[Token(Token = "0x60023AA")]
			[Address(RVA = "0x11359FC", Offset = "0x11359FC", VA = "0x11359FC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60023AB")]
			[Address(RVA = "0x1135A08", Offset = "0x1135A08", VA = "0x1135A08")]
			set
			{
			}
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0x1135A14", Offset = "0x1135A14", VA = "0x1135A14")]
		public ColorRef()
		{
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x1135A24", Offset = "0x1135A24", VA = "0x1135A24")]
		public ColorRef(Color color)
		{
		}
	}
	[Token(Token = "0x200053B")]
	public class ColorTransition
	{
		[Token(Token = "0x200053C")]
		public enum State
		{
			[Token(Token = "0x4001914")]
			CompleteFadeIn,
			[Token(Token = "0x4001915")]
			CompleteFadeOut,
			[Token(Token = "0x4001916")]
			FadingIn,
			[Token(Token = "0x4001917")]
			FadingOut,
			[Token(Token = "0x4001918")]
			Ready
		}

		[Token(Token = "0x200053D")]
		public delegate void ColorTransitionBeginHandler(ColorTransition colorTransition);

		[Token(Token = "0x200053E")]
		public delegate void ColorTransitionEndHandler(ColorTransition colorTransition);

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ColorRef _colorRef;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color _fadeInColor;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color _fadeOutColor;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private State _state;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _durationInSeconds;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _elapsedTimeInSeconds;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool _isActive;

		[Token(Token = "0x1700076B")]
		public State TransitionState
		{
			[Token(Token = "0x60023B2")]
			[Address(RVA = "0x1135CDC", Offset = "0x1135CDC", VA = "0x1135CDC")]
			get
			{
				return default(State);
			}
		}

		[Token(Token = "0x1700076C")]
		public Color FadeInColor
		{
			[Token(Token = "0x60023B3")]
			[Address(RVA = "0x1135CE4", Offset = "0x1135CE4", VA = "0x1135CE4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60023B4")]
			[Address(RVA = "0x1135CF0", Offset = "0x1135CF0", VA = "0x1135CF0")]
			set
			{
			}
		}

		[Token(Token = "0x1700076D")]
		public Color FadeOutColor
		{
			[Token(Token = "0x60023B5")]
			[Address(RVA = "0x1135CFC", Offset = "0x1135CFC", VA = "0x1135CFC")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60023B6")]
			[Address(RVA = "0x1135D08", Offset = "0x1135D08", VA = "0x1135D08")]
			set
			{
			}
		}

		[Token(Token = "0x1700076E")]
		public float DurationInSeconds
		{
			[Token(Token = "0x60023B7")]
			[Address(RVA = "0x1135D14", Offset = "0x1135D14", VA = "0x1135D14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60023B8")]
			[Address(RVA = "0x1135D1C", Offset = "0x1135D1C", VA = "0x1135D1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700076F")]
		public bool IsActive
		{
			[Token(Token = "0x60023B9")]
			[Address(RVA = "0x1135D2C", Offset = "0x1135D2C", VA = "0x1135D2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000046")]
		public event ColorTransitionBeginHandler TransitionBegin
		{
			[Token(Token = "0x60023AE")]
			[Address(RVA = "0x1135A6C", Offset = "0x1135A6C", VA = "0x1135A6C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60023AF")]
			[Address(RVA = "0x1135B08", Offset = "0x1135B08", VA = "0x1135B08")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public event ColorTransitionEndHandler TransitionEnd
		{
			[Token(Token = "0x60023B0")]
			[Address(RVA = "0x1135BA4", Offset = "0x1135BA4", VA = "0x1135BA4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60023B1")]
			[Address(RVA = "0x1135C40", Offset = "0x1135C40", VA = "0x1135C40")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x1135D34", Offset = "0x1135D34", VA = "0x1135D34")]
		public ColorTransition(ColorRef colorRef)
		{
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0x1135D88", Offset = "0x1135D88", VA = "0x1135D88")]
		public void BeginFadeIn(bool startFromCurrentColor)
		{
		}

		[Token(Token = "0x60023BC")]
		[Address(RVA = "0x1135DE4", Offset = "0x1135DE4", VA = "0x1135DE4")]
		public void BeginFadeOut(bool startFromCurrentColor)
		{
		}

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0x1135E40", Offset = "0x1135E40", VA = "0x1135E40")]
		public void Update(float elapsedTime)
		{
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0x1135F44", Offset = "0x1135F44", VA = "0x1135F44")]
		private void End()
		{
		}
	}
	[Token(Token = "0x200053F")]
	public static class CameraEx
	{
		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<GameObject> _objectBuffer;

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0x113628C", Offset = "0x113628C", VA = "0x113628C")]
		public static bool IsCurrent(this Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0x11362F8", Offset = "0x11362F8", VA = "0x11362F8")]
		public static float GetFrustumDistanceFromHeight(this Camera camera, float frustumHeight)
		{
			return default(float);
		}

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0x1136340", Offset = "0x1136340", VA = "0x1136340")]
		public static float GetFOVFromDistanceAndHeight(this Camera camera, float frustumHeight, float distance)
		{
			return default(float);
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0x1136368", Offset = "0x1136368", VA = "0x1136368")]
		public static float GetFrustumWidthFromDistance(this Camera camera, float distance)
		{
			return default(float);
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0x1134D6C", Offset = "0x1134D6C", VA = "0x1134D6C")]
		public static float GetFrustumHeightFromDistance(this Camera camera, float distance)
		{
			return default(float);
		}

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x11363C8", Offset = "0x11363C8", VA = "0x11363C8")]
		public static AABB CalculateVolumeAABB(this Camera camera)
		{
			return default(AABB);
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0x113647C", Offset = "0x113647C", VA = "0x113647C")]
		public static AABB CalculateFrustumAABB(this Camera camera)
		{
			return default(AABB);
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0x113676C", Offset = "0x113676C", VA = "0x113676C")]
		public static AABB CalculateOrthoAABB(this Camera camera)
		{
			return default(AABB);
		}

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0x1136F58", Offset = "0x1136F58", VA = "0x1136F58")]
		public static bool IsPointInFrontNearPlane(this Camera camera, Vector3 position)
		{
			return default(bool);
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0x1137000", Offset = "0x1137000", VA = "0x1137000")]
		public static Plane GetNearPlaneForward(this Camera camera)
		{
			return default(Plane);
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0x11370E4", Offset = "0x11370E4", VA = "0x11370E4")]
		public static Vector3 GetFarMidPoint(this Camera camera)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x113717C", Offset = "0x113717C", VA = "0x113717C")]
		public static Vector3 GetFarMidOrthoTop(this Camera camera)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x1137248", Offset = "0x1137248", VA = "0x1137248")]
		public static float GetOrthoFOV(this Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0x11373E0", Offset = "0x11373E0", VA = "0x11373E0")]
		public static bool IsPointFacingCamera(this Camera camera, Vector3 point, Vector3 pointNormal)
		{
			return default(bool);
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0x11374B0", Offset = "0x11374B0", VA = "0x11374B0")]
		public static float GetPointZDistance(this Camera camera, Vector3 point)
		{
			return default(float);
		}

		[Token(Token = "0x60023D6")]
		[Address(RVA = "0x1137524", Offset = "0x1137524", VA = "0x1137524")]
		public static List<Vector3> GetVisibleSphereExtents(this Camera camera, Sphere sphere)
		{
			return null;
		}

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x1137904", Offset = "0x1137904", VA = "0x1137904")]
		public static List<Vector2> ConvertWorldToScreenPoints(this Camera camera, List<Vector3> worldPoints)
		{
			return null;
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x1137B68", Offset = "0x1137B68", VA = "0x1137B68")]
		public static float ScreenToEstimatedWorldSize(this Camera camera, Vector3 worldPos, float screenSize)
		{
			return default(float);
		}

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0x1137C74", Offset = "0x1137C74", VA = "0x1137C74")]
		public static float EstimateZoomFactor(this Camera camera, Vector3 worldPos)
		{
			return default(float);
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0x1137D90", Offset = "0x1137D90", VA = "0x1137D90")]
		public static float EstimateZoomFactorSpherical(this Camera camera, Vector3 worldPos)
		{
			return default(float);
		}

		[Token(Token = "0x60023DB")]
		[Address(RVA = "0x1137ED8", Offset = "0x1137ED8", VA = "0x1137ED8")]
		public static void GetVisibleObjects(this Camera camera, CameraViewVolume viewVolume, List<GameObject> visibleObjects)
		{
		}
	}
	[Token(Token = "0x2000540")]
	public static class ColorEx
	{
		[Token(Token = "0x60023DD")]
		[Address(RVA = "0x11383BC", Offset = "0x11383BC", VA = "0x11383BC")]
		public static Color FromByteValues(byte r, byte g, byte b, byte a)
		{
			return default(Color);
		}

		[Token(Token = "0x60023DE")]
		[Address(RVA = "0x11383F8", Offset = "0x11383F8", VA = "0x11383F8")]
		public static Color[] GetFilledColorArray(int arrayLength, Color fillValue)
		{
			return null;
		}

		[Token(Token = "0x60023DF")]
		[Address(RVA = "0x11384A8", Offset = "0x11384A8", VA = "0x11384A8")]
		public static Color KeepAllButAlpha(this Color color, float newAlpha)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x2000541")]
	public static class GameObjectEx
	{
		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Transform> _transformsChildren;

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x11384B0", Offset = "0x11384B0", VA = "0x11384B0")]
		public static void InheritHierarchyLayers(this GameObject hierarchy, GameObject sourceHierarchy)
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x11386A4", Offset = "0x11386A4", VA = "0x11386A4")]
		public static void SetStatic(this GameObject gameObject, bool isStatic, bool affectChildren)
		{
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x1138994", Offset = "0x1138994", VA = "0x1138994")]
		public static bool IsRLDAppObject(this GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x1138A14", Offset = "0x1138A14", VA = "0x1138A14")]
		public static GameObjectType GetGameObjectType(this GameObject gameObject)
		{
			return default(GameObjectType);
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x1138EA8", Offset = "0x1138EA8", VA = "0x1138EA8")]
		public static bool HierarchyHasMesh(this GameObject root)
		{
			return default(bool);
		}

		[Token(Token = "0x60023E5")]
		[Address(RVA = "0x1139080", Offset = "0x1139080", VA = "0x1139080")]
		public static bool HierarchyHasSprite(this GameObject root)
		{
			return default(bool);
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x1139258", Offset = "0x1139258", VA = "0x1139258")]
		public static bool HierarchyHasObjectsOfType(this GameObject root, GameObjectType typeFlags)
		{
			return default(bool);
		}

		[Token(Token = "0x60023E7")]
		[Address(RVA = "0x11393FC", Offset = "0x11393FC", VA = "0x11393FC")]
		public static List<GameObject> GetMeshObjectsInHierarchy(this GameObject root)
		{
			return null;
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x11396AC", Offset = "0x11396AC", VA = "0x11396AC")]
		public static List<GameObject> GetSpriteObjectsInHierarchy(this GameObject root)
		{
			return null;
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x113995C", Offset = "0x113995C", VA = "0x113995C")]
		public static void SetHierarchyWorldScaleByPivot(this GameObject root, Vector3 worldScale, Vector3 pivotPoint)
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0x1139B4C", Offset = "0x1139B4C", VA = "0x1139B4C")]
		public static List<GameObject> GetAllChildren(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x1138838", Offset = "0x1138838", VA = "0x1138838")]
		public static List<GameObject> GetAllChildrenAndSelf(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x1139D08", Offset = "0x1139D08", VA = "0x1139D08")]
		public static void GetAllChildrenAndSelf(this GameObject gameObject, List<GameObject> childrenAndSelf)
		{
		}

		[Token(Token = "0x60023ED")]
		[Address(RVA = "0x1138C64", Offset = "0x1138C64", VA = "0x1138C64")]
		public static Mesh GetMesh(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x1139FA4", Offset = "0x1139FA4", VA = "0x1139FA4")]
		public static Renderer GetMeshRenderer(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x1138DF8", Offset = "0x1138DF8", VA = "0x1138DF8")]
		public static Sprite GetSprite(this GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x113A064", Offset = "0x113A064", VA = "0x113A064")]
		public static List<GameObject> GetRoots(IEnumerable<GameObject> gameObjects)
		{
			return null;
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x113A514", Offset = "0x113A514", VA = "0x113A514")]
		public static List<GameObject> FilterParentsOnly(IEnumerable<GameObject> gameObjects)
		{
			return null;
		}
	}
	[Token(Token = "0x2000542")]
	public static class GraphicsEx
	{
		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x113ACB0", Offset = "0x113ACB0", VA = "0x113ACB0")]
		public static void DrawWireBox(AABB box)
		{
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x113AE94", Offset = "0x113AE94", VA = "0x113AE94")]
		public static void DrawWireCornerBox(AABB box, float wireCornerLinePercentage)
		{
		}

		[Token(Token = "0x60023F5")]
		[Address(RVA = "0x113B608", Offset = "0x113B608", VA = "0x113B608")]
		public static void DrawWireBox(OBB box)
		{
		}

		[Token(Token = "0x60023F6")]
		[Address(RVA = "0x113B7E4", Offset = "0x113B7E4", VA = "0x113B7E4")]
		public static void DrawWireCornerBox(OBB box, float wireCornerLinePercentage)
		{
		}
	}
	[Token(Token = "0x2000543")]
	public static class GUIEx
	{
		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Stack<Color> _colorStack;

		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x113BD24", Offset = "0x113BD24", VA = "0x113BD24")]
		public static void PushColor(Color color)
		{
		}

		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x113BE08", Offset = "0x113BE08", VA = "0x113BE08")]
		public static void PopColor()
		{
		}
	}
	[Token(Token = "0x2000544")]
	public static class LayerEx
	{
		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x113BFC0", Offset = "0x113BFC0", VA = "0x113BFC0")]
		public static int GetMinLayer()
		{
			return default(int);
		}

		[Token(Token = "0x60023FB")]
		[Address(RVA = "0x113BFC8", Offset = "0x113BFC8", VA = "0x113BFC8")]
		public static int GetMaxLayer()
		{
			return default(int);
		}

		[Token(Token = "0x60023FC")]
		[Address(RVA = "0x113BFD0", Offset = "0x113BFD0", VA = "0x113BFD0")]
		public static bool IsLayerBitSet(int layerBits, int layerNumber)
		{
			return default(bool);
		}

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x113BFE4", Offset = "0x113BFE4", VA = "0x113BFE4")]
		public static int SetLayerBit(int layerBits, int layerNumber)
		{
			return default(int);
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0x113BFF4", Offset = "0x113BFF4", VA = "0x113BFF4")]
		public static int ClearLayerBit(int layerBits, int layerNumber)
		{
			return default(int);
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0x113C004", Offset = "0x113C004", VA = "0x113C004")]
		public static bool IsLayerValid(int layerNumber)
		{
			return default(bool);
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0x113C010", Offset = "0x113C010", VA = "0x113C010")]
		public static List<string> GetAllLayerNames()
		{
			return null;
		}
	}
	[Token(Token = "0x2000545")]
	public static class MaterialEx
	{
		[Token(Token = "0x6002401")]
		[Address(RVA = "0x113C128", Offset = "0x113C128", VA = "0x113C128")]
		public static void SetZWriteEnabled(this Material material, bool enabled)
		{
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x113C184", Offset = "0x113C184", VA = "0x113C184")]
		public static void SetZTestEnabled(this Material material, bool enabled)
		{
		}

		[Token(Token = "0x6002403")]
		[Address(RVA = "0x113C1EC", Offset = "0x113C1EC", VA = "0x113C1EC")]
		public static void SetZTestAlways(this Material material)
		{
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0x113C244", Offset = "0x113C244", VA = "0x113C244")]
		public static void SetZTestLess(this Material material)
		{
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0x113C29C", Offset = "0x113C29C", VA = "0x113C29C")]
		public static void SetCullModeBack(this Material material)
		{
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0x113C2F4", Offset = "0x113C2F4", VA = "0x113C2F4")]
		public static void SetCullModeFront(this Material material)
		{
		}

		[Token(Token = "0x6002407")]
		[Address(RVA = "0x113C34C", Offset = "0x113C34C", VA = "0x113C34C")]
		public static void SetCullModeOff(this Material material)
		{
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0x113C3A4", Offset = "0x113C3A4", VA = "0x113C3A4")]
		public static void SetColor(this Material material, Color color)
		{
		}

		[Token(Token = "0x6002409")]
		[Address(RVA = "0x113C428", Offset = "0x113C428", VA = "0x113C428")]
		public static void SetStencilCmpAlways(this Material material)
		{
		}

		[Token(Token = "0x600240A")]
		[Address(RVA = "0x113C480", Offset = "0x113C480", VA = "0x113C480")]
		public static void SetStencilCmpNotEqual(this Material material)
		{
		}
	}
	[Token(Token = "0x2000546")]
	public static class MathEx
	{
		[Token(Token = "0x600240B")]
		[Address(RVA = "0x1135F34", Offset = "0x1135F34", VA = "0x1135F34")]
		public static bool AlmostEqual(float v1, float v2, float epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x600240C")]
		[Address(RVA = "0x113C4D8", Offset = "0x113C4D8", VA = "0x113C4D8")]
		public static int GetNumDigits(int number)
		{
			return default(int);
		}

		[Token(Token = "0x600240D")]
		[Address(RVA = "0x113C5A4", Offset = "0x113C5A4", VA = "0x113C5A4")]
		public static float SafeAcos(float cosine)
		{
			return default(float);
		}

		[Token(Token = "0x600240E")]
		[Address(RVA = "0x113C5B8", Offset = "0x113C5B8", VA = "0x113C5B8")]
		public static bool SolveQuadratic(float a, float b, float c, out float t1, out float t2)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000547")]
	public static class Matrix4x4Ex
	{
		[Token(Token = "0x600240F")]
		[Address(RVA = "0x113C650", Offset = "0x113C650", VA = "0x113C650")]
		public static Matrix4x4 GetInverse(this Matrix4x4 mtx)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002410")]
		[Address(RVA = "0x113CA7C", Offset = "0x113CA7C", VA = "0x113CA7C")]
		public static Matrix4x4 GetRelativeTransform(this Matrix4x4 matrix, Matrix4x4 referenceTransform)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002411")]
		[Address(RVA = "0x113CAFC", Offset = "0x113CAFC", VA = "0x113CAFC")]
		public static Matrix4x4 Translation(Vector3 translation)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002412")]
		[Address(RVA = "0x113CBB8", Offset = "0x113CBB8", VA = "0x113CBB8")]
		public static Matrix4x4 RotationMatrixFromRightUp(Vector3 right, Vector3 up)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002413")]
		[Address(RVA = "0x113CF38", Offset = "0x113CF38", VA = "0x113CF38")]
		public static Vector3 GetTranslation(this Matrix4x4 matrix)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002414")]
		[Address(RVA = "0x113CF44", Offset = "0x113CF44", VA = "0x113CF44")]
		public static Vector3 GetScale(this Matrix4x4 matrix)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002415")]
		[Address(RVA = "0x113D0D0", Offset = "0x113D0D0", VA = "0x113D0D0")]
		public static Vector3 GetNormalizedAxis(this Matrix4x4 matrix, int axisIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x113D1A8", Offset = "0x113D1A8", VA = "0x113D1A8")]
		public static Vector3[] GetNormalizedAxes(this Matrix4x4 matrix)
		{
			return null;
		}

		[Token(Token = "0x6002417")]
		[Address(RVA = "0x113D29C", Offset = "0x113D29C", VA = "0x113D29C")]
		public static List<Vector3> TransformPoints(this Matrix4x4 matrix, List<Vector3> points)
		{
			return null;
		}
	}
	[Token(Token = "0x2000548")]
	public static class PlaneEx
	{
		[Token(Token = "0x6002418")]
		[Address(RVA = "0x113D4FC", Offset = "0x113D4FC", VA = "0x113D4FC")]
		public static Plane InvertNormal(this Plane plane)
		{
			return default(Plane);
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x113D574", Offset = "0x113D574", VA = "0x113D574")]
		public static float GetAbsDistanceToPoint(this Plane plane, Vector3 point)
		{
			return default(float);
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x113D5AC", Offset = "0x113D5AC", VA = "0x113D5AC")]
		public static Vector3 ProjectPoint(this Plane plane, Vector3 pt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600241B")]
		[Address(RVA = "0x113D624", Offset = "0x113D624", VA = "0x113D624")]
		public static List<Vector3> ProjectAllPoints(this Plane plane, List<Vector3> points)
		{
			return null;
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x113D8A0", Offset = "0x113D8A0", VA = "0x113D8A0")]
		public static int GetFurthestPtInFront(this Plane plane, List<Vector3> points)
		{
			return default(int);
		}

		[Token(Token = "0x600241D")]
		[Address(RVA = "0x113D984", Offset = "0x113D984", VA = "0x113D984")]
		public static int GetClosestPtInFront(this Plane plane, List<Vector3> points)
		{
			return default(int);
		}

		[Token(Token = "0x600241E")]
		[Address(RVA = "0x113DA68", Offset = "0x113DA68", VA = "0x113DA68")]
		public static int GetClosestPtInFrontOrOnPlane(this Plane plane, List<Vector3> points)
		{
			return default(int);
		}

		[Token(Token = "0x600241F")]
		[Address(RVA = "0x113DB68", Offset = "0x113DB68", VA = "0x113DB68")]
		public static int GetFurthestPtBehind(this Plane plane, List<Vector3> points)
		{
			return default(int);
		}

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x113DC4C", Offset = "0x113DC4C", VA = "0x113DC4C")]
		public static Plane GetCameraFacingAxisSlicePlane(Vector3 axisOrigin, Vector3 axis, Camera camera)
		{
			return default(Plane);
		}
	}
	[Token(Token = "0x2000549")]
	public static class QuaternionEx
	{
		[Token(Token = "0x6002421")]
		[Address(RVA = "0x113DF78", Offset = "0x113DF78", VA = "0x113DF78")]
		public static void RotatePoints(this Quaternion quat, List<Vector3> points, Vector3 pivot)
		{
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0x113E094", Offset = "0x113E094", VA = "0x113E094")]
		public static Quaternion GetRelativeRotation(Quaternion from, Quaternion to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x113E138", Offset = "0x113E138", VA = "0x113E138")]
		public static float Length(this Quaternion quat)
		{
			return default(float);
		}

		[Token(Token = "0x6002424")]
		[Address(RVA = "0x113E15C", Offset = "0x113E15C", VA = "0x113E15C")]
		public static Quaternion Normalize(Quaternion quat)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x113E1A8", Offset = "0x113E1A8", VA = "0x113E1A8")]
		public static Quaternion FromToRotation3D(Vector3 from, Vector3 to, Vector3 perp180)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002426")]
		[Address(RVA = "0x113E49C", Offset = "0x113E49C", VA = "0x113E49C")]
		public static Quaternion FromToRotation2D(Vector2 from, Vector2 to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x113E7A4", Offset = "0x113E7A4", VA = "0x113E7A4")]
		public static float ConvertTo2DRotation(this Quaternion quat)
		{
			return default(float);
		}
	}
	[Token(Token = "0x200054A")]
	public static class RayEx
	{
		[Token(Token = "0x6002428")]
		[Address(RVA = "0x113E850", Offset = "0x113E850", VA = "0x113E850")]
		public static Ray InverseTransform(this Ray ray, Matrix4x4 transformMatrix)
		{
			return default(Ray);
		}

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x113E9D0", Offset = "0x113E9D0", VA = "0x113E9D0")]
		public static Ray Mirror(this Ray ray, Vector3 mirrorPoint)
		{
			return default(Ray);
		}
	}
	[Token(Token = "0x200054B")]
	public enum RectCornerPoint
	{
		[Token(Token = "0x400191D")]
		TopLeft,
		[Token(Token = "0x400191E")]
		TopRight,
		[Token(Token = "0x400191F")]
		BottomRight,
		[Token(Token = "0x4001920")]
		BottomLeft
	}
	[Token(Token = "0x200054C")]
	public static class RectEx
	{
		[Token(Token = "0x600242A")]
		[Address(RVA = "0x113EB10", Offset = "0x113EB10", VA = "0x113EB10")]
		public static List<Vector2> GetCornerPoints(this Rect rect)
		{
			return null;
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x113ED8C", Offset = "0x113ED8C", VA = "0x113ED8C")]
		public static Rect PlaceBelowCenterHrz(this Rect rect, Rect other)
		{
			return default(Rect);
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0x113EE70", Offset = "0x113EE70", VA = "0x113EE70")]
		public static Rect InvertScreenY(this Rect rect)
		{
			return default(Rect);
		}

		[Token(Token = "0x600242D")]
		[Address(RVA = "0x113EE30", Offset = "0x113EE30", VA = "0x113EE30")]
		public static Rect FromCenterAndSize(Vector2 center, Vector2 size)
		{
			return default(Rect);
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0x113EEDC", Offset = "0x113EEDC", VA = "0x113EEDC")]
		public static Rect FromPoints(IEnumerable<Vector2> points)
		{
			return default(Rect);
		}

		[Token(Token = "0x600242F")]
		[Address(RVA = "0x113F25C", Offset = "0x113F25C", VA = "0x113F25C")]
		public static Rect FromTexture2D(Texture2D texture2D)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002430")]
		[Address(RVA = "0x113F2CC", Offset = "0x113F2CC", VA = "0x113F2CC")]
		public static Rect Inflate(this Rect rect, float inflateAmount)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002431")]
		[Address(RVA = "0x113F368", Offset = "0x113F368", VA = "0x113F368")]
		public static bool ContainsAllPoints(this Rect rect, IEnumerable<Vector2> points)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200054D")]
	public static class SpriteEx
	{
		[Token(Token = "0x6002432")]
		[Address(RVA = "0x113F674", Offset = "0x113F674", VA = "0x113F674")]
		public static List<Vector3> GetWorldVerts(this Sprite sprite, Transform spriteTransform)
		{
			return null;
		}

		[Token(Token = "0x6002433")]
		[Address(RVA = "0x113F714", Offset = "0x113F714", VA = "0x113F714")]
		public static List<Vector3> GetModelVerts(this Sprite sprite)
		{
			return null;
		}
	}
	[Token(Token = "0x200054E")]
	public static class SpriteRendererEx
	{
		[Token(Token = "0x6002434")]
		[Address(RVA = "0x113F928", Offset = "0x113F928", VA = "0x113F928")]
		public static Vector3 GetWorldCenterPoint(this SpriteRenderer spriteRenderer)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0x113FA88", Offset = "0x113FA88", VA = "0x113FA88")]
		public static Vector3 GetModelSpaceSize(this SpriteRenderer spriteRenderer)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x113F97C", Offset = "0x113F97C", VA = "0x113F97C")]
		public static AABB GetModelSpaceAABB(this SpriteRenderer spriteRenderer)
		{
			return default(AABB);
		}

		[Token(Token = "0x6002437")]
		[Address(RVA = "0x113FE18", Offset = "0x113FE18", VA = "0x113FE18")]
		public static bool IsPixelFullyTransparent(this SpriteRenderer spriteRenderer, Vector3 worldPos)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200054F")]
	public static class StringEx
	{
		[Token(Token = "0x6002438")]
		[Address(RVA = "0x1140284", Offset = "0x1140284", VA = "0x1140284")]
		public static string RemoveTrailingSlashes(this string str)
		{
			return null;
		}

		[Token(Token = "0x6002439")]
		[Address(RVA = "0x11402FC", Offset = "0x11402FC", VA = "0x11402FC")]
		public static char LastChar(this string str)
		{
			return default(char);
		}

		[Token(Token = "0x600243A")]
		[Address(RVA = "0x11402E0", Offset = "0x11402E0", VA = "0x11402E0")]
		public static int LastCharIndex(this string str)
		{
			return default(int);
		}

		[Token(Token = "0x600243B")]
		[Address(RVA = "0x114031C", Offset = "0x114031C", VA = "0x114031C")]
		public static bool ContainsOnlyWhiteSpace(this string str)
		{
			return default(bool);
		}

		[Token(Token = "0x600243C")]
		[Address(RVA = "0x11403D0", Offset = "0x11403D0", VA = "0x11403D0")]
		public static bool IsSingleDigit(this string str)
		{
			return default(bool);
		}

		[Token(Token = "0x600243D")]
		[Address(RVA = "0x1140464", Offset = "0x1140464", VA = "0x1140464")]
		public static bool IsSingleLetter(this string str)
		{
			return default(bool);
		}

		[Token(Token = "0x600243E")]
		[Address(RVA = "0x11404F8", Offset = "0x11404F8", VA = "0x11404F8")]
		public static bool IsSingleChar(this string str, char character)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000550")]
	public static class TerrainEx
	{
		[Token(Token = "0x600243F")]
		[Address(RVA = "0x114053C", Offset = "0x114053C", VA = "0x114053C")]
		public static Vector2 ToNormCoords(this Terrain terrain, Vector3 worldPos)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002440")]
		[Address(RVA = "0x11405E0", Offset = "0x11405E0", VA = "0x11405E0")]
		public static Vector3 GetInterpolatedNormal(this Terrain terrain, Vector3 worldPos)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000551")]
	public static class TransformEx
	{
		[Token(Token = "0x6002441")]
		[Address(RVA = "0x113F864", Offset = "0x113F864", VA = "0x113F864")]
		public static void TransformPoints(this Transform transform, List<Vector3> points)
		{
		}

		[Token(Token = "0x6002442")]
		[Address(RVA = "0x1140628", Offset = "0x1140628", VA = "0x1140628")]
		public static List<Transform> GetGameObjectTransformCollection(IEnumerable<GameObject> gameObjects)
		{
			return null;
		}

		[Token(Token = "0x6002443")]
		[Address(RVA = "0x11409C4", Offset = "0x11409C4", VA = "0x11409C4")]
		public static List<Transform> FilterParentsOnly(IEnumerable<Transform> transforms)
		{
			return null;
		}

		[Token(Token = "0x6002444")]
		[Address(RVA = "0x1139A70", Offset = "0x1139A70", VA = "0x1139A70")]
		public static void SetWorldScale(this Transform transform, Vector3 worldScale)
		{
		}

		[Token(Token = "0x6002445")]
		[Address(RVA = "0x11410A8", Offset = "0x11410A8", VA = "0x11410A8")]
		public static void ScaleFromPivot(this Transform transform, Vector3 scaleFactor, Vector3 pivot)
		{
		}

		[Token(Token = "0x6002446")]
		[Address(RVA = "0x1141230", Offset = "0x1141230", VA = "0x1141230")]
		public static void RotateAroundPivot(this Transform transform, Quaternion rotation, Vector3 pivot)
		{
		}

		[Token(Token = "0x6002447")]
		[Address(RVA = "0x1141364", Offset = "0x1141364", VA = "0x1141364")]
		public static Vector3 GetLocalAxis(this Transform transform, AxisDescriptor axisDesc)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0x11413DC", Offset = "0x11413DC", VA = "0x11413DC")]
		public static Plane GetLocalPlane(this Transform transform, PlaneDescriptor planeDesc)
		{
			return default(Plane);
		}

		[Token(Token = "0x6002449")]
		[Address(RVA = "0x1141554", Offset = "0x1141554", VA = "0x1141554")]
		public static Quaternion Align(this Transform transform, Vector3 normAlignVector, TransformAxis alignmentAxis)
		{
			return default(Quaternion);
		}
	}
	[Token(Token = "0x2000552")]
	public static class Vector2Ex
	{
		[Token(Token = "0x600244A")]
		[Address(RVA = "0x1141BF4", Offset = "0x1141BF4", VA = "0x1141BF4")]
		public static Vector3 ConvertDirTo3D(Vector2 start, Vector2 end, Vector3 zPos, Camera camera)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600244B")]
		[Address(RVA = "0x1141CE8", Offset = "0x1141CE8", VA = "0x1141CE8")]
		public static Vector3 ConvertDirTo3D(Vector2 dir, Vector3 zPos, Camera camera)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0x1141DCC", Offset = "0x1141DCC", VA = "0x1141DCC")]
		public static Vector2 Abs(this Vector2 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600244D")]
		[Address(RVA = "0x1141DD8", Offset = "0x1141DD8", VA = "0x1141DD8")]
		public static float AbsDot(this Vector2 v1, Vector2 v2)
		{
			return default(float);
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0x1141DEC", Offset = "0x1141DEC", VA = "0x1141DEC")]
		public static Vector3 ToVector3(this Vector2 vec, float z = 0f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600244F")]
		[Address(RVA = "0x1141DF0", Offset = "0x1141DF0", VA = "0x1141DF0")]
		public static Vector2 GetNormal(this Vector2 vec)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0x113F254", Offset = "0x113F254", VA = "0x113F254")]
		public static Vector2 FromValue(float value)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0x1141EA8", Offset = "0x1141EA8", VA = "0x1141EA8")]
		public static Vector2 GetInverse(this Vector2 vector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002452")]
		[Address(RVA = "0x1141EB8", Offset = "0x1141EB8", VA = "0x1141EB8")]
		public static float GetDistanceToSegment(this Vector2 point, Vector2 point0, Vector2 point1)
		{
			return default(float);
		}

		[Token(Token = "0x6002453")]
		[Address(RVA = "0x11420E0", Offset = "0x11420E0", VA = "0x11420E0")]
		public static int GetPointClosestToPoint(List<Vector2> points, Vector2 pt)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000553")]
	public static class Vector3Ex
	{
		[Token(Token = "0x6002454")]
		[Address(RVA = "0x11421BC", Offset = "0x11421BC", VA = "0x11421BC")]
		public static void OffsetPoints(List<Vector3> points, Vector3 offset)
		{
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0x1142294", Offset = "0x1142294", VA = "0x1142294")]
		public static Vector2 ConvertDirTo2D(Vector3 start, Vector3 end, Camera camera)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0x1142300", Offset = "0x1142300", VA = "0x1142300")]
		public static Vector3 Abs(this Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0x1142310", Offset = "0x1142310", VA = "0x1142310")]
		public static Vector3 GetSignVector(this Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002458")]
		[Address(RVA = "0x1142334", Offset = "0x1142334", VA = "0x1142334")]
		public static float GetMaxAbsComp(this Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0x1142354", Offset = "0x1142354", VA = "0x1142354")]
		public static float Dot(this Vector3 v1, Vector3 v2)
		{
			return default(float);
		}

		[Token(Token = "0x600245A")]
		[Address(RVA = "0x114236C", Offset = "0x114236C", VA = "0x114236C")]
		public static float AbsDot(this Vector3 v1, Vector3 v2)
		{
			return default(float);
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0x1138318", Offset = "0x1138318", VA = "0x1138318")]
		public static Vector3 FromValue(float value)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x11418DC", Offset = "0x11418DC", VA = "0x11418DC")]
		public static float SignedAngle(Vector3 from, Vector3 to, Vector3 axis)
		{
			return default(float);
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x1142388", Offset = "0x1142388", VA = "0x1142388")]
		public static float GetDistanceToSegment(this Vector3 point, Vector3 point0, Vector3 point1)
		{
			return default(float);
		}

		[Token(Token = "0x600245E")]
		[Address(RVA = "0x1137790", Offset = "0x1137790", VA = "0x1137790")]
		public static Vector3 ProjectOnSegment(this Vector3 point, Vector3 point0, Vector3 point1)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x11425FC", Offset = "0x11425FC", VA = "0x11425FC")]
		public static int GetPointClosestToPoint(List<Vector3> points, Vector3 pt)
		{
			return default(int);
		}

		[Token(Token = "0x6002460")]
		[Address(RVA = "0x11426E8", Offset = "0x11426E8", VA = "0x11426E8")]
		public static Vector3 GetPointCloudCenter(IEnumerable<Vector3> ptCloud)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0x1139B38", Offset = "0x1139B38", VA = "0x1139B38")]
		public static Vector3 GetInverse(this Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x113DF2C", Offset = "0x113DF2C", VA = "0x113DF2C")]
		public static bool IsAligned(this Vector3 vector, Vector3 other, bool checkSameDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x1142A50", Offset = "0x1142A50", VA = "0x1142A50")]
		public static bool PointsSameDir(this Vector3 vector, Vector3 other)
		{
			return default(bool);
		}

		[Token(Token = "0x6002464")]
		[Address(RVA = "0x1142A70", Offset = "0x1142A70", VA = "0x1142A70")]
		public static int GetMostAligned(Vector3[] vectors, Vector3 dir, bool checkSameDirection)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000554")]
	public static class Vector4Ex
	{
		[Token(Token = "0x6002465")]
		[Address(RVA = "0x113CBB4", Offset = "0x113CBB4", VA = "0x113CBB4")]
		public static Vector4 FromVector3(Vector3 vec, float w)
		{
			return default(Vector4);
		}
	}
	[Serializable]
	[Token(Token = "0x2000555")]
	public struct HotkeysStaticData
	{
		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public bool CanHaveMouseButtons;
	}
	[Serializable]
	[Token(Token = "0x2000556")]
	public class Hotkeys
	{
		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<KeyCode> _availableKeys;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<string> _availableKeyNames;

		[Token(Token = "0x4001924")]
		private const int _maxNumberOfKeys = 2;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool _isEnabled;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private KeyCode _key;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _lCtrl;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool _lCmd;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool _lAlt;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[SerializeField]
		private bool _lShift;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool _useStrictModifierCheck;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		private bool _lMouseBtn;

		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		[SerializeField]
		private bool _rMouseBtn;

		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		[SerializeField]
		private bool _mMouseBtn;

		[Token(Token = "0x400192F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _useStrictMouseCheck;

		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _name;

		[NonSerialized]
		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Hotkeys> _potentialOverlaps;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private HotkeysStaticData _staticData;

		[Token(Token = "0x17000770")]
		public static List<KeyCode> AvailableKeys
		{
			[Token(Token = "0x6002467")]
			[Address(RVA = "0x1143190", Offset = "0x1143190", VA = "0x1143190")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000771")]
		public static List<string> AvailableKeyNames
		{
			[Token(Token = "0x6002468")]
			[Address(RVA = "0x1143234", Offset = "0x1143234", VA = "0x1143234")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000772")]
		public bool IsEnabled
		{
			[Token(Token = "0x6002469")]
			[Address(RVA = "0x11432D8", Offset = "0x11432D8", VA = "0x11432D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600246A")]
			[Address(RVA = "0x11432E0", Offset = "0x11432E0", VA = "0x11432E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000773")]
		public string Name
		{
			[Token(Token = "0x600246B")]
			[Address(RVA = "0x11432EC", Offset = "0x11432EC", VA = "0x11432EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000774")]
		public KeyCode Key
		{
			[Token(Token = "0x600246C")]
			[Address(RVA = "0x11432F4", Offset = "0x11432F4", VA = "0x11432F4")]
			get
			{
				return default(KeyCode);
			}
			[Token(Token = "0x600246D")]
			[Address(RVA = "0x11432FC", Offset = "0x11432FC", VA = "0x11432FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000775")]
		public bool LCtrl
		{
			[Token(Token = "0x600246E")]
			[Address(RVA = "0x1143394", Offset = "0x1143394", VA = "0x1143394")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600246F")]
			[Address(RVA = "0x114339C", Offset = "0x114339C", VA = "0x114339C")]
			set
			{
			}
		}

		[Token(Token = "0x17000776")]
		public bool LCmd
		{
			[Token(Token = "0x6002470")]
			[Address(RVA = "0x11433A8", Offset = "0x11433A8", VA = "0x11433A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002471")]
			[Address(RVA = "0x11433B0", Offset = "0x11433B0", VA = "0x11433B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000777")]
		public bool LAlt
		{
			[Token(Token = "0x6002472")]
			[Address(RVA = "0x11433BC", Offset = "0x11433BC", VA = "0x11433BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002473")]
			[Address(RVA = "0x11433C4", Offset = "0x11433C4", VA = "0x11433C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000778")]
		public bool LShift
		{
			[Token(Token = "0x6002474")]
			[Address(RVA = "0x11433D0", Offset = "0x11433D0", VA = "0x11433D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002475")]
			[Address(RVA = "0x11433D8", Offset = "0x11433D8", VA = "0x11433D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000779")]
		public bool LMouseButton
		{
			[Token(Token = "0x6002476")]
			[Address(RVA = "0x11433E4", Offset = "0x11433E4", VA = "0x11433E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002477")]
			[Address(RVA = "0x11433EC", Offset = "0x11433EC", VA = "0x11433EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700077A")]
		public bool RMouseButton
		{
			[Token(Token = "0x6002478")]
			[Address(RVA = "0x11433F8", Offset = "0x11433F8", VA = "0x11433F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002479")]
			[Address(RVA = "0x1143400", Offset = "0x1143400", VA = "0x1143400")]
			set
			{
			}
		}

		[Token(Token = "0x1700077B")]
		public bool MMouseButton
		{
			[Token(Token = "0x600247A")]
			[Address(RVA = "0x114340C", Offset = "0x114340C", VA = "0x114340C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600247B")]
			[Address(RVA = "0x1143414", Offset = "0x1143414", VA = "0x1143414")]
			set
			{
			}
		}

		[Token(Token = "0x1700077C")]
		public bool UseStrictMouseCheck
		{
			[Token(Token = "0x600247C")]
			[Address(RVA = "0x1143420", Offset = "0x1143420", VA = "0x1143420")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600247D")]
			[Address(RVA = "0x1143428", Offset = "0x1143428", VA = "0x1143428")]
			set
			{
			}
		}

		[Token(Token = "0x1700077D")]
		public bool UseStrictModifierCheck
		{
			[Token(Token = "0x600247E")]
			[Address(RVA = "0x1143434", Offset = "0x1143434", VA = "0x1143434")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600247F")]
			[Address(RVA = "0x114343C", Offset = "0x114343C", VA = "0x114343C")]
			set
			{
			}
		}

		[Token(Token = "0x6002466")]
		[Address(RVA = "0x1142B54", Offset = "0x1142B54", VA = "0x1142B54")]
		static Hotkeys()
		{
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x1143448", Offset = "0x1143448", VA = "0x1143448")]
		public Hotkeys(string name)
		{
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0x114352C", Offset = "0x114352C", VA = "0x114352C")]
		public Hotkeys(string name, HotkeysStaticData staticData)
		{
		}

		[Token(Token = "0x6002482")]
		[Address(RVA = "0x114361C", Offset = "0x114361C", VA = "0x114361C")]
		public static void EstablishPotentialOverlaps(List<Hotkeys> hotkeysCollection)
		{
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x1143900", Offset = "0x1143900", VA = "0x1143900")]
		public int GetNumModifiers()
		{
			return default(int);
		}

		[Token(Token = "0x6002484")]
		[Address(RVA = "0x1143918", Offset = "0x1143918", VA = "0x1143918")]
		public int GetNumMouseButtons()
		{
			return default(int);
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x1143930", Offset = "0x1143930", VA = "0x1143930")]
		public List<MouseButton> GetAllUsedMouseButtons()
		{
			return null;
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x1143B34", Offset = "0x1143B34", VA = "0x1143B34")]
		public bool UsesMouseButtons(List<MouseButton> buttons)
		{
			return default(bool);
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x1143CBC", Offset = "0x1143CBC", VA = "0x1143CBC")]
		public List<KeyCode> GetAllUsedModifiers()
		{
			return null;
		}

		[Token(Token = "0x6002488")]
		[Address(RVA = "0x1143EC4", Offset = "0x1143EC4", VA = "0x1143EC4")]
		public bool UsesModifiers(List<KeyCode> modifiers)
		{
			return default(bool);
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x1143828", Offset = "0x1143828", VA = "0x1143828")]
		public void AddPotentialOverlap(Hotkeys hotkeys)
		{
		}

		[Token(Token = "0x600248A")]
		[Address(RVA = "0x114404C", Offset = "0x114404C", VA = "0x114404C")]
		public bool ContainsPotentialOverlap(Hotkeys hotkeys)
		{
			return default(bool);
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x11440A4", Offset = "0x11440A4", VA = "0x11440A4")]
		public bool IsOverlappedBy(Hotkeys hotkeys)
		{
			return default(bool);
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x1144184", Offset = "0x1144184", VA = "0x1144184")]
		public bool IsActive(bool checkForOverlaps = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0x1144880", Offset = "0x1144880", VA = "0x1144880")]
		public bool IsActiveInFrame(bool checkForOverlaps = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600248E")]
		[Address(RVA = "0x1144D88", Offset = "0x1144D88", VA = "0x1144D88")]
		public bool HasNoKeys()
		{
			return default(bool);
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x11445E0", Offset = "0x11445E0", VA = "0x11445E0")]
		public bool HasNoModifiers()
		{
			return default(bool);
		}

		[Token(Token = "0x6002490")]
		[Address(RVA = "0x11446C4", Offset = "0x11446C4", VA = "0x11446C4")]
		public bool HasNoMouseButtons()
		{
			return default(bool);
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0x11444C8", Offset = "0x11444C8", VA = "0x11444C8")]
		public bool IsEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0x1144610", Offset = "0x1144610", VA = "0x1144610")]
		private bool IsAnyModifierKeyPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0x11446EC", Offset = "0x11446EC", VA = "0x11446EC")]
		private bool IsAnyMouseButtonPressed()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000557")]
	public delegate void InputDeviceDoubleTapHandler(IInputDevice inputDevice, Vector2 position);
	[Token(Token = "0x2000558")]
	public interface IInputDevice
	{
		[Token(Token = "0x1700077E")]
		bool DidDoubleTap
		{
			[Token(Token = "0x600249A")]
			get;
		}

		[Token(Token = "0x1700077F")]
		float DoubleTapDelay
		{
			[Token(Token = "0x600249B")]
			get;
			[Token(Token = "0x600249C")]
			set;
		}

		[Token(Token = "0x17000780")]
		InputDeviceType DeviceType
		{
			[Token(Token = "0x600249D")]
			get;
		}

		[Token(Token = "0x14000048")]
		event InputDeviceDoubleTapHandler DoubleTap;

		[Token(Token = "0x600249E")]
		Ray GetRay(Camera camera);

		[Token(Token = "0x600249F")]
		Vector3 GetPositionYAxisUp();

		[Token(Token = "0x60024A0")]
		bool HasPointer();

		[Token(Token = "0x60024A1")]
		bool IsButtonPressed(int buttonIndex);

		[Token(Token = "0x60024A2")]
		bool WasButtonPressedInCurrentFrame(int buttonIndex);

		[Token(Token = "0x60024A3")]
		bool WasButtonReleasedInCurrentFrame(int buttonIndex);

		[Token(Token = "0x60024A4")]
		bool WasMoved();

		[Token(Token = "0x60024A5")]
		bool CreateDeltaCapture(Vector3 deltaOrigin, out int deltaCaptureId);

		[Token(Token = "0x60024A6")]
		void RemoveDeltaCapture(int deltaCaptureId);

		[Token(Token = "0x60024A7")]
		Vector3 GetCaptureDelta(int deltaCaptureId);

		[Token(Token = "0x60024A8")]
		Vector3 GetFrameDelta();

		[Token(Token = "0x60024A9")]
		void Update();
	}
	[Token(Token = "0x2000559")]
	public abstract class InputDeviceBase : IInputDevice
	{
		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _doubleTapDelay;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _lastTapTime;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _didDoubleTap;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _maxNumDeltaCaptures;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InputDeviceDeltaCapture[] _deltaCaptures;

		[Token(Token = "0x17000781")]
		public bool DidDoubleTap
		{
			[Token(Token = "0x60024AC")]
			[Address(RVA = "0x11450C4", Offset = "0x11450C4", VA = "0x11450C4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000782")]
		public float DoubleTapDelay
		{
			[Token(Token = "0x60024AD")]
			[Address(RVA = "0x11450CC", Offset = "0x11450CC", VA = "0x11450CC", Slot = "7")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60024AE")]
			[Address(RVA = "0x11450D4", Offset = "0x11450D4", VA = "0x11450D4", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000783")]
		public abstract InputDeviceType DeviceType
		{
			[Token(Token = "0x60024AF")]
			get;
		}

		[Token(Token = "0x14000049")]
		public event InputDeviceDoubleTapHandler DoubleTap
		{
			[Token(Token = "0x60024AA")]
			[Address(RVA = "0x1144F8C", Offset = "0x1144F8C", VA = "0x1144F8C", Slot = "4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60024AB")]
			[Address(RVA = "0x1145028", Offset = "0x1145028", VA = "0x1145028", Slot = "5")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x11450E4", Offset = "0x11450E4", VA = "0x11450E4")]
		public InputDeviceBase()
		{
		}

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x114510C", Offset = "0x114510C", VA = "0x114510C")]
		public void SetMaxNumDeltaCaptures(int maxNumDeltaCaptures)
		{
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x1145178", Offset = "0x1145178", VA = "0x1145178", Slot = "17")]
		public bool CreateDeltaCapture(Vector3 deltaOrigin, out int deltaCaptureId)
		{
			return default(bool);
		}

		[Token(Token = "0x60024B3")]
		[Address(RVA = "0x114530C", Offset = "0x114530C", VA = "0x114530C", Slot = "18")]
		public void RemoveDeltaCapture(int deltaCaptureId)
		{
		}

		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x1145358", Offset = "0x1145358", VA = "0x1145358", Slot = "19")]
		public Vector3 GetCaptureDelta(int deltaCaptureId)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024B5")]
		public abstract Vector3 GetFrameDelta();

		[Token(Token = "0x60024B6")]
		public abstract Ray GetRay(Camera camera);

		[Token(Token = "0x60024B7")]
		public abstract Vector3 GetPositionYAxisUp();

		[Token(Token = "0x60024B8")]
		public abstract bool HasPointer();

		[Token(Token = "0x60024B9")]
		public abstract bool IsButtonPressed(int buttonIndex);

		[Token(Token = "0x60024BA")]
		public abstract bool WasButtonPressedInCurrentFrame(int buttonIndex);

		[Token(Token = "0x60024BB")]
		public abstract bool WasButtonReleasedInCurrentFrame(int buttonIndex);

		[Token(Token = "0x60024BC")]
		public abstract bool WasMoved();

		[Token(Token = "0x60024BD")]
		[Address(RVA = "0x11453F0", Offset = "0x11453F0", VA = "0x11453F0", Slot = "21")]
		public void Update()
		{
		}

		[Token(Token = "0x60024BE")]
		protected abstract void UpateFrameDeltas();

		[Token(Token = "0x60024BF")]
		[Address(RVA = "0x114541C", Offset = "0x114541C", VA = "0x114541C")]
		private void UpdateDeltaCaptures()
		{
		}

		[Token(Token = "0x60024C0")]
		[Address(RVA = "0x11454A0", Offset = "0x11454A0", VA = "0x11454A0")]
		private void DetectAndHandleDoubleTap()
		{
		}
	}
	[Token(Token = "0x200055A")]
	public class InputDeviceDeltaCapture
	{
		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _id;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3 _origin;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _delta;

		[Token(Token = "0x17000784")]
		public int Id
		{
			[Token(Token = "0x60024C1")]
			[Address(RVA = "0x114555C", Offset = "0x114555C", VA = "0x114555C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000785")]
		public Vector3 Origin
		{
			[Token(Token = "0x60024C2")]
			[Address(RVA = "0x1145564", Offset = "0x1145564", VA = "0x1145564")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000786")]
		public Vector3 Delta
		{
			[Token(Token = "0x60024C3")]
			[Address(RVA = "0x1145570", Offset = "0x1145570", VA = "0x1145570")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60024C4")]
		[Address(RVA = "0x11452C0", Offset = "0x11452C0", VA = "0x11452C0")]
		public InputDeviceDeltaCapture(int id, Vector3 origin)
		{
		}

		[Token(Token = "0x60024C5")]
		[Address(RVA = "0x114553C", Offset = "0x114553C", VA = "0x114553C")]
		public void Update(Vector3 devicePosition)
		{
		}
	}
	[Token(Token = "0x200055B")]
	public enum InputDeviceType
	{
		[Token(Token = "0x400193D")]
		Mouse,
		[Token(Token = "0x400193E")]
		Touch,
		[Token(Token = "0x400193F")]
		VRController
	}
	[Token(Token = "0x200055C")]
	public enum MouseButton
	{
		[Token(Token = "0x4001941")]
		Left,
		[Token(Token = "0x4001942")]
		Right,
		[Token(Token = "0x4001943")]
		Middle,
		[Token(Token = "0x4001944")]
		None
	}
	[Token(Token = "0x200055D")]
	public class MouseInputDevice : InputDeviceBase
	{
		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _frameDelta;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _mousePosInLastFrame;

		[Token(Token = "0x17000787")]
		public override InputDeviceType DeviceType
		{
			[Token(Token = "0x60024C6")]
			[Address(RVA = "0x114557C", Offset = "0x114557C", VA = "0x114557C", Slot = "22")]
			get
			{
				return default(InputDeviceType);
			}
		}

		[Token(Token = "0x60024C7")]
		[Address(RVA = "0x1145584", Offset = "0x1145584", VA = "0x1145584")]
		public MouseInputDevice()
		{
		}

		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x11456C4", Offset = "0x11456C4", VA = "0x11456C4", Slot = "23")]
		public override Vector3 GetFrameDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024C9")]
		[Address(RVA = "0x11456D0", Offset = "0x11456D0", VA = "0x11456D0", Slot = "24")]
		public override Ray GetRay(Camera camera)
		{
			return default(Ray);
		}

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0x114575C", Offset = "0x114575C", VA = "0x114575C", Slot = "25")]
		public override Vector3 GetPositionYAxisUp()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024CB")]
		[Address(RVA = "0x11457A8", Offset = "0x11457A8", VA = "0x11457A8", Slot = "26")]
		public override bool HasPointer()
		{
			return default(bool);
		}

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0x1145878", Offset = "0x1145878", VA = "0x1145878", Slot = "27")]
		public override bool IsButtonPressed(int buttonIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60024CD")]
		[Address(RVA = "0x11458CC", Offset = "0x11458CC", VA = "0x11458CC", Slot = "28")]
		public override bool WasButtonPressedInCurrentFrame(int buttonIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0x1145920", Offset = "0x1145920", VA = "0x1145920", Slot = "29")]
		public override bool WasButtonReleasedInCurrentFrame(int buttonIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60024CF")]
		[Address(RVA = "0x1145A70", Offset = "0x1145A70", VA = "0x1145A70", Slot = "30")]
		public override bool WasMoved()
		{
			return default(bool);
		}

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0x1145BEC", Offset = "0x1145BEC", VA = "0x1145BEC", Slot = "31")]
		protected override void UpateFrameDeltas()
		{
		}
	}
	[Token(Token = "0x200055E")]
	public static class RTInput
	{
		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Key[] _keyMap;

		[Token(Token = "0x17000788")]
		public static Vector3 MousePosition
		{
			[Token(Token = "0x60024D2")]
			[Address(RVA = "0x1145640", Offset = "0x1145640", VA = "0x1145640")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000789")]
		public static bool IsMousePresent
		{
			[Token(Token = "0x60024D3")]
			[Address(RVA = "0x1145830", Offset = "0x1145830", VA = "0x1145830")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700078A")]
		public static int TouchCount
		{
			[Token(Token = "0x60024D4")]
			[Address(RVA = "0x1145F10", Offset = "0x1145F10", VA = "0x1145F10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60024D1")]
		[Address(RVA = "0x1145C68", Offset = "0x1145C68", VA = "0x1145C68")]
		static RTInput()
		{
		}

		[Token(Token = "0x60024D5")]
		[Address(RVA = "0x1145F7C", Offset = "0x1145F7C", VA = "0x1145F7C")]
		public static bool WasLeftMouseButtonPressedThisFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0x1145FD0", Offset = "0x1145FD0", VA = "0x1145FD0")]
		public static bool WasRightMouseButtonPressedThisFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x60024D7")]
		[Address(RVA = "0x1146024", Offset = "0x1146024", VA = "0x1146024")]
		public static bool WasMiddleMouseButtonPressedThisFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0x1144C8C", Offset = "0x1144C8C", VA = "0x1144C8C")]
		public static bool WasMouseButtonPressedThisFrame(int mouseButton)
		{
			return default(bool);
		}

		[Token(Token = "0x60024D9")]
		[Address(RVA = "0x1145974", Offset = "0x1145974", VA = "0x1145974")]
		public static bool WasMouseButtonReleasedThisFrame(int mouseButton)
		{
			return default(bool);
		}

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0x1146078", Offset = "0x1146078", VA = "0x1146078")]
		public static bool IsLeftMouseButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60024DB")]
		[Address(RVA = "0x11460CC", Offset = "0x11460CC", VA = "0x11460CC")]
		public static bool IsRightMouseButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0x1146120", Offset = "0x1146120", VA = "0x1146120")]
		public static bool IsMiddleMouseButtonPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60024DD")]
		[Address(RVA = "0x1144784", Offset = "0x1144784", VA = "0x1144784")]
		public static bool IsMouseButtonPressed(int mouseButton)
		{
			return default(bool);
		}

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0x1146174", Offset = "0x1146174", VA = "0x1146174")]
		public static bool WasMouseMoved()
		{
			return default(bool);
		}

		[Token(Token = "0x60024DF")]
		[Address(RVA = "0x1145AEC", Offset = "0x1145AEC", VA = "0x1145AEC")]
		public static float MouseAxisX()
		{
			return default(float);
		}

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0x1145B68", Offset = "0x1145B68", VA = "0x1145B68")]
		public static float MouseAxisY()
		{
			return default(float);
		}

		[Token(Token = "0x60024E1")]
		[Address(RVA = "0x1146208", Offset = "0x1146208", VA = "0x1146208")]
		public static float MouseScroll()
		{
			return default(float);
		}

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0x1144BC4", Offset = "0x1144BC4", VA = "0x1144BC4")]
		public static bool WasKeyPressedThisFrame(KeyCode keyCode)
		{
			return default(bool);
		}

		[Token(Token = "0x60024E3")]
		[Address(RVA = "0x1144518", Offset = "0x1144518", VA = "0x1144518")]
		public static bool IsKeyPressed(KeyCode keyCode)
		{
			return default(bool);
		}

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0x114628C", Offset = "0x114628C", VA = "0x114628C")]
		public static Vector2 TouchDelta(int touchIndex)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60024E5")]
		[Address(RVA = "0x1146358", Offset = "0x1146358", VA = "0x1146358")]
		public static Vector2 TouchPosition(int touchIndex)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x1146424", Offset = "0x1146424", VA = "0x1146424")]
		public static bool TouchBegan(int touchIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0x11464F8", Offset = "0x11464F8", VA = "0x11464F8")]
		public static bool TouchEndedOrCanceled(int touchIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60024E8")]
		[Address(RVA = "0x11465D0", Offset = "0x11465D0", VA = "0x11465D0")]
		public static bool TouchMoved(int touchIndex)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200055F")]
	public class RTInputDevice : MonoSingleton<RTInputDevice>
	{
		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IInputDevice _inputDevice;

		[Token(Token = "0x1700078B")]
		public IInputDevice Device
		{
			[Token(Token = "0x60024E9")]
			[Address(RVA = "0x11466A4", Offset = "0x11466A4", VA = "0x11466A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700078C")]
		public InputDeviceType DeviceType
		{
			[Token(Token = "0x60024EA")]
			[Address(RVA = "0x11466AC", Offset = "0x11466AC", VA = "0x11466AC")]
			get
			{
				return default(InputDeviceType);
			}
		}

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x1146750", Offset = "0x1146750", VA = "0x1146750")]
		public void Update_SystemCall()
		{
		}

		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x11467F4", Offset = "0x11467F4", VA = "0x11467F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0x11468BC", Offset = "0x11468BC", VA = "0x11468BC")]
		public RTInputDevice()
		{
		}
	}
	[Token(Token = "0x2000560")]
	public class TouchInputDevice : InputDeviceBase
	{
		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _maxNumberOfTouches;

		[Token(Token = "0x1700078D")]
		public int MaxNumberOfTouches
		{
			[Token(Token = "0x60024EE")]
			[Address(RVA = "0x1146928", Offset = "0x1146928", VA = "0x1146928")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700078E")]
		public int TouchCount
		{
			[Token(Token = "0x60024EF")]
			[Address(RVA = "0x1146930", Offset = "0x1146930", VA = "0x1146930")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700078F")]
		public override InputDeviceType DeviceType
		{
			[Token(Token = "0x60024F0")]
			[Address(RVA = "0x114697C", Offset = "0x114697C", VA = "0x114697C", Slot = "22")]
			get
			{
				return default(InputDeviceType);
			}
		}

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x1146878", Offset = "0x1146878", VA = "0x1146878")]
		public TouchInputDevice(int maxNumberOfTouches)
		{
		}

		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x1146984", Offset = "0x1146984", VA = "0x1146984", Slot = "23")]
		public override Vector3 GetFrameDelta()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x1146A18", Offset = "0x1146A18", VA = "0x1146A18", Slot = "24")]
		public override Ray GetRay(Camera camera)
		{
			return default(Ray);
		}

		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x1146B18", Offset = "0x1146B18", VA = "0x1146B18", Slot = "25")]
		public override Vector3 GetPositionYAxisUp()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0x1146BAC", Offset = "0x1146BAC", VA = "0x1146BAC", Slot = "26")]
		public override bool HasPointer()
		{
			return default(bool);
		}

		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x1146BC4", Offset = "0x1146BC4", VA = "0x1146BC4", Slot = "27")]
		public override bool IsButtonPressed(int buttonIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x1146C00", Offset = "0x1146C00", VA = "0x1146C00", Slot = "28")]
		public override bool WasButtonPressedInCurrentFrame(int buttonIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x1146C80", Offset = "0x1146C80", VA = "0x1146C80", Slot = "29")]
		public override bool WasButtonReleasedInCurrentFrame(int buttonIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0x1146D00", Offset = "0x1146D00", VA = "0x1146D00", Slot = "30")]
		public override bool WasMoved()
		{
			return default(bool);
		}

		[Token(Token = "0x60024FA")]
		[Address(RVA = "0x1146DA0", Offset = "0x1146DA0", VA = "0x1146DA0", Slot = "31")]
		protected override void UpateFrameDeltas()
		{
		}
	}
	[Token(Token = "0x2000561")]
	public struct AABB
	{
		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 _size;

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Vector3 _center;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isValid;

		[Token(Token = "0x17000790")]
		public bool IsValid
		{
			[Token(Token = "0x60024FB")]
			[Address(RVA = "0x1146DA4", Offset = "0x1146DA4", VA = "0x1146DA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000791")]
		public Vector3 Center
		{
			[Token(Token = "0x60024FC")]
			[Address(RVA = "0x1146DAC", Offset = "0x1146DAC", VA = "0x1146DAC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60024FD")]
			[Address(RVA = "0x1146DB8", Offset = "0x1146DB8", VA = "0x1146DB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000792")]
		public Vector3 Size
		{
			[Token(Token = "0x60024FE")]
			[Address(RVA = "0x1146DC4", Offset = "0x1146DC4", VA = "0x1146DC4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60024FF")]
			[Address(RVA = "0x1146DD0", Offset = "0x1146DD0", VA = "0x1146DD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000793")]
		public Vector3 Extents
		{
			[Token(Token = "0x6002500")]
			[Address(RVA = "0x113B5EC", Offset = "0x113B5EC", VA = "0x113B5EC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000794")]
		public Vector3 Min
		{
			[Token(Token = "0x6002501")]
			[Address(RVA = "0x1140254", Offset = "0x1140254", VA = "0x1140254")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002502")]
			[Address(RVA = "0x1146DDC", Offset = "0x1146DDC", VA = "0x1146DDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000795")]
		public Vector3 Max
		{
			[Token(Token = "0x6002503")]
			[Address(RVA = "0x1146E5C", Offset = "0x1146E5C", VA = "0x1146E5C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002504")]
			[Address(RVA = "0x1146EC4", Offset = "0x1146EC4", VA = "0x1146EC4")]
			set
			{
			}
		}

		[Token(Token = "0x6002505")]
		[Address(RVA = "0x1146F44", Offset = "0x1146F44", VA = "0x1146F44")]
		public AABB(Vector3 center, Vector3 size)
		{
		}

		[Token(Token = "0x6002506")]
		[Address(RVA = "0x1146F5C", Offset = "0x1146F5C", VA = "0x1146F5C")]
		public AABB(Bounds bounds)
		{
		}

		[Token(Token = "0x6002507")]
		[Address(RVA = "0x1136BCC", Offset = "0x1136BCC", VA = "0x1136BCC")]
		public AABB(IEnumerable<Vector3> pointCloud)
		{
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0x113FABC", Offset = "0x113FABC", VA = "0x113FABC")]
		public AABB(IEnumerable<Vector2> pointCloud)
		{
		}

		[Token(Token = "0x6002509")]
		[Address(RVA = "0x113FAAC", Offset = "0x113FAAC", VA = "0x113FAAC")]
		public static AABB GetInvalid()
		{
			return default(AABB);
		}

		[Token(Token = "0x600250A")]
		[Address(RVA = "0x1146FA8", Offset = "0x1146FA8", VA = "0x1146FA8")]
		public void Inflate(float amount)
		{
		}

		[Token(Token = "0x600250B")]
		[Address(RVA = "0x1146FC8", Offset = "0x1146FC8", VA = "0x1146FC8")]
		public void Inflate(Vector3 amount)
		{
		}

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x1146FE8", Offset = "0x1146FE8", VA = "0x1146FE8")]
		public void Encapsulate(Vector3 point)
		{
		}

		[Token(Token = "0x600250D")]
		[Address(RVA = "0x1147094", Offset = "0x1147094", VA = "0x1147094")]
		public void Encapsulate(IEnumerable<Vector3> points)
		{
		}

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x1147360", Offset = "0x1147360", VA = "0x1147360")]
		public void Encapsulate(AABB aabb)
		{
		}

		[Token(Token = "0x600250F")]
		[Address(RVA = "0x1147430", Offset = "0x1147430", VA = "0x1147430")]
		public void Transform(Matrix4x4 transformMatrix)
		{
		}

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x1140130", Offset = "0x1140130", VA = "0x1140130")]
		public bool ContainsPoint(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002511")]
		[Address(RVA = "0x113B4FC", Offset = "0x113B4FC", VA = "0x113B4FC")]
		public List<Vector3> GetCornerPoints()
		{
			return null;
		}

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x1147AD0", Offset = "0x1147AD0", VA = "0x1147AD0")]
		public List<Vector3> GetCenterAndCornerPoints()
		{
			return null;
		}

		[Token(Token = "0x6002513")]
		[Address(RVA = "0x1147B8C", Offset = "0x1147B8C", VA = "0x1147B8C")]
		public List<Vector2> GetScreenCornerPoints(Camera camera)
		{
			return null;
		}

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x1147DCC", Offset = "0x1147DCC", VA = "0x1147DCC")]
		public List<Vector2> GetScreenCenterAndCornerPoints(Camera camera)
		{
			return null;
		}

		[Token(Token = "0x6002515")]
		[Address(RVA = "0x114800C", Offset = "0x114800C", VA = "0x114800C")]
		public Rect GetScreenRectangle(Camera camera)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x113ADE8", Offset = "0x113ADE8", VA = "0x113ADE8")]
		public Matrix4x4 GetUnitBoxTransform()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002517")]
		[Address(RVA = "0x1148124", Offset = "0x1148124", VA = "0x1148124")]
		public Bounds ToBounds()
		{
			return default(Bounds);
		}

		[Token(Token = "0x6002518")]
		[Address(RVA = "0x1146E8C", Offset = "0x1146E8C", VA = "0x1146E8C")]
		private void RecalculateCenterAndSize(Vector3 min, Vector3 max)
		{
		}
	}
	[Token(Token = "0x2000562")]
	public enum Axis
	{
		[Token(Token = "0x400194E")]
		X,
		[Token(Token = "0x400194F")]
		Y,
		[Token(Token = "0x4001950")]
		Z
	}
	[Token(Token = "0x2000563")]
	public static class AxisHelper
	{
		[Token(Token = "0x6002519")]
		[Address(RVA = "0x1148144", Offset = "0x1148144", VA = "0x1148144")]
		public static Vector3 GetWorldAxis(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x1148224", Offset = "0x1148224", VA = "0x1148224")]
		public static Vector3 GetWorldAxis(Axis axis, AxisSign axisSign)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000564")]
	public class AxisDescriptor
	{
		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AxisSign _sign;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int _index;

		[Token(Token = "0x17000796")]
		public AxisSign Sign
		{
			[Token(Token = "0x600251B")]
			[Address(RVA = "0x1148320", Offset = "0x1148320", VA = "0x1148320")]
			get
			{
				return default(AxisSign);
			}
		}

		[Token(Token = "0x17000797")]
		public int Index
		{
			[Token(Token = "0x600251C")]
			[Address(RVA = "0x1148328", Offset = "0x1148328", VA = "0x1148328")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000798")]
		public bool IsPositive
		{
			[Token(Token = "0x600251D")]
			[Address(RVA = "0x1148330", Offset = "0x1148330", VA = "0x1148330")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000799")]
		public bool IsNegative
		{
			[Token(Token = "0x600251E")]
			[Address(RVA = "0x1148340", Offset = "0x1148340", VA = "0x1148340")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600251F")]
		[Address(RVA = "0x1148350", Offset = "0x1148350", VA = "0x1148350")]
		public AxisDescriptor(int axisIndex, AxisSign axisSign)
		{
		}

		[Token(Token = "0x6002520")]
		[Address(RVA = "0x114837C", Offset = "0x114837C", VA = "0x114837C")]
		public AxisDescriptor(int axisIndex, bool isNegative)
		{
		}

		[Token(Token = "0x6002521")]
		[Address(RVA = "0x11483B4", Offset = "0x11483B4", VA = "0x11483B4")]
		public BoxFace GetAssociatedBoxFace()
		{
			return default(BoxFace);
		}
	}
	[Token(Token = "0x2000565")]
	public enum AxisSign
	{
		[Token(Token = "0x4001954")]
		Positive,
		[Token(Token = "0x4001955")]
		Negative
	}
	[Token(Token = "0x2000566")]
	public struct OBB
	{
		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 _size;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Vector3 _center;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Quaternion _rotation;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _isValid;

		[Token(Token = "0x1700079A")]
		public bool IsValid
		{
			[Token(Token = "0x6002522")]
			[Address(RVA = "0x11483F8", Offset = "0x11483F8", VA = "0x11483F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700079B")]
		public Vector3 Center
		{
			[Token(Token = "0x6002523")]
			[Address(RVA = "0x1148400", Offset = "0x1148400", VA = "0x1148400")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002524")]
			[Address(RVA = "0x114840C", Offset = "0x114840C", VA = "0x114840C")]
			set
			{
			}
		}

		[Token(Token = "0x1700079C")]
		public Vector3 Size
		{
			[Token(Token = "0x6002525")]
			[Address(RVA = "0x1148418", Offset = "0x1148418", VA = "0x1148418")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002526")]
			[Address(RVA = "0x1148424", Offset = "0x1148424", VA = "0x1148424")]
			set
			{
			}
		}

		[Token(Token = "0x1700079D")]
		public Vector3 Extents
		{
			[Token(Token = "0x6002527")]
			[Address(RVA = "0x113BD08", Offset = "0x113BD08", VA = "0x113BD08")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700079E")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6002528")]
			[Address(RVA = "0x1148430", Offset = "0x1148430", VA = "0x1148430")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002529")]
			[Address(RVA = "0x114843C", Offset = "0x114843C", VA = "0x114843C")]
			set
			{
			}
		}

		[Token(Token = "0x1700079F")]
		public Matrix4x4 RotationMatrix
		{
			[Token(Token = "0x600252A")]
			[Address(RVA = "0x1148448", Offset = "0x1148448", VA = "0x1148448")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x170007A0")]
		public Vector3 Right
		{
			[Token(Token = "0x600252B")]
			[Address(RVA = "0x1148540", Offset = "0x1148540", VA = "0x1148540")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170007A1")]
		public Vector3 Up
		{
			[Token(Token = "0x600252C")]
			[Address(RVA = "0x11485B0", Offset = "0x11485B0", VA = "0x11485B0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170007A2")]
		public Vector3 Look
		{
			[Token(Token = "0x600252D")]
			[Address(RVA = "0x1148620", Offset = "0x1148620", VA = "0x1148620")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0x1148690", Offset = "0x1148690", VA = "0x1148690")]
		public OBB(Vector3 center, Vector3 size)
		{
		}

		[Token(Token = "0x600252F")]
		[Address(RVA = "0x11486F4", Offset = "0x11486F4", VA = "0x11486F4")]
		public OBB(Vector3 center, Vector3 size, Quaternion rotation)
		{
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0x1148714", Offset = "0x1148714", VA = "0x1148714")]
		public OBB(Vector3 center, Quaternion rotation)
		{
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0x11487A4", Offset = "0x11487A4", VA = "0x11487A4")]
		public OBB(Quaternion rotation)
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0x1148840", Offset = "0x1148840", VA = "0x1148840")]
		public OBB(Bounds bounds, Quaternion rotation)
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0x11488B4", Offset = "0x11488B4", VA = "0x11488B4")]
		public OBB(AABB aabb)
		{
		}

		[Token(Token = "0x6002534")]
		[Address(RVA = "0x114892C", Offset = "0x114892C", VA = "0x114892C")]
		public OBB(AABB aabb, Quaternion rotation)
		{
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0x1148960", Offset = "0x1148960", VA = "0x1148960")]
		public OBB(AABB modelSpaceAABB, Transform worldTransform)
		{
		}

		[Token(Token = "0x6002536")]
		[Address(RVA = "0x11489F0", Offset = "0x11489F0", VA = "0x11489F0")]
		public OBB(OBB copy)
		{
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0x1148A50", Offset = "0x1148A50", VA = "0x1148A50")]
		public static OBB GetInvalid()
		{
			return default(OBB);
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0x1148A60", Offset = "0x1148A60", VA = "0x1148A60")]
		public void Inflate(float amount)
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0x113B740", Offset = "0x113B740", VA = "0x113B740")]
		public Matrix4x4 GetUnitBoxTransform()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x113BC58", Offset = "0x113BC58", VA = "0x113BC58")]
		public List<Vector3> GetCornerPoints()
		{
			return null;
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0x1148A80", Offset = "0x1148A80", VA = "0x1148A80")]
		public List<Vector3> GetCenterAndCornerPoints()
		{
			return null;
		}

		[Token(Token = "0x600253C")]
		[Address(RVA = "0x1148B3C", Offset = "0x1148B3C", VA = "0x1148B3C")]
		public void Encapsulate(OBB otherOBB)
		{
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0x1148D7C", Offset = "0x1148D7C", VA = "0x1148D7C")]
		public Vector3 GetPointFaceNormal(Vector3 pointOnFace)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0x114907C", Offset = "0x114907C", VA = "0x114907C")]
		public bool IntersectsOBB(OBB otherOBB)
		{
			return default(bool);
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0x114A044", Offset = "0x114A044", VA = "0x114A044")]
		public Vector3 GetClosestPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002540")]
		[Address(RVA = "0x114A424", Offset = "0x114A424", VA = "0x114A424")]
		public bool IntersectsSphere(Sphere sphere)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000567")]
	public class Plane2D
	{
		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2 _normal;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _distance;

		[Token(Token = "0x170007A3")]
		public Vector2 Normal
		{
			[Token(Token = "0x6002541")]
			[Address(RVA = "0x114A454", Offset = "0x114A454", VA = "0x114A454")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002542")]
			[Address(RVA = "0x114A45C", Offset = "0x114A45C", VA = "0x114A45C")]
			set
			{
			}
		}

		[Token(Token = "0x170007A4")]
		public float Distance
		{
			[Token(Token = "0x6002543")]
			[Address(RVA = "0x114A520", Offset = "0x114A520", VA = "0x114A520")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002544")]
			[Address(RVA = "0x114A528", Offset = "0x114A528", VA = "0x114A528")]
			set
			{
			}
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x114A530", Offset = "0x114A530", VA = "0x114A530")]
		public Plane2D(Vector2 normal, float distance)
		{
		}

		[Token(Token = "0x6002546")]
		[Address(RVA = "0x114A60C", Offset = "0x114A60C", VA = "0x114A60C")]
		public Plane2D(Vector2 normal, Vector2 pointOnPlane)
		{
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x114A6F8", Offset = "0x114A6F8", VA = "0x114A6F8")]
		public float GetDistanceToPoint(Vector2 point)
		{
			return default(float);
		}

		[Token(Token = "0x6002548")]
		[Address(RVA = "0x114A714", Offset = "0x114A714", VA = "0x114A714")]
		public bool Raycast(Vector2 rayOrigin, Vector2 rayDir, out float t)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000568")]
	public struct PlaneDescriptor
	{
		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private PlaneId _id;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private PlaneQuadrantId _quadrant;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private AxisDescriptor _firstAxisDescriptor;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AxisDescriptor _secondAxisDescriptor;

		[Token(Token = "0x170007A5")]
		public PlaneId Id
		{
			[Token(Token = "0x6002549")]
			[Address(RVA = "0x114A770", Offset = "0x114A770", VA = "0x114A770")]
			get
			{
				return default(PlaneId);
			}
		}

		[Token(Token = "0x170007A6")]
		public PlaneQuadrantId Quadrant
		{
			[Token(Token = "0x600254A")]
			[Address(RVA = "0x114A778", Offset = "0x114A778", VA = "0x114A778")]
			get
			{
				return default(PlaneQuadrantId);
			}
		}

		[Token(Token = "0x170007A7")]
		public AxisSign FirstAxisSign
		{
			[Token(Token = "0x600254B")]
			[Address(RVA = "0x114A780", Offset = "0x114A780", VA = "0x114A780")]
			get
			{
				return default(AxisSign);
			}
		}

		[Token(Token = "0x170007A8")]
		public AxisSign SecondAxisSign
		{
			[Token(Token = "0x600254C")]
			[Address(RVA = "0x114A79C", Offset = "0x114A79C", VA = "0x114A79C")]
			get
			{
				return default(AxisSign);
			}
		}

		[Token(Token = "0x170007A9")]
		public int FirstAxisIndex
		{
			[Token(Token = "0x600254D")]
			[Address(RVA = "0x114A7B8", Offset = "0x114A7B8", VA = "0x114A7B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170007AA")]
		public int SecondAxisIndex
		{
			[Token(Token = "0x600254E")]
			[Address(RVA = "0x114A7D4", Offset = "0x114A7D4", VA = "0x114A7D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170007AB")]
		public AxisDescriptor FirstAxisDescriptor
		{
			[Token(Token = "0x600254F")]
			[Address(RVA = "0x114A7F0", Offset = "0x114A7F0", VA = "0x114A7F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007AC")]
		public AxisDescriptor SecondAxisDescriptor
		{
			[Token(Token = "0x6002550")]
			[Address(RVA = "0x114A7F8", Offset = "0x114A7F8", VA = "0x114A7F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0x114A800", Offset = "0x114A800", VA = "0x114A800")]
		public PlaneDescriptor(PlaneId planeId, PlaneQuadrantId planeQuadrant)
		{
		}
	}
	[Token(Token = "0x2000569")]
	public enum PlaneId
	{
		[Token(Token = "0x4001961")]
		XY,
		[Token(Token = "0x4001962")]
		YZ,
		[Token(Token = "0x4001963")]
		ZX
	}
	[Token(Token = "0x200056A")]
	public static class PlaneIdHelper
	{
		[Token(Token = "0x200056B")]
		private struct PlaneQuadrantInfo
		{
			[Token(Token = "0x4001966")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PlaneQuadrantId Quadrant;

			[Token(Token = "0x4001967")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public AxisSign FirstAxisSign;

			[Token(Token = "0x4001968")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AxisSign SecondAxisSign;
		}

		[Token(Token = "0x200056C")]
		private struct PlaneInfo
		{
			[Token(Token = "0x4001969")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public PlaneId PlaneId;

			[Token(Token = "0x400196A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<PlaneQuadrantInfo> QuadrantInfo;
		}

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<PlaneInfo> _planeInfo;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static PlaneId[] _allPlaneIds;

		[Token(Token = "0x170007AD")]
		public static PlaneId[] AllPlaneIds
		{
			[Token(Token = "0x6002553")]
			[Address(RVA = "0x114B2BC", Offset = "0x114B2BC", VA = "0x114B2BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0x114AA10", Offset = "0x114AA10", VA = "0x114AA10")]
		static PlaneIdHelper()
		{
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x114A898", Offset = "0x114A898", VA = "0x114A898")]
		public static AxisDescriptor GetFirstAxisDescriptor(PlaneId planeId, PlaneQuadrantId planeQuadrant)
		{
			return null;
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0x114A954", Offset = "0x114A954", VA = "0x114A954")]
		public static AxisDescriptor GetSecondAxisDescriptor(PlaneId planeId, PlaneQuadrantId planeQuadrant)
		{
			return null;
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0x114B350", Offset = "0x114B350", VA = "0x114B350")]
		public static AxisSign GetFirstAxisSign(PlaneId planeId, PlaneQuadrantId planeQuadrant)
		{
			return default(AxisSign);
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0x114B4C8", Offset = "0x114B4C8", VA = "0x114B4C8")]
		public static AxisSign GetSecondAxisSign(PlaneId planeId, PlaneQuadrantId planeQuadrant)
		{
			return default(AxisSign);
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0x114B634", Offset = "0x114B634", VA = "0x114B634")]
		public static PlaneQuadrantId GetQuadrantFromAxesSigns(PlaneId planeId, AxisSign firstAxisSign, AxisSign secondAxisSign)
		{
			return default(PlaneQuadrantId);
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0x114B33C", Offset = "0x114B33C", VA = "0x114B33C")]
		public static int PlaneIdToFirstAxisIndex(PlaneId planeId)
		{
			return default(int);
		}

		[Token(Token = "0x600255A")]
		[Address(RVA = "0x114B4AC", Offset = "0x114B4AC", VA = "0x114B4AC")]
		public static int PlaneIdToSecondAxisIndex(PlaneId planeId)
		{
			return default(int);
		}

		[Token(Token = "0x600255B")]
		[Address(RVA = "0x114B798", Offset = "0x114B798", VA = "0x114B798")]
		public static PlaneId NormalAxisIndexToPlaneId(int axisIndex)
		{
			return default(PlaneId);
		}
	}
	[Token(Token = "0x2000570")]
	public enum PlaneQuadrantId
	{
		[Token(Token = "0x4001970")]
		First,
		[Token(Token = "0x4001971")]
		Second,
		[Token(Token = "0x4001972")]
		Third,
		[Token(Token = "0x4001973")]
		Fourth
	}
	[Token(Token = "0x2000571")]
	public static class ArcMath
	{
		[Token(Token = "0x6002562")]
		[Address(RVA = "0x114B7FC", Offset = "0x114B7FC", VA = "0x114B7FC")]
		public static float ConvertToSh3DArcAngle(Vector3 arcOrigin, Vector3 arcStartPoint, Vector3 arcPlaneNormal, float degreesFromStart)
		{
			return default(float);
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0x114B998", Offset = "0x114B998", VA = "0x114B998")]
		public static float ConvertToSh2DArcAngle(Vector2 arcOrigin, Vector2 arcStartPoint, float degreesFromStart)
		{
			return default(float);
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x114BB60", Offset = "0x114BB60", VA = "0x114BB60")]
		public static OBB CalcSh3DArcOBB(Vector3 arcOrigin, Vector3 arcStartPoint, Vector3 arcPlaneNormal, float degreesFromStart, [Optional] ArcEpsilon epsilon)
		{
			return default(OBB);
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0x114BE90", Offset = "0x114BE90", VA = "0x114BE90")]
		public static OBB CalcLg3DArcOBB(Vector3 arcOrigin, Vector3 arcStartPoint, Vector3 arcPlaneNormal, float degreesFromStart, [Optional] ArcEpsilon epsilon)
		{
			return default(OBB);
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0x114C3AC", Offset = "0x114C3AC", VA = "0x114C3AC")]
		public static bool RaycastShArc(Ray ray, out float t, Vector3 arcOrigin, Vector3 arcStartPoint, Vector3 arcPlaneNormal, float degreesFromStart, [Optional] ArcEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0x114CAE0", Offset = "0x114CAE0", VA = "0x114CAE0")]
		public static bool RaycastShArcWire(Ray ray, out float t, Vector3 arcOrigin, Vector3 arcStartPoint, Vector3 arcPlaneNormal, float degreesFromStart, [Optional] ArcEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x114D0BC", Offset = "0x114D0BC", VA = "0x114D0BC")]
		public static bool RaycastLgArc(Ray ray, out float t, Vector3 arcOrigin, Vector3 arcStartPoint, Vector3 arcPlaneNormal, float degreesFromStart, [Optional] ArcEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x114D6A4", Offset = "0x114D6A4", VA = "0x114D6A4")]
		public static bool RaycastLgArcWire(Ray ray, out float t, Vector3 arcOrigin, Vector3 arcStartPoint, Vector3 arcPlaneNormal, float degreesFromStart, [Optional] ArcEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x114C698", Offset = "0x114C698", VA = "0x114C698")]
		public static bool ShArcContains3DPoint(Vector3 point, bool checkOnPlane, Vector3 arcOrigin, Vector3 arcStartPoint, Vector3 arcPlaneNormal, float degreesFromStart, [Optional] ArcEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x114CDCC", Offset = "0x114CDCC", VA = "0x114CDCC")]
		public static bool Is3DPointOnShArcWire(Vector3 point, bool checkOnPlane, Vector3 arcOrigin, Vector3 arcStartPoint, Vector3 arcPlaneNormal, float degreesFromStart, [Optional] ArcEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x114DCE8", Offset = "0x114DCE8", VA = "0x114DCE8")]
		public static bool ShArcContains2DPoint(Vector2 point, Vector2 arcOrigin, Vector2 arcStartPoint, float degreesFromStart, [Optional] ArcEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x114D334", Offset = "0x114D334", VA = "0x114D334")]
		public static bool LgArcContains3DPoint(Vector3 point, bool checkOnPlane, Vector3 arcOrigin, Vector3 arcStartPoint, Vector3 arcPlaneNormal, float degreesFromStart, [Optional] ArcEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x114D91C", Offset = "0x114D91C", VA = "0x114D91C")]
		public static bool Is3DPointOnLgArcWire(Vector3 point, bool checkOnPlane, Vector3 arcOrigin, Vector3 arcStartPoint, Vector3 arcPlaneNormal, float degreesFromStart, [Optional] ArcEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0x114DDF0", Offset = "0x114DDF0", VA = "0x114DDF0")]
		public static bool LgArcContains2DPoint(Vector2 point, Vector2 arcOrigin, Vector2 arcStartPoint, float degreesFromStart, [Optional] ArcEpsilon epsilon)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000572")]
	public enum BoxCorner
	{
		[Token(Token = "0x4001975")]
		FrontTopLeft,
		[Token(Token = "0x4001976")]
		FrontTopRight,
		[Token(Token = "0x4001977")]
		FrontBottomRight,
		[Token(Token = "0x4001978")]
		FrontBottomLeft,
		[Token(Token = "0x4001979")]
		BackTopLeft,
		[Token(Token = "0x400197A")]
		BackTopRight,
		[Token(Token = "0x400197B")]
		BackBottomRight,
		[Token(Token = "0x400197C")]
		BackBottomLeft
	}
	[Token(Token = "0x2000573")]
	public enum BoxFace
	{
		[Token(Token = "0x400197E")]
		Front,
		[Token(Token = "0x400197F")]
		Back,
		[Token(Token = "0x4001980")]
		Left,
		[Token(Token = "0x4001981")]
		Right,
		[Token(Token = "0x4001982")]
		Bottom,
		[Token(Token = "0x4001983")]
		Top
	}
	[Token(Token = "0x2000574")]
	public enum BoxFaceAreaType
	{
		[Token(Token = "0x4001985")]
		Invalid,
		[Token(Token = "0x4001986")]
		Quad,
		[Token(Token = "0x4001987")]
		Line
	}
	[Token(Token = "0x2000575")]
	public struct BoxFaceAreaDesc
	{
		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BoxFaceAreaType AreaType;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Area;

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x114DEE0", Offset = "0x114DEE0", VA = "0x114DEE0")]
		public BoxFaceAreaDesc(BoxFaceAreaType areaType, float area)
		{
		}

		[Token(Token = "0x6002571")]
		[Address(RVA = "0x114DEEC", Offset = "0x114DEEC", VA = "0x114DEEC")]
		public static BoxFaceAreaDesc GetInvalid()
		{
			return default(BoxFaceAreaDesc);
		}
	}
	[Token(Token = "0x2000576")]
	public struct BoxFaceDesc
	{
		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BoxFace Face;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Plane Plane;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 Center;
	}
	[Token(Token = "0x2000577")]
	public static class BoxMath
	{
		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<BoxFace> _allBoxFaces;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector3[] A;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Vector3[] B;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float[,] R;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[,] absR;

		[Token(Token = "0x170007AE")]
		public static List<BoxFace> AllBoxFaces
		{
			[Token(Token = "0x6002573")]
			[Address(RVA = "0x114E2F4", Offset = "0x114E2F4", VA = "0x114E2F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002572")]
		[Address(RVA = "0x114DEF4", Offset = "0x114DEF4", VA = "0x114DEF4")]
		static BoxMath()
		{
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0x114E398", Offset = "0x114E398", VA = "0x114E398")]
		public static int GetFaceAxisIndex(BoxFace face)
		{
			return default(int);
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0x114E3C4", Offset = "0x114E3C4", VA = "0x114E3C4")]
		public static BoxFaceDesc GetFaceClosestToPoint(Vector3 point, Vector3 boxCenter, Vector3 boxSize, Quaternion boxRotation)
		{
			return default(BoxFaceDesc);
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0x114EBD4", Offset = "0x114EBD4", VA = "0x114EBD4")]
		public static BoxFaceDesc GetFaceClosestToPoint(Vector3 point, Vector3 boxCenter, Vector3 boxSize, Quaternion boxRotation, Vector3 viewVector)
		{
			return default(BoxFaceDesc);
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0x114EEC8", Offset = "0x114EEC8", VA = "0x114EEC8")]
		public static BoxFace GetMostAlignedFace(Vector3 boxCenter, Vector3 boxSize, Quaternion boxRotation, Vector3 direction)
		{
			return default(BoxFace);
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0x114F204", Offset = "0x114F204", VA = "0x114F204")]
		public static Vector3 CalcBoxFaceSize(Vector3 boxSize, BoxFace boxFace)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002579")]
		[Address(RVA = "0x114F234", Offset = "0x114F234", VA = "0x114F234")]
		public static BoxFaceAreaDesc GetBoxFaceAreaDesc(Vector3 boxSize, BoxFace boxFace)
		{
			return default(BoxFaceAreaDesc);
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x114E6B8", Offset = "0x114E6B8", VA = "0x114E6B8")]
		public static Plane CalcBoxFacePlane(Vector3 boxCenter, Vector3 boxSize, Quaternion boxRotation, BoxFace boxFace)
		{
			return default(Plane);
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0x114F048", Offset = "0x114F048", VA = "0x114F048")]
		public static Vector3 CalcBoxFaceNormal(Vector3 boxCenter, Vector3 boxSize, Quaternion boxRotation, BoxFace boxFace)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x114E9AC", Offset = "0x114E9AC", VA = "0x114E9AC")]
		public static Vector3 CalcBoxFaceCenter(Vector3 boxCenter, Vector3 boxSize, Quaternion boxRotation, BoxFace boxFace)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x1147780", Offset = "0x1147780", VA = "0x1147780")]
		public static List<Vector3> CalcBoxCornerPoints(Vector3 boxCenter, Vector3 boxSize, Quaternion boxRotation)
		{
			return null;
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x1147510", Offset = "0x1147510", VA = "0x1147510")]
		public static void TransformBox(Vector3 boxCenter, Vector3 boxSize, Matrix4x4 transformMatrix, out Vector3 newBoxCenter, out Vector3 newBoxSize)
		{
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0x1149180", Offset = "0x1149180", VA = "0x1149180")]
		public static bool BoxIntersectsBox(Vector3 center0, Vector3 size0, Quaternion rotation0, Vector3 center1, Vector3 size1, Quaternion rotation1)
		{
			return default(bool);
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0x114A118", Offset = "0x114A118", VA = "0x114A118")]
		public static Vector3 CalcBoxPtClosestToPt(Vector3 point, Vector3 boxCenter, Vector3 boxSize, Quaternion boxRotation)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002581")]
		[Address(RVA = "0x114C9C4", Offset = "0x114C9C4", VA = "0x114C9C4")]
		public static bool Raycast(Ray ray, Vector3 boxCenter, Vector3 boxSize, Quaternion boxRotation, [Optional] BoxEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0x114F2B8", Offset = "0x114F2B8", VA = "0x114F2B8")]
		public static bool Raycast(Ray ray, out float t, Vector3 boxCenter, Vector3 boxSize, Quaternion boxRotation, [Optional] BoxEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0x1147648", Offset = "0x1147648", VA = "0x1147648")]
		public static bool ContainsPoint(Vector3 point, Vector3 boxCenter, Vector3 boxSize, Quaternion boxRotation, [Optional] BoxEpsilon epsilon)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000578")]
	public enum CircleExtent
	{
		[Token(Token = "0x4001993")]
		Up,
		[Token(Token = "0x4001994")]
		Right,
		[Token(Token = "0x4001995")]
		Bottom,
		[Token(Token = "0x4001996")]
		Left
	}
	[Token(Token = "0x2000579")]
	public static class CircleMath
	{
		[Token(Token = "0x6002584")]
		[Address(RVA = "0x114F7D4", Offset = "0x114F7D4", VA = "0x114F7D4")]
		public static List<Vector3> Calc3DExtentPoints(Vector3 circleCenter, float circleRadius, Quaternion circleRotation)
		{
			return null;
		}

		[Token(Token = "0x6002585")]
		[Address(RVA = "0x114FB20", Offset = "0x114FB20", VA = "0x114FB20")]
		public static List<Vector2> Calc2DExtentPoints(Vector2 circleCenter, float circleRadius, float degreeCircleRotation)
		{
			return null;
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0x114FE5C", Offset = "0x114FE5C", VA = "0x114FE5C")]
		public static bool Raycast(Ray ray, out float t, Vector3 circleCenter, float circleRadius, Vector3 circleNormal, [Optional] CircleEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002587")]
		[Address(RVA = "0x1150170", Offset = "0x1150170", VA = "0x1150170")]
		public static bool RaycastWire(Ray ray, out float t, Vector3 circleCenter, float circleRadius, Vector3 circleNormal, [Optional] CircleEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002588")]
		[Address(RVA = "0x115037C", Offset = "0x115037C", VA = "0x115037C")]
		public static bool Contains3DPoint(Vector3 point, bool checkOnPlane, Vector3 circleCenter, float circleRadius, Vector3 circleNormal, [Optional] CircleEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x11504B0", Offset = "0x11504B0", VA = "0x11504B0")]
		public static bool Contains2DPoint(Vector2 point, Vector2 circleCenter, float circleRadius, [Optional] CircleEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x600258A")]
		[Address(RVA = "0x1150548", Offset = "0x1150548", VA = "0x1150548")]
		public static bool Is2DPointOnBorder(Vector2 point, Vector2 circleCenter, float circleRadius, [Optional] CircleEpsilon epsilon)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200057A")]
	public enum ConeBaseExtent
	{
		[Token(Token = "0x4001998")]
		Right,
		[Token(Token = "0x4001999")]
		Back,
		[Token(Token = "0x400199A")]
		Left,
		[Token(Token = "0x400199B")]
		Forward
	}
	[Token(Token = "0x200057B")]
	public static class ConeMath
	{
		[Token(Token = "0x600258B")]
		[Address(RVA = "0x11505F0", Offset = "0x11505F0", VA = "0x11505F0")]
		public static List<Vector3> CalcConeBaseExtentPoints(Vector3 coneBaseCenter, float coneBaseRadius, Quaternion coneRotation)
		{
			return null;
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0x1150938", Offset = "0x1150938", VA = "0x1150938")]
		public static bool Raycast(Ray ray, out float t, Vector3 coneBaseCenter, float coneBaseRadius, float coneHeight, Quaternion coneRotation, [Optional] ConeEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x1150F50", Offset = "0x1150F50", VA = "0x1150F50")]
		public static bool ContainsPoint(Vector3 point, Vector3 coneBaseCenter, float coneBaseRadius, float coneHeight, Quaternion coneRotation, [Optional] ConeEpsilon epsilon)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200057C")]
	public enum CylinderExtent
	{
		[Token(Token = "0x400199D")]
		Right,
		[Token(Token = "0x400199E")]
		Back,
		[Token(Token = "0x400199F")]
		Left,
		[Token(Token = "0x40019A0")]
		Forward
	}
	[Token(Token = "0x200057D")]
	public static class CylinderMath
	{
		[Token(Token = "0x600258E")]
		[Address(RVA = "0x11511B0", Offset = "0x11511B0", VA = "0x11511B0")]
		public static List<Vector3> CalcExtentPoints(Vector3 center, float cylinderRadius, Quaternion cylinderRotation)
		{
			return null;
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x1150054", Offset = "0x1150054", VA = "0x1150054")]
		public static bool Raycast(Ray ray, out float t, Vector3 cylinderAxisPt0, Vector3 cylinderAxisPt1, float cylinderRadius, [Optional] CylinderEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0x11514F8", Offset = "0x11514F8", VA = "0x11514F8")]
		public static bool Raycast(Ray ray, out float t, Vector3 cylinderAxisPt0, Vector3 cylinderAxisPt1, float cylinderRadius, float cylinderHeight, [Optional] CylinderEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0x11519F8", Offset = "0x11519F8", VA = "0x11519F8")]
		public static bool RaycastNoCaps(Ray ray, out float t, Vector3 cylinderAxisPt0, Vector3 cylinderAxisPt1, float cylinderRadius, [Optional] CylinderEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0x1151B14", Offset = "0x1151B14", VA = "0x1151B14")]
		public static bool RaycastNoCaps(Ray ray, out float t, Vector3 cylinderAxisPt0, Vector3 cylinderAxisPt1, float cylinderRadius, float cylinderHeight, [Optional] CylinderEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0x1151E2C", Offset = "0x1151E2C", VA = "0x1151E2C")]
		public static bool ContainsPoint(Vector3 point, Vector3 cylinderAxisPt0, Vector3 cylinderAxisPt1, float cylinderRadius, [Optional] CylinderEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x1151F40", Offset = "0x1151F40", VA = "0x1151F40")]
		public static bool ContainsPoint(Vector3 point, Vector3 cylinderAxisPt0, Vector3 cylinderAxisPt1, float cylinderRadius, float cylinderHeight, [Optional] CylinderEpsilon epsilon)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200057E")]
	public static class PlaneMath
	{
		[Token(Token = "0x6002595")]
		[Address(RVA = "0x1152148", Offset = "0x1152148", VA = "0x1152148")]
		public static bool Raycast2D(Vector2 rayOrigin, Vector2 rayDir, Vector2 planeNormal, Vector2 ptOnPlane, out float t)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200057F")]
	public static class PolygonMath
	{
		[Token(Token = "0x6002596")]
		[Address(RVA = "0x11521A0", Offset = "0x11521A0", VA = "0x11521A0")]
		public static bool Raycast(Ray ray, out float t, List<Vector3> cwPolyPoints, bool isClosed, Vector3 polyNormal, [Optional] PolygonEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0x1152328", Offset = "0x1152328", VA = "0x1152328")]
		public static bool Contains3DPoint(Vector3 point, bool checkOnPlane, List<Vector3> cwPolyPoints, bool isClosed, Vector3 polyNormal, [Optional] PolygonEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0x1152738", Offset = "0x1152738", VA = "0x1152738")]
		public static bool Contains2DPoint(Vector2 point, List<Vector2> polyPoints, bool isClosed, [Optional] PolygonEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002599")]
		[Address(RVA = "0x11528E4", Offset = "0x11528E4", VA = "0x11528E4")]
		public static bool Is3DPointOnBorder(Vector3 point, bool checkOnPlane, List<Vector3> cwPolyPoints, bool isClosed, Vector3 polyNormal, [Optional] PolygonEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0x1152B34", Offset = "0x1152B34", VA = "0x1152B34")]
		public static bool Is2DPointOnBorder(Vector2 point, List<Vector2> polyPoints, bool isClosed, [Optional] PolygonEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x600259B")]
		[Address(RVA = "0x1152CC8", Offset = "0x1152CC8", VA = "0x1152CC8")]
		public static bool Is2DPointOnThickBorder(Vector2 point, List<Vector2> polyPoints, List<Vector2> thickBorderPoints, bool isClosed, [Optional] PolygonEpsilon epsilon)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000580")]
	public static class ExtrudeEpsThreshold
	{
		[Token(Token = "0x170007AF")]
		public static float Get
		{
			[Token(Token = "0x600259C")]
			[Address(RVA = "0x1150048", Offset = "0x1150048", VA = "0x1150048")]
			get
			{
				return default(float);
			}
		}
	}
	[Token(Token = "0x2000581")]
	public struct SphereEpsilon
	{
		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _radiusEps;

		[Token(Token = "0x170007B0")]
		public float RadiusEps
		{
			[Token(Token = "0x600259D")]
			[Address(RVA = "0x1153048", Offset = "0x1153048", VA = "0x1153048")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600259E")]
			[Address(RVA = "0x1153050", Offset = "0x1153050", VA = "0x1153050")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000582")]
	public struct CylinderEpsilon
	{
		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _hrzEps;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private float _vertEps;

		[Token(Token = "0x170007B1")]
		public float RadiusEps
		{
			[Token(Token = "0x600259F")]
			[Address(RVA = "0x115305C", Offset = "0x115305C", VA = "0x115305C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025A0")]
			[Address(RVA = "0x1153064", Offset = "0x1153064", VA = "0x1153064")]
			set
			{
			}
		}

		[Token(Token = "0x170007B2")]
		public float VertEps
		{
			[Token(Token = "0x60025A1")]
			[Address(RVA = "0x1153070", Offset = "0x1153070", VA = "0x1153070")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025A2")]
			[Address(RVA = "0x1153078", Offset = "0x1153078", VA = "0x1153078")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000583")]
	public struct BoxEpsilon
	{
		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 _sizeEps;

		[Token(Token = "0x170007B3")]
		public Vector3 SizeEps
		{
			[Token(Token = "0x60025A3")]
			[Address(RVA = "0x1153084", Offset = "0x1153084", VA = "0x1153084")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60025A4")]
			[Address(RVA = "0x1153090", Offset = "0x1153090", VA = "0x1153090")]
			set
			{
			}
		}

		[Token(Token = "0x170007B4")]
		public float WidthEps
		{
			[Token(Token = "0x60025A5")]
			[Address(RVA = "0x11530B0", Offset = "0x11530B0", VA = "0x11530B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025A6")]
			[Address(RVA = "0x11530B8", Offset = "0x11530B8", VA = "0x11530B8")]
			set
			{
			}
		}

		[Token(Token = "0x170007B5")]
		public float HeightEps
		{
			[Token(Token = "0x60025A7")]
			[Address(RVA = "0x11530C4", Offset = "0x11530C4", VA = "0x11530C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025A8")]
			[Address(RVA = "0x11530CC", Offset = "0x11530CC", VA = "0x11530CC")]
			set
			{
			}
		}

		[Token(Token = "0x170007B6")]
		public float DepthEps
		{
			[Token(Token = "0x60025A9")]
			[Address(RVA = "0x11530D8", Offset = "0x11530D8", VA = "0x11530D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025AA")]
			[Address(RVA = "0x11530E0", Offset = "0x11530E0", VA = "0x11530E0")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000584")]
	public struct ConeEpsilon
	{
		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _hrzEps;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private float _vertEps;

		[Token(Token = "0x170007B7")]
		public float HrzEps
		{
			[Token(Token = "0x60025AB")]
			[Address(RVA = "0x11530EC", Offset = "0x11530EC", VA = "0x11530EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025AC")]
			[Address(RVA = "0x11530F4", Offset = "0x11530F4", VA = "0x11530F4")]
			set
			{
			}
		}

		[Token(Token = "0x170007B8")]
		public float VertEps
		{
			[Token(Token = "0x60025AD")]
			[Address(RVA = "0x1153100", Offset = "0x1153100", VA = "0x1153100")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025AE")]
			[Address(RVA = "0x1153108", Offset = "0x1153108", VA = "0x1153108")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000585")]
	public struct SegmentEpsilon
	{
		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _raycastEps;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private float _ptOnSegmentEps;

		[Token(Token = "0x170007B9")]
		public float RaycastEps
		{
			[Token(Token = "0x60025AF")]
			[Address(RVA = "0x1153114", Offset = "0x1153114", VA = "0x1153114")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025B0")]
			[Address(RVA = "0x115311C", Offset = "0x115311C", VA = "0x115311C")]
			set
			{
			}
		}

		[Token(Token = "0x170007BA")]
		public float PtOnSegmentEps
		{
			[Token(Token = "0x60025B1")]
			[Address(RVA = "0x1153128", Offset = "0x1153128", VA = "0x1153128")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025B2")]
			[Address(RVA = "0x1153130", Offset = "0x1153130", VA = "0x1153130")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000586")]
	public struct PrismEpsilon
	{
		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _ptContainEps;

		[Token(Token = "0x170007BB")]
		public float PtContainEps
		{
			[Token(Token = "0x60025B3")]
			[Address(RVA = "0x115313C", Offset = "0x115313C", VA = "0x115313C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025B4")]
			[Address(RVA = "0x1153144", Offset = "0x1153144", VA = "0x1153144")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000587")]
	public struct PyramidEpsilon
	{
		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _ptContainEps;

		[Token(Token = "0x170007BC")]
		public float PtContainEps
		{
			[Token(Token = "0x60025B5")]
			[Address(RVA = "0x1153150", Offset = "0x1153150", VA = "0x1153150")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025B6")]
			[Address(RVA = "0x1153158", Offset = "0x1153158", VA = "0x1153158")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000588")]
	public struct ArcEpsilon
	{
		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _areaEps;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private float _extrudeEps;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private float _wireEps;

		[Token(Token = "0x170007BD")]
		public float AreaEps
		{
			[Token(Token = "0x60025B7")]
			[Address(RVA = "0x1153164", Offset = "0x1153164", VA = "0x1153164")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025B8")]
			[Address(RVA = "0x115316C", Offset = "0x115316C", VA = "0x115316C")]
			set
			{
			}
		}

		[Token(Token = "0x170007BE")]
		public float ExtrudeEps
		{
			[Token(Token = "0x60025B9")]
			[Address(RVA = "0x1153178", Offset = "0x1153178", VA = "0x1153178")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025BA")]
			[Address(RVA = "0x1153180", Offset = "0x1153180", VA = "0x1153180")]
			set
			{
			}
		}

		[Token(Token = "0x170007BF")]
		public float WireEps
		{
			[Token(Token = "0x60025BB")]
			[Address(RVA = "0x115318C", Offset = "0x115318C", VA = "0x115318C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025BC")]
			[Address(RVA = "0x1153194", Offset = "0x1153194", VA = "0x1153194")]
			set
			{
			}
		}
	}
	[Token(Token = "0x2000589")]
	public struct CircleEpsilon
	{
		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _radiusEps;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private float _extrudeEps;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private float _wireEps;

		[Token(Token = "0x170007C0")]
		public float RadiusEps
		{
			[Token(Token = "0x60025BD")]
			[Address(RVA = "0x11531A0", Offset = "0x11531A0", VA = "0x11531A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025BE")]
			[Address(RVA = "0x11531A8", Offset = "0x11531A8", VA = "0x11531A8")]
			set
			{
			}
		}

		[Token(Token = "0x170007C1")]
		public float ExtrudeEps
		{
			[Token(Token = "0x60025BF")]
			[Address(RVA = "0x11531B4", Offset = "0x11531B4", VA = "0x11531B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025C0")]
			[Address(RVA = "0x11531BC", Offset = "0x11531BC", VA = "0x11531BC")]
			set
			{
			}
		}

		[Token(Token = "0x170007C2")]
		public float WireEps
		{
			[Token(Token = "0x60025C1")]
			[Address(RVA = "0x11531C8", Offset = "0x11531C8", VA = "0x11531C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025C2")]
			[Address(RVA = "0x11531D0", Offset = "0x11531D0", VA = "0x11531D0")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200058A")]
	public struct PolygonEpsilon
	{
		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _areaEps;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private float _extrudeEps;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private float _wireEps;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float _thickWireEps;

		[Token(Token = "0x170007C3")]
		public float AreaEps
		{
			[Token(Token = "0x60025C3")]
			[Address(RVA = "0x11531DC", Offset = "0x11531DC", VA = "0x11531DC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025C4")]
			[Address(RVA = "0x115303C", Offset = "0x115303C", VA = "0x115303C")]
			set
			{
			}
		}

		[Token(Token = "0x170007C4")]
		public float ExtrudeEps
		{
			[Token(Token = "0x60025C5")]
			[Address(RVA = "0x11531E4", Offset = "0x11531E4", VA = "0x11531E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025C6")]
			[Address(RVA = "0x11531EC", Offset = "0x11531EC", VA = "0x11531EC")]
			set
			{
			}
		}

		[Token(Token = "0x170007C5")]
		public float WireEps
		{
			[Token(Token = "0x60025C7")]
			[Address(RVA = "0x11531F8", Offset = "0x11531F8", VA = "0x11531F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025C8")]
			[Address(RVA = "0x1153200", Offset = "0x1153200", VA = "0x1153200")]
			set
			{
			}
		}

		[Token(Token = "0x170007C6")]
		public float ThickWireEps
		{
			[Token(Token = "0x60025C9")]
			[Address(RVA = "0x115320C", Offset = "0x115320C", VA = "0x115320C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025CA")]
			[Address(RVA = "0x1153214", Offset = "0x1153214", VA = "0x1153214")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200058B")]
	public struct QuadEpsilon
	{
		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector2 _sizeEps;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private float _extrudeEps;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float _wireEps;

		[Token(Token = "0x170007C7")]
		public Vector2 SizeEps
		{
			[Token(Token = "0x60025CB")]
			[Address(RVA = "0x1153220", Offset = "0x1153220", VA = "0x1153220")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60025CC")]
			[Address(RVA = "0x1153228", Offset = "0x1153228", VA = "0x1153228")]
			set
			{
			}
		}

		[Token(Token = "0x170007C8")]
		public float WidthEps
		{
			[Token(Token = "0x60025CD")]
			[Address(RVA = "0x1153244", Offset = "0x1153244", VA = "0x1153244")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025CE")]
			[Address(RVA = "0x115324C", Offset = "0x115324C", VA = "0x115324C")]
			set
			{
			}
		}

		[Token(Token = "0x170007C9")]
		public float HeightEps
		{
			[Token(Token = "0x60025CF")]
			[Address(RVA = "0x1153258", Offset = "0x1153258", VA = "0x1153258")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025D0")]
			[Address(RVA = "0x1153260", Offset = "0x1153260", VA = "0x1153260")]
			set
			{
			}
		}

		[Token(Token = "0x170007CA")]
		public float ExtrudeEps
		{
			[Token(Token = "0x60025D1")]
			[Address(RVA = "0x115326C", Offset = "0x115326C", VA = "0x115326C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025D2")]
			[Address(RVA = "0x1153274", Offset = "0x1153274", VA = "0x1153274")]
			set
			{
			}
		}

		[Token(Token = "0x170007CB")]
		public float WireEps
		{
			[Token(Token = "0x60025D3")]
			[Address(RVA = "0x1153280", Offset = "0x1153280", VA = "0x1153280")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025D4")]
			[Address(RVA = "0x1153288", Offset = "0x1153288", VA = "0x1153288")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200058C")]
	public struct TriangleEpsilon
	{
		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _areaEps;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private float _extrudeEps;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private float _wireEps;

		[Token(Token = "0x170007CC")]
		public float AreaEps
		{
			[Token(Token = "0x60025D5")]
			[Address(RVA = "0x1153294", Offset = "0x1153294", VA = "0x1153294")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025D6")]
			[Address(RVA = "0x115329C", Offset = "0x115329C", VA = "0x115329C")]
			set
			{
			}
		}

		[Token(Token = "0x170007CD")]
		public float ExtrudeEps
		{
			[Token(Token = "0x60025D7")]
			[Address(RVA = "0x11532A8", Offset = "0x11532A8", VA = "0x11532A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025D8")]
			[Address(RVA = "0x11532B0", Offset = "0x11532B0", VA = "0x11532B0")]
			set
			{
			}
		}

		[Token(Token = "0x170007CE")]
		public float WireEps
		{
			[Token(Token = "0x60025D9")]
			[Address(RVA = "0x11532BC", Offset = "0x11532BC", VA = "0x11532BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025DA")]
			[Address(RVA = "0x11532C4", Offset = "0x11532C4", VA = "0x11532C4")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200058D")]
	public struct TorusEpsilon
	{
		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private float _tubeRadiusEps;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private float _cylHrzRadius;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private float _cylVertRadius;

		[Token(Token = "0x170007CF")]
		public float TubeRadiusEps
		{
			[Token(Token = "0x60025DB")]
			[Address(RVA = "0x11532D0", Offset = "0x11532D0", VA = "0x11532D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025DC")]
			[Address(RVA = "0x11532D8", Offset = "0x11532D8", VA = "0x11532D8")]
			set
			{
			}
		}

		[Token(Token = "0x170007D0")]
		public float CylHrzRadius
		{
			[Token(Token = "0x60025DD")]
			[Address(RVA = "0x11532E4", Offset = "0x11532E4", VA = "0x11532E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025DE")]
			[Address(RVA = "0x11532EC", Offset = "0x11532EC", VA = "0x11532EC")]
			set
			{
			}
		}

		[Token(Token = "0x170007D1")]
		public float CylVertRadius
		{
			[Token(Token = "0x60025DF")]
			[Address(RVA = "0x11532F8", Offset = "0x11532F8", VA = "0x11532F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60025E0")]
			[Address(RVA = "0x1153300", Offset = "0x1153300", VA = "0x1153300")]
			set
			{
			}
		}
	}
	[Token(Token = "0x200058E")]
	public static class PrimitiveFactory
	{
		[Token(Token = "0x200058F")]
		public enum PolyBorderDirection
		{
			[Token(Token = "0x40019BF")]
			Inward,
			[Token(Token = "0x40019C0")]
			Outward
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x115330C", Offset = "0x115330C", VA = "0x115330C")]
		public static List<Vector2> Generate2DPolyBorderQuadsCW(List<Vector2> cwPolyPoints, List<Vector2> cwBorderPts, PolyBorderDirection borderDirection, bool isClosed)
		{
			return null;
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x11537C8", Offset = "0x11537C8", VA = "0x11537C8")]
		public static float PolyBorderDirToSign(PolyBorderDirection borderDirection)
		{
			return default(float);
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x11537DC", Offset = "0x11537DC", VA = "0x11537DC")]
		public static List<Vector2> Generate2DPolyBorderPointsCW(List<Vector2> cwPolyPoints, PolyBorderDirection borderDirection, float borderThickness, bool isClosed)
		{
			return null;
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x11540D0", Offset = "0x11540D0", VA = "0x11540D0")]
		public static List<Vector2> Generate2DCircleBorderPointsCW(Vector2 circleCenter, float circleRadius, int numPoints)
		{
			return null;
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0x1154248", Offset = "0x1154248", VA = "0x1154248")]
		public static List<Vector3> Generate3DCircleBorderPoints(Vector3 circleCenter, float circleRadius, Vector3 circleRight, Vector3 circleUp, int numPoints)
		{
			return null;
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x1154424", Offset = "0x1154424", VA = "0x1154424")]
		public static List<Vector3> GenerateSphereBorderPoints(Camera camera, Vector3 sphereCenter, float sphereRadius, int numPoints)
		{
			return null;
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0x11549D0", Offset = "0x11549D0", VA = "0x11549D0")]
		public static List<Vector2> Generate2DArcBorderPoints(Vector2 arcOrigin, Vector2 arcStartPoint, float degreesFromStart, bool forceShortestArc, int numPoints)
		{
			return null;
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x1154D98", Offset = "0x1154D98", VA = "0x1154D98")]
		public static List<Vector2> ProjectArcPointsOnPoly2DBorder(Vector2 arcOrigin, List<Vector2> arcPoints, List<Vector2> clockwisePolyPoints)
		{
			return null;
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x11552CC", Offset = "0x11552CC", VA = "0x11552CC")]
		public static List<Vector3> Generate3DArcBorderPoints(Vector3 arcOrigin, Vector3 arcStartPoint, Plane arcPlane, float degreesFromStart, bool forceShortestArc, int numPoints)
		{
			return null;
		}
	}
	[Token(Token = "0x2000590")]
	public enum TriangularPrismCorner
	{
		[Token(Token = "0x40019C2")]
		BaseLeft,
		[Token(Token = "0x40019C3")]
		BaseRight,
		[Token(Token = "0x40019C4")]
		BaseForward,
		[Token(Token = "0x40019C5")]
		TopLeft,
		[Token(Token = "0x40019C6")]
		TopForward,
		[Token(Token = "0x40019C7")]
		TopRight
	}
	[Token(Token = "0x2000591")]
	public static class PrismMath
	{
		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x115575C", Offset = "0x115575C", VA = "0x115575C")]
		public static List<Vector3> CalcTriangPrismCornerPoints(Vector3 baseCenter, float baseWidth, float baseDepth, float topWidth, float topDepth, float height, Quaternion prismRotation)
		{
			return null;
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x1155E40", Offset = "0x1155E40", VA = "0x1155E40")]
		public static bool RaycastTriangular(Ray ray, out float t, Vector3 baseCenter, float baseWidth, float baseDepth, float topWidth, float topDepth, float height, Quaternion prismRotation)
		{
			return default(bool);
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x11570C0", Offset = "0x11570C0", VA = "0x11570C0")]
		public static bool ContainsPoint(Vector3 point, Vector3 baseCenter, float baseWidth, float baseDepth, float topWidth, float topDepth, float height, Quaternion prismRotation, [Optional] PrismEpsilon epsilon)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000593")]
	public enum PyramidBaseCorner
	{
		[Token(Token = "0x40019CB")]
		RightForward,
		[Token(Token = "0x40019CC")]
		RightBack,
		[Token(Token = "0x40019CD")]
		LeftBack,
		[Token(Token = "0x40019CE")]
		LeftForward
	}
	[Token(Token = "0x2000594")]
	public static class PyramidMath
	{
		[Token(Token = "0x60025F0")]
		[Address(RVA = "0x1157600", Offset = "0x1157600", VA = "0x1157600")]
		public static List<Vector3> CalcBaseCornerPoints(Vector3 baseCenter, float baseWidth, float baseDepth, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0x115796C", Offset = "0x115796C", VA = "0x115796C")]
		public static bool Raycast(Ray ray, out float t, Vector3 baseCenter, float baseWidth, float baseDepth, float height, Quaternion rotation)
		{
			return default(bool);
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0x1158E4C", Offset = "0x1158E4C", VA = "0x1158E4C")]
		public static bool ContainsPoint(Vector3 point, Vector3 baseCenter, float baseWidth, float baseDepth, float height, Quaternion rotation, [Optional] PyramidEpsilon epsilon)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000596")]
	public enum QuadCorner
	{
		[Token(Token = "0x40019D2")]
		TopLeft,
		[Token(Token = "0x40019D3")]
		TopRight,
		[Token(Token = "0x40019D4")]
		BottomRight,
		[Token(Token = "0x40019D5")]
		BottomLeft
	}
	[Token(Token = "0x2000597")]
	public static class QuadMath
	{
		[Token(Token = "0x60025F6")]
		[Address(RVA = "0x1159550", Offset = "0x1159550", VA = "0x1159550")]
		public static void Calc2DQuadRightUp(float degreeRotation, out Vector2 right, out Vector2 up)
		{
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0x115967C", Offset = "0x115967C", VA = "0x115967C")]
		public static List<Vector2> Calc2DQuadCornerPoints(Vector2 quadCenter, Vector2 quadSize, float degreeRotation)
		{
			return null;
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0x1159958", Offset = "0x1159958", VA = "0x1159958")]
		public static List<Vector2> Calc2DQuadCornerPoints(Vector2 quadCenter, Vector2 quadSize, Vector2 right, Vector2 up)
		{
			return null;
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x1159BB8", Offset = "0x1159BB8", VA = "0x1159BB8")]
		public static List<Vector3> Calc3DQuadCornerPoints(Vector3 quadCenter, Vector2 quadSize, Quaternion quadRotation)
		{
			return null;
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0x1159F28", Offset = "0x1159F28", VA = "0x1159F28")]
		public static Vector3 Calc3DQuadCorner(Vector3 quadCenter, Vector2 quadSize, Quaternion quadRotation, QuadCorner quadCorner)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x115A118", Offset = "0x115A118", VA = "0x115A118")]
		public static OBB Calc3DQuadOBB(Vector3 quadCenter, Vector2 quadSize, Quaternion quadRotation, [Optional] QuadEpsilon epsilon)
		{
			return default(OBB);
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x115A158", Offset = "0x115A158", VA = "0x115A158")]
		public static bool Raycast(Ray ray, out float t, Vector3 quadCenter, float quadWidth, float quadHeight, Vector3 quadRight, Vector3 quadUp, [Optional] QuadEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x115A558", Offset = "0x115A558", VA = "0x115A558")]
		public static bool RaycastWire(Ray ray, out float t, Vector3 quadCenter, float quadWidth, float quadHeight, Vector3 quadRight, Vector3 quadUp, [Optional] QuadEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0x11586F8", Offset = "0x11586F8", VA = "0x11586F8")]
		public static bool Contains3DPoint(Vector3 point, bool checkOnPlane, Vector3 quadCenter, float quadWidth, float quadHeight, Vector3 quadRight, Vector3 quadUp, [Optional] QuadEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x115AA74", Offset = "0x115AA74", VA = "0x115AA74")]
		public static bool Contains2DPoint(Vector2 point, Vector2 quadCenter, float quadWidth, float quadHeight, float degreeRotation, [Optional] QuadEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0x115AB08", Offset = "0x115AB08", VA = "0x115AB08")]
		public static bool Contains2DPoint(Vector2 point, Vector2 quadCenter, float quadWidth, float quadHeight, Vector2 quadRight, Vector2 quadUp, [Optional] QuadEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0x115ABAC", Offset = "0x115ABAC", VA = "0x115ABAC")]
		public static bool Is2DPointOnBorder(Vector2 point, Vector2 quadCenter, float quadWidth, float quadHeight, float degreeRotation, [Optional] QuadEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0x115AC40", Offset = "0x115AC40", VA = "0x115AC40")]
		public static bool Is2DPointOnBorder(Vector2 point, Vector2 quadCenter, float quadWidth, float quadHeight, Vector2 quadRight, Vector2 quadUp, [Optional] QuadEpsilon epsilon)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000598")]
	public static class SegmentMath
	{
		[Token(Token = "0x6002603")]
		[Address(RVA = "0x115ADAC", Offset = "0x115ADAC", VA = "0x115ADAC")]
		public static bool Raycast(Ray ray, out float t, Vector3 startPoint, Vector3 endPoint, [Optional] SegmentEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0x115AFBC", Offset = "0x115AFBC", VA = "0x115AFBC")]
		public static bool Is3DPointOnSegment(Vector3 point, Vector3 startPoint, Vector3 endPoint, [Optional] SegmentEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0x115AD84", Offset = "0x115AD84", VA = "0x115AD84")]
		public static bool Is2DPointOnSegment(Vector2 point, Vector2 startPoint, Vector2 endPoint, [Optional] SegmentEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0x115AFFC", Offset = "0x115AFFC", VA = "0x115AFFC")]
		public static Vector3 ProjectPtOnSegment(Vector3 point, Vector3 startPoint, Vector3 endPoint)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000599")]
	public enum SphereRightUpExtent
	{
		[Token(Token = "0x40019D7")]
		Left,
		[Token(Token = "0x40019D8")]
		Up,
		[Token(Token = "0x40019D9")]
		Right,
		[Token(Token = "0x40019DA")]
		Down
	}
	[Token(Token = "0x200059A")]
	public static class SphereMath
	{
		[Token(Token = "0x6002607")]
		[Address(RVA = "0x115B170", Offset = "0x115B170", VA = "0x115B170")]
		public static List<Vector3> CalcRightUpExtents(Vector3 sphereCenter, float sphereRadius, Vector3 right, Vector3 up)
		{
			return null;
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0x115B404", Offset = "0x115B404", VA = "0x115B404")]
		public static bool Raycast(Ray ray, Vector3 sphereCenter, float sphereRadius, [Optional] SphereEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0x115AEA0", Offset = "0x115AEA0", VA = "0x115AEA0")]
		public static bool Raycast(Ray ray, out float t, Vector3 sphereCenter, float sphereRadius, [Optional] SphereEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0x115B43C", Offset = "0x115B43C", VA = "0x115B43C")]
		public static bool Raycast(Ray ray, out float t0, out float t1, Vector3 sphereCenter, float sphereRadius, [Optional] SphereEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0x115B56C", Offset = "0x115B56C", VA = "0x115B56C")]
		public static bool ContainsPoint(Vector3 point, Vector3 sphereCenter, float sphereRadius, [Optional] SphereEpsilon epsilon)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200059B")]
	public enum TorusExtent
	{
		[Token(Token = "0x40019DC")]
		Left,
		[Token(Token = "0x40019DD")]
		Forward,
		[Token(Token = "0x40019DE")]
		Right,
		[Token(Token = "0x40019DF")]
		Back
	}
	[Token(Token = "0x200059C")]
	public static class TorusMath
	{
		[Token(Token = "0x600260C")]
		[Address(RVA = "0x115B5A0", Offset = "0x115B5A0", VA = "0x115B5A0")]
		public static float CalcSphereRadius(float torusCoreRadius, float torusTubeRadius)
		{
			return default(float);
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0x115B5A8", Offset = "0x115B5A8", VA = "0x115B5A8")]
		public static AABB CalcCylModelAABB(float torusCoreRadius, float torusHrzRadius, float torusVertRadius)
		{
			return default(AABB);
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0x115B62C", Offset = "0x115B62C", VA = "0x115B62C")]
		public static AABB CalcCylAABB(Vector3 torusCenter, float torusCoreRadius, float torusHrzRadius, float torusVertRadius, Quaternion torusRotation)
		{
			return default(AABB);
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0x115B764", Offset = "0x115B764", VA = "0x115B764")]
		public static List<Vector3> Calc3DHrzExtentPoints(Vector3 torusCenter, float torusCoreRadius, float torusTubeRadius, Quaternion torusRotation)
		{
			return null;
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0x115BAAC", Offset = "0x115BAAC", VA = "0x115BAAC")]
		public static bool Raycast(Ray ray, out float t, Vector3 torusCenter, float torusCoreRadius, float torusTubeRadius, Quaternion torusRotation, [Optional] TorusEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0x115BDC8", Offset = "0x115BDC8", VA = "0x115BDC8")]
		public static bool RaycastCylindrical(Ray ray, out float t, Vector3 torusCenter, float torusCoreRadius, float torusHrzRadius, float torusVertRadius, Quaternion torusRotation, [Optional] TorusEpsilon epsilon)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200059D")]
	public enum RightAngTriPoint
	{
		[Token(Token = "0x40019E1")]
		RightAngleCorner,
		[Token(Token = "0x40019E2")]
		Up,
		[Token(Token = "0x40019E3")]
		Right
	}
	[Token(Token = "0x200059E")]
	public enum EqTrianglePoint
	{
		[Token(Token = "0x40019E5")]
		Left,
		[Token(Token = "0x40019E6")]
		Top,
		[Token(Token = "0x40019E7")]
		Right
	}
	[Token(Token = "0x200059F")]
	public enum EqTriangleEdge
	{
		[Token(Token = "0x40019E9")]
		LeftTop,
		[Token(Token = "0x40019EA")]
		TopRight,
		[Token(Token = "0x40019EB")]
		RightLeft
	}
	[Token(Token = "0x20005A0")]
	public static class TriangleMath
	{
		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float _eqTriangleAltFactor;

		[Token(Token = "0x170007D2")]
		public static float EqTriangleAltFactor
		{
			[Token(Token = "0x6002612")]
			[Address(RVA = "0x115C0FC", Offset = "0x115C0FC", VA = "0x115C0FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0x115C154", Offset = "0x115C154", VA = "0x115C154")]
		public static float GetEqTriangleAltitude(float sideLength)
		{
			return default(float);
		}

		[Token(Token = "0x6002614")]
		[Address(RVA = "0x115C1BC", Offset = "0x115C1BC", VA = "0x115C1BC")]
		public static float GetEqTriangleCentroidAltitude(float sideLength)
		{
			return default(float);
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0x115C22C", Offset = "0x115C22C", VA = "0x115C22C")]
		public static List<Vector3> CalcEqTriangle3DPoints(Vector3 centroid, float sideLength, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0x115C60C", Offset = "0x115C60C", VA = "0x115C60C")]
		public static List<Vector2> CalcEqTriangle2DPoints(Vector2 centroid, float sideLength, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0x115C914", Offset = "0x115C914", VA = "0x115C914")]
		public static float CalcRATriangleHypotenuse(float side0, float side1)
		{
			return default(float);
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0x115C928", Offset = "0x115C928", VA = "0x115C928")]
		public static float CalcRATriangleHypotenuse(Vector2 sides)
		{
			return default(float);
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0x115C93C", Offset = "0x115C93C", VA = "0x115C93C")]
		public static float CalcRATriangleAltitude(Vector2 sides)
		{
			return default(float);
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0x115C958", Offset = "0x115C958", VA = "0x115C958")]
		public static List<Vector3> CalcRATriangle3DPoints(Vector3 rightAngleCorner, float xLength, float yLength, Quaternion triangleRotation)
		{
			return null;
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0x115CC28", Offset = "0x115CC28", VA = "0x115CC28")]
		public static List<Vector2> CalcRATriangle2DPoints(Vector2 rightAngleCorner, float xLength, float yLength, float degreeTriRotation)
		{
			return null;
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0x115CF0C", Offset = "0x115CF0C", VA = "0x115CF0C")]
		public static OBB Calc3DTriangleOBB(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 normal, [Optional] TriangleEpsilon epsilon)
		{
			return default(OBB);
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0x1156D88", Offset = "0x1156D88", VA = "0x1156D88")]
		public static bool Raycast(Ray ray, out float t, Vector3 p0, Vector3 p1, Vector3 p2, [Optional] TriangleEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0x115D284", Offset = "0x115D284", VA = "0x115D284")]
		public static bool RaycastWire(Ray ray, out float t, Vector3 p0, Vector3 p1, Vector3 p2, [Optional] TriangleEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0x1158918", Offset = "0x1158918", VA = "0x1158918")]
		public static bool Contains3DPoint(Vector3 point, bool checkOnPlane, Vector3 p0, Vector3 p1, Vector3 p2, [Optional] TriangleEpsilon epsilon)
		{
			return default(bool);
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0x115D5E0", Offset = "0x115D5E0", VA = "0x115D5E0")]
		public static bool Contains2DPoint(Vector2 point, Vector2 p0, Vector2 p1, Vector2 p2, [Optional] TriangleEpsilon epsilon)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005A1")]
	public class QuaternionRef
	{
		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Quaternion _value;

		[Token(Token = "0x170007D3")]
		public Quaternion Value
		{
			[Token(Token = "0x6002622")]
			[Address(RVA = "0x115D750", Offset = "0x115D750", VA = "0x115D750")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002623")]
			[Address(RVA = "0x115D75C", Offset = "0x115D75C", VA = "0x115D75C")]
			set
			{
			}
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0x115D768", Offset = "0x115D768", VA = "0x115D768")]
		public QuaternionRef()
		{
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0x115D7C0", Offset = "0x115D7C0", VA = "0x115D7C0")]
		public QuaternionRef(Quaternion quat)
		{
		}
	}
	[Token(Token = "0x20005A2")]
	public struct NumSnapSteps
	{
		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float FltNumSteps;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float AbsFltNumSteps;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int IntNumSteps;

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int AbsIntNumSteps;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float AbsFracSteps;
	}
	[Token(Token = "0x20005A3")]
	public static class SnapMath
	{
		[Token(Token = "0x6002626")]
		[Address(RVA = "0x115D844", Offset = "0x115D844", VA = "0x115D844")]
		public static NumSnapSteps CalculateNumSnapSteps(float snapStep, float total)
		{
			return default(NumSnapSteps);
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0x115D8D8", Offset = "0x115D8D8", VA = "0x115D8D8")]
		public static bool CanExtractSnap(float snapStep, float accumulated)
		{
			return default(bool);
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0x115D8E8", Offset = "0x115D8E8", VA = "0x115D8E8")]
		public static float ExtractSnap(float snapStep, ref float accumulated)
		{
			return default(float);
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0x115D920", Offset = "0x115D920", VA = "0x115D920")]
		public static float ExtractSnap(float snapStep, float accumulated)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20005A4")]
	public struct Sphere
	{
		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Vector3 _center;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private float _radius;

		[Token(Token = "0x170007D4")]
		public Vector3 Center
		{
			[Token(Token = "0x600262A")]
			[Address(RVA = "0x115D94C", Offset = "0x115D94C", VA = "0x115D94C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600262B")]
			[Address(RVA = "0x115D958", Offset = "0x115D958", VA = "0x115D958")]
			set
			{
			}
		}

		[Token(Token = "0x170007D5")]
		public float Radius
		{
			[Token(Token = "0x600262C")]
			[Address(RVA = "0x115D964", Offset = "0x115D964", VA = "0x115D964")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600262D")]
			[Address(RVA = "0x115D96C", Offset = "0x115D96C", VA = "0x115D96C")]
			set
			{
			}
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0x115D97C", Offset = "0x115D97C", VA = "0x115D97C")]
		public Sphere(Vector3 center, float radius)
		{
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0x115D990", Offset = "0x115D990", VA = "0x115D990")]
		public Sphere(AABB aabb)
		{
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0x115DA34", Offset = "0x115DA34", VA = "0x115DA34")]
		public Sphere(IEnumerable<Vector3> pointCloud)
		{
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0x115DE14", Offset = "0x115DE14", VA = "0x115DE14")]
		public bool ContainsPoint(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0x115DE50", Offset = "0x115DE50", VA = "0x115DE50")]
		public List<Vector3> GetRightUpExtents(Vector3 right, Vector3 up)
		{
			return null;
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0x115DE94", Offset = "0x115DE94", VA = "0x115DE94")]
		public void Encapsulate(Sphere sphere)
		{
		}
	}
	[Token(Token = "0x20005A5")]
	public class Vector3Ref
	{
		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _value;

		[Token(Token = "0x170007D6")]
		public Vector3 Value
		{
			[Token(Token = "0x6002634")]
			[Address(RVA = "0x115E090", Offset = "0x115E090", VA = "0x115E090")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002635")]
			[Address(RVA = "0x115E09C", Offset = "0x115E09C", VA = "0x115E09C")]
			set
			{
			}
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0x115E0A8", Offset = "0x115E0A8", VA = "0x115E0A8")]
		public Vector3Ref()
		{
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0x115E0B0", Offset = "0x115E0B0", VA = "0x115E0B0")]
		public Vector3Ref(Vector3 vec)
		{
		}
	}
	[Token(Token = "0x20005A6")]
	public static class BoxMesh
	{
		[Token(Token = "0x6002638")]
		[Address(RVA = "0x115E0EC", Offset = "0x115E0EC", VA = "0x115E0EC")]
		public static Mesh CreateBox(float width, float height, float depth, Color color)
		{
			return null;
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0x115E838", Offset = "0x115E838", VA = "0x115E838")]
		public static Mesh CreateWireBox(float width, float height, float depth, Color color)
		{
			return null;
		}
	}
	[Token(Token = "0x20005A7")]
	public static class CircleMesh
	{
		[Token(Token = "0x600263A")]
		[Address(RVA = "0x115EF84", Offset = "0x115EF84", VA = "0x115EF84")]
		public static Mesh CreateCircleXY(float circleRadius, int numBorderPoints, Color color)
		{
			return null;
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0x115F2A4", Offset = "0x115F2A4", VA = "0x115F2A4")]
		public static Mesh CreateWireCircleXY(float circleRadius, int numBorderPoints, Color color)
		{
			return null;
		}
	}
	[Token(Token = "0x20005A8")]
	public static class CylinderMesh
	{
		[Token(Token = "0x600263C")]
		[Address(RVA = "0x115F4B4", Offset = "0x115F4B4", VA = "0x115F4B4")]
		public static Mesh CreateCylinder(float bottomRadius, float topRadius, float height, int numSlices, int numStacks, int numBottomCapRings, int numTopCapRings, Color color)
		{
			return null;
		}
	}
	[Token(Token = "0x20005A9")]
	public static class LineMesh
	{
		[Token(Token = "0x600263D")]
		[Address(RVA = "0x11602B8", Offset = "0x11602B8", VA = "0x11602B8")]
		public static Mesh CreateCoordSystemAxesLines(float axisLength, Color color)
		{
			return null;
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0x1160580", Offset = "0x1160580", VA = "0x1160580")]
		public static Mesh CreateLine(Vector3 startPoint, Vector3 endPoint, Color color)
		{
			return null;
		}
	}
	[Token(Token = "0x20005AA")]
	public static class PrismMesh
	{
		[Token(Token = "0x600263F")]
		[Address(RVA = "0x1160700", Offset = "0x1160700", VA = "0x1160700")]
		public static Mesh CreateTriangularPrism(Vector3 baseCenter, float baseWidth, float baseDepth, float topWidth, float topDepth, float height, Color color)
		{
			return null;
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0x1160F80", Offset = "0x1160F80", VA = "0x1160F80")]
		public static Mesh CreateWireTriangularPrism(Vector3 baseCenter, float baseWidth, float baseDepth, float topWidth, float topDepth, float height, Color color)
		{
			return null;
		}
	}
	[Token(Token = "0x20005AB")]
	public static class PyramidMesh
	{
		[Token(Token = "0x6002641")]
		[Address(RVA = "0x11612E4", Offset = "0x11612E4", VA = "0x11612E4")]
		public static Mesh CreatePyramid(Vector3 baseCenter, float baseWidth, float baseDepth, float height, Color color)
		{
			return null;
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0x1161F90", Offset = "0x1161F90", VA = "0x1161F90")]
		public static Mesh CreateWirePyramid(Vector3 baseCenter, float baseWidth, float baseDepth, float height, Color color)
		{
			return null;
		}
	}
	[Token(Token = "0x20005AC")]
	public static class QuadMesh
	{
		[Token(Token = "0x6002643")]
		[Address(RVA = "0x1162428", Offset = "0x1162428", VA = "0x1162428")]
		public static Mesh CreateQuadXZ(float width, float depth, Color color)
		{
			return null;
		}

		[Token(Token = "0x6002644")]
		[Address(RVA = "0x116296C", Offset = "0x116296C", VA = "0x116296C")]
		public static Mesh CreateQuadXY(float width, float height, Color color)
		{
			return null;
		}

		[Token(Token = "0x6002645")]
		[Address(RVA = "0x1162ED0", Offset = "0x1162ED0", VA = "0x1162ED0")]
		public static Mesh CreateWireQuadXY(Vector3 center, Vector2 size, Color color)
		{
			return null;
		}
	}
	[Token(Token = "0x20005AD")]
	public static class SphereMesh
	{
		[Token(Token = "0x6002646")]
		[Address(RVA = "0x11632E4", Offset = "0x11632E4", VA = "0x11632E4")]
		public static Mesh CreateSphere(float radius, int numSlices, int numStacks, Color color)
		{
			return null;
		}
	}
	[Token(Token = "0x20005AE")]
	public static class TorusMesh
	{
		[Token(Token = "0x6002647")]
		[Address(RVA = "0x1163870", Offset = "0x1163870", VA = "0x1163870")]
		public static Mesh CreateCylindricalTorus(Vector3 center, float coreRadius, float tubeHrzRadius, float tubeVertRadius, int numTubeSlices, Color color)
		{
			return null;
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0x1164324", Offset = "0x1164324", VA = "0x1164324")]
		public static Mesh CreateTorus(Vector3 center, float coreRadius, float tubeRadius, int numTubeSlices, int numSlices, Color color)
		{
			return null;
		}
	}
	[Token(Token = "0x20005AF")]
	public static class TriangleMesh
	{
		[Token(Token = "0x6002649")]
		[Address(RVA = "0x1164810", Offset = "0x1164810", VA = "0x1164810")]
		public static Mesh CreateEqXY(Vector3 centroid, float sideLength, Color color)
		{
			return null;
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0x1164B24", Offset = "0x1164B24", VA = "0x1164B24")]
		public static Mesh CreateWireEqXY(Vector3 centroid, float sideLength, Color color)
		{
			return null;
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0x1164D50", Offset = "0x1164D50", VA = "0x1164D50")]
		public static Mesh CreateRightAngledTriangleXY(Vector3 cornerPosition, float xLength, float yLength, Color color)
		{
			return null;
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0x1164FEC", Offset = "0x1164FEC", VA = "0x1164FEC")]
		public static Mesh CreateWireRightAngledTriangleXY(Vector3 cornerPosition, float xLength, float yLength, Color color)
		{
			return null;
		}
	}
	[Token(Token = "0x20005B0")]
	public class MeshTransform
	{
		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _position;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Quaternion _rotation;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _scale;

		[Token(Token = "0x170007D7")]
		public Vector3 Position
		{
			[Token(Token = "0x600264D")]
			[Address(RVA = "0x1165288", Offset = "0x1165288", VA = "0x1165288")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170007D8")]
		public Quaternion Rotation
		{
			[Token(Token = "0x600264E")]
			[Address(RVA = "0x1165294", Offset = "0x1165294", VA = "0x1165294")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170007D9")]
		public Vector3 Scale
		{
			[Token(Token = "0x600264F")]
			[Address(RVA = "0x11652A0", Offset = "0x11652A0", VA = "0x11652A0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0x11652AC", Offset = "0x11652AC", VA = "0x11652AC")]
		public MeshTransform(Vector3 position, Quaternion rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x1165328", Offset = "0x1165328", VA = "0x1165328")]
		public MeshTransform(Transform transform)
		{
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0x1165390", Offset = "0x1165390", VA = "0x1165390")]
		public OBB InverseTransformOBB(OBB obb)
		{
			return default(OBB);
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0x116555C", Offset = "0x116555C", VA = "0x116555C")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002654")]
		[Address(RVA = "0x11654CC", Offset = "0x11654CC", VA = "0x11654CC")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20005B1")]
	public class MeshTree
	{
		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RTMesh _mesh;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SphereTree<MeshTriangle> _tree;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<SphereTreeNode<MeshTriangle>> _nodeBuffer;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<SphereTreeNodeRayHit<MeshTriangle>> _nodeHitBuffer;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<int> _vertexIndexSet;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isBuilt;

		[Token(Token = "0x170007DA")]
		public bool IsBuilt
		{
			[Token(Token = "0x6002655")]
			[Address(RVA = "0x11655B0", Offset = "0x11655B0", VA = "0x11655B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0x11655B8", Offset = "0x11655B8", VA = "0x11655B8")]
		public MeshTree(RTMesh mesh)
		{
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0x116574C", Offset = "0x116574C", VA = "0x116574C")]
		public void Build()
		{
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0x1165820", Offset = "0x1165820", VA = "0x1165820")]
		public bool OverlapVerts(OBB obb, MeshTransform meshTransform, List<Vector3> verts)
		{
			return default(bool);
		}

		[Token(Token = "0x6002659")]
		[Address(RVA = "0x1165D1C", Offset = "0x1165D1C", VA = "0x1165D1C")]
		public bool OverlapModelVerts(OBB modelOBB, List<Vector3> verts)
		{
			return default(bool);
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0x11661C8", Offset = "0x11661C8", VA = "0x11661C8")]
		public MeshRayHit RaycastClosest(Ray ray, Matrix4x4 meshTransform)
		{
			return null;
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0x116681C", Offset = "0x116681C", VA = "0x116681C")]
		public void DebugDraw()
		{
		}
	}
	[Token(Token = "0x20005B2")]
	public class MeshVertexChunk : IEnumerable<Vector3>, IEnumerable
	{
		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vector3> _modelSpaceVerts;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AABB _modelSpaceAABB;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Mesh _mesh;

		[Token(Token = "0x170007DB")]
		public Vector3 this[int vertexIndex]
		{
			[Token(Token = "0x600265C")]
			[Address(RVA = "0x116686C", Offset = "0x116686C", VA = "0x116686C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170007DC")]
		public Mesh Mesh
		{
			[Token(Token = "0x600265D")]
			[Address(RVA = "0x11668C4", Offset = "0x11668C4", VA = "0x11668C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007DD")]
		public int VertexCount
		{
			[Token(Token = "0x600265E")]
			[Address(RVA = "0x11668CC", Offset = "0x11668CC", VA = "0x11668CC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170007DE")]
		public AABB ModelSpaceAABB
		{
			[Token(Token = "0x600265F")]
			[Address(RVA = "0x1166914", Offset = "0x1166914", VA = "0x1166914")]
			get
			{
				return default(AABB);
			}
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0x1166928", Offset = "0x1166928", VA = "0x1166928")]
		public MeshVertexChunk(List<Vector3> modelSpaceVerts, Mesh mesh)
		{
		}

		[Token(Token = "0x6002661")]
		[Address(RVA = "0x1166A5C", Offset = "0x1166A5C", VA = "0x1166A5C", Slot = "4")]
		public IEnumerator<Vector3> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0x1166AE8", Offset = "0x1166AE8", VA = "0x1166AE8", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0x1166AEC", Offset = "0x1166AEC", VA = "0x1166AEC")]
		public Vector3 GetWorldVertClosestToScreenPt(Vector2 screenPoint, Matrix4x4 worldMtx, Camera camera)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20005B3")]
	public class MeshVertexChunkCollection : IEnumerable<MeshVertexChunk>, IEnumerable
	{
		[Token(Token = "0x20005B4")]
		private struct VertexChunkIndices
		{
			[Token(Token = "0x4001A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int _XIndex;

			[Token(Token = "0x4001A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private int _YIndex;

			[Token(Token = "0x4001A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int _ZIndex;

			[Token(Token = "0x170007E1")]
			public int XIndex
			{
				[Token(Token = "0x600266C")]
				[Address(RVA = "0x1167BE8", Offset = "0x1167BE8", VA = "0x1167BE8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170007E2")]
			public int YIndex
			{
				[Token(Token = "0x600266D")]
				[Address(RVA = "0x1167BF0", Offset = "0x1167BF0", VA = "0x1167BF0")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x170007E3")]
			public int ZIndex
			{
				[Token(Token = "0x600266E")]
				[Address(RVA = "0x1167BF8", Offset = "0x1167BF8", VA = "0x1167BF8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600266F")]
			[Address(RVA = "0x1167C00", Offset = "0x1167C00", VA = "0x1167C00")]
			public VertexChunkIndices(int xIndex, int yIndex, int zIndex)
			{
			}
		}

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Mesh _mesh;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<MeshVertexChunk> _vertexChunks;

		[Token(Token = "0x170007DF")]
		public MeshVertexChunk this[int chunkIndex]
		{
			[Token(Token = "0x6002664")]
			[Address(RVA = "0x1166D1C", Offset = "0x1166D1C", VA = "0x1166D1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007E0")]
		public int Count
		{
			[Token(Token = "0x6002665")]
			[Address(RVA = "0x1166D74", Offset = "0x1166D74", VA = "0x1166D74")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0x1166DBC", Offset = "0x1166DBC", VA = "0x1166DBC", Slot = "4")]
		public IEnumerator<MeshVertexChunk> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002667")]
		[Address(RVA = "0x1166E4C", Offset = "0x1166E4C", VA = "0x1166E4C", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0x1166E50", Offset = "0x1166E50", VA = "0x1166E50")]
		public List<MeshVertexChunk> GetWorldChunksHoveredByPoint(Vector3 hoverPoint, Matrix4x4 worldMtx, Camera camera)
		{
			return null;
		}

		[Token(Token = "0x6002669")]
		[Address(RVA = "0x116711C", Offset = "0x116711C", VA = "0x116711C")]
		public MeshVertexChunk GetWorldVertChunkClosestToScreenPt(Vector2 screenPoint, Matrix4x4 worldMtx, Camera camera)
		{
			return null;
		}

		[Token(Token = "0x600266A")]
		[Address(RVA = "0x1167430", Offset = "0x1167430", VA = "0x1167430")]
		public bool FromMesh(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0x1167B5C", Offset = "0x1167B5C", VA = "0x1167B5C")]
		public MeshVertexChunkCollection()
		{
		}
	}
	[Token(Token = "0x20005B5")]
	public class MeshVertexChunkCollectionDb : Singleton<MeshVertexChunkCollectionDb>, IEnumerable<MeshVertexChunkCollection>, IEnumerable
	{
		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<MeshVertexChunkCollection> _vertexChunkCollections;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Mesh, MeshVertexChunkCollection> _meshToVChunkCollection;

		[Token(Token = "0x170007E4")]
		public int Count
		{
			[Token(Token = "0x6002670")]
			[Address(RVA = "0x1167C0C", Offset = "0x1167C0C", VA = "0x1167C0C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170007E5")]
		public MeshVertexChunkCollection this[int collectionIndex]
		{
			[Token(Token = "0x6002671")]
			[Address(RVA = "0x1167C54", Offset = "0x1167C54", VA = "0x1167C54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007E6")]
		public MeshVertexChunkCollection this[Mesh mesh]
		{
			[Token(Token = "0x6002672")]
			[Address(RVA = "0x1167CAC", Offset = "0x1167CAC", VA = "0x1167CAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0x1167EBC", Offset = "0x1167EBC", VA = "0x1167EBC", Slot = "4")]
		public IEnumerator<MeshVertexChunkCollection> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0x1167F4C", Offset = "0x1167F4C", VA = "0x1167F4C", Slot = "5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0x1167D34", Offset = "0x1167D34", VA = "0x1167D34")]
		public bool HasChunkCollectionForMesh(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6002676")]
		[Address(RVA = "0x1167D8C", Offset = "0x1167D8C", VA = "0x1167D8C")]
		private bool CreateMeshVertChunkCollection(Mesh mesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0x1167F50", Offset = "0x1167F50", VA = "0x1167F50")]
		public MeshVertexChunkCollectionDb()
		{
		}
	}
	[Token(Token = "0x20005B6")]
	public class MeshTriangle
	{
		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3[] _vertices;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _normal;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _triangleIndex;

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] _vertIndices;

		[Token(Token = "0x170007E7")]
		public int TriangleIndex
		{
			[Token(Token = "0x6002678")]
			[Address(RVA = "0x1168068", Offset = "0x1168068", VA = "0x1168068")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170007E8")]
		public Vector3[] Vertices
		{
			[Token(Token = "0x6002679")]
			[Address(RVA = "0x1168070", Offset = "0x1168070", VA = "0x1168070")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007E9")]
		public Vector3 Vertex0
		{
			[Token(Token = "0x600267A")]
			[Address(RVA = "0x11680C8", Offset = "0x11680C8", VA = "0x11680C8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170007EA")]
		public Vector3 Vertex1
		{
			[Token(Token = "0x600267B")]
			[Address(RVA = "0x11680F4", Offset = "0x11680F4", VA = "0x11680F4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170007EB")]
		public Vector3 Vertex2
		{
			[Token(Token = "0x600267C")]
			[Address(RVA = "0x1168124", Offset = "0x1168124", VA = "0x1168124")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170007EC")]
		public Vector3 Normal
		{
			[Token(Token = "0x600267D")]
			[Address(RVA = "0x1168154", Offset = "0x1168154", VA = "0x1168154")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170007ED")]
		public int[] VertIndices
		{
			[Token(Token = "0x600267E")]
			[Address(RVA = "0x1168160", Offset = "0x1168160", VA = "0x1168160")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007EE")]
		public int VertIndex0
		{
			[Token(Token = "0x600267F")]
			[Address(RVA = "0x11681B8", Offset = "0x11681B8", VA = "0x11681B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170007EF")]
		public int VertIndex1
		{
			[Token(Token = "0x6002680")]
			[Address(RVA = "0x11681E0", Offset = "0x11681E0", VA = "0x11681E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170007F0")]
		public int VertIndex2
		{
			[Token(Token = "0x6002681")]
			[Address(RVA = "0x116820C", Offset = "0x116820C", VA = "0x116820C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0x1168238", Offset = "0x1168238", VA = "0x1168238")]
		public MeshTriangle(Vector3[] vertices, int triangleIndex, int vertIndex0, int vertIndex1, int vertIndex2)
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0x1168494", Offset = "0x1168494", VA = "0x1168494")]
		public int GetVertIndex(int arrayIndex)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20005B7")]
	public class RTMesh
	{
		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Mesh _unityMesh;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3[] _vertices;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] _vertIndices;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _numTriangles;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private AABB _aabb;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshTree _meshTree;

		[Token(Token = "0x170007F1")]
		public int NumTriangles
		{
			[Token(Token = "0x6002684")]
			[Address(RVA = "0x11684C4", Offset = "0x11684C4", VA = "0x11684C4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170007F2")]
		public Mesh UnityMesh
		{
			[Token(Token = "0x6002685")]
			[Address(RVA = "0x11684CC", Offset = "0x11684CC", VA = "0x11684CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007F3")]
		public AABB AABB
		{
			[Token(Token = "0x6002686")]
			[Address(RVA = "0x11684D4", Offset = "0x11684D4", VA = "0x11684D4")]
			get
			{
				return default(AABB);
			}
		}

		[Token(Token = "0x170007F4")]
		public bool IsTreeBuilt
		{
			[Token(Token = "0x6002687")]
			[Address(RVA = "0x11684E8", Offset = "0x11684E8", VA = "0x11684E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0x1168504", Offset = "0x1168504", VA = "0x1168504")]
		public RTMesh(Mesh unityMesh)
		{
		}

		[Token(Token = "0x6002689")]
		[Address(RVA = "0x1168658", Offset = "0x1168658", VA = "0x1168658")]
		public static RTMesh Create(Mesh unityMesh)
		{
			return null;
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0x1168750", Offset = "0x1168750", VA = "0x1168750")]
		public void BuildTree()
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0x116876C", Offset = "0x116876C", VA = "0x116876C")]
		public MeshTriangle GetTriangle(int triangleIndex)
		{
			return null;
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0x1168900", Offset = "0x1168900", VA = "0x1168900")]
		public MeshRayHit Raycast(Ray ray, Matrix4x4 meshTransform)
		{
			return null;
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0x1168970", Offset = "0x1168970", VA = "0x1168970")]
		public bool OverlapVerts(OBB obb, Transform meshObjectTransform, List<Vector3> verts)
		{
			return default(bool);
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0x1168A38", Offset = "0x1168A38", VA = "0x1168A38")]
		public bool OverlapModelVerts(OBB modelOBB, List<Vector3> verts)
		{
			return default(bool);
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0x1168A88", Offset = "0x1168A88", VA = "0x1168A88")]
		public bool OverlapModelVerts(AABB modelAABB, List<Vector3> verts)
		{
			return default(bool);
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0x1168B08", Offset = "0x1168B08", VA = "0x1168B08")]
		public void DebugDrawTree()
		{
		}
	}
	[Token(Token = "0x20005B8")]
	public static class RTMeshCompiler
	{
		[Token(Token = "0x6002691")]
		[Address(RVA = "0x1168B24", Offset = "0x1168B24", VA = "0x1168B24")]
		public static void CompileEntireScene()
		{
		}

		[Token(Token = "0x6002692")]
		[Address(RVA = "0x1168C40", Offset = "0x1168C40", VA = "0x1168C40")]
		public static bool CompileForObject(GameObject gameObject)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005B9")]
	public class RTMeshDb : Singleton<RTMeshDb>
	{
		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<Mesh, RTMesh> _meshes;

		[Token(Token = "0x6002693")]
		[Address(RVA = "0x1168EB0", Offset = "0x1168EB0", VA = "0x1168EB0")]
		public bool Contains(RTMesh rtMesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6002694")]
		[Address(RVA = "0x1168F1C", Offset = "0x1168F1C", VA = "0x1168F1C")]
		public bool Contains(Mesh unityMesh)
		{
			return default(bool);
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0x1168DC0", Offset = "0x1168DC0", VA = "0x1168DC0")]
		public RTMesh GetRTMesh(Mesh unityMesh)
		{
			return null;
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0x116903C", Offset = "0x116903C", VA = "0x116903C")]
		public void OnMeshWillBeDestroyed(Mesh unityMesh)
		{
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0x1168FC8", Offset = "0x1168FC8", VA = "0x1168FC8")]
		private RTMesh CreateRTMesh(Mesh unityMesh)
		{
			return null;
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0x11690CC", Offset = "0x11690CC", VA = "0x11690CC")]
		public RTMeshDb()
		{
		}
	}
	[Token(Token = "0x20005BA")]
	[Flags]
	public enum GameObjectType
	{
		[Token(Token = "0x4001A15")]
		Mesh = 1,
		[Token(Token = "0x4001A16")]
		Terrain = 2,
		[Token(Token = "0x4001A17")]
		Sprite = 4,
		[Token(Token = "0x4001A18")]
		Camera = 8,
		[Token(Token = "0x4001A19")]
		Light = 0x10,
		[Token(Token = "0x4001A1A")]
		ParticleSystem = 0x20,
		[Token(Token = "0x4001A1B")]
		Empty = 0x40
	}
	[Token(Token = "0x20005BB")]
	public static class GameObjectTypeHelper
	{
		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _numTypes;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<GameObjectType> _allObjectTypes;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static GameObjectType _allCombined;

		[Token(Token = "0x170007F5")]
		public static int NumTypes
		{
			[Token(Token = "0x600269A")]
			[Address(RVA = "0x11695E8", Offset = "0x11695E8", VA = "0x11695E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170007F6")]
		public static GameObjectType[] AllObjectTypes
		{
			[Token(Token = "0x600269B")]
			[Address(RVA = "0x1169640", Offset = "0x1169640", VA = "0x1169640")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170007F7")]
		public static GameObjectType AllCombined
		{
			[Token(Token = "0x600269C")]
			[Address(RVA = "0x11696B8", Offset = "0x11696B8", VA = "0x11696B8")]
			get
			{
				return default(GameObjectType);
			}
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0x1169194", Offset = "0x1169194", VA = "0x1169194")]
		static GameObjectTypeHelper()
		{
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0x1169710", Offset = "0x1169710", VA = "0x1169710")]
		public static bool Is3DObjectType(GameObjectType objectType)
		{
			return default(bool);
		}

		[Token(Token = "0x600269E")]
		[Address(RVA = "0x116971C", Offset = "0x116971C", VA = "0x116971C")]
		public static bool Is2DObjectType(GameObjectType objectType)
		{
			return default(bool);
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0x1169728", Offset = "0x1169728", VA = "0x1169728")]
		public static bool HasVolume(GameObjectType objectType)
		{
			return default(bool);
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0x1169750", Offset = "0x1169750", VA = "0x1169750")]
		public static bool IsTypeBitSet(int objectTypeMask, GameObjectType typeBit)
		{
			return default(bool);
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0x116975C", Offset = "0x116975C", VA = "0x116975C")]
		public static int SetTypeBit(int objectTypeMask, GameObjectType typeBit)
		{
			return default(int);
		}

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0x1169764", Offset = "0x1169764", VA = "0x1169764")]
		public static int ClearTypeBit(int objectTypeMask, GameObjectType typeBit)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x20005BC")]
	public class ObjectKeyRotationSettings : Settings
	{
		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _xRotationStep;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _yRotationStep;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _zRotationStep;

		[Token(Token = "0x170007F8")]
		public float XRotationStep
		{
			[Token(Token = "0x60026A3")]
			[Address(RVA = "0x116976C", Offset = "0x116976C", VA = "0x116976C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026A4")]
			[Address(RVA = "0x1169774", Offset = "0x1169774", VA = "0x1169774")]
			set
			{
			}
		}

		[Token(Token = "0x170007F9")]
		public float YRotationStep
		{
			[Token(Token = "0x60026A5")]
			[Address(RVA = "0x1169788", Offset = "0x1169788", VA = "0x1169788")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026A6")]
			[Address(RVA = "0x1169790", Offset = "0x1169790", VA = "0x1169790")]
			set
			{
			}
		}

		[Token(Token = "0x170007FA")]
		public float ZRotationStep
		{
			[Token(Token = "0x60026A7")]
			[Address(RVA = "0x11697A4", Offset = "0x11697A4", VA = "0x11697A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60026A8")]
			[Address(RVA = "0x11697AC", Offset = "0x11697AC", VA = "0x11697AC")]
			set
			{
			}
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x11697C0", Offset = "0x11697C0", VA = "0x11697C0")]
		public ObjectKeyRotationSettings()
		{
		}
	}
	[Token(Token = "0x20005BD")]
	public class ObjectPool
	{
		[Token(Token = "0x20005BE")]
		public enum GrowMode
		{
			[Token(Token = "0x4001A28")]
			None,
			[Token(Token = "0x4001A29")]
			Increment,
			[Token(Token = "0x4001A2A")]
			ByAmount
		}

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject _sourceObject;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GrowMode _growMode;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int _growAmount;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<GameObject> _pooledObjects;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _pooledParent;

		[Token(Token = "0x170007FB")]
		public GrowMode PoolGrowMode
		{
			[Token(Token = "0x60026AA")]
			[Address(RVA = "0x11697D8", Offset = "0x11697D8", VA = "0x11697D8")]
			get
			{
				return default(GrowMode);
			}
			[Token(Token = "0x60026AB")]
			[Address(RVA = "0x11697E0", Offset = "0x11697E0", VA = "0x11697E0")]
			set
			{
			}
		}

		[Token(Token = "0x170007FC")]
		public int GrowAmount
		{
			[Token(Token = "0x60026AC")]
			[Address(RVA = "0x11697E8", Offset = "0x11697E8", VA = "0x11697E8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60026AD")]
			[Address(RVA = "0x11697F0", Offset = "0x11697F0", VA = "0x11697F0")]
			set
			{
			}
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0x1169800", Offset = "0x1169800", VA = "0x1169800")]
		public ObjectPool(GameObject sourceObject, int numPooled, GrowMode growMode)
		{
		}

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0x11698C0", Offset = "0x11698C0", VA = "0x11698C0")]
		public void SetPooledObjectsParent(Transform parent)
		{
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0x1169AA0", Offset = "0x1169AA0", VA = "0x1169AA0")]
		public GameObject GetPooledObject()
		{
			return null;
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0x1169DDC", Offset = "0x1169DDC", VA = "0x1169DDC")]
		public void MarkAsUnused(GameObject gameObject)
		{
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0x1169E60", Offset = "0x1169E60", VA = "0x1169E60")]
		public void MarkAllAsUnused()
		{
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0x1169D78", Offset = "0x1169D78", VA = "0x1169D78")]
		private void Grow()
		{
		}

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0x1169F9C", Offset = "0x1169F9C", VA = "0x1169F9C")]
		private GameObject CreatePooledObject()
		{
			return null;
		}
	}
	[Token(Token = "0x20005BF")]
	public enum ObjectRotationPivot
	{
		[Token(Token = "0x4001A2C")]
		IndividualPivot,
		[Token(Token = "0x4001A2D")]
		IndividualCenter,
		[Token(Token = "0x4001A2E")]
		GroupCenter
	}
	[Token(Token = "0x20005C0")]
	public enum PivotPointShapeType
	{
		[Token(Token = "0x4001A30")]
		Square,
		[Token(Token = "0x4001A31")]
		Circle
	}
	[Token(Token = "0x20005C1")]
	public class RTObjectGroupDb : MonoSingleton<RTObjectGroupDb>
	{
		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<GameObject> _objectGroups;

		[Token(Token = "0x170007FD")]
		public int NumGroups
		{
			[Token(Token = "0x60026B5")]
			[Address(RVA = "0x116A0E8", Offset = "0x116A0E8", VA = "0x116A0E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0x116A130", Offset = "0x116A130", VA = "0x116A130")]
		public void Add(GameObject gameObject)
		{
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0x116A254", Offset = "0x116A254", VA = "0x116A254")]
		public void Remove(GameObject gameObject)
		{
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x116A2AC", Offset = "0x116A2AC", VA = "0x116A2AC")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x116A304", Offset = "0x116A304", VA = "0x116A304")]
		public void Clear()
		{
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0x116A1FC", Offset = "0x116A1FC", VA = "0x116A1FC")]
		public bool IsGroup(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0x116A374", Offset = "0x116A374", VA = "0x116A374")]
		public GameObject GetGroupByIndex(int index)
		{
			return null;
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x116A3CC", Offset = "0x116A3CC", VA = "0x116A3CC")]
		public GameObject GetGroupByName(string name)
		{
			return null;
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0x116A508", Offset = "0x116A508", VA = "0x116A508")]
		public List<GameObject> GetAll()
		{
			return null;
		}

		[Token(Token = "0x60026BE")]
		[Address(RVA = "0x116A584", Offset = "0x116A584", VA = "0x116A584")]
		public void RemoveNullRefs()
		{
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0x116A68C", Offset = "0x116A68C", VA = "0x116A68C")]
		public RTObjectGroupDb()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005C4")]
	public class PrefabLibDbSettings
	{
		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool _spawnPrefabOnPreviewClick;

		[Token(Token = "0x170007FE")]
		public bool SpawnPrefabOnPreviewClick
		{
			[Token(Token = "0x60026C5")]
			[Address(RVA = "0x116A854", Offset = "0x116A854", VA = "0x116A854")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026C6")]
			[Address(RVA = "0x116A85C", Offset = "0x116A85C", VA = "0x116A85C")]
			set
			{
			}
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0x116A868", Offset = "0x116A868", VA = "0x116A868")]
		public PrefabLibDbSettings()
		{
		}
	}
	[Token(Token = "0x20005C5")]
	public class PrefabSpawnSnap : MonoBehaviour
	{
		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isSnapSessionActive;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject _targetHierarchy;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ObjectSurfaceSnap.SnapConfig _snapConfig;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int _objectSurfaceLayers;

		[Token(Token = "0x60026C8")]
		[Address(RVA = "0x116A878", Offset = "0x116A878", VA = "0x116A878")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0x116A958", Offset = "0x116A958", VA = "0x116A958")]
		private void Update()
		{
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0x116AA84", Offset = "0x116AA84", VA = "0x116AA84")]
		private bool EvaluateSessionEndCondition()
		{
			return default(bool);
		}

		[Token(Token = "0x60026CB")]
		[Address(RVA = "0x116AB90", Offset = "0x116AB90", VA = "0x116AB90")]
		private void OnInputDeviceMoved(IInputDevice inputDevice)
		{
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0x116B1EC", Offset = "0x116B1EC", VA = "0x116B1EC")]
		private void BeginSnapSession(GameObject targetHierarchy)
		{
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0x116AB6C", Offset = "0x116AB6C", VA = "0x116AB6C")]
		private void EndSnapSession()
		{
		}

		[Token(Token = "0x60026CE")]
		[Address(RVA = "0x116B1FC", Offset = "0x116B1FC", VA = "0x116B1FC")]
		private void OnAppInitialized()
		{
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0x116B5AC", Offset = "0x116B5AC", VA = "0x116B5AC")]
		private void OnPrefabSpawned(RTPrefab prefab, GameObject spawnedObject)
		{
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0x116B5C0", Offset = "0x116B5C0", VA = "0x116B5C0")]
		private void OnCanChangeObjectSelection(YesNoAnswer answer)
		{
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0x116B5F4", Offset = "0x116B5F4", VA = "0x116B5F4")]
		public PrefabSpawnSnap()
		{
		}
	}
	[Token(Token = "0x20005C6")]
	public class RTActiveLibDropDown : MonoBehaviour
	{
		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dropdown _dropDown;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<UnityAction<int>> _valueChangedListeners;

		[Token(Token = "0x170007FF")]
		public int ActiveLibIndex
		{
			[Token(Token = "0x60026D2")]
			[Address(RVA = "0x116B604", Offset = "0x116B604", VA = "0x116B604")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0x116B620", Offset = "0x116B620", VA = "0x116B620")]
		public void AddValueChangedListener(UnityAction<int> listener)
		{
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0x116B700", Offset = "0x116B700", VA = "0x116B700")]
		public void SetActiveLibIndex(int activeLibIndex)
		{
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0x116B8AC", Offset = "0x116B8AC", VA = "0x116B8AC")]
		public void ClearLibs()
		{
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0x116B8C8", Offset = "0x116B8C8", VA = "0x116B8C8")]
		public void SyncWithLibDb()
		{
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0x116BC00", Offset = "0x116BC00", VA = "0x116BC00")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0x116BC68", Offset = "0x116BC68", VA = "0x116BC68")]
		public RTActiveLibDropDown()
		{
		}
	}
	[Token(Token = "0x20005C7")]
	public class RTHoveredPrefabNameLabel : MonoBehaviour
	{
		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _label;

		[Token(Token = "0x17000800")]
		public string PrefabName
		{
			[Token(Token = "0x60026D9")]
			[Address(RVA = "0x116BCF0", Offset = "0x116BCF0", VA = "0x116BCF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026DA")]
			[Address(RVA = "0x116BD14", Offset = "0x116BD14", VA = "0x116BD14")]
			set
			{
			}
		}

		[Token(Token = "0x60026DB")]
		[Address(RVA = "0x116BD44", Offset = "0x116BD44", VA = "0x116BD44")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026DC")]
		[Address(RVA = "0x116BD9C", Offset = "0x116BD9C", VA = "0x116BD9C")]
		public RTHoveredPrefabNameLabel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005C8")]
	public class RTPrefab
	{
		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject _unityPrefab;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Texture2D _previewTexture;

		[NonSerialized]
		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Sprite _previewSprite;

		[Token(Token = "0x17000801")]
		public GameObject UnityPrefab
		{
			[Token(Token = "0x60026DD")]
			[Address(RVA = "0x116BDA4", Offset = "0x116BDA4", VA = "0x116BDA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026DE")]
			[Address(RVA = "0x116BDAC", Offset = "0x116BDAC", VA = "0x116BDAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000802")]
		public Texture2D PreviewTexture
		{
			[Token(Token = "0x60026DF")]
			[Address(RVA = "0x116BDB4", Offset = "0x116BDB4", VA = "0x116BDB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026E0")]
			[Address(RVA = "0x116BDBC", Offset = "0x116BDBC", VA = "0x116BDBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000803")]
		public Sprite PreviewSprite
		{
			[Token(Token = "0x60026E1")]
			[Address(RVA = "0x116BDC4", Offset = "0x116BDC4", VA = "0x116BDC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0x116BF28", Offset = "0x116BF28", VA = "0x116BF28")]
		public GameObject Instantiate()
		{
			return null;
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0x116BFD0", Offset = "0x116BFD0", VA = "0x116BFD0")]
		public GameObject Instantiate(Vector3 worldPos, Quaternion worldRotation)
		{
			return null;
		}

		[Token(Token = "0x60026E4")]
		[Address(RVA = "0x116C0E0", Offset = "0x116C0E0", VA = "0x116C0E0")]
		public GameObject Instantiate(Vector3 worldPos, Quaternion worldRotation, Vector3 worldScale)
		{
			return null;
		}

		[Token(Token = "0x60026E5")]
		[Address(RVA = "0x116C20C", Offset = "0x116C20C", VA = "0x116C20C")]
		public RTPrefab()
		{
		}
	}
	[Token(Token = "0x20005C9")]
	public delegate void PrefabCreatedInLibHandler(RTPrefabLib prefabLib, RTPrefab prefab);
	[Token(Token = "0x20005CA")]
	public delegate void PrefabRemovedFromLibHandler(RTPrefabLib prefabLib, RTPrefab prefab);
	[Token(Token = "0x20005CB")]
	public delegate void PrefabLibClearedHandler(RTPrefabLib prefabLib);
	[Serializable]
	[Token(Token = "0x20005CC")]
	public class RTPrefabLib
	{
		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<RTPrefab> _prefabs;

		[Token(Token = "0x17000804")]
		public int NumPrefabs
		{
			[Token(Token = "0x60026F8")]
			[Address(RVA = "0x116CA48", Offset = "0x116CA48", VA = "0x116CA48")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000805")]
		public string Name
		{
			[Token(Token = "0x60026F9")]
			[Address(RVA = "0x116CA90", Offset = "0x116CA90", VA = "0x116CA90")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026FA")]
			[Address(RVA = "0x116CA98", Offset = "0x116CA98", VA = "0x116CA98")]
			set
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public event PrefabCreatedInLibHandler PrefabCreated
		{
			[Token(Token = "0x60026F2")]
			[Address(RVA = "0x116C6A0", Offset = "0x116C6A0", VA = "0x116C6A0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026F3")]
			[Address(RVA = "0x116C73C", Offset = "0x116C73C", VA = "0x116C73C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004B")]
		public event PrefabRemovedFromLibHandler PrefabRemoved
		{
			[Token(Token = "0x60026F4")]
			[Address(RVA = "0x116C7D8", Offset = "0x116C7D8", VA = "0x116C7D8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026F5")]
			[Address(RVA = "0x116C874", Offset = "0x116C874", VA = "0x116C874")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004C")]
		public event PrefabLibClearedHandler Cleared
		{
			[Token(Token = "0x60026F6")]
			[Address(RVA = "0x116C910", Offset = "0x116C910", VA = "0x116C910")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60026F7")]
			[Address(RVA = "0x116C9AC", Offset = "0x116C9AC", VA = "0x116C9AC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0x116CAA0", Offset = "0x116CAA0", VA = "0x116CAA0")]
		public RTPrefab CreatePrefab(GameObject unityPrefab, Texture2D prefabPreview)
		{
			return null;
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0x116CD28", Offset = "0x116CD28", VA = "0x116CD28")]
		public RTPrefab CreatePrefabFromSceneObject(GameObject sceneObject)
		{
			return null;
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0x116CF5C", Offset = "0x116CF5C", VA = "0x116CF5C")]
		public List<RTPrefab> CreatePrefabsFromSceneObjects(List<GameObject> sceneObjects)
		{
			return null;
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0x116D3E8", Offset = "0x116D3E8", VA = "0x116D3E8")]
		public void Remove(int prefabIndex)
		{
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0x116D4B0", Offset = "0x116D4B0", VA = "0x116D4B0")]
		public void Remove(RTPrefab prefab)
		{
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0x116D530", Offset = "0x116D530", VA = "0x116D530")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0x116CC20", Offset = "0x116CC20", VA = "0x116CC20")]
		public bool Contains(GameObject unityPrefab)
		{
			return default(bool);
		}

		[Token(Token = "0x6002702")]
		[Address(RVA = "0x116D5C4", Offset = "0x116D5C4", VA = "0x116D5C4")]
		public bool Contains(RTPrefab prefab)
		{
			return default(bool);
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0x116D4D8", Offset = "0x116D4D8", VA = "0x116D4D8")]
		public int GetPrefabIndex(RTPrefab prefab)
		{
			return default(int);
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0x116D61C", Offset = "0x116D61C", VA = "0x116D61C")]
		public RTPrefab GetPrefab(int prefabIndex)
		{
			return null;
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0x116D674", Offset = "0x116D674", VA = "0x116D674")]
		public RTPrefab GetPrefab(GameObject unityPrefab)
		{
			return null;
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0x116D7B0", Offset = "0x116D7B0", VA = "0x116D7B0")]
		public RTPrefabLib()
		{
		}
	}
	[Token(Token = "0x20005CF")]
	public delegate void PrefabLibDbPrefabSpawnedHander(RTPrefab prefab, GameObject spawnedObject);
	[Serializable]
	[Token(Token = "0x20005D0")]
	[ExecuteInEditMode]
	public class RTPrefabLibDb : MonoSingleton<RTPrefabLibDb>
	{
		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _newLibName;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector2 _prefabScrollPos;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _numPrefabsPerRow;

		[NonSerialized]
		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EditorPrefabPreviewGen _editorPrefabPreviewGen;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PrefabLibDbSettings _settings;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private RTPrefabLibDbUI _runtimeUI;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private PrefabPreviewLookAndFeel _prefabPreviewLookAndFeel;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int _activeLibIndex;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private List<RTPrefabLib> _libs;

		[Token(Token = "0x17000806")]
		public int NumLibs
		{
			[Token(Token = "0x6002711")]
			[Address(RVA = "0x116B9AC", Offset = "0x116B9AC", VA = "0x116B9AC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000807")]
		public int ActiveLibIndex
		{
			[Token(Token = "0x6002712")]
			[Address(RVA = "0x116DA30", Offset = "0x116DA30", VA = "0x116DA30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000808")]
		public RTPrefabLib ActiveLib
		{
			[Token(Token = "0x6002713")]
			[Address(RVA = "0x116DA38", Offset = "0x116DA38", VA = "0x116DA38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000809")]
		public PrefabPreviewLookAndFeel PrefabPreviewLookAndFeel
		{
			[Token(Token = "0x6002714")]
			[Address(RVA = "0x116DAA0", Offset = "0x116DAA0", VA = "0x116DAA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700080A")]
		public RTPrefabLibDbUI RuntimeUI
		{
			[Token(Token = "0x6002715")]
			[Address(RVA = "0x116DAA8", Offset = "0x116DAA8", VA = "0x116DAA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700080B")]
		public bool HasRuntimeUI
		{
			[Token(Token = "0x6002716")]
			[Address(RVA = "0x116DAB0", Offset = "0x116DAB0", VA = "0x116DAB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700080C")]
		public PrefabLibDbSettings Settings
		{
			[Token(Token = "0x6002717")]
			[Address(RVA = "0x116DB58", Offset = "0x116DB58", VA = "0x116DB58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700080D")]
		public EditorPrefabPreviewGen EditorPrefabPreviewGen
		{
			[Token(Token = "0x6002718")]
			[Address(RVA = "0x116DB60", Offset = "0x116DB60", VA = "0x116DB60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400004D")]
		public event PrefabLibDbPrefabSpawnedHander PrefabSpawned
		{
			[Token(Token = "0x600270F")]
			[Address(RVA = "0x116B510", Offset = "0x116B510", VA = "0x116B510")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002710")]
			[Address(RVA = "0x116D994", Offset = "0x116D994", VA = "0x116D994")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0x116DB68", Offset = "0x116DB68", VA = "0x116DB68")]
		public RTPrefabLib CreateLib(string libName)
		{
			return null;
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0x116DE6C", Offset = "0x116DE6C", VA = "0x116DE6C")]
		public void SortLibsByName()
		{
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0x116DFDC", Offset = "0x116DFDC", VA = "0x116DFDC")]
		public bool SetLibName(RTPrefabLib lib, string newLibName)
		{
			return default(bool);
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0x116DDC4", Offset = "0x116DDC4", VA = "0x116DDC4")]
		public void SetActiveLib(int libIndex)
		{
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0x116DFC0", Offset = "0x116DFC0", VA = "0x116DFC0")]
		public void SetActiveLib(RTPrefabLib lib)
		{
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0x116E1B8", Offset = "0x116E1B8", VA = "0x116E1B8")]
		public void SetActiveLib(string libName)
		{
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0x116E2BC", Offset = "0x116E2BC", VA = "0x116E2BC")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0x116E3E4", Offset = "0x116E3E4", VA = "0x116E3E4")]
		public void Remove(int libIndex)
		{
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0x116E4F0", Offset = "0x116E4F0", VA = "0x116E4F0")]
		public void Remove(string libName)
		{
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0x116E518", Offset = "0x116E518", VA = "0x116E518")]
		public void Remove(RTPrefabLib lib)
		{
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0x116E540", Offset = "0x116E540", VA = "0x116E540")]
		public void Remove(List<RTPrefabLib> libs)
		{
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0x116E67C", Offset = "0x116E67C", VA = "0x116E67C")]
		public List<RTPrefabLib> GetEmptyLibs()
		{
			return null;
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0x116E8A8", Offset = "0x116E8A8", VA = "0x116E8A8")]
		public void RemoveEmptyLibs()
		{
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0x116E8C4", Offset = "0x116E8C4", VA = "0x116E8C4")]
		public bool Contains(string libName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002727")]
		[Address(RVA = "0x116E0A4", Offset = "0x116E0A4", VA = "0x116E0A4")]
		public bool Contains(RTPrefabLib lib)
		{
			return default(bool);
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0x116B9F4", Offset = "0x116B9F4", VA = "0x116B9F4")]
		public List<string> GetAllLibNames()
		{
			return null;
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0x116E1D4", Offset = "0x116E1D4", VA = "0x116E1D4")]
		public int GetLibIndex(string libName)
		{
			return default(int);
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0x116E160", Offset = "0x116E160", VA = "0x116E160")]
		public int GetLibIndex(RTPrefabLib lib)
		{
			return default(int);
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0x116EA18", Offset = "0x116EA18", VA = "0x116EA18")]
		public RTPrefabLib GetLib(int libIndex)
		{
			return null;
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0x116E8DC", Offset = "0x116E8DC", VA = "0x116E8DC")]
		public RTPrefabLib GetLib(string libName)
		{
			return null;
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0x116EA78", Offset = "0x116EA78", VA = "0x116EA78")]
		private void Start()
		{
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0x116F0B0", Offset = "0x116F0B0", VA = "0x116F0B0")]
		private void OnActiveLibDropDownChanged()
		{
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0x116F118", Offset = "0x116F118", VA = "0x116F118")]
		private void OnPrefabCreatedInLib(RTPrefabLib prefabLib, RTPrefab prefab)
		{
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0x116F54C", Offset = "0x116F54C", VA = "0x116F54C")]
		private void OnPrefabRemovedFromLib(RTPrefabLib prefabLib, RTPrefab prefab)
		{
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0x116F5A4", Offset = "0x116F5A4", VA = "0x116F5A4")]
		private void OnPrefabLibCleared(RTPrefabLib prefabLib)
		{
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0x116F5F8", Offset = "0x116F5F8", VA = "0x116F5F8")]
		private void OnPrefabPreviewButtonClicked(RTPrefab prefab)
		{
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0x116F838", Offset = "0x116F838", VA = "0x116F838")]
		public RTPrefabLibDb()
		{
		}
	}
	[Token(Token = "0x20005D4")]
	public class RTPrefabLibDbUI : MonoBehaviour
	{
		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RTActiveLibDropDown _activeLibDropDown;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RTPrefabScrollView _prefabScrollView;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RTHoveredPrefabNameLabel _hoveredPrefabNameLabel;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RTPrefabSearch _prefabSearch;

		[Token(Token = "0x1700080E")]
		public RTActiveLibDropDown ActiveLibDropDown
		{
			[Token(Token = "0x600273C")]
			[Address(RVA = "0x116FAEC", Offset = "0x116FAEC", VA = "0x116FAEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700080F")]
		public RTPrefabScrollView PrefabScrollView
		{
			[Token(Token = "0x600273D")]
			[Address(RVA = "0x116FAF4", Offset = "0x116FAF4", VA = "0x116FAF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000810")]
		public RTHoveredPrefabNameLabel HoveredPrefabNameLabel
		{
			[Token(Token = "0x600273E")]
			[Address(RVA = "0x116FAFC", Offset = "0x116FAFC", VA = "0x116FAFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000811")]
		public RTPrefabSearch PrefabSearch
		{
			[Token(Token = "0x600273F")]
			[Address(RVA = "0x116FB04", Offset = "0x116FB04", VA = "0x116FB04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0x116FB0C", Offset = "0x116FB0C", VA = "0x116FB0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0x1170124", Offset = "0x1170124", VA = "0x1170124")]
		private void OnPrefabPreviewHoverEnter(RTPrefab prefab)
		{
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0x1170200", Offset = "0x1170200", VA = "0x1170200")]
		private void OnPrefabPreviewHoverExit(RTPrefab prefab)
		{
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0x117027C", Offset = "0x117027C", VA = "0x117027C")]
		private void OnPrefabSearchFieldValueChanged(string value)
		{
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0x1170570", Offset = "0x1170570", VA = "0x1170570")]
		public RTPrefabLibDbUI()
		{
		}
	}
	[Token(Token = "0x20005D5")]
	public class RTPrefabPreviewButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x20005D6")]
		public delegate void HoverEnterHandler(RTPrefab prefab);

		[Token(Token = "0x20005D7")]
		public delegate void HoverExitHandler(RTPrefab prefab);

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text _text;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RTPrefab _prefab;

		[Token(Token = "0x17000812")]
		public RTPrefab Prefab
		{
			[Token(Token = "0x600274A")]
			[Address(RVA = "0x1170800", Offset = "0x1170800", VA = "0x1170800")]
			get
			{
				return null;
			}
			[Token(Token = "0x600274B")]
			[Address(RVA = "0x1170808", Offset = "0x1170808", VA = "0x1170808")]
			set
			{
			}
		}

		[Token(Token = "0x17000813")]
		public string Text
		{
			[Token(Token = "0x600274C")]
			[Address(RVA = "0x1170818", Offset = "0x1170818", VA = "0x1170818")]
			get
			{
				return null;
			}
			[Token(Token = "0x600274D")]
			[Address(RVA = "0x11708C4", Offset = "0x11708C4", VA = "0x11708C4")]
			set
			{
			}
		}

		[Token(Token = "0x1400004E")]
		public event HoverEnterHandler HoverEnter
		{
			[Token(Token = "0x6002746")]
			[Address(RVA = "0x1170590", Offset = "0x1170590", VA = "0x1170590")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002747")]
			[Address(RVA = "0x117062C", Offset = "0x117062C", VA = "0x117062C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public event HoverExitHandler HoverExit
		{
			[Token(Token = "0x6002748")]
			[Address(RVA = "0x11706C8", Offset = "0x11706C8", VA = "0x11706C8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002749")]
			[Address(RVA = "0x1170764", Offset = "0x1170764", VA = "0x1170764")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x600274E")]
		[Address(RVA = "0x1170968", Offset = "0x1170968", VA = "0x1170968", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0x1170988", Offset = "0x1170988", VA = "0x1170988", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0x11709A8", Offset = "0x11709A8", VA = "0x11709A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002751")]
		[Address(RVA = "0x1170A10", Offset = "0x1170A10", VA = "0x1170A10")]
		public RTPrefabPreviewButton()
		{
		}
	}
	[Token(Token = "0x20005D8")]
	public class RTPrefabScrollView : MonoBehaviour
	{
		[Token(Token = "0x20005D9")]
		public delegate void PrefabPreviewClickedHandler(RTPrefab prefab);

		[Token(Token = "0x20005DA")]
		public delegate void PrefabPreviewHoverEnterHandler(RTPrefab prefab);

		[Token(Token = "0x20005DB")]
		public delegate void PrefabPreviewHoverExitHandler(RTPrefab prefab);

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ObjectPool _previewButtonPool;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _gridObject;

		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GridLayoutGroup _gridLayoutGroup;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<RTPrefabPreviewButton> _activePreviewButtons;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<string> _prefabSearchNames;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<string> _prefabSearchMatches;

		[Token(Token = "0x14000050")]
		public event PrefabPreviewClickedHandler PrefabPreviewClicked
		{
			[Token(Token = "0x600275A")]
			[Address(RVA = "0x116F014", Offset = "0x116F014", VA = "0x116F014")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600275B")]
			[Address(RVA = "0x1170D10", Offset = "0x1170D10", VA = "0x1170D10")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000051")]
		public event PrefabPreviewHoverEnterHandler PrefabPreviewHoverEnter
		{
			[Token(Token = "0x600275C")]
			[Address(RVA = "0x116FEB0", Offset = "0x116FEB0", VA = "0x116FEB0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600275D")]
			[Address(RVA = "0x1170DAC", Offset = "0x1170DAC", VA = "0x1170DAC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000052")]
		public event PrefabPreviewHoverExitHandler PrefabPreviewHoverExit
		{
			[Token(Token = "0x600275E")]
			[Address(RVA = "0x1170088", Offset = "0x1170088", VA = "0x1170088")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600275F")]
			[Address(RVA = "0x1170E48", Offset = "0x1170E48", VA = "0x1170E48")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0x116F180", Offset = "0x116F180", VA = "0x116F180")]
		public void AddPrefabPreview(RTPrefab prefab)
		{
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0x1170294", Offset = "0x1170294", VA = "0x1170294")]
		public void FilterPrefabsByName(string name)
		{
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0x116E374", Offset = "0x116E374", VA = "0x116E374")]
		public void ClearPreviews()
		{
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0x116E0FC", Offset = "0x116E0FC", VA = "0x116E0FC")]
		public void SyncWithLib(RTPrefabLib prefabLib)
		{
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0x1171118", Offset = "0x1171118", VA = "0x1171118")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0x1170EE4", Offset = "0x1170EE4", VA = "0x1170EE4")]
		private void prefabNames(List<string> names)
		{
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0x117126C", Offset = "0x117126C", VA = "0x117126C")]
		private void OnPreviewButtonClicked()
		{
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0x1171818", Offset = "0x1171818", VA = "0x1171818")]
		private void OnPrefabPreviewHoverEnter(RTPrefab prefab)
		{
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0x1171834", Offset = "0x1171834", VA = "0x1171834")]
		private void OnPrefabPreviewHoverExit(RTPrefab prefab)
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x1171850", Offset = "0x1171850", VA = "0x1171850")]
		public RTPrefabScrollView()
		{
		}
	}
	[Token(Token = "0x20005DC")]
	public class RTPrefabSearch : MonoBehaviour
	{
		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField _searchField;

		[Token(Token = "0x17000814")]
		public InputField SearchField
		{
			[Token(Token = "0x6002776")]
			[Address(RVA = "0x1171A18", Offset = "0x1171A18", VA = "0x1171A18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0x1171A20", Offset = "0x1171A20", VA = "0x1171A20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0x1171A78", Offset = "0x1171A78", VA = "0x1171A78")]
		public RTPrefabSearch()
		{
		}
	}
	[Token(Token = "0x20005DD")]
	public static class GLRenderer
	{
		[Token(Token = "0x6002779")]
		[Address(RVA = "0x1171A80", Offset = "0x1171A80", VA = "0x1171A80")]
		public static void DrawQuads2D(List<Vector2> quadPoints, Camera camera)
		{
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0x1171BE8", Offset = "0x1171BE8", VA = "0x1171BE8")]
		public static void DrawLineLoop2D(List<Vector2> linePoints, Camera camera)
		{
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0x1171D68", Offset = "0x1171D68", VA = "0x1171D68")]
		public static void DrawLineLoop2D(List<Vector2> linePoints, Vector2 translation, Vector2 scale, Camera camera)
		{
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0x1171F20", Offset = "0x1171F20", VA = "0x1171F20")]
		public static void DrawLines2D(List<Vector2> linePoints, Camera camera)
		{
		}

		[Token(Token = "0x600277D")]
		[Address(RVA = "0x11720A0", Offset = "0x11720A0", VA = "0x11720A0")]
		public static void DrawLines2D(List<Vector2> linePoints, Vector2 translation, Vector2 scale, Camera camera)
		{
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0x1172258", Offset = "0x1172258", VA = "0x1172258")]
		public static void DrawLine2D(Vector2 startPoint, Vector2 endPoint, Camera camera)
		{
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0x11722F8", Offset = "0x11722F8", VA = "0x11722F8")]
		public static void DrawLine3D(Vector3 startPoint, Vector3 endPoint)
		{
		}

		[Token(Token = "0x6002780")]
		[Address(RVA = "0x117236C", Offset = "0x117236C", VA = "0x117236C")]
		public static void DrawLines3D(List<Vector3> linePoints)
		{
		}

		[Token(Token = "0x6002781")]
		[Address(RVA = "0x1172494", Offset = "0x1172494", VA = "0x1172494")]
		public static void DrawLineLoop3D(List<Vector3> linePoints)
		{
		}

		[Token(Token = "0x6002782")]
		[Address(RVA = "0x11725BC", Offset = "0x11725BC", VA = "0x11725BC")]
		public static void DrawLineStrip3D(List<Vector3> linePoints)
		{
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0x1172690", Offset = "0x1172690", VA = "0x1172690")]
		public static void DrawLineLoop3D(List<Vector3> linePoints, Vector3 pointOffset)
		{
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0x11727E8", Offset = "0x11727E8", VA = "0x11727E8")]
		public static void DrawLinePairs3D(List<Vector3> pairPoints)
		{
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0x117290C", Offset = "0x117290C", VA = "0x117290C")]
		public static void DrawRectBorder2D(Rect rect, Camera camera)
		{
		}

		[Token(Token = "0x6002786")]
		[Address(RVA = "0x1172928", Offset = "0x1172928", VA = "0x1172928")]
		public static void DrawRect2D(Rect rect, Camera camera)
		{
		}

		[Token(Token = "0x6002787")]
		[Address(RVA = "0x1172B20", Offset = "0x1172B20", VA = "0x1172B20")]
		public static void DrawCircleBorder2D(Vector2 circleCenter, float circleRadius, int numPoints, Camera camera)
		{
		}

		[Token(Token = "0x6002788")]
		[Address(RVA = "0x1172B3C", Offset = "0x1172B3C", VA = "0x1172B3C")]
		public static void DrawCircle2D(Vector2 circleCenter, float circleRadius, int numPoints, Camera camera)
		{
		}

		[Token(Token = "0x6002789")]
		[Address(RVA = "0x1172CD4", Offset = "0x1172CD4", VA = "0x1172CD4")]
		public static void DrawCircleBorder3D(Vector3 circleCenter, float circleRadius, Vector3 circleRight, Vector3 circleUp, int numPoints)
		{
		}

		[Token(Token = "0x600278A")]
		[Address(RVA = "0x1172D00", Offset = "0x1172D00", VA = "0x1172D00")]
		public static void DrawCircle3D(Vector2 circleCenter, float circleRadius, Vector3 circleRight, Vector3 circleUp, int numPoints)
		{
		}

		[Token(Token = "0x600278B")]
		[Address(RVA = "0x1172E68", Offset = "0x1172E68", VA = "0x1172E68")]
		public static void DrawSphereBorder(Camera camera, Vector3 sphereCenter, float sphereRadius, int numPoints)
		{
		}

		[Token(Token = "0x600278C")]
		[Address(RVA = "0x1172E7C", Offset = "0x1172E7C", VA = "0x1172E7C")]
		public static void DrawTriangleFan2D(Vector2 origin, List<Vector2> points, Vector2 translation, Vector2 scale, Camera camera)
		{
		}

		[Token(Token = "0x600278D")]
		[Address(RVA = "0x1172B70", Offset = "0x1172B70", VA = "0x1172B70")]
		public static void DrawTriangleFan2D(Vector2 origin, List<Vector2> points, Camera camera)
		{
		}

		[Token(Token = "0x600278E")]
		[Address(RVA = "0x1173030", Offset = "0x1173030", VA = "0x1173030")]
		public static void DrawTriangleFan3D(Vector3 origin, List<Vector3> points, Vector3 translation, Vector3 scale)
		{
		}

		[Token(Token = "0x600278F")]
		[Address(RVA = "0x1172D60", Offset = "0x1172D60", VA = "0x1172D60")]
		public static void DrawTriangleFan3D(Vector3 origin, List<Vector3> points)
		{
		}
	}
	[Token(Token = "0x20005DE")]
	public class MaterialPool : Singleton<MaterialPool>
	{
		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Material _linearGradientCameraBk;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material _xzGrid_Plane;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material _gizmoSolidHandle;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material _tintedTexture;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material _simpleColor;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material _circleCull;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _torusCull;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _cylindricalTorusCull;

		[Token(Token = "0x17000815")]
		public Material LinearGradientCameraBk
		{
			[Token(Token = "0x6002790")]
			[Address(RVA = "0x11731C0", Offset = "0x11731C0", VA = "0x11731C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000816")]
		public Material XZGrid_Plane
		{
			[Token(Token = "0x6002791")]
			[Address(RVA = "0x11733B4", Offset = "0x11733B4", VA = "0x11733B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000817")]
		public Material GizmoSolidHandle
		{
			[Token(Token = "0x6002792")]
			[Address(RVA = "0x11735A8", Offset = "0x11735A8", VA = "0x11735A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000818")]
		public Material TintedTexture
		{
			[Token(Token = "0x6002793")]
			[Address(RVA = "0x117379C", Offset = "0x117379C", VA = "0x117379C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000819")]
		public Material SimpleColor
		{
			[Token(Token = "0x6002794")]
			[Address(RVA = "0x1173990", Offset = "0x1173990", VA = "0x1173990")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700081A")]
		public Material CircleCull
		{
			[Token(Token = "0x6002795")]
			[Address(RVA = "0x1173B84", Offset = "0x1173B84", VA = "0x1173B84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700081B")]
		public Material TorusCull
		{
			[Token(Token = "0x6002796")]
			[Address(RVA = "0x1173D78", Offset = "0x1173D78", VA = "0x1173D78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700081C")]
		public Material CylindricalTorusCull
		{
			[Token(Token = "0x6002797")]
			[Address(RVA = "0x1173F6C", Offset = "0x1173F6C", VA = "0x1173F6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002798")]
		[Address(RVA = "0x1174160", Offset = "0x1174160", VA = "0x1174160")]
		public MaterialPool()
		{
		}
	}
	[Token(Token = "0x20005DF")]
	public class MeshPool : Singleton<MeshPool>
	{
		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Mesh _unitTorus;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Mesh _unitCylindricalTorus;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh _unitBox;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh _unitWireBox;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Mesh _unitPyramid;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Mesh _unitWirePyramid;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Mesh _unitTriangularPrism;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Mesh _unitWireTriangularPrism;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Mesh _unitCone;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Mesh _unitCylinder;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Mesh _unitSphere;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Mesh _unitCoordSystem;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Mesh _unitSegmentX;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Mesh _unitQuadXY;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Mesh _unitQuadXZ;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Mesh _unitWireQuadXY;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Mesh _unitCircleXY;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Mesh _unitWireCircleXY;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Mesh _unitRightAngledTriangleXY;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Mesh _unitWireRightAngledTriangleXY;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Mesh _unitEqTriangleXY;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Mesh _unitWireEqTriangleXY;

		[Token(Token = "0x1700081D")]
		public Mesh UnitTorus
		{
			[Token(Token = "0x6002799")]
			[Address(RVA = "0x11741CC", Offset = "0x11741CC", VA = "0x11741CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700081E")]
		public Mesh UnitCylindricalTorus
		{
			[Token(Token = "0x600279A")]
			[Address(RVA = "0x11742A8", Offset = "0x11742A8", VA = "0x11742A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700081F")]
		public Mesh UnitQuadXY
		{
			[Token(Token = "0x600279B")]
			[Address(RVA = "0x1174384", Offset = "0x1174384", VA = "0x1174384")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000820")]
		public Mesh UnitQuadXZ
		{
			[Token(Token = "0x600279C")]
			[Address(RVA = "0x1174420", Offset = "0x1174420", VA = "0x1174420")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000821")]
		public Mesh UnitBox
		{
			[Token(Token = "0x600279D")]
			[Address(RVA = "0x11744BC", Offset = "0x11744BC", VA = "0x11744BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000822")]
		public Mesh UnitWireBox
		{
			[Token(Token = "0x600279E")]
			[Address(RVA = "0x117455C", Offset = "0x117455C", VA = "0x117455C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000823")]
		public Mesh UnitPyramid
		{
			[Token(Token = "0x600279F")]
			[Address(RVA = "0x11745FC", Offset = "0x11745FC", VA = "0x11745FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000824")]
		public Mesh UnitWirePyramid
		{
			[Token(Token = "0x60027A0")]
			[Address(RVA = "0x11746D4", Offset = "0x11746D4", VA = "0x11746D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000825")]
		public Mesh UnitTriangularPrism
		{
			[Token(Token = "0x60027A1")]
			[Address(RVA = "0x11747AC", Offset = "0x11747AC", VA = "0x11747AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000826")]
		public Mesh UnitWireTriangularPrism
		{
			[Token(Token = "0x60027A2")]
			[Address(RVA = "0x117488C", Offset = "0x117488C", VA = "0x117488C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000827")]
		public Mesh UnitCone
		{
			[Token(Token = "0x60027A3")]
			[Address(RVA = "0x117496C", Offset = "0x117496C", VA = "0x117496C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000828")]
		public Mesh UnitCylinder
		{
			[Token(Token = "0x60027A4")]
			[Address(RVA = "0x1174A1C", Offset = "0x1174A1C", VA = "0x1174A1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000829")]
		public Mesh UnitSphere
		{
			[Token(Token = "0x60027A5")]
			[Address(RVA = "0x1174ACC", Offset = "0x1174ACC", VA = "0x1174ACC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700082A")]
		public Mesh UnitCoordSystem
		{
			[Token(Token = "0x60027A6")]
			[Address(RVA = "0x1174B6C", Offset = "0x1174B6C", VA = "0x1174B6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700082B")]
		public Mesh UnitSegmentX
		{
			[Token(Token = "0x60027A7")]
			[Address(RVA = "0x1174C04", Offset = "0x1174C04", VA = "0x1174C04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700082C")]
		public Mesh UnitWireQuadXY
		{
			[Token(Token = "0x60027A8")]
			[Address(RVA = "0x1174CDC", Offset = "0x1174CDC", VA = "0x1174CDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700082D")]
		public Mesh UnitCircleXY
		{
			[Token(Token = "0x60027A9")]
			[Address(RVA = "0x1174DB0", Offset = "0x1174DB0", VA = "0x1174DB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700082E")]
		public Mesh UnitWireCircleXY
		{
			[Token(Token = "0x60027AA")]
			[Address(RVA = "0x1174E4C", Offset = "0x1174E4C", VA = "0x1174E4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700082F")]
		public Mesh UnitRightAngledTriangleXY
		{
			[Token(Token = "0x60027AB")]
			[Address(RVA = "0x1174EE8", Offset = "0x1174EE8", VA = "0x1174EE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000830")]
		public Mesh UnitWireRightAngledTriangleXY
		{
			[Token(Token = "0x60027AC")]
			[Address(RVA = "0x1174FBC", Offset = "0x1174FBC", VA = "0x1174FBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000831")]
		public Mesh UnitEqTriangleXY
		{
			[Token(Token = "0x60027AD")]
			[Address(RVA = "0x1175090", Offset = "0x1175090", VA = "0x1175090")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000832")]
		public Mesh UnitWireEqTriangleXY
		{
			[Token(Token = "0x60027AE")]
			[Address(RVA = "0x1175160", Offset = "0x1175160", VA = "0x1175160")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027AF")]
		[Address(RVA = "0x1175230", Offset = "0x1175230", VA = "0x1175230")]
		public MeshPool()
		{
		}
	}
	[Token(Token = "0x20005E0")]
	public class ShaderPool : Singleton<ShaderPool>
	{
		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Shader _linearGradientCameraBk;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Shader _xzGrid_Plane;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Shader _gizmoSolidHandle;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Shader _tintedTexture;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Shader _simpleColor;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Shader _circleCull;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Shader _torusCull;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Shader _cylindricalTorusCull;

		[Token(Token = "0x17000833")]
		public Shader LinearGradientCameraBk
		{
			[Token(Token = "0x60027B0")]
			[Address(RVA = "0x1173318", Offset = "0x1173318", VA = "0x1173318")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000834")]
		public Shader XZGrid_Plane
		{
			[Token(Token = "0x60027B1")]
			[Address(RVA = "0x117350C", Offset = "0x117350C", VA = "0x117350C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000835")]
		public Shader GizmoSolidHandle
		{
			[Token(Token = "0x60027B2")]
			[Address(RVA = "0x1173700", Offset = "0x1173700", VA = "0x1173700")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000836")]
		public Shader TintedTexture
		{
			[Token(Token = "0x60027B3")]
			[Address(RVA = "0x11738F4", Offset = "0x11738F4", VA = "0x11738F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000837")]
		public Shader SimpleColor
		{
			[Token(Token = "0x60027B4")]
			[Address(RVA = "0x1173AE8", Offset = "0x1173AE8", VA = "0x1173AE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000838")]
		public Shader CircleCull
		{
			[Token(Token = "0x60027B5")]
			[Address(RVA = "0x1173CDC", Offset = "0x1173CDC", VA = "0x1173CDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000839")]
		public Shader TorusCull
		{
			[Token(Token = "0x60027B6")]
			[Address(RVA = "0x1173ED0", Offset = "0x1173ED0", VA = "0x1173ED0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700083A")]
		public Shader CylindricalTorusCull
		{
			[Token(Token = "0x60027B7")]
			[Address(RVA = "0x11740C4", Offset = "0x11740C4", VA = "0x11740C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027B8")]
		[Address(RVA = "0x117529C", Offset = "0x117529C", VA = "0x117529C")]
		public ShaderPool()
		{
		}
	}
	[Token(Token = "0x20005E1")]
	public class TexturePool : Singleton<TexturePool>
	{
		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Texture2D _mainLightIcon;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Texture2D _mainParticleSystemIcon;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D _cameraIcon;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D _xAxisLabel;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Texture2D _yAxisLabel;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Texture2D _zAxisLabel;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture2D _camPerspMode;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Texture2D _camOrthoMode;

		[Token(Token = "0x1700083B")]
		public Texture2D MainLightIcon
		{
			[Token(Token = "0x60027B9")]
			[Address(RVA = "0x1175308", Offset = "0x1175308", VA = "0x1175308")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700083C")]
		public Texture2D MainParticleSystemIcon
		{
			[Token(Token = "0x60027BA")]
			[Address(RVA = "0x11753E0", Offset = "0x11753E0", VA = "0x11753E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700083D")]
		public Texture2D CameraIcon
		{
			[Token(Token = "0x60027BB")]
			[Address(RVA = "0x11754B8", Offset = "0x11754B8", VA = "0x11754B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700083E")]
		public Texture2D XAxisLabel
		{
			[Token(Token = "0x60027BC")]
			[Address(RVA = "0x1175590", Offset = "0x1175590", VA = "0x1175590")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700083F")]
		public Texture2D YAxisLabel
		{
			[Token(Token = "0x60027BD")]
			[Address(RVA = "0x1175668", Offset = "0x1175668", VA = "0x1175668")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000840")]
		public Texture2D ZAxisLabel
		{
			[Token(Token = "0x60027BE")]
			[Address(RVA = "0x1175740", Offset = "0x1175740", VA = "0x1175740")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000841")]
		public Texture2D CamPerspMode
		{
			[Token(Token = "0x60027BF")]
			[Address(RVA = "0x1175818", Offset = "0x1175818", VA = "0x1175818")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000842")]
		public Texture2D CamOrthoMode
		{
			[Token(Token = "0x60027C0")]
			[Address(RVA = "0x11758F0", Offset = "0x11758F0", VA = "0x11758F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0x11759C8", Offset = "0x11759C8", VA = "0x11759C8")]
		public TexturePool()
		{
		}
	}
	[Token(Token = "0x20005E2")]
	public enum RLDMode
	{
		[Token(Token = "0x4001A97")]
		SelectAndManipulate = 1,
		[Token(Token = "0x4001A98")]
		Spawn
	}
	[Token(Token = "0x20005E3")]
	public static class RTSystemValues
	{
		[Token(Token = "0x17000843")]
		public static Color XAxisColor
		{
			[Token(Token = "0x60027C2")]
			[Address(RVA = "0x1175A34", Offset = "0x1175A34", VA = "0x1175A34")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000844")]
		public static Color YAxisColor
		{
			[Token(Token = "0x60027C3")]
			[Address(RVA = "0x1175A4C", Offset = "0x1175A4C", VA = "0x1175A4C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000845")]
		public static Color ZAxisColor
		{
			[Token(Token = "0x60027C4")]
			[Address(RVA = "0x1175A64", Offset = "0x1175A64", VA = "0x1175A64")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000846")]
		public static Color GridLineColor
		{
			[Token(Token = "0x60027C5")]
			[Address(RVA = "0x1175A7C", Offset = "0x1175A7C", VA = "0x1175A7C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000847")]
		public static Color HoveredAxisColor
		{
			[Token(Token = "0x60027C6")]
			[Address(RVA = "0x1175A94", Offset = "0x1175A94", VA = "0x1175A94")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000848")]
		public static Color CenterAxisColor
		{
			[Token(Token = "0x60027C7")]
			[Address(RVA = "0x1175AAC", Offset = "0x1175AAC", VA = "0x1175AAC")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000849")]
		public static float AxisAlpha
		{
			[Token(Token = "0x60027C8")]
			[Address(RVA = "0x1175AC4", Offset = "0x1175AC4", VA = "0x1175AC4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700084A")]
		public static Color CameraBkGradientFirstColor
		{
			[Token(Token = "0x60027C9")]
			[Address(RVA = "0x1175AD0", Offset = "0x1175AD0", VA = "0x1175AD0")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700084B")]
		public static Color CameraBkGradientSecondColor
		{
			[Token(Token = "0x60027CA")]
			[Address(RVA = "0x1175AE8", Offset = "0x1175AE8", VA = "0x1175AE8")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700084C")]
		public static Color GuideFillColor
		{
			[Token(Token = "0x60027CB")]
			[Address(RVA = "0x1175AFC", Offset = "0x1175AFC", VA = "0x1175AFC")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700084D")]
		public static Color GuideBorderColor
		{
			[Token(Token = "0x60027CC")]
			[Address(RVA = "0x1175B14", Offset = "0x1175B14", VA = "0x1175B14")]
			get
			{
				return default(Color);
			}
		}
	}
	[Token(Token = "0x20005E4")]
	public class GameObjectRayHit
	{
		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject _hitObject;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _hitPoint;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _hitEnter;

		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _hitNormal;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Plane _hitPlane;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MeshRayHit _meshRayHit;

		[Token(Token = "0x1700084E")]
		public GameObject HitObject
		{
			[Token(Token = "0x60027CD")]
			[Address(RVA = "0x1175B2C", Offset = "0x1175B2C", VA = "0x1175B2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700084F")]
		public Vector3 HitPoint
		{
			[Token(Token = "0x60027CE")]
			[Address(RVA = "0x1175B34", Offset = "0x1175B34", VA = "0x1175B34")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000850")]
		public float HitEnter
		{
			[Token(Token = "0x60027CF")]
			[Address(RVA = "0x1175B40", Offset = "0x1175B40", VA = "0x1175B40")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000851")]
		public Vector3 HitNormal
		{
			[Token(Token = "0x60027D0")]
			[Address(RVA = "0x1175B48", Offset = "0x1175B48", VA = "0x1175B48")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000852")]
		public Plane HitPlane
		{
			[Token(Token = "0x60027D1")]
			[Address(RVA = "0x1175B54", Offset = "0x1175B54", VA = "0x1175B54")]
			get
			{
				return default(Plane);
			}
		}

		[Token(Token = "0x17000853")]
		public MeshRayHit MeshRayHit
		{
			[Token(Token = "0x60027D2")]
			[Address(RVA = "0x1175B60", Offset = "0x1175B60", VA = "0x1175B60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027D3")]
		[Address(RVA = "0x1175B68", Offset = "0x1175B68", VA = "0x1175B68")]
		public static void SortByHitDistance(List<GameObjectRayHit> hits)
		{
		}

		[Token(Token = "0x60027D4")]
		[Address(RVA = "0x1175C6C", Offset = "0x1175C6C", VA = "0x1175C6C")]
		public static void Store(Ray hitRay, IEnumerable<RaycastHit2D> hits2D, IEnumerable<RaycastHit> hits3D, List<GameObjectRayHit> hits)
		{
		}

		[Token(Token = "0x60027D5")]
		[Address(RVA = "0x1176468", Offset = "0x1176468", VA = "0x1176468")]
		public GameObjectRayHit(Ray hitRay, RaycastHit hit3D)
		{
		}

		[Token(Token = "0x60027D6")]
		[Address(RVA = "0x11763B4", Offset = "0x11763B4", VA = "0x11763B4")]
		public GameObjectRayHit(Ray hitRay, RaycastHit2D hit2D)
		{
		}

		[Token(Token = "0x60027D7")]
		[Address(RVA = "0x1176518", Offset = "0x1176518", VA = "0x1176518")]
		public GameObjectRayHit(Ray hitRay, GameObject hitObject, Vector3 hitNormal, float hitEnter)
		{
		}

		[Token(Token = "0x60027D8")]
		[Address(RVA = "0x11765C8", Offset = "0x11765C8", VA = "0x11765C8")]
		public GameObjectRayHit(Ray ray, GameObject hitObject, MeshRayHit meshRayHit)
		{
		}
	}
	[Token(Token = "0x20005E6")]
	public interface IXZGrid
	{
		[Token(Token = "0x17000854")]
		Plane WorldPlane
		{
			[Token(Token = "0x60027DC")]
			get;
		}

		[Token(Token = "0x17000855")]
		Matrix4x4 WorldMatrix
		{
			[Token(Token = "0x60027DD")]
			get;
		}

		[Token(Token = "0x60027DE")]
		XZGridCell CellFromWorldPoint(Vector3 worldPoint);

		[Token(Token = "0x60027DF")]
		bool Raycast(Ray ray, out float t);
	}
	[Serializable]
	[Token(Token = "0x20005E7")]
	public class RTSceneGrid : MonoSingleton<RTSceneGrid>, IXZGrid
	{
		[Token(Token = "0x20005E8")]
		private enum SnapToPointMode
		{
			[Token(Token = "0x4001AA6")]
			Exact,
			[Token(Token = "0x4001AA7")]
			ClosestExtremity
		}

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SceneGridHotkeys _hotkeys;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private XZGridSettings _settings;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private XZGridLookAndFeel _lookAndFeel;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Camera> _renderIgnoreCameras;

		[Token(Token = "0x17000856")]
		public Quaternion Rotation
		{
			[Token(Token = "0x60027E0")]
			[Address(RVA = "0x117670C", Offset = "0x117670C", VA = "0x117670C")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000857")]
		public Vector3 Right
		{
			[Token(Token = "0x60027E1")]
			[Address(RVA = "0x1176744", Offset = "0x1176744", VA = "0x1176744")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000858")]
		public Vector3 Look
		{
			[Token(Token = "0x60027E2")]
			[Address(RVA = "0x11767C0", Offset = "0x11767C0", VA = "0x11767C0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000859")]
		public Vector3 Normal
		{
			[Token(Token = "0x60027E3")]
			[Address(RVA = "0x117683C", Offset = "0x117683C", VA = "0x117683C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700085A")]
		public Plane WorldPlane
		{
			[Token(Token = "0x60027E4")]
			[Address(RVA = "0x11768B8", Offset = "0x11768B8", VA = "0x11768B8", Slot = "4")]
			get
			{
				return default(Plane);
			}
		}

		[Token(Token = "0x1700085B")]
		public Matrix4x4 WorldMatrix
		{
			[Token(Token = "0x60027E5")]
			[Address(RVA = "0x1176954", Offset = "0x1176954", VA = "0x1176954", Slot = "5")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700085C")]
		public float YOffset
		{
			[Token(Token = "0x60027E6")]
			[Address(RVA = "0x1176938", Offset = "0x1176938", VA = "0x1176938")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60027E7")]
			[Address(RVA = "0x1176A48", Offset = "0x1176A48", VA = "0x1176A48")]
			set
			{
			}
		}

		[Token(Token = "0x1700085D")]
		public SceneGridHotkeys Hotkeys
		{
			[Token(Token = "0x60027E8")]
			[Address(RVA = "0x1176A64", Offset = "0x1176A64", VA = "0x1176A64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700085E")]
		public XZGridSettings Settings
		{
			[Token(Token = "0x60027E9")]
			[Address(RVA = "0x1176A6C", Offset = "0x1176A6C", VA = "0x1176A6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700085F")]
		public XZGridLookAndFeel LookAndFeel
		{
			[Token(Token = "0x60027EA")]
			[Address(RVA = "0x1176A74", Offset = "0x1176A74", VA = "0x1176A74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0x1176A7C", Offset = "0x1176A7C", VA = "0x1176A7C")]
		public void Initialize_SystemCall()
		{
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0x1176BAC", Offset = "0x1176BAC", VA = "0x1176BAC")]
		public bool IsRenderIgnoreCamera(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0x1176C04", Offset = "0x1176C04", VA = "0x1176C04")]
		public void AddRenderIgnoreCamera(Camera camera)
		{
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0x1176CD0", Offset = "0x1176CD0", VA = "0x1176CD0")]
		public void RemoveRenderIgnoreCamera(Camera camera)
		{
		}

		[Token(Token = "0x60027EF")]
		[Address(RVA = "0x1176D28", Offset = "0x1176D28", VA = "0x1176D28", Slot = "6")]
		public XZGridCell CellFromWorldPoint(Vector3 worldPoint)
		{
			return null;
		}

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0x1177144", Offset = "0x1177144", VA = "0x1177144", Slot = "7")]
		public bool Raycast(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x60027F1")]
		[Address(RVA = "0x117719C", Offset = "0x117719C", VA = "0x117719C")]
		public void Update_SystemCall()
		{
		}

		[Token(Token = "0x60027F2")]
		[Address(RVA = "0x11779A8", Offset = "0x11779A8", VA = "0x11779A8")]
		public void Render_SystemCall(Camera renderCamera)
		{
		}

		[Token(Token = "0x60027F3")]
		[Address(RVA = "0x11773F4", Offset = "0x11773F4", VA = "0x11773F4")]
		private void MoveUp()
		{
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0x1177424", Offset = "0x1177424", VA = "0x1177424")]
		private void MoveDown()
		{
		}

		[Token(Token = "0x60027F5")]
		[Address(RVA = "0x117840C", Offset = "0x117840C", VA = "0x117840C")]
		private float CalculateCellFadeZoom(Camera camera)
		{
			return default(float);
		}

		[Token(Token = "0x60027F6")]
		[Address(RVA = "0x1177454", Offset = "0x1177454", VA = "0x1177454")]
		private SceneRaycastHit GetSceneHitForGridSnap()
		{
			return null;
		}

		[Token(Token = "0x60027F7")]
		[Address(RVA = "0x1178480", Offset = "0x1178480", VA = "0x1178480")]
		private void OnInputDeviceDoubleTap(IInputDevice inputDevice, Vector2 position)
		{
		}

		[Token(Token = "0x60027F8")]
		[Address(RVA = "0x11776C0", Offset = "0x11776C0", VA = "0x11776C0")]
		private void SnapToObjectHitPoint(GameObjectRayHit objectHit, SnapToPointMode snapMode)
		{
		}

		[Token(Token = "0x60027F9")]
		[Address(RVA = "0x11784D4", Offset = "0x11784D4", VA = "0x11784D4")]
		public RTSceneGrid()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005E9")]
	public class SceneGridHotkeys : Settings
	{
		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Hotkeys _gridUp;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Hotkeys _gridDown;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Hotkeys _snapToCursorPickPoint;

		[Token(Token = "0x17000860")]
		public Hotkeys GridUp
		{
			[Token(Token = "0x60027FA")]
			[Address(RVA = "0x1178834", Offset = "0x1178834", VA = "0x1178834")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000861")]
		public Hotkeys GridDown
		{
			[Token(Token = "0x60027FB")]
			[Address(RVA = "0x117883C", Offset = "0x117883C", VA = "0x117883C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000862")]
		public Hotkeys SnapToCursorPickPoint
		{
			[Token(Token = "0x60027FC")]
			[Address(RVA = "0x1178844", Offset = "0x1178844", VA = "0x1178844")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60027FD")]
		[Address(RVA = "0x1178644", Offset = "0x1178644", VA = "0x1178644")]
		public SceneGridHotkeys()
		{
		}
	}
	[Token(Token = "0x20005EA")]
	public class XZGridCell
	{
		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IXZGrid _parentGrid;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _xIndex;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int _zIndex;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _min;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _max;

		[Token(Token = "0x17000863")]
		public IXZGrid ParentGrid
		{
			[Token(Token = "0x60027FE")]
			[Address(RVA = "0x117884C", Offset = "0x117884C", VA = "0x117884C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000864")]
		public int XIndex
		{
			[Token(Token = "0x60027FF")]
			[Address(RVA = "0x1178854", Offset = "0x1178854", VA = "0x1178854")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000865")]
		public int ZIndex
		{
			[Token(Token = "0x6002800")]
			[Address(RVA = "0x117885C", Offset = "0x117885C", VA = "0x117885C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000866")]
		public Vector3 Min
		{
			[Token(Token = "0x6002801")]
			[Address(RVA = "0x1178864", Offset = "0x1178864", VA = "0x1178864")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000867")]
		public Vector3 Max
		{
			[Token(Token = "0x6002802")]
			[Address(RVA = "0x1178870", Offset = "0x1178870", VA = "0x1178870")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000868")]
		public Vector3 Center
		{
			[Token(Token = "0x6002803")]
			[Address(RVA = "0x117887C", Offset = "0x117887C", VA = "0x117887C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002804")]
		[Address(RVA = "0x11788AC", Offset = "0x11788AC", VA = "0x11788AC")]
		public XZGridCell(int xIndex, int zIndex, Vector3 min, Vector3 max, IXZGrid parentGrid)
		{
		}

		[Token(Token = "0x6002805")]
		[Address(RVA = "0x1176D44", Offset = "0x1176D44", VA = "0x1176D44")]
		public static XZGridCell FromPoint(Vector3 point, float cellSizeX, float cellSizeZ, IXZGrid parentGrid)
		{
			return null;
		}

		[Token(Token = "0x6002806")]
		[Address(RVA = "0x117892C", Offset = "0x117892C", VA = "0x117892C")]
		public List<Vector3> GetCenterAndCorners()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20005EB")]
	public class XZGridLookAndFeel : Settings
	{
		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color _lineColor;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _useCellFading;

		[Token(Token = "0x17000869")]
		public Color LineColor
		{
			[Token(Token = "0x6002807")]
			[Address(RVA = "0x1178C90", Offset = "0x1178C90", VA = "0x1178C90")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002808")]
			[Address(RVA = "0x1178C9C", Offset = "0x1178C9C", VA = "0x1178C9C")]
			set
			{
			}
		}

		[Token(Token = "0x1700086A")]
		public bool UseCellFading
		{
			[Token(Token = "0x6002809")]
			[Address(RVA = "0x1178CA8", Offset = "0x1178CA8", VA = "0x1178CA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600280A")]
			[Address(RVA = "0x1178CB0", Offset = "0x1178CB0", VA = "0x1178CB0")]
			set
			{
			}
		}

		[Token(Token = "0x600280B")]
		[Address(RVA = "0x11787F4", Offset = "0x11787F4", VA = "0x11787F4")]
		public XZGridLookAndFeel()
		{
		}
	}
	[Token(Token = "0x20005EC")]
	public class XZGridRayHit
	{
		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private XZGridCell _hitCell;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _hitPoint;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _hitEnter;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _hitNormal;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Plane _hitPlane;

		[Token(Token = "0x1700086B")]
		public XZGridCell HitCell
		{
			[Token(Token = "0x600280C")]
			[Address(RVA = "0x1178CBC", Offset = "0x1178CBC", VA = "0x1178CBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700086C")]
		public Vector3 HitPoint
		{
			[Token(Token = "0x600280D")]
			[Address(RVA = "0x1178CC4", Offset = "0x1178CC4", VA = "0x1178CC4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700086D")]
		public float HitEnter
		{
			[Token(Token = "0x600280E")]
			[Address(RVA = "0x1178CD0", Offset = "0x1178CD0", VA = "0x1178CD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700086E")]
		public Vector3 HitNormal
		{
			[Token(Token = "0x600280F")]
			[Address(RVA = "0x1178CD8", Offset = "0x1178CD8", VA = "0x1178CD8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700086F")]
		public Plane HitPlane
		{
			[Token(Token = "0x6002810")]
			[Address(RVA = "0x1178CE4", Offset = "0x1178CE4", VA = "0x1178CE4")]
			get
			{
				return default(Plane);
			}
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0x1178CF0", Offset = "0x1178CF0", VA = "0x1178CF0")]
		public XZGridRayHit(Ray ray, XZGridCell hitCell, float hitEnter)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005ED")]
	public class XZGridSettings : Settings
	{
		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool _isVisible;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _cellSizeX;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _cellSizeZ;

		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _yOffset;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 _rotationAngles;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _upDownStep;

		[Token(Token = "0x17000870")]
		public bool IsVisible
		{
			[Token(Token = "0x6002812")]
			[Address(RVA = "0x1178E10", Offset = "0x1178E10", VA = "0x1178E10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002813")]
			[Address(RVA = "0x1178E18", Offset = "0x1178E18", VA = "0x1178E18")]
			set
			{
			}
		}

		[Token(Token = "0x17000871")]
		public float CellSizeX
		{
			[Token(Token = "0x6002814")]
			[Address(RVA = "0x1178E24", Offset = "0x1178E24", VA = "0x1178E24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002815")]
			[Address(RVA = "0x1178E2C", Offset = "0x1178E2C", VA = "0x1178E2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000872")]
		public float CellSizeZ
		{
			[Token(Token = "0x6002816")]
			[Address(RVA = "0x1178E40", Offset = "0x1178E40", VA = "0x1178E40")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002817")]
			[Address(RVA = "0x1178E48", Offset = "0x1178E48", VA = "0x1178E48")]
			set
			{
			}
		}

		[Token(Token = "0x17000873")]
		public Vector3 RotationAngles
		{
			[Token(Token = "0x6002818")]
			[Address(RVA = "0x1178E5C", Offset = "0x1178E5C", VA = "0x1178E5C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002819")]
			[Address(RVA = "0x1178E68", Offset = "0x1178E68", VA = "0x1178E68")]
			set
			{
			}
		}

		[Token(Token = "0x17000874")]
		public float YOffset
		{
			[Token(Token = "0x600281A")]
			[Address(RVA = "0x1178E74", Offset = "0x1178E74", VA = "0x1178E74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600281B")]
			[Address(RVA = "0x1178E7C", Offset = "0x1178E7C", VA = "0x1178E7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000875")]
		public float UpDownStep
		{
			[Token(Token = "0x600281C")]
			[Address(RVA = "0x1178E84", Offset = "0x1178E84", VA = "0x1178E84")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600281D")]
			[Address(RVA = "0x1178E8C", Offset = "0x1178E8C", VA = "0x1178E8C")]
			set
			{
			}
		}

		[Token(Token = "0x600281E")]
		[Address(RVA = "0x1178784", Offset = "0x1178784", VA = "0x1178784")]
		public XZGridSettings()
		{
		}
	}
	[Token(Token = "0x20005EE")]
	public interface IHoverableSceneEntityContainer
	{
		[Token(Token = "0x17000876")]
		bool HasHoveredSceneEntity
		{
			[Token(Token = "0x600281F")]
			get;
		}
	}
	[Token(Token = "0x20005EF")]
	public class MeshRayHit
	{
		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _hitTriangleIndex;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3 _hitPoint;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _hitEnter;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _hitNormal;

		[Token(Token = "0x17000877")]
		public int HitTriangleIndex
		{
			[Token(Token = "0x6002820")]
			[Address(RVA = "0x1178EA0", Offset = "0x1178EA0", VA = "0x1178EA0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000878")]
		public Vector3 HitPoint
		{
			[Token(Token = "0x6002821")]
			[Address(RVA = "0x1178EA8", Offset = "0x1178EA8", VA = "0x1178EA8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000879")]
		public float HitEnter
		{
			[Token(Token = "0x6002822")]
			[Address(RVA = "0x1178EB4", Offset = "0x1178EB4", VA = "0x1178EB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700087A")]
		public Vector3 HitNormal
		{
			[Token(Token = "0x6002823")]
			[Address(RVA = "0x1178EBC", Offset = "0x1178EBC", VA = "0x1178EBC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002824")]
		[Address(RVA = "0x1178EC8", Offset = "0x1178EC8", VA = "0x1178EC8")]
		public MeshRayHit(Ray ray, int hitTriangleIndex, float hitEnter, Vector3 hitNormal)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005F0")]
	public class RTCustomObjectInteractionSettings : Settings
	{
		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 _noVolumeObjectSize;

		[Token(Token = "0x1700087B")]
		public Vector3 NoVolumeObjectSize
		{
			[Token(Token = "0x6002825")]
			[Address(RVA = "0x1178FDC", Offset = "0x1178FDC", VA = "0x1178FDC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002826")]
			[Address(RVA = "0x1178FE8", Offset = "0x1178FE8", VA = "0x1178FE8")]
			set
			{
			}
		}

		[Token(Token = "0x6002827")]
		[Address(RVA = "0x1179080", Offset = "0x1179080", VA = "0x1179080")]
		public RTCustomObjectInteractionSettings()
		{
		}
	}
	[Token(Token = "0x20005F1")]
	public delegate void SceneCanRenderCameraIconHandler(Camera camera, YesNoAnswer answer);
	[Token(Token = "0x20005F2")]
	public class RTScene : MonoSingleton<RTScene>
	{
		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SceneCanRenderCameraIconHandler CanRenderCameraIcon;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private YesNoAnswer _yesNoAnswer;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SceneSettings _settings;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SceneLookAndFeel _lookAndFeel;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Camera> _iconRenderIgnoreCamera;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HashSet<GameObject> _ignoredRootObjects;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<IHoverableSceneEntityContainer> _hoverableSceneEntityContainers;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SceneTree _sceneTree;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<GameObject> _rootGameObjects;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Light> _lights;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<ParticleSystem> _particleSystems;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Camera> _cameras;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<GameObject> _childrenAndSelfBuffer;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<GameObjectRayHit> _objectHitBuffer;

		[Token(Token = "0x1700087C")]
		public SceneSettings Settings
		{
			[Token(Token = "0x600282C")]
			[Address(RVA = "0x11791DC", Offset = "0x11791DC", VA = "0x11791DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700087D")]
		public SceneLookAndFeel LookAndFeel
		{
			[Token(Token = "0x600282D")]
			[Address(RVA = "0x11791E4", Offset = "0x11791E4", VA = "0x11791E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600282E")]
		[Address(RVA = "0x11791EC", Offset = "0x11791EC", VA = "0x11791EC")]
		public void SetRootObjectIgnored(GameObject root, bool ignored)
		{
		}

		[Token(Token = "0x600282F")]
		[Address(RVA = "0x1179280", Offset = "0x1179280", VA = "0x1179280")]
		public void OnGameObjectWillBeDestroyed(GameObject gameObject)
		{
		}

		[Token(Token = "0x6002830")]
		[Address(RVA = "0x117962C", Offset = "0x117962C", VA = "0x117962C")]
		public void AddIconRenderIgnoreCamera(Camera camera)
		{
		}

		[Token(Token = "0x6002831")]
		[Address(RVA = "0x11796F8", Offset = "0x11796F8", VA = "0x11796F8")]
		public bool IsIconRenderIgnoreCamera(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x6002832")]
		[Address(RVA = "0x1179750", Offset = "0x1179750", VA = "0x1179750")]
		public AABB CalculateBounds()
		{
			return default(AABB);
		}

		[Token(Token = "0x6002833")]
		[Address(RVA = "0x1179BB4", Offset = "0x1179BB4", VA = "0x1179BB4")]
		public bool IsAnySceneEntityHovered()
		{
			return default(bool);
		}

		[Token(Token = "0x6002834")]
		[Address(RVA = "0x1179DD4", Offset = "0x1179DD4", VA = "0x1179DD4")]
		public void RegisterHoverableSceneEntityContainer(IHoverableSceneEntityContainer container)
		{
		}

		[Token(Token = "0x6002835")]
		[Address(RVA = "0x1179D90", Offset = "0x1179D90", VA = "0x1179D90")]
		public bool IsAnyUIElementHovered()
		{
			return default(bool);
		}

		[Token(Token = "0x6002836")]
		[Address(RVA = "0x11714B0", Offset = "0x11714B0", VA = "0x11714B0")]
		public List<RaycastResult> GetHoveredUIElements()
		{
			return null;
		}

		[Token(Token = "0x6002837")]
		[Address(RVA = "0x1168BDC", Offset = "0x1168BDC", VA = "0x1168BDC")]
		public GameObject[] GetSceneObjects()
		{
			return null;
		}

		[Token(Token = "0x6002838")]
		[Address(RVA = "0x1179EBC", Offset = "0x1179EBC", VA = "0x1179EBC")]
		public bool OverlapBox(OBB obb, List<GameObject> gameObjects)
		{
			return default(bool);
		}

		[Token(Token = "0x6002839")]
		[Address(RVA = "0x117A6B4", Offset = "0x117A6B4", VA = "0x117A6B4")]
		public bool OverlapBox(OBB obb, SceneOverlapFilter overlapFilter, List<GameObject> gameObjects)
		{
			return default(bool);
		}

		[Token(Token = "0x600283A")]
		[Address(RVA = "0x116B0AC", Offset = "0x116B0AC", VA = "0x116B0AC")]
		public SceneRaycastHit Raycast(Ray ray, SceneRaycastPrecision rtRaycastPrecision, SceneRaycastFilter raycastFilter)
		{
			return null;
		}

		[Token(Token = "0x600283B")]
		[Address(RVA = "0x117AAF4", Offset = "0x117AAF4", VA = "0x117AAF4")]
		public bool RaycastAllObjects(Ray ray, SceneRaycastPrecision rtRaycastPrecision, List<GameObjectRayHit> hits)
		{
			return default(bool);
		}

		[Token(Token = "0x600283C")]
		[Address(RVA = "0x117BB04", Offset = "0x117BB04", VA = "0x117BB04")]
		public bool RaycastAllObjectsSorted(Ray ray, SceneRaycastPrecision raycastPresicion, List<GameObjectRayHit> hits)
		{
			return default(bool);
		}

		[Token(Token = "0x600283D")]
		[Address(RVA = "0x117A7F4", Offset = "0x117A7F4", VA = "0x117A7F4")]
		public bool RaycastAllObjectsSorted(Ray ray, SceneRaycastPrecision rtRaycastPrecision, SceneRaycastFilter raycastFilter, List<GameObjectRayHit> hits)
		{
			return default(bool);
		}

		[Token(Token = "0x600283E")]
		[Address(RVA = "0x117BBF4", Offset = "0x117BBF4", VA = "0x117BBF4")]
		public GameObjectRayHit RaycastMeshObject(Ray ray, GameObject meshObject)
		{
			return null;
		}

		[Token(Token = "0x600283F")]
		[Address(RVA = "0x117C0E8", Offset = "0x117C0E8", VA = "0x117C0E8")]
		public GameObjectRayHit RaycastMeshObjectReverseIfFail(Ray ray, GameObject meshObject)
		{
			return null;
		}

		[Token(Token = "0x6002840")]
		[Address(RVA = "0x117C1AC", Offset = "0x117C1AC", VA = "0x117C1AC")]
		public GameObjectRayHit RaycastSpriteObject(Ray ray, GameObject spriteObject)
		{
			return null;
		}

		[Token(Token = "0x6002841")]
		[Address(RVA = "0x117C3F8", Offset = "0x117C3F8", VA = "0x117C3F8")]
		public GameObjectRayHit RaycastTerrainObject(Ray ray, GameObject terrainObject)
		{
			return null;
		}

		[Token(Token = "0x6002842")]
		[Address(RVA = "0x117C54C", Offset = "0x117C54C", VA = "0x117C54C")]
		public GameObjectRayHit RaycastTerrainObject(Ray ray, GameObject terrainObject, TerrainCollider terrainCollider)
		{
			return null;
		}

		[Token(Token = "0x6002843")]
		[Address(RVA = "0x117C638", Offset = "0x117C638", VA = "0x117C638")]
		public GameObjectRayHit RaycastTerrainObjectReverseIfFail(Ray ray, GameObject terrainObject)
		{
			return null;
		}

		[Token(Token = "0x6002844")]
		[Address(RVA = "0x117A92C", Offset = "0x117A92C", VA = "0x117A92C")]
		public XZGridRayHit RaycastSceneGridIfVisible(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x6002845")]
		[Address(RVA = "0x117C6F4", Offset = "0x117C6F4", VA = "0x117C6F4")]
		public void Update_SystemCall()
		{
		}

		[Token(Token = "0x6002846")]
		[Address(RVA = "0x117D158", Offset = "0x117D158", VA = "0x117D158")]
		public void Render_SystemCall(Camera renderCamera)
		{
		}

		[Token(Token = "0x6002847")]
		[Address(RVA = "0x117DAA8", Offset = "0x117DAA8", VA = "0x117DAA8")]
		public RTScene()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005F4")]
	public class SceneLookAndFeel : Settings
	{
		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool _drawLightIcons;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool _drawParticleSystemIcons;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[SerializeField]
		private bool _drawCameraIcons;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _lightIconAlpha;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _particleSystemIconAlpha;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _cameraIconAlpha;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Texture2D _lightIcon;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Texture2D _particleSystemIcon;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Texture2D _cameraIcon;

		[Token(Token = "0x1700087E")]
		public bool DrawLightIcons
		{
			[Token(Token = "0x600284B")]
			[Address(RVA = "0x117E198", Offset = "0x117E198", VA = "0x117E198")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600284C")]
			[Address(RVA = "0x117E1A0", Offset = "0x117E1A0", VA = "0x117E1A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700087F")]
		public bool DrawParticleSystemIcons
		{
			[Token(Token = "0x600284D")]
			[Address(RVA = "0x117E1AC", Offset = "0x117E1AC", VA = "0x117E1AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600284E")]
			[Address(RVA = "0x117E1B4", Offset = "0x117E1B4", VA = "0x117E1B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000880")]
		public bool DrawCameraIcons
		{
			[Token(Token = "0x600284F")]
			[Address(RVA = "0x117E1C0", Offset = "0x117E1C0", VA = "0x117E1C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002850")]
			[Address(RVA = "0x117E1C8", Offset = "0x117E1C8", VA = "0x117E1C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000881")]
		public float LightIconAlpha
		{
			[Token(Token = "0x6002851")]
			[Address(RVA = "0x117E1D4", Offset = "0x117E1D4", VA = "0x117E1D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002852")]
			[Address(RVA = "0x117E1DC", Offset = "0x117E1DC", VA = "0x117E1DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000882")]
		public float ParticleSystemIconAlpha
		{
			[Token(Token = "0x6002853")]
			[Address(RVA = "0x117E1F8", Offset = "0x117E1F8", VA = "0x117E1F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002854")]
			[Address(RVA = "0x117E200", Offset = "0x117E200", VA = "0x117E200")]
			set
			{
			}
		}

		[Token(Token = "0x17000883")]
		public float CameraIconAlpha
		{
			[Token(Token = "0x6002855")]
			[Address(RVA = "0x117E21C", Offset = "0x117E21C", VA = "0x117E21C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002856")]
			[Address(RVA = "0x117E224", Offset = "0x117E224", VA = "0x117E224")]
			set
			{
			}
		}

		[Token(Token = "0x17000884")]
		public Texture2D LightIcon
		{
			[Token(Token = "0x6002857")]
			[Address(RVA = "0x117E240", Offset = "0x117E240", VA = "0x117E240")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002858")]
			[Address(RVA = "0x117E248", Offset = "0x117E248", VA = "0x117E248")]
			set
			{
			}
		}

		[Token(Token = "0x17000885")]
		public Texture2D ParticleSystemIcon
		{
			[Token(Token = "0x6002859")]
			[Address(RVA = "0x117E250", Offset = "0x117E250", VA = "0x117E250")]
			get
			{
				return null;
			}
			[Token(Token = "0x600285A")]
			[Address(RVA = "0x117E258", Offset = "0x117E258", VA = "0x117E258")]
			set
			{
			}
		}

		[Token(Token = "0x17000886")]
		public Texture2D CameraIcon
		{
			[Token(Token = "0x600285B")]
			[Address(RVA = "0x117E260", Offset = "0x117E260", VA = "0x117E260")]
			get
			{
				return null;
			}
			[Token(Token = "0x600285C")]
			[Address(RVA = "0x117E268", Offset = "0x117E268", VA = "0x117E268")]
			set
			{
			}
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0x117DEF0", Offset = "0x117DEF0", VA = "0x117DEF0")]
		public SceneLookAndFeel()
		{
		}
	}
	[Token(Token = "0x20005F5")]
	public class SceneOverlapFilter
	{
		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<GameObjectType> _allowedObjectTypes;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<GameObject> _ignoreObjects;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _layerMask;

		[Token(Token = "0x17000887")]
		public List<GameObjectType> AllowedObjectTypes
		{
			[Token(Token = "0x600285E")]
			[Address(RVA = "0x117E270", Offset = "0x117E270", VA = "0x117E270")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000888")]
		public List<GameObject> IgnoreObjects
		{
			[Token(Token = "0x600285F")]
			[Address(RVA = "0x117E278", Offset = "0x117E278", VA = "0x117E278")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000889")]
		public int LayerMask
		{
			[Token(Token = "0x6002860")]
			[Address(RVA = "0x117E280", Offset = "0x117E280", VA = "0x117E280")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002861")]
			[Address(RVA = "0x117E288", Offset = "0x117E288", VA = "0x117E288")]
			set
			{
			}
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0x117A74C", Offset = "0x117A74C", VA = "0x117A74C")]
		public void FilterOverlaps(List<GameObject> gameObjects)
		{
		}

		[Token(Token = "0x6002863")]
		[Address(RVA = "0x117E290", Offset = "0x117E290", VA = "0x117E290")]
		public SceneOverlapFilter()
		{
		}
	}
	[Token(Token = "0x20005F6")]
	public enum ScenePhysicsMode
	{
		[Token(Token = "0x4001ADF")]
		UnityColliders = 1,
		[Token(Token = "0x4001AE0")]
		RLD
	}
	[Token(Token = "0x20005F7")]
	public class SceneRaycastFilter
	{
		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<GameObjectType> _allowedObjectTypes;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<GameObject> _ignoreObjects;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _layerMask;

		[Token(Token = "0x1700088A")]
		public List<GameObjectType> AllowedObjectTypes
		{
			[Token(Token = "0x6002865")]
			[Address(RVA = "0x117E46C", Offset = "0x117E46C", VA = "0x117E46C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700088B")]
		public List<GameObject> IgnoreObjects
		{
			[Token(Token = "0x6002866")]
			[Address(RVA = "0x117E474", Offset = "0x117E474", VA = "0x117E474")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700088C")]
		public int LayerMask
		{
			[Token(Token = "0x6002867")]
			[Address(RVA = "0x117E47C", Offset = "0x117E47C", VA = "0x117E47C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002868")]
			[Address(RVA = "0x117E484", Offset = "0x117E484", VA = "0x117E484")]
			set
			{
			}
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0x117BB4C", Offset = "0x117BB4C", VA = "0x117BB4C")]
		public void FilterHits(List<GameObjectRayHit> hits)
		{
		}

		[Token(Token = "0x600286A")]
		[Address(RVA = "0x116AFCC", Offset = "0x116AFCC", VA = "0x116AFCC")]
		public SceneRaycastFilter()
		{
		}
	}
	[Token(Token = "0x20005F8")]
	public class SceneRaycastHit
	{
		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObjectRayHit _objectHit;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private XZGridRayHit _gridHit;

		[Token(Token = "0x1700088D")]
		public bool WasAnythingHit
		{
			[Token(Token = "0x600286C")]
			[Address(RVA = "0x116B1BC", Offset = "0x116B1BC", VA = "0x116B1BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700088E")]
		public bool WasAnObjectHit
		{
			[Token(Token = "0x600286D")]
			[Address(RVA = "0x116B1DC", Offset = "0x116B1DC", VA = "0x116B1DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700088F")]
		public bool WasGridHit
		{
			[Token(Token = "0x600286E")]
			[Address(RVA = "0x117E590", Offset = "0x117E590", VA = "0x117E590")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000890")]
		public GameObjectRayHit ObjectHit
		{
			[Token(Token = "0x600286F")]
			[Address(RVA = "0x117E5A0", Offset = "0x117E5A0", VA = "0x117E5A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000891")]
		public XZGridRayHit GridHit
		{
			[Token(Token = "0x6002870")]
			[Address(RVA = "0x117E5A8", Offset = "0x117E5A8", VA = "0x117E5A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0x117AAB0", Offset = "0x117AAB0", VA = "0x117AAB0")]
		public SceneRaycastHit(GameObjectRayHit objectRayHit, XZGridRayHit gridRayHit)
		{
		}
	}
	[Token(Token = "0x20005F9")]
	public enum SceneRaycastPrecision
	{
		[Token(Token = "0x4001AE7")]
		BestFit,
		[Token(Token = "0x4001AE8")]
		Box
	}
	[Serializable]
	[Token(Token = "0x20005FA")]
	public class SceneSettings : Settings
	{
		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private ScenePhysicsMode _physicsMode;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _noVolumeObjectSize;

		[Token(Token = "0x17000892")]
		public ScenePhysicsMode PhysicsMode
		{
			[Token(Token = "0x6002872")]
			[Address(RVA = "0x117E5B0", Offset = "0x117E5B0", VA = "0x117E5B0")]
			get
			{
				return default(ScenePhysicsMode);
			}
			[Token(Token = "0x6002873")]
			[Address(RVA = "0x117E5B8", Offset = "0x117E5B8", VA = "0x117E5B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000893")]
		public float NoVolumeObjectSize
		{
			[Token(Token = "0x6002874")]
			[Address(RVA = "0x117E5E4", Offset = "0x117E5E4", VA = "0x117E5E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002875")]
			[Address(RVA = "0x117E5EC", Offset = "0x117E5EC", VA = "0x117E5EC")]
			set
			{
			}
		}

		[Token(Token = "0x6002876")]
		[Address(RVA = "0x117DEDC", Offset = "0x117DEDC", VA = "0x117DEDC")]
		public SceneSettings()
		{
		}
	}
	[Token(Token = "0x20005FB")]
	public class SceneTree
	{
		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SphereTree<GameObject> _objectTree;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<GameObject, SphereTreeNode<GameObject>> _objectToNode;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<SphereTreeNodeRayHit<GameObject>> _nodeHitBuffer;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<SphereTreeNode<GameObject>> _nodeBuffer;

		[Token(Token = "0x6002877")]
		[Address(RVA = "0x117BE18", Offset = "0x117BE18", VA = "0x117BE18")]
		public GameObjectRayHit RaycastMeshObject(Ray ray, GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6002878")]
		[Address(RVA = "0x117C1F4", Offset = "0x117C1F4", VA = "0x117C1F4")]
		public GameObjectRayHit RaycastSpriteObject(Ray ray, GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0x117AC88", Offset = "0x117AC88", VA = "0x117AC88")]
		public bool RaycastAll(Ray ray, SceneRaycastPrecision raycastPresicion, List<GameObjectRayHit> hits)
		{
			return default(bool);
		}

		[Token(Token = "0x600287A")]
		[Address(RVA = "0x117A23C", Offset = "0x117A23C", VA = "0x117A23C")]
		public bool OverlapBox(OBB obb, List<GameObject> gameObjects)
		{
			return default(bool);
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0x117CC24", Offset = "0x117CC24", VA = "0x117CC24")]
		public bool IsObjectRegistered(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600287C")]
		[Address(RVA = "0x117CC7C", Offset = "0x117CC7C", VA = "0x117CC7C")]
		public bool RegisterObject(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0x1179514", Offset = "0x1179514", VA = "0x1179514")]
		public bool UnregisterObject(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600287E")]
		[Address(RVA = "0x117CED4", Offset = "0x117CED4", VA = "0x117CED4")]
		public void OnObjectTransformChanged(Transform objectTransform)
		{
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0x117E738", Offset = "0x117E738", VA = "0x117E738")]
		public void RemoveNodesWithNullObjects()
		{
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0x117E9C8", Offset = "0x117E9C8", VA = "0x117E9C8")]
		public void DebugDraw()
		{
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0x117E624", Offset = "0x117E624", VA = "0x117E624")]
		private bool CanRegisterObject(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0x117DF1C", Offset = "0x117DF1C", VA = "0x117DF1C")]
		public SceneTree()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20005FC")]
	public class SerializableDictionary<SerializedKeyType, SerializedValueType> : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<SerializedKeyType, SerializedValueType> _dictionary;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<SerializedKeyType> _serializedKeys;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<SerializedValueType> _serializedValues;

		[Token(Token = "0x17000894")]
		public Dictionary<SerializedKeyType, SerializedValueType> Dictionary
		{
			[Token(Token = "0x6002883")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000895")]
		public SerializedValueType this[SerializedKeyType index]
		{
			[Token(Token = "0x6002884")]
			get
			{
				return (SerializedValueType)null;
			}
			[Token(Token = "0x6002885")]
			set
			{
			}
		}

		[Token(Token = "0x6002886")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002887")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002888")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002889")]
		public void Add(SerializedKeyType key, SerializedValueType value)
		{
		}

		[Token(Token = "0x600288A")]
		public bool ContainsKey(SerializedKeyType key)
		{
			return default(bool);
		}

		[Token(Token = "0x600288B")]
		public void Copy(SerializableDictionary<SerializedKeyType, SerializedValueType> other)
		{
		}

		[Token(Token = "0x600288C")]
		public void RemoveNullKeys()
		{
		}

		[Token(Token = "0x600288D")]
		public SerializableDictionary()
		{
		}
	}
	[Token(Token = "0x20005FE")]
	public class InputDevicePlaneDragSession3D
	{
		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Plane _plane;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera _raycastCamera;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _dragPoint;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 _dragDelta;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 _accumDrag;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IInputDevice _inputDevice;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isActive;

		[Token(Token = "0x17000896")]
		public Plane Plane
		{
			[Token(Token = "0x6002893")]
			[Address(RVA = "0x117EA18", Offset = "0x117EA18", VA = "0x117EA18")]
			get
			{
				return default(Plane);
			}
			[Token(Token = "0x6002894")]
			[Address(RVA = "0x117EA24", Offset = "0x117EA24", VA = "0x117EA24")]
			set
			{
			}
		}

		[Token(Token = "0x17000897")]
		public Camera RaycastCamera
		{
			[Token(Token = "0x6002895")]
			[Address(RVA = "0x117EA3C", Offset = "0x117EA3C", VA = "0x117EA3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002896")]
			[Address(RVA = "0x117EA44", Offset = "0x117EA44", VA = "0x117EA44")]
			set
			{
			}
		}

		[Token(Token = "0x17000898")]
		public Vector3 DragPoint
		{
			[Token(Token = "0x6002897")]
			[Address(RVA = "0x117EA58", Offset = "0x117EA58", VA = "0x117EA58")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000899")]
		public Vector3 DragDelta
		{
			[Token(Token = "0x6002898")]
			[Address(RVA = "0x117EA64", Offset = "0x117EA64", VA = "0x117EA64")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700089A")]
		public Vector3 AccumDrag
		{
			[Token(Token = "0x6002899")]
			[Address(RVA = "0x117EA70", Offset = "0x117EA70", VA = "0x117EA70")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700089B")]
		public bool IsActive
		{
			[Token(Token = "0x600289A")]
			[Address(RVA = "0x117EA7C", Offset = "0x117EA7C", VA = "0x117EA7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0x117EA84", Offset = "0x117EA84", VA = "0x117EA84")]
		public InputDevicePlaneDragSession3D(IInputDevice inputDevice, Camera raycastCamera)
		{
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0x117EAC8", Offset = "0x117EAC8", VA = "0x117EAC8")]
		public bool Begin()
		{
			return default(bool);
		}

		[Token(Token = "0x600289D")]
		[Address(RVA = "0x117EC70", Offset = "0x117EC70", VA = "0x117EC70")]
		public void End()
		{
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0x117ED00", Offset = "0x117ED00", VA = "0x117ED00")]
		public bool Update()
		{
			return default(bool);
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0x117EB54", Offset = "0x117EB54", VA = "0x117EB54")]
		private bool UpdateDragPoint()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20005FF")]
	public class InputDeviceScreenDragSession
	{
		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2 _dragPoint;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 _dragDelta;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2 _accumDrag;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IInputDevice _inputDevice;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isActive;

		[Token(Token = "0x1700089C")]
		public Vector2 DragPoint
		{
			[Token(Token = "0x60028A0")]
			[Address(RVA = "0x117EDBC", Offset = "0x117EDBC", VA = "0x117EDBC")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700089D")]
		public Vector2 DragDelta
		{
			[Token(Token = "0x60028A1")]
			[Address(RVA = "0x117EDC4", Offset = "0x117EDC4", VA = "0x117EDC4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700089E")]
		public Vector2 AccumDrag
		{
			[Token(Token = "0x60028A2")]
			[Address(RVA = "0x117EDCC", Offset = "0x117EDCC", VA = "0x117EDCC")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700089F")]
		public bool IsActive
		{
			[Token(Token = "0x60028A3")]
			[Address(RVA = "0x117EDD4", Offset = "0x117EDD4", VA = "0x117EDD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0x117EDDC", Offset = "0x117EDDC", VA = "0x117EDDC")]
		public InputDeviceScreenDragSession(IInputDevice inputDevice)
		{
		}

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0x117EE0C", Offset = "0x117EE0C", VA = "0x117EE0C")]
		public bool Begin()
		{
			return default(bool);
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0x117EF5C", Offset = "0x117EF5C", VA = "0x117EF5C")]
		public void End()
		{
		}

		[Token(Token = "0x60028A7")]
		[Address(RVA = "0x117EFD0", Offset = "0x117EFD0", VA = "0x117EFD0")]
		public bool Update()
		{
			return default(bool);
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0x117EE3C", Offset = "0x117EE3C", VA = "0x117EE3C")]
		private bool UpdateDragPoint()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000600")]
	public class Object2ObjectSnapHotkeys : Settings
	{
		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Hotkeys _toggleSnap;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Hotkeys _toggleSitBelowSurface;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Hotkeys _enableMoreControl;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Hotkeys _enableFlexiSnap;

		[Token(Token = "0x170008A0")]
		public Hotkeys ToggleSnap
		{
			[Token(Token = "0x60028A9")]
			[Address(RVA = "0x117F068", Offset = "0x117F068", VA = "0x117F068")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170008A1")]
		public Hotkeys ToggleSitBelowSurface
		{
			[Token(Token = "0x60028AA")]
			[Address(RVA = "0x117F070", Offset = "0x117F070", VA = "0x117F070")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170008A2")]
		public Hotkeys EnableMoreControl
		{
			[Token(Token = "0x60028AB")]
			[Address(RVA = "0x117F078", Offset = "0x117F078", VA = "0x117F078")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170008A3")]
		public Hotkeys EnableFlexiSnap
		{
			[Token(Token = "0x60028AC")]
			[Address(RVA = "0x117F080", Offset = "0x117F080", VA = "0x117F080")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0x117F088", Offset = "0x117F088", VA = "0x117F088")]
		public Object2ObjectSnapHotkeys()
		{
		}
	}
	[Token(Token = "0x2000601")]
	public delegate void Object2ObjectSnapSessionBeginHandler();
	[Token(Token = "0x2000602")]
	public delegate void Object2ObjectSnapSessionEndHandler();
	[Token(Token = "0x2000603")]
	public class Object2ObjectSnapSession
	{
		[Token(Token = "0x2000604")]
		private enum State
		{
			[Token(Token = "0x4001B12")]
			Inactive,
			[Token(Token = "0x4001B13")]
			Active
		}

		[Token(Token = "0x2000605")]
		private enum SitSurfaceType
		{
			[Token(Token = "0x4001B15")]
			Invalid,
			[Token(Token = "0x4001B16")]
			Grid,
			[Token(Token = "0x4001B17")]
			Object
		}

		[Token(Token = "0x2000606")]
		private struct SitSurface
		{
			[Token(Token = "0x4001B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SitSurfaceType SurfaceType;

			[Token(Token = "0x4001B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 SitPoint;

			[Token(Token = "0x4001B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Plane SitPlane;
		}

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private State _state;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> _targetObjects;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<GameObject> _targetParents;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AABB _targetAABB;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private SitSurface _sitSurface;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _sitBelowSurface;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Object2ObjectSnapSettings _sharedSettings;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Object2ObjectSnapHotkeys _sharedHotkeys;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<LocalTransformSnapshot> _preTargetTransformSnapshots;

		[Token(Token = "0x170008A4")]
		public Object2ObjectSnapSettings SharedSettings
		{
			[Token(Token = "0x60028BA")]
			[Address(RVA = "0x117F6C4", Offset = "0x117F6C4", VA = "0x117F6C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028BB")]
			[Address(RVA = "0x117F6CC", Offset = "0x117F6CC", VA = "0x117F6CC")]
			set
			{
			}
		}

		[Token(Token = "0x170008A5")]
		public Object2ObjectSnapHotkeys SharedHotkeys
		{
			[Token(Token = "0x60028BC")]
			[Address(RVA = "0x117F6DC", Offset = "0x117F6DC", VA = "0x117F6DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028BD")]
			[Address(RVA = "0x117F6E4", Offset = "0x117F6E4", VA = "0x117F6E4")]
			set
			{
			}
		}

		[Token(Token = "0x170008A6")]
		public bool IsActive
		{
			[Token(Token = "0x60028BE")]
			[Address(RVA = "0x117F6F4", Offset = "0x117F6F4", VA = "0x117F6F4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000053")]
		public event Object2ObjectSnapSessionBeginHandler SessionBegin
		{
			[Token(Token = "0x60028B6")]
			[Address(RVA = "0x117F454", Offset = "0x117F454", VA = "0x117F454")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60028B7")]
			[Address(RVA = "0x117F4F0", Offset = "0x117F4F0", VA = "0x117F4F0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000054")]
		public event Object2ObjectSnapSessionEndHandler SessionEnd
		{
			[Token(Token = "0x60028B8")]
			[Address(RVA = "0x117F58C", Offset = "0x117F58C", VA = "0x117F58C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60028B9")]
			[Address(RVA = "0x117F628", Offset = "0x117F628", VA = "0x117F628")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60028BF")]
		[Address(RVA = "0x117F704", Offset = "0x117F704", VA = "0x117F704")]
		public void Update(IEnumerable<GameObject> targetObjects)
		{
		}

		[Token(Token = "0x60028C0")]
		[Address(RVA = "0x117FA6C", Offset = "0x117FA6C", VA = "0x117FA6C")]
		public void End()
		{
		}

		[Token(Token = "0x60028C1")]
		[Address(RVA = "0x117F894", Offset = "0x117F894", VA = "0x117F894")]
		private bool Begin(IEnumerable<GameObject> targetObjects)
		{
			return default(bool);
		}

		[Token(Token = "0x60028C2")]
		[Address(RVA = "0x1180010", Offset = "0x1180010", VA = "0x1180010")]
		private void SnapTargets()
		{
		}

		[Token(Token = "0x60028C3")]
		[Address(RVA = "0x118048C", Offset = "0x118048C", VA = "0x118048C")]
		private bool CalculateTargetAABB()
		{
			return default(bool);
		}

		[Token(Token = "0x60028C4")]
		[Address(RVA = "0x117FB90", Offset = "0x117FB90", VA = "0x117FB90")]
		private bool IdentifySitSurface()
		{
			return default(bool);
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0x1180524", Offset = "0x1180524", VA = "0x1180524")]
		public Object2ObjectSnapSession()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000607")]
	public class Object2ObjectSnapSettings : Settings
	{
		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int _snapDestinationLayers;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _canClimbObjects;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _snapRadius;

		[Token(Token = "0x170008A7")]
		public int SnapDestinationLayers
		{
			[Token(Token = "0x60028C6")]
			[Address(RVA = "0x118052C", Offset = "0x118052C", VA = "0x118052C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60028C7")]
			[Address(RVA = "0x1180534", Offset = "0x1180534", VA = "0x1180534")]
			set
			{
			}
		}

		[Token(Token = "0x170008A8")]
		public bool CanClimbObjects
		{
			[Token(Token = "0x60028C8")]
			[Address(RVA = "0x118053C", Offset = "0x118053C", VA = "0x118053C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028C9")]
			[Address(RVA = "0x1180544", Offset = "0x1180544", VA = "0x1180544")]
			set
			{
			}
		}

		[Token(Token = "0x170008A9")]
		public float SnapRadius
		{
			[Token(Token = "0x60028CA")]
			[Address(RVA = "0x1180550", Offset = "0x1180550", VA = "0x1180550")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60028CB")]
			[Address(RVA = "0x1180558", Offset = "0x1180558", VA = "0x1180558")]
			set
			{
			}
		}

		[Token(Token = "0x60028CC")]
		[Address(RVA = "0x1180568", Offset = "0x1180568", VA = "0x1180568")]
		public Object2ObjectSnapSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000608")]
	public class ObjectGrabHotkeys : Settings
	{
		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Hotkeys _toggleGrab;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Hotkeys _enableRotation;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Hotkeys _enableRotationAroundAnchor;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Hotkeys _enableScaling;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Hotkeys _enableOffsetFromSurface;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Hotkeys _enableAnchorAdjust;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Hotkeys _enableOffsetFromAnchor;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Hotkeys _nextAlignmentAxis;

		[Token(Token = "0x170008AA")]
		public Hotkeys ToggleGrab
		{
			[Token(Token = "0x60028CD")]
			[Address(RVA = "0x118058C", Offset = "0x118058C", VA = "0x118058C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170008AB")]
		public Hotkeys EnableRotation
		{
			[Token(Token = "0x60028CE")]
			[Address(RVA = "0x1180594", Offset = "0x1180594", VA = "0x1180594")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170008AC")]
		public Hotkeys EnableRotationAroundAnchor
		{
			[Token(Token = "0x60028CF")]
			[Address(RVA = "0x118059C", Offset = "0x118059C", VA = "0x118059C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170008AD")]
		public Hotkeys EnableScaling
		{
			[Token(Token = "0x60028D0")]
			[Address(RVA = "0x11805A4", Offset = "0x11805A4", VA = "0x11805A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170008AE")]
		public Hotkeys EnableOffsetFromSurface
		{
			[Token(Token = "0x60028D1")]
			[Address(RVA = "0x11805AC", Offset = "0x11805AC", VA = "0x11805AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170008AF")]
		public Hotkeys EnableAnchorAdjust
		{
			[Token(Token = "0x60028D2")]
			[Address(RVA = "0x11805B4", Offset = "0x11805B4", VA = "0x11805B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170008B0")]
		public Hotkeys EnableOffsetFromAnchor
		{
			[Token(Token = "0x60028D3")]
			[Address(RVA = "0x11805BC", Offset = "0x11805BC", VA = "0x11805BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170008B1")]
		public Hotkeys NextAlignmentAxis
		{
			[Token(Token = "0x60028D4")]
			[Address(RVA = "0x11805C4", Offset = "0x11805C4", VA = "0x11805C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028D5")]
		[Address(RVA = "0x11805CC", Offset = "0x11805CC", VA = "0x11805CC")]
		public ObjectGrabHotkeys()
		{
		}

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0x11808E8", Offset = "0x11808E8", VA = "0x11808E8")]
		private void EstablishPotentialOverlaps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000609")]
	public class ObjectGrabLookAndFeel : Settings
	{
		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool _drawAnchorLines;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color _anchorLineColor;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _drawObjectPosTicks;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[SerializeField]
		private bool _drawAnchorPosTick;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color _objectPosTickColor;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Color _anchorPosTickColor;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _objectPosTickSize;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float _anchorPosTickSize;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool _drawObjectBoxes;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Color _objectBoxWireColor;

		[Token(Token = "0x170008B2")]
		public bool DrawAnchorLines
		{
			[Token(Token = "0x60028D7")]
			[Address(RVA = "0x1180BC0", Offset = "0x1180BC0", VA = "0x1180BC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028D8")]
			[Address(RVA = "0x1180BC8", Offset = "0x1180BC8", VA = "0x1180BC8")]
			set
			{
			}
		}

		[Token(Token = "0x170008B3")]
		public Color AnchorLineColor
		{
			[Token(Token = "0x60028D9")]
			[Address(RVA = "0x1180BD4", Offset = "0x1180BD4", VA = "0x1180BD4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60028DA")]
			[Address(RVA = "0x1180BE0", Offset = "0x1180BE0", VA = "0x1180BE0")]
			set
			{
			}
		}

		[Token(Token = "0x170008B4")]
		public bool DrawObjectPosTicks
		{
			[Token(Token = "0x60028DB")]
			[Address(RVA = "0x1180BEC", Offset = "0x1180BEC", VA = "0x1180BEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028DC")]
			[Address(RVA = "0x1180BF4", Offset = "0x1180BF4", VA = "0x1180BF4")]
			set
			{
			}
		}

		[Token(Token = "0x170008B5")]
		public bool DrawAnchorPosTick
		{
			[Token(Token = "0x60028DD")]
			[Address(RVA = "0x1180C00", Offset = "0x1180C00", VA = "0x1180C00")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028DE")]
			[Address(RVA = "0x1180C08", Offset = "0x1180C08", VA = "0x1180C08")]
			set
			{
			}
		}

		[Token(Token = "0x170008B6")]
		public Color ObjectPosTickColor
		{
			[Token(Token = "0x60028DF")]
			[Address(RVA = "0x1180C14", Offset = "0x1180C14", VA = "0x1180C14")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60028E0")]
			[Address(RVA = "0x1180C20", Offset = "0x1180C20", VA = "0x1180C20")]
			set
			{
			}
		}

		[Token(Token = "0x170008B7")]
		public float ObjectPosTickSize
		{
			[Token(Token = "0x60028E1")]
			[Address(RVA = "0x1180C2C", Offset = "0x1180C2C", VA = "0x1180C2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60028E2")]
			[Address(RVA = "0x1180C34", Offset = "0x1180C34", VA = "0x1180C34")]
			set
			{
			}
		}

		[Token(Token = "0x170008B8")]
		public Color AnchorPosTickColor
		{
			[Token(Token = "0x60028E3")]
			[Address(RVA = "0x1180C44", Offset = "0x1180C44", VA = "0x1180C44")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60028E4")]
			[Address(RVA = "0x1180C50", Offset = "0x1180C50", VA = "0x1180C50")]
			set
			{
			}
		}

		[Token(Token = "0x170008B9")]
		public float AnchorPosTickSize
		{
			[Token(Token = "0x60028E5")]
			[Address(RVA = "0x1180C5C", Offset = "0x1180C5C", VA = "0x1180C5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60028E6")]
			[Address(RVA = "0x1180C64", Offset = "0x1180C64", VA = "0x1180C64")]
			set
			{
			}
		}

		[Token(Token = "0x170008BA")]
		public bool DrawObjectBoxes
		{
			[Token(Token = "0x60028E7")]
			[Address(RVA = "0x1180C74", Offset = "0x1180C74", VA = "0x1180C74")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60028E8")]
			[Address(RVA = "0x1180C7C", Offset = "0x1180C7C", VA = "0x1180C7C")]
			set
			{
			}
		}

		[Token(Token = "0x170008BB")]
		public Color ObjectBoxWireColor
		{
			[Token(Token = "0x60028E9")]
			[Address(RVA = "0x1180C88", Offset = "0x1180C88", VA = "0x1180C88")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60028EA")]
			[Address(RVA = "0x1180C94", Offset = "0x1180C94", VA = "0x1180C94")]
			set
			{
			}
		}

		[Token(Token = "0x60028EB")]
		[Address(RVA = "0x1180CA0", Offset = "0x1180CA0", VA = "0x1180CA0")]
		public ObjectGrabLookAndFeel()
		{
		}
	}
	[Token(Token = "0x200060A")]
	public delegate void ObjectGrabSessionBeginHandler();
	[Token(Token = "0x200060B")]
	public delegate void ObjectGrabSessionEndHandler();
	[Token(Token = "0x200060C")]
	public class DeviceObjectGrabSession
	{
		[Token(Token = "0x200060D")]
		private enum State
		{
			[Token(Token = "0x4001B3D")]
			Inactive,
			[Token(Token = "0x4001B3E")]
			ActiveSnapToSurface,
			[Token(Token = "0x4001B3F")]
			ActiveRotate,
			[Token(Token = "0x4001B40")]
			ActiveRotateAroundAnchor,
			[Token(Token = "0x4001B41")]
			ActiveScale,
			[Token(Token = "0x4001B42")]
			ActiveOffsetFromSurface,
			[Token(Token = "0x4001B43")]
			ActiveAnchorAdjust,
			[Token(Token = "0x4001B44")]
			ActiveOffsetFromAnchor
		}

		[Token(Token = "0x200060E")]
		public enum GrabSurfaceType
		{
			[Token(Token = "0x4001B46")]
			Invalid,
			[Token(Token = "0x4001B47")]
			Mesh,
			[Token(Token = "0x4001B48")]
			SphericalMesh,
			[Token(Token = "0x4001B49")]
			UnityTerrain,
			[Token(Token = "0x4001B4A")]
			TerrainMesh,
			[Token(Token = "0x4001B4B")]
			Grid
		}

		[Token(Token = "0x200060F")]
		private struct GrabSurfaceInfo
		{
			[Token(Token = "0x4001B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GrabSurfaceType SurfaceType;

			[Token(Token = "0x4001B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 AnchorPoint;

			[Token(Token = "0x4001B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 AnchorNormal;

			[Token(Token = "0x4001B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Plane AnchorPlane;

			[Token(Token = "0x4001B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SceneRaycastHit SceneRaycastHit;
		}

		[Token(Token = "0x2000610")]
		private class GrabTarget
		{
			[Token(Token = "0x4001B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private GameObject _gameObject;

			[Token(Token = "0x4001B52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Transform _transform;

			[Token(Token = "0x4001B53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 AnchorVector;

			[Token(Token = "0x4001B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 WorldScaleSnapshot;

			[Token(Token = "0x4001B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Vector3 AnchorVectorSnapshot;

			[Token(Token = "0x4001B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public Plane SittingPlane;

			[Token(Token = "0x4001B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Vector3 SittingPoint;

			[Token(Token = "0x4001B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public float OffsetFromSurface;

			[Token(Token = "0x170008C0")]
			public GameObject GameObject
			{
				[Token(Token = "0x6002911")]
				[Address(RVA = "0x1184C1C", Offset = "0x1184C1C", VA = "0x1184C1C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170008C1")]
			public Transform Transform
			{
				[Token(Token = "0x6002912")]
				[Address(RVA = "0x1184C24", Offset = "0x1184C24", VA = "0x1184C24")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002913")]
			[Address(RVA = "0x1184C2C", Offset = "0x1184C2C", VA = "0x1184C2C")]
			public GrabTarget(GameObject parentObject)
			{
			}
		}

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private State _state;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ObjectGrabSettings _sharedSettings;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ObjectGrabHotkeys _sharedHotkeys;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ObjectGrabLookAndFeel _sharedLookAndFeel;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<GameObject> _targetParents;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GrabTarget> _grabTargets;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabSurfaceInfo _grabSurfaceInfo;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _deltaCaptureId;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private TransformAxis[] _possibleAlignmentAxes;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<LocalTransformSnapshot> _preTargetTransformSnapshots;

		[Token(Token = "0x170008BC")]
		public ObjectGrabSettings SharedSettings
		{
			[Token(Token = "0x60028F8")]
			[Address(RVA = "0x11811C4", Offset = "0x11811C4", VA = "0x11811C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028F9")]
			[Address(RVA = "0x11811CC", Offset = "0x11811CC", VA = "0x11811CC")]
			set
			{
			}
		}

		[Token(Token = "0x170008BD")]
		public ObjectGrabHotkeys SharedHotkeys
		{
			[Token(Token = "0x60028FA")]
			[Address(RVA = "0x11811DC", Offset = "0x11811DC", VA = "0x11811DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028FB")]
			[Address(RVA = "0x11811E4", Offset = "0x11811E4", VA = "0x11811E4")]
			set
			{
			}
		}

		[Token(Token = "0x170008BE")]
		public ObjectGrabLookAndFeel SharedLookAndFeel
		{
			[Token(Token = "0x60028FC")]
			[Address(RVA = "0x11811F4", Offset = "0x11811F4", VA = "0x11811F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028FD")]
			[Address(RVA = "0x11811FC", Offset = "0x11811FC", VA = "0x11811FC")]
			set
			{
			}
		}

		[Token(Token = "0x170008BF")]
		public bool IsActive
		{
			[Token(Token = "0x60028FE")]
			[Address(RVA = "0x118120C", Offset = "0x118120C", VA = "0x118120C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000055")]
		public event ObjectGrabSessionBeginHandler SessionBegin
		{
			[Token(Token = "0x60028F4")]
			[Address(RVA = "0x1180F54", Offset = "0x1180F54", VA = "0x1180F54")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60028F5")]
			[Address(RVA = "0x1180FF0", Offset = "0x1180FF0", VA = "0x1180FF0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000056")]
		public event ObjectGrabSessionEndHandler SessionEnd
		{
			[Token(Token = "0x60028F6")]
			[Address(RVA = "0x118108C", Offset = "0x118108C", VA = "0x118108C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x60028F7")]
			[Address(RVA = "0x1181128", Offset = "0x1181128", VA = "0x1181128")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x60028FF")]
		[Address(RVA = "0x118121C", Offset = "0x118121C", VA = "0x118121C")]
		public void Render(Camera renderCamera)
		{
		}

		[Token(Token = "0x6002900")]
		[Address(RVA = "0x1181A24", Offset = "0x1181A24", VA = "0x1181A24")]
		public void Update(IEnumerable<GameObject> targetObjects)
		{
		}

		[Token(Token = "0x6002901")]
		[Address(RVA = "0x11821BC", Offset = "0x11821BC", VA = "0x11821BC")]
		public void End()
		{
		}

		[Token(Token = "0x6002902")]
		[Address(RVA = "0x11820A4", Offset = "0x11820A4", VA = "0x11820A4")]
		private bool Begin(IEnumerable<GameObject> targetObjects)
		{
			return default(bool);
		}

		[Token(Token = "0x6002903")]
		[Address(RVA = "0x118324C", Offset = "0x118324C", VA = "0x118324C")]
		private void SnapTargetsToSurface()
		{
		}

		[Token(Token = "0x6002904")]
		[Address(RVA = "0x1183628", Offset = "0x1183628", VA = "0x1183628")]
		private void RotateTargets()
		{
		}

		[Token(Token = "0x6002905")]
		[Address(RVA = "0x1183A50", Offset = "0x1183A50", VA = "0x1183A50")]
		private void RotateTargetsAroundAnchor()
		{
		}

		[Token(Token = "0x6002906")]
		[Address(RVA = "0x1183F8C", Offset = "0x1183F8C", VA = "0x1183F8C")]
		private void ScaleTargets()
		{
		}

		[Token(Token = "0x6002907")]
		[Address(RVA = "0x11842FC", Offset = "0x11842FC", VA = "0x11842FC")]
		private void OffsetTargetsFromSurface()
		{
		}

		[Token(Token = "0x6002908")]
		[Address(RVA = "0x1182F70", Offset = "0x1182F70", VA = "0x1182F70")]
		private void OffsetTargetsFromAnchor()
		{
		}

		[Token(Token = "0x6002909")]
		[Address(RVA = "0x11847E8", Offset = "0x11847E8", VA = "0x11847E8")]
		private bool IdentifyGrabTargets(IEnumerable<GameObject> targetObjects)
		{
			return default(bool);
		}

		[Token(Token = "0x600290A")]
		[Address(RVA = "0x1182BA0", Offset = "0x1182BA0", VA = "0x1182BA0")]
		private void CalculateGrabTargetsAnchorVectors()
		{
		}

		[Token(Token = "0x600290B")]
		[Address(RVA = "0x1182440", Offset = "0x1182440", VA = "0x1182440")]
		private void StoreGrabTargetsWorldScaleSnapshots()
		{
		}

		[Token(Token = "0x600290C")]
		[Address(RVA = "0x11822F0", Offset = "0x11822F0", VA = "0x11822F0")]
		private void StoreGrabTargetsAnchorVectorSnapshots()
		{
		}

		[Token(Token = "0x600290D")]
		[Address(RVA = "0x11825A4", Offset = "0x11825A4", VA = "0x11825A4")]
		private bool IdentifyGrabSurface()
		{
			return default(bool);
		}

		[Token(Token = "0x600290E")]
		[Address(RVA = "0x1182D20", Offset = "0x1182D20", VA = "0x1182D20")]
		private void SwitchToNextAlignmentAxis()
		{
		}

		[Token(Token = "0x600290F")]
		[Address(RVA = "0x11819D8", Offset = "0x11819D8", VA = "0x11819D8")]
		private ObjectBounds.QueryConfig GetObjectBoundsQConfig()
		{
			return default(ObjectBounds.QueryConfig);
		}

		[Token(Token = "0x6002910")]
		[Address(RVA = "0x1184AE8", Offset = "0x1184AE8", VA = "0x1184AE8")]
		public DeviceObjectGrabSession()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000611")]
	public class ObjectGrabSettings : Settings
	{
		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool _alignAxis;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private TransformAxis _alignmentAxis;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _rotationSensitivity;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _scaleSensitivity;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _offsetFromSurfaceSensitivity;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _offsetFromAnchorSensitivity;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ObjectGrabSurfaceFlags _surfaceFlags;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _defaultOffsetFromSurface;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int _surfaceLayers;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ObjectLayerGrabSettings[] _layerGrabSettings;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private int _sphericalMeshLayers;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private int _terrainMeshLayers;

		[Token(Token = "0x170008C2")]
		public bool AlignAxis
		{
			[Token(Token = "0x6002914")]
			[Address(RVA = "0x1184C84", Offset = "0x1184C84", VA = "0x1184C84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002915")]
			[Address(RVA = "0x1184C8C", Offset = "0x1184C8C", VA = "0x1184C8C")]
			set
			{
			}
		}

		[Token(Token = "0x170008C3")]
		public TransformAxis AlignmentAxis
		{
			[Token(Token = "0x6002916")]
			[Address(RVA = "0x1184C98", Offset = "0x1184C98", VA = "0x1184C98")]
			get
			{
				return default(TransformAxis);
			}
			[Token(Token = "0x6002917")]
			[Address(RVA = "0x1184CA0", Offset = "0x1184CA0", VA = "0x1184CA0")]
			set
			{
			}
		}

		[Token(Token = "0x170008C4")]
		public float RotationSensitivity
		{
			[Token(Token = "0x6002918")]
			[Address(RVA = "0x1184CA8", Offset = "0x1184CA8", VA = "0x1184CA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002919")]
			[Address(RVA = "0x1184CB0", Offset = "0x1184CB0", VA = "0x1184CB0")]
			set
			{
			}
		}

		[Token(Token = "0x170008C5")]
		public float ScaleSensitivity
		{
			[Token(Token = "0x600291A")]
			[Address(RVA = "0x1184CD0", Offset = "0x1184CD0", VA = "0x1184CD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600291B")]
			[Address(RVA = "0x1184CD8", Offset = "0x1184CD8", VA = "0x1184CD8")]
			set
			{
			}
		}

		[Token(Token = "0x170008C6")]
		public float OffsetFromSurfaceSensitivity
		{
			[Token(Token = "0x600291C")]
			[Address(RVA = "0x1184CF8", Offset = "0x1184CF8", VA = "0x1184CF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600291D")]
			[Address(RVA = "0x1184D00", Offset = "0x1184D00", VA = "0x1184D00")]
			set
			{
			}
		}

		[Token(Token = "0x170008C7")]
		public float OffsetFromAnchorSensitivity
		{
			[Token(Token = "0x600291E")]
			[Address(RVA = "0x1184D20", Offset = "0x1184D20", VA = "0x1184D20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600291F")]
			[Address(RVA = "0x1184D28", Offset = "0x1184D28", VA = "0x1184D28")]
			set
			{
			}
		}

		[Token(Token = "0x170008C8")]
		public ObjectGrabSurfaceFlags SurfaceFlags
		{
			[Token(Token = "0x6002920")]
			[Address(RVA = "0x1184D48", Offset = "0x1184D48", VA = "0x1184D48")]
			get
			{
				return default(ObjectGrabSurfaceFlags);
			}
			[Token(Token = "0x6002921")]
			[Address(RVA = "0x1184D50", Offset = "0x1184D50", VA = "0x1184D50")]
			set
			{
			}
		}

		[Token(Token = "0x170008C9")]
		public float DefaultOffsetFromSurface
		{
			[Token(Token = "0x6002922")]
			[Address(RVA = "0x1184D58", Offset = "0x1184D58", VA = "0x1184D58")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002923")]
			[Address(RVA = "0x1184D60", Offset = "0x1184D60", VA = "0x1184D60")]
			set
			{
			}
		}

		[Token(Token = "0x170008CA")]
		public int SurfaceLayers
		{
			[Token(Token = "0x6002924")]
			[Address(RVA = "0x1184D68", Offset = "0x1184D68", VA = "0x1184D68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002925")]
			[Address(RVA = "0x1184D70", Offset = "0x1184D70", VA = "0x1184D70")]
			set
			{
			}
		}

		[Token(Token = "0x170008CB")]
		public int SphericalMeshLayers
		{
			[Token(Token = "0x6002926")]
			[Address(RVA = "0x1184D78", Offset = "0x1184D78", VA = "0x1184D78")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002927")]
			[Address(RVA = "0x1184D80", Offset = "0x1184D80", VA = "0x1184D80")]
			set
			{
			}
		}

		[Token(Token = "0x170008CC")]
		public int TerrainMeshLayers
		{
			[Token(Token = "0x6002928")]
			[Address(RVA = "0x1184D88", Offset = "0x1184D88", VA = "0x1184D88")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002929")]
			[Address(RVA = "0x1184D90", Offset = "0x1184D90", VA = "0x1184D90")]
			set
			{
			}
		}

		[Token(Token = "0x600292A")]
		[Address(RVA = "0x1184D98", Offset = "0x1184D98", VA = "0x1184D98")]
		public ObjectGrabSettings()
		{
		}

		[Token(Token = "0x600292B")]
		[Address(RVA = "0x1184F38", Offset = "0x1184F38", VA = "0x1184F38")]
		public ObjectLayerGrabSettings GetLayerGrabSettings(int layer)
		{
			return null;
		}
	}
	[Token(Token = "0x2000612")]
	public enum ObjectGrabSurfaceFlags
	{
		[Token(Token = "0x4001B66")]
		Mesh = 1,
		[Token(Token = "0x4001B67")]
		Terrain = 2,
		[Token(Token = "0x4001B68")]
		Grid = 4
	}
	[Serializable]
	[Token(Token = "0x2000613")]
	public class ObjectGridSnapHotkeys : Settings
	{
		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Hotkeys _beginGridSnap;

		[Token(Token = "0x170008CD")]
		public Hotkeys BeginGridSnap
		{
			[Token(Token = "0x600292C")]
			[Address(RVA = "0x1184F68", Offset = "0x1184F68", VA = "0x1184F68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600292D")]
		[Address(RVA = "0x1184F70", Offset = "0x1184F70", VA = "0x1184F70")]
		public ObjectGridSnapHotkeys()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000614")]
	public class ObjectGridSnapLookAndFeel : Settings
	{
		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private PivotPointShapeType _pivotShapeType;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color _pivotPointFillColor;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color _pivotPointBorderColor;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _pivotCircleRadius;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float _pivotSquareSideLength;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool _drawPivotBorder;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Color _boxLineColor;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private bool _drawBoxes;

		[Token(Token = "0x170008CE")]
		public PivotPointShapeType PivotShapeType
		{
			[Token(Token = "0x600292E")]
			[Address(RVA = "0x118501C", Offset = "0x118501C", VA = "0x118501C")]
			get
			{
				return default(PivotPointShapeType);
			}
			[Token(Token = "0x600292F")]
			[Address(RVA = "0x1185024", Offset = "0x1185024", VA = "0x1185024")]
			set
			{
			}
		}

		[Token(Token = "0x170008CF")]
		public Color PivotPointFillColor
		{
			[Token(Token = "0x6002930")]
			[Address(RVA = "0x118502C", Offset = "0x118502C", VA = "0x118502C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002931")]
			[Address(RVA = "0x1185038", Offset = "0x1185038", VA = "0x1185038")]
			set
			{
			}
		}

		[Token(Token = "0x170008D0")]
		public Color PivotPointBorderColor
		{
			[Token(Token = "0x6002932")]
			[Address(RVA = "0x1185044", Offset = "0x1185044", VA = "0x1185044")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002933")]
			[Address(RVA = "0x1185050", Offset = "0x1185050", VA = "0x1185050")]
			set
			{
			}
		}

		[Token(Token = "0x170008D1")]
		public float PivotCircleRadius
		{
			[Token(Token = "0x6002934")]
			[Address(RVA = "0x118505C", Offset = "0x118505C", VA = "0x118505C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002935")]
			[Address(RVA = "0x1185064", Offset = "0x1185064", VA = "0x1185064")]
			set
			{
			}
		}

		[Token(Token = "0x170008D2")]
		public float PivotSquareSideLength
		{
			[Token(Token = "0x6002936")]
			[Address(RVA = "0x1185074", Offset = "0x1185074", VA = "0x1185074")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002937")]
			[Address(RVA = "0x118507C", Offset = "0x118507C", VA = "0x118507C")]
			set
			{
			}
		}

		[Token(Token = "0x170008D3")]
		public bool DrawPivotBorder
		{
			[Token(Token = "0x6002938")]
			[Address(RVA = "0x118508C", Offset = "0x118508C", VA = "0x118508C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002939")]
			[Address(RVA = "0x1185094", Offset = "0x1185094", VA = "0x1185094")]
			set
			{
			}
		}

		[Token(Token = "0x170008D4")]
		public Color BoxLineColor
		{
			[Token(Token = "0x600293A")]
			[Address(RVA = "0x11850A0", Offset = "0x11850A0", VA = "0x11850A0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600293B")]
			[Address(RVA = "0x11850AC", Offset = "0x11850AC", VA = "0x11850AC")]
			set
			{
			}
		}

		[Token(Token = "0x170008D5")]
		public bool DrawBoxes
		{
			[Token(Token = "0x600293C")]
			[Address(RVA = "0x11850B8", Offset = "0x11850B8", VA = "0x11850B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600293D")]
			[Address(RVA = "0x11850C0", Offset = "0x11850C0", VA = "0x11850C0")]
			set
			{
			}
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0x11850CC", Offset = "0x11850CC", VA = "0x11850CC")]
		public ObjectGridSnapLookAndFeel()
		{
		}
	}
	[Token(Token = "0x2000615")]
	public delegate void ObjectGridSnapSessionBeginHandler();
	[Token(Token = "0x2000616")]
	public delegate void ObjectGridSnapSessionEndHandler();
	[Token(Token = "0x2000617")]
	public class ObjectGridSnapSession
	{
		[Token(Token = "0x2000618")]
		private enum State
		{
			[Token(Token = "0x4001B7C")]
			Inactive,
			[Token(Token = "0x4001B7D")]
			SelectPivot,
			[Token(Token = "0x4001B7E")]
			Snap
		}

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<GameObject> _targetParents;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> _targetObjects;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<LocalTransformSnapshot> _preTargetTransformSnapshots;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _snapPivotPoint;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private State _state;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ObjectGridSnapHotkeys _sharedHotkeys;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ObjectGridSnapLookAndFeel _sharedLookAndFeel;

		[Token(Token = "0x170008D6")]
		public bool IsActive
		{
			[Token(Token = "0x600294B")]
			[Address(RVA = "0x118559C", Offset = "0x118559C", VA = "0x118559C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170008D7")]
		public ObjectGridSnapLookAndFeel SharedLookAndFeel
		{
			[Token(Token = "0x600294C")]
			[Address(RVA = "0x11855AC", Offset = "0x11855AC", VA = "0x11855AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600294D")]
			[Address(RVA = "0x11855B4", Offset = "0x11855B4", VA = "0x11855B4")]
			set
			{
			}
		}

		[Token(Token = "0x170008D8")]
		public ObjectGridSnapHotkeys SharedHotkeys
		{
			[Token(Token = "0x600294E")]
			[Address(RVA = "0x11855C4", Offset = "0x11855C4", VA = "0x11855C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600294F")]
			[Address(RVA = "0x11855CC", Offset = "0x11855CC", VA = "0x11855CC")]
			set
			{
			}
		}

		[Token(Token = "0x14000057")]
		public event ObjectGridSnapSessionBeginHandler SessionBegin
		{
			[Token(Token = "0x6002947")]
			[Address(RVA = "0x118532C", Offset = "0x118532C", VA = "0x118532C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002948")]
			[Address(RVA = "0x11853C8", Offset = "0x11853C8", VA = "0x11853C8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000058")]
		public event ObjectGridSnapSessionEndHandler SessionEnd
		{
			[Token(Token = "0x6002949")]
			[Address(RVA = "0x1185464", Offset = "0x1185464", VA = "0x1185464")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600294A")]
			[Address(RVA = "0x1185500", Offset = "0x1185500", VA = "0x1185500")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002950")]
		[Address(RVA = "0x11855DC", Offset = "0x11855DC", VA = "0x11855DC")]
		public void Render(Camera renderCamera)
		{
		}

		[Token(Token = "0x6002951")]
		[Address(RVA = "0x1185B28", Offset = "0x1185B28", VA = "0x1185B28")]
		public void Update(IEnumerable<GameObject> targetObjects)
		{
		}

		[Token(Token = "0x6002952")]
		[Address(RVA = "0x1185DB8", Offset = "0x1185DB8", VA = "0x1185DB8")]
		public void End()
		{
		}

		[Token(Token = "0x6002953")]
		[Address(RVA = "0x1185C9C", Offset = "0x1185C9C", VA = "0x1185C9C")]
		private bool Begin(IEnumerable<GameObject> targetObjects)
		{
			return default(bool);
		}

		[Token(Token = "0x6002954")]
		[Address(RVA = "0x1186E1C", Offset = "0x1186E1C", VA = "0x1186E1C")]
		private bool IdentifyTargetParents(IEnumerable<GameObject> targetObjects)
		{
			return default(bool);
		}

		[Token(Token = "0x6002955")]
		[Address(RVA = "0x1186EBC", Offset = "0x1186EBC", VA = "0x1186EBC")]
		private bool IdentifyTargetObjects(IEnumerable<GameObject> targetObjects)
		{
			return default(bool);
		}

		[Token(Token = "0x6002956")]
		[Address(RVA = "0x1185ED0", Offset = "0x1185ED0", VA = "0x1185ED0")]
		private void SelectPivot()
		{
		}

		[Token(Token = "0x6002957")]
		[Address(RVA = "0x1185B1C", Offset = "0x1185B1C", VA = "0x1185B1C")]
		private ObjectBounds.QueryConfig GetObjectBoundsQConfig()
		{
			return default(ObjectBounds.QueryConfig);
		}

		[Token(Token = "0x6002958")]
		[Address(RVA = "0x11863F4", Offset = "0x11863F4", VA = "0x11863F4")]
		private void Snap()
		{
		}

		[Token(Token = "0x6002959")]
		[Address(RVA = "0x118738C", Offset = "0x118738C", VA = "0x118738C")]
		public ObjectGridSnapSession()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000619")]
	public class ObjectLayerGrabSettings
	{
		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int _layer;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private bool _isActive;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[SerializeField]
		private bool _alignAxis;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TransformAxis _alignmentAxis;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _defaultOffsetFromSurface;

		[Token(Token = "0x170008D9")]
		public int Layer
		{
			[Token(Token = "0x600295A")]
			[Address(RVA = "0x1187444", Offset = "0x1187444", VA = "0x1187444")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170008DA")]
		public bool IsActive
		{
			[Token(Token = "0x600295B")]
			[Address(RVA = "0x118744C", Offset = "0x118744C", VA = "0x118744C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600295C")]
			[Address(RVA = "0x1187454", Offset = "0x1187454", VA = "0x1187454")]
			set
			{
			}
		}

		[Token(Token = "0x170008DB")]
		public bool AlignAxis
		{
			[Token(Token = "0x600295D")]
			[Address(RVA = "0x1187460", Offset = "0x1187460", VA = "0x1187460")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600295E")]
			[Address(RVA = "0x1187468", Offset = "0x1187468", VA = "0x1187468")]
			set
			{
			}
		}

		[Token(Token = "0x170008DC")]
		public TransformAxis AlignmentAxis
		{
			[Token(Token = "0x600295F")]
			[Address(RVA = "0x1187474", Offset = "0x1187474", VA = "0x1187474")]
			get
			{
				return default(TransformAxis);
			}
			[Token(Token = "0x6002960")]
			[Address(RVA = "0x118747C", Offset = "0x118747C", VA = "0x118747C")]
			set
			{
			}
		}

		[Token(Token = "0x170008DD")]
		public float DefaultOffsetFromSurface
		{
			[Token(Token = "0x6002961")]
			[Address(RVA = "0x1187484", Offset = "0x1187484", VA = "0x1187484")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002962")]
			[Address(RVA = "0x118748C", Offset = "0x118748C", VA = "0x118748C")]
			set
			{
			}
		}

		[Token(Token = "0x6002963")]
		[Address(RVA = "0x1184F00", Offset = "0x1184F00", VA = "0x1184F00")]
		public ObjectLayerGrabSettings(int layer)
		{
		}
	}
	[Token(Token = "0x200061A")]
	public class ArcShape2D : Shape2D
	{
		[Token(Token = "0x200061B")]
		public enum BorderRenderFlags
		{
			[Token(Token = "0x4001B91")]
			None,
			[Token(Token = "0x4001B92")]
			ExtremitiesBorder,
			[Token(Token = "0x4001B93")]
			ArcBorder,
			[Token(Token = "0x4001B94")]
			All
		}

		[Token(Token = "0x200061C")]
		public class BorderRenderDescriptor
		{
			[Token(Token = "0x4001B95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private BorderRenderFlags _borderFlags;

			[Token(Token = "0x170008E9")]
			public BorderRenderFlags BorderFlags
			{
				[Token(Token = "0x600297E")]
				[Address(RVA = "0x1187C34", Offset = "0x1187C34", VA = "0x1187C34")]
				get
				{
					return default(BorderRenderFlags);
				}
				[Token(Token = "0x600297F")]
				[Address(RVA = "0x1187C3C", Offset = "0x1187C3C", VA = "0x1187C3C")]
				set
				{
				}
			}

			[Token(Token = "0x6002980")]
			[Address(RVA = "0x1187C1C", Offset = "0x1187C1C", VA = "0x1187C1C")]
			public BorderRenderDescriptor()
			{
			}
		}

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BorderRenderDescriptor _borderRenderDesc;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rect _rect;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _forceShortestArc;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float _radius;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 _origin;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector2 _startPoint;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 _endPoint;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Vector2> _borderPoints;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _degreeAngleFromStart;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _numBorderPoints;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _areBorderPointsDirty;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private ArcEpsilon _epsilon;

		[Token(Token = "0x170008DE")]
		public float Radius
		{
			[Token(Token = "0x6002964")]
			[Address(RVA = "0x1187494", Offset = "0x1187494", VA = "0x1187494")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002965")]
			[Address(RVA = "0x118749C", Offset = "0x118749C", VA = "0x118749C")]
			set
			{
			}
		}

		[Token(Token = "0x170008DF")]
		public bool ForceShortestArc
		{
			[Token(Token = "0x6002966")]
			[Address(RVA = "0x1187638", Offset = "0x1187638", VA = "0x1187638")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002967")]
			[Address(RVA = "0x1187640", Offset = "0x1187640", VA = "0x1187640")]
			set
			{
			}
		}

		[Token(Token = "0x170008E0")]
		public float DegreeAngleFromStart
		{
			[Token(Token = "0x6002968")]
			[Address(RVA = "0x1187664", Offset = "0x1187664", VA = "0x1187664")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002969")]
			[Address(RVA = "0x118766C", Offset = "0x118766C", VA = "0x118766C")]
			set
			{
			}
		}

		[Token(Token = "0x170008E1")]
		public float AbsDegreeAngleFromStart
		{
			[Token(Token = "0x600296A")]
			[Address(RVA = "0x118769C", Offset = "0x118769C", VA = "0x118769C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170008E2")]
		public Vector2 Origin
		{
			[Token(Token = "0x600296B")]
			[Address(RVA = "0x11876A8", Offset = "0x11876A8", VA = "0x11876A8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600296C")]
			[Address(RVA = "0x11876B0", Offset = "0x11876B0", VA = "0x11876B0")]
			set
			{
			}
		}

		[Token(Token = "0x170008E3")]
		public int NumBorderPoints
		{
			[Token(Token = "0x600296D")]
			[Address(RVA = "0x11877AC", Offset = "0x11877AC", VA = "0x11877AC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600296E")]
			[Address(RVA = "0x11877B4", Offset = "0x11877B4", VA = "0x11877B4")]
			set
			{
			}
		}

		[Token(Token = "0x170008E4")]
		public Vector2 StartPoint
		{
			[Token(Token = "0x600296F")]
			[Address(RVA = "0x11877D0", Offset = "0x11877D0", VA = "0x11877D0")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170008E5")]
		public Vector2 EndPoint
		{
			[Token(Token = "0x6002970")]
			[Address(RVA = "0x11877D8", Offset = "0x11877D8", VA = "0x11877D8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170008E6")]
		public ArcEpsilon Epsilon
		{
			[Token(Token = "0x6002971")]
			[Address(RVA = "0x11877E0", Offset = "0x11877E0", VA = "0x11877E0")]
			get
			{
				return default(ArcEpsilon);
			}
			[Token(Token = "0x6002972")]
			[Address(RVA = "0x11877EC", Offset = "0x11877EC", VA = "0x11877EC")]
			set
			{
			}
		}

		[Token(Token = "0x170008E7")]
		public float AreaEps
		{
			[Token(Token = "0x6002973")]
			[Address(RVA = "0x11877F8", Offset = "0x11877F8", VA = "0x11877F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002974")]
			[Address(RVA = "0x1187800", Offset = "0x1187800", VA = "0x1187800")]
			set
			{
			}
		}

		[Token(Token = "0x170008E8")]
		public BorderRenderDescriptor BorderRenderDesc
		{
			[Token(Token = "0x6002975")]
			[Address(RVA = "0x118780C", Offset = "0x118780C", VA = "0x118780C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002976")]
		[Address(RVA = "0x1187814", Offset = "0x1187814", VA = "0x1187814", Slot = "4")]
		public override void RenderArea(Camera camera)
		{
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0x11878A4", Offset = "0x11878A4", VA = "0x11878A4", Slot = "5")]
		public override void RenderBorder(Camera camera)
		{
		}

		[Token(Token = "0x6002978")]
		[Address(RVA = "0x1187AF0", Offset = "0x1187AF0", VA = "0x1187AF0")]
		public void SetArcData(Vector2 startPoint, float radius)
		{
		}

		[Token(Token = "0x6002979")]
		[Address(RVA = "0x1187AFC", Offset = "0x1187AFC", VA = "0x1187AFC", Slot = "7")]
		public override Rect GetEncapsulatingRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x600297A")]
		[Address(RVA = "0x1187B24", Offset = "0x1187B24", VA = "0x1187B24", Slot = "6")]
		public override bool ContainsPoint(Vector2 point)
		{
			return default(bool);
		}

		[Token(Token = "0x600297B")]
		[Address(RVA = "0x1187850", Offset = "0x1187850", VA = "0x1187850")]
		private void OnBorderPointsFoundDirty()
		{
		}

		[Token(Token = "0x600297C")]
		[Address(RVA = "0x118757C", Offset = "0x118757C", VA = "0x118757C")]
		private void CalculateEndPoint()
		{
		}

		[Token(Token = "0x600297D")]
		[Address(RVA = "0x1187B90", Offset = "0x1187B90", VA = "0x1187B90")]
		public ArcShape2D()
		{
		}
	}
	[Token(Token = "0x200061D")]
	public class ArcShape3D : Shape3D
	{
		[Token(Token = "0x200061E")]
		public enum WireRenderFlags
		{
			[Token(Token = "0x4001BA5")]
			None,
			[Token(Token = "0x4001BA6")]
			ExtremitiesBorder,
			[Token(Token = "0x4001BA7")]
			ArcBorder,
			[Token(Token = "0x4001BA8")]
			All
		}

		[Token(Token = "0x200061F")]
		public class WireRenderDescriptor
		{
			[Token(Token = "0x4001BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private WireRenderFlags _wireFlags;

			[Token(Token = "0x170008FA")]
			public WireRenderFlags WireFlags
			{
				[Token(Token = "0x60029A5")]
				[Address(RVA = "0x1188AC8", Offset = "0x1188AC8", VA = "0x1188AC8")]
				get
				{
					return default(WireRenderFlags);
				}
				[Token(Token = "0x60029A6")]
				[Address(RVA = "0x1188AD0", Offset = "0x1188AD0", VA = "0x1188AD0")]
				set
				{
				}
			}

			[Token(Token = "0x60029A7")]
			[Address(RVA = "0x1188AB0", Offset = "0x1188AB0", VA = "0x1188AB0")]
			public WireRenderDescriptor()
			{
			}
		}

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WireRenderDescriptor _wireRenderDesc;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _startPoint;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _endPoint;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _origin;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Plane _plane;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float _radius;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AABB _aabb;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _degreeAngleFromStart;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _forceShortestArc;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Vector3> _borderPoints;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _numBorderPoints;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _areBorderPointsDirty;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ArcEpsilon _epsilon;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Shape3DRaycastMode _raycastMode;

		[Token(Token = "0x170008EA")]
		public float Radius
		{
			[Token(Token = "0x6002981")]
			[Address(RVA = "0x1187C44", Offset = "0x1187C44", VA = "0x1187C44")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002982")]
			[Address(RVA = "0x1187C4C", Offset = "0x1187C4C", VA = "0x1187C4C")]
			set
			{
			}
		}

		[Token(Token = "0x170008EB")]
		public bool ForceShortestArc
		{
			[Token(Token = "0x6002983")]
			[Address(RVA = "0x1187E20", Offset = "0x1187E20", VA = "0x1187E20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002984")]
			[Address(RVA = "0x1187E28", Offset = "0x1187E28", VA = "0x1187E28")]
			set
			{
			}
		}

		[Token(Token = "0x170008EC")]
		public float DegreeAngleFromStart
		{
			[Token(Token = "0x6002985")]
			[Address(RVA = "0x1187E4C", Offset = "0x1187E4C", VA = "0x1187E4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002986")]
			[Address(RVA = "0x1187E54", Offset = "0x1187E54", VA = "0x1187E54")]
			set
			{
			}
		}

		[Token(Token = "0x170008ED")]
		public float AbsDegreeAngleFromStart
		{
			[Token(Token = "0x6002987")]
			[Address(RVA = "0x1187E84", Offset = "0x1187E84", VA = "0x1187E84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170008EE")]
		public int NumBorderPoints
		{
			[Token(Token = "0x6002988")]
			[Address(RVA = "0x1187E90", Offset = "0x1187E90", VA = "0x1187E90")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002989")]
			[Address(RVA = "0x1187E98", Offset = "0x1187E98", VA = "0x1187E98")]
			set
			{
			}
		}

		[Token(Token = "0x170008EF")]
		public Vector3 Origin
		{
			[Token(Token = "0x600298A")]
			[Address(RVA = "0x1187EB4", Offset = "0x1187EB4", VA = "0x1187EB4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600298B")]
			[Address(RVA = "0x1187EC0", Offset = "0x1187EC0", VA = "0x1187EC0")]
			set
			{
			}
		}

		[Token(Token = "0x170008F0")]
		public Vector3 StartPoint
		{
			[Token(Token = "0x600298C")]
			[Address(RVA = "0x1188000", Offset = "0x1188000", VA = "0x1188000")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170008F1")]
		public Vector3 EndPoint
		{
			[Token(Token = "0x600298D")]
			[Address(RVA = "0x118800C", Offset = "0x118800C", VA = "0x118800C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170008F2")]
		public Plane Plane
		{
			[Token(Token = "0x600298E")]
			[Address(RVA = "0x1188018", Offset = "0x1188018", VA = "0x1188018")]
			get
			{
				return default(Plane);
			}
		}

		[Token(Token = "0x170008F3")]
		public Vector3 Normal
		{
			[Token(Token = "0x600298F")]
			[Address(RVA = "0x1188024", Offset = "0x1188024", VA = "0x1188024")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170008F4")]
		public ArcEpsilon Epsilon
		{
			[Token(Token = "0x6002990")]
			[Address(RVA = "0x1188030", Offset = "0x1188030", VA = "0x1188030")]
			get
			{
				return default(ArcEpsilon);
			}
			[Token(Token = "0x6002991")]
			[Address(RVA = "0x118803C", Offset = "0x118803C", VA = "0x118803C")]
			set
			{
			}
		}

		[Token(Token = "0x170008F5")]
		public float AreaEps
		{
			[Token(Token = "0x6002992")]
			[Address(RVA = "0x1188048", Offset = "0x1188048", VA = "0x1188048")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002993")]
			[Address(RVA = "0x1188050", Offset = "0x1188050", VA = "0x1188050")]
			set
			{
			}
		}

		[Token(Token = "0x170008F6")]
		public float ExtrudeEps
		{
			[Token(Token = "0x6002994")]
			[Address(RVA = "0x118805C", Offset = "0x118805C", VA = "0x118805C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002995")]
			[Address(RVA = "0x1188064", Offset = "0x1188064", VA = "0x1188064")]
			set
			{
			}
		}

		[Token(Token = "0x170008F7")]
		public float WireEps
		{
			[Token(Token = "0x6002996")]
			[Address(RVA = "0x1188070", Offset = "0x1188070", VA = "0x1188070")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002997")]
			[Address(RVA = "0x1188078", Offset = "0x1188078", VA = "0x1188078")]
			set
			{
			}
		}

		[Token(Token = "0x170008F8")]
		public WireRenderDescriptor WireRenderDesc
		{
			[Token(Token = "0x6002998")]
			[Address(RVA = "0x1188084", Offset = "0x1188084", VA = "0x1188084")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170008F9")]
		public Shape3DRaycastMode RaycastMode
		{
			[Token(Token = "0x6002999")]
			[Address(RVA = "0x118808C", Offset = "0x118808C", VA = "0x118808C")]
			get
			{
				return default(Shape3DRaycastMode);
			}
			[Token(Token = "0x600299A")]
			[Address(RVA = "0x1188094", Offset = "0x1188094", VA = "0x1188094")]
			set
			{
			}
		}

		[Token(Token = "0x600299B")]
		[Address(RVA = "0x118809C", Offset = "0x118809C", VA = "0x118809C", Slot = "5")]
		public override void RenderSolid()
		{
		}

		[Token(Token = "0x600299C")]
		[Address(RVA = "0x118817C", Offset = "0x118817C", VA = "0x118817C", Slot = "6")]
		public override void RenderWire()
		{
		}

		[Token(Token = "0x600299D")]
		[Address(RVA = "0x11883E0", Offset = "0x11883E0", VA = "0x11883E0")]
		public void SetArcData(Plane plane, Vector3 origin, Vector3 startPoint, float radius)
		{
		}

		[Token(Token = "0x600299E")]
		[Address(RVA = "0x118845C", Offset = "0x118845C", VA = "0x118845C", Slot = "7")]
		public override bool Raycast(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x600299F")]
		[Address(RVA = "0x1188720", Offset = "0x1188720", VA = "0x1188720", Slot = "4")]
		public override bool RaycastWire(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x60029A0")]
		[Address(RVA = "0x11888A0", Offset = "0x11888A0", VA = "0x11888A0")]
		public bool ContainsPoint(Vector3 point, bool checkOnPlane)
		{
			return default(bool);
		}

		[Token(Token = "0x60029A1")]
		[Address(RVA = "0x11889E8", Offset = "0x11889E8", VA = "0x11889E8", Slot = "8")]
		public override AABB GetAABB()
		{
			return default(AABB);
		}

		[Token(Token = "0x60029A2")]
		[Address(RVA = "0x11880CC", Offset = "0x11880CC", VA = "0x11880CC")]
		private void OnBorderPointsFoundDirty()
		{
		}

		[Token(Token = "0x60029A3")]
		[Address(RVA = "0x1187D68", Offset = "0x1187D68", VA = "0x1187D68")]
		private void CalculateEndPoint()
		{
		}

		[Token(Token = "0x60029A4")]
		[Address(RVA = "0x1188A24", Offset = "0x1188A24", VA = "0x1188A24")]
		public ArcShape3D()
		{
		}
	}
	[Token(Token = "0x2000620")]
	public class BoxShape3D : Shape3D
	{
		[Token(Token = "0x2000621")]
		public enum WireRenderMode
		{
			[Token(Token = "0x4001BB0")]
			Wire,
			[Token(Token = "0x4001BB1")]
			WireCorners
		}

		[Token(Token = "0x2000622")]
		public class WireRenderDescriptor
		{
			[Token(Token = "0x4001BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float _cornerLinePercentage;

			[Token(Token = "0x4001BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private WireRenderMode _wireMode;

			[Token(Token = "0x17000911")]
			public WireRenderMode WireMode
			{
				[Token(Token = "0x60029D9")]
				[Address(RVA = "0x1189A74", Offset = "0x1189A74", VA = "0x1189A74")]
				get
				{
					return default(WireRenderMode);
				}
				[Token(Token = "0x60029DA")]
				[Address(RVA = "0x1189A7C", Offset = "0x1189A7C", VA = "0x1189A7C")]
				set
				{
				}
			}

			[Token(Token = "0x17000912")]
			public float CornerLinePercentage
			{
				[Token(Token = "0x60029DB")]
				[Address(RVA = "0x1189A84", Offset = "0x1189A84", VA = "0x1189A84")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x60029DC")]
				[Address(RVA = "0x1189A8C", Offset = "0x1189A8C", VA = "0x1189A8C")]
				set
				{
				}
			}

			[Token(Token = "0x60029DD")]
			[Address(RVA = "0x1189A60", Offset = "0x1189A60", VA = "0x1189A60")]
			public WireRenderDescriptor()
			{
			}
		}

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WireRenderDescriptor _wireRenderDesc;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _size;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 _center;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion _rotation;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoxEpsilon _epsilon;

		[Token(Token = "0x170008FB")]
		public Vector3 Size
		{
			[Token(Token = "0x60029A8")]
			[Address(RVA = "0x1188AD8", Offset = "0x1188AD8", VA = "0x1188AD8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60029A9")]
			[Address(RVA = "0x1188AE4", Offset = "0x1188AE4", VA = "0x1188AE4")]
			set
			{
			}
		}

		[Token(Token = "0x170008FC")]
		public float Width
		{
			[Token(Token = "0x60029AA")]
			[Address(RVA = "0x1188B04", Offset = "0x1188B04", VA = "0x1188B04")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60029AB")]
			[Address(RVA = "0x1188B0C", Offset = "0x1188B0C", VA = "0x1188B0C")]
			set
			{
			}
		}

		[Token(Token = "0x170008FD")]
		public float Height
		{
			[Token(Token = "0x60029AC")]
			[Address(RVA = "0x1188B18", Offset = "0x1188B18", VA = "0x1188B18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60029AD")]
			[Address(RVA = "0x1188B20", Offset = "0x1188B20", VA = "0x1188B20")]
			set
			{
			}
		}

		[Token(Token = "0x170008FE")]
		public float Depth
		{
			[Token(Token = "0x60029AE")]
			[Address(RVA = "0x1188B2C", Offset = "0x1188B2C", VA = "0x1188B2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60029AF")]
			[Address(RVA = "0x1188B34", Offset = "0x1188B34", VA = "0x1188B34")]
			set
			{
			}
		}

		[Token(Token = "0x170008FF")]
		public Vector3 Extents
		{
			[Token(Token = "0x60029B0")]
			[Address(RVA = "0x1188B40", Offset = "0x1188B40", VA = "0x1188B40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000900")]
		public Vector3 Center
		{
			[Token(Token = "0x60029B1")]
			[Address(RVA = "0x1188B5C", Offset = "0x1188B5C", VA = "0x1188B5C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60029B2")]
			[Address(RVA = "0x1188B68", Offset = "0x1188B68", VA = "0x1188B68")]
			set
			{
			}
		}

		[Token(Token = "0x17000901")]
		public BoxEpsilon Epsilon
		{
			[Token(Token = "0x60029B3")]
			[Address(RVA = "0x1188B74", Offset = "0x1188B74", VA = "0x1188B74")]
			get
			{
				return default(BoxEpsilon);
			}
			[Token(Token = "0x60029B4")]
			[Address(RVA = "0x1188B80", Offset = "0x1188B80", VA = "0x1188B80")]
			set
			{
			}
		}

		[Token(Token = "0x17000902")]
		public Vector3 SizeEps
		{
			[Token(Token = "0x60029B5")]
			[Address(RVA = "0x1188B8C", Offset = "0x1188B8C", VA = "0x1188B8C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60029B6")]
			[Address(RVA = "0x1188B98", Offset = "0x1188B98", VA = "0x1188B98")]
			set
			{
			}
		}

		[Token(Token = "0x17000903")]
		public float WidthEps
		{
			[Token(Token = "0x60029B7")]
			[Address(RVA = "0x1188BA4", Offset = "0x1188BA4", VA = "0x1188BA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60029B8")]
			[Address(RVA = "0x1188BB0", Offset = "0x1188BB0", VA = "0x1188BB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000904")]
		public float HeightEps
		{
			[Token(Token = "0x60029B9")]
			[Address(RVA = "0x1188BBC", Offset = "0x1188BBC", VA = "0x1188BBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60029BA")]
			[Address(RVA = "0x1188BC8", Offset = "0x1188BC8", VA = "0x1188BC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000905")]
		public float DepthEps
		{
			[Token(Token = "0x60029BB")]
			[Address(RVA = "0x1188BD4", Offset = "0x1188BD4", VA = "0x1188BD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60029BC")]
			[Address(RVA = "0x1188BE0", Offset = "0x1188BE0", VA = "0x1188BE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000906")]
		public Vector3 Min
		{
			[Token(Token = "0x60029BD")]
			[Address(RVA = "0x1188BEC", Offset = "0x1188BEC", VA = "0x1188BEC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60029BE")]
			[Address(RVA = "0x1188C1C", Offset = "0x1188C1C", VA = "0x1188C1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000907")]
		public Vector3 Max
		{
			[Token(Token = "0x60029BF")]
			[Address(RVA = "0x1188C74", Offset = "0x1188C74", VA = "0x1188C74")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60029C0")]
			[Address(RVA = "0x1188CA4", Offset = "0x1188CA4", VA = "0x1188CA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000908")]
		public Quaternion Rotation
		{
			[Token(Token = "0x60029C1")]
			[Address(RVA = "0x1188CFC", Offset = "0x1188CFC", VA = "0x1188CFC")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60029C2")]
			[Address(RVA = "0x1188D08", Offset = "0x1188D08", VA = "0x1188D08")]
			set
			{
			}
		}

		[Token(Token = "0x17000909")]
		public Vector3 Right
		{
			[Token(Token = "0x60029C3")]
			[Address(RVA = "0x1188D28", Offset = "0x1188D28", VA = "0x1188D28")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700090A")]
		public Vector3 Up
		{
			[Token(Token = "0x60029C4")]
			[Address(RVA = "0x1188DB4", Offset = "0x1188DB4", VA = "0x1188DB4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700090B")]
		public Vector3 Look
		{
			[Token(Token = "0x60029C5")]
			[Address(RVA = "0x1188E40", Offset = "0x1188E40", VA = "0x1188E40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700090C")]
		public WireRenderDescriptor WireRenderDesc
		{
			[Token(Token = "0x60029C6")]
			[Address(RVA = "0x1188ECC", Offset = "0x1188ECC", VA = "0x1188ECC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700090D")]
		public static Vector3 ModelRight
		{
			[Token(Token = "0x60029C7")]
			[Address(RVA = "0x1188D70", Offset = "0x1188D70", VA = "0x1188D70")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700090E")]
		public static Vector3 ModelUp
		{
			[Token(Token = "0x60029C8")]
			[Address(RVA = "0x1188DFC", Offset = "0x1188DFC", VA = "0x1188DFC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700090F")]
		public static Vector3 ModelLook
		{
			[Token(Token = "0x60029C9")]
			[Address(RVA = "0x1188E88", Offset = "0x1188E88", VA = "0x1188E88")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000910")]
		public static Vector3 ModelCenter
		{
			[Token(Token = "0x60029CA")]
			[Address(RVA = "0x1188ED4", Offset = "0x1188ED4", VA = "0x1188ED4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60029CB")]
		[Address(RVA = "0x1188F18", Offset = "0x1188F18", VA = "0x1188F18")]
		public void FromOBB(OBB obb)
		{
		}

		[Token(Token = "0x60029CC")]
		[Address(RVA = "0x1188F74", Offset = "0x1188F74", VA = "0x1188F74")]
		public float GetSizeAlongDirection(Vector3 direction)
		{
			return default(float);
		}

		[Token(Token = "0x60029CD")]
		[Address(RVA = "0x1188FD4", Offset = "0x1188FD4", VA = "0x1188FD4")]
		public void AlignWidth(Vector3 axis)
		{
		}

		[Token(Token = "0x60029CE")]
		[Address(RVA = "0x11890D8", Offset = "0x11890D8", VA = "0x11890D8")]
		public void AlignHeight(Vector3 axis)
		{
		}

		[Token(Token = "0x60029CF")]
		[Address(RVA = "0x11891DC", Offset = "0x11891DC", VA = "0x11891DC")]
		public void AlignDepth(Vector3 axis)
		{
		}

		[Token(Token = "0x60029D0")]
		[Address(RVA = "0x11892E0", Offset = "0x11892E0", VA = "0x11892E0")]
		public Vector3 GetFaceCenter(BoxFace boxFace)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60029D1")]
		[Address(RVA = "0x11893A4", Offset = "0x11893A4", VA = "0x11893A4")]
		public void SetFaceCenter(BoxFace boxFace, Vector3 newCenter)
		{
		}

		[Token(Token = "0x60029D2")]
		[Address(RVA = "0x11894A4", Offset = "0x11894A4", VA = "0x11894A4", Slot = "5")]
		public override void RenderSolid()
		{
		}

		[Token(Token = "0x60029D3")]
		[Address(RVA = "0x1189610", Offset = "0x1189610", VA = "0x1189610", Slot = "6")]
		public override void RenderWire()
		{
		}

		[Token(Token = "0x60029D4")]
		[Address(RVA = "0x11896DC", Offset = "0x11896DC", VA = "0x11896DC", Slot = "7")]
		public override bool Raycast(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x60029D5")]
		[Address(RVA = "0x11897E0", Offset = "0x11897E0", VA = "0x11897E0", Slot = "8")]
		public override AABB GetAABB()
		{
			return default(AABB);
		}

		[Token(Token = "0x60029D6")]
		[Address(RVA = "0x1189804", Offset = "0x1189804", VA = "0x1189804")]
		public OBB GetOBB()
		{
			return default(OBB);
		}

		[Token(Token = "0x60029D7")]
		[Address(RVA = "0x118986C", Offset = "0x118986C", VA = "0x118986C")]
		public bool ContainsPoint(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x60029D8")]
		[Address(RVA = "0x118995C", Offset = "0x118995C", VA = "0x118995C")]
		public BoxShape3D()
		{
		}
	}
	[Token(Token = "0x2000623")]
	public class CircleShape2D : Shape2D
	{
		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2 _center;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _radius;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _rotationDegrees;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _numBorderPoints;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector2> _modelBorderPoints;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _areModelBorderPointsDirty;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private CircleEpsilon _epsilon;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Shape2DPtContainMode _ptContainMode;

		[Token(Token = "0x17000913")]
		public Vector2 Center
		{
			[Token(Token = "0x60029DE")]
			[Address(RVA = "0x1189AA8", Offset = "0x1189AA8", VA = "0x1189AA8")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60029DF")]
			[Address(RVA = "0x1189AB0", Offset = "0x1189AB0", VA = "0x1189AB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000914")]
		public float Radius
		{
			[Token(Token = "0x60029E0")]
			[Address(RVA = "0x1189AB8", Offset = "0x1189AB8", VA = "0x1189AB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60029E1")]
			[Address(RVA = "0x1189AC0", Offset = "0x1189AC0", VA = "0x1189AC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000915")]
		public float RotationDegrees
		{
			[Token(Token = "0x60029E2")]
			[Address(RVA = "0x1189ACC", Offset = "0x1189ACC", VA = "0x1189ACC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60029E3")]
			[Address(RVA = "0x1189AD4", Offset = "0x1189AD4", VA = "0x1189AD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000916")]
		public Vector2 Right
		{
			[Token(Token = "0x60029E4")]
			[Address(RVA = "0x1189ADC", Offset = "0x1189ADC", VA = "0x1189ADC")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000917")]
		public Vector2 Up
		{
			[Token(Token = "0x60029E5")]
			[Address(RVA = "0x1189BB4", Offset = "0x1189BB4", VA = "0x1189BB4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000918")]
		public CircleEpsilon Epsilon
		{
			[Token(Token = "0x60029E6")]
			[Address(RVA = "0x1189C8C", Offset = "0x1189C8C", VA = "0x1189C8C")]
			get
			{
				return default(CircleEpsilon);
			}
			[Token(Token = "0x60029E7")]
			[Address(RVA = "0x1189C98", Offset = "0x1189C98", VA = "0x1189C98")]
			set
			{
			}
		}

		[Token(Token = "0x17000919")]
		public float RadiusEps
		{
			[Token(Token = "0x60029E8")]
			[Address(RVA = "0x1189CA4", Offset = "0x1189CA4", VA = "0x1189CA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60029E9")]
			[Address(RVA = "0x1189CAC", Offset = "0x1189CAC", VA = "0x1189CAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700091A")]
		public float WireEps
		{
			[Token(Token = "0x60029EA")]
			[Address(RVA = "0x1189CB8", Offset = "0x1189CB8", VA = "0x1189CB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60029EB")]
			[Address(RVA = "0x1189CC0", Offset = "0x1189CC0", VA = "0x1189CC0")]
			set
			{
			}
		}

		[Token(Token = "0x1700091B")]
		public int NumBorderPoints
		{
			[Token(Token = "0x60029EC")]
			[Address(RVA = "0x1189CCC", Offset = "0x1189CCC", VA = "0x1189CCC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60029ED")]
			[Address(RVA = "0x1189CD4", Offset = "0x1189CD4", VA = "0x1189CD4")]
			set
			{
			}
		}

		[Token(Token = "0x1700091C")]
		public Shape2DPtContainMode PtContainMode
		{
			[Token(Token = "0x60029EE")]
			[Address(RVA = "0x1189CF0", Offset = "0x1189CF0", VA = "0x1189CF0")]
			get
			{
				return default(Shape2DPtContainMode);
			}
			[Token(Token = "0x60029EF")]
			[Address(RVA = "0x1189CF8", Offset = "0x1189CF8", VA = "0x1189CF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700091D")]
		public static Vector2 ModelRight
		{
			[Token(Token = "0x60029F0")]
			[Address(RVA = "0x1189B74", Offset = "0x1189B74", VA = "0x1189B74")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700091E")]
		public static Vector2 ModelUp
		{
			[Token(Token = "0x60029F1")]
			[Address(RVA = "0x1189C4C", Offset = "0x1189C4C", VA = "0x1189C4C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700091F")]
		public static Vector2 ModelCenter
		{
			[Token(Token = "0x60029F2")]
			[Address(RVA = "0x1189D00", Offset = "0x1189D00", VA = "0x1189D00")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0x1189D40", Offset = "0x1189D40", VA = "0x1189D40")]
		public Vector2 GetExtentPoint(Shape2DExtentPoint extentPt)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60029F4")]
		[Address(RVA = "0x1189E14", Offset = "0x1189E14", VA = "0x1189E14", Slot = "5")]
		public override void RenderBorder(Camera camera)
		{
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0x1189EE8", Offset = "0x1189EE8", VA = "0x1189EE8", Slot = "4")]
		public override void RenderArea(Camera camera)
		{
		}

		[Token(Token = "0x60029F6")]
		[Address(RVA = "0x1189F68", Offset = "0x1189F68", VA = "0x1189F68", Slot = "6")]
		public override bool ContainsPoint(Vector2 point)
		{
			return default(bool);
		}

		[Token(Token = "0x60029F7")]
		[Address(RVA = "0x1189F8C", Offset = "0x1189F8C", VA = "0x1189F8C")]
		public List<Vector2> GetExtentPoints()
		{
			return null;
		}

		[Token(Token = "0x60029F8")]
		[Address(RVA = "0x1189F9C", Offset = "0x1189F9C", VA = "0x1189F9C", Slot = "7")]
		public override Rect GetEncapsulatingRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0x1189E78", Offset = "0x1189E78", VA = "0x1189E78")]
		private void CalcModelBorderPoints()
		{
		}

		[Token(Token = "0x60029FA")]
		[Address(RVA = "0x1189FBC", Offset = "0x1189FBC", VA = "0x1189FBC")]
		public CircleShape2D()
		{
		}
	}
	[Token(Token = "0x2000624")]
	public class CircleShape3D : Shape3D
	{
		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _center;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _radius;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Quaternion _rotation;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CircleEpsilon _epsilon;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Shape3DRaycastMode _raycastMode;

		[Token(Token = "0x17000920")]
		public Vector3 Center
		{
			[Token(Token = "0x60029FB")]
			[Address(RVA = "0x118A064", Offset = "0x118A064", VA = "0x118A064")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60029FC")]
			[Address(RVA = "0x118A070", Offset = "0x118A070", VA = "0x118A070")]
			set
			{
			}
		}

		[Token(Token = "0x17000921")]
		public float Radius
		{
			[Token(Token = "0x60029FD")]
			[Address(RVA = "0x118A07C", Offset = "0x118A07C", VA = "0x118A07C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60029FE")]
			[Address(RVA = "0x118A084", Offset = "0x118A084", VA = "0x118A084")]
			set
			{
			}
		}

		[Token(Token = "0x17000922")]
		public Quaternion Rotation
		{
			[Token(Token = "0x60029FF")]
			[Address(RVA = "0x118A090", Offset = "0x118A090", VA = "0x118A090")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002A00")]
			[Address(RVA = "0x118A09C", Offset = "0x118A09C", VA = "0x118A09C")]
			set
			{
			}
		}

		[Token(Token = "0x17000923")]
		public Vector3 Right
		{
			[Token(Token = "0x6002A01")]
			[Address(RVA = "0x118A0A8", Offset = "0x118A0A8", VA = "0x118A0A8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000924")]
		public Vector3 Up
		{
			[Token(Token = "0x6002A02")]
			[Address(RVA = "0x118A134", Offset = "0x118A134", VA = "0x118A134")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000925")]
		public Vector3 Look
		{
			[Token(Token = "0x6002A03")]
			[Address(RVA = "0x118A1C0", Offset = "0x118A1C0", VA = "0x118A1C0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000926")]
		public Vector3 Normal
		{
			[Token(Token = "0x6002A04")]
			[Address(RVA = "0x118A24C", Offset = "0x118A24C", VA = "0x118A24C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000927")]
		public CircleEpsilon Epsilon
		{
			[Token(Token = "0x6002A05")]
			[Address(RVA = "0x118A250", Offset = "0x118A250", VA = "0x118A250")]
			get
			{
				return default(CircleEpsilon);
			}
			[Token(Token = "0x6002A06")]
			[Address(RVA = "0x118A25C", Offset = "0x118A25C", VA = "0x118A25C")]
			set
			{
			}
		}

		[Token(Token = "0x17000928")]
		public float RadiusEps
		{
			[Token(Token = "0x6002A07")]
			[Address(RVA = "0x118A268", Offset = "0x118A268", VA = "0x118A268")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A08")]
			[Address(RVA = "0x118A270", Offset = "0x118A270", VA = "0x118A270")]
			set
			{
			}
		}

		[Token(Token = "0x17000929")]
		public float ExtrudeEps
		{
			[Token(Token = "0x6002A09")]
			[Address(RVA = "0x118A27C", Offset = "0x118A27C", VA = "0x118A27C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A0A")]
			[Address(RVA = "0x118A284", Offset = "0x118A284", VA = "0x118A284")]
			set
			{
			}
		}

		[Token(Token = "0x1700092A")]
		public float WireEps
		{
			[Token(Token = "0x6002A0B")]
			[Address(RVA = "0x118A290", Offset = "0x118A290", VA = "0x118A290")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A0C")]
			[Address(RVA = "0x118A298", Offset = "0x118A298", VA = "0x118A298")]
			set
			{
			}
		}

		[Token(Token = "0x1700092B")]
		public Shape3DRaycastMode RaycastMode
		{
			[Token(Token = "0x6002A0D")]
			[Address(RVA = "0x118A2A4", Offset = "0x118A2A4", VA = "0x118A2A4")]
			get
			{
				return default(Shape3DRaycastMode);
			}
			[Token(Token = "0x6002A0E")]
			[Address(RVA = "0x118A2AC", Offset = "0x118A2AC", VA = "0x118A2AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700092C")]
		public static Vector3 ModelRight
		{
			[Token(Token = "0x6002A0F")]
			[Address(RVA = "0x118A0F0", Offset = "0x118A0F0", VA = "0x118A0F0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700092D")]
		public static Vector3 ModelUp
		{
			[Token(Token = "0x6002A10")]
			[Address(RVA = "0x118A17C", Offset = "0x118A17C", VA = "0x118A17C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700092E")]
		public static Vector3 ModelLook
		{
			[Token(Token = "0x6002A11")]
			[Address(RVA = "0x118A208", Offset = "0x118A208", VA = "0x118A208")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700092F")]
		public static Vector3 ModelCenter
		{
			[Token(Token = "0x6002A12")]
			[Address(RVA = "0x118A2B4", Offset = "0x118A2B4", VA = "0x118A2B4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000930")]
		public static Vector3 ModelNormal
		{
			[Token(Token = "0x6002A13")]
			[Address(RVA = "0x118A2F8", Offset = "0x118A2F8", VA = "0x118A2F8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002A14")]
		[Address(RVA = "0x118A2FC", Offset = "0x118A2FC", VA = "0x118A2FC")]
		public void AlignNormal(Vector3 axis)
		{
		}

		[Token(Token = "0x6002A15")]
		[Address(RVA = "0x118A3F8", Offset = "0x118A3F8", VA = "0x118A3F8")]
		public void AlignRight(Vector3 axis)
		{
		}

		[Token(Token = "0x6002A16")]
		[Address(RVA = "0x118A4F4", Offset = "0x118A4F4", VA = "0x118A4F4")]
		public void AlignUp(Vector3 axis)
		{
		}

		[Token(Token = "0x6002A17")]
		[Address(RVA = "0x118A5F0", Offset = "0x118A5F0", VA = "0x118A5F0", Slot = "5")]
		public override void RenderSolid()
		{
		}

		[Token(Token = "0x6002A18")]
		[Address(RVA = "0x118A7A4", Offset = "0x118A7A4", VA = "0x118A7A4", Slot = "6")]
		public override void RenderWire()
		{
		}

		[Token(Token = "0x6002A19")]
		[Address(RVA = "0x118A958", Offset = "0x118A958", VA = "0x118A958", Slot = "7")]
		public override bool Raycast(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A1A")]
		[Address(RVA = "0x118AA54", Offset = "0x118AA54", VA = "0x118AA54", Slot = "4")]
		public override bool RaycastWire(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A1B")]
		[Address(RVA = "0x118AAE4", Offset = "0x118AAE4", VA = "0x118AAE4")]
		public bool ContainsPoint(Vector3 point, bool checkOnPlane)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A1C")]
		[Address(RVA = "0x118AB84", Offset = "0x118AB84", VA = "0x118AB84")]
		public List<Vector3> GetExtentPoints()
		{
			return null;
		}

		[Token(Token = "0x6002A1D")]
		[Address(RVA = "0x118AB9C", Offset = "0x118AB9C", VA = "0x118AB9C", Slot = "8")]
		public override AABB GetAABB()
		{
			return default(AABB);
		}

		[Token(Token = "0x6002A1E")]
		[Address(RVA = "0x118ABC8", Offset = "0x118ABC8", VA = "0x118ABC8")]
		public CircleShape3D()
		{
		}
	}
	[Token(Token = "0x2000625")]
	public class ConeShape2D : Shape2D
	{
		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2 _baseCenter;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _rotationDegrees;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _baseRadius;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _height;

		[Token(Token = "0x17000931")]
		public Vector2 BaseCenter
		{
			[Token(Token = "0x6002A1F")]
			[Address(RVA = "0x118AC34", Offset = "0x118AC34", VA = "0x118AC34")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002A20")]
			[Address(RVA = "0x118AC3C", Offset = "0x118AC3C", VA = "0x118AC3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000932")]
		public Vector2 BaseLeft
		{
			[Token(Token = "0x6002A21")]
			[Address(RVA = "0x118AC44", Offset = "0x118AC44", VA = "0x118AC44")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002A22")]
			[Address(RVA = "0x118ACCC", Offset = "0x118ACCC", VA = "0x118ACCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000933")]
		public Vector2 BaseRight
		{
			[Token(Token = "0x6002A23")]
			[Address(RVA = "0x118AD08", Offset = "0x118AD08", VA = "0x118AD08")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002A24")]
			[Address(RVA = "0x118AD3C", Offset = "0x118AD3C", VA = "0x118AD3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000934")]
		public Vector2 Tip
		{
			[Token(Token = "0x6002A25")]
			[Address(RVA = "0x118AD78", Offset = "0x118AD78", VA = "0x118AD78")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002A26")]
			[Address(RVA = "0x118ADB0", Offset = "0x118ADB0", VA = "0x118ADB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000935")]
		public float BaseRadius
		{
			[Token(Token = "0x6002A27")]
			[Address(RVA = "0x118ADEC", Offset = "0x118ADEC", VA = "0x118ADEC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A28")]
			[Address(RVA = "0x118ADF4", Offset = "0x118ADF4", VA = "0x118ADF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000936")]
		public float Height
		{
			[Token(Token = "0x6002A29")]
			[Address(RVA = "0x118AE00", Offset = "0x118AE00", VA = "0x118AE00")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A2A")]
			[Address(RVA = "0x118AE08", Offset = "0x118AE08", VA = "0x118AE08")]
			set
			{
			}
		}

		[Token(Token = "0x17000937")]
		public float RotationDegrees
		{
			[Token(Token = "0x6002A2B")]
			[Address(RVA = "0x118AE14", Offset = "0x118AE14", VA = "0x118AE14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A2C")]
			[Address(RVA = "0x118AE1C", Offset = "0x118AE1C", VA = "0x118AE1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000938")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6002A2D")]
			[Address(RVA = "0x118AE3C", Offset = "0x118AE3C", VA = "0x118AE3C")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000939")]
		public Vector2 CentralAxis
		{
			[Token(Token = "0x6002A2E")]
			[Address(RVA = "0x118ADAC", Offset = "0x118ADAC", VA = "0x118ADAC")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700093A")]
		public Vector2 Right
		{
			[Token(Token = "0x6002A2F")]
			[Address(RVA = "0x118AC78", Offset = "0x118AC78", VA = "0x118AC78")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700093B")]
		public Vector2 Up
		{
			[Token(Token = "0x6002A30")]
			[Address(RVA = "0x118AE94", Offset = "0x118AE94", VA = "0x118AE94")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700093C")]
		public static Vector2 ModelRight
		{
			[Token(Token = "0x6002A31")]
			[Address(RVA = "0x118AEE8", Offset = "0x118AEE8", VA = "0x118AEE8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700093D")]
		public static Vector2 ModelUp
		{
			[Token(Token = "0x6002A32")]
			[Address(RVA = "0x118AF28", Offset = "0x118AF28", VA = "0x118AF28")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700093E")]
		public static Vector2 ModelBaseCenter
		{
			[Token(Token = "0x6002A33")]
			[Address(RVA = "0x118AF68", Offset = "0x118AF68", VA = "0x118AF68")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6002A34")]
		[Address(RVA = "0x118AFA8", Offset = "0x118AFA8", VA = "0x118AFA8", Slot = "4")]
		public override void RenderArea(Camera camera)
		{
		}

		[Token(Token = "0x6002A35")]
		[Address(RVA = "0x118B17C", Offset = "0x118B17C", VA = "0x118B17C", Slot = "5")]
		public override void RenderBorder(Camera camera)
		{
		}

		[Token(Token = "0x6002A36")]
		[Address(RVA = "0x118B37C", Offset = "0x118B37C", VA = "0x118B37C", Slot = "6")]
		public override bool ContainsPoint(Vector2 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A37")]
		[Address(RVA = "0x118B490", Offset = "0x118B490", VA = "0x118B490", Slot = "7")]
		public override Rect GetEncapsulatingRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6002A38")]
		[Address(RVA = "0x118B680", Offset = "0x118B680", VA = "0x118B680")]
		public ConeShape2D()
		{
		}
	}
	[Token(Token = "0x2000626")]
	public class ConeShape3D : Shape3D
	{
		[Token(Token = "0x2000627")]
		public enum WireRenderMode
		{
			[Token(Token = "0x4001BCC")]
			Basic,
			[Token(Token = "0x4001BCD")]
			Detailed
		}

		[Token(Token = "0x2000628")]
		public class WireRenderDescriptor
		{
			[Token(Token = "0x4001BCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private WireRenderMode _wireMode;

			[Token(Token = "0x4001BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int _numDetailAxialRings;

			[Token(Token = "0x4001BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int _numDetailAxialSegments;

			[Token(Token = "0x17000950")]
			public WireRenderMode WireMode
			{
				[Token(Token = "0x6002A5A")]
				[Address(RVA = "0x118C924", Offset = "0x118C924", VA = "0x118C924")]
				get
				{
					return default(WireRenderMode);
				}
				[Token(Token = "0x6002A5B")]
				[Address(RVA = "0x118C92C", Offset = "0x118C92C", VA = "0x118C92C")]
				set
				{
				}
			}

			[Token(Token = "0x17000951")]
			public int NumDetailAxialRings
			{
				[Token(Token = "0x6002A5C")]
				[Address(RVA = "0x118C934", Offset = "0x118C934", VA = "0x118C934")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002A5D")]
				[Address(RVA = "0x118C93C", Offset = "0x118C93C", VA = "0x118C93C")]
				set
				{
				}
			}

			[Token(Token = "0x17000952")]
			public int NumDetailAxialSegments
			{
				[Token(Token = "0x6002A5E")]
				[Address(RVA = "0x118C950", Offset = "0x118C950", VA = "0x118C950")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002A5F")]
				[Address(RVA = "0x118C958", Offset = "0x118C958", VA = "0x118C958")]
				set
				{
				}
			}

			[Token(Token = "0x6002A60")]
			[Address(RVA = "0x118C914", Offset = "0x118C914", VA = "0x118C914")]
			public WireRenderDescriptor()
			{
			}
		}

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WireRenderDescriptor _wireRenderDesc;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _baseCenter;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion _rotation;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _baseRadius;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _height;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private ConeEpsilon _epsilon;

		[Token(Token = "0x1700093F")]
		public Vector3 BaseCenter
		{
			[Token(Token = "0x6002A39")]
			[Address(RVA = "0x118B6A8", Offset = "0x118B6A8", VA = "0x118B6A8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A3A")]
			[Address(RVA = "0x118B6B4", Offset = "0x118B6B4", VA = "0x118B6B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000940")]
		public Vector3 Tip
		{
			[Token(Token = "0x6002A3B")]
			[Address(RVA = "0x118B6C0", Offset = "0x118B6C0", VA = "0x118B6C0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A3C")]
			[Address(RVA = "0x118B70C", Offset = "0x118B70C", VA = "0x118B70C")]
			set
			{
			}
		}

		[Token(Token = "0x17000941")]
		public float BaseRadius
		{
			[Token(Token = "0x6002A3D")]
			[Address(RVA = "0x118B760", Offset = "0x118B760", VA = "0x118B760")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A3E")]
			[Address(RVA = "0x118B768", Offset = "0x118B768", VA = "0x118B768")]
			set
			{
			}
		}

		[Token(Token = "0x17000942")]
		public float Height
		{
			[Token(Token = "0x6002A3F")]
			[Address(RVA = "0x118B774", Offset = "0x118B774", VA = "0x118B774")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A40")]
			[Address(RVA = "0x118B77C", Offset = "0x118B77C", VA = "0x118B77C")]
			set
			{
			}
		}

		[Token(Token = "0x17000943")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6002A41")]
			[Address(RVA = "0x118B788", Offset = "0x118B788", VA = "0x118B788")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002A42")]
			[Address(RVA = "0x118B794", Offset = "0x118B794", VA = "0x118B794")]
			set
			{
			}
		}

		[Token(Token = "0x17000944")]
		public Vector3 CentralAxis
		{
			[Token(Token = "0x6002A43")]
			[Address(RVA = "0x118B708", Offset = "0x118B708", VA = "0x118B708")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000945")]
		public Vector3 Right
		{
			[Token(Token = "0x6002A44")]
			[Address(RVA = "0x118B7E8", Offset = "0x118B7E8", VA = "0x118B7E8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000946")]
		public Vector3 Up
		{
			[Token(Token = "0x6002A45")]
			[Address(RVA = "0x118B7A0", Offset = "0x118B7A0", VA = "0x118B7A0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000947")]
		public Vector3 Look
		{
			[Token(Token = "0x6002A46")]
			[Address(RVA = "0x118B8B8", Offset = "0x118B8B8", VA = "0x118B8B8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000948")]
		public ConeEpsilon Epsilon
		{
			[Token(Token = "0x6002A47")]
			[Address(RVA = "0x118B944", Offset = "0x118B944", VA = "0x118B944")]
			get
			{
				return default(ConeEpsilon);
			}
			[Token(Token = "0x6002A48")]
			[Address(RVA = "0x118B94C", Offset = "0x118B94C", VA = "0x118B94C")]
			set
			{
			}
		}

		[Token(Token = "0x17000949")]
		public float HrzEps
		{
			[Token(Token = "0x6002A49")]
			[Address(RVA = "0x118B954", Offset = "0x118B954", VA = "0x118B954")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A4A")]
			[Address(RVA = "0x118B95C", Offset = "0x118B95C", VA = "0x118B95C")]
			set
			{
			}
		}

		[Token(Token = "0x1700094A")]
		public float VertEps
		{
			[Token(Token = "0x6002A4B")]
			[Address(RVA = "0x118B968", Offset = "0x118B968", VA = "0x118B968")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A4C")]
			[Address(RVA = "0x118B970", Offset = "0x118B970", VA = "0x118B970")]
			set
			{
			}
		}

		[Token(Token = "0x1700094B")]
		public WireRenderDescriptor WireRenderDesc
		{
			[Token(Token = "0x6002A4D")]
			[Address(RVA = "0x118B97C", Offset = "0x118B97C", VA = "0x118B97C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700094C")]
		public static Vector3 ModelRight
		{
			[Token(Token = "0x6002A4E")]
			[Address(RVA = "0x118B830", Offset = "0x118B830", VA = "0x118B830")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700094D")]
		public static Vector3 ModelUp
		{
			[Token(Token = "0x6002A4F")]
			[Address(RVA = "0x118B874", Offset = "0x118B874", VA = "0x118B874")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700094E")]
		public static Vector3 ModelLook
		{
			[Token(Token = "0x6002A50")]
			[Address(RVA = "0x118B900", Offset = "0x118B900", VA = "0x118B900")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700094F")]
		public static Vector3 ModelBaseCenter
		{
			[Token(Token = "0x6002A51")]
			[Address(RVA = "0x118B984", Offset = "0x118B984", VA = "0x118B984")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002A52")]
		[Address(RVA = "0x118B9C8", Offset = "0x118B9C8", VA = "0x118B9C8")]
		public void AlignTip(Vector3 axis)
		{
		}

		[Token(Token = "0x6002A53")]
		[Address(RVA = "0x118BAC4", Offset = "0x118BAC4", VA = "0x118BAC4", Slot = "5")]
		public override void RenderSolid()
		{
		}

		[Token(Token = "0x6002A54")]
		[Address(RVA = "0x118BC30", Offset = "0x118BC30", VA = "0x118BC30", Slot = "6")]
		public override void RenderWire()
		{
		}

		[Token(Token = "0x6002A55")]
		[Address(RVA = "0x118C740", Offset = "0x118C740", VA = "0x118C740", Slot = "7")]
		public override bool Raycast(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A56")]
		[Address(RVA = "0x118C79C", Offset = "0x118C79C", VA = "0x118C79C")]
		public bool ContainsPoint(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0x118C728", Offset = "0x118C728", VA = "0x118C728")]
		public List<Vector3> GetBaseExtents()
		{
			return null;
		}

		[Token(Token = "0x6002A58")]
		[Address(RVA = "0x118C7E0", Offset = "0x118C7E0", VA = "0x118C7E0", Slot = "8")]
		public override AABB GetAABB()
		{
			return default(AABB);
		}

		[Token(Token = "0x6002A59")]
		[Address(RVA = "0x118C848", Offset = "0x118C848", VA = "0x118C848")]
		public ConeShape3D()
		{
		}
	}
	[Token(Token = "0x2000629")]
	public class CylinderShape3D : Shape3D
	{
		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _baseCenter;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _radius;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _height;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion _rotation;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private CylinderEpsilon _epsilon;

		[Token(Token = "0x17000953")]
		public Vector3 BaseCenter
		{
			[Token(Token = "0x6002A61")]
			[Address(RVA = "0x118C96C", Offset = "0x118C96C", VA = "0x118C96C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A62")]
			[Address(RVA = "0x118C978", Offset = "0x118C978", VA = "0x118C978")]
			set
			{
			}
		}

		[Token(Token = "0x17000954")]
		public Vector3 TopCenter
		{
			[Token(Token = "0x6002A63")]
			[Address(RVA = "0x118C984", Offset = "0x118C984", VA = "0x118C984")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A64")]
			[Address(RVA = "0x118CA14", Offset = "0x118CA14", VA = "0x118CA14")]
			set
			{
			}
		}

		[Token(Token = "0x17000955")]
		public Vector3 Center
		{
			[Token(Token = "0x6002A65")]
			[Address(RVA = "0x118CA68", Offset = "0x118CA68", VA = "0x118CA68")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A66")]
			[Address(RVA = "0x118CAC0", Offset = "0x118CAC0", VA = "0x118CAC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000956")]
		public float Radius
		{
			[Token(Token = "0x6002A67")]
			[Address(RVA = "0x118CB24", Offset = "0x118CB24", VA = "0x118CB24")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A68")]
			[Address(RVA = "0x118CB2C", Offset = "0x118CB2C", VA = "0x118CB2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000957")]
		public float Height
		{
			[Token(Token = "0x6002A69")]
			[Address(RVA = "0x118CB38", Offset = "0x118CB38", VA = "0x118CB38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A6A")]
			[Address(RVA = "0x118CB40", Offset = "0x118CB40", VA = "0x118CB40")]
			set
			{
			}
		}

		[Token(Token = "0x17000958")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6002A6B")]
			[Address(RVA = "0x118CB4C", Offset = "0x118CB4C", VA = "0x118CB4C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002A6C")]
			[Address(RVA = "0x118CB58", Offset = "0x118CB58", VA = "0x118CB58")]
			set
			{
			}
		}

		[Token(Token = "0x17000959")]
		public CylinderEpsilon Epsilon
		{
			[Token(Token = "0x6002A6D")]
			[Address(RVA = "0x118CB64", Offset = "0x118CB64", VA = "0x118CB64")]
			get
			{
				return default(CylinderEpsilon);
			}
			[Token(Token = "0x6002A6E")]
			[Address(RVA = "0x118CB6C", Offset = "0x118CB6C", VA = "0x118CB6C")]
			set
			{
			}
		}

		[Token(Token = "0x1700095A")]
		public float RadiusEps
		{
			[Token(Token = "0x6002A6F")]
			[Address(RVA = "0x118CB74", Offset = "0x118CB74", VA = "0x118CB74")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A70")]
			[Address(RVA = "0x118CB7C", Offset = "0x118CB7C", VA = "0x118CB7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700095B")]
		public float VertEps
		{
			[Token(Token = "0x6002A71")]
			[Address(RVA = "0x118CB88", Offset = "0x118CB88", VA = "0x118CB88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A72")]
			[Address(RVA = "0x118CB90", Offset = "0x118CB90", VA = "0x118CB90")]
			set
			{
			}
		}

		[Token(Token = "0x1700095C")]
		public Vector3 CentralAxis
		{
			[Token(Token = "0x6002A73")]
			[Address(RVA = "0x118C9CC", Offset = "0x118C9CC", VA = "0x118C9CC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700095D")]
		public Vector3 Right
		{
			[Token(Token = "0x6002A74")]
			[Address(RVA = "0x118CBE0", Offset = "0x118CBE0", VA = "0x118CBE0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700095E")]
		public Vector3 Up
		{
			[Token(Token = "0x6002A75")]
			[Address(RVA = "0x118CC6C", Offset = "0x118CC6C", VA = "0x118CC6C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700095F")]
		public Vector3 Look
		{
			[Token(Token = "0x6002A76")]
			[Address(RVA = "0x118CCB4", Offset = "0x118CCB4", VA = "0x118CCB4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000960")]
		public static Vector3 ModelRight
		{
			[Token(Token = "0x6002A77")]
			[Address(RVA = "0x118CC28", Offset = "0x118CC28", VA = "0x118CC28")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000961")]
		public static Vector3 ModelUp
		{
			[Token(Token = "0x6002A78")]
			[Address(RVA = "0x118CB9C", Offset = "0x118CB9C", VA = "0x118CB9C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000962")]
		public static Vector3 ModelLook
		{
			[Token(Token = "0x6002A79")]
			[Address(RVA = "0x118CCFC", Offset = "0x118CCFC", VA = "0x118CCFC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000963")]
		public static Vector3 ModelBaseCenter
		{
			[Token(Token = "0x6002A7A")]
			[Address(RVA = "0x118CD40", Offset = "0x118CD40", VA = "0x118CD40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002A7B")]
		[Address(RVA = "0x118CD84", Offset = "0x118CD84", VA = "0x118CD84")]
		public void AlignCentralAxis(Vector3 axis)
		{
		}

		[Token(Token = "0x6002A7C")]
		[Address(RVA = "0x118CE80", Offset = "0x118CE80", VA = "0x118CE80", Slot = "5")]
		public override void RenderSolid()
		{
		}

		[Token(Token = "0x6002A7D")]
		[Address(RVA = "0x118CFEC", Offset = "0x118CFEC", VA = "0x118CFEC", Slot = "6")]
		public override void RenderWire()
		{
		}

		[Token(Token = "0x6002A7E")]
		[Address(RVA = "0x118D76C", Offset = "0x118D76C", VA = "0x118D76C", Slot = "7")]
		public override bool Raycast(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0x118D7F4", Offset = "0x118D7F4", VA = "0x118D7F4")]
		public bool ContainsPoint(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002A80")]
		[Address(RVA = "0x118D730", Offset = "0x118D730", VA = "0x118D730")]
		public List<Vector3> GetBottomCapExtentPoints()
		{
			return null;
		}

		[Token(Token = "0x6002A81")]
		[Address(RVA = "0x118D748", Offset = "0x118D748", VA = "0x118D748")]
		public List<Vector3> GetTopCapExtentPoints()
		{
			return null;
		}

		[Token(Token = "0x6002A82")]
		[Address(RVA = "0x118D87C", Offset = "0x118D87C", VA = "0x118D87C")]
		public AABB GetModelAABB()
		{
			return default(AABB);
		}

		[Token(Token = "0x6002A83")]
		[Address(RVA = "0x118D908", Offset = "0x118D908", VA = "0x118D908", Slot = "8")]
		public override AABB GetAABB()
		{
			return default(AABB);
		}

		[Token(Token = "0x6002A84")]
		[Address(RVA = "0x118DA2C", Offset = "0x118DA2C", VA = "0x118DA2C")]
		public CylinderShape3D()
		{
		}
	}
	[Token(Token = "0x200062A")]
	public class CylTorusShape3D : Shape3D
	{
		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _coreRadius;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float _hrzRadius;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _vertRadius;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 _center;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion _rotation;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TorusEpsilon _epsilon;

		[Token(Token = "0x17000964")]
		public float CoreRadius
		{
			[Token(Token = "0x6002A85")]
			[Address(RVA = "0x118DA98", Offset = "0x118DA98", VA = "0x118DA98")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A86")]
			[Address(RVA = "0x118DAA0", Offset = "0x118DAA0", VA = "0x118DAA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000965")]
		public float HrzRadius
		{
			[Token(Token = "0x6002A87")]
			[Address(RVA = "0x118DAAC", Offset = "0x118DAAC", VA = "0x118DAAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A88")]
			[Address(RVA = "0x118DAB4", Offset = "0x118DAB4", VA = "0x118DAB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000966")]
		public float VertRadius
		{
			[Token(Token = "0x6002A89")]
			[Address(RVA = "0x118DAC0", Offset = "0x118DAC0", VA = "0x118DAC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A8A")]
			[Address(RVA = "0x118DAC8", Offset = "0x118DAC8", VA = "0x118DAC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000967")]
		public Vector3 Bottom
		{
			[Token(Token = "0x6002A8B")]
			[Address(RVA = "0x118DAD4", Offset = "0x118DAD4", VA = "0x118DAD4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A8C")]
			[Address(RVA = "0x118DB64", Offset = "0x118DB64", VA = "0x118DB64")]
			set
			{
			}
		}

		[Token(Token = "0x17000968")]
		public Vector3 Top
		{
			[Token(Token = "0x6002A8D")]
			[Address(RVA = "0x118DBB8", Offset = "0x118DBB8", VA = "0x118DBB8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A8E")]
			[Address(RVA = "0x118DC00", Offset = "0x118DC00", VA = "0x118DC00")]
			set
			{
			}
		}

		[Token(Token = "0x17000969")]
		public Vector3 Center
		{
			[Token(Token = "0x6002A8F")]
			[Address(RVA = "0x118DC54", Offset = "0x118DC54", VA = "0x118DC54")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002A90")]
			[Address(RVA = "0x118DC60", Offset = "0x118DC60", VA = "0x118DC60")]
			set
			{
			}
		}

		[Token(Token = "0x1700096A")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6002A91")]
			[Address(RVA = "0x118DC6C", Offset = "0x118DC6C", VA = "0x118DC6C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002A92")]
			[Address(RVA = "0x118DC78", Offset = "0x118DC78", VA = "0x118DC78")]
			set
			{
			}
		}

		[Token(Token = "0x1700096B")]
		public Vector3 Right
		{
			[Token(Token = "0x6002A93")]
			[Address(RVA = "0x118DC84", Offset = "0x118DC84", VA = "0x118DC84")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700096C")]
		public Vector3 Up
		{
			[Token(Token = "0x6002A94")]
			[Address(RVA = "0x118DB1C", Offset = "0x118DB1C", VA = "0x118DB1C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700096D")]
		public Vector3 Look
		{
			[Token(Token = "0x6002A95")]
			[Address(RVA = "0x118DD54", Offset = "0x118DD54", VA = "0x118DD54")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700096E")]
		public TorusEpsilon Epsilon
		{
			[Token(Token = "0x6002A96")]
			[Address(RVA = "0x118DDE0", Offset = "0x118DDE0", VA = "0x118DDE0")]
			get
			{
				return default(TorusEpsilon);
			}
			[Token(Token = "0x6002A97")]
			[Address(RVA = "0x118DDEC", Offset = "0x118DDEC", VA = "0x118DDEC")]
			set
			{
			}
		}

		[Token(Token = "0x1700096F")]
		public float CylHrzRadiusEps
		{
			[Token(Token = "0x6002A98")]
			[Address(RVA = "0x118DDF8", Offset = "0x118DDF8", VA = "0x118DDF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A99")]
			[Address(RVA = "0x118DE00", Offset = "0x118DE00", VA = "0x118DE00")]
			set
			{
			}
		}

		[Token(Token = "0x17000970")]
		public float CylVertRadiusEps
		{
			[Token(Token = "0x6002A9A")]
			[Address(RVA = "0x118DE10", Offset = "0x118DE10", VA = "0x118DE10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002A9B")]
			[Address(RVA = "0x118DE18", Offset = "0x118DE18", VA = "0x118DE18")]
			set
			{
			}
		}

		[Token(Token = "0x17000971")]
		public static Vector3 ModelRight
		{
			[Token(Token = "0x6002A9C")]
			[Address(RVA = "0x118DCCC", Offset = "0x118DCCC", VA = "0x118DCCC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000972")]
		public static Vector3 ModelUp
		{
			[Token(Token = "0x6002A9D")]
			[Address(RVA = "0x118DD10", Offset = "0x118DD10", VA = "0x118DD10")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000973")]
		public static Vector3 ModelLook
		{
			[Token(Token = "0x6002A9E")]
			[Address(RVA = "0x118DD9C", Offset = "0x118DD9C", VA = "0x118DD9C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000974")]
		public static Vector3 ModelCenter
		{
			[Token(Token = "0x6002A9F")]
			[Address(RVA = "0x118DE28", Offset = "0x118DE28", VA = "0x118DE28")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002AA0")]
		[Address(RVA = "0x118DE6C", Offset = "0x118DE6C", VA = "0x118DE6C", Slot = "7")]
		public override bool Raycast(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AA1")]
		[Address(RVA = "0x118DED8", Offset = "0x118DED8", VA = "0x118DED8", Slot = "5")]
		public override void RenderSolid()
		{
		}

		[Token(Token = "0x6002AA2")]
		[Address(RVA = "0x118E0BC", Offset = "0x118E0BC", VA = "0x118E0BC", Slot = "6")]
		public override void RenderWire()
		{
		}

		[Token(Token = "0x6002AA3")]
		[Address(RVA = "0x118E528", Offset = "0x118E528", VA = "0x118E528")]
		public List<Vector3> GetHrzExtents()
		{
			return null;
		}

		[Token(Token = "0x6002AA4")]
		[Address(RVA = "0x118E564", Offset = "0x118E564", VA = "0x118E564", Slot = "8")]
		public override AABB GetAABB()
		{
			return default(AABB);
		}

		[Token(Token = "0x6002AA5")]
		[Address(RVA = "0x118E5BC", Offset = "0x118E5BC", VA = "0x118E5BC")]
		public CylTorusShape3D()
		{
		}
	}
	[Token(Token = "0x200062B")]
	public class EqTriangle2D : Shape2D
	{
		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _sideLength;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float _rotationDegrees;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TriangleEpsilon _epsilon;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2[] _points;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 _centroid;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _arePointsDirty;

		[Token(Token = "0x17000975")]
		public float SideLength
		{
			[Token(Token = "0x6002AA6")]
			[Address(RVA = "0x118E630", Offset = "0x118E630", VA = "0x118E630")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AA7")]
			[Address(RVA = "0x118E638", Offset = "0x118E638", VA = "0x118E638")]
			set
			{
			}
		}

		[Token(Token = "0x17000976")]
		public Vector2 Centroid
		{
			[Token(Token = "0x6002AA8")]
			[Address(RVA = "0x118E64C", Offset = "0x118E64C", VA = "0x118E64C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002AA9")]
			[Address(RVA = "0x118E654", Offset = "0x118E654", VA = "0x118E654")]
			set
			{
			}
		}

		[Token(Token = "0x17000977")]
		public float Altitude
		{
			[Token(Token = "0x6002AAA")]
			[Address(RVA = "0x118E6D4", Offset = "0x118E6D4", VA = "0x118E6D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000978")]
		public float CentroidAltitude
		{
			[Token(Token = "0x6002AAB")]
			[Address(RVA = "0x118E770", Offset = "0x118E770", VA = "0x118E770")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000979")]
		public float RotationDegrees
		{
			[Token(Token = "0x6002AAC")]
			[Address(RVA = "0x118E788", Offset = "0x118E788", VA = "0x118E788")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AAD")]
			[Address(RVA = "0x118E790", Offset = "0x118E790", VA = "0x118E790")]
			set
			{
			}
		}

		[Token(Token = "0x1700097A")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6002AAE")]
			[Address(RVA = "0x118E798", Offset = "0x118E798", VA = "0x118E798")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700097B")]
		public TriangleEpsilon Epsilon
		{
			[Token(Token = "0x6002AAF")]
			[Address(RVA = "0x118E7F0", Offset = "0x118E7F0", VA = "0x118E7F0")]
			get
			{
				return default(TriangleEpsilon);
			}
			[Token(Token = "0x6002AB0")]
			[Address(RVA = "0x118E7FC", Offset = "0x118E7FC", VA = "0x118E7FC")]
			set
			{
			}
		}

		[Token(Token = "0x1700097C")]
		public float AreaEps
		{
			[Token(Token = "0x6002AB1")]
			[Address(RVA = "0x118E808", Offset = "0x118E808", VA = "0x118E808")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AB2")]
			[Address(RVA = "0x118E810", Offset = "0x118E810", VA = "0x118E810")]
			set
			{
			}
		}

		[Token(Token = "0x1700097D")]
		public Vector2 Right
		{
			[Token(Token = "0x6002AB3")]
			[Address(RVA = "0x118E81C", Offset = "0x118E81C", VA = "0x118E81C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700097E")]
		public Vector2 Up
		{
			[Token(Token = "0x6002AB4")]
			[Address(RVA = "0x118E8F4", Offset = "0x118E8F4", VA = "0x118E8F4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700097F")]
		public static Vector2 ModelRight
		{
			[Token(Token = "0x6002AB5")]
			[Address(RVA = "0x118E8B4", Offset = "0x118E8B4", VA = "0x118E8B4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000980")]
		public static Vector2 ModelUp
		{
			[Token(Token = "0x6002AB6")]
			[Address(RVA = "0x118E98C", Offset = "0x118E98C", VA = "0x118E98C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x17000981")]
		public static Vector2 ModelCentroid
		{
			[Token(Token = "0x6002AB7")]
			[Address(RVA = "0x118E9CC", Offset = "0x118E9CC", VA = "0x118E9CC")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6002AB8")]
		[Address(RVA = "0x118EA0C", Offset = "0x118EA0C", VA = "0x118EA0C")]
		public Vector2 GetPoint(EqTrianglePoint point)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002AB9")]
		[Address(RVA = "0x118EBB4", Offset = "0x118EBB4", VA = "0x118EBB4")]
		public void SetPoint(EqTrianglePoint point, Vector2 pointValue)
		{
		}

		[Token(Token = "0x6002ABA")]
		[Address(RVA = "0x118EC50", Offset = "0x118EC50", VA = "0x118EC50")]
		public Vector2 GetEdgeMidPoint(EqTriangleEdge edge)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002ABB")]
		[Address(RVA = "0x118EDC0", Offset = "0x118EDC0", VA = "0x118EDC0")]
		public Vector2 GetEdge(EqTriangleEdge edge)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002ABC")]
		[Address(RVA = "0x118EE2C", Offset = "0x118EE2C", VA = "0x118EE2C", Slot = "4")]
		public override void RenderArea(Camera camera)
		{
		}

		[Token(Token = "0x6002ABD")]
		[Address(RVA = "0x118EFAC", Offset = "0x118EFAC", VA = "0x118EFAC", Slot = "5")]
		public override void RenderBorder(Camera camera)
		{
		}

		[Token(Token = "0x6002ABE")]
		[Address(RVA = "0x118F168", Offset = "0x118F168", VA = "0x118F168", Slot = "6")]
		public override bool ContainsPoint(Vector2 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002ABF")]
		[Address(RVA = "0x118F258", Offset = "0x118F258", VA = "0x118F258", Slot = "7")]
		public override Rect GetEncapsulatingRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6002AC0")]
		[Address(RVA = "0x118EA60", Offset = "0x118EA60", VA = "0x118EA60")]
		private void OnPointsFoundDirty()
		{
		}

		[Token(Token = "0x6002AC1")]
		[Address(RVA = "0x118F280", Offset = "0x118F280", VA = "0x118F280")]
		public EqTriangle2D()
		{
		}
	}
	[Token(Token = "0x200062C")]
	public class EqTriangle3D : Shape3D
	{
		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _sideLength;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Quaternion _rotation;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TriangleEpsilon _epsilon;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3[] _points;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _centroid;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool _arePointsDirty;

		[Token(Token = "0x17000982")]
		public float SideLength
		{
			[Token(Token = "0x6002AC2")]
			[Address(RVA = "0x118F2FC", Offset = "0x118F2FC", VA = "0x118F2FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AC3")]
			[Address(RVA = "0x118F304", Offset = "0x118F304", VA = "0x118F304")]
			set
			{
			}
		}

		[Token(Token = "0x17000983")]
		public Vector3 Centroid
		{
			[Token(Token = "0x6002AC4")]
			[Address(RVA = "0x118F318", Offset = "0x118F318", VA = "0x118F318")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002AC5")]
			[Address(RVA = "0x118F324", Offset = "0x118F324", VA = "0x118F324")]
			set
			{
			}
		}

		[Token(Token = "0x17000984")]
		public float Altitude
		{
			[Token(Token = "0x6002AC6")]
			[Address(RVA = "0x118F3D4", Offset = "0x118F3D4", VA = "0x118F3D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000985")]
		public float CentroidAltitude
		{
			[Token(Token = "0x6002AC7")]
			[Address(RVA = "0x118F470", Offset = "0x118F470", VA = "0x118F470")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000986")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6002AC8")]
			[Address(RVA = "0x118F488", Offset = "0x118F488", VA = "0x118F488")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002AC9")]
			[Address(RVA = "0x118F494", Offset = "0x118F494", VA = "0x118F494")]
			set
			{
			}
		}

		[Token(Token = "0x17000987")]
		public TriangleEpsilon Epsilon
		{
			[Token(Token = "0x6002ACA")]
			[Address(RVA = "0x118F4A0", Offset = "0x118F4A0", VA = "0x118F4A0")]
			get
			{
				return default(TriangleEpsilon);
			}
			[Token(Token = "0x6002ACB")]
			[Address(RVA = "0x118F4AC", Offset = "0x118F4AC", VA = "0x118F4AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000988")]
		public float AreaEps
		{
			[Token(Token = "0x6002ACC")]
			[Address(RVA = "0x118F4B8", Offset = "0x118F4B8", VA = "0x118F4B8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002ACD")]
			[Address(RVA = "0x118F4C0", Offset = "0x118F4C0", VA = "0x118F4C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000989")]
		public float ExtrudeEps
		{
			[Token(Token = "0x6002ACE")]
			[Address(RVA = "0x118F4CC", Offset = "0x118F4CC", VA = "0x118F4CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002ACF")]
			[Address(RVA = "0x118F4D4", Offset = "0x118F4D4", VA = "0x118F4D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700098A")]
		public float WireEps
		{
			[Token(Token = "0x6002AD0")]
			[Address(RVA = "0x118F4E0", Offset = "0x118F4E0", VA = "0x118F4E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AD1")]
			[Address(RVA = "0x118F4E8", Offset = "0x118F4E8", VA = "0x118F4E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700098B")]
		public Vector3 Normal
		{
			[Token(Token = "0x6002AD2")]
			[Address(RVA = "0x118F4F4", Offset = "0x118F4F4", VA = "0x118F4F4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700098C")]
		public Vector3 Right
		{
			[Token(Token = "0x6002AD3")]
			[Address(RVA = "0x118F540", Offset = "0x118F540", VA = "0x118F540")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700098D")]
		public Vector3 Up
		{
			[Token(Token = "0x6002AD4")]
			[Address(RVA = "0x118F5CC", Offset = "0x118F5CC", VA = "0x118F5CC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700098E")]
		public Vector3 Look
		{
			[Token(Token = "0x6002AD5")]
			[Address(RVA = "0x118F4F8", Offset = "0x118F4F8", VA = "0x118F4F8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700098F")]
		public static Vector3 ModelRight
		{
			[Token(Token = "0x6002AD6")]
			[Address(RVA = "0x118F588", Offset = "0x118F588", VA = "0x118F588")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000990")]
		public static Vector3 ModelUp
		{
			[Token(Token = "0x6002AD7")]
			[Address(RVA = "0x118F614", Offset = "0x118F614", VA = "0x118F614")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000991")]
		public static Vector3 ModelLook
		{
			[Token(Token = "0x6002AD8")]
			[Address(RVA = "0x118F658", Offset = "0x118F658", VA = "0x118F658")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000992")]
		public static Vector3 ModelCentroid
		{
			[Token(Token = "0x6002AD9")]
			[Address(RVA = "0x118F69C", Offset = "0x118F69C", VA = "0x118F69C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002ADA")]
		[Address(RVA = "0x118F6E0", Offset = "0x118F6E0", VA = "0x118F6E0")]
		public void AlignNormal(Vector3 axis)
		{
		}

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0x118F7DC", Offset = "0x118F7DC", VA = "0x118F7DC")]
		public void AlignRight(Vector3 axis)
		{
		}

		[Token(Token = "0x6002ADC")]
		[Address(RVA = "0x118F8D8", Offset = "0x118F8D8", VA = "0x118F8D8")]
		public void AlignUp(Vector3 axis)
		{
		}

		[Token(Token = "0x6002ADD")]
		[Address(RVA = "0x118F9D4", Offset = "0x118F9D4", VA = "0x118F9D4")]
		public Vector3 GetPoint(EqTrianglePoint point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002ADE")]
		[Address(RVA = "0x118FB88", Offset = "0x118FB88", VA = "0x118FB88")]
		public void SetPoint(EqTrianglePoint point, Vector3 pointValue)
		{
		}

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0x118FC58", Offset = "0x118FC58", VA = "0x118FC58")]
		public Vector3 GetEdgeMidPoint(EqTriangleEdge edge)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0x118FDFC", Offset = "0x118FDFC", VA = "0x118FDFC")]
		public Vector3 GetEdge(EqTriangleEdge edge)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002AE1")]
		[Address(RVA = "0x118FE78", Offset = "0x118FE78", VA = "0x118FE78", Slot = "5")]
		public override void RenderSolid()
		{
		}

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0x118FFE8", Offset = "0x118FFE8", VA = "0x118FFE8", Slot = "6")]
		public override void RenderWire()
		{
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0x1190158", Offset = "0x1190158", VA = "0x1190158", Slot = "7")]
		public override bool Raycast(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE4")]
		[Address(RVA = "0x1190280", Offset = "0x1190280", VA = "0x1190280", Slot = "4")]
		public override bool RaycastWire(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE5")]
		[Address(RVA = "0x11903A8", Offset = "0x11903A8", VA = "0x11903A8", Slot = "8")]
		public override AABB GetAABB()
		{
			return default(AABB);
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0x118FA30", Offset = "0x118FA30", VA = "0x118FA30")]
		private void OnPointsFoundDirty()
		{
		}

		[Token(Token = "0x6002AE7")]
		[Address(RVA = "0x11903EC", Offset = "0x11903EC", VA = "0x11903EC")]
		public EqTriangle3D()
		{
		}
	}
	[Token(Token = "0x200062D")]
	public class PolygonShape2D : Shape2D
	{
		[Token(Token = "0x200062E")]
		public enum ThickBorderFillMode
		{
			[Token(Token = "0x4001BF2")]
			Filled,
			[Token(Token = "0x4001BF3")]
			Border
		}

		[Token(Token = "0x200062F")]
		public class BorderRenderDescriptor
		{
			[Token(Token = "0x4001BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Shape2DBorderType _borderType;

			[Token(Token = "0x4001BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float _thickness;

			[Token(Token = "0x4001BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Shape2DBorderDirection _direction;

			[Token(Token = "0x4001BF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private ThickBorderFillMode _fillMode;

			[Token(Token = "0x1700099B")]
			public Shape2DBorderType BorderType
			{
				[Token(Token = "0x6002B01")]
				[Address(RVA = "0x1190E9C", Offset = "0x1190E9C", VA = "0x1190E9C")]
				get
				{
					return default(Shape2DBorderType);
				}
				[Token(Token = "0x6002B02")]
				[Address(RVA = "0x1190EA4", Offset = "0x1190EA4", VA = "0x1190EA4")]
				set
				{
				}
			}

			[Token(Token = "0x1700099C")]
			public float Thickness
			{
				[Token(Token = "0x6002B03")]
				[Address(RVA = "0x1190EAC", Offset = "0x1190EAC", VA = "0x1190EAC")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002B04")]
				[Address(RVA = "0x1190EB4", Offset = "0x1190EB4", VA = "0x1190EB4")]
				set
				{
				}
			}

			[Token(Token = "0x1700099D")]
			public Shape2DBorderDirection Direction
			{
				[Token(Token = "0x6002B05")]
				[Address(RVA = "0x1190EC0", Offset = "0x1190EC0", VA = "0x1190EC0")]
				get
				{
					return default(Shape2DBorderDirection);
				}
				[Token(Token = "0x6002B06")]
				[Address(RVA = "0x1190EC8", Offset = "0x1190EC8", VA = "0x1190EC8")]
				set
				{
				}
			}

			[Token(Token = "0x1700099E")]
			public ThickBorderFillMode FillMode
			{
				[Token(Token = "0x6002B07")]
				[Address(RVA = "0x1190ED0", Offset = "0x1190ED0", VA = "0x1190ED0")]
				get
				{
					return default(ThickBorderFillMode);
				}
				[Token(Token = "0x6002B08")]
				[Address(RVA = "0x1190ED8", Offset = "0x1190ED8", VA = "0x1190ED8")]
				set
				{
				}
			}

			[Token(Token = "0x6002B09")]
			[Address(RVA = "0x1190E88", Offset = "0x1190E88", VA = "0x1190E88")]
			public BorderRenderDescriptor()
			{
			}
		}

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Rect _rect;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isRectDirty;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool _isClosed;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector2> _cwPolyPoints;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Vector2> _thickCwBorderPoints;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isThickBorderDirty;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private PolygonEpsilon _epsilon;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Shape2DPtContainMode _ptContainMode;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BorderRenderDescriptor _borderRenderDesc;

		[Token(Token = "0x17000993")]
		public int NumPoints
		{
			[Token(Token = "0x6002AE8")]
			[Address(RVA = "0x11904A4", Offset = "0x11904A4", VA = "0x11904A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000994")]
		public PolygonEpsilon Epsilon
		{
			[Token(Token = "0x6002AE9")]
			[Address(RVA = "0x11904EC", Offset = "0x11904EC", VA = "0x11904EC")]
			get
			{
				return default(PolygonEpsilon);
			}
			[Token(Token = "0x6002AEA")]
			[Address(RVA = "0x11904F8", Offset = "0x11904F8", VA = "0x11904F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000995")]
		public float AreaEps
		{
			[Token(Token = "0x6002AEB")]
			[Address(RVA = "0x1190504", Offset = "0x1190504", VA = "0x1190504")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AEC")]
			[Address(RVA = "0x119050C", Offset = "0x119050C", VA = "0x119050C")]
			set
			{
			}
		}

		[Token(Token = "0x17000996")]
		public float WireEps
		{
			[Token(Token = "0x6002AED")]
			[Address(RVA = "0x1190518", Offset = "0x1190518", VA = "0x1190518")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AEE")]
			[Address(RVA = "0x1190520", Offset = "0x1190520", VA = "0x1190520")]
			set
			{
			}
		}

		[Token(Token = "0x17000997")]
		public float ThickWireEps
		{
			[Token(Token = "0x6002AEF")]
			[Address(RVA = "0x119052C", Offset = "0x119052C", VA = "0x119052C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002AF0")]
			[Address(RVA = "0x1190534", Offset = "0x1190534", VA = "0x1190534")]
			set
			{
			}
		}

		[Token(Token = "0x17000998")]
		public bool IsClosed
		{
			[Token(Token = "0x6002AF1")]
			[Address(RVA = "0x1190540", Offset = "0x1190540", VA = "0x1190540")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000999")]
		public Shape2DPtContainMode PtContainMode
		{
			[Token(Token = "0x6002AF2")]
			[Address(RVA = "0x1190548", Offset = "0x1190548", VA = "0x1190548")]
			get
			{
				return default(Shape2DPtContainMode);
			}
			[Token(Token = "0x6002AF3")]
			[Address(RVA = "0x1190550", Offset = "0x1190550", VA = "0x1190550")]
			set
			{
			}
		}

		[Token(Token = "0x1700099A")]
		public BorderRenderDescriptor BorderRenderDesc
		{
			[Token(Token = "0x6002AF4")]
			[Address(RVA = "0x1190558", Offset = "0x1190558", VA = "0x1190558")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AF5")]
		[Address(RVA = "0x1190560", Offset = "0x1190560", VA = "0x1190560")]
		public Vector2 GetExtentPoint(Shape2DExtentPoint extentPt)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002AF6")]
		[Address(RVA = "0x1190774", Offset = "0x1190774", VA = "0x1190774", Slot = "4")]
		public override void RenderArea(Camera camera)
		{
		}

		[Token(Token = "0x6002AF7")]
		[Address(RVA = "0x11907D0", Offset = "0x11907D0", VA = "0x11907D0", Slot = "5")]
		public override void RenderBorder(Camera camera)
		{
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0x11908C8", Offset = "0x11908C8", VA = "0x11908C8")]
		public List<Vector2> GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6002AF9")]
		[Address(RVA = "0x1190944", Offset = "0x1190944", VA = "0x1190944", Slot = "7")]
		public override Rect GetEncapsulatingRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0x11909A8", Offset = "0x11909A8", VA = "0x11909A8")]
		public void CopyPoints(PolygonShape2D sourcePoly)
		{
		}

		[Token(Token = "0x6002AFB")]
		[Address(RVA = "0x1190A7C", Offset = "0x1190A7C", VA = "0x1190A7C")]
		public void SetClockwisePoints(List<Vector2> cwBorderPoints, bool isClosed)
		{
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0x1190BE4", Offset = "0x1190BE4", VA = "0x1190BE4")]
		public void MakeSphereBorder(Vector3 sphereCenter, float sphereRadius, int numPoints, Camera camera)
		{
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0x1190CA8", Offset = "0x1190CA8", VA = "0x1190CA8", Slot = "6")]
		public override bool ContainsPoint(Vector2 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002AFE")]
		[Address(RVA = "0x1190980", Offset = "0x1190980", VA = "0x1190980")]
		private void CalculateRect()
		{
		}

		[Token(Token = "0x6002AFF")]
		[Address(RVA = "0x1190878", Offset = "0x1190878", VA = "0x1190878")]
		private void CalculateThickBorderPoints()
		{
		}

		[Token(Token = "0x6002B00")]
		[Address(RVA = "0x1190D6C", Offset = "0x1190D6C", VA = "0x1190D6C")]
		public PolygonShape2D()
		{
		}
	}
	[Token(Token = "0x2000630")]
	public class PyramidShape3D : Shape3D
	{
		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _baseCenter;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _baseWidth;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _baseDepth;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _height;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion _rotation;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PyramidEpsilon _epsilon;

		[Token(Token = "0x1700099F")]
		public Vector3 BaseCenter
		{
			[Token(Token = "0x6002B0A")]
			[Address(RVA = "0x1190EE0", Offset = "0x1190EE0", VA = "0x1190EE0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002B0B")]
			[Address(RVA = "0x1190EEC", Offset = "0x1190EEC", VA = "0x1190EEC")]
			set
			{
			}
		}

		[Token(Token = "0x170009A0")]
		public Vector3 Tip
		{
			[Token(Token = "0x6002B0C")]
			[Address(RVA = "0x1190EF8", Offset = "0x1190EF8", VA = "0x1190EF8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002B0D")]
			[Address(RVA = "0x1190F88", Offset = "0x1190F88", VA = "0x1190F88")]
			set
			{
			}
		}

		[Token(Token = "0x170009A1")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6002B0E")]
			[Address(RVA = "0x1190FDC", Offset = "0x1190FDC", VA = "0x1190FDC")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002B0F")]
			[Address(RVA = "0x1190FE8", Offset = "0x1190FE8", VA = "0x1190FE8")]
			set
			{
			}
		}

		[Token(Token = "0x170009A2")]
		public float BaseWidth
		{
			[Token(Token = "0x6002B10")]
			[Address(RVA = "0x1190FF4", Offset = "0x1190FF4", VA = "0x1190FF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B11")]
			[Address(RVA = "0x1190FFC", Offset = "0x1190FFC", VA = "0x1190FFC")]
			set
			{
			}
		}

		[Token(Token = "0x170009A3")]
		public float BaseDepth
		{
			[Token(Token = "0x6002B12")]
			[Address(RVA = "0x1191008", Offset = "0x1191008", VA = "0x1191008")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B13")]
			[Address(RVA = "0x1191010", Offset = "0x1191010", VA = "0x1191010")]
			set
			{
			}
		}

		[Token(Token = "0x170009A4")]
		public float Height
		{
			[Token(Token = "0x6002B14")]
			[Address(RVA = "0x119101C", Offset = "0x119101C", VA = "0x119101C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B15")]
			[Address(RVA = "0x1191024", Offset = "0x1191024", VA = "0x1191024")]
			set
			{
			}
		}

		[Token(Token = "0x170009A5")]
		public PyramidEpsilon Epsilon
		{
			[Token(Token = "0x6002B16")]
			[Address(RVA = "0x1191030", Offset = "0x1191030", VA = "0x1191030")]
			get
			{
				return default(PyramidEpsilon);
			}
			[Token(Token = "0x6002B17")]
			[Address(RVA = "0x1191038", Offset = "0x1191038", VA = "0x1191038")]
			set
			{
			}
		}

		[Token(Token = "0x170009A6")]
		public float PtContainEps
		{
			[Token(Token = "0x6002B18")]
			[Address(RVA = "0x1191040", Offset = "0x1191040", VA = "0x1191040")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B19")]
			[Address(RVA = "0x1191048", Offset = "0x1191048", VA = "0x1191048")]
			set
			{
			}
		}

		[Token(Token = "0x170009A7")]
		public Vector3 CentralAxis
		{
			[Token(Token = "0x6002B1A")]
			[Address(RVA = "0x1190F40", Offset = "0x1190F40", VA = "0x1190F40")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009A8")]
		public Vector3 Right
		{
			[Token(Token = "0x6002B1B")]
			[Address(RVA = "0x1191098", Offset = "0x1191098", VA = "0x1191098")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009A9")]
		public Vector3 Up
		{
			[Token(Token = "0x6002B1C")]
			[Address(RVA = "0x1191124", Offset = "0x1191124", VA = "0x1191124")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009AA")]
		public Vector3 Look
		{
			[Token(Token = "0x6002B1D")]
			[Address(RVA = "0x119116C", Offset = "0x119116C", VA = "0x119116C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009AB")]
		public static Vector3 ModelRight
		{
			[Token(Token = "0x6002B1E")]
			[Address(RVA = "0x11910E0", Offset = "0x11910E0", VA = "0x11910E0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009AC")]
		public static Vector3 ModelUp
		{
			[Token(Token = "0x6002B1F")]
			[Address(RVA = "0x1191054", Offset = "0x1191054", VA = "0x1191054")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009AD")]
		public static Vector3 ModelLook
		{
			[Token(Token = "0x6002B20")]
			[Address(RVA = "0x11911B4", Offset = "0x11911B4", VA = "0x11911B4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009AE")]
		public static Vector3 ModelBaseCenter
		{
			[Token(Token = "0x6002B21")]
			[Address(RVA = "0x11911F8", Offset = "0x11911F8", VA = "0x11911F8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002B22")]
		[Address(RVA = "0x119123C", Offset = "0x119123C", VA = "0x119123C")]
		public void PointTipAlongAxis(Vector3 axis)
		{
		}

		[Token(Token = "0x6002B23")]
		[Address(RVA = "0x1191338", Offset = "0x1191338", VA = "0x1191338", Slot = "5")]
		public override void RenderSolid()
		{
		}

		[Token(Token = "0x6002B24")]
		[Address(RVA = "0x11914A4", Offset = "0x11914A4", VA = "0x11914A4", Slot = "6")]
		public override void RenderWire()
		{
		}

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0x1191610", Offset = "0x1191610", VA = "0x1191610")]
		public List<Vector3> GetBaseCornerPoints()
		{
			return null;
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0x1191650", Offset = "0x1191650", VA = "0x1191650", Slot = "8")]
		public override AABB GetAABB()
		{
			return default(AABB);
		}

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0x1191724", Offset = "0x1191724", VA = "0x1191724", Slot = "7")]
		public override bool Raycast(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0x1191780", Offset = "0x1191780", VA = "0x1191780")]
		public bool ContainsPoint(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B29")]
		[Address(RVA = "0x11917C8", Offset = "0x11917C8", VA = "0x11917C8")]
		public PyramidShape3D()
		{
		}
	}
	[Token(Token = "0x2000631")]
	public class QuadShape2D : Shape2D
	{
		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2 _center;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 _size;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _rotationDegrees;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private QuadEpsilon _epsilon;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Shape2DPtContainMode _ptContainMode;

		[Token(Token = "0x170009AF")]
		public float RotationDegrees
		{
			[Token(Token = "0x6002B2A")]
			[Address(RVA = "0x119183C", Offset = "0x119183C", VA = "0x119183C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B2B")]
			[Address(RVA = "0x1191844", Offset = "0x1191844", VA = "0x1191844")]
			set
			{
			}
		}

		[Token(Token = "0x170009B0")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6002B2C")]
			[Address(RVA = "0x1191864", Offset = "0x1191864", VA = "0x1191864")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170009B1")]
		public Vector2 Center
		{
			[Token(Token = "0x6002B2D")]
			[Address(RVA = "0x11918BC", Offset = "0x11918BC", VA = "0x11918BC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002B2E")]
			[Address(RVA = "0x11918C4", Offset = "0x11918C4", VA = "0x11918C4")]
			set
			{
			}
		}

		[Token(Token = "0x170009B2")]
		public Vector2 Size
		{
			[Token(Token = "0x6002B2F")]
			[Address(RVA = "0x11918CC", Offset = "0x11918CC", VA = "0x11918CC")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002B30")]
			[Address(RVA = "0x11918D4", Offset = "0x11918D4", VA = "0x11918D4")]
			set
			{
			}
		}

		[Token(Token = "0x170009B3")]
		public Vector2 Extents
		{
			[Token(Token = "0x6002B31")]
			[Address(RVA = "0x11918F0", Offset = "0x11918F0", VA = "0x11918F0")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170009B4")]
		public float Width
		{
			[Token(Token = "0x6002B32")]
			[Address(RVA = "0x1191904", Offset = "0x1191904", VA = "0x1191904")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B33")]
			[Address(RVA = "0x119190C", Offset = "0x119190C", VA = "0x119190C")]
			set
			{
			}
		}

		[Token(Token = "0x170009B5")]
		public float Height
		{
			[Token(Token = "0x6002B34")]
			[Address(RVA = "0x1191918", Offset = "0x1191918", VA = "0x1191918")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B35")]
			[Address(RVA = "0x1191920", Offset = "0x1191920", VA = "0x1191920")]
			set
			{
			}
		}

		[Token(Token = "0x170009B6")]
		public QuadEpsilon Epsilon
		{
			[Token(Token = "0x6002B36")]
			[Address(RVA = "0x119192C", Offset = "0x119192C", VA = "0x119192C")]
			get
			{
				return default(QuadEpsilon);
			}
			[Token(Token = "0x6002B37")]
			[Address(RVA = "0x1191938", Offset = "0x1191938", VA = "0x1191938")]
			set
			{
			}
		}

		[Token(Token = "0x170009B7")]
		public Shape2DPtContainMode PtContainMode
		{
			[Token(Token = "0x6002B38")]
			[Address(RVA = "0x1191944", Offset = "0x1191944", VA = "0x1191944")]
			get
			{
				return default(Shape2DPtContainMode);
			}
			[Token(Token = "0x6002B39")]
			[Address(RVA = "0x119194C", Offset = "0x119194C", VA = "0x119194C")]
			set
			{
			}
		}

		[Token(Token = "0x170009B8")]
		public Vector2 SizeEps
		{
			[Token(Token = "0x6002B3A")]
			[Address(RVA = "0x1191954", Offset = "0x1191954", VA = "0x1191954")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002B3B")]
			[Address(RVA = "0x119195C", Offset = "0x119195C", VA = "0x119195C")]
			set
			{
			}
		}

		[Token(Token = "0x170009B9")]
		public float WidthEps
		{
			[Token(Token = "0x6002B3C")]
			[Address(RVA = "0x1191968", Offset = "0x1191968", VA = "0x1191968")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B3D")]
			[Address(RVA = "0x1191974", Offset = "0x1191974", VA = "0x1191974")]
			set
			{
			}
		}

		[Token(Token = "0x170009BA")]
		public float HeightEps
		{
			[Token(Token = "0x6002B3E")]
			[Address(RVA = "0x1191980", Offset = "0x1191980", VA = "0x1191980")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B3F")]
			[Address(RVA = "0x119198C", Offset = "0x119198C", VA = "0x119198C")]
			set
			{
			}
		}

		[Token(Token = "0x170009BB")]
		public float WireEps
		{
			[Token(Token = "0x6002B40")]
			[Address(RVA = "0x1191998", Offset = "0x1191998", VA = "0x1191998")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B41")]
			[Address(RVA = "0x11919A0", Offset = "0x11919A0", VA = "0x11919A0")]
			set
			{
			}
		}

		[Token(Token = "0x170009BC")]
		public Vector2 Right
		{
			[Token(Token = "0x6002B42")]
			[Address(RVA = "0x11919AC", Offset = "0x11919AC", VA = "0x11919AC")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170009BD")]
		public Vector2 Up
		{
			[Token(Token = "0x6002B43")]
			[Address(RVA = "0x1191A84", Offset = "0x1191A84", VA = "0x1191A84")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170009BE")]
		public static Vector2 ModelRight
		{
			[Token(Token = "0x6002B44")]
			[Address(RVA = "0x1191A44", Offset = "0x1191A44", VA = "0x1191A44")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170009BF")]
		public static Vector2 ModelUp
		{
			[Token(Token = "0x6002B45")]
			[Address(RVA = "0x1191B1C", Offset = "0x1191B1C", VA = "0x1191B1C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170009C0")]
		public static Vector2 ModelCenter
		{
			[Token(Token = "0x6002B46")]
			[Address(RVA = "0x1191B5C", Offset = "0x1191B5C", VA = "0x1191B5C")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6002B47")]
		[Address(RVA = "0x1191B9C", Offset = "0x1191B9C", VA = "0x1191B9C")]
		public Vector2 GetExtentPoint(Shape2DExtentPoint extentPt)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002B48")]
		[Address(RVA = "0x1191C84", Offset = "0x1191C84", VA = "0x1191C84")]
		public void AlignWidth(Vector2 axis)
		{
		}

		[Token(Token = "0x6002B49")]
		[Address(RVA = "0x1191D60", Offset = "0x1191D60", VA = "0x1191D60")]
		public float GetSizeAlongDirection(Vector2 direction)
		{
			return default(float);
		}

		[Token(Token = "0x6002B4A")]
		[Address(RVA = "0x1191DA8", Offset = "0x1191DA8", VA = "0x1191DA8", Slot = "4")]
		public override void RenderArea(Camera camera)
		{
		}

		[Token(Token = "0x6002B4B")]
		[Address(RVA = "0x1191E60", Offset = "0x1191E60", VA = "0x1191E60", Slot = "5")]
		public override void RenderBorder(Camera camera)
		{
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0x1191E8C", Offset = "0x1191E8C", VA = "0x1191E8C", Slot = "6")]
		public override bool ContainsPoint(Vector2 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B4D")]
		[Address(RVA = "0x1191F70", Offset = "0x1191F70", VA = "0x1191F70", Slot = "7")]
		public override Rect GetEncapsulatingRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6002B4E")]
		[Address(RVA = "0x1191F94", Offset = "0x1191F94", VA = "0x1191F94")]
		public QuadShape2D()
		{
		}
	}
	[Token(Token = "0x2000632")]
	public class QuadShape3D : Shape3D
	{
		[Token(Token = "0x2000633")]
		[Flags]
		public enum WireEdgeFlags
		{
			[Token(Token = "0x4001C0A")]
			None = 0,
			[Token(Token = "0x4001C0B")]
			Top = 1,
			[Token(Token = "0x4001C0C")]
			Right = 2,
			[Token(Token = "0x4001C0D")]
			Bottom = 4,
			[Token(Token = "0x4001C0E")]
			Left = 8,
			[Token(Token = "0x4001C0F")]
			All = 0xF
		}

		[Token(Token = "0x2000634")]
		public class WireRenderDescriptor
		{
			[Token(Token = "0x4001C10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private WireEdgeFlags _wireEdgeFlags;

			[Token(Token = "0x170009D7")]
			public WireEdgeFlags WireEdgeFlags
			{
				[Token(Token = "0x6002B7F")]
				[Address(RVA = "0x1192FA0", Offset = "0x1192FA0", VA = "0x1192FA0")]
				get
				{
					return default(WireEdgeFlags);
				}
				[Token(Token = "0x6002B80")]
				[Address(RVA = "0x1192FA8", Offset = "0x1192FA8", VA = "0x1192FA8")]
				set
				{
				}
			}

			[Token(Token = "0x6002B81")]
			[Address(RVA = "0x1192F90", Offset = "0x1192F90", VA = "0x1192F90")]
			public WireRenderDescriptor()
			{
			}
		}

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Shape3DRaycastMode _raycastMode;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3 _center;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2 _size;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion _rotation;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private QuadEpsilon _epsilon;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private WireRenderDescriptor _wireRenderDesc;

		[Token(Token = "0x170009C1")]
		public Vector3 Center
		{
			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0x1191FF4", Offset = "0x1191FF4", VA = "0x1191FF4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002B50")]
			[Address(RVA = "0x1192000", Offset = "0x1192000", VA = "0x1192000")]
			set
			{
			}
		}

		[Token(Token = "0x170009C2")]
		public Vector2 Size
		{
			[Token(Token = "0x6002B51")]
			[Address(RVA = "0x119200C", Offset = "0x119200C", VA = "0x119200C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002B52")]
			[Address(RVA = "0x1192014", Offset = "0x1192014", VA = "0x1192014")]
			set
			{
			}
		}

		[Token(Token = "0x170009C3")]
		public float Width
		{
			[Token(Token = "0x6002B53")]
			[Address(RVA = "0x1192030", Offset = "0x1192030", VA = "0x1192030")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B54")]
			[Address(RVA = "0x1192038", Offset = "0x1192038", VA = "0x1192038")]
			set
			{
			}
		}

		[Token(Token = "0x170009C4")]
		public float Height
		{
			[Token(Token = "0x6002B55")]
			[Address(RVA = "0x1192044", Offset = "0x1192044", VA = "0x1192044")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B56")]
			[Address(RVA = "0x119204C", Offset = "0x119204C", VA = "0x119204C")]
			set
			{
			}
		}

		[Token(Token = "0x170009C5")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6002B57")]
			[Address(RVA = "0x1192058", Offset = "0x1192058", VA = "0x1192058")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002B58")]
			[Address(RVA = "0x1192064", Offset = "0x1192064", VA = "0x1192064")]
			set
			{
			}
		}

		[Token(Token = "0x170009C6")]
		public Vector3 Right
		{
			[Token(Token = "0x6002B59")]
			[Address(RVA = "0x1192070", Offset = "0x1192070", VA = "0x1192070")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009C7")]
		public Vector3 Up
		{
			[Token(Token = "0x6002B5A")]
			[Address(RVA = "0x11920FC", Offset = "0x11920FC", VA = "0x11920FC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009C8")]
		public Vector3 Look
		{
			[Token(Token = "0x6002B5B")]
			[Address(RVA = "0x1192188", Offset = "0x1192188", VA = "0x1192188")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009C9")]
		public Vector3 Normal
		{
			[Token(Token = "0x6002B5C")]
			[Address(RVA = "0x1192214", Offset = "0x1192214", VA = "0x1192214")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009CA")]
		public QuadEpsilon Epsilon
		{
			[Token(Token = "0x6002B5D")]
			[Address(RVA = "0x1192218", Offset = "0x1192218", VA = "0x1192218")]
			get
			{
				return default(QuadEpsilon);
			}
			[Token(Token = "0x6002B5E")]
			[Address(RVA = "0x1192224", Offset = "0x1192224", VA = "0x1192224")]
			set
			{
			}
		}

		[Token(Token = "0x170009CB")]
		public Vector2 SizeEps
		{
			[Token(Token = "0x6002B5F")]
			[Address(RVA = "0x1192230", Offset = "0x1192230", VA = "0x1192230")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002B60")]
			[Address(RVA = "0x1192238", Offset = "0x1192238", VA = "0x1192238")]
			set
			{
			}
		}

		[Token(Token = "0x170009CC")]
		public float WidthEps
		{
			[Token(Token = "0x6002B61")]
			[Address(RVA = "0x1192244", Offset = "0x1192244", VA = "0x1192244")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B62")]
			[Address(RVA = "0x1192250", Offset = "0x1192250", VA = "0x1192250")]
			set
			{
			}
		}

		[Token(Token = "0x170009CD")]
		public float HeightEps
		{
			[Token(Token = "0x6002B63")]
			[Address(RVA = "0x119225C", Offset = "0x119225C", VA = "0x119225C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B64")]
			[Address(RVA = "0x1192268", Offset = "0x1192268", VA = "0x1192268")]
			set
			{
			}
		}

		[Token(Token = "0x170009CE")]
		public float ExtrudeEps
		{
			[Token(Token = "0x6002B65")]
			[Address(RVA = "0x1192274", Offset = "0x1192274", VA = "0x1192274")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B66")]
			[Address(RVA = "0x119227C", Offset = "0x119227C", VA = "0x119227C")]
			set
			{
			}
		}

		[Token(Token = "0x170009CF")]
		public float WireEps
		{
			[Token(Token = "0x6002B67")]
			[Address(RVA = "0x1192288", Offset = "0x1192288", VA = "0x1192288")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B68")]
			[Address(RVA = "0x1192290", Offset = "0x1192290", VA = "0x1192290")]
			set
			{
			}
		}

		[Token(Token = "0x170009D0")]
		public Shape3DRaycastMode RaycastMode
		{
			[Token(Token = "0x6002B69")]
			[Address(RVA = "0x119229C", Offset = "0x119229C", VA = "0x119229C")]
			get
			{
				return default(Shape3DRaycastMode);
			}
			[Token(Token = "0x6002B6A")]
			[Address(RVA = "0x11922A4", Offset = "0x11922A4", VA = "0x11922A4")]
			set
			{
			}
		}

		[Token(Token = "0x170009D1")]
		public WireRenderDescriptor WireRenderDesc
		{
			[Token(Token = "0x6002B6B")]
			[Address(RVA = "0x11922AC", Offset = "0x11922AC", VA = "0x11922AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170009D2")]
		public static Vector3 ModelRight
		{
			[Token(Token = "0x6002B6C")]
			[Address(RVA = "0x11920B8", Offset = "0x11920B8", VA = "0x11920B8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009D3")]
		public static Vector3 ModelUp
		{
			[Token(Token = "0x6002B6D")]
			[Address(RVA = "0x1192144", Offset = "0x1192144", VA = "0x1192144")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009D4")]
		public static Vector3 ModelLook
		{
			[Token(Token = "0x6002B6E")]
			[Address(RVA = "0x11921D0", Offset = "0x11921D0", VA = "0x11921D0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009D5")]
		public static Vector3 ModelCenter
		{
			[Token(Token = "0x6002B6F")]
			[Address(RVA = "0x11922B4", Offset = "0x11922B4", VA = "0x11922B4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009D6")]
		public static Vector3 ModelNormal
		{
			[Token(Token = "0x6002B70")]
			[Address(RVA = "0x11922F8", Offset = "0x11922F8", VA = "0x11922F8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002B71")]
		[Address(RVA = "0x11922FC", Offset = "0x11922FC", VA = "0x11922FC")]
		public void AlignNormal(Vector3 axis)
		{
		}

		[Token(Token = "0x6002B72")]
		[Address(RVA = "0x11923F8", Offset = "0x11923F8", VA = "0x11923F8")]
		public void AlignRight(Vector3 axis)
		{
		}

		[Token(Token = "0x6002B73")]
		[Address(RVA = "0x11924F4", Offset = "0x11924F4", VA = "0x11924F4")]
		public void AlignUp(Vector3 axis)
		{
		}

		[Token(Token = "0x6002B74")]
		[Address(RVA = "0x11925F0", Offset = "0x11925F0", VA = "0x11925F0")]
		public List<Vector3> GetCornerPoints()
		{
			return null;
		}

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0x119262C", Offset = "0x119262C", VA = "0x119262C")]
		public Vector3 GetCornerPosition(QuadCorner quadCorner)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B76")]
		[Address(RVA = "0x119266C", Offset = "0x119266C", VA = "0x119266C")]
		public void SetCornerPointPosition(QuadCorner quadCorner, Vector3 position)
		{
		}

		[Token(Token = "0x6002B77")]
		[Address(RVA = "0x11926C4", Offset = "0x11926C4", VA = "0x11926C4", Slot = "5")]
		public override void RenderSolid()
		{
		}

		[Token(Token = "0x6002B78")]
		[Address(RVA = "0x1192834", Offset = "0x1192834", VA = "0x1192834", Slot = "6")]
		public override void RenderWire()
		{
		}

		[Token(Token = "0x6002B79")]
		[Address(RVA = "0x1192B8C", Offset = "0x1192B8C", VA = "0x1192B8C", Slot = "7")]
		public override bool Raycast(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B7A")]
		[Address(RVA = "0x1192C9C", Offset = "0x1192C9C", VA = "0x1192C9C", Slot = "4")]
		public override bool RaycastWire(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B7B")]
		[Address(RVA = "0x1192D68", Offset = "0x1192D68", VA = "0x1192D68")]
		public bool ContainsPoint(Vector3 point, bool checkOnPlane)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B7C")]
		[Address(RVA = "0x1192E30", Offset = "0x1192E30", VA = "0x1192E30")]
		public List<Vector3> GetCorners()
		{
			return null;
		}

		[Token(Token = "0x6002B7D")]
		[Address(RVA = "0x1192E6C", Offset = "0x1192E6C", VA = "0x1192E6C", Slot = "8")]
		public override AABB GetAABB()
		{
			return default(AABB);
		}

		[Token(Token = "0x6002B7E")]
		[Address(RVA = "0x1192E98", Offset = "0x1192E98", VA = "0x1192E98")]
		public QuadShape3D()
		{
		}
	}
	[Token(Token = "0x2000635")]
	public class RightAngTriangle2D : Shape2D
	{
		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2 _rightAngleCorner;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _XLength;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _YLength;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _rotationDegrees;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TriangleEpsilon _epsilon;

		[Token(Token = "0x170009D8")]
		public Vector2 RightAngleCorner
		{
			[Token(Token = "0x6002B82")]
			[Address(RVA = "0x1192FB0", Offset = "0x1192FB0", VA = "0x1192FB0")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002B83")]
			[Address(RVA = "0x1192FB8", Offset = "0x1192FB8", VA = "0x1192FB8")]
			set
			{
			}
		}

		[Token(Token = "0x170009D9")]
		public float XLength
		{
			[Token(Token = "0x6002B84")]
			[Address(RVA = "0x1192FC0", Offset = "0x1192FC0", VA = "0x1192FC0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B85")]
			[Address(RVA = "0x1192FC8", Offset = "0x1192FC8", VA = "0x1192FC8")]
			set
			{
			}
		}

		[Token(Token = "0x170009DA")]
		public float YLength
		{
			[Token(Token = "0x6002B86")]
			[Address(RVA = "0x1192FD4", Offset = "0x1192FD4", VA = "0x1192FD4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B87")]
			[Address(RVA = "0x1192FDC", Offset = "0x1192FDC", VA = "0x1192FDC")]
			set
			{
			}
		}

		[Token(Token = "0x170009DB")]
		public float RotationDegrees
		{
			[Token(Token = "0x6002B88")]
			[Address(RVA = "0x1192FE8", Offset = "0x1192FE8", VA = "0x1192FE8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B89")]
			[Address(RVA = "0x1192FF0", Offset = "0x1192FF0", VA = "0x1192FF0")]
			set
			{
			}
		}

		[Token(Token = "0x170009DC")]
		public Vector2 Right
		{
			[Token(Token = "0x6002B8A")]
			[Address(RVA = "0x1192FF8", Offset = "0x1192FF8", VA = "0x1192FF8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170009DD")]
		public Vector2 Up
		{
			[Token(Token = "0x6002B8B")]
			[Address(RVA = "0x11930D0", Offset = "0x11930D0", VA = "0x11930D0")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170009DE")]
		public TriangleEpsilon Epsilon
		{
			[Token(Token = "0x6002B8C")]
			[Address(RVA = "0x11931A8", Offset = "0x11931A8", VA = "0x11931A8")]
			get
			{
				return default(TriangleEpsilon);
			}
			[Token(Token = "0x6002B8D")]
			[Address(RVA = "0x11931B4", Offset = "0x11931B4", VA = "0x11931B4")]
			set
			{
			}
		}

		[Token(Token = "0x170009DF")]
		public float AreaEps
		{
			[Token(Token = "0x6002B8E")]
			[Address(RVA = "0x11931C0", Offset = "0x11931C0", VA = "0x11931C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B8F")]
			[Address(RVA = "0x11931C8", Offset = "0x11931C8", VA = "0x11931C8")]
			set
			{
			}
		}

		[Token(Token = "0x170009E0")]
		public static Vector2 ModelRight
		{
			[Token(Token = "0x6002B90")]
			[Address(RVA = "0x1193090", Offset = "0x1193090", VA = "0x1193090")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170009E1")]
		public static Vector2 ModelUp
		{
			[Token(Token = "0x6002B91")]
			[Address(RVA = "0x1193168", Offset = "0x1193168", VA = "0x1193168")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170009E2")]
		public static Vector2 ModelRightAngleCorner
		{
			[Token(Token = "0x6002B92")]
			[Address(RVA = "0x11931D4", Offset = "0x11931D4", VA = "0x11931D4")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6002B93")]
		[Address(RVA = "0x1193214", Offset = "0x1193214", VA = "0x1193214", Slot = "4")]
		public override void RenderArea(Camera camera)
		{
		}

		[Token(Token = "0x6002B94")]
		[Address(RVA = "0x119334C", Offset = "0x119334C", VA = "0x119334C", Slot = "5")]
		public override void RenderBorder(Camera camera)
		{
		}

		[Token(Token = "0x6002B95")]
		[Address(RVA = "0x11932C0", Offset = "0x11932C0", VA = "0x11932C0")]
		public List<Vector2> GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6002B96")]
		[Address(RVA = "0x1193368", Offset = "0x1193368", VA = "0x1193368", Slot = "6")]
		public override bool ContainsPoint(Vector2 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002B97")]
		[Address(RVA = "0x1193490", Offset = "0x1193490", VA = "0x1193490", Slot = "7")]
		public override Rect GetEncapsulatingRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6002B98")]
		[Address(RVA = "0x11934A4", Offset = "0x11934A4", VA = "0x11934A4")]
		public RightAngTriangle2D()
		{
		}
	}
	[Token(Token = "0x2000636")]
	public class RightAngTriangle3D : Shape3D
	{
		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _rightAngleCorner;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _XLength;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _YLength;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private AxisSign _XLengthSign;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AxisSign _YLengthSign;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion _rotation;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private TriangleEpsilon _epsilon;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Shape3DRaycastMode _raycastMode;

		[Token(Token = "0x170009E3")]
		public Vector3 RightAngleCorner
		{
			[Token(Token = "0x6002B99")]
			[Address(RVA = "0x11934CC", Offset = "0x11934CC", VA = "0x11934CC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002B9A")]
			[Address(RVA = "0x11934D8", Offset = "0x11934D8", VA = "0x11934D8")]
			set
			{
			}
		}

		[Token(Token = "0x170009E4")]
		public float XLength
		{
			[Token(Token = "0x6002B9B")]
			[Address(RVA = "0x11934E4", Offset = "0x11934E4", VA = "0x11934E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B9C")]
			[Address(RVA = "0x11934EC", Offset = "0x11934EC", VA = "0x11934EC")]
			set
			{
			}
		}

		[Token(Token = "0x170009E5")]
		public float YLength
		{
			[Token(Token = "0x6002B9D")]
			[Address(RVA = "0x11934F8", Offset = "0x11934F8", VA = "0x11934F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002B9E")]
			[Address(RVA = "0x1193500", Offset = "0x1193500", VA = "0x1193500")]
			set
			{
			}
		}

		[Token(Token = "0x170009E6")]
		public float RealXLength
		{
			[Token(Token = "0x6002B9F")]
			[Address(RVA = "0x119350C", Offset = "0x119350C", VA = "0x119350C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170009E7")]
		public float RealYLength
		{
			[Token(Token = "0x6002BA0")]
			[Address(RVA = "0x119352C", Offset = "0x119352C", VA = "0x119352C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170009E8")]
		public AxisSign XLengthSign
		{
			[Token(Token = "0x6002BA1")]
			[Address(RVA = "0x119354C", Offset = "0x119354C", VA = "0x119354C")]
			get
			{
				return default(AxisSign);
			}
			[Token(Token = "0x6002BA2")]
			[Address(RVA = "0x1193554", Offset = "0x1193554", VA = "0x1193554")]
			set
			{
			}
		}

		[Token(Token = "0x170009E9")]
		public AxisSign YLengthSign
		{
			[Token(Token = "0x6002BA3")]
			[Address(RVA = "0x119355C", Offset = "0x119355C", VA = "0x119355C")]
			get
			{
				return default(AxisSign);
			}
			[Token(Token = "0x6002BA4")]
			[Address(RVA = "0x1193564", Offset = "0x1193564", VA = "0x1193564")]
			set
			{
			}
		}

		[Token(Token = "0x170009EA")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6002BA5")]
			[Address(RVA = "0x119356C", Offset = "0x119356C", VA = "0x119356C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002BA6")]
			[Address(RVA = "0x1193578", Offset = "0x1193578", VA = "0x1193578")]
			set
			{
			}
		}

		[Token(Token = "0x170009EB")]
		public Vector3 Right
		{
			[Token(Token = "0x6002BA7")]
			[Address(RVA = "0x1193584", Offset = "0x1193584", VA = "0x1193584")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009EC")]
		public Vector3 Up
		{
			[Token(Token = "0x6002BA8")]
			[Address(RVA = "0x1193610", Offset = "0x1193610", VA = "0x1193610")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009ED")]
		public Vector3 Look
		{
			[Token(Token = "0x6002BA9")]
			[Address(RVA = "0x119369C", Offset = "0x119369C", VA = "0x119369C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009EE")]
		public Vector3 Normal
		{
			[Token(Token = "0x6002BAA")]
			[Address(RVA = "0x1193728", Offset = "0x1193728", VA = "0x1193728")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009EF")]
		public Plane Plane
		{
			[Token(Token = "0x6002BAB")]
			[Address(RVA = "0x119372C", Offset = "0x119372C", VA = "0x119372C")]
			get
			{
				return default(Plane);
			}
		}

		[Token(Token = "0x170009F0")]
		public TriangleEpsilon Epsilon
		{
			[Token(Token = "0x6002BAC")]
			[Address(RVA = "0x1193768", Offset = "0x1193768", VA = "0x1193768")]
			get
			{
				return default(TriangleEpsilon);
			}
			[Token(Token = "0x6002BAD")]
			[Address(RVA = "0x1193774", Offset = "0x1193774", VA = "0x1193774")]
			set
			{
			}
		}

		[Token(Token = "0x170009F1")]
		public float AreaEps
		{
			[Token(Token = "0x6002BAE")]
			[Address(RVA = "0x1193780", Offset = "0x1193780", VA = "0x1193780")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002BAF")]
			[Address(RVA = "0x1193788", Offset = "0x1193788", VA = "0x1193788")]
			set
			{
			}
		}

		[Token(Token = "0x170009F2")]
		public float ExtrudeEps
		{
			[Token(Token = "0x6002BB0")]
			[Address(RVA = "0x1193794", Offset = "0x1193794", VA = "0x1193794")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002BB1")]
			[Address(RVA = "0x119379C", Offset = "0x119379C", VA = "0x119379C")]
			set
			{
			}
		}

		[Token(Token = "0x170009F3")]
		public float WireEps
		{
			[Token(Token = "0x6002BB2")]
			[Address(RVA = "0x11937A8", Offset = "0x11937A8", VA = "0x11937A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002BB3")]
			[Address(RVA = "0x11937B0", Offset = "0x11937B0", VA = "0x11937B0")]
			set
			{
			}
		}

		[Token(Token = "0x170009F4")]
		public Shape3DRaycastMode RaycastMode
		{
			[Token(Token = "0x6002BB4")]
			[Address(RVA = "0x11937BC", Offset = "0x11937BC", VA = "0x11937BC")]
			get
			{
				return default(Shape3DRaycastMode);
			}
			[Token(Token = "0x6002BB5")]
			[Address(RVA = "0x11937C4", Offset = "0x11937C4", VA = "0x11937C4")]
			set
			{
			}
		}

		[Token(Token = "0x170009F5")]
		public static Vector3 ModelRight
		{
			[Token(Token = "0x6002BB6")]
			[Address(RVA = "0x11935CC", Offset = "0x11935CC", VA = "0x11935CC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009F6")]
		public static Vector3 ModelUp
		{
			[Token(Token = "0x6002BB7")]
			[Address(RVA = "0x1193658", Offset = "0x1193658", VA = "0x1193658")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009F7")]
		public static Vector3 ModelLook
		{
			[Token(Token = "0x6002BB8")]
			[Address(RVA = "0x11936E4", Offset = "0x11936E4", VA = "0x11936E4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009F8")]
		public static Vector3 ModelRightAngleCorner
		{
			[Token(Token = "0x6002BB9")]
			[Address(RVA = "0x11937CC", Offset = "0x11937CC", VA = "0x11937CC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170009F9")]
		public static Vector3 ModelNormal
		{
			[Token(Token = "0x6002BBA")]
			[Address(RVA = "0x1193810", Offset = "0x1193810", VA = "0x1193810")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002BBB")]
		[Address(RVA = "0x1193814", Offset = "0x1193814", VA = "0x1193814")]
		public void AlignNormal(Vector3 axis)
		{
		}

		[Token(Token = "0x6002BBC")]
		[Address(RVA = "0x1193910", Offset = "0x1193910", VA = "0x1193910")]
		public void AlignRight(Vector3 axis)
		{
		}

		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0x1193A0C", Offset = "0x1193A0C", VA = "0x1193A0C")]
		public void AlignUp(Vector3 axis)
		{
		}

		[Token(Token = "0x6002BBE")]
		[Address(RVA = "0x1193B08", Offset = "0x1193B08", VA = "0x1193B08", Slot = "7")]
		public override bool Raycast(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0x1193E0C", Offset = "0x1193E0C", VA = "0x1193E0C", Slot = "4")]
		public override bool RaycastWire(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0x1193F64", Offset = "0x1193F64", VA = "0x1193F64", Slot = "5")]
		public override void RenderSolid()
		{
		}

		[Token(Token = "0x6002BC1")]
		[Address(RVA = "0x11940F8", Offset = "0x11940F8", VA = "0x11940F8", Slot = "6")]
		public override void RenderWire()
		{
		}

		[Token(Token = "0x6002BC2")]
		[Address(RVA = "0x1193D34", Offset = "0x1193D34", VA = "0x1193D34")]
		public List<Vector3> GetPoints()
		{
			return null;
		}

		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0x119428C", Offset = "0x119428C", VA = "0x119428C", Slot = "8")]
		public override AABB GetAABB()
		{
			return default(AABB);
		}

		[Token(Token = "0x6002BC4")]
		[Address(RVA = "0x11942B8", Offset = "0x11942B8", VA = "0x11942B8")]
		public bool ContainsPoint(Vector3 point, bool checkOnPlane)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BC5")]
		[Address(RVA = "0x11943F8", Offset = "0x11943F8", VA = "0x11943F8")]
		public RightAngTriangle3D()
		{
		}
	}
	[Token(Token = "0x2000637")]
	public class SegmentShape2D : Shape2D
	{
		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector2 _startPoint;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 _endPoint;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2 _direction;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _length;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private SegmentEpsilon _epsilon;

		[Token(Token = "0x170009FA")]
		public float Length
		{
			[Token(Token = "0x6002BC6")]
			[Address(RVA = "0x1194464", Offset = "0x1194464", VA = "0x1194464")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002BC7")]
			[Address(RVA = "0x119446C", Offset = "0x119446C", VA = "0x119446C")]
			set
			{
			}
		}

		[Token(Token = "0x170009FB")]
		public Vector2 StartPoint
		{
			[Token(Token = "0x6002BC8")]
			[Address(RVA = "0x119448C", Offset = "0x119448C", VA = "0x119448C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002BC9")]
			[Address(RVA = "0x1194494", Offset = "0x1194494", VA = "0x1194494")]
			set
			{
			}
		}

		[Token(Token = "0x170009FC")]
		public Vector2 EndPoint
		{
			[Token(Token = "0x6002BCA")]
			[Address(RVA = "0x11944B4", Offset = "0x11944B4", VA = "0x11944B4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002BCB")]
			[Address(RVA = "0x11944BC", Offset = "0x11944BC", VA = "0x11944BC")]
			set
			{
			}
		}

		[Token(Token = "0x170009FD")]
		public Vector2 Direction
		{
			[Token(Token = "0x6002BCC")]
			[Address(RVA = "0x11945F4", Offset = "0x11945F4", VA = "0x11945F4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6002BCD")]
			[Address(RVA = "0x11945FC", Offset = "0x11945FC", VA = "0x11945FC")]
			set
			{
			}
		}

		[Token(Token = "0x170009FE")]
		public SegmentEpsilon Epsilon
		{
			[Token(Token = "0x6002BCE")]
			[Address(RVA = "0x11946DC", Offset = "0x11946DC", VA = "0x11946DC")]
			get
			{
				return default(SegmentEpsilon);
			}
			[Token(Token = "0x6002BCF")]
			[Address(RVA = "0x11946E4", Offset = "0x11946E4", VA = "0x11946E4")]
			set
			{
			}
		}

		[Token(Token = "0x170009FF")]
		public float RaycastEps
		{
			[Token(Token = "0x6002BD0")]
			[Address(RVA = "0x11946EC", Offset = "0x11946EC", VA = "0x11946EC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002BD1")]
			[Address(RVA = "0x11946F4", Offset = "0x11946F4", VA = "0x11946F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000A00")]
		public float PtOnSegmentEps
		{
			[Token(Token = "0x6002BD2")]
			[Address(RVA = "0x1194700", Offset = "0x1194700", VA = "0x1194700")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002BD3")]
			[Address(RVA = "0x1194708", Offset = "0x1194708", VA = "0x1194708")]
			set
			{
			}
		}

		[Token(Token = "0x6002BD4")]
		[Address(RVA = "0x1194714", Offset = "0x1194714", VA = "0x1194714")]
		public void SetEndPtFromStart(Vector2 dirDromStart, float offset)
		{
		}

		[Token(Token = "0x6002BD5")]
		[Address(RVA = "0x119472C", Offset = "0x119472C", VA = "0x119472C", Slot = "5")]
		public override void RenderBorder(Camera camera)
		{
		}

		[Token(Token = "0x6002BD6")]
		[Address(RVA = "0x1194740", Offset = "0x1194740", VA = "0x1194740", Slot = "4")]
		public override void RenderArea(Camera camera)
		{
		}

		[Token(Token = "0x6002BD7")]
		[Address(RVA = "0x1194754", Offset = "0x1194754", VA = "0x1194754", Slot = "6")]
		public override bool ContainsPoint(Vector2 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD8")]
		[Address(RVA = "0x1194768", Offset = "0x1194768", VA = "0x1194768", Slot = "7")]
		public override Rect GetEncapsulatingRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x6002BD9")]
		[Address(RVA = "0x11947E4", Offset = "0x11947E4", VA = "0x11947E4")]
		public SegmentShape2D()
		{
		}
	}
	[Token(Token = "0x2000638")]
	public class SegmentShape3D : Shape3D
	{
		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _startPoint;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 _endPoint;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _direction;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _length;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SegmentEpsilon _epsilon;

		[Token(Token = "0x17000A01")]
		public float Length
		{
			[Token(Token = "0x6002BDA")]
			[Address(RVA = "0x119487C", Offset = "0x119487C", VA = "0x119487C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002BDB")]
			[Address(RVA = "0x1194884", Offset = "0x1194884", VA = "0x1194884")]
			set
			{
			}
		}

		[Token(Token = "0x17000A02")]
		public Vector3 StartPoint
		{
			[Token(Token = "0x6002BDC")]
			[Address(RVA = "0x11948B8", Offset = "0x11948B8", VA = "0x11948B8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002BDD")]
			[Address(RVA = "0x11948C4", Offset = "0x11948C4", VA = "0x11948C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000A03")]
		public Vector3 EndPoint
		{
			[Token(Token = "0x6002BDE")]
			[Address(RVA = "0x11948F4", Offset = "0x11948F4", VA = "0x11948F4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002BDF")]
			[Address(RVA = "0x1194900", Offset = "0x1194900", VA = "0x1194900")]
			set
			{
			}
		}

		[Token(Token = "0x17000A04")]
		public Vector3 Direction
		{
			[Token(Token = "0x6002BE0")]
			[Address(RVA = "0x1194A70", Offset = "0x1194A70", VA = "0x1194A70")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002BE1")]
			[Address(RVA = "0x1194A7C", Offset = "0x1194A7C", VA = "0x1194A7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000A05")]
		public SegmentEpsilon Epsilon
		{
			[Token(Token = "0x6002BE2")]
			[Address(RVA = "0x1194B90", Offset = "0x1194B90", VA = "0x1194B90")]
			get
			{
				return default(SegmentEpsilon);
			}
			[Token(Token = "0x6002BE3")]
			[Address(RVA = "0x1194B98", Offset = "0x1194B98", VA = "0x1194B98")]
			set
			{
			}
		}

		[Token(Token = "0x17000A06")]
		public float RaycastEps
		{
			[Token(Token = "0x6002BE4")]
			[Address(RVA = "0x1194BA0", Offset = "0x1194BA0", VA = "0x1194BA0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002BE5")]
			[Address(RVA = "0x1194BA8", Offset = "0x1194BA8", VA = "0x1194BA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000A07")]
		public float PtOnSegmentEps
		{
			[Token(Token = "0x6002BE6")]
			[Address(RVA = "0x1194BB4", Offset = "0x1194BB4", VA = "0x1194BB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002BE7")]
			[Address(RVA = "0x1194BBC", Offset = "0x1194BBC", VA = "0x1194BBC")]
			set
			{
			}
		}

		[Token(Token = "0x6002BE8")]
		[Address(RVA = "0x1194BC8", Offset = "0x1194BC8", VA = "0x1194BC8")]
		public void SetEndPtFromStart(Vector3 dirDromStart, float offset)
		{
		}

		[Token(Token = "0x6002BE9")]
		[Address(RVA = "0x1194BEC", Offset = "0x1194BEC", VA = "0x1194BEC", Slot = "5")]
		public override void RenderSolid()
		{
		}

		[Token(Token = "0x6002BEA")]
		[Address(RVA = "0x1194C00", Offset = "0x1194C00", VA = "0x1194C00", Slot = "6")]
		public override void RenderWire()
		{
		}

		[Token(Token = "0x6002BEB")]
		[Address(RVA = "0x1194C14", Offset = "0x1194C14", VA = "0x1194C14", Slot = "7")]
		public override bool Raycast(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BEC")]
		[Address(RVA = "0x1194C5C", Offset = "0x1194C5C", VA = "0x1194C5C", Slot = "8")]
		public override AABB GetAABB()
		{
			return default(AABB);
		}

		[Token(Token = "0x6002BED")]
		[Address(RVA = "0x1194D08", Offset = "0x1194D08", VA = "0x1194D08")]
		public SegmentShape3D()
		{
		}
	}
	[Token(Token = "0x2000639")]
	public abstract class Shape2D
	{
		[Token(Token = "0x6002BEE")]
		public abstract void RenderArea(Camera camera);

		[Token(Token = "0x6002BEF")]
		public abstract void RenderBorder(Camera camera);

		[Token(Token = "0x6002BF0")]
		public abstract bool ContainsPoint(Vector2 point);

		[Token(Token = "0x6002BF1")]
		public abstract Rect GetEncapsulatingRect();

		[Token(Token = "0x6002BF2")]
		[Address(RVA = "0x1187C2C", Offset = "0x1187C2C", VA = "0x1187C2C")]
		protected Shape2D()
		{
		}
	}
	[Token(Token = "0x200063A")]
	public enum Shape2DBorderDirection
	{
		[Token(Token = "0x4001C29")]
		Inward,
		[Token(Token = "0x4001C2A")]
		Outward
	}
	[Token(Token = "0x200063B")]
	public enum Shape2DBorderType
	{
		[Token(Token = "0x4001C2C")]
		Thin,
		[Token(Token = "0x4001C2D")]
		Thick
	}
	[Token(Token = "0x200063C")]
	public enum Shape2DExtentPoint
	{
		[Token(Token = "0x4001C2F")]
		Left,
		[Token(Token = "0x4001C30")]
		Top,
		[Token(Token = "0x4001C31")]
		Right,
		[Token(Token = "0x4001C32")]
		Bottom
	}
	[Token(Token = "0x200063D")]
	public enum Shape2DPtContainMode
	{
		[Token(Token = "0x4001C34")]
		InsideArea,
		[Token(Token = "0x4001C35")]
		OnBorder
	}
	[Token(Token = "0x200063E")]
	public abstract class Shape3D
	{
		[Token(Token = "0x6002BF3")]
		[Address(RVA = "0x1194DB4", Offset = "0x1194DB4", VA = "0x1194DB4")]
		public bool Raycast(Ray ray)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BF4")]
		[Address(RVA = "0x1194E00", Offset = "0x1194E00", VA = "0x1194E00")]
		public bool RaycastWire(Ray ray)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BF5")]
		[Address(RVA = "0x1194E4C", Offset = "0x1194E4C", VA = "0x1194E4C", Slot = "4")]
		public virtual bool RaycastWire(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BF6")]
		public abstract void RenderSolid();

		[Token(Token = "0x6002BF7")]
		public abstract void RenderWire();

		[Token(Token = "0x6002BF8")]
		public abstract bool Raycast(Ray ray, out float t);

		[Token(Token = "0x6002BF9")]
		public abstract AABB GetAABB();

		[Token(Token = "0x6002BFA")]
		[Address(RVA = "0x1188AC0", Offset = "0x1188AC0", VA = "0x1188AC0")]
		protected Shape3D()
		{
		}
	}
	[Token(Token = "0x200063F")]
	public enum Shape3DRaycastMode
	{
		[Token(Token = "0x4001C37")]
		Solid,
		[Token(Token = "0x4001C38")]
		Wire
	}
	[Token(Token = "0x2000640")]
	public class SphereShape3D : Shape3D
	{
		[Token(Token = "0x2000641")]
		public enum WireRenderMode
		{
			[Token(Token = "0x4001C3F")]
			Basic,
			[Token(Token = "0x4001C40")]
			Detailed
		}

		[Token(Token = "0x2000642")]
		public class WireRenderDescriptor
		{
			[Token(Token = "0x4001C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private WireRenderMode _wireMode;

			[Token(Token = "0x4001C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int _numDetailAxialRings;

			[Token(Token = "0x4001C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int _numDetailSliceRings;

			[Token(Token = "0x4001C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float _radiusAdd;

			[Token(Token = "0x17000A17")]
			public WireRenderMode WireMode
			{
				[Token(Token = "0x6002C15")]
				[Address(RVA = "0x1195E44", Offset = "0x1195E44", VA = "0x1195E44")]
				get
				{
					return default(WireRenderMode);
				}
				[Token(Token = "0x6002C16")]
				[Address(RVA = "0x1195E4C", Offset = "0x1195E4C", VA = "0x1195E4C")]
				set
				{
				}
			}

			[Token(Token = "0x17000A18")]
			public int NumDetailAxialRings
			{
				[Token(Token = "0x6002C17")]
				[Address(RVA = "0x1195E54", Offset = "0x1195E54", VA = "0x1195E54")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002C18")]
				[Address(RVA = "0x1195E5C", Offset = "0x1195E5C", VA = "0x1195E5C")]
				set
				{
				}
			}

			[Token(Token = "0x17000A19")]
			public int NumDetailSliceRings
			{
				[Token(Token = "0x6002C19")]
				[Address(RVA = "0x1195E70", Offset = "0x1195E70", VA = "0x1195E70")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002C1A")]
				[Address(RVA = "0x1195E78", Offset = "0x1195E78", VA = "0x1195E78")]
				set
				{
				}
			}

			[Token(Token = "0x17000A1A")]
			public float RadiusAdd
			{
				[Token(Token = "0x6002C1B")]
				[Address(RVA = "0x1195E84", Offset = "0x1195E84", VA = "0x1195E84")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002C1C")]
				[Address(RVA = "0x1195E8C", Offset = "0x1195E8C", VA = "0x1195E8C")]
				set
				{
				}
			}

			[Token(Token = "0x6002C1D")]
			[Address(RVA = "0x1195E34", Offset = "0x1195E34", VA = "0x1195E34")]
			public WireRenderDescriptor()
			{
			}
		}

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _radius;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3 _center;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Quaternion _rotation;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SphereEpsilon _epsilon;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WireRenderDescriptor _wireRenderDesc;

		[Token(Token = "0x17000A08")]
		public float Radius
		{
			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0x1194E90", Offset = "0x1194E90", VA = "0x1194E90")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002BFC")]
			[Address(RVA = "0x1194E98", Offset = "0x1194E98", VA = "0x1194E98")]
			set
			{
			}
		}

		[Token(Token = "0x17000A09")]
		public float WireRadius
		{
			[Token(Token = "0x6002BFD")]
			[Address(RVA = "0x1194EA4", Offset = "0x1194EA4", VA = "0x1194EA4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000A0A")]
		public Vector3 Center
		{
			[Token(Token = "0x6002BFE")]
			[Address(RVA = "0x1194EC8", Offset = "0x1194EC8", VA = "0x1194EC8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002BFF")]
			[Address(RVA = "0x1194ED4", Offset = "0x1194ED4", VA = "0x1194ED4")]
			set
			{
			}
		}

		[Token(Token = "0x17000A0B")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6002C00")]
			[Address(RVA = "0x1194EE0", Offset = "0x1194EE0", VA = "0x1194EE0")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002C01")]
			[Address(RVA = "0x1194EEC", Offset = "0x1194EEC", VA = "0x1194EEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000A0C")]
		public SphereEpsilon Epsilon
		{
			[Token(Token = "0x6002C02")]
			[Address(RVA = "0x1194EF8", Offset = "0x1194EF8", VA = "0x1194EF8")]
			get
			{
				return default(SphereEpsilon);
			}
			[Token(Token = "0x6002C03")]
			[Address(RVA = "0x1194F00", Offset = "0x1194F00", VA = "0x1194F00")]
			set
			{
			}
		}

		[Token(Token = "0x17000A0D")]
		public float RadiusEps
		{
			[Token(Token = "0x6002C04")]
			[Address(RVA = "0x1194F08", Offset = "0x1194F08", VA = "0x1194F08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002C05")]
			[Address(RVA = "0x1194F10", Offset = "0x1194F10", VA = "0x1194F10")]
			set
			{
			}
		}

		[Token(Token = "0x17000A0E")]
		public WireRenderDescriptor WireRenderDesc
		{
			[Token(Token = "0x6002C06")]
			[Address(RVA = "0x1194F1C", Offset = "0x1194F1C", VA = "0x1194F1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A0F")]
		public Vector3 CentralAxis
		{
			[Token(Token = "0x6002C07")]
			[Address(RVA = "0x1194F24", Offset = "0x1194F24", VA = "0x1194F24")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A10")]
		public Vector3 Right
		{
			[Token(Token = "0x6002C08")]
			[Address(RVA = "0x1194F70", Offset = "0x1194F70", VA = "0x1194F70")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A11")]
		public Vector3 Up
		{
			[Token(Token = "0x6002C09")]
			[Address(RVA = "0x1194F28", Offset = "0x1194F28", VA = "0x1194F28")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A12")]
		public Vector3 Look
		{
			[Token(Token = "0x6002C0A")]
			[Address(RVA = "0x1195040", Offset = "0x1195040", VA = "0x1195040")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A13")]
		public static Vector3 ModelRight
		{
			[Token(Token = "0x6002C0B")]
			[Address(RVA = "0x1194FB8", Offset = "0x1194FB8", VA = "0x1194FB8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A14")]
		public static Vector3 ModelUp
		{
			[Token(Token = "0x6002C0C")]
			[Address(RVA = "0x1194FFC", Offset = "0x1194FFC", VA = "0x1194FFC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A15")]
		public static Vector3 ModelLook
		{
			[Token(Token = "0x6002C0D")]
			[Address(RVA = "0x1195088", Offset = "0x1195088", VA = "0x1195088")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A16")]
		public static Vector3 ModelCenter
		{
			[Token(Token = "0x6002C0E")]
			[Address(RVA = "0x11950CC", Offset = "0x11950CC", VA = "0x11950CC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002C0F")]
		[Address(RVA = "0x1195110", Offset = "0x1195110", VA = "0x1195110", Slot = "5")]
		public override void RenderSolid()
		{
		}

		[Token(Token = "0x6002C10")]
		[Address(RVA = "0x11952F8", Offset = "0x11952F8", VA = "0x11952F8", Slot = "6")]
		public override void RenderWire()
		{
		}

		[Token(Token = "0x6002C11")]
		[Address(RVA = "0x1195CB4", Offset = "0x1195CB4", VA = "0x1195CB4", Slot = "7")]
		public override bool Raycast(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C12")]
		[Address(RVA = "0x1195CF8", Offset = "0x1195CF8", VA = "0x1195CF8")]
		public bool ContainsPoint(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C13")]
		[Address(RVA = "0x1195D0C", Offset = "0x1195D0C", VA = "0x1195D0C", Slot = "8")]
		public override AABB GetAABB()
		{
			return default(AABB);
		}

		[Token(Token = "0x6002C14")]
		[Address(RVA = "0x1195D6C", Offset = "0x1195D6C", VA = "0x1195D6C")]
		public SphereShape3D()
		{
		}
	}
	[Token(Token = "0x2000643")]
	public class TorusShape3D : Shape3D
	{
		[Token(Token = "0x2000644")]
		public enum WireRenderFlags
		{
			[Token(Token = "0x4001C4C")]
			None,
			[Token(Token = "0x4001C4D")]
			TubeSlices,
			[Token(Token = "0x4001C4E")]
			AxialSlices,
			[Token(Token = "0x4001C4F")]
			All
		}

		[Token(Token = "0x2000645")]
		public class WireRenderDescriptor
		{
			[Token(Token = "0x4001C50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private WireRenderFlags _wireFlags;

			[Token(Token = "0x4001C51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int _numTubeSlices;

			[Token(Token = "0x4001C52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int _numAxialSlices;

			[Token(Token = "0x17000A29")]
			public int NumTubeSlices
			{
				[Token(Token = "0x6002C38")]
				[Address(RVA = "0x1196A84", Offset = "0x1196A84", VA = "0x1196A84")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002C39")]
				[Address(RVA = "0x1196A8C", Offset = "0x1196A8C", VA = "0x1196A8C")]
				set
				{
				}
			}

			[Token(Token = "0x17000A2A")]
			public int NumAxialSlices
			{
				[Token(Token = "0x6002C3A")]
				[Address(RVA = "0x1196A98", Offset = "0x1196A98", VA = "0x1196A98")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002C3B")]
				[Address(RVA = "0x1196AA0", Offset = "0x1196AA0", VA = "0x1196AA0")]
				set
				{
				}
			}

			[Token(Token = "0x17000A2B")]
			public WireRenderFlags WireFlags
			{
				[Token(Token = "0x6002C3C")]
				[Address(RVA = "0x1196AB4", Offset = "0x1196AB4", VA = "0x1196AB4")]
				get
				{
					return default(WireRenderFlags);
				}
				[Token(Token = "0x6002C3D")]
				[Address(RVA = "0x1196ABC", Offset = "0x1196ABC", VA = "0x1196ABC")]
				set
				{
				}
			}

			[Token(Token = "0x6002C3E")]
			[Address(RVA = "0x1196A68", Offset = "0x1196A68", VA = "0x1196A68")]
			public WireRenderDescriptor()
			{
			}
		}

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _coreRadius;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float _tubeRadius;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 _center;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Quaternion _rotation;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private TorusEpsilon _epsilon;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WireRenderDescriptor _wireRenderDesc;

		[Token(Token = "0x17000A1B")]
		public float CoreRadius
		{
			[Token(Token = "0x6002C1E")]
			[Address(RVA = "0x1195E94", Offset = "0x1195E94", VA = "0x1195E94")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002C1F")]
			[Address(RVA = "0x1195E9C", Offset = "0x1195E9C", VA = "0x1195E9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000A1C")]
		public float TubeRadius
		{
			[Token(Token = "0x6002C20")]
			[Address(RVA = "0x1195EA8", Offset = "0x1195EA8", VA = "0x1195EA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002C21")]
			[Address(RVA = "0x1195EB0", Offset = "0x1195EB0", VA = "0x1195EB0")]
			set
			{
			}
		}

		[Token(Token = "0x17000A1D")]
		public Vector3 Center
		{
			[Token(Token = "0x6002C22")]
			[Address(RVA = "0x1195EBC", Offset = "0x1195EBC", VA = "0x1195EBC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002C23")]
			[Address(RVA = "0x1195EC8", Offset = "0x1195EC8", VA = "0x1195EC8")]
			set
			{
			}
		}

		[Token(Token = "0x17000A1E")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6002C24")]
			[Address(RVA = "0x1195ED4", Offset = "0x1195ED4", VA = "0x1195ED4")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002C25")]
			[Address(RVA = "0x1195EE0", Offset = "0x1195EE0", VA = "0x1195EE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000A1F")]
		public Vector3 Right
		{
			[Token(Token = "0x6002C26")]
			[Address(RVA = "0x1195EEC", Offset = "0x1195EEC", VA = "0x1195EEC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A20")]
		public Vector3 Up
		{
			[Token(Token = "0x6002C27")]
			[Address(RVA = "0x1195F78", Offset = "0x1195F78", VA = "0x1195F78")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A21")]
		public Vector3 Look
		{
			[Token(Token = "0x6002C28")]
			[Address(RVA = "0x1196004", Offset = "0x1196004", VA = "0x1196004")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A22")]
		public TorusEpsilon Epsilon
		{
			[Token(Token = "0x6002C29")]
			[Address(RVA = "0x1196090", Offset = "0x1196090", VA = "0x1196090")]
			get
			{
				return default(TorusEpsilon);
			}
			[Token(Token = "0x6002C2A")]
			[Address(RVA = "0x119609C", Offset = "0x119609C", VA = "0x119609C")]
			set
			{
			}
		}

		[Token(Token = "0x17000A23")]
		public float TubeRadiusEps
		{
			[Token(Token = "0x6002C2B")]
			[Address(RVA = "0x11960A8", Offset = "0x11960A8", VA = "0x11960A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002C2C")]
			[Address(RVA = "0x11960B0", Offset = "0x11960B0", VA = "0x11960B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000A24")]
		public WireRenderDescriptor WireRenderDesc
		{
			[Token(Token = "0x6002C2D")]
			[Address(RVA = "0x11960BC", Offset = "0x11960BC", VA = "0x11960BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A25")]
		public static Vector3 ModelRight
		{
			[Token(Token = "0x6002C2E")]
			[Address(RVA = "0x1195F34", Offset = "0x1195F34", VA = "0x1195F34")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A26")]
		public static Vector3 ModelUp
		{
			[Token(Token = "0x6002C2F")]
			[Address(RVA = "0x1195FC0", Offset = "0x1195FC0", VA = "0x1195FC0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A27")]
		public static Vector3 ModelLook
		{
			[Token(Token = "0x6002C30")]
			[Address(RVA = "0x119604C", Offset = "0x119604C", VA = "0x119604C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A28")]
		public static Vector3 ModelCenter
		{
			[Token(Token = "0x6002C31")]
			[Address(RVA = "0x11960C4", Offset = "0x11960C4", VA = "0x11960C4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002C32")]
		[Address(RVA = "0x1196108", Offset = "0x1196108", VA = "0x1196108", Slot = "7")]
		public override bool Raycast(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C33")]
		[Address(RVA = "0x1196170", Offset = "0x1196170", VA = "0x1196170", Slot = "5")]
		public override void RenderSolid()
		{
		}

		[Token(Token = "0x6002C34")]
		[Address(RVA = "0x1196354", Offset = "0x1196354", VA = "0x1196354", Slot = "6")]
		public override void RenderWire()
		{
		}

		[Token(Token = "0x6002C35")]
		[Address(RVA = "0x11968E0", Offset = "0x11968E0", VA = "0x11968E0")]
		public List<Vector3> GetHrzExtents()
		{
			return null;
		}

		[Token(Token = "0x6002C36")]
		[Address(RVA = "0x119691C", Offset = "0x119691C", VA = "0x119691C", Slot = "8")]
		public override AABB GetAABB()
		{
			return default(AABB);
		}

		[Token(Token = "0x6002C37")]
		[Address(RVA = "0x1196994", Offset = "0x1196994", VA = "0x1196994")]
		public TorusShape3D()
		{
		}
	}
	[Token(Token = "0x2000646")]
	public class TriangPrismShape3D : Shape3D
	{
		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _baseCenter;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _width;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _height;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _depth;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion _rotation;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PrismEpsilon _epsilon;

		[Token(Token = "0x17000A2C")]
		public Vector3 BaseCenter
		{
			[Token(Token = "0x6002C3F")]
			[Address(RVA = "0x1196AC4", Offset = "0x1196AC4", VA = "0x1196AC4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002C40")]
			[Address(RVA = "0x1196AD0", Offset = "0x1196AD0", VA = "0x1196AD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000A2D")]
		public Vector3 TopCenter
		{
			[Token(Token = "0x6002C41")]
			[Address(RVA = "0x1196ADC", Offset = "0x1196ADC", VA = "0x1196ADC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002C42")]
			[Address(RVA = "0x1196B6C", Offset = "0x1196B6C", VA = "0x1196B6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000A2E")]
		public Vector3 FrontCenter
		{
			[Token(Token = "0x6002C43")]
			[Address(RVA = "0x1196BC0", Offset = "0x1196BC0", VA = "0x1196BC0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002C44")]
			[Address(RVA = "0x1196CC4", Offset = "0x1196CC4", VA = "0x1196CC4")]
			set
			{
			}
		}

		[Token(Token = "0x17000A2F")]
		public Vector3 Center
		{
			[Token(Token = "0x6002C45")]
			[Address(RVA = "0x1196C24", Offset = "0x1196C24", VA = "0x1196C24")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002C46")]
			[Address(RVA = "0x1196D54", Offset = "0x1196D54", VA = "0x1196D54")]
			set
			{
			}
		}

		[Token(Token = "0x17000A30")]
		public Vector3 MidTip
		{
			[Token(Token = "0x6002C47")]
			[Address(RVA = "0x1196DB8", Offset = "0x1196DB8", VA = "0x1196DB8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6002C48")]
			[Address(RVA = "0x1196E3C", Offset = "0x1196E3C", VA = "0x1196E3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000A31")]
		public float Width
		{
			[Token(Token = "0x6002C49")]
			[Address(RVA = "0x1196ECC", Offset = "0x1196ECC", VA = "0x1196ECC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002C4A")]
			[Address(RVA = "0x1196ED4", Offset = "0x1196ED4", VA = "0x1196ED4")]
			set
			{
			}
		}

		[Token(Token = "0x17000A32")]
		public float Height
		{
			[Token(Token = "0x6002C4B")]
			[Address(RVA = "0x1196EE0", Offset = "0x1196EE0", VA = "0x1196EE0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002C4C")]
			[Address(RVA = "0x1196EE8", Offset = "0x1196EE8", VA = "0x1196EE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000A33")]
		public float Depth
		{
			[Token(Token = "0x6002C4D")]
			[Address(RVA = "0x1196EF4", Offset = "0x1196EF4", VA = "0x1196EF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002C4E")]
			[Address(RVA = "0x1196EFC", Offset = "0x1196EFC", VA = "0x1196EFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000A34")]
		public PrismEpsilon Epsilon
		{
			[Token(Token = "0x6002C4F")]
			[Address(RVA = "0x1196F08", Offset = "0x1196F08", VA = "0x1196F08")]
			get
			{
				return default(PrismEpsilon);
			}
			[Token(Token = "0x6002C50")]
			[Address(RVA = "0x1196F10", Offset = "0x1196F10", VA = "0x1196F10")]
			set
			{
			}
		}

		[Token(Token = "0x17000A35")]
		public float PtContainEps
		{
			[Token(Token = "0x6002C51")]
			[Address(RVA = "0x1196F18", Offset = "0x1196F18", VA = "0x1196F18")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002C52")]
			[Address(RVA = "0x1196F20", Offset = "0x1196F20", VA = "0x1196F20")]
			set
			{
			}
		}

		[Token(Token = "0x17000A36")]
		public Quaternion Rotation
		{
			[Token(Token = "0x6002C53")]
			[Address(RVA = "0x1196F2C", Offset = "0x1196F2C", VA = "0x1196F2C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6002C54")]
			[Address(RVA = "0x1196F38", Offset = "0x1196F38", VA = "0x1196F38")]
			set
			{
			}
		}

		[Token(Token = "0x17000A37")]
		public Vector3 CentralAxis
		{
			[Token(Token = "0x6002C55")]
			[Address(RVA = "0x1196B24", Offset = "0x1196B24", VA = "0x1196B24")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A38")]
		public Vector3 Right
		{
			[Token(Token = "0x6002C56")]
			[Address(RVA = "0x1196F88", Offset = "0x1196F88", VA = "0x1196F88")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A39")]
		public Vector3 Up
		{
			[Token(Token = "0x6002C57")]
			[Address(RVA = "0x1197014", Offset = "0x1197014", VA = "0x1197014")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A3A")]
		public Vector3 Look
		{
			[Token(Token = "0x6002C58")]
			[Address(RVA = "0x1196C7C", Offset = "0x1196C7C", VA = "0x1196C7C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A3B")]
		public static Vector3 ModelRight
		{
			[Token(Token = "0x6002C59")]
			[Address(RVA = "0x1196FD0", Offset = "0x1196FD0", VA = "0x1196FD0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A3C")]
		public static Vector3 ModelUp
		{
			[Token(Token = "0x6002C5A")]
			[Address(RVA = "0x1196F44", Offset = "0x1196F44", VA = "0x1196F44")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A3D")]
		public static Vector3 ModelLook
		{
			[Token(Token = "0x6002C5B")]
			[Address(RVA = "0x119705C", Offset = "0x119705C", VA = "0x119705C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A3E")]
		public static Vector3 ModelBaseCenter
		{
			[Token(Token = "0x6002C5C")]
			[Address(RVA = "0x11970A0", Offset = "0x11970A0", VA = "0x11970A0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002C5D")]
		[Address(RVA = "0x11970E4", Offset = "0x11970E4", VA = "0x11970E4")]
		public void AlignWidth(Vector3 axis)
		{
		}

		[Token(Token = "0x6002C5E")]
		[Address(RVA = "0x11971E0", Offset = "0x11971E0", VA = "0x11971E0")]
		public void AlignHeight(Vector3 axis)
		{
		}

		[Token(Token = "0x6002C5F")]
		[Address(RVA = "0x11972DC", Offset = "0x11972DC", VA = "0x11972DC")]
		public void AlignDepth(Vector3 axis)
		{
		}

		[Token(Token = "0x6002C60")]
		[Address(RVA = "0x11973D8", Offset = "0x11973D8", VA = "0x11973D8", Slot = "5")]
		public override void RenderSolid()
		{
		}

		[Token(Token = "0x6002C61")]
		[Address(RVA = "0x1197548", Offset = "0x1197548", VA = "0x1197548", Slot = "6")]
		public override void RenderWire()
		{
		}

		[Token(Token = "0x6002C62")]
		[Address(RVA = "0x11976B8", Offset = "0x11976B8", VA = "0x11976B8")]
		public void MakeEquilateral(float sideLength)
		{
		}

		[Token(Token = "0x6002C63")]
		[Address(RVA = "0x11976DC", Offset = "0x11976DC", VA = "0x11976DC", Slot = "7")]
		public override bool Raycast(Ray ray, out float t)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C64")]
		[Address(RVA = "0x1197740", Offset = "0x1197740", VA = "0x1197740")]
		public bool ContainsPoint(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C65")]
		[Address(RVA = "0x1197790", Offset = "0x1197790", VA = "0x1197790", Slot = "8")]
		public override AABB GetAABB()
		{
			return default(AABB);
		}

		[Token(Token = "0x6002C66")]
		[Address(RVA = "0x11977F4", Offset = "0x11977F4", VA = "0x11977F4")]
		public TriangPrismShape3D()
		{
		}
	}
	[Token(Token = "0x2000647")]
	public class MonoSingleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _singletonLock;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x17000A3F")]
		public static T Get
		{
			[Token(Token = "0x6002C67")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C68")]
		public MonoSingleton()
		{
		}
	}
	[Token(Token = "0x2000648")]
	public abstract class Singleton<T> where T : class, new()
	{
		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x17000A40")]
		public static T Get
		{
			[Token(Token = "0x6002C6A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C6B")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x2000649")]
	public enum TransformAxis
	{
		[Token(Token = "0x4001C5D")]
		PositiveX,
		[Token(Token = "0x4001C5E")]
		NegativeX,
		[Token(Token = "0x4001C5F")]
		PositiveY,
		[Token(Token = "0x4001C60")]
		NegativeY,
		[Token(Token = "0x4001C61")]
		PositiveZ,
		[Token(Token = "0x4001C62")]
		NegativeZ
	}
	[Token(Token = "0x200064A")]
	public class LocalTransformSnapshot
	{
		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform _transform;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _parentTransform;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 _localPosition;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion _localRotation;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 _localScale;

		[Token(Token = "0x17000A41")]
		public Transform Transform
		{
			[Token(Token = "0x6002C6D")]
			[Address(RVA = "0x1197868", Offset = "0x1197868", VA = "0x1197868")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C6E")]
		[Address(RVA = "0x11867F4", Offset = "0x11867F4", VA = "0x11867F4")]
		public static List<LocalTransformSnapshot> GetSnapshotCollection(IEnumerable<GameObject> gameObjects)
		{
			return null;
		}

		[Token(Token = "0x6002C6F")]
		[Address(RVA = "0x1197878", Offset = "0x1197878", VA = "0x1197878")]
		public void Snapshot(Transform transform)
		{
		}

		[Token(Token = "0x6002C70")]
		[Address(RVA = "0x1197958", Offset = "0x1197958", VA = "0x1197958")]
		public bool SameAs(Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C71")]
		[Address(RVA = "0x1197AC8", Offset = "0x1197AC8", VA = "0x1197AC8")]
		public void Apply()
		{
		}

		[Token(Token = "0x6002C72")]
		[Address(RVA = "0x1197870", Offset = "0x1197870", VA = "0x1197870")]
		public LocalTransformSnapshot()
		{
		}
	}
	[Token(Token = "0x200064B")]
	public class WorldTransformSnapshot
	{
		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 _worldPosition;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Quaternion _worldRotation;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _worldScale;

		[Token(Token = "0x17000A42")]
		public Vector3 WorldPosition
		{
			[Token(Token = "0x6002C73")]
			[Address(RVA = "0x1197BD8", Offset = "0x1197BD8", VA = "0x1197BD8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000A43")]
		public Quaternion WorldRotation
		{
			[Token(Token = "0x6002C74")]
			[Address(RVA = "0x1197BE4", Offset = "0x1197BE4", VA = "0x1197BE4")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000A44")]
		public Vector3 WorldScale
		{
			[Token(Token = "0x6002C75")]
			[Address(RVA = "0x1197BF0", Offset = "0x1197BF0", VA = "0x1197BF0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6002C76")]
		[Address(RVA = "0x1197BFC", Offset = "0x1197BFC", VA = "0x1197BFC")]
		public void Snaphot(Transform transform)
		{
		}

		[Token(Token = "0x6002C77")]
		[Address(RVA = "0x1197CB0", Offset = "0x1197CB0", VA = "0x1197CB0")]
		public bool SameAs(Transform transform)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C78")]
		[Address(RVA = "0x1197DB4", Offset = "0x1197DB4", VA = "0x1197DB4")]
		public WorldTransformSnapshot()
		{
		}
	}
	[Token(Token = "0x200064C")]
	public interface IUndoRedoAction
	{
		[Token(Token = "0x6002C79")]
		void Execute();

		[Token(Token = "0x6002C7A")]
		void Undo();

		[Token(Token = "0x6002C7B")]
		void Redo();

		[Token(Token = "0x6002C7C")]
		void OnRemovedFromUndoRedoStack();
	}
	[Token(Token = "0x200064D")]
	public enum UndoRedoOpType
	{
		[Token(Token = "0x4001C6C")]
		Undo,
		[Token(Token = "0x4001C6D")]
		Redo
	}
	[Token(Token = "0x200064E")]
	public delegate void UndoStartHandler(IUndoRedoAction action);
	[Token(Token = "0x200064F")]
	public delegate void UndoEndHandler(IUndoRedoAction action);
	[Token(Token = "0x2000650")]
	public delegate void RedoStartHandler(IUndoRedoAction action);
	[Token(Token = "0x2000651")]
	public delegate void RedoEndHandler(IUndoRedoAction action);
	[Token(Token = "0x2000652")]
	public delegate void CanUndoRedoHandler(UndoRedoOpType undoRedoOpType, YesNoAnswer answer);
	[Token(Token = "0x2000653")]
	public class RTUndoRedo : MonoSingleton<RTUndoRedo>
	{
		[Token(Token = "0x2000654")]
		private class ActionGroup
		{
			[Token(Token = "0x4001C77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<IUndoRedoAction> Actions;

			[Token(Token = "0x6002CA7")]
			[Address(RVA = "0x119909C", Offset = "0x119909C", VA = "0x119909C")]
			public ActionGroup(IUndoRedoAction action)
			{
			}
		}

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool _isEnabled;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int _actionLimit;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<ActionGroup> _actionGroupStack;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _stackPointer;

		[Token(Token = "0x17000A45")]
		public bool IsEnabled
		{
			[Token(Token = "0x6002C9B")]
			[Address(RVA = "0x1198B48", Offset = "0x1198B48", VA = "0x1198B48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000A46")]
		public int ActionLimit
		{
			[Token(Token = "0x6002C9C")]
			[Address(RVA = "0x1198B50", Offset = "0x1198B50", VA = "0x1198B50")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002C9D")]
			[Address(RVA = "0x1198B58", Offset = "0x1198B58", VA = "0x1198B58")]
			set
			{
			}
		}

		[Token(Token = "0x14000059")]
		public event UndoStartHandler UndoStart
		{
			[Token(Token = "0x6002C91")]
			[Address(RVA = "0x1198530", Offset = "0x1198530", VA = "0x1198530")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002C92")]
			[Address(RVA = "0x11985CC", Offset = "0x11985CC", VA = "0x11985CC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005A")]
		public event UndoEndHandler UndoEnd
		{
			[Token(Token = "0x6002C93")]
			[Address(RVA = "0x1198668", Offset = "0x1198668", VA = "0x1198668")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002C94")]
			[Address(RVA = "0x1198704", Offset = "0x1198704", VA = "0x1198704")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005B")]
		public event RedoStartHandler RedoStart
		{
			[Token(Token = "0x6002C95")]
			[Address(RVA = "0x11987A0", Offset = "0x11987A0", VA = "0x11987A0")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002C96")]
			[Address(RVA = "0x119883C", Offset = "0x119883C", VA = "0x119883C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005C")]
		public event RedoEndHandler RedoEnd
		{
			[Token(Token = "0x6002C97")]
			[Address(RVA = "0x11988D8", Offset = "0x11988D8", VA = "0x11988D8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002C98")]
			[Address(RVA = "0x1198974", Offset = "0x1198974", VA = "0x1198974")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005D")]
		public event CanUndoRedoHandler CanUndoRedo
		{
			[Token(Token = "0x6002C99")]
			[Address(RVA = "0x1198A10", Offset = "0x1198A10", VA = "0x1198A10")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002C9A")]
			[Address(RVA = "0x1198AAC", Offset = "0x1198AAC", VA = "0x1198AAC")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002C9E")]
		[Address(RVA = "0x1198BE0", Offset = "0x1198BE0", VA = "0x1198BE0")]
		public void SetEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6002C9F")]
		[Address(RVA = "0x1198B84", Offset = "0x1198B84", VA = "0x1198B84")]
		public void ClearActions()
		{
		}

		[Token(Token = "0x6002CA0")]
		[Address(RVA = "0x1198F38", Offset = "0x1198F38", VA = "0x1198F38")]
		public void RecordAction(IUndoRedoAction action)
		{
		}

		[Token(Token = "0x6002CA1")]
		[Address(RVA = "0x11991B8", Offset = "0x11991B8", VA = "0x11991B8")]
		public void Update_SystemCall()
		{
		}

		[Token(Token = "0x6002CA2")]
		[Address(RVA = "0x1199670", Offset = "0x1199670", VA = "0x1199670")]
		private void Undo()
		{
		}

		[Token(Token = "0x6002CA3")]
		[Address(RVA = "0x11993B4", Offset = "0x11993B4", VA = "0x11993B4")]
		private void Redo()
		{
		}

		[Token(Token = "0x6002CA4")]
		[Address(RVA = "0x1198BEC", Offset = "0x1198BEC", VA = "0x1198BEC")]
		private void RemoveGroups(int startIndex, int count)
		{
		}

		[Token(Token = "0x6002CA5")]
		[Address(RVA = "0x119990C", Offset = "0x119990C", VA = "0x119990C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6002CA6")]
		[Address(RVA = "0x1199938", Offset = "0x1199938", VA = "0x1199938")]
		public RTUndoRedo()
		{
		}
	}
	[Token(Token = "0x2000655")]
	public class PostObjectSpawnAction : IUndoRedoAction
	{
		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _cleanupOnRemovedFromStack;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<GameObject> _spawnedParents;

		[Token(Token = "0x6002CA8")]
		[Address(RVA = "0x1199A1C", Offset = "0x1199A1C", VA = "0x1199A1C")]
		public PostObjectSpawnAction(List<GameObject> spawnedParents)
		{
		}

		[Token(Token = "0x6002CA9")]
		[Address(RVA = "0x1199AF4", Offset = "0x1199AF4", VA = "0x1199AF4", Slot = "4")]
		public void Execute()
		{
		}

		[Token(Token = "0x6002CAA")]
		[Address(RVA = "0x1199B6C", Offset = "0x1199B6C", VA = "0x1199B6C", Slot = "5")]
		public void Undo()
		{
		}

		[Token(Token = "0x6002CAB")]
		[Address(RVA = "0x1199CC0", Offset = "0x1199CC0", VA = "0x1199CC0", Slot = "6")]
		public void Redo()
		{
		}

		[Token(Token = "0x6002CAC")]
		[Address(RVA = "0x1199E10", Offset = "0x1199E10", VA = "0x1199E10", Slot = "7")]
		public void OnRemovedFromUndoRedoStack()
		{
		}
	}
	[Token(Token = "0x2000656")]
	public class PostObjectTransformsChangedAction : IUndoRedoAction
	{
		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<LocalTransformSnapshot> _preChangeTransformSnapshots;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<LocalTransformSnapshot> _postChangeTransformSnapshots;

		[Token(Token = "0x6002CAD")]
		[Address(RVA = "0x1186C60", Offset = "0x1186C60", VA = "0x1186C60")]
		public PostObjectTransformsChangedAction(List<LocalTransformSnapshot> preChangeTransformSnapshots, List<LocalTransformSnapshot> postChangeTransformSnapshots)
		{
		}

		[Token(Token = "0x6002CAE")]
		[Address(RVA = "0x1186DA4", Offset = "0x1186DA4", VA = "0x1186DA4", Slot = "4")]
		public void Execute()
		{
		}

		[Token(Token = "0x6002CAF")]
		[Address(RVA = "0x1199FC4", Offset = "0x1199FC4", VA = "0x1199FC4", Slot = "5")]
		public void Undo()
		{
		}

		[Token(Token = "0x6002CB0")]
		[Address(RVA = "0x119A10C", Offset = "0x119A10C", VA = "0x119A10C", Slot = "6")]
		public void Redo()
		{
		}

		[Token(Token = "0x6002CB1")]
		[Address(RVA = "0x119A254", Offset = "0x119A254", VA = "0x119A254", Slot = "7")]
		public void OnRemovedFromUndoRedoStack()
		{
		}
	}
	[Token(Token = "0x2000657")]
	public class PostGizmoTransformsChangedAction : IUndoRedoAction
	{
		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<LocalGizmoTransformSnapshot> _preChangeTransformSnapshots;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<LocalGizmoTransformSnapshot> _postChangeTransformSnapshots;

		[Token(Token = "0x6002CB2")]
		[Address(RVA = "0x119A258", Offset = "0x119A258", VA = "0x119A258")]
		public PostGizmoTransformsChangedAction(List<LocalGizmoTransformSnapshot> preChangeTransformSnapshots, List<LocalGizmoTransformSnapshot> postChangeTransformSnapshots)
		{
		}

		[Token(Token = "0x6002CB3")]
		[Address(RVA = "0x119A39C", Offset = "0x119A39C", VA = "0x119A39C", Slot = "4")]
		public void Execute()
		{
		}

		[Token(Token = "0x6002CB4")]
		[Address(RVA = "0x119A414", Offset = "0x119A414", VA = "0x119A414", Slot = "5")]
		public void Undo()
		{
		}

		[Token(Token = "0x6002CB5")]
		[Address(RVA = "0x119A560", Offset = "0x119A560", VA = "0x119A560", Slot = "6")]
		public void Redo()
		{
		}

		[Token(Token = "0x6002CB6")]
		[Address(RVA = "0x119A6AC", Offset = "0x119A6AC", VA = "0x119A6AC", Slot = "7")]
		public void OnRemovedFromUndoRedoStack()
		{
		}
	}
	[Token(Token = "0x2000658")]
	public class DuplicateObjectsAction : IUndoRedoAction
	{
		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<GameObject> _rootsToDuplicate;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<GameObject> _duplicateResult;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _cleanupOnRemovedFromStack;

		[Token(Token = "0x17000A47")]
		public List<GameObject> DuplicateResult
		{
			[Token(Token = "0x6002CB7")]
			[Address(RVA = "0x119A6B0", Offset = "0x119A6B0", VA = "0x119A6B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CB8")]
		[Address(RVA = "0x119A72C", Offset = "0x119A72C", VA = "0x119A72C")]
		public DuplicateObjectsAction(List<GameObject> rootsToDuplicate)
		{
		}

		[Token(Token = "0x6002CB9")]
		[Address(RVA = "0x119A800", Offset = "0x119A800", VA = "0x119A800", Slot = "4")]
		public void Execute()
		{
		}

		[Token(Token = "0x6002CBA")]
		[Address(RVA = "0x119AB38", Offset = "0x119AB38", VA = "0x119AB38", Slot = "5")]
		public void Undo()
		{
		}

		[Token(Token = "0x6002CBB")]
		[Address(RVA = "0x119AC8C", Offset = "0x119AC8C", VA = "0x119AC8C", Slot = "6")]
		public void Redo()
		{
		}

		[Token(Token = "0x6002CBC")]
		[Address(RVA = "0x119ADDC", Offset = "0x119ADDC", VA = "0x119ADDC", Slot = "7")]
		public void OnRemovedFromUndoRedoStack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000659")]
	public class DynamicConvertSettings : Settings
	{
		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Rect _prefabFolderDropRect;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private GameObjectType _convertableObjectTypes;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _prefabFolder;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool _processPrefabSubfolders;

		[Token(Token = "0x17000A48")]
		public GameObjectType ConvertableObjectTypes
		{
			[Token(Token = "0x6002CBD")]
			[Address(RVA = "0x119AF90", Offset = "0x119AF90", VA = "0x119AF90")]
			get
			{
				return default(GameObjectType);
			}
			[Token(Token = "0x6002CBE")]
			[Address(RVA = "0x119AF98", Offset = "0x119AF98", VA = "0x119AF98")]
			set
			{
			}
		}

		[Token(Token = "0x17000A49")]
		public string PrefabFolder
		{
			[Token(Token = "0x6002CBF")]
			[Address(RVA = "0x119AFA0", Offset = "0x119AFA0", VA = "0x119AFA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002CC0")]
			[Address(RVA = "0x119AFA8", Offset = "0x119AFA8", VA = "0x119AFA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000A4A")]
		public bool ProcessPrefabSubfolders
		{
			[Token(Token = "0x6002CC1")]
			[Address(RVA = "0x119AFB8", Offset = "0x119AFB8", VA = "0x119AFB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CC2")]
			[Address(RVA = "0x119AFC0", Offset = "0x119AFC0", VA = "0x119AFC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000A4B")]
		public Rect PrefabFolderDropRect
		{
			[Token(Token = "0x6002CC3")]
			[Address(RVA = "0x119AFCC", Offset = "0x119AFCC", VA = "0x119AFCC")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x6002CC4")]
		[Address(RVA = "0x119AFD8", Offset = "0x119AFD8", VA = "0x119AFD8")]
		public DynamicConvertSettings()
		{
		}
	}
	[Token(Token = "0x200065A")]
	public static class Object2ObjectSnap
	{
		[Token(Token = "0x200065B")]
		[Flags]
		public enum Prefs
		{
			[Token(Token = "0x4001C88")]
			None = 0,
			[Token(Token = "0x4001C89")]
			TryMatchArea = 1,
			[Token(Token = "0x4001C8A")]
			All = 1
		}

		[Token(Token = "0x200065C")]
		public enum SnapFailReson
		{
			[Token(Token = "0x4001C8C")]
			None,
			[Token(Token = "0x4001C8D")]
			MaxObjectsExceeded,
			[Token(Token = "0x4001C8E")]
			InvalidSourceObjects,
			[Token(Token = "0x4001C8F")]
			NoDestinationFound
		}

		[Token(Token = "0x200065D")]
		public struct SnapResult
		{
			[Token(Token = "0x4001C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool _success;

			[Token(Token = "0x4001C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private Vector3 _snapPivot;

			[Token(Token = "0x4001C92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector3 _snapDestination;

			[Token(Token = "0x4001C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float _snapDistance;

			[Token(Token = "0x4001C94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private SnapFailReson _failReason;

			[Token(Token = "0x17000A4E")]
			public bool Success
			{
				[Token(Token = "0x6002CCB")]
				[Address(RVA = "0x119D868", Offset = "0x119D868", VA = "0x119D868")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000A4F")]
			public Vector3 SnapPivot
			{
				[Token(Token = "0x6002CCC")]
				[Address(RVA = "0x119D870", Offset = "0x119D870", VA = "0x119D870")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000A50")]
			public Vector3 SnapDestination
			{
				[Token(Token = "0x6002CCD")]
				[Address(RVA = "0x119D87C", Offset = "0x119D87C", VA = "0x119D87C")]
				get
				{
					return default(Vector3);
				}
			}

			[Token(Token = "0x17000A51")]
			public float SnapDistance
			{
				[Token(Token = "0x6002CCE")]
				[Address(RVA = "0x119D888", Offset = "0x119D888", VA = "0x119D888")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000A52")]
			public SnapFailReson FailReason
			{
				[Token(Token = "0x6002CCF")]
				[Address(RVA = "0x119D890", Offset = "0x119D890", VA = "0x119D890")]
				get
				{
					return default(SnapFailReson);
				}
			}

			[Token(Token = "0x6002CD0")]
			[Address(RVA = "0x119D898", Offset = "0x119D898", VA = "0x119D898")]
			public SnapResult(SnapFailReson failReson)
			{
			}

			[Token(Token = "0x6002CD1")]
			[Address(RVA = "0x119D914", Offset = "0x119D914", VA = "0x119D914")]
			public SnapResult(Vector3 snapPivot, Vector3 snapDestination, float snapDistance)
			{
			}
		}

		[Token(Token = "0x200065E")]
		public struct Config
		{
			[Token(Token = "0x4001C95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float _areaMatchEps;

			[Token(Token = "0x4001C96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<GameObject> IgnoreDestObjects;

			[Token(Token = "0x4001C97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int DestinationLayers;

			[Token(Token = "0x4001C98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float SnapRadius;

			[Token(Token = "0x4001C99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Prefs Prefs;

			[Token(Token = "0x17000A53")]
			public float AreaMatchEps
			{
				[Token(Token = "0x6002CD2")]
				[Address(RVA = "0x119D934", Offset = "0x119D934", VA = "0x119D934")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6002CD3")]
				[Address(RVA = "0x119D93C", Offset = "0x119D93C", VA = "0x119D93C")]
				set
				{
				}
			}
		}

		[Token(Token = "0x200065F")]
		private struct SnapSortData
		{
			[Token(Token = "0x4001C9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject SrcObject;

			[Token(Token = "0x4001C9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject DestObject;

			[Token(Token = "0x4001C9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BoxFace SrcSnapFace;

			[Token(Token = "0x4001C9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public BoxFace DestSnapFace;

			[Token(Token = "0x4001C9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool FaceAreasMatch;

			[Token(Token = "0x4001C9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float FaceAreaDiff;

			[Token(Token = "0x4001CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 SnapPivot;

			[Token(Token = "0x4001CA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 SnapDest;

			[Token(Token = "0x4001CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float SnapDistance;
		}

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<GameObject> _nearbyObjectBuffer;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Config _defaultConfig;

		[Token(Token = "0x17000A4C")]
		public static int MaxSourceObjects
		{
			[Token(Token = "0x6002CC5")]
			[Address(RVA = "0x119B0A4", Offset = "0x119B0A4", VA = "0x119B0A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000A4D")]
		public static Config DefaultConfig
		{
			[Token(Token = "0x6002CC7")]
			[Address(RVA = "0x119B180", Offset = "0x119B180", VA = "0x119B180")]
			get
			{
				return default(Config);
			}
		}

		[Token(Token = "0x6002CC6")]
		[Address(RVA = "0x119B0AC", Offset = "0x119B0AC", VA = "0x119B0AC")]
		static Object2ObjectSnap()
		{
		}

		[Token(Token = "0x6002CC8")]
		[Address(RVA = "0x119B1E4", Offset = "0x119B1E4", VA = "0x119B1E4")]
		public static SnapResult Snap(List<GameObject> roots, Config snapConfig)
		{
			return default(SnapResult);
		}

		[Token(Token = "0x6002CC9")]
		[Address(RVA = "0x119C750", Offset = "0x119C750", VA = "0x119C750")]
		public static SnapResult Snap(GameObject root, Config snapConfig)
		{
			return default(SnapResult);
		}

		[Token(Token = "0x6002CCA")]
		[Address(RVA = "0x119B484", Offset = "0x119B484", VA = "0x119B484")]
		public static SnapResult CalculateSnapResult(GameObject root, Config snapConfig)
		{
			return default(SnapResult);
		}
	}
	[Token(Token = "0x2000662")]
	public class Object2ObjectSnapData
	{
		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject _gameObject;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AABB[] _snapAreaBounds;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoxFaceAreaDesc[] _snapAreaDesc;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Vector3> _vertsBuffer;

		[Token(Token = "0x6002CDA")]
		[Address(RVA = "0x119DAB8", Offset = "0x119DAB8", VA = "0x119DAB8")]
		public bool Initialize(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002CDB")]
		[Address(RVA = "0x119ECD4", Offset = "0x119ECD4", VA = "0x119ECD4")]
		public BoxFaceAreaDesc GetWorldSnapAreaDesc(BoxFace boxFace)
		{
			return default(BoxFaceAreaDesc);
		}

		[Token(Token = "0x6002CDC")]
		[Address(RVA = "0x119EDA8", Offset = "0x119EDA8", VA = "0x119EDA8")]
		public List<OBB> GetAllWorldSnapAreaBounds()
		{
			return null;
		}

		[Token(Token = "0x6002CDD")]
		[Address(RVA = "0x119EFF0", Offset = "0x119EFF0", VA = "0x119EFF0")]
		public OBB GetWorldSnapAreaBounds(BoxFace boxFace)
		{
			return default(OBB);
		}

		[Token(Token = "0x6002CDE")]
		[Address(RVA = "0x119E4D4", Offset = "0x119E4D4", VA = "0x119E4D4")]
		private List<AABB> BuildVertOverlapAABBs(GameObject gameObject, Sprite sprite, RTMesh rtMesh)
		{
			return null;
		}

		[Token(Token = "0x6002CDF")]
		[Address(RVA = "0x119F104", Offset = "0x119F104", VA = "0x119F104")]
		public Object2ObjectSnapData()
		{
		}
	}
	[Token(Token = "0x2000663")]
	public class Object2ObjectSnapDataDb : Singleton<Object2ObjectSnapDataDb>
	{
		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<GameObject, Object2ObjectSnapData> _objectToSnapData;

		[Token(Token = "0x6002CE0")]
		[Address(RVA = "0x119F2A8", Offset = "0x119F2A8", VA = "0x119F2A8")]
		public Object2ObjectSnapData GetObject2ObjectSnapData(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6002CE1")]
		[Address(RVA = "0x119F3A8", Offset = "0x119F3A8", VA = "0x119F3A8")]
		public Object2ObjectSnapDataDb()
		{
		}
	}
	[Token(Token = "0x2000664")]
	public static class ObjectAlign
	{
		[Token(Token = "0x2000665")]
		public enum Result
		{
			[Token(Token = "0x4001CAF")]
			Err_NoObjects,
			[Token(Token = "0x4001CB0")]
			Success
		}

		[Token(Token = "0x6002CE2")]
		[Address(RVA = "0x119F470", Offset = "0x119F470", VA = "0x119F470")]
		public static Result AlignToWorldAxis(IEnumerable<GameObject> gameObjects, Axis axis, Vector3 alignmentPlaneOrigin)
		{
			return default(Result);
		}

		[Token(Token = "0x6002CE3")]
		[Address(RVA = "0x119F59C", Offset = "0x119F59C", VA = "0x119F59C")]
		public static Result AlignToWorldPlane(IEnumerable<GameObject> gameObjects, Plane alignmentPlane)
		{
			return default(Result);
		}

		[Token(Token = "0x6002CE4")]
		[Address(RVA = "0x119F654", Offset = "0x119F654", VA = "0x119F654")]
		private static void AlignRootsToPlane(List<GameObject> roots, Plane alignmentPlane)
		{
		}
	}
	[Token(Token = "0x2000666")]
	public static class ObjectBounds
	{
		[Token(Token = "0x2000667")]
		public struct QueryConfig
		{
			[Token(Token = "0x4001CB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObjectType ObjectTypes;

			[Token(Token = "0x4001CB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 NoVolumeSize;
		}

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static QueryConfig _defaultQConfig;

		[Token(Token = "0x17000A54")]
		public static QueryConfig DefaultQConfig
		{
			[Token(Token = "0x6002CE6")]
			[Address(RVA = "0x119FBA4", Offset = "0x119FBA4", VA = "0x119FBA4")]
			get
			{
				return default(QueryConfig);
			}
		}

		[Token(Token = "0x6002CE5")]
		[Address(RVA = "0x119FAA8", Offset = "0x119FAA8", VA = "0x119FAA8")]
		static ObjectBounds()
		{
		}

		[Token(Token = "0x6002CE7")]
		[Address(RVA = "0x119FBFC", Offset = "0x119FBFC", VA = "0x119FBFC")]
		public static Rect CalcScreenRect(GameObject gameObject, Camera camera, QueryConfig queryConfig)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002CE8")]
		[Address(RVA = "0x119FE24", Offset = "0x119FE24", VA = "0x119FE24")]
		public static OBB CalcSpriteWorldOBB(GameObject gameObject)
		{
			return default(OBB);
		}

		[Token(Token = "0x6002CE9")]
		[Address(RVA = "0x119FF64", Offset = "0x119FF64", VA = "0x119FF64")]
		public static AABB CalcSpriteWorldAABB(GameObject gameObject)
		{
			return default(AABB);
		}

		[Token(Token = "0x6002CEA")]
		[Address(RVA = "0x119E9A4", Offset = "0x119E9A4", VA = "0x119E9A4")]
		public static AABB CalcSpriteModelAABB(GameObject spriteObject)
		{
			return default(AABB);
		}

		[Token(Token = "0x6002CEB")]
		[Address(RVA = "0x11A0044", Offset = "0x11A0044", VA = "0x11A0044")]
		public static OBB GetMeshWorldOBB(GameObject gameObject)
		{
			return default(OBB);
		}

		[Token(Token = "0x6002CEC")]
		[Address(RVA = "0x11A0298", Offset = "0x11A0298", VA = "0x11A0298")]
		public static AABB GetMeshWorldAABB(GameObject gameObject)
		{
			return default(AABB);
		}

		[Token(Token = "0x6002CED")]
		[Address(RVA = "0x11A038C", Offset = "0x11A038C", VA = "0x11A038C")]
		public static AABB CalcObjectCollectionWorldAABB(IEnumerable<GameObject> gameObjectCollection, QueryConfig queryConfig)
		{
			return default(AABB);
		}

		[Token(Token = "0x6002CEE")]
		[Address(RVA = "0x11A07CC", Offset = "0x11A07CC", VA = "0x11A07CC")]
		public static AABB CalcHierarchyCollectionWorldAABB(List<GameObject> roots, QueryConfig queryConfig)
		{
			return default(AABB);
		}

		[Token(Token = "0x6002CEF")]
		[Address(RVA = "0x119F950", Offset = "0x119F950", VA = "0x119F950")]
		public static OBB CalcHierarchyWorldOBB(GameObject root, QueryConfig queryConfig)
		{
			return default(OBB);
		}

		[Token(Token = "0x6002CF0")]
		[Address(RVA = "0x11A0A48", Offset = "0x11A0A48", VA = "0x11A0A48")]
		public static AABB CalcHierarchyWorldAABB(GameObject root, QueryConfig queryConfig)
		{
			return default(AABB);
		}

		[Token(Token = "0x6002CF1")]
		[Address(RVA = "0x11A0F18", Offset = "0x11A0F18", VA = "0x11A0F18")]
		public static OBB CalcWorldOBB(GameObject gameObject, QueryConfig queryConfig)
		{
			return default(OBB);
		}

		[Token(Token = "0x6002CF2")]
		[Address(RVA = "0x119FCDC", Offset = "0x119FCDC", VA = "0x119FCDC")]
		public static AABB CalcWorldAABB(GameObject gameObject, QueryConfig queryConfig)
		{
			return default(AABB);
		}

		[Token(Token = "0x6002CF3")]
		[Address(RVA = "0x11A1390", Offset = "0x11A1390", VA = "0x11A1390")]
		public static AABB CalcMeshWorldAABB(GameObject gameObject)
		{
			return default(AABB);
		}

		[Token(Token = "0x6002CF4")]
		[Address(RVA = "0x11A0B58", Offset = "0x11A0B58", VA = "0x11A0B58")]
		public static AABB CalcHierarchyModelAABB(GameObject root, QueryConfig queryConfig)
		{
			return default(AABB);
		}

		[Token(Token = "0x6002CF5")]
		[Address(RVA = "0x11A0184", Offset = "0x11A0184", VA = "0x11A0184")]
		public static AABB CalcMeshModelAABB(GameObject gameObject)
		{
			return default(AABB);
		}

		[Token(Token = "0x6002CF6")]
		[Address(RVA = "0x11A10AC", Offset = "0x11A10AC", VA = "0x11A10AC")]
		public static AABB CalcModelAABB(GameObject gameObject, QueryConfig queryConfig, GameObjectType objectType)
		{
			return default(AABB);
		}
	}
	[Token(Token = "0x2000668")]
	public static class ObjectCloning
	{
		[Token(Token = "0x2000669")]
		[Flags]
		public enum TransformFlags
		{
			[Token(Token = "0x4001CB6")]
			None = 0,
			[Token(Token = "0x4001CB7")]
			Position = 1,
			[Token(Token = "0x4001CB8")]
			Rotation = 2,
			[Token(Token = "0x4001CB9")]
			Scale = 4,
			[Token(Token = "0x4001CBA")]
			All = 7
		}

		[Token(Token = "0x200066A")]
		public struct Config
		{
			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform Parent;

			[Token(Token = "0x4001CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TransformFlags TransformFlags;

			[Token(Token = "0x4001CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int Layer;
		}

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Config _defaultConfig;

		[Token(Token = "0x17000A55")]
		public static Config DefaultConfig
		{
			[Token(Token = "0x6002CF8")]
			[Address(RVA = "0x11A14E0", Offset = "0x11A14E0", VA = "0x11A14E0")]
			get
			{
				return default(Config);
			}
		}

		[Token(Token = "0x6002CF7")]
		[Address(RVA = "0x11A1484", Offset = "0x11A1484", VA = "0x11A1484")]
		static ObjectCloning()
		{
		}

		[Token(Token = "0x6002CF9")]
		[Address(RVA = "0x11A1538", Offset = "0x11A1538", VA = "0x11A1538")]
		public static List<GameObject> CloneHierarchies(List<GameObject> roots, Config cloneConfig)
		{
			return null;
		}

		[Token(Token = "0x6002CFA")]
		[Address(RVA = "0x11A181C", Offset = "0x11A181C", VA = "0x11A181C")]
		public static GameObject CloneHierarchy(GameObject root, Config cloneConfig)
		{
			return null;
		}
	}
	[Token(Token = "0x200066B")]
	public static class ObjectPositionCalculator
	{
		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ObjectBounds.QueryConfig _boundsQConfig;

		[Token(Token = "0x6002CFB")]
		[Address(RVA = "0x11A1AA0", Offset = "0x11A1AA0", VA = "0x11A1AA0")]
		static ObjectPositionCalculator()
		{
		}

		[Token(Token = "0x6002CFC")]
		[Address(RVA = "0x11A1B90", Offset = "0x11A1B90", VA = "0x11A1B90")]
		public static Vector3 CalculateRootPosition(GameObject root, Vector3 desiredOBBCenter, Vector3 desiredWorldScale, Quaternion desiredWorldRotation)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x200066C")]
	public static class ObjectSnap
	{
		[Token(Token = "0x6002CFD")]
		[Address(RVA = "0x11A1EA8", Offset = "0x11A1EA8", VA = "0x11A1EA8")]
		public static void Snap(GameObject root, Vector3 pivot, Vector3 dest)
		{
		}

		[Token(Token = "0x6002CFE")]
		[Address(RVA = "0x11A1F24", Offset = "0x11A1F24", VA = "0x11A1F24")]
		public static void Snap(List<GameObject> roots, Vector3 pivot, Vector3 dest)
		{
		}
	}
	[Token(Token = "0x200066D")]
	public static class ObjectSpawnUtil
	{
		[Token(Token = "0x200066E")]
		public struct Config
		{
			[Token(Token = "0x4001CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float ObjectSize;
		}

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Config _defaultConfig;

		[Token(Token = "0x17000A56")]
		public static Config DefaultConfig
		{
			[Token(Token = "0x6002CFF")]
			[Address(RVA = "0x11A2098", Offset = "0x11A2098", VA = "0x11A2098")]
			get
			{
				return default(Config);
			}
		}

		[Token(Token = "0x6002D00")]
		[Address(RVA = "0x11A20F0", Offset = "0x11A20F0", VA = "0x11A20F0")]
		public static GameObject SpawnInFrontOfCamera(GameObject sourceObject, Camera camera, Config config)
		{
			return null;
		}
	}
	[Token(Token = "0x200066F")]
	public class ObjectSurfaceSnap
	{
		[Token(Token = "0x2000670")]
		public enum Type
		{
			[Token(Token = "0x4001CC2")]
			UnityTerrain,
			[Token(Token = "0x4001CC3")]
			Mesh,
			[Token(Token = "0x4001CC4")]
			TerrainMesh,
			[Token(Token = "0x4001CC5")]
			SphericalMesh,
			[Token(Token = "0x4001CC6")]
			SceneGrid
		}

		[Token(Token = "0x2000671")]
		public struct SnapConfig
		{
			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool AlignAxis;

			[Token(Token = "0x4001CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public TransformAxis AlignmentAxis;

			[Token(Token = "0x4001CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Type SurfaceType;

			[Token(Token = "0x4001CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float OffsetFromSurface;

			[Token(Token = "0x4001CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 SurfaceHitPoint;

			[Token(Token = "0x4001CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 SurfaceHitNormal;

			[Token(Token = "0x4001CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Plane SurfaceHitPlane;

			[Token(Token = "0x4001CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject SurfaceObject;

			[Token(Token = "0x6002D08")]
			[Address(RVA = "0x11A52F8", Offset = "0x11A52F8", VA = "0x11A52F8")]
			public bool IsSurfaceMesh()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000672")]
		public struct SnapResult
		{
			[Token(Token = "0x4001CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool Success;

			[Token(Token = "0x4001CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Plane SittingPlane;

			[Token(Token = "0x4001CD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 SittingPoint;

			[Token(Token = "0x6002D09")]
			[Address(RVA = "0x11A4494", Offset = "0x11A4494", VA = "0x11A4494")]
			public SnapResult(Plane sittingPlane, Vector3 sittingPoint)
			{
			}
		}

		[Token(Token = "0x2000673")]
		private abstract class SurfaceRaycaster
		{
			[Token(Token = "0x4001CD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			protected GameObject _surfaceObject;

			[Token(Token = "0x4001CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			protected bool _raycastReverse;

			[Token(Token = "0x6002D0A")]
			[Address(RVA = "0x11A531C", Offset = "0x11A531C", VA = "0x11A531C")]
			public SurfaceRaycaster(GameObject surfaceObject, bool raycastReverse)
			{
			}

			[Token(Token = "0x6002D0B")]
			public abstract GameObjectRayHit Raycast(Ray ray);
		}

		[Token(Token = "0x2000674")]
		private class MeshSurfaceRaycaster : SurfaceRaycaster
		{
			[Token(Token = "0x6002D0C")]
			[Address(RVA = "0x11A521C", Offset = "0x11A521C", VA = "0x11A521C")]
			public MeshSurfaceRaycaster(GameObject surfaceObject, bool raycastReverse)
			{
			}

			[Token(Token = "0x6002D0D")]
			[Address(RVA = "0x11A5358", Offset = "0x11A5358", VA = "0x11A5358", Slot = "4")]
			public override GameObjectRayHit Raycast(Ray ray)
			{
				return null;
			}
		}

		[Token(Token = "0x2000675")]
		private class TerrainSurfaceRaycaster : SurfaceRaycaster
		{
			[Token(Token = "0x4001CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private TerrainCollider _terrainCollider;

			[Token(Token = "0x6002D0E")]
			[Address(RVA = "0x11A5258", Offset = "0x11A5258", VA = "0x11A5258")]
			public TerrainSurfaceRaycaster(GameObject surfaceObject, bool raycastReverse)
			{
			}

			[Token(Token = "0x6002D0F")]
			[Address(RVA = "0x11A5410", Offset = "0x11A5410", VA = "0x11A5410", Slot = "4")]
			public override GameObjectRayHit Raycast(Ray ray)
			{
				return null;
			}
		}

		[Token(Token = "0x6002D02")]
		[Address(RVA = "0x11A2A7C", Offset = "0x11A2A7C", VA = "0x11A2A7C")]
		public static SnapResult SnapHierarchy(GameObject root, SnapConfig snapConfig)
		{
			return default(SnapResult);
		}

		[Token(Token = "0x6002D03")]
		[Address(RVA = "0x11A28A4", Offset = "0x11A28A4", VA = "0x11A28A4")]
		public static Vector3 CalculateSitOnSurfaceOffset(OBB obb, Plane surfacePlane, float offsetFromSurface)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002D04")]
		[Address(RVA = "0x11A5094", Offset = "0x11A5094", VA = "0x11A5094")]
		public static Vector3 CalculateSitOnSurfaceOffset(AABB aabb, Plane surfacePlane, float offsetFromSurface)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002D05")]
		[Address(RVA = "0x11A4D74", Offset = "0x11A4D74", VA = "0x11A4D74")]
		public static Vector3 CalculateEmbedVector(List<Vector3> embedPoints, GameObject embedSurface, Vector3 embedDirection, Type surfaceType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002D06")]
		[Address(RVA = "0x11A44B0", Offset = "0x11A44B0", VA = "0x11A44B0")]
		private static SurfaceRaycaster CreateSurfaceRaycaster(Type surfaceType, GameObject surfaceObject, bool raycastReverse)
		{
			return null;
		}

		[Token(Token = "0x6002D07")]
		[Address(RVA = "0x11A52F0", Offset = "0x11A52F0", VA = "0x11A52F0")]
		public ObjectSurfaceSnap()
		{
		}
	}
	[Token(Token = "0x2000676")]
	public static class ObjectVertexCollect
	{
		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<Vector3> _hierarchyVertsCollectBuffer;

		[Token(Token = "0x6002D10")]
		[Address(RVA = "0x119EA74", Offset = "0x119EA74", VA = "0x119EA74")]
		public static List<Vector3> CollectModelSpriteVerts(Sprite sprite, AABB collectAABB)
		{
			return null;
		}

		[Token(Token = "0x6002D11")]
		[Address(RVA = "0x11A550C", Offset = "0x11A550C", VA = "0x11A550C")]
		public static List<Vector3> CollectWorldSpriteVerts(Sprite sprite, Transform spriteTransform, OBB collectOBB)
		{
			return null;
		}

		[Token(Token = "0x6002D12")]
		[Address(RVA = "0x11A4584", Offset = "0x11A4584", VA = "0x11A4584")]
		public static List<Vector3> CollectHierarchyVerts(GameObject root, BoxFace collectFace, float collectBoxScale, float collectEps)
		{
			return null;
		}
	}
	[Token(Token = "0x2000677")]
	public class EditorPrefabPreviewGen
	{
		[Token(Token = "0x2000678")]
		private enum PreviewObjectType
		{
			[Token(Token = "0x4001CDE")]
			Mesh = 1,
			[Token(Token = "0x4001CDF")]
			Sprite,
			[Token(Token = "0x4001CE0")]
			Light,
			[Token(Token = "0x4001CE1")]
			ParticleSystem,
			[Token(Token = "0x4001CE2")]
			Other
		}

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PrefabPreviewLookAndFeel _previewLookAndFeel;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObjectBounds.QueryConfig _boundsQConfig;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Light _previewLight;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera _renderCamera;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isGenSessionActive;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<Light, bool> _lightToState;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject _nonMeshPreviewObject;

		[Token(Token = "0x6002D14")]
		[Address(RVA = "0x11A5894", Offset = "0x11A5894", VA = "0x11A5894")]
		public EditorPrefabPreviewGen()
		{
		}

		[Token(Token = "0x6002D15")]
		[Address(RVA = "0x11A599C", Offset = "0x11A599C", VA = "0x11A599C")]
		public bool BeginGenSession(PrefabPreviewLookAndFeel previewLookAndFeel)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D16")]
		[Address(RVA = "0x11A61E4", Offset = "0x11A61E4", VA = "0x11A61E4")]
		public void EndGenSession()
		{
		}

		[Token(Token = "0x6002D17")]
		[Address(RVA = "0x11A6394", Offset = "0x11A6394", VA = "0x11A6394")]
		public Texture2D Generate(GameObject unityPrefab)
		{
			return null;
		}

		[Token(Token = "0x6002D18")]
		[Address(RVA = "0x11A5B44", Offset = "0x11A5B44", VA = "0x11A5B44")]
		private bool CreateRenderCamera()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D19")]
		[Address(RVA = "0x11A5D04", Offset = "0x11A5D04", VA = "0x11A5D04")]
		private bool CreatePreviewLight()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D1A")]
		[Address(RVA = "0x11A5F9C", Offset = "0x11A5F9C", VA = "0x11A5F9C")]
		private void CreateNonMeshPreviewObject()
		{
		}

		[Token(Token = "0x6002D1B")]
		[Address(RVA = "0x11A5A14", Offset = "0x11A5A14", VA = "0x11A5A14")]
		private void DisableSceneLights()
		{
		}

		[Token(Token = "0x6002D1C")]
		[Address(RVA = "0x11A5DE0", Offset = "0x11A5DE0", VA = "0x11A5DE0")]
		private void RestoreSceneLights()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000679")]
	public class PrefabPreviewLookAndFeel : Settings
	{
		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float _minBkAlpha;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color _bkColor;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int _previewWidth;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int _previewHeight;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _lightIntensity;

		[Token(Token = "0x17000A57")]
		public Color BkColor
		{
			[Token(Token = "0x6002D1D")]
			[Address(RVA = "0x11A6C60", Offset = "0x11A6C60", VA = "0x11A6C60")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002D1E")]
			[Address(RVA = "0x11A6C6C", Offset = "0x11A6C6C", VA = "0x11A6C6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000A58")]
		public int PreviewWidth
		{
			[Token(Token = "0x6002D1F")]
			[Address(RVA = "0x11A6D00", Offset = "0x11A6D00", VA = "0x11A6D00")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002D20")]
			[Address(RVA = "0x11A6D08", Offset = "0x11A6D08", VA = "0x11A6D08")]
			set
			{
			}
		}

		[Token(Token = "0x17000A59")]
		public int PreviewHeight
		{
			[Token(Token = "0x6002D21")]
			[Address(RVA = "0x11A6D1C", Offset = "0x11A6D1C", VA = "0x11A6D1C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002D22")]
			[Address(RVA = "0x11A6D24", Offset = "0x11A6D24", VA = "0x11A6D24")]
			set
			{
			}
		}

		[Token(Token = "0x17000A5A")]
		public float LightIntensity
		{
			[Token(Token = "0x6002D23")]
			[Address(RVA = "0x11A6D38", Offset = "0x11A6D38", VA = "0x11A6D38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002D24")]
			[Address(RVA = "0x11A6D40", Offset = "0x11A6D40", VA = "0x11A6D40")]
			set
			{
			}
		}

		[Token(Token = "0x6002D25")]
		[Address(RVA = "0x11A6D54", Offset = "0x11A6D54", VA = "0x11A6D54")]
		public PrefabPreviewLookAndFeel()
		{
		}
	}
	[Token(Token = "0x200067A")]
	public static class StringMatch
	{
		[Token(Token = "0x200067B")]
		public enum Case
		{
			[Token(Token = "0x4001CE9")]
			Sensitive,
			[Token(Token = "0x4001CEA")]
			Insensitive
		}

		[Token(Token = "0x6002D27")]
		[Address(RVA = "0x11A6DC8", Offset = "0x11A6DC8", VA = "0x11A6DC8")]
		public static void Match(List<string> strings, string stringToMatch, Case matchCase, List<string> matches)
		{
		}
	}
	[Token(Token = "0x200067C")]
	public static class UniqueNameGen
	{
		[Token(Token = "0x6002D28")]
		[Address(RVA = "0x11A717C", Offset = "0x11A717C", VA = "0x11A717C")]
		public static string Generate(string desiredName, IEnumerable<string> existingNames)
		{
			return null;
		}
	}
	[Token(Token = "0x200067D")]
	public interface IObjectCollectionGizmoController
	{
		[Token(Token = "0x6002D29")]
		void SetTargetObjectCollection(IEnumerable<GameObject> targetObjectCollection);
	}
	[Token(Token = "0x200067E")]
	public interface IRTObjectSelectionListener
	{
		[Token(Token = "0x6002D2A")]
		bool OnCanBeSelected(ObjectSelectEventArgs selectArgs);

		[Token(Token = "0x6002D2B")]
		void OnSelected(ObjectSelectEventArgs selectArgs);

		[Token(Token = "0x6002D2C")]
		void OnDeselected(ObjectDeselectEventArgs deselectArgs);
	}
	[Token(Token = "0x200067F")]
	public enum MultiSelectOverlapMode
	{
		[Token(Token = "0x4001CEC")]
		Partial,
		[Token(Token = "0x4001CED")]
		FullOverlap
	}
	[Token(Token = "0x2000680")]
	public class MultiSelectShape
	{
		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Rect _enclosingRect;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isVisible;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int _minSize;

		[Token(Token = "0x17000A5B")]
		public Rect EnclosingRect
		{
			[Token(Token = "0x6002D2D")]
			[Address(RVA = "0x11A7508", Offset = "0x11A7508", VA = "0x11A7508")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x17000A5C")]
		public bool IsVisible
		{
			[Token(Token = "0x6002D2E")]
			[Address(RVA = "0x11A7514", Offset = "0x11A7514", VA = "0x11A7514")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002D2F")]
			[Address(RVA = "0x11A751C", Offset = "0x11A751C", VA = "0x11A751C")]
			set
			{
			}
		}

		[Token(Token = "0x17000A5D")]
		public int MinSize
		{
			[Token(Token = "0x6002D30")]
			[Address(RVA = "0x11A7528", Offset = "0x11A7528", VA = "0x11A7528")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002D31")]
			[Address(RVA = "0x11A7530", Offset = "0x11A7530", VA = "0x11A7530")]
			set
			{
			}
		}

		[Token(Token = "0x6002D32")]
		[Address(RVA = "0x11A7540", Offset = "0x11A7540", VA = "0x11A7540")]
		public void SetEnclosingRectTopLeftPoint(Vector2 topLeftPoint)
		{
		}

		[Token(Token = "0x6002D33")]
		[Address(RVA = "0x11A7574", Offset = "0x11A7574", VA = "0x11A7574")]
		public void SetEnclosingRectBottomRightPoint(Vector2 bottomRightPoint)
		{
		}

		[Token(Token = "0x6002D34")]
		[Address(RVA = "0x11A75A8", Offset = "0x11A75A8", VA = "0x11A75A8")]
		public void GetOverlappedObjects(List<GameObject> gameObjects, Camera camera, ObjectBounds.QueryConfig boundsQConfig, MultiSelectOverlapMode overlapMode, List<GameObject> overlappedObjects)
		{
		}

		[Token(Token = "0x6002D35")]
		[Address(RVA = "0x11A7A64", Offset = "0x11A7A64", VA = "0x11A7A64")]
		public bool OverlapsObject(GameObject gameObject, Camera camera, ObjectBounds.QueryConfig boundsQConfig, MultiSelectOverlapMode overlapMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D36")]
		[Address(RVA = "0x11A7B78", Offset = "0x11A7B78", VA = "0x11A7B78")]
		public void Render(Color fillColor, Color borderColor, Camera camera)
		{
		}

		[Token(Token = "0x6002D37")]
		[Address(RVA = "0x11A7A00", Offset = "0x11A7A00", VA = "0x11A7A00")]
		private bool IsBigEnoughForOverlap()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D38")]
		[Address(RVA = "0x11A7D40", Offset = "0x11A7D40", VA = "0x11A7D40")]
		public MultiSelectShape()
		{
		}
	}
	[Token(Token = "0x2000681")]
	public class ObjectPreDeselectCustomizeInfo
	{
		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<GameObject> _toBeDeselected;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObjectDeselectReason _deselectReason;

		[Token(Token = "0x17000A5E")]
		public ObjectDeselectReason DeselectReason
		{
			[Token(Token = "0x6002D39")]
			[Address(RVA = "0x11A7D50", Offset = "0x11A7D50", VA = "0x11A7D50")]
			get
			{
				return default(ObjectDeselectReason);
			}
		}

		[Token(Token = "0x17000A5F")]
		public int ToBeDeselectedCount
		{
			[Token(Token = "0x6002D3A")]
			[Address(RVA = "0x11A7D58", Offset = "0x11A7D58", VA = "0x11A7D58")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000A60")]
		public List<GameObject> ToBeDeselected
		{
			[Token(Token = "0x6002D3B")]
			[Address(RVA = "0x11A7DA0", Offset = "0x11A7DA0", VA = "0x11A7DA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D3C")]
		[Address(RVA = "0x11A7E1C", Offset = "0x11A7E1C", VA = "0x11A7E1C")]
		public ObjectPreDeselectCustomizeInfo(List<GameObject> toBeDeselected, ObjectDeselectReason deselectReason)
		{
		}

		[Token(Token = "0x6002D3D")]
		[Address(RVA = "0x11A7EC0", Offset = "0x11A7EC0", VA = "0x11A7EC0")]
		public void DeselectThese(IEnumerable<GameObject> toBeDeselected)
		{
		}

		[Token(Token = "0x6002D3E")]
		[Address(RVA = "0x11A7F78", Offset = "0x11A7F78", VA = "0x11A7F78")]
		public void IgnoreThese(IEnumerable<GameObject> toBeIgnored)
		{
		}
	}
	[Token(Token = "0x2000682")]
	public class ObjectPreSelectCustomizeInfo
	{
		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<GameObject> _toBeSelected;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObjectSelectReason _selectRason;

		[Token(Token = "0x17000A61")]
		public ObjectSelectReason SelectReason
		{
			[Token(Token = "0x6002D3F")]
			[Address(RVA = "0x11A8274", Offset = "0x11A8274", VA = "0x11A8274")]
			get
			{
				return default(ObjectSelectReason);
			}
		}

		[Token(Token = "0x17000A62")]
		public int ToBeSelectedCount
		{
			[Token(Token = "0x6002D40")]
			[Address(RVA = "0x11A827C", Offset = "0x11A827C", VA = "0x11A827C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000A63")]
		public List<GameObject> ToBeSelected
		{
			[Token(Token = "0x6002D41")]
			[Address(RVA = "0x11A82C4", Offset = "0x11A82C4", VA = "0x11A82C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D42")]
		[Address(RVA = "0x11A8340", Offset = "0x11A8340", VA = "0x11A8340")]
		public ObjectPreSelectCustomizeInfo(List<GameObject> toBeSelected, ObjectSelectReason selectReason)
		{
		}

		[Token(Token = "0x6002D43")]
		[Address(RVA = "0x11A83E4", Offset = "0x11A83E4", VA = "0x11A83E4")]
		public void SelectThese(IEnumerable<GameObject> toBeSelected)
		{
		}

		[Token(Token = "0x6002D44")]
		[Address(RVA = "0x11A849C", Offset = "0x11A849C", VA = "0x11A849C")]
		public void IgnoreThese(IEnumerable<GameObject> toBeIgnored)
		{
		}
	}
	[Token(Token = "0x2000683")]
	public class DeleteSelectedObjectsAction : IUndoRedoAction
	{
		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<GameObject> _selectedObjects;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<GameObject> _deletedObjects;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ObjectSelectionSnapshot _preDeleteSnapshot;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ObjectSelectionSnapshot _postDeleteSnapshot;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _canDestroyObjects;

		[Token(Token = "0x17000A64")]
		public ObjectSelectionSnapshot PreDeleteSnapshot
		{
			[Token(Token = "0x6002D45")]
			[Address(RVA = "0x11A8798", Offset = "0x11A8798", VA = "0x11A8798")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A65")]
		public ObjectSelectionSnapshot PostDeleteSnapshot
		{
			[Token(Token = "0x6002D46")]
			[Address(RVA = "0x11A87A0", Offset = "0x11A87A0", VA = "0x11A87A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D47")]
		[Address(RVA = "0x11A87A8", Offset = "0x11A87A8", VA = "0x11A87A8")]
		public DeleteSelectedObjectsAction(List<GameObject> selectedObjects, ObjectSelectionSnapshot preDeleteSnapshot)
		{
		}

		[Token(Token = "0x6002D48")]
		[Address(RVA = "0x11A8854", Offset = "0x11A8854", VA = "0x11A8854", Slot = "4")]
		public void Execute()
		{
		}

		[Token(Token = "0x6002D49")]
		[Address(RVA = "0x11A8D10", Offset = "0x11A8D10", VA = "0x11A8D10", Slot = "5")]
		public void Undo()
		{
		}

		[Token(Token = "0x6002D4A")]
		[Address(RVA = "0x11A8E60", Offset = "0x11A8E60", VA = "0x11A8E60", Slot = "6")]
		public void Redo()
		{
		}

		[Token(Token = "0x6002D4B")]
		[Address(RVA = "0x11A8FB4", Offset = "0x11A8FB4", VA = "0x11A8FB4", Slot = "7")]
		public void OnRemovedFromUndoRedoStack()
		{
		}
	}
	[Token(Token = "0x2000684")]
	public class PostObjectSelectionChangedAction : IUndoRedoAction
	{
		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ObjectSelectionSnapshot _preChangeSnapshot;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObjectSelectionSnapshot _postChangeSnapshot;

		[Token(Token = "0x17000A66")]
		public ObjectSelectionSnapshot PreChangeSnapshot
		{
			[Token(Token = "0x6002D4C")]
			[Address(RVA = "0x11A917C", Offset = "0x11A917C", VA = "0x11A917C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A67")]
		public ObjectSelectionSnapshot PostChangeSnapshot
		{
			[Token(Token = "0x6002D4D")]
			[Address(RVA = "0x11A9184", Offset = "0x11A9184", VA = "0x11A9184")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D4E")]
		[Address(RVA = "0x11A918C", Offset = "0x11A918C", VA = "0x11A918C")]
		public PostObjectSelectionChangedAction(ObjectSelectionSnapshot preChangeSnapshot, ObjectSelectionSnapshot postChangeSnapshot)
		{
		}

		[Token(Token = "0x6002D4F")]
		[Address(RVA = "0x11A91D0", Offset = "0x11A91D0", VA = "0x11A91D0", Slot = "4")]
		public void Execute()
		{
		}

		[Token(Token = "0x6002D50")]
		[Address(RVA = "0x11A9268", Offset = "0x11A9268", VA = "0x11A9268", Slot = "5")]
		public void Undo()
		{
		}

		[Token(Token = "0x6002D51")]
		[Address(RVA = "0x11A926C", Offset = "0x11A926C", VA = "0x11A926C", Slot = "6")]
		public void Redo()
		{
		}

		[Token(Token = "0x6002D52")]
		[Address(RVA = "0x11A9270", Offset = "0x11A9270", VA = "0x11A9270", Slot = "7")]
		public void OnRemovedFromUndoRedoStack()
		{
		}
	}
	[Token(Token = "0x2000685")]
	public static class ObjectSelectionGizmoId
	{
		[Token(Token = "0x17000A68")]
		public static int None
		{
			[Token(Token = "0x6002D53")]
			[Address(RVA = "0x11A9274", Offset = "0x11A9274", VA = "0x11A9274")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000A69")]
		public static int MoveGizmo
		{
			[Token(Token = "0x6002D54")]
			[Address(RVA = "0x11A927C", Offset = "0x11A927C", VA = "0x11A927C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000A6A")]
		public static int RotationGizmo
		{
			[Token(Token = "0x6002D55")]
			[Address(RVA = "0x11A9284", Offset = "0x11A9284", VA = "0x11A9284")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000A6B")]
		public static int ScaleGizmo
		{
			[Token(Token = "0x6002D56")]
			[Address(RVA = "0x11A928C", Offset = "0x11A928C", VA = "0x11A928C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000A6C")]
		public static int BoxScaleGizmo
		{
			[Token(Token = "0x6002D57")]
			[Address(RVA = "0x11A9294", Offset = "0x11A9294", VA = "0x11A9294")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000A6D")]
		public static int UniversalGizmo
		{
			[Token(Token = "0x6002D58")]
			[Address(RVA = "0x11A929C", Offset = "0x11A929C", VA = "0x11A929C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000A6E")]
		public static int ExtrudeGizmo
		{
			[Token(Token = "0x6002D59")]
			[Address(RVA = "0x11A92A4", Offset = "0x11A92A4", VA = "0x11A92A4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000A6F")]
		public static int SafeClientId
		{
			[Token(Token = "0x6002D5A")]
			[Address(RVA = "0x11A92AC", Offset = "0x11A92AC", VA = "0x11A92AC")]
			get
			{
				return default(int);
			}
		}
	}
	[Serializable]
	[Token(Token = "0x2000686")]
	public class ObjectSelectionGizmosHotkeys : Settings
	{
		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Hotkeys _activateMoveGizmo;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Hotkeys _activateRotationGizmo;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Hotkeys _activateScaleGizmo;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Hotkeys _activateBoxScaleGizmo;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Hotkeys _activateUniversalGizmo;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Hotkeys _activateExtrudeGizmo;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Hotkeys _toggleTransformSpace;

		[Token(Token = "0x17000A70")]
		public Hotkeys ActivateMoveGizmo
		{
			[Token(Token = "0x6002D5B")]
			[Address(RVA = "0x11A92B4", Offset = "0x11A92B4", VA = "0x11A92B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A71")]
		public Hotkeys ActivateRotationGizmo
		{
			[Token(Token = "0x6002D5C")]
			[Address(RVA = "0x11A92BC", Offset = "0x11A92BC", VA = "0x11A92BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A72")]
		public Hotkeys ActivateScaleGizmo
		{
			[Token(Token = "0x6002D5D")]
			[Address(RVA = "0x11A92C4", Offset = "0x11A92C4", VA = "0x11A92C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A73")]
		public Hotkeys ActivateBoxScaleGizmo
		{
			[Token(Token = "0x6002D5E")]
			[Address(RVA = "0x11A92CC", Offset = "0x11A92CC", VA = "0x11A92CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A74")]
		public Hotkeys ActivateUniversalGizmo
		{
			[Token(Token = "0x6002D5F")]
			[Address(RVA = "0x11A92D4", Offset = "0x11A92D4", VA = "0x11A92D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A75")]
		public Hotkeys ActivateExtrudeGizmo
		{
			[Token(Token = "0x6002D60")]
			[Address(RVA = "0x11A92DC", Offset = "0x11A92DC", VA = "0x11A92DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A76")]
		public Hotkeys ToggleTransformSpace
		{
			[Token(Token = "0x6002D61")]
			[Address(RVA = "0x11A92E4", Offset = "0x11A92E4", VA = "0x11A92E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D62")]
		[Address(RVA = "0x11A92EC", Offset = "0x11A92EC", VA = "0x11A92EC")]
		public ObjectSelectionGizmosHotkeys()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000687")]
	public class ObjectSelectionHotkeys : Settings
	{
		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Hotkeys _appendToSelection;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Hotkeys _multiDeselect;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Hotkeys _deleteSelected;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Hotkeys _focusCameraOnSelection;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Hotkeys _duplicateSelection;

		[Token(Token = "0x17000A77")]
		public Hotkeys AppendToSelection
		{
			[Token(Token = "0x6002D63")]
			[Address(RVA = "0x11A95BC", Offset = "0x11A95BC", VA = "0x11A95BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A78")]
		public Hotkeys MultiDeselect
		{
			[Token(Token = "0x6002D64")]
			[Address(RVA = "0x11A95C4", Offset = "0x11A95C4", VA = "0x11A95C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A79")]
		public Hotkeys DeleteSelected
		{
			[Token(Token = "0x6002D65")]
			[Address(RVA = "0x11A95CC", Offset = "0x11A95CC", VA = "0x11A95CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A7A")]
		public Hotkeys FocusCameraOnSelection
		{
			[Token(Token = "0x6002D66")]
			[Address(RVA = "0x11A95D4", Offset = "0x11A95D4", VA = "0x11A95D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A7B")]
		public Hotkeys DuplicateSelection
		{
			[Token(Token = "0x6002D67")]
			[Address(RVA = "0x11A95DC", Offset = "0x11A95DC", VA = "0x11A95DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D68")]
		[Address(RVA = "0x11A95E4", Offset = "0x11A95E4", VA = "0x11A95E4")]
		public ObjectSelectionHotkeys()
		{
		}
	}
	[Token(Token = "0x2000688")]
	public enum SelectionBoxBorderStyle
	{
		[Token(Token = "0x4001D09")]
		FullWire,
		[Token(Token = "0x4001D0A")]
		WireCorners
	}
	[Token(Token = "0x2000689")]
	public enum SelectionBoxRenderMode
	{
		[Token(Token = "0x4001D0C")]
		PerObject,
		[Token(Token = "0x4001D0D")]
		FromParentToBottom,
		[Token(Token = "0x4001D0E")]
		SelectionVolume
	}
	[Serializable]
	[Token(Token = "0x200068A")]
	public class ObjectSelectionLookAndFeel : Settings
	{
		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool _drawHighlight;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private SelectionBoxBorderStyle _selectionBoxBorderStyle;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _wireCornerLinePercentage;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private SelectionBoxRenderMode _selectionBoxRenderMode;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _selectionBoxBorderColor;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _selectionBoxInflateAmount;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Color _selectionRectBorderColor;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Color _selectionRectFillColor;

		[Token(Token = "0x17000A7C")]
		public bool DrawHighlight
		{
			[Token(Token = "0x6002D69")]
			[Address(RVA = "0x11A97D8", Offset = "0x11A97D8", VA = "0x11A97D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002D6A")]
			[Address(RVA = "0x11A97E0", Offset = "0x11A97E0", VA = "0x11A97E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000A7D")]
		public SelectionBoxBorderStyle SelBoxBorderStyle
		{
			[Token(Token = "0x6002D6B")]
			[Address(RVA = "0x11A97EC", Offset = "0x11A97EC", VA = "0x11A97EC")]
			get
			{
				return default(SelectionBoxBorderStyle);
			}
			[Token(Token = "0x6002D6C")]
			[Address(RVA = "0x11A97F4", Offset = "0x11A97F4", VA = "0x11A97F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000A7E")]
		public float WireCornerLinePercentage
		{
			[Token(Token = "0x6002D6D")]
			[Address(RVA = "0x11A97FC", Offset = "0x11A97FC", VA = "0x11A97FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002D6E")]
			[Address(RVA = "0x11A9804", Offset = "0x11A9804", VA = "0x11A9804")]
			set
			{
			}
		}

		[Token(Token = "0x17000A7F")]
		public SelectionBoxRenderMode SelBoxRenderMode
		{
			[Token(Token = "0x6002D6F")]
			[Address(RVA = "0x11A9824", Offset = "0x11A9824", VA = "0x11A9824")]
			get
			{
				return default(SelectionBoxRenderMode);
			}
			[Token(Token = "0x6002D70")]
			[Address(RVA = "0x11A982C", Offset = "0x11A982C", VA = "0x11A982C")]
			set
			{
			}
		}

		[Token(Token = "0x17000A80")]
		public Color SelectionBoxBorderColor
		{
			[Token(Token = "0x6002D71")]
			[Address(RVA = "0x11A9834", Offset = "0x11A9834", VA = "0x11A9834")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002D72")]
			[Address(RVA = "0x11A9840", Offset = "0x11A9840", VA = "0x11A9840")]
			set
			{
			}
		}

		[Token(Token = "0x17000A81")]
		public float SelectionBoxInflateAmount
		{
			[Token(Token = "0x6002D73")]
			[Address(RVA = "0x11A984C", Offset = "0x11A984C", VA = "0x11A984C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6002D74")]
			[Address(RVA = "0x11A9854", Offset = "0x11A9854", VA = "0x11A9854")]
			set
			{
			}
		}

		[Token(Token = "0x17000A82")]
		public Color SelectionRectBorderColor
		{
			[Token(Token = "0x6002D75")]
			[Address(RVA = "0x11A9864", Offset = "0x11A9864", VA = "0x11A9864")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002D76")]
			[Address(RVA = "0x11A9870", Offset = "0x11A9870", VA = "0x11A9870")]
			set
			{
			}
		}

		[Token(Token = "0x17000A83")]
		public Color SelectionRectFillColor
		{
			[Token(Token = "0x6002D77")]
			[Address(RVA = "0x11A987C", Offset = "0x11A987C", VA = "0x11A987C")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6002D78")]
			[Address(RVA = "0x11A9888", Offset = "0x11A9888", VA = "0x11A9888")]
			set
			{
			}
		}

		[Token(Token = "0x6002D79")]
		[Address(RVA = "0x11A9894", Offset = "0x11A9894", VA = "0x11A9894")]
		public ObjectSelectionLookAndFeel()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200068B")]
	public class ObjectSelectionRotationHotkeys : Settings
	{
		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Hotkeys _rotateAroundX;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Hotkeys _rotateAroundY;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Hotkeys _rotateAroundZ;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Hotkeys _setRotationToIdentity;

		[Token(Token = "0x17000A84")]
		public Hotkeys RotateAroundX
		{
			[Token(Token = "0x6002D7A")]
			[Address(RVA = "0x11A9900", Offset = "0x11A9900", VA = "0x11A9900")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A85")]
		public Hotkeys RotateAroundY
		{
			[Token(Token = "0x6002D7B")]
			[Address(RVA = "0x11A9908", Offset = "0x11A9908", VA = "0x11A9908")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A86")]
		public Hotkeys RotateAroundZ
		{
			[Token(Token = "0x6002D7C")]
			[Address(RVA = "0x11A9910", Offset = "0x11A9910", VA = "0x11A9910")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A87")]
		public Hotkeys SetRotationToIdentity
		{
			[Token(Token = "0x6002D7D")]
			[Address(RVA = "0x11A9918", Offset = "0x11A9918", VA = "0x11A9918")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D7E")]
		[Address(RVA = "0x11A9920", Offset = "0x11A9920", VA = "0x11A9920")]
		public ObjectSelectionRotationHotkeys()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200068C")]
	public class ObjectSelectionRotationSettings : Settings
	{
		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private ObjectRotationPivot _rotationPivot;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ObjectKeyRotationSettings _keyRotationSettings;

		[Token(Token = "0x17000A88")]
		public ObjectRotationPivot RotationPivot
		{
			[Token(Token = "0x6002D7F")]
			[Address(RVA = "0x11A9AEC", Offset = "0x11A9AEC", VA = "0x11A9AEC")]
			get
			{
				return default(ObjectRotationPivot);
			}
			[Token(Token = "0x6002D80")]
			[Address(RVA = "0x11A9AF4", Offset = "0x11A9AF4", VA = "0x11A9AF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000A89")]
		public ObjectKeyRotationSettings KeyRotationSettings
		{
			[Token(Token = "0x6002D81")]
			[Address(RVA = "0x11A9AFC", Offset = "0x11A9AFC", VA = "0x11A9AFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D82")]
		[Address(RVA = "0x11A9B04", Offset = "0x11A9B04", VA = "0x11A9B04")]
		public ObjectSelectionRotationSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200068D")]
	public class ObjectSelectionSettings : Settings
	{
		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private MultiSelectOverlapMode _multiSelectOverlapMode;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObjectType _selectableObjectTypes;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int _selectableLayers;

		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _duplicatableLayers;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int _deletableLayers;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<GameObject> _nonSelectableObjects;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HashSet<Camera> _nonSelectableCameras;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool _canClickSelect;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		private bool _enableCyclicalClickSelect;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		private bool _canMultiSelect;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int _minMultiSelectSize;

		[Token(Token = "0x17000A8A")]
		public MultiSelectOverlapMode MultiSelectOverlapMode
		{
			[Token(Token = "0x6002D83")]
			[Address(RVA = "0x11A9B80", Offset = "0x11A9B80", VA = "0x11A9B80")]
			get
			{
				return default(MultiSelectOverlapMode);
			}
			[Token(Token = "0x6002D84")]
			[Address(RVA = "0x11A9B88", Offset = "0x11A9B88", VA = "0x11A9B88")]
			set
			{
			}
		}

		[Token(Token = "0x17000A8B")]
		public bool CanClickSelect
		{
			[Token(Token = "0x6002D85")]
			[Address(RVA = "0x11A9B90", Offset = "0x11A9B90", VA = "0x11A9B90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002D86")]
			[Address(RVA = "0x11A9B98", Offset = "0x11A9B98", VA = "0x11A9B98")]
			set
			{
			}
		}

		[Token(Token = "0x17000A8C")]
		public bool EnableCyclicalClickSelect
		{
			[Token(Token = "0x6002D87")]
			[Address(RVA = "0x11A9BA4", Offset = "0x11A9BA4", VA = "0x11A9BA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002D88")]
			[Address(RVA = "0x11A9BAC", Offset = "0x11A9BAC", VA = "0x11A9BAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000A8D")]
		public bool CanMultiSelect
		{
			[Token(Token = "0x6002D89")]
			[Address(RVA = "0x11A9BB8", Offset = "0x11A9BB8", VA = "0x11A9BB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002D8A")]
			[Address(RVA = "0x11A9BC0", Offset = "0x11A9BC0", VA = "0x11A9BC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000A8E")]
		public int SelectableLayers
		{
			[Token(Token = "0x6002D8B")]
			[Address(RVA = "0x11A9BCC", Offset = "0x11A9BCC", VA = "0x11A9BCC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002D8C")]
			[Address(RVA = "0x11A9BD4", Offset = "0x11A9BD4", VA = "0x11A9BD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000A8F")]
		public int DuplicatableLayers
		{
			[Token(Token = "0x6002D8D")]
			[Address(RVA = "0x11A9BDC", Offset = "0x11A9BDC", VA = "0x11A9BDC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002D8E")]
			[Address(RVA = "0x11A9BE4", Offset = "0x11A9BE4", VA = "0x11A9BE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000A90")]
		public int DeletableLayers
		{
			[Token(Token = "0x6002D8F")]
			[Address(RVA = "0x11A9BEC", Offset = "0x11A9BEC", VA = "0x11A9BEC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002D90")]
			[Address(RVA = "0x11A9BF4", Offset = "0x11A9BF4", VA = "0x11A9BF4")]
			set
			{
			}
		}

		[Token(Token = "0x17000A91")]
		public int MinMultiSelectSize
		{
			[Token(Token = "0x6002D91")]
			[Address(RVA = "0x11A9BFC", Offset = "0x11A9BFC", VA = "0x11A9BFC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002D92")]
			[Address(RVA = "0x11A9C04", Offset = "0x11A9C04", VA = "0x11A9C04")]
			set
			{
			}
		}

		[Token(Token = "0x6002D93")]
		[Address(RVA = "0x11A9C14", Offset = "0x11A9C14", VA = "0x11A9C14")]
		public bool IsCameraSelectable(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D94")]
		[Address(RVA = "0x11A9C78", Offset = "0x11A9C78", VA = "0x11A9C78")]
		public void SetCameraSelectable(Camera camera, bool isSelectable)
		{
		}

		[Token(Token = "0x6002D95")]
		[Address(RVA = "0x11A9D54", Offset = "0x11A9D54", VA = "0x11A9D54")]
		public void SetCameraCollectionSelectable(List<Camera> cameraCollection, bool areSelectable)
		{
		}

		[Token(Token = "0x6002D96")]
		[Address(RVA = "0x11A9E9C", Offset = "0x11A9E9C", VA = "0x11A9E9C")]
		public bool IsObjectTypeSelectable(GameObjectType gameObjectType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D97")]
		[Address(RVA = "0x11A9EAC", Offset = "0x11A9EAC", VA = "0x11A9EAC")]
		public void SetObjectTypeSelectable(GameObjectType gameObjectType, bool isSelectable)
		{
		}

		[Token(Token = "0x6002D98")]
		[Address(RVA = "0x11A9EBC", Offset = "0x11A9EBC", VA = "0x11A9EBC")]
		public bool IsObjectLayerSelectable(int objectLayer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D99")]
		[Address(RVA = "0x11A9EC8", Offset = "0x11A9EC8", VA = "0x11A9EC8")]
		public void SetObjectLayerSelectable(int objectLayer, bool isSelectable)
		{
		}

		[Token(Token = "0x6002D9A")]
		[Address(RVA = "0x11A9EF8", Offset = "0x11A9EF8", VA = "0x11A9EF8")]
		public bool IsObjectSelectable(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D9B")]
		[Address(RVA = "0x11A9FA4", Offset = "0x11A9FA4", VA = "0x11A9FA4")]
		public void SetObjectSelectable(GameObject gameObject, bool isSelectable)
		{
		}

		[Token(Token = "0x6002D9C")]
		[Address(RVA = "0x11AA080", Offset = "0x11AA080", VA = "0x11AA080")]
		public void SetObjectCollectionSelectable(List<GameObject> gameObjectCollection, bool areSelectable)
		{
		}

		[Token(Token = "0x6002D9D")]
		[Address(RVA = "0x11AA1C8", Offset = "0x11AA1C8", VA = "0x11AA1C8")]
		public void RemoveNullObjectRefs()
		{
		}

		[Token(Token = "0x6002D9E")]
		[Address(RVA = "0x11AA2D0", Offset = "0x11AA2D0", VA = "0x11AA2D0")]
		public bool IsObjectLayerDuplicatable(int objectLayer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D9F")]
		[Address(RVA = "0x11AA2DC", Offset = "0x11AA2DC", VA = "0x11AA2DC")]
		public void SetObjectLayerDuplicatable(int objectLayer, bool isDuplicatable)
		{
		}

		[Token(Token = "0x6002DA0")]
		[Address(RVA = "0x11AA30C", Offset = "0x11AA30C", VA = "0x11AA30C")]
		public bool IsObjectLayerDeletable(int objectLayer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DA1")]
		[Address(RVA = "0x11AA318", Offset = "0x11AA318", VA = "0x11AA318")]
		public ObjectSelectionSettings()
		{
		}
	}
	[Token(Token = "0x200068F")]
	public enum ObjectSelectReason
	{
		[Token(Token = "0x4001D2B")]
		None,
		[Token(Token = "0x4001D2C")]
		Click,
		[Token(Token = "0x4001D2D")]
		ClickAppend,
		[Token(Token = "0x4001D2E")]
		MultiSelect,
		[Token(Token = "0x4001D2F")]
		MultiSelectAppend,
		[Token(Token = "0x4001D30")]
		Undo,
		[Token(Token = "0x4001D31")]
		Redo,
		[Token(Token = "0x4001D32")]
		AppendToSelectionCall,
		[Token(Token = "0x4001D33")]
		SetSelectedCall
	}
	[Token(Token = "0x2000690")]
	public enum ObjectDeselectReason
	{
		[Token(Token = "0x4001D35")]
		None,
		[Token(Token = "0x4001D36")]
		ClickSelectOther,
		[Token(Token = "0x4001D37")]
		CickAppendAlreadySelected,
		[Token(Token = "0x4001D38")]
		ClickAir,
		[Token(Token = "0x4001D39")]
		MultiDeselect,
		[Token(Token = "0x4001D3A")]
		MultiSelectNotOverlapped,
		[Token(Token = "0x4001D3B")]
		Undo,
		[Token(Token = "0x4001D3C")]
		Redo,
		[Token(Token = "0x4001D3D")]
		RemoveFromSelectionCall,
		[Token(Token = "0x4001D3E")]
		ClearSelectionCall,
		[Token(Token = "0x4001D3F")]
		SetSelectedCall,
		[Token(Token = "0x4001D40")]
		Inactive,
		[Token(Token = "0x4001D41")]
		WillBeDeleted
	}
	[Token(Token = "0x2000691")]
	public class ObjectSelectionChangedEventArgs
	{
		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ObjectSelectReason _selectReason;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<GameObject> _objectsWhichWereSelected;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ObjectDeselectReason _deselectReason;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> _objectsWhichWereDeselected;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ObjectSelectionSnapshot _undoRedoSnapshot;

		[Token(Token = "0x17000A92")]
		public ObjectSelectReason SelectReason
		{
			[Token(Token = "0x6002DA5")]
			[Address(RVA = "0x11AA4E4", Offset = "0x11AA4E4", VA = "0x11AA4E4")]
			get
			{
				return default(ObjectSelectReason);
			}
		}

		[Token(Token = "0x17000A93")]
		public int NumObjectsSelected
		{
			[Token(Token = "0x6002DA6")]
			[Address(RVA = "0x11AA4EC", Offset = "0x11AA4EC", VA = "0x11AA4EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000A94")]
		public List<GameObject> ObjectsWhichWereSelected
		{
			[Token(Token = "0x6002DA7")]
			[Address(RVA = "0x11AA534", Offset = "0x11AA534", VA = "0x11AA534")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A95")]
		public ObjectDeselectReason DeselectReason
		{
			[Token(Token = "0x6002DA8")]
			[Address(RVA = "0x11AA5B0", Offset = "0x11AA5B0", VA = "0x11AA5B0")]
			get
			{
				return default(ObjectDeselectReason);
			}
		}

		[Token(Token = "0x17000A96")]
		public int NumObjectsDeselected
		{
			[Token(Token = "0x6002DA9")]
			[Address(RVA = "0x11AA5B8", Offset = "0x11AA5B8", VA = "0x11AA5B8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000A97")]
		public List<GameObject> ObjectsWhichWereDeselected
		{
			[Token(Token = "0x6002DAA")]
			[Address(RVA = "0x11AA600", Offset = "0x11AA600", VA = "0x11AA600")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A98")]
		public ObjectSelectionSnapshot UndoRedoSnapshot
		{
			[Token(Token = "0x6002DAB")]
			[Address(RVA = "0x11AA67C", Offset = "0x11AA67C", VA = "0x11AA67C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DAC")]
		[Address(RVA = "0x11AA684", Offset = "0x11AA684", VA = "0x11AA684")]
		public ObjectSelectionChangedEventArgs(ObjectSelectReason selectReason, List<GameObject> objectsWhichWereSelected, ObjectDeselectReason deselectReason, List<GameObject> objectsWhichWereDeselected, [Optional] ObjectSelectionSnapshot undoRedoSnapshot)
		{
		}
	}
	[Token(Token = "0x2000692")]
	public class ObjectSelectEventArgs
	{
		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ObjectSelectReason _selectReason;

		[Token(Token = "0x17000A99")]
		public ObjectSelectReason SelectReason
		{
			[Token(Token = "0x6002DAD")]
			[Address(RVA = "0x11AA860", Offset = "0x11AA860", VA = "0x11AA860")]
			get
			{
				return default(ObjectSelectReason);
			}
		}

		[Token(Token = "0x6002DAE")]
		[Address(RVA = "0x11AA868", Offset = "0x11AA868", VA = "0x11AA868")]
		public ObjectSelectEventArgs(ObjectSelectReason selectReason)
		{
		}
	}
	[Token(Token = "0x2000693")]
	public class ObjectDeselectEventArgs
	{
		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ObjectDeselectReason _deselectReason;

		[Token(Token = "0x17000A9A")]
		public ObjectDeselectReason DeselectReason
		{
			[Token(Token = "0x6002DAF")]
			[Address(RVA = "0x11AA890", Offset = "0x11AA890", VA = "0x11AA890")]
			get
			{
				return default(ObjectDeselectReason);
			}
		}

		[Token(Token = "0x6002DB0")]
		[Address(RVA = "0x11AA898", Offset = "0x11AA898", VA = "0x11AA898")]
		public ObjectDeselectEventArgs(ObjectDeselectReason deselectReason)
		{
		}
	}
	[Token(Token = "0x2000694")]
	public class ObjectSelectionSnapshot
	{
		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<GameObject> _snapshotObjects;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObjectSelectionGizmosSnapshot _gizmosSnapshot;

		[Token(Token = "0x17000A9B")]
		public int NumObjects
		{
			[Token(Token = "0x6002DB1")]
			[Address(RVA = "0x11AA8C0", Offset = "0x11AA8C0", VA = "0x11AA8C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000A9C")]
		public List<GameObject> SnapshotObjects
		{
			[Token(Token = "0x6002DB2")]
			[Address(RVA = "0x11AA908", Offset = "0x11AA908", VA = "0x11AA908")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000A9D")]
		public ObjectSelectionGizmosSnapshot GizmosSnapshot
		{
			[Token(Token = "0x6002DB3")]
			[Address(RVA = "0x11AA984", Offset = "0x11AA984", VA = "0x11AA984")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DB4")]
		[Address(RVA = "0x11A8B70", Offset = "0x11A8B70", VA = "0x11A8B70")]
		public ObjectSelectionSnapshot()
		{
		}

		[Token(Token = "0x6002DB5")]
		[Address(RVA = "0x11AAA28", Offset = "0x11AAA28", VA = "0x11AAA28")]
		public ObjectSelectionSnapshot(ObjectSelectionSnapshot copy)
		{
		}

		[Token(Token = "0x6002DB6")]
		[Address(RVA = "0x11A8C34", Offset = "0x11A8C34", VA = "0x11A8C34")]
		public void Snapshot()
		{
		}
	}
	[Token(Token = "0x2000695")]
	public class ObjectSelectionGizmosSnapshot
	{
		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private GameObject _pivotObject;

		[Token(Token = "0x17000A9E")]
		public GameObject PivotObject
		{
			[Token(Token = "0x6002DB7")]
			[Address(RVA = "0x11AACA0", Offset = "0x11AACA0", VA = "0x11AACA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DB8")]
		[Address(RVA = "0x11AAA20", Offset = "0x11AAA20", VA = "0x11AAA20")]
		public ObjectSelectionGizmosSnapshot()
		{
		}

		[Token(Token = "0x6002DB9")]
		[Address(RVA = "0x11AA9E8", Offset = "0x11AA9E8", VA = "0x11AA9E8")]
		public ObjectSelectionGizmosSnapshot(ObjectSelectionGizmosSnapshot copy)
		{
		}

		[Token(Token = "0x6002DBA")]
		[Address(RVA = "0x11AABB0", Offset = "0x11AABB0", VA = "0x11AABB0")]
		public void Snapshot()
		{
		}
	}
	[Token(Token = "0x2000696")]
	public class ObjectSelectionDuplicationResult
	{
		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<GameObject> _duplicateParents;

		[Token(Token = "0x17000A9F")]
		public List<GameObject> DuplicateParents
		{
			[Token(Token = "0x6002DBB")]
			[Address(RVA = "0x11AACA8", Offset = "0x11AACA8", VA = "0x11AACA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AA0")]
		public int NumDuplicateParents
		{
			[Token(Token = "0x6002DBC")]
			[Address(RVA = "0x11AAD24", Offset = "0x11AAD24", VA = "0x11AAD24")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002DBD")]
		[Address(RVA = "0x11AAD6C", Offset = "0x11AAD6C", VA = "0x11AAD6C")]
		public ObjectSelectionDuplicationResult(List<GameObject> duplicatedParents)
		{
		}

		[Token(Token = "0x6002DBE")]
		[Address(RVA = "0x11AAE04", Offset = "0x11AAE04", VA = "0x11AAE04")]
		public GameObject GetParentByIndex(int index)
		{
			return null;
		}
	}
	[Token(Token = "0x2000697")]
	public delegate void ObjectSelectionManipSessionBeginHandler(ObjectSelectionManipSession session);
	[Token(Token = "0x2000698")]
	public delegate void ObjectSelectionManipSessionEndHandler(ObjectSelectionManipSession session);
	[Token(Token = "0x2000699")]
	public delegate void ObjectSelectionCanClickSelectDeselectHandler(YesNoAnswer answer);
	[Token(Token = "0x200069A")]
	public delegate void ObjectSelectionCanMultiSelectDeselectHandler(YesNoAnswer answer);
	[Token(Token = "0x200069B")]
	public delegate void ObjectSelectionChangedHandler(ObjectSelectionChangedEventArgs args);
	[Token(Token = "0x200069C")]
	public delegate void ObjectSelectionWillBeDeletedHandler(List<GameObject> parents);
	[Token(Token = "0x200069D")]
	public delegate void ObjectSelectionDeletedHandler();
	[Token(Token = "0x200069E")]
	public delegate void ObjectSelectionWillBeDuplicatedHandler();
	[Token(Token = "0x200069F")]
	public delegate void ObjectSelectionDuplicatedHandler(ObjectSelectionDuplicationResult result);
	[Token(Token = "0x20006A0")]
	public delegate void ObjectSelectionRotatedHandler();
	[Token(Token = "0x20006A1")]
	public delegate void ObjectSelectionPreSelectCustomizeHandler(ObjectPreSelectCustomizeInfo customizeInfo, List<GameObject> toBeSelected);
	[Token(Token = "0x20006A2")]
	public delegate void ObjectSelectionPreDeselectCustomizeHandler(ObjectPreDeselectCustomizeInfo customizeInfo, List<GameObject> toBeDeselected);
	[Token(Token = "0x20006A3")]
	public delegate void ObjectSelectionEnabled();
	[Token(Token = "0x20006A4")]
	public delegate void ObjectSelectionDisabled();
	[Token(Token = "0x20006A5")]
	public enum ObjectSelectionManipSession
	{
		[Token(Token = "0x4001D4E")]
		None,
		[Token(Token = "0x4001D4F")]
		Grab,
		[Token(Token = "0x4001D50")]
		GridSnap,
		[Token(Token = "0x4001D51")]
		Object2ObjectSnap
	}
	[Serializable]
	[Token(Token = "0x20006A6")]
	public class RTObjectSelection : MonoSingleton<RTObjectSelection>
	{
		[Token(Token = "0x20006A7")]
		[Flags]
		private enum SelectRestrictFlags
		{
			[Token(Token = "0x4001D81")]
			None = 0,
			[Token(Token = "0x4001D82")]
			ObjectLayer = 1,
			[Token(Token = "0x4001D83")]
			ObjectType = 2,
			[Token(Token = "0x4001D84")]
			Object = 4,
			[Token(Token = "0x4001D85")]
			SelectionListener = 8,
			[Token(Token = "0x4001D86")]
			All = 0xF
		}

		[Token(Token = "0x20006A8")]
		private struct CyclicalClickSelectInfo
		{
			[Token(Token = "0x4001D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int LastSelectedIndex;

			[Token(Token = "0x4001D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject LastPickedObject;
		}

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int _objectPickDeviceBtnIndex;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<GameObject> _visibleObjectBuffer;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private List<GameObject> _overlappedObjectBuffer;

		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<GameObjectRayHit> _objectHitBuffer;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private bool _isEnabled;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<Camera> _renderIgnoreCameras;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<GameObject> _selectedObjects;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private MultiSelectShape _multiSelectShape;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ObjectSelectionSnapshot _multiSelectPreChangeSnapshot;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool _wasSelectionChangedViaMultiSelectShape;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		private bool _willBeDeleted;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		private bool _doingPreSelectCustomize;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
		private bool _doingPreDeselectCustomize;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool _firingSelectionChanged;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ObjectSelectionManipSession _activeManipSession;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private CyclicalClickSelectInfo _cyclicalClickSelectInfo;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private ObjectSelectionHotkeys _hotkeys;

		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private ObjectSelectionSettings _settings;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private ObjectSelectionLookAndFeel _lookAndFeel;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private ObjectSelectionRotationSettings _rotationSettings;

		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private ObjectSelectionRotationHotkeys _rotationHotkeys;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private DeviceObjectGrabSession _grabSession;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private ObjectGrabSettings _grabSettings;

		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private ObjectGrabLookAndFeel _grabLookAndFeel;

		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private ObjectGrabHotkeys _grabHotkeys;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private ObjectGridSnapSession _gridSnapSession;

		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private ObjectGridSnapLookAndFeel _gridSnapLookAndFeel;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private ObjectGridSnapHotkeys _gridSnapHotkeys;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Object2ObjectSnapSession _object2ObjectSnapSession;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private Object2ObjectSnapSettings _object2ObjectSnapSettings;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private Object2ObjectSnapHotkeys _object2ObjectSnapHotkeys;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private EditorToolbar _settingsToolbar;

		[Token(Token = "0x17000AA1")]
		public bool IsEnabled
		{
			[Token(Token = "0x6002E13")]
			[Address(RVA = "0x11AD214", Offset = "0x11AD214", VA = "0x11AD214")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000AA2")]
		public bool IsMultiSelectShapeVisible
		{
			[Token(Token = "0x6002E14")]
			[Address(RVA = "0x11AD21C", Offset = "0x11AD21C", VA = "0x11AD21C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000AA3")]
		public int NumSelectedObjects
		{
			[Token(Token = "0x6002E15")]
			[Address(RVA = "0x11AD238", Offset = "0x11AD238", VA = "0x11AD238")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000AA4")]
		public ObjectSelectionHotkeys Hotkeys
		{
			[Token(Token = "0x6002E16")]
			[Address(RVA = "0x11AD280", Offset = "0x11AD280", VA = "0x11AD280")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AA5")]
		public ObjectSelectionSettings Settings
		{
			[Token(Token = "0x6002E17")]
			[Address(RVA = "0x11AD288", Offset = "0x11AD288", VA = "0x11AD288")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AA6")]
		public ObjectSelectionLookAndFeel LookAndFeel
		{
			[Token(Token = "0x6002E18")]
			[Address(RVA = "0x11AD290", Offset = "0x11AD290", VA = "0x11AD290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AA7")]
		public ObjectSelectionRotationSettings RotationSettings
		{
			[Token(Token = "0x6002E19")]
			[Address(RVA = "0x11AD298", Offset = "0x11AD298", VA = "0x11AD298")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AA8")]
		public ObjectSelectionRotationHotkeys RotationHotkeys
		{
			[Token(Token = "0x6002E1A")]
			[Address(RVA = "0x11AD2A0", Offset = "0x11AD2A0", VA = "0x11AD2A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AA9")]
		public ObjectGrabSettings GrabSettings
		{
			[Token(Token = "0x6002E1B")]
			[Address(RVA = "0x11AD2A8", Offset = "0x11AD2A8", VA = "0x11AD2A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AAA")]
		public ObjectGrabHotkeys GrabHotkeys
		{
			[Token(Token = "0x6002E1C")]
			[Address(RVA = "0x11AD2B0", Offset = "0x11AD2B0", VA = "0x11AD2B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AAB")]
		public ObjectGrabLookAndFeel GrabLookAndFeel
		{
			[Token(Token = "0x6002E1D")]
			[Address(RVA = "0x11AD2B8", Offset = "0x11AD2B8", VA = "0x11AD2B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AAC")]
		public ObjectGridSnapLookAndFeel GridSnapLookAndFeel
		{
			[Token(Token = "0x6002E1E")]
			[Address(RVA = "0x11AD2C0", Offset = "0x11AD2C0", VA = "0x11AD2C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AAD")]
		public ObjectGridSnapHotkeys GridSnapHotkeys
		{
			[Token(Token = "0x6002E1F")]
			[Address(RVA = "0x11AD2C8", Offset = "0x11AD2C8", VA = "0x11AD2C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AAE")]
		public Object2ObjectSnapSettings Object2ObjectSnapSettings
		{
			[Token(Token = "0x6002E20")]
			[Address(RVA = "0x11AD2D0", Offset = "0x11AD2D0", VA = "0x11AD2D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AAF")]
		public Object2ObjectSnapHotkeys Object2ObjectSnapHotkeys
		{
			[Token(Token = "0x6002E21")]
			[Address(RVA = "0x11AD2D8", Offset = "0x11AD2D8", VA = "0x11AD2D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AB0")]
		public bool IsManipSessionActive
		{
			[Token(Token = "0x6002E22")]
			[Address(RVA = "0x11AD2E0", Offset = "0x11AD2E0", VA = "0x11AD2E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000AB1")]
		public ObjectSelectionManipSession ActiveManipSession
		{
			[Token(Token = "0x6002E23")]
			[Address(RVA = "0x11AD2F0", Offset = "0x11AD2F0", VA = "0x11AD2F0")]
			get
			{
				return default(ObjectSelectionManipSession);
			}
		}

		[Token(Token = "0x17000AB2")]
		public bool IsGrabSessionActive
		{
			[Token(Token = "0x6002E24")]
			[Address(RVA = "0x11AD2F8", Offset = "0x11AD2F8", VA = "0x11AD2F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000AB3")]
		public bool IsGridSnapSessionActive
		{
			[Token(Token = "0x6002E25")]
			[Address(RVA = "0x11AD308", Offset = "0x11AD308", VA = "0x11AD308")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000AB4")]
		public bool IsObject2ObjectSnapSessionActive
		{
			[Token(Token = "0x6002E26")]
			[Address(RVA = "0x11AD318", Offset = "0x11AD318", VA = "0x11AD318")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000AB5")]
		public List<GameObject> SelectedObjects
		{
			[Token(Token = "0x6002E27")]
			[Address(RVA = "0x11AAB34", Offset = "0x11AAB34", VA = "0x11AAB34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400005E")]
		public event ObjectSelectionManipSessionBeginHandler ManipSessionBegin
		{
			[Token(Token = "0x6002DF7")]
			[Address(RVA = "0x11AC104", Offset = "0x11AC104", VA = "0x11AC104")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002DF8")]
			[Address(RVA = "0x11AC1A0", Offset = "0x11AC1A0", VA = "0x11AC1A0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400005F")]
		public event ObjectSelectionManipSessionEndHandler ManipSessionEnd
		{
			[Token(Token = "0x6002DF9")]
			[Address(RVA = "0x11AC23C", Offset = "0x11AC23C", VA = "0x11AC23C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002DFA")]
			[Address(RVA = "0x11AC2D8", Offset = "0x11AC2D8", VA = "0x11AC2D8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000060")]
		public event ObjectSelectionCanClickSelectDeselectHandler CanClickSelectDeselect
		{
			[Token(Token = "0x6002DFB")]
			[Address(RVA = "0x11AC374", Offset = "0x11AC374", VA = "0x11AC374")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002DFC")]
			[Address(RVA = "0x11AC410", Offset = "0x11AC410", VA = "0x11AC410")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000061")]
		public event ObjectSelectionCanMultiSelectDeselectHandler CanMultiSelectDeselect
		{
			[Token(Token = "0x6002DFD")]
			[Address(RVA = "0x11AC4AC", Offset = "0x11AC4AC", VA = "0x11AC4AC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002DFE")]
			[Address(RVA = "0x11AC548", Offset = "0x11AC548", VA = "0x11AC548")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000062")]
		public event ObjectSelectionChangedHandler Changed
		{
			[Token(Token = "0x6002DFF")]
			[Address(RVA = "0x11AC5E4", Offset = "0x11AC5E4", VA = "0x11AC5E4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002E00")]
			[Address(RVA = "0x11AC680", Offset = "0x11AC680", VA = "0x11AC680")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000063")]
		public event ObjectSelectionWillBeDeletedHandler WillBeDeleted
		{
			[Token(Token = "0x6002E01")]
			[Address(RVA = "0x11AC71C", Offset = "0x11AC71C", VA = "0x11AC71C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002E02")]
			[Address(RVA = "0x11AC7B8", Offset = "0x11AC7B8", VA = "0x11AC7B8")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000064")]
		public event ObjectSelectionDeletedHandler Deleted
		{
			[Token(Token = "0x6002E03")]
			[Address(RVA = "0x11AC854", Offset = "0x11AC854", VA = "0x11AC854")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002E04")]
			[Address(RVA = "0x11AC8F0", Offset = "0x11AC8F0", VA = "0x11AC8F0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000065")]
		public event ObjectSelectionWillBeDuplicatedHandler WillBeDuplicated
		{
			[Token(Token = "0x6002E05")]
			[Address(RVA = "0x11AC98C", Offset = "0x11AC98C", VA = "0x11AC98C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002E06")]
			[Address(RVA = "0x11ACA28", Offset = "0x11ACA28", VA = "0x11ACA28")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000066")]
		public event ObjectSelectionDuplicatedHandler Duplicated
		{
			[Token(Token = "0x6002E07")]
			[Address(RVA = "0x11ACAC4", Offset = "0x11ACAC4", VA = "0x11ACAC4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002E08")]
			[Address(RVA = "0x11ACB60", Offset = "0x11ACB60", VA = "0x11ACB60")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000067")]
		public event ObjectSelectionRotatedHandler Rotated
		{
			[Token(Token = "0x6002E09")]
			[Address(RVA = "0x11ACBFC", Offset = "0x11ACBFC", VA = "0x11ACBFC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002E0A")]
			[Address(RVA = "0x11ACC98", Offset = "0x11ACC98", VA = "0x11ACC98")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000068")]
		public event ObjectSelectionPreSelectCustomizeHandler PreSelectCustomize
		{
			[Token(Token = "0x6002E0B")]
			[Address(RVA = "0x11ACD34", Offset = "0x11ACD34", VA = "0x11ACD34")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002E0C")]
			[Address(RVA = "0x11ACDD0", Offset = "0x11ACDD0", VA = "0x11ACDD0")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000069")]
		public event ObjectSelectionPreDeselectCustomizeHandler PreDeselectCustomize
		{
			[Token(Token = "0x6002E0D")]
			[Address(RVA = "0x11ACE6C", Offset = "0x11ACE6C", VA = "0x11ACE6C")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002E0E")]
			[Address(RVA = "0x11ACF08", Offset = "0x11ACF08", VA = "0x11ACF08")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006A")]
		public event ObjectSelectionEnabled Enabled
		{
			[Token(Token = "0x6002E0F")]
			[Address(RVA = "0x11ACFA4", Offset = "0x11ACFA4", VA = "0x11ACFA4")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002E10")]
			[Address(RVA = "0x11AD040", Offset = "0x11AD040", VA = "0x11AD040")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400006B")]
		public event ObjectSelectionDisabled Disabled
		{
			[Token(Token = "0x6002E11")]
			[Address(RVA = "0x11AD0DC", Offset = "0x11AD0DC", VA = "0x11AD0DC")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6002E12")]
			[Address(RVA = "0x11AD178", Offset = "0x11AD178", VA = "0x11AD178")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6002E28")]
		[Address(RVA = "0x11AD328", Offset = "0x11AD328", VA = "0x11AD328")]
		public void Initialize_SystemCall()
		{
		}

		[Token(Token = "0x6002E29")]
		[Address(RVA = "0x11AD740", Offset = "0x11AD740", VA = "0x11AD740")]
		public void AttachGizmoController(IObjectCollectionGizmoController gizmoController)
		{
		}

		[Token(Token = "0x6002E2A")]
		[Address(RVA = "0x11AD7E8", Offset = "0x11AD7E8", VA = "0x11AD7E8")]
		public bool IsRenderIgnoreCamera(Camera camera)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E2B")]
		[Address(RVA = "0x11AD840", Offset = "0x11AD840", VA = "0x11AD840")]
		public void AddRenderIgnoreCamera(Camera camera)
		{
		}

		[Token(Token = "0x6002E2C")]
		[Address(RVA = "0x11AD90C", Offset = "0x11AD90C", VA = "0x11AD90C")]
		public void RemoveRenderIgnoreCamera(Camera camera)
		{
		}

		[Token(Token = "0x6002E2D")]
		[Address(RVA = "0x11AD964", Offset = "0x11AD964", VA = "0x11AD964")]
		public void SetEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6002E2E")]
		[Address(RVA = "0x11AD9E8", Offset = "0x11AD9E8", VA = "0x11AD9E8")]
		public void SetRotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x6002E2F")]
		[Address(RVA = "0x11ADC44", Offset = "0x11ADC44", VA = "0x11ADC44")]
		public void Rotate(Axis axis, float rotationAngle, ObjectRotationPivot rotationPivot)
		{
		}

		[Token(Token = "0x6002E30")]
		[Address(RVA = "0x11AE444", Offset = "0x11AE444", VA = "0x11AE444")]
		public void AppendObjects(List<GameObject> gameObjects, bool allowUndoRedo)
		{
		}

		[Token(Token = "0x6002E31")]
		[Address(RVA = "0x11AED5C", Offset = "0x11AED5C", VA = "0x11AED5C")]
		public void RemoveObjects(List<GameObject> gameObjects, bool allowUndoRedo)
		{
		}

		[Token(Token = "0x6002E32")]
		[Address(RVA = "0x11AF210", Offset = "0x11AF210", VA = "0x11AF210")]
		public void SetSelectedObjects(List<GameObject> gameObjects, bool allowUndoRedo)
		{
		}

		[Token(Token = "0x6002E33")]
		[Address(RVA = "0x11AF924", Offset = "0x11AF924", VA = "0x11AF924")]
		public void ClearSelection(bool allowUndoRedo)
		{
		}

		[Token(Token = "0x6002E34")]
		[Address(RVA = "0x11AFB94", Offset = "0x11AFB94", VA = "0x11AFB94")]
		public void Delete()
		{
		}

		[Token(Token = "0x6002E35")]
		[Address(RVA = "0x11B002C", Offset = "0x11B002C", VA = "0x11B002C")]
		public void ForceDelete()
		{
		}

		[Token(Token = "0x6002E36")]
		[Address(RVA = "0x11AFFE4", Offset = "0x11AFFE4", VA = "0x11AFFE4")]
		public bool CanBeDeleted()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E37")]
		[Address(RVA = "0x11B0488", Offset = "0x11B0488", VA = "0x11B0488")]
		public bool CanBeDuplicated()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E38")]
		[Address(RVA = "0x11AE7D0", Offset = "0x11AE7D0", VA = "0x11AE7D0")]
		public bool CanBeModifiedByAPI()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E39")]
		[Address(RVA = "0x11B04D8", Offset = "0x11B04D8", VA = "0x11B04D8")]
		public ObjectSelectionDuplicationResult Duplicate()
		{
			return null;
		}

		[Token(Token = "0x6002E3A")]
		[Address(RVA = "0x11AF7A4", Offset = "0x11AF7A4", VA = "0x11AF7A4")]
		public bool IsSelectionExactMatch(List<GameObject> gameObjectsToMatch)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E3B")]
		[Address(RVA = "0x11AE810", Offset = "0x11AE810", VA = "0x11AE810")]
		public bool IsObjectSelected(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E3C")]
		[Address(RVA = "0x11AE2F4", Offset = "0x11AE2F4", VA = "0x11AE2F4")]
		public AABB GetWorldAABB()
		{
			return default(AABB);
		}

		[Token(Token = "0x6002E3D")]
		[Address(RVA = "0x11B0844", Offset = "0x11B0844", VA = "0x11B0844")]
		public void Update_SystemCall()
		{
		}

		[Token(Token = "0x6002E3E")]
		[Address(RVA = "0x11B16DC", Offset = "0x11B16DC", VA = "0x11B16DC")]
		public void Render_SystemCall(Camera renderCamera)
		{
		}

		[Token(Token = "0x6002E3F")]
		[Address(RVA = "0x11B1078", Offset = "0x11B1078", VA = "0x11B1078")]
		private void OnInputDevicePickButtonDown()
		{
		}

		[Token(Token = "0x6002E40")]
		[Address(RVA = "0x11B12E8", Offset = "0x11B12E8", VA = "0x11B12E8")]
		private void OnInputDevicePickButtonUp()
		{
		}

		[Token(Token = "0x6002E41")]
		[Address(RVA = "0x11B1538", Offset = "0x11B1538", VA = "0x11B1538")]
		private void OnInputDeviceWasMoved()
		{
		}

		[Token(Token = "0x6002E42")]
		[Address(RVA = "0x11B2C38", Offset = "0x11B2C38", VA = "0x11B2C38")]
		private void PerformMultiSelect()
		{
		}

		[Token(Token = "0x6002E43")]
		[Address(RVA = "0x11B1F68", Offset = "0x11B1F68", VA = "0x11B1F68")]
		private void PerformClickSelect()
		{
		}

		[Token(Token = "0x6002E44")]
		[Address(RVA = "0x11B3AB0", Offset = "0x11B3AB0", VA = "0x11B3AB0")]
		private ObjectPreSelectCustomizeInfo DoPreSelectCustomize(List<GameObject> toBeSelected, ObjectSelectReason selectReason)
		{
			return null;
		}

		[Token(Token = "0x6002E45")]
		[Address(RVA = "0x11B3610", Offset = "0x11B3610", VA = "0x11B3610")]
		private List<GameObject> DoPreDeselectCustomize(List<GameObject> toBeDeselected, ObjectDeselectReason deselectReason)
		{
			return null;
		}

		[Token(Token = "0x6002E46")]
		[Address(RVA = "0x11B36E4", Offset = "0x11B36E4", VA = "0x11B36E4")]
		private List<GameObject> FilterByRestrictions(IEnumerable<GameObject> gameObjects, SelectRestrictFlags restrictFlags, ObjectSelectReason selectReason)
		{
			return null;
		}

		[Token(Token = "0x6002E47")]
		[Address(RVA = "0x11B3B7C", Offset = "0x11B3B7C", VA = "0x11B3B7C")]
		private List<GameObjectRayHit> FilterByRestrictions(List<GameObjectRayHit> objectHits, SelectRestrictFlags restrictFlags)
		{
			return null;
		}

		[Token(Token = "0x6002E48")]
		[Address(RVA = "0x11AE8BC", Offset = "0x11AE8BC", VA = "0x11AE8BC")]
		private bool CanSelectObject(GameObject gameObject, SelectRestrictFlags restrictFlags, ObjectSelectReason selectReason)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E49")]
		[Address(RVA = "0x11AEB8C", Offset = "0x11AEB8C", VA = "0x11AEB8C")]
		private void SelectObject(GameObject gameObject, ObjectSelectReason selectReason)
		{
		}

		[Token(Token = "0x6002E4A")]
		[Address(RVA = "0x11AF0CC", Offset = "0x11AF0CC", VA = "0x11AF0CC")]
		private void DeselectObject(GameObject gameObject, ObjectDeselectReason deselectReason)
		{
		}

		[Token(Token = "0x6002E4B")]
		[Address(RVA = "0x11B3DB8", Offset = "0x11B3DB8", VA = "0x11B3DB8")]
		private void ClearSelection(ObjectDeselectReason deselectReason)
		{
		}

		[Token(Token = "0x6002E4C")]
		[Address(RVA = "0x11AED28", Offset = "0x11AED28", VA = "0x11AED28")]
		private void OnSelectionChanged(ObjectSelectionChangedEventArgs args)
		{
		}

		[Token(Token = "0x6002E4D")]
		[Address(RVA = "0x11B0E24", Offset = "0x11B0E24", VA = "0x11B0E24")]
		private void RemoveNullAndInactiveObjectRefs()
		{
		}

		[Token(Token = "0x6002E4E")]
		[Address(RVA = "0x11B402C", Offset = "0x11B402C", VA = "0x11B402C")]
		private void OnUndoEnd(IUndoRedoAction action)
		{
		}

		[Token(Token = "0x6002E4F")]
		[Address(RVA = "0x11B453C", Offset = "0x11B453C", VA = "0x11B453C")]
		private void OnRedoEnd(IUndoRedoAction action)
		{
		}

		[Token(Token = "0x6002E50")]
		[Address(RVA = "0x11B40F8", Offset = "0x11B40F8", VA = "0x11B40F8")]
		private void HandleUndoRedo(ObjectSelectionSnapshot undoRedoSnapshot, bool isUndo)
		{
		}

		[Token(Token = "0x6002E51")]
		[Address(RVA = "0x11B4608", Offset = "0x11B4608", VA = "0x11B4608")]
		private void OnGrabSessionBegin()
		{
		}

		[Token(Token = "0x6002E52")]
		[Address(RVA = "0x11B4630", Offset = "0x11B4630", VA = "0x11B4630")]
		private void OnGrabSessionEnd()
		{
		}

		[Token(Token = "0x6002E53")]
		[Address(RVA = "0x11B4654", Offset = "0x11B4654", VA = "0x11B4654")]
		private void OnGridSnapSessionBegin()
		{
		}

		[Token(Token = "0x6002E54")]
		[Address(RVA = "0x11B467C", Offset = "0x11B467C", VA = "0x11B467C")]
		private void OnGridSnapSessionEnd()
		{
		}

		[Token(Token = "0x6002E55")]
		[Address(RVA = "0x11B46A0", Offset = "0x11B46A0", VA = "0x11B46A0")]
		private void OnObject2ObjectSnapSessionBegin()
		{
		}

		[Token(Token = "0x6002E56")]
		[Address(RVA = "0x11B46C8", Offset = "0x11B46C8", VA = "0x11B46C8")]
		private void OnObject2ObjectSnapSessionEnd()
		{
		}

		[Token(Token = "0x6002E57")]
		[Address(RVA = "0x11B46EC", Offset = "0x11B46EC", VA = "0x11B46EC")]
		public RTObjectSelection()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006AB")]
	public class RTObjectSelectionGizmos : MonoSingleton<RTObjectSelectionGizmos>, IObjectCollectionGizmoController
	{
		[Token(Token = "0x20006AC")]
		private class ObjectSelectionGizmo
		{
			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _id;

			[Token(Token = "0x4001DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Gizmo _gizmo;

			[Token(Token = "0x4001DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private BoxGizmo _boxScaleGizmo;

			[Token(Token = "0x4001DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ObjectTransformGizmo _transformGizmo;

			[Token(Token = "0x4001DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ObjectExtrudeGizmo _extrudeGizmo;

			[Token(Token = "0x4001DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool _isUsable;

			[Token(Token = "0x17000AD3")]
			public int Id
			{
				[Token(Token = "0x6002E96")]
				[Address(RVA = "0x11B958C", Offset = "0x11B958C", VA = "0x11B958C")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000AD4")]
			public Gizmo Gizmo
			{
				[Token(Token = "0x6002E97")]
				[Address(RVA = "0x11B9594", Offset = "0x11B9594", VA = "0x11B9594")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000AD5")]
			public BoxGizmo BoxScaleGizmo
			{
				[Token(Token = "0x6002E98")]
				[Address(RVA = "0x11B959C", Offset = "0x11B959C", VA = "0x11B959C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000AD6")]
			public bool IsBoxScaleGizmo
			{
				[Token(Token = "0x6002E99")]
				[Address(RVA = "0x11B95A4", Offset = "0x11B95A4", VA = "0x11B95A4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000AD7")]
			public ObjectTransformGizmo TransformGizmo
			{
				[Token(Token = "0x6002E9A")]
				[Address(RVA = "0x11B95B4", Offset = "0x11B95B4", VA = "0x11B95B4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000AD8")]
			public bool IsTransformGizmo
			{
				[Token(Token = "0x6002E9B")]
				[Address(RVA = "0x11B95BC", Offset = "0x11B95BC", VA = "0x11B95BC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000AD9")]
			public ObjectExtrudeGizmo ExtrudeGizmo
			{
				[Token(Token = "0x6002E9C")]
				[Address(RVA = "0x11B95CC", Offset = "0x11B95CC", VA = "0x11B95CC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000ADA")]
			public bool IsExtrudeGizmo
			{
				[Token(Token = "0x6002E9D")]
				[Address(RVA = "0x11B95D4", Offset = "0x11B95D4", VA = "0x11B95D4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000ADB")]
			public bool IsUsable
			{
				[Token(Token = "0x6002E9E")]
				[Address(RVA = "0x11B95E4", Offset = "0x11B95E4", VA = "0x11B95E4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002E9F")]
				[Address(RVA = "0x11B95EC", Offset = "0x11B95EC", VA = "0x11B95EC")]
				set
				{
				}
			}

			[Token(Token = "0x6002EA0")]
			[Address(RVA = "0x11B95F8", Offset = "0x11B95F8", VA = "0x11B95F8")]
			public ObjectSelectionGizmo(int id, Gizmo gizmo)
			{
			}
		}

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EditorToolbar _mainToolbar;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UniversalGizmoConfig _universalGizmoConfig;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GizmoCollectionEnabledStateSnapshot _gizmosEnabledStateSnapshot;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<ObjectSelectionGizmo> _allGizmos;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<ObjectTransformGizmo> _objectTransformGizmos;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _workGizmoId;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ObjectSelectionGizmo _workGizmo;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _areGizmosVisible;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private GizmoSpace _transformSpace;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GameObject _pivotObject;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IEnumerable<GameObject> _targetObjectCollection;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ObjectSelectionGizmosHotkeys _hotkeys;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private MoveGizmoSettings2D _moveGizmoSettings2D;

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private MoveGizmoSettings3D _moveGizmoSettings3D;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private MoveGizmoLookAndFeel2D _moveGizmoLookAndFeel2D;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private MoveGizmoLookAndFeel3D _moveGizmoLookAndFeel3D;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private MoveGizmoHotkeys _moveGizmoHotkeys;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ObjectTransformGizmoSettings _objectMoveGizmoSettings;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private RotationGizmoSettings3D _rotationGizmoSettings3D;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private RotationGizmoLookAndFeel3D _rotationGizmoLookAndFeel3D;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private RotationGizmoHotkeys _rotationGizmoHotkeys;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private ObjectTransformGizmoSettings _objectRotationGizmoSettings;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ScaleGizmoSettings3D _scaleGizmoSettings3D;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ScaleGizmoLookAndFeel3D _scaleGizmoLookAndFeel3D;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ScaleGizmoHotkeys _scaleGizmoHotkeys;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private ObjectTransformGizmoSettings _objectScaleGizmoSettings;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UniversalGizmoSettings2D _universalGizmoSettings2D;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private UniversalGizmoSettings3D _universalGizmoSettings3D;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private UniversalGizmoLookAndFeel2D _universalGizmoLookAndFeel2D;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private UniversalGizmoLookAndFeel3D _universalGizmoLookAndFeel3D;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private UniversalGizmoHotkeys _universalGizmoHotkeys;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private ObjectTransformGizmoSettings _objectUniversalGizmoSettings;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private BoxGizmoSettings3D _boxScaleGizmoSettings3D;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private BoxGizmoLookAndFeel3D _boxScaleGizmoLookAndFeel3D;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private BoxGizmoHotkeys _boxScaleGizmoHotkeys;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private ObjectExtrudeGizmoLookAndFeel3D _extrudeGizmoLookAndFeel3D;

		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private ObjectExtrudeGizmoHotkeys _extrudeGizmoHotkeys;

		[Token(Token = "0x17000AB6")]
		public bool AreGizmosVisible
		{
			[Token(Token = "0x6002E5E")]
			[Address(RVA = "0x11B51F8", Offset = "0x11B51F8", VA = "0x11B51F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000AB7")]
		public GameObject PivotObject
		{
			[Token(Token = "0x6002E5F")]
			[Address(RVA = "0x11B5200", Offset = "0x11B5200", VA = "0x11B5200")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AB8")]
		public Gizmo WorkGizmo
		{
			[Token(Token = "0x6002E60")]
			[Address(RVA = "0x11B5208", Offset = "0x11B5208", VA = "0x11B5208")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AB9")]
		public ObjectSelectionGizmosHotkeys Hotkeys
		{
			[Token(Token = "0x6002E61")]
			[Address(RVA = "0x11B5224", Offset = "0x11B5224", VA = "0x11B5224")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000ABA")]
		public MoveGizmoSettings2D MoveGizmoSettings2D
		{
			[Token(Token = "0x6002E62")]
			[Address(RVA = "0x11B522C", Offset = "0x11B522C", VA = "0x11B522C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000ABB")]
		public MoveGizmoSettings3D MoveGizmoSettings3D
		{
			[Token(Token = "0x6002E63")]
			[Address(RVA = "0x11B5234", Offset = "0x11B5234", VA = "0x11B5234")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000ABC")]
		public MoveGizmoLookAndFeel2D MoveGizmoLookAndFeel2D
		{
			[Token(Token = "0x6002E64")]
			[Address(RVA = "0x11B523C", Offset = "0x11B523C", VA = "0x11B523C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000ABD")]
		public MoveGizmoLookAndFeel3D MoveGizmoLookAndFeel3D
		{
			[Token(Token = "0x6002E65")]
			[Address(RVA = "0x11B5244", Offset = "0x11B5244", VA = "0x11B5244")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000ABE")]
		public MoveGizmoHotkeys MoveGizmoHotkeys
		{
			[Token(Token = "0x6002E66")]
			[Address(RVA = "0x11B524C", Offset = "0x11B524C", VA = "0x11B524C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000ABF")]
		public ObjectTransformGizmoSettings ObjectMoveGizmoSettings
		{
			[Token(Token = "0x6002E67")]
			[Address(RVA = "0x11B5254", Offset = "0x11B5254", VA = "0x11B5254")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AC0")]
		public RotationGizmoSettings3D RotationGizmoSettings3D
		{
			[Token(Token = "0x6002E68")]
			[Address(RVA = "0x11B525C", Offset = "0x11B525C", VA = "0x11B525C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AC1")]
		public RotationGizmoLookAndFeel3D RotationGizmoLookAndFeel3D
		{
			[Token(Token = "0x6002E69")]
			[Address(RVA = "0x11B5264", Offset = "0x11B5264", VA = "0x11B5264")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AC2")]
		public RotationGizmoHotkeys RotationGizmoHotkeys
		{
			[Token(Token = "0x6002E6A")]
			[Address(RVA = "0x11B526C", Offset = "0x11B526C", VA = "0x11B526C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AC3")]
		public ObjectTransformGizmoSettings ObjectRotationGizmoSettings
		{
			[Token(Token = "0x6002E6B")]
			[Address(RVA = "0x11B5274", Offset = "0x11B5274", VA = "0x11B5274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AC4")]
		public ScaleGizmoSettings3D ScaleGizmoSettings3D
		{
			[Token(Token = "0x6002E6C")]
			[Address(RVA = "0x11B527C", Offset = "0x11B527C", VA = "0x11B527C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AC5")]
		public ScaleGizmoLookAndFeel3D ScaleGizmoLookAndFeel3D
		{
			[Token(Token = "0x6002E6D")]
			[Address(RVA = "0x11B5284", Offset = "0x11B5284", VA = "0x11B5284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AC6")]
		public ScaleGizmoHotkeys ScaleGizmoHotkeys
		{
			[Token(Token = "0x6002E6E")]
			[Address(RVA = "0x11B528C", Offset = "0x11B528C", VA = "0x11B528C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AC7")]
		public ObjectTransformGizmoSettings ObjectScaleGizmoSettings
		{
			[Token(Token = "0x6002E6F")]
			[Address(RVA = "0x11B5294", Offset = "0x11B5294", VA = "0x11B5294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AC8")]
		public UniversalGizmoSettings2D UniversalGizmoSettings2D
		{
			[Token(Token = "0x6002E70")]
			[Address(RVA = "0x11B529C", Offset = "0x11B529C", VA = "0x11B529C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AC9")]
		public UniversalGizmoSettings3D UniversalGizmoSettings3D
		{
			[Token(Token = "0x6002E71")]
			[Address(RVA = "0x11B52A4", Offset = "0x11B52A4", VA = "0x11B52A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000ACA")]
		public UniversalGizmoLookAndFeel2D UniversalGizmoLookAndFeel2D
		{
			[Token(Token = "0x6002E72")]
			[Address(RVA = "0x11B52AC", Offset = "0x11B52AC", VA = "0x11B52AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000ACB")]
		public UniversalGizmoLookAndFeel3D UniversalGizmoLookAndFeel3D
		{
			[Token(Token = "0x6002E73")]
			[Address(RVA = "0x11B52B4", Offset = "0x11B52B4", VA = "0x11B52B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000ACC")]
		public UniversalGizmoHotkeys UniversalGizmoHotkeys
		{
			[Token(Token = "0x6002E74")]
			[Address(RVA = "0x11B52BC", Offset = "0x11B52BC", VA = "0x11B52BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000ACD")]
		public ObjectTransformGizmoSettings ObjectUniversalGizmoSettings
		{
			[Token(Token = "0x6002E75")]
			[Address(RVA = "0x11B52C4", Offset = "0x11B52C4", VA = "0x11B52C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000ACE")]
		public BoxGizmoSettings3D BoxScaleGizmoSettings3D
		{
			[Token(Token = "0x6002E76")]
			[Address(RVA = "0x11B52CC", Offset = "0x11B52CC", VA = "0x11B52CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000ACF")]
		public BoxGizmoLookAndFeel3D BoxScaleGizmoLookAndFeel3D
		{
			[Token(Token = "0x6002E77")]
			[Address(RVA = "0x11B52D4", Offset = "0x11B52D4", VA = "0x11B52D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AD0")]
		public BoxGizmoHotkeys BoxScaleGizmoHotkeys
		{
			[Token(Token = "0x6002E78")]
			[Address(RVA = "0x11B52DC", Offset = "0x11B52DC", VA = "0x11B52DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AD1")]
		public ObjectExtrudeGizmoLookAndFeel3D ExtrudeGizmoLookAndFeel3D
		{
			[Token(Token = "0x6002E79")]
			[Address(RVA = "0x11B52E4", Offset = "0x11B52E4", VA = "0x11B52E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AD2")]
		public ObjectExtrudeGizmoHotkeys ExtrudeGozmoHotkeys
		{
			[Token(Token = "0x6002E7A")]
			[Address(RVA = "0x11B52EC", Offset = "0x11B52EC", VA = "0x11B52EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E7B")]
		[Address(RVA = "0x11B52F4", Offset = "0x11B52F4", VA = "0x11B52F4", Slot = "4")]
		public void SetTargetObjectCollection(IEnumerable<GameObject> targetObjectCollection)
		{
		}

		[Token(Token = "0x6002E7C")]
		[Address(RVA = "0x11B52FC", Offset = "0x11B52FC", VA = "0x11B52FC")]
		public void Initialize_SystemCall()
		{
		}

		[Token(Token = "0x6002E7D")]
		[Address(RVA = "0x11B623C", Offset = "0x11B623C", VA = "0x11B623C")]
		public void SetGizmoUsable(int gizmoId, bool isUsable)
		{
		}

		[Token(Token = "0x6002E7E")]
		[Address(RVA = "0x11B641C", Offset = "0x11B641C", VA = "0x11B641C")]
		public Gizmo GetGizmoById(int gizmoId)
		{
			return null;
		}

		[Token(Token = "0x6002E7F")]
		[Address(RVA = "0x11B655C", Offset = "0x11B655C", VA = "0x11B655C")]
		public List<Gizmo> GetAllGizmos()
		{
			return null;
		}

		[Token(Token = "0x6002E80")]
		[Address(RVA = "0x11B67B0", Offset = "0x11B67B0", VA = "0x11B67B0")]
		public int GetGizmoId(Gizmo gizmo)
		{
			return default(int);
		}

		[Token(Token = "0x6002E81")]
		[Address(RVA = "0x11B68E4", Offset = "0x11B68E4", VA = "0x11B68E4")]
		public ObjectTransformGizmo GetTransformGizmoById(int id)
		{
			return null;
		}

		[Token(Token = "0x6002E82")]
		[Address(RVA = "0x11B60E8", Offset = "0x11B60E8", VA = "0x11B60E8")]
		public void SetTransformPivot(GizmoObjectTransformPivot transformPivot)
		{
		}

		[Token(Token = "0x6002E83")]
		[Address(RVA = "0x11B5F20", Offset = "0x11B5F20", VA = "0x11B5F20")]
		public void SetTransformSpace(GizmoSpace transformSpace)
		{
		}

		[Token(Token = "0x6002E84")]
		[Address(RVA = "0x11B6A34", Offset = "0x11B6A34", VA = "0x11B6A34")]
		public void SetWorkGizmo(int gizmoId)
		{
		}

		[Token(Token = "0x6002E85")]
		[Address(RVA = "0x11B6AFC", Offset = "0x11B6AFC", VA = "0x11B6AFC")]
		public void SetGizmosVisisble(bool visible)
		{
		}

		[Token(Token = "0x6002E86")]
		[Address(RVA = "0x11B6EC8", Offset = "0x11B6EC8", VA = "0x11B6EC8")]
		public void Update_SystemCall()
		{
		}

		[Token(Token = "0x6002E87")]
		[Address(RVA = "0x11B7098", Offset = "0x11B7098", VA = "0x11B7098")]
		private void OnObjectSelectionChanged(ObjectSelectionChangedEventArgs args)
		{
		}

		[Token(Token = "0x6002E88")]
		[Address(RVA = "0x11B7304", Offset = "0x11B7304", VA = "0x11B7304")]
		private void OnUndoRedo(IUndoRedoAction action)
		{
		}

		[Token(Token = "0x6002E89")]
		[Address(RVA = "0x11B7308", Offset = "0x11B7308", VA = "0x11B7308")]
		private void OnGizmoPostEnabled(Gizmo gizmo)
		{
		}

		[Token(Token = "0x6002E8A")]
		[Address(RVA = "0x11B6C7C", Offset = "0x11B6C7C", VA = "0x11B6C7C")]
		private void OnTargetObjectGroupUpdated()
		{
		}

		[Token(Token = "0x6002E8B")]
		[Address(RVA = "0x11B73BC", Offset = "0x11B73BC", VA = "0x11B73BC")]
		private void OnObjectSelectionManipSessionBegin(ObjectSelectionManipSession manipSession)
		{
		}

		[Token(Token = "0x6002E8C")]
		[Address(RVA = "0x11B7530", Offset = "0x11B7530", VA = "0x11B7530")]
		private void OnObjectSelectionManipSessionEnd(ObjectSelectionManipSession manipSession)
		{
		}

		[Token(Token = "0x6002E8D")]
		[Address(RVA = "0x11B754C", Offset = "0x11B754C", VA = "0x11B754C")]
		private void OnObjectSelectionRotated()
		{
		}

		[Token(Token = "0x6002E8E")]
		[Address(RVA = "0x11B7734", Offset = "0x11B7734", VA = "0x11B7734")]
		private void OnObjectSelectionEnabled()
		{
		}

		[Token(Token = "0x6002E8F")]
		[Address(RVA = "0x11B7750", Offset = "0x11B7750", VA = "0x11B7750")]
		private void OnObjectSelectionDisabled()
		{
		}

		[Token(Token = "0x6002E90")]
		[Address(RVA = "0x11B5DBC", Offset = "0x11B5DBC", VA = "0x11B5DBC")]
		private ObjectSelectionGizmo GetObjectSelectionGizmo(Gizmo gizmo)
		{
			return null;
		}

		[Token(Token = "0x6002E91")]
		[Address(RVA = "0x11B62B8", Offset = "0x11B62B8", VA = "0x11B62B8")]
		private ObjectSelectionGizmo GetObjectSelectionGizmo(int id)
		{
			return null;
		}

		[Token(Token = "0x6002E92")]
		[Address(RVA = "0x11B6460", Offset = "0x11B6460", VA = "0x11B6460")]
		private bool IsGizmoRegistered(int gizmoId)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E93")]
		[Address(RVA = "0x11B78C4", Offset = "0x11B78C4", VA = "0x11B78C4")]
		private bool IsGizmoRegistered(Gizmo gizmo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E94")]
		[Address(RVA = "0x11B58C4", Offset = "0x11B58C4", VA = "0x11B58C4")]
		private bool RegisterGizmo(int gizmoId, Gizmo gizmo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E95")]
		[Address(RVA = "0x11B79CC", Offset = "0x11B79CC", VA = "0x11B79CC")]
		public RTObjectSelectionGizmos()
		{
		}
	}
	[Token(Token = "0x20006B1")]
	public class ObjectSelectEntireHierarchy : Singleton<ObjectSelectEntireHierarchy>
	{
		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _isActive;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool _ignoreObjectGroups;

		[Token(Token = "0x17000ADC")]
		public bool IgnoreObjectGroups
		{
			[Token(Token = "0x6002EA9")]
			[Address(RVA = "0x11B97A8", Offset = "0x11B97A8", VA = "0x11B97A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002EAA")]
			[Address(RVA = "0x11B97B0", Offset = "0x11B97B0", VA = "0x11B97B0")]
			set
			{
			}
		}

		[Token(Token = "0x6002EAB")]
		[Address(RVA = "0x11B97BC", Offset = "0x11B97BC", VA = "0x11B97BC")]
		public void SetActive(bool isActive)
		{
		}

		[Token(Token = "0x6002EAC")]
		[Address(RVA = "0x11B99E8", Offset = "0x11B99E8", VA = "0x11B99E8")]
		private void OnPreSelectCustomize(ObjectPreSelectCustomizeInfo customizeInfo, List<GameObject> toBeSelected)
		{
		}

		[Token(Token = "0x6002EAD")]
		[Address(RVA = "0x11B9FBC", Offset = "0x11B9FBC", VA = "0x11B9FBC")]
		private void OnPreDeselectCustomize(ObjectPreDeselectCustomizeInfo customizeInfo, List<GameObject> toBeDeselected)
		{
		}

		[Token(Token = "0x6002EAE")]
		[Address(RVA = "0x11B9EA4", Offset = "0x11B9EA4", VA = "0x11B9EA4")]
		private Transform GetFurthestParentNotGroup(GameObject gameObj)
		{
			return null;
		}

		[Token(Token = "0x6002EAF")]
		[Address(RVA = "0x11BA478", Offset = "0x11BA478", VA = "0x11BA478")]
		public ObjectSelectEntireHierarchy()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006B2")]
	public class UniversalGizmoConfig : Settings
	{
		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private UniversalGizmoSettingsCategory _inheritCategory;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UniversalGizmoSettingsType _inheritType;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private UniversalGizmoSettingsCategory _displayCategory;

		[Token(Token = "0x17000ADD")]
		public UniversalGizmoSettingsCategory InheritCategory
		{
			[Token(Token = "0x6002EB0")]
			[Address(RVA = "0x11BA4E4", Offset = "0x11BA4E4", VA = "0x11BA4E4")]
			get
			{
				return default(UniversalGizmoSettingsCategory);
			}
			[Token(Token = "0x6002EB1")]
			[Address(RVA = "0x11BA4EC", Offset = "0x11BA4EC", VA = "0x11BA4EC")]
			set
			{
			}
		}

		[Token(Token = "0x17000ADE")]
		public UniversalGizmoSettingsType InheritType
		{
			[Token(Token = "0x6002EB2")]
			[Address(RVA = "0x11BA4F4", Offset = "0x11BA4F4", VA = "0x11BA4F4")]
			get
			{
				return default(UniversalGizmoSettingsType);
			}
			[Token(Token = "0x6002EB3")]
			[Address(RVA = "0x11BA4FC", Offset = "0x11BA4FC", VA = "0x11BA4FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000ADF")]
		public UniversalGizmoSettingsCategory DisplayCategory
		{
			[Token(Token = "0x6002EB4")]
			[Address(RVA = "0x11BA504", Offset = "0x11BA504", VA = "0x11BA504")]
			get
			{
				return default(UniversalGizmoSettingsCategory);
			}
			[Token(Token = "0x6002EB5")]
			[Address(RVA = "0x11BA50C", Offset = "0x11BA50C", VA = "0x11BA50C")]
			set
			{
			}
		}

		[Token(Token = "0x6002EB6")]
		[Address(RVA = "0x11BA514", Offset = "0x11BA514", VA = "0x11BA514")]
		public UniversalGizmoConfig()
		{
		}
	}
}
namespace PrimAlgorithm
{
	[Token(Token = "0x20006B3")]
	public class Graph<T>
	{
		[Token(Token = "0x20006B4")]
		public class Node
		{
			[Token(Token = "0x4001DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private List<Edge> edges_;

			[Token(Token = "0x4001DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T context_;

			[Token(Token = "0x17000AE2")]
			public T context
			{
				[Token(Token = "0x6002EC0")]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x17000AE3")]
			public List<Edge> edges
			{
				[Token(Token = "0x6002EC1")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002EC2")]
			public Node(T context)
			{
			}
		}

		[Token(Token = "0x20006B5")]
		public class Edge
		{
			[Token(Token = "0x4001DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Node to_;

			[Token(Token = "0x4001DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int weight_;

			[Token(Token = "0x17000AE4")]
			public Node to
			{
				[Token(Token = "0x6002EC3")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000AE5")]
			public int weight
			{
				[Token(Token = "0x6002EC4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002EC5")]
			public Edge(Node to, int weight)
			{
			}
		}

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Node> nodes_;

		[Token(Token = "0x17000AE0")]
		public int n
		{
			[Token(Token = "0x6002EB7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000AE1")]
		public List<Node> nodes
		{
			[Token(Token = "0x6002EB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EB9")]
		public Graph(IEnumerable<T> initialize_list)
		{
		}

		[Token(Token = "0x6002EBA")]
		public Graph(Graph<T> othr)
		{
		}

		[Token(Token = "0x6002EBB")]
		public Node AddVertex(T context)
		{
			return null;
		}

		[Token(Token = "0x6002EBC")]
		public Node FindVertex(T context)
		{
			return null;
		}

		[Token(Token = "0x6002EBD")]
		public void CopyFrom(Graph<T> othr)
		{
		}

		[Token(Token = "0x6002EBE")]
		public bool Contains(Node node)
		{
			return default(bool);
		}

		[Token(Token = "0x6002EBF")]
		public void Remove(Node node)
		{
		}
	}
	[Token(Token = "0x20006B8")]
	internal class Prim<T>
	{
		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly int kInfinite;

		[Token(Token = "0x6002ECA")]
		public void prim(Graph<T> g, Graph<T>.Node r, ref Dictionary<Graph<T>.Node, Graph<T>.Node> tree)
		{
		}

		[Token(Token = "0x6002ECB")]
		private Graph<T>.Node deleteMin(Graph<T> Q, Dictionary<Graph<T>.Node, int> d)
		{
			return null;
		}

		[Token(Token = "0x6002ECC")]
		public Prim()
		{
		}
	}
}
namespace PrimAlgorithm.GraphController
{
	[Token(Token = "0x20006B9")]
	public static class Controller
	{
		[Token(Token = "0x6002ECD")]
		public static void SetEdge<T>(this Graph<T> self, T a, T b, int weight)
		{
		}

		[Token(Token = "0x6002ECE")]
		public static void AddEdge<T>(this Graph<T>.Node self, Graph<T>.Node to, int weight)
		{
		}

		[Token(Token = "0x6002ECF")]
		public static List<Graph<T>.Node> GetNeighbors<T>(this Graph<T>.Node self)
		{
			return null;
		}

		[Token(Token = "0x6002ED0")]
		public static int GetWeight<T>(this Graph<T>.Node self, Graph<T>.Node b)
		{
			return default(int);
		}
	}
}
namespace InGameCodeEditor
{
	[Serializable]
	[Token(Token = "0x20006BB")]
	public class AutoIndent
	{
		[Token(Token = "0x20006BC")]
		public enum IndentMode
		{
			[Token(Token = "0x4001DD3")]
			None,
			[Token(Token = "0x4001DD4")]
			AutoTab,
			[Token(Token = "0x4001DD5")]
			AutoTabContextual
		}

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StringBuilder indentBuilder;

		[NonSerialized]
		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string indentDecreaseString;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IndentMode autoIndentMode;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool allowAutoIndent;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public char indentIncreaseCharacter;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public char indentDecreaseCharacter;

		[Token(Token = "0x17000AE6")]
		public string IndentDecreaseString
		{
			[Token(Token = "0x6002ED4")]
			[Address(RVA = "0x11BA524", Offset = "0x11BA524", VA = "0x11BA524")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002ED5")]
		[Address(RVA = "0x11BA56C", Offset = "0x11BA56C", VA = "0x11BA56C")]
		public string GetAutoIndentedFormattedString(string indentSection, int currentIndent, out int caretPosition)
		{
			return null;
		}

		[Token(Token = "0x6002ED6")]
		[Address(RVA = "0x11BA860", Offset = "0x11BA860", VA = "0x11BA860")]
		public int GetAutoIndentLevel(string inputString, int startIndex, int endIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6002ED7")]
		[Address(RVA = "0x11BA7CC", Offset = "0x11BA7CC", VA = "0x11BA7CC")]
		private void AppendIndentString(int amount)
		{
		}

		[Token(Token = "0x6002ED8")]
		[Address(RVA = "0x11BA908", Offset = "0x11BA908", VA = "0x11BA908")]
		public AutoIndent()
		{
		}
	}
	[Token(Token = "0x20006BD")]
	public class CodeEditor : MonoBehaviour
	{
		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly KeyCode[] focusKeys;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static StringBuilder highlightedBuilder;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static StringBuilder lineBuilder;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static MethodInfo scrollBarUpdateFix;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputStringLexer lexer;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform inputTextTransform;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform lineHighlightTransform;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int lineCount;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int currentLine;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int currentColumn;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int currentIndent;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string lastText;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool delayedRefresh;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float lastScrollValue;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool lineHighlightLocked;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[Header("Elements")]
		private TMP_InputField inputField;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextMeshProUGUI inputText;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshProUGUI inputHighlightText;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshProUGUI lineText;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Image background;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Image lineHighlight;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Image lineNumberBackground;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Image scrollbar;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		[Header("Themes")]
		private CodeEditorTheme editorTheme;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private CodeLanguageTheme languageTheme;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[Header("Options")]
		private bool lineNumbers;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private int lineNumbersSize;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[Header("TMP Compatibility")]
		[SerializeField]
		private bool applyLineOffsetFix;

		[Token(Token = "0x17000AE7")]
		public CodeEditorTheme EditorTheme
		{
			[Token(Token = "0x6002EDA")]
			[Address(RVA = "0x11BA9A0", Offset = "0x11BA9A0", VA = "0x11BA9A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002EDB")]
			[Address(RVA = "0x11BA9A8", Offset = "0x11BA9A8", VA = "0x11BA9A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000AE8")]
		public CodeLanguageTheme LanguageTheme
		{
			[Token(Token = "0x6002EDC")]
			[Address(RVA = "0x11BAC00", Offset = "0x11BAC00", VA = "0x11BAC00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002EDD")]
			[Address(RVA = "0x11BAC08", Offset = "0x11BAC08", VA = "0x11BAC08")]
			set
			{
			}
		}

		[Token(Token = "0x17000AE9")]
		public TMP_InputField InputField
		{
			[Token(Token = "0x6002EDE")]
			[Address(RVA = "0x11BACCC", Offset = "0x11BACCC", VA = "0x11BACCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AEA")]
		public int LineCount
		{
			[Token(Token = "0x6002EDF")]
			[Address(RVA = "0x11BACD4", Offset = "0x11BACD4", VA = "0x11BACD4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000AEB")]
		public int CurrentLine
		{
			[Token(Token = "0x6002EE0")]
			[Address(RVA = "0x11BACDC", Offset = "0x11BACDC", VA = "0x11BACDC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000AEC")]
		public int CurrentColumn
		{
			[Token(Token = "0x6002EE1")]
			[Address(RVA = "0x11BACE4", Offset = "0x11BACE4", VA = "0x11BACE4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000AED")]
		public int CurrentIndent
		{
			[Token(Token = "0x6002EE2")]
			[Address(RVA = "0x11BACEC", Offset = "0x11BACEC", VA = "0x11BACEC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000AEE")]
		public string Text
		{
			[Token(Token = "0x6002EE3")]
			[Address(RVA = "0x11BACF4", Offset = "0x11BACF4", VA = "0x11BACF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002EE4")]
			[Address(RVA = "0x11BAD10", Offset = "0x11BAD10", VA = "0x11BAD10")]
			set
			{
			}
		}

		[Token(Token = "0x17000AEF")]
		public string HighlightedText
		{
			[Token(Token = "0x6002EE5")]
			[Address(RVA = "0x11BAFA4", Offset = "0x11BAFA4", VA = "0x11BAFA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AF0")]
		public bool LineNumbers
		{
			[Token(Token = "0x6002EE6")]
			[Address(RVA = "0x11BAFC8", Offset = "0x11BAFC8", VA = "0x11BAFC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002EE7")]
			[Address(RVA = "0x11BAFD0", Offset = "0x11BAFD0", VA = "0x11BAFD0")]
			set
			{
			}
		}

		[Token(Token = "0x17000AF1")]
		public int LineNumbersSize
		{
			[Token(Token = "0x6002EE8")]
			[Address(RVA = "0x11BB170", Offset = "0x11BB170", VA = "0x11BB170")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002EE9")]
			[Address(RVA = "0x11BB178", Offset = "0x11BB178", VA = "0x11BB178")]
			set
			{
			}
		}

		[Token(Token = "0x6002EEA")]
		[Address(RVA = "0x11BB188", Offset = "0x11BB188", VA = "0x11BB188")]
		public void Awake()
		{
		}

		[Token(Token = "0x6002EEB")]
		[Address(RVA = "0x11BB400", Offset = "0x11BB400", VA = "0x11BB400")]
		public void Start()
		{
		}

		[Token(Token = "0x6002EEC")]
		[Address(RVA = "0x11BB4D4", Offset = "0x11BB4D4", VA = "0x11BB4D4")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6002EED")]
		[Address(RVA = "0x11BBE28", Offset = "0x11BBE28", VA = "0x11BBE28")]
		public void Refresh(bool forceUpdate = false, bool updateLineOnly = true)
		{
		}

		[Token(Token = "0x6002EEE")]
		[Address(RVA = "0x11BBFAC", Offset = "0x11BBFAC", VA = "0x11BBFAC")]
		public void SetLineHighlight(int lineNumber, bool lockLineHighlight)
		{
		}

		[Token(Token = "0x6002EEF")]
		[Address(RVA = "0x11BC0B4", Offset = "0x11BC0B4", VA = "0x11BC0B4")]
		public void LockLineHighlight()
		{
		}

		[Token(Token = "0x6002EF0")]
		[Address(RVA = "0x11BC0C0", Offset = "0x11BC0C0", VA = "0x11BC0C0")]
		public void UnlockLineHighlight()
		{
		}

		[Token(Token = "0x6002EF1")]
		[Address(RVA = "0x11BBE50", Offset = "0x11BBE50", VA = "0x11BBE50")]
		private void DisplayedContentChanged(string newText, bool forceUpdate, bool updateLineOnly)
		{
		}

		[Token(Token = "0x6002EF2")]
		[Address(RVA = "0x11BC2A0", Offset = "0x11BC2A0", VA = "0x11BC2A0")]
		private void UpdateCurrentLineNumbers()
		{
		}

		[Token(Token = "0x6002EF3")]
		[Address(RVA = "0x11BC0C8", Offset = "0x11BC0C8", VA = "0x11BC0C8")]
		private void UpdateCurrentLineColumnIndent()
		{
		}

		[Token(Token = "0x6002EF4")]
		[Address(RVA = "0x11BB7A4", Offset = "0x11BB7A4", VA = "0x11BB7A4")]
		private void UpdateCurrentLineHighlight()
		{
		}

		[Token(Token = "0x6002EF5")]
		[Address(RVA = "0x11BC568", Offset = "0x11BC568", VA = "0x11BC568")]
		private string SyntaxHighlightContent(string inputText)
		{
			return null;
		}

		[Token(Token = "0x6002EF6")]
		[Address(RVA = "0x11BB8AC", Offset = "0x11BB8AC", VA = "0x11BB8AC")]
		private void AutoIndentCaret(bool isClosingToken = false)
		{
		}

		[Token(Token = "0x6002EF7")]
		[Address(RVA = "0x11BCC04", Offset = "0x11BCC04", VA = "0x11BCC04")]
		private string GetAutoIndentTab(int amount)
		{
			return null;
		}

		[Token(Token = "0x6002EF8")]
		[Address(RVA = "0x11BA9C4", Offset = "0x11BA9C4", VA = "0x11BA9C4")]
		private void ApplyTheme()
		{
		}

		[Token(Token = "0x6002EF9")]
		[Address(RVA = "0x11BAC24", Offset = "0x11BAC24", VA = "0x11BAC24")]
		private void ApplyLanguage()
		{
		}

		[Token(Token = "0x6002EFA")]
		[Address(RVA = "0x11BB274", Offset = "0x11BB274", VA = "0x11BB274")]
		private bool AllReferencesAssigned()
		{
			return default(bool);
		}

		[Token(Token = "0x6002EFB")]
		[Address(RVA = "0x11BD794", Offset = "0x11BD794", VA = "0x11BD794")]
		public CodeEditor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006BE")]
	[CreateAssetMenu(fileName = "Code Editor Theme", menuName = "InGame Code Editor/Code Editor Theme")]
	public class CodeEditorTheme : ScriptableObject
	{
		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color caretColor;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color textColor;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color backgroundColor;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color lineHighlightColor;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color lineNumberBackgroundColor;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color lineNumberTextColor;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Color scrollbarColor;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool allowSyntaxHighlighting;

		[Token(Token = "0x17000AF2")]
		public static CodeEditorTheme DefaultTheme
		{
			[Token(Token = "0x6002EFD")]
			[Address(RVA = "0x11BB494", Offset = "0x11BB494", VA = "0x11BB494")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002EFE")]
		[Address(RVA = "0x11BD9FC", Offset = "0x11BD9FC", VA = "0x11BD9FC")]
		public CodeEditorTheme()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006BF")]
	[CreateAssetMenu(fileName = "Code Language Theme", menuName = "InGame Code Editor/Code Language Theme")]
	public class CodeLanguageTheme : ScriptableObject
	{
		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly StringBuilder sharedBuilder;

		[NonSerialized]
		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private char[] delimiterSymbolCache;

		[NonSerialized]
		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MatchLexer[] matchers;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string languageName;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[TextArea]
		[Tooltip("Any special characters that can act as delimiters when they are immediatley before or after a keyword. Single characters only separated by a space")]
		public string delimiterSymbols;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public KeywordGroupMatch[] keywordGroups;

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SymbolGroupMatch symbolGroup;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public NumberGroupMatch numberGroup;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CommentGroupMatch commentGroup;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public LiteralGroupMatch literalGroup;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AutoIndent autoIndent;

		[Token(Token = "0x17000AF3")]
		internal char[] DelimiterSymbols
		{
			[Token(Token = "0x6002EFF")]
			[Address(RVA = "0x11BCC80", Offset = "0x11BCC80", VA = "0x11BCC80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AF4")]
		internal MatchLexer[] Matchers
		{
			[Token(Token = "0x6002F00")]
			[Address(RVA = "0x11BCDD0", Offset = "0x11BCDD0", VA = "0x11BCDD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F01")]
		[Address(RVA = "0x11BDA50", Offset = "0x11BDA50", VA = "0x11BDA50")]
		internal void Invalidate()
		{
		}

		[Token(Token = "0x6002F02")]
		[Address(RVA = "0x11BDB04", Offset = "0x11BDB04", VA = "0x11BDB04")]
		public CodeLanguageTheme()
		{
		}
	}
}
namespace InGameCodeEditor.Lexer
{
	[Serializable]
	[Token(Token = "0x20006C0")]
	public sealed class CommentGroupMatch : MatchLexer
	{
		[Token(Token = "0x20006C1")]
		[CompilerGenerated]
		private sealed class <get_SpecialStartCharacters>d__11 : IEnumerable<char>, IEnumerable, IEnumerator<char>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private char <>2__current;

			[Token(Token = "0x4001E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CommentGroupMatch <>4__this;

			[Token(Token = "0x17000AF9")]
			private char System.Collections.Generic.IEnumerator<System.Char>.Current
			{
				[Token(Token = "0x6002F12")]
				[Address(RVA = "0x11BE4BC", Offset = "0x11BE4BC", VA = "0x11BE4BC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x17000AFA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F14")]
				[Address(RVA = "0x11BE504", Offset = "0x11BE504", VA = "0x11BE504", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F0F")]
			[Address(RVA = "0x11BDCF0", Offset = "0x11BDCF0", VA = "0x11BDCF0")]
			[DebuggerHidden]
			public <get_SpecialStartCharacters>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002F10")]
			[Address(RVA = "0x11BE3E8", Offset = "0x11BE3E8", VA = "0x11BE3E8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F11")]
			[Address(RVA = "0x11BE3EC", Offset = "0x11BE3EC", VA = "0x11BE3EC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F13")]
			[Address(RVA = "0x11BE4C4", Offset = "0x11BE4C4", VA = "0x11BE4C4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002F15")]
			[Address(RVA = "0x11BE560", Offset = "0x11BE560", VA = "0x11BE560", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<char> System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002F16")]
			[Address(RVA = "0x11BE60C", Offset = "0x11BE60C", VA = "0x11BE60C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20006C2")]
		[CompilerGenerated]
		private sealed class <get_SpecialEndCharacters>d__13 : IEnumerable<char>, IEnumerable, IEnumerator<char>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private char <>2__current;

			[Token(Token = "0x4001E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CommentGroupMatch <>4__this;

			[Token(Token = "0x17000AFB")]
			private char System.Collections.Generic.IEnumerator<System.Char>.Current
			{
				[Token(Token = "0x6002F1A")]
				[Address(RVA = "0x11BE69C", Offset = "0x11BE69C", VA = "0x11BE69C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x17000AFC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F1C")]
				[Address(RVA = "0x11BE6E4", Offset = "0x11BE6E4", VA = "0x11BE6E4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F17")]
			[Address(RVA = "0x11BDDA8", Offset = "0x11BDDA8", VA = "0x11BDDA8")]
			[DebuggerHidden]
			public <get_SpecialEndCharacters>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002F18")]
			[Address(RVA = "0x11BE610", Offset = "0x11BE610", VA = "0x11BE610", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F19")]
			[Address(RVA = "0x11BE614", Offset = "0x11BE614", VA = "0x11BE614", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F1B")]
			[Address(RVA = "0x11BE6A4", Offset = "0x11BE6A4", VA = "0x11BE6A4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002F1D")]
			[Address(RVA = "0x11BE740", Offset = "0x11BE740", VA = "0x11BE740", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<char> System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002F1E")]
			[Address(RVA = "0x11BE7EC", Offset = "0x11BE7EC", VA = "0x11BE7EC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[NonSerialized]
		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string htmlColor;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The special string used to denote the start of a line comment")]
		public string lineCommentStart;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("The special string used to denote the start of a block comment")]
		public string blockCommentStart;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The special string used to denote the end of a block comment")]
		public string blockCommentEnd;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("The color that all comments will be highlighted with")]
		public Color highlightColor;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Should line comments be matched before block comments")]
		public bool lineCommentHasPresedence;

		[Token(Token = "0x17000AF5")]
		public bool HasCommentHighlighting
		{
			[Token(Token = "0x6002F04")]
			[Address(RVA = "0x11BDB90", Offset = "0x11BDB90", VA = "0x11BDB90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000AF6")]
		public override string HTMLColor
		{
			[Token(Token = "0x6002F05")]
			[Address(RVA = "0x11BDBCC", Offset = "0x11BDBCC", VA = "0x11BDBCC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AF7")]
		public override IEnumerable<char> SpecialStartCharacters
		{
			[Token(Token = "0x6002F06")]
			[Address(RVA = "0x11BDC6C", Offset = "0x11BDC6C", VA = "0x11BDC6C", Slot = "5")]
			[IteratorStateMachine(typeof(<get_SpecialStartCharacters>d__11))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000AF8")]
		public override IEnumerable<char> SpecialEndCharacters
		{
			[Token(Token = "0x6002F07")]
			[Address(RVA = "0x11BDD24", Offset = "0x11BDD24", VA = "0x11BDD24", Slot = "6")]
			[IteratorStateMachine(typeof(<get_SpecialEndCharacters>d__13))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F08")]
		[Address(RVA = "0x11BDDDC", Offset = "0x11BDDDC", VA = "0x11BDDDC", Slot = "8")]
		public override void Invalidate()
		{
		}

		[Token(Token = "0x6002F09")]
		[Address(RVA = "0x11BDDE8", Offset = "0x11BDDE8", VA = "0x11BDDE8", Slot = "7")]
		public override bool IsImplicitMatch(ILexer lexer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F0A")]
		[Address(RVA = "0x11BDE4C", Offset = "0x11BDE4C", VA = "0x11BDE4C")]
		private bool IsLineCommentMatch(ILexer lexer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F0B")]
		[Address(RVA = "0x11BE024", Offset = "0x11BE024", VA = "0x11BE024")]
		private bool IsBlockCommentMatch(ILexer lexer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F0C")]
		[Address(RVA = "0x11BE1A0", Offset = "0x11BE1A0", VA = "0x11BE1A0")]
		private bool IsEndLineOrEndFile(ILexer lexer, char character)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F0D")]
		[Address(RVA = "0x11BE268", Offset = "0x11BE268", VA = "0x11BE268")]
		private bool IsEndLineOrString(ILexer lexer, string endString)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F0E")]
		[Address(RVA = "0x11BE3C4", Offset = "0x11BE3C4", VA = "0x11BE3C4")]
		public CommentGroupMatch()
		{
		}
	}
	[Token(Token = "0x20006C3")]
	public enum SpecialCharacterPosition
	{
		[Token(Token = "0x4001E14")]
		Start,
		[Token(Token = "0x4001E15")]
		End
	}
	[Token(Token = "0x20006C4")]
	public interface ILexer
	{
		[Token(Token = "0x17000AFD")]
		bool EndOfStream
		{
			[Token(Token = "0x6002F1F")]
			get;
		}

		[Token(Token = "0x17000AFE")]
		char Previous
		{
			[Token(Token = "0x6002F20")]
			get;
		}

		[Token(Token = "0x6002F21")]
		char ReadNext();

		[Token(Token = "0x6002F22")]
		void Rollback(int amount = -1);

		[Token(Token = "0x6002F23")]
		void Commit();

		[Token(Token = "0x6002F24")]
		bool IsSpecialSymbol(char character, SpecialCharacterPosition position = SpecialCharacterPosition.Start);
	}
	[Token(Token = "0x20006C5")]
	internal struct InputStringMatchInfo
	{
		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int startIndex;

		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int endIndex;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string htmlColor;
	}
	[Token(Token = "0x20006C6")]
	internal class InputStringLexer : ILexer
	{
		[Token(Token = "0x20006C7")]
		[CompilerGenerated]
		private sealed class <LexInputString>d__13 : IEnumerable<InputStringMatchInfo>, IEnumerable, IEnumerator<InputStringMatchInfo>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private InputStringMatchInfo <>2__current;

			[Token(Token = "0x4001E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string input;

			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string <>3__input;

			[Token(Token = "0x4001E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public InputStringLexer <>4__this;

			[Token(Token = "0x4001E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private bool <didMatchLexer>5__2;

			[Token(Token = "0x17000B01")]
			private InputStringMatchInfo System.Collections.Generic.IEnumerator<InGameCodeEditor.Lexer.InputStringMatchInfo>.Current
			{
				[Token(Token = "0x6002F32")]
				[Address(RVA = "0x11BED1C", Offset = "0x11BED1C", VA = "0x11BED1C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(InputStringMatchInfo);
				}
			}

			[Token(Token = "0x17000B02")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F34")]
				[Address(RVA = "0x11BED68", Offset = "0x11BED68", VA = "0x11BED68", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F2F")]
			[Address(RVA = "0x11BE820", Offset = "0x11BE820", VA = "0x11BE820")]
			[DebuggerHidden]
			public <LexInputString>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002F30")]
			[Address(RVA = "0x11BEA14", Offset = "0x11BEA14", VA = "0x11BEA14", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F31")]
			[Address(RVA = "0x11BEA18", Offset = "0x11BEA18", VA = "0x11BEA18", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F33")]
			[Address(RVA = "0x11BED28", Offset = "0x11BED28", VA = "0x11BED28", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002F35")]
			[Address(RVA = "0x11BEDC4", Offset = "0x11BEDC4", VA = "0x11BEDC4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<InputStringMatchInfo> System.Collections.Generic.IEnumerable<InGameCodeEditor.Lexer.InputStringMatchInfo>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002F36")]
			[Address(RVA = "0x11BEE80", Offset = "0x11BEE80", VA = "0x11BEE80", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string inputString;

		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MatchLexer[] matchers;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<char> specialStartSymbols;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<char> specialEndSymbols;

		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private char current;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private char previous;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int currentIndex;

		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int currentLookaheadIndex;

		[Token(Token = "0x17000AFF")]
		public bool EndOfStream
		{
			[Token(Token = "0x6002F25")]
			[Address(RVA = "0x11BE7F0", Offset = "0x11BE7F0", VA = "0x11BE7F0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000B00")]
		public char Previous
		{
			[Token(Token = "0x6002F26")]
			[Address(RVA = "0x11BE818", Offset = "0x11BE818", VA = "0x11BE818", Slot = "5")]
			get
			{
				return default(char);
			}
		}

		[Token(Token = "0x6002F27")]
		[Address(RVA = "0x11BD030", Offset = "0x11BD030", VA = "0x11BD030")]
		public void UseMatchers(char[] delimiters, MatchLexer[] matchers)
		{
		}

		[Token(Token = "0x6002F28")]
		[Address(RVA = "0x11BCB64", Offset = "0x11BCB64", VA = "0x11BCB64")]
		[IteratorStateMachine(typeof(<LexInputString>d__13))]
		public IEnumerable<InputStringMatchInfo> LexInputString(string input)
		{
			return null;
		}

		[Token(Token = "0x6002F29")]
		[Address(RVA = "0x11BE854", Offset = "0x11BE854", VA = "0x11BE854", Slot = "6")]
		public char ReadNext()
		{
			return default(char);
		}

		[Token(Token = "0x6002F2A")]
		[Address(RVA = "0x11BE8A8", Offset = "0x11BE8A8", VA = "0x11BE8A8", Slot = "7")]
		public void Rollback(int amount = -1)
		{
		}

		[Token(Token = "0x6002F2B")]
		[Address(RVA = "0x11BE914", Offset = "0x11BE914", VA = "0x11BE914", Slot = "8")]
		public void Commit()
		{
		}

		[Token(Token = "0x6002F2C")]
		[Address(RVA = "0x11BE920", Offset = "0x11BE920", VA = "0x11BE920", Slot = "9")]
		public bool IsSpecialSymbol(char character, SpecialCharacterPosition position = SpecialCharacterPosition.Start)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F2D")]
		[Address(RVA = "0x11BE990", Offset = "0x11BE990", VA = "0x11BE990")]
		private void ReadWhiteSpace()
		{
		}

		[Token(Token = "0x6002F2E")]
		[Address(RVA = "0x11BD814", Offset = "0x11BD814", VA = "0x11BD814")]
		public InputStringLexer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006C8")]
	public sealed class KeywordGroupMatch : MatchLexer
	{
		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<string> shortlist;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Stack<string> removeList;

		[NonSerialized]
		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string[] keywordCache;

		[NonSerialized]
		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string htmlColor;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public string group;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[TextArea]
		[Tooltip("A number of keywords that will be highlighted. Word strings recommended (no numbers or symbols) separated by a space")]
		public string keywords;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Tooltip("The color that all keywords in this group will be highlighted with")]
		public Color highlightColor;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Should the keyword match be case sensitive")]
		public bool caseSensitive;

		[Token(Token = "0x17000B03")]
		public bool HasKeywordHighlighting
		{
			[Token(Token = "0x6002F37")]
			[Address(RVA = "0x11BEE84", Offset = "0x11BEE84", VA = "0x11BEE84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000B04")]
		public override string HTMLColor
		{
			[Token(Token = "0x6002F38")]
			[Address(RVA = "0x11BEEA4", Offset = "0x11BEEA4", VA = "0x11BEEA4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F39")]
		[Address(RVA = "0x11BEF44", Offset = "0x11BEF44", VA = "0x11BEF44", Slot = "8")]
		public override void Invalidate()
		{
		}

		[Token(Token = "0x6002F3A")]
		[Address(RVA = "0x11BEF50", Offset = "0x11BEF50", VA = "0x11BEF50", Slot = "7")]
		public override bool IsImplicitMatch(ILexer lexer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F3B")]
		[Address(RVA = "0x11BF894", Offset = "0x11BF894", VA = "0x11BF894")]
		private void RemoveLongStrings(int length)
		{
		}

		[Token(Token = "0x6002F3C")]
		[Address(RVA = "0x11BF764", Offset = "0x11BF764", VA = "0x11BF764")]
		private void BuildKeywordCache()
		{
		}

		[Token(Token = "0x6002F3D")]
		[Address(RVA = "0x11BF7AC", Offset = "0x11BF7AC", VA = "0x11BF7AC")]
		private bool CompareChar(char a, char b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F3E")]
		[Address(RVA = "0x11BFB24", Offset = "0x11BFB24", VA = "0x11BFB24")]
		public KeywordGroupMatch()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006C9")]
	public sealed class LiteralGroupMatch : MatchLexer
	{
		[Token(Token = "0x20006CA")]
		[CompilerGenerated]
		private sealed class <get_SpecialStartCharacters>d__8 : IEnumerable<char>, IEnumerable, IEnumerator<char>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private char <>2__current;

			[Token(Token = "0x4001E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x17000B09")]
			private char System.Collections.Generic.IEnumerator<System.Char>.Current
			{
				[Token(Token = "0x6002F4B")]
				[Address(RVA = "0x11C00C0", Offset = "0x11C00C0", VA = "0x11C00C0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x17000B0A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F4D")]
				[Address(RVA = "0x11C0108", Offset = "0x11C0108", VA = "0x11C0108", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F48")]
			[Address(RVA = "0x11BFD94", Offset = "0x11BFD94", VA = "0x11BFD94")]
			[DebuggerHidden]
			public <get_SpecialStartCharacters>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002F49")]
			[Address(RVA = "0x11C0084", Offset = "0x11C0084", VA = "0x11C0084", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F4A")]
			[Address(RVA = "0x11C0088", Offset = "0x11C0088", VA = "0x11C0088", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F4C")]
			[Address(RVA = "0x11C00C8", Offset = "0x11C00C8", VA = "0x11C00C8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002F4E")]
			[Address(RVA = "0x11C0164", Offset = "0x11C0164", VA = "0x11C0164", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<char> System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002F4F")]
			[Address(RVA = "0x11C01FC", Offset = "0x11C01FC", VA = "0x11C01FC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20006CB")]
		[CompilerGenerated]
		private sealed class <get_SpecialEndCharacters>d__10 : IEnumerable<char>, IEnumerable, IEnumerator<char>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private char <>2__current;

			[Token(Token = "0x4001E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x17000B0B")]
			private char System.Collections.Generic.IEnumerator<System.Char>.Current
			{
				[Token(Token = "0x6002F53")]
				[Address(RVA = "0x11C023C", Offset = "0x11C023C", VA = "0x11C023C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x17000B0C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F55")]
				[Address(RVA = "0x11C0284", Offset = "0x11C0284", VA = "0x11C0284", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F50")]
			[Address(RVA = "0x11BFE38", Offset = "0x11BFE38", VA = "0x11BFE38")]
			[DebuggerHidden]
			public <get_SpecialEndCharacters>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002F51")]
			[Address(RVA = "0x11C0200", Offset = "0x11C0200", VA = "0x11C0200", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F52")]
			[Address(RVA = "0x11C0204", Offset = "0x11C0204", VA = "0x11C0204", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F54")]
			[Address(RVA = "0x11C0244", Offset = "0x11C0244", VA = "0x11C0244", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002F56")]
			[Address(RVA = "0x11C02E0", Offset = "0x11C02E0", VA = "0x11C02E0", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<char> System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002F57")]
			[Address(RVA = "0x11C0378", Offset = "0x11C0378", VA = "0x11C0378", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[NonSerialized]
		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string htmlColor;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Should literals inside quotes be highlghted")]
		public bool highlightLiterals;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("The color that all literal strings will be highglighted with")]
		public Color highlightColor;

		[Token(Token = "0x17000B05")]
		public bool HasLiteralHighlighting
		{
			[Token(Token = "0x6002F40")]
			[Address(RVA = "0x11BFC7C", Offset = "0x11BFC7C", VA = "0x11BFC7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000B06")]
		public override string HTMLColor
		{
			[Token(Token = "0x6002F41")]
			[Address(RVA = "0x11BFC84", Offset = "0x11BFC84", VA = "0x11BFC84", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000B07")]
		public override IEnumerable<char> SpecialStartCharacters
		{
			[Token(Token = "0x6002F42")]
			[Address(RVA = "0x11BFD24", Offset = "0x11BFD24", VA = "0x11BFD24", Slot = "5")]
			[IteratorStateMachine(typeof(<get_SpecialStartCharacters>d__8))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000B08")]
		public override IEnumerable<char> SpecialEndCharacters
		{
			[Token(Token = "0x6002F43")]
			[Address(RVA = "0x11BFDC8", Offset = "0x11BFDC8", VA = "0x11BFDC8", Slot = "6")]
			[IteratorStateMachine(typeof(<get_SpecialEndCharacters>d__10))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F44")]
		[Address(RVA = "0x11BFE6C", Offset = "0x11BFE6C", VA = "0x11BFE6C", Slot = "8")]
		public override void Invalidate()
		{
		}

		[Token(Token = "0x6002F45")]
		[Address(RVA = "0x11BFE78", Offset = "0x11BFE78", VA = "0x11BFE78", Slot = "7")]
		public override bool IsImplicitMatch(ILexer lexer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F46")]
		[Address(RVA = "0x11BFFAC", Offset = "0x11BFFAC", VA = "0x11BFFAC")]
		private bool IsClosingQuoteOrEndFile(ILexer lexer, char character)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F47")]
		[Address(RVA = "0x11C0068", Offset = "0x11C0068", VA = "0x11C0068")]
		public LiteralGroupMatch()
		{
		}
	}
	[Token(Token = "0x20006CC")]
	public abstract class MatchLexer
	{
		[Token(Token = "0x20006CD")]
		[CompilerGenerated]
		private sealed class <get_SpecialStartCharacters>d__3 : IEnumerable<char>, IEnumerable, IEnumerator<char>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private char <>2__current;

			[Token(Token = "0x4001E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x17000B10")]
			private char System.Collections.Generic.IEnumerator<System.Char>.Current
			{
				[Token(Token = "0x6002F62")]
				[Address(RVA = "0x11C04E4", Offset = "0x11C04E4", VA = "0x11C04E4", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x17000B11")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F64")]
				[Address(RVA = "0x11C052C", Offset = "0x11C052C", VA = "0x11C052C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F5F")]
			[Address(RVA = "0x11C03EC", Offset = "0x11C03EC", VA = "0x11C03EC")]
			[DebuggerHidden]
			public <get_SpecialStartCharacters>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002F60")]
			[Address(RVA = "0x11C04C8", Offset = "0x11C04C8", VA = "0x11C04C8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F61")]
			[Address(RVA = "0x11C04CC", Offset = "0x11C04CC", VA = "0x11C04CC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F63")]
			[Address(RVA = "0x11C04EC", Offset = "0x11C04EC", VA = "0x11C04EC", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002F65")]
			[Address(RVA = "0x11C0588", Offset = "0x11C0588", VA = "0x11C0588", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<char> System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002F66")]
			[Address(RVA = "0x11C0620", Offset = "0x11C0620", VA = "0x11C0620", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20006CE")]
		[CompilerGenerated]
		private sealed class <get_SpecialEndCharacters>d__5 : IEnumerable<char>, IEnumerable, IEnumerator<char>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private char <>2__current;

			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x17000B12")]
			private char System.Collections.Generic.IEnumerator<System.Char>.Current
			{
				[Token(Token = "0x6002F6A")]
				[Address(RVA = "0x11C0640", Offset = "0x11C0640", VA = "0x11C0640", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x17000B13")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F6C")]
				[Address(RVA = "0x11C0688", Offset = "0x11C0688", VA = "0x11C0688", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F67")]
			[Address(RVA = "0x11C0490", Offset = "0x11C0490", VA = "0x11C0490")]
			[DebuggerHidden]
			public <get_SpecialEndCharacters>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002F68")]
			[Address(RVA = "0x11C0624", Offset = "0x11C0624", VA = "0x11C0624", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F69")]
			[Address(RVA = "0x11C0628", Offset = "0x11C0628", VA = "0x11C0628", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F6B")]
			[Address(RVA = "0x11C0648", Offset = "0x11C0648", VA = "0x11C0648", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002F6D")]
			[Address(RVA = "0x11C06E4", Offset = "0x11C06E4", VA = "0x11C06E4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<char> System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002F6E")]
			[Address(RVA = "0x11C077C", Offset = "0x11C077C", VA = "0x11C077C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x17000B0D")]
		public abstract string HTMLColor
		{
			[Token(Token = "0x6002F58")]
			get;
		}

		[Token(Token = "0x17000B0E")]
		public virtual IEnumerable<char> SpecialStartCharacters
		{
			[Token(Token = "0x6002F59")]
			[Address(RVA = "0x11C037C", Offset = "0x11C037C", VA = "0x11C037C", Slot = "5")]
			[IteratorStateMachine(typeof(<get_SpecialStartCharacters>d__3))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000B0F")]
		public virtual IEnumerable<char> SpecialEndCharacters
		{
			[Token(Token = "0x6002F5A")]
			[Address(RVA = "0x11C0420", Offset = "0x11C0420", VA = "0x11C0420", Slot = "6")]
			[IteratorStateMachine(typeof(<get_SpecialEndCharacters>d__5))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F5B")]
		public abstract bool IsImplicitMatch(ILexer lexer);

		[Token(Token = "0x6002F5C")]
		[Address(RVA = "0x11C04C4", Offset = "0x11C04C4", VA = "0x11C04C4", Slot = "8")]
		public virtual void Invalidate()
		{
		}

		[Token(Token = "0x6002F5D")]
		[Address(RVA = "0x11BEBFC", Offset = "0x11BEBFC", VA = "0x11BEBFC")]
		public bool IsMatch(ILexer lexer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F5E")]
		[Address(RVA = "0x11BE3E0", Offset = "0x11BE3E0", VA = "0x11BE3E0")]
		protected MatchLexer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006CF")]
	public sealed class NumberGroupMatch : MatchLexer
	{
		[NonSerialized]
		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string htmlColor;

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Should numbers be highlighted")]
		public bool highlightNumbers;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("The color that all numbers will be highlighted with")]
		public Color highlightColor;

		[Token(Token = "0x17000B14")]
		public bool HasNumberHighlighting
		{
			[Token(Token = "0x6002F6F")]
			[Address(RVA = "0x11C0780", Offset = "0x11C0780", VA = "0x11C0780")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000B15")]
		public override string HTMLColor
		{
			[Token(Token = "0x6002F70")]
			[Address(RVA = "0x11C0788", Offset = "0x11C0788", VA = "0x11C0788", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F71")]
		[Address(RVA = "0x11C0828", Offset = "0x11C0828", VA = "0x11C0828", Slot = "8")]
		public override void Invalidate()
		{
		}

		[Token(Token = "0x6002F72")]
		[Address(RVA = "0x11C0834", Offset = "0x11C0834", VA = "0x11C0834", Slot = "7")]
		public override bool IsImplicitMatch(ILexer lexer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F73")]
		[Address(RVA = "0x11C0B74", Offset = "0x11C0B74", VA = "0x11C0B74")]
		private bool IsNumberOrDecimalPoint(ILexer lexer, char character)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F74")]
		[Address(RVA = "0x11C0BE8", Offset = "0x11C0BE8", VA = "0x11C0BE8")]
		public NumberGroupMatch()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006D0")]
	public sealed class SymbolGroupMatch : MatchLexer
	{
		[Token(Token = "0x20006D1")]
		[CompilerGenerated]
		private sealed class <get_SpecialStartCharacters>d__11 : IEnumerable<char>, IEnumerable, IEnumerator<char>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private char <>2__current;

			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SymbolGroupMatch <>4__this;

			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string[] <>7__wrap1;

			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x17000B1A")]
			private char System.Collections.Generic.IEnumerator<System.Char>.Current
			{
				[Token(Token = "0x6002F82")]
				[Address(RVA = "0x11C1D04", Offset = "0x11C1D04", VA = "0x11C1D04", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x17000B1B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F84")]
				[Address(RVA = "0x11C1D4C", Offset = "0x11C1D4C", VA = "0x11C1D4C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F7F")]
			[Address(RVA = "0x11C0D4C", Offset = "0x11C0D4C", VA = "0x11C0D4C")]
			[DebuggerHidden]
			public <get_SpecialStartCharacters>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002F80")]
			[Address(RVA = "0x11C1C30", Offset = "0x11C1C30", VA = "0x11C1C30", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F81")]
			[Address(RVA = "0x11C1C34", Offset = "0x11C1C34", VA = "0x11C1C34", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F83")]
			[Address(RVA = "0x11C1D0C", Offset = "0x11C1D0C", VA = "0x11C1D0C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002F85")]
			[Address(RVA = "0x11C1DA8", Offset = "0x11C1DA8", VA = "0x11C1DA8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<char> System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002F86")]
			[Address(RVA = "0x11C1E54", Offset = "0x11C1E54", VA = "0x11C1E54", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20006D2")]
		[CompilerGenerated]
		private sealed class <get_SpecialEndCharacters>d__13 : IEnumerable<char>, IEnumerable, IEnumerator<char>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private char <>2__current;

			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SymbolGroupMatch <>4__this;

			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string[] <>7__wrap1;

			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x17000B1C")]
			private char System.Collections.Generic.IEnumerator<System.Char>.Current
			{
				[Token(Token = "0x6002F8A")]
				[Address(RVA = "0x11C1F30", Offset = "0x11C1F30", VA = "0x11C1F30", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x17000B1D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002F8C")]
				[Address(RVA = "0x11C1F78", Offset = "0x11C1F78", VA = "0x11C1F78", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002F87")]
			[Address(RVA = "0x11C0E04", Offset = "0x11C0E04", VA = "0x11C0E04")]
			[DebuggerHidden]
			public <get_SpecialEndCharacters>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002F88")]
			[Address(RVA = "0x11C1E58", Offset = "0x11C1E58", VA = "0x11C1E58", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002F89")]
			[Address(RVA = "0x11C1E5C", Offset = "0x11C1E5C", VA = "0x11C1E5C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002F8B")]
			[Address(RVA = "0x11C1F38", Offset = "0x11C1F38", VA = "0x11C1F38", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002F8D")]
			[Address(RVA = "0x11C1FD4", Offset = "0x11C1FD4", VA = "0x11C1FD4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<char> System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002F8E")]
			[Address(RVA = "0x11C2080", Offset = "0x11C2080", VA = "0x11C2080", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<string> shortlist;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Stack<string> removeList;

		[NonSerialized]
		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string[] symbolCache;

		[NonSerialized]
		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string htmlColor;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("A number of symbols that will be highlighted. symbol strings of one or more characters recommended (no numbers or letters) separated by a space")]
		[TextArea]
		public string symbols;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("The color that all symbols in this group will be highlighted with")]
		public Color highlightColor;

		[Token(Token = "0x17000B16")]
		public bool HasSymbolHighlighting
		{
			[Token(Token = "0x6002F75")]
			[Address(RVA = "0x11C0C04", Offset = "0x11C0C04", VA = "0x11C0C04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000B17")]
		public override string HTMLColor
		{
			[Token(Token = "0x6002F76")]
			[Address(RVA = "0x11C0C28", Offset = "0x11C0C28", VA = "0x11C0C28", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000B18")]
		public override IEnumerable<char> SpecialStartCharacters
		{
			[Token(Token = "0x6002F77")]
			[Address(RVA = "0x11C0CC8", Offset = "0x11C0CC8", VA = "0x11C0CC8", Slot = "5")]
			[IteratorStateMachine(typeof(<get_SpecialStartCharacters>d__11))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000B19")]
		public override IEnumerable<char> SpecialEndCharacters
		{
			[Token(Token = "0x6002F78")]
			[Address(RVA = "0x11C0D80", Offset = "0x11C0D80", VA = "0x11C0D80", Slot = "6")]
			[IteratorStateMachine(typeof(<get_SpecialEndCharacters>d__13))]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002F79")]
		[Address(RVA = "0x11C0E38", Offset = "0x11C0E38", VA = "0x11C0E38", Slot = "8")]
		public override void Invalidate()
		{
		}

		[Token(Token = "0x6002F7A")]
		[Address(RVA = "0x11C0E44", Offset = "0x11C0E44", VA = "0x11C0E44", Slot = "7")]
		public override bool IsImplicitMatch(ILexer lexer)
		{
			return default(bool);
		}

		[Token(Token = "0x6002F7B")]
		[Address(RVA = "0x11C18A0", Offset = "0x11C18A0", VA = "0x11C18A0")]
		private void RemoveLongStrings(int length)
		{
		}

		[Token(Token = "0x6002F7C")]
		[Address(RVA = "0x11C1800", Offset = "0x11C1800", VA = "0x11C1800")]
		private void BuildSymbolCache()
		{
		}

		[Token(Token = "0x6002F7D")]
		[Address(RVA = "0x11C1B30", Offset = "0x11C1B30", VA = "0x11C1B30")]
		public SymbolGroupMatch()
		{
		}
	}
}
namespace ES3Types
{
	[Token(Token = "0x20006D3")]
	[Preserve]
	[ES3Properties(new string[] { "_code" })]
	public class ES3UserType_GenericRepresentation : ES3ObjectType
	{
		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6002F8F")]
		[Address(RVA = "0x11C2084", Offset = "0x11C2084", VA = "0x11C2084")]
		public ES3UserType_GenericRepresentation()
		{
		}

		[Token(Token = "0x6002F90")]
		[Address(RVA = "0x11C2148", Offset = "0x11C2148", VA = "0x11C2148", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6002F91")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6002F92")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20006D4")]
	public class ES3UserType_GenericRepresentationArray : ES3ArrayType
	{
		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6002F93")]
		[Address(RVA = "0x11C21F0", Offset = "0x11C21F0", VA = "0x11C21F0")]
		public ES3UserType_GenericRepresentationArray()
		{
		}
	}
	[Token(Token = "0x20006D5")]
	[Preserve]
	[ES3Properties(new string[]
	{
		"id", "name", "desc", "probability", "maxAmount", "amountUses", "currentCharge", "spawnsIn", "price", "isActivateItem",
		"lockedBehind", "sprite", "bladeMod", "knifeMod", "script", "globalTickDelay", "lastGlobalTick", "_code"
	})]
	public class ES3UserType_PickupDiskRepresentation : ES3ObjectType
	{
		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6002F94")]
		[Address(RVA = "0x11C22C8", Offset = "0x11C22C8", VA = "0x11C22C8")]
		public ES3UserType_PickupDiskRepresentation()
		{
		}

		[Token(Token = "0x6002F95")]
		[Address(RVA = "0x11C238C", Offset = "0x11C238C", VA = "0x11C238C", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6002F96")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6002F97")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20006D6")]
	public class ES3UserType_PickupDiskRepresentationArray : ES3ArrayType
	{
		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6002F98")]
		[Address(RVA = "0x11C28D0", Offset = "0x11C28D0", VA = "0x11C28D0")]
		public ES3UserType_PickupDiskRepresentationArray()
		{
		}
	}
	[Token(Token = "0x20006D7")]
	[ES3Properties(new string[]
	{
		"_currentCash", "_currentKeys", "currentKills", "knockbackDistance", "freeStoreItems", "newGamePlusLevel", "_probabilityForChampionEnemy", "preventKnifeFromSpawning", "globalDifficulty", "runPlayTime",
		"isFlying", "statsNewItemsFoundThisRun", "statsAchievementsUnlockedThisRun", "statsJournalPagesCollectedThisRun", "statsEnemiesKilledThisRun", "statsFloorsCompletedThisRun", "statsMoneySpentThisRun", "inHardMode", "hitCooldown", "maxHealth",
		"invincible", "health", "etherealHealth"
	})]
	[Preserve]
	public class ES3UserType_PlayerLiving : ES3ComponentType
	{
		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6002F99")]
		[Address(RVA = "0x11C29A8", Offset = "0x11C29A8", VA = "0x11C29A8")]
		public ES3UserType_PlayerLiving()
		{
		}

		[Token(Token = "0x6002F9A")]
		[Address(RVA = "0x11C2A6C", Offset = "0x11C2A6C", VA = "0x11C2A6C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6002F9B")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20006D8")]
	public class ES3UserType_PlayerLivingArray : ES3ArrayType
	{
		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6002F9C")]
		[Address(RVA = "0x11C319C", Offset = "0x11C319C", VA = "0x11C319C")]
		public ES3UserType_PlayerLivingArray()
		{
		}
	}
}
namespace Bhaptics.Tact.Unity
{
	[Token(Token = "0x20006D9")]
	public class AndroidHaptic : IHaptic
	{
		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject androidJavaObject;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<HapticDevice> deviceList;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> registeredCache;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly object[] SubmitRegisteredParams;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int[] Empty;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly object[] EmptyParams;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly RotationOption DefaultRotationOption;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly object syncLock;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<PositionType, int[]> updatedList;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IntPtr AndroidJavaObjectPtr;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IntPtr SubmitRegisteredPtr;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IntPtr SubmitRegisteredWithTimePtr;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IntPtr RegisterPtr;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected IntPtr RegisterReflectedPtr;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected IntPtr PingPtr;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected IntPtr PingAllPtr;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected IntPtr IsRegisteredPtr;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected IntPtr IsPlayingPtr;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected IntPtr IsPlayingAnythingPtr;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected IntPtr ToggleStreamPtr;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected IntPtr IsStreamingEnablePtr;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected IntPtr GetStreamingHostsPtr;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected IntPtr ShowBluetoothPtr;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected IntPtr RefreshPairingInfoPtr;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected IntPtr EnableDevicePtr;

		[Token(Token = "0x6002F9D")]
		[Address(RVA = "0x11C3274", Offset = "0x11C3274", VA = "0x11C3274")]
		public AndroidHaptic()
		{
		}

		[Token(Token = "0x6002F9E")]
		[Address(RVA = "0x11C3C80", Offset = "0x11C3C80", VA = "0x11C3C80")]
		public List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x6002F9F")]
		[Address(RVA = "0x11C4084", Offset = "0x11C4084", VA = "0x11C4084")]
		public bool IsStreamingEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA0")]
		[Address(RVA = "0x11C417C", Offset = "0x11C417C", VA = "0x11C417C")]
		public void ToggleStreaming()
		{
		}

		[Token(Token = "0x6002FA1")]
		[Address(RVA = "0x11C4298", Offset = "0x11C4298", VA = "0x11C4298", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA2")]
		[Address(RVA = "0x11C4404", Offset = "0x11C4404", VA = "0x11C4404", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA3")]
		[Address(RVA = "0x11C4664", Offset = "0x11C4664", VA = "0x11C4664", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA4")]
		[Address(RVA = "0x11C4760", Offset = "0x11C4760", VA = "0x11C4760", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA5")]
		[Address(RVA = "0x11C4908", Offset = "0x11C4908", VA = "0x11C4908", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6002FA6")]
		[Address(RVA = "0x11C499C", Offset = "0x11C499C", VA = "0x11C499C", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6002FA7")]
		[Address(RVA = "0x11C4ACC", Offset = "0x11C4ACC", VA = "0x11C4ACC", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x6002FA8")]
		[Address(RVA = "0x11C4BFC", Offset = "0x11C4BFC", VA = "0x11C4BFC", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6002FA9")]
		[Address(RVA = "0x11C5104", Offset = "0x11C5104", VA = "0x11C5104", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6002FAA")]
		[Address(RVA = "0x11C56D0", Offset = "0x11C56D0", VA = "0x11C56D0", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6002FAB")]
		[Address(RVA = "0x11C5758", Offset = "0x11C5758", VA = "0x11C5758", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6002FAC")]
		[Address(RVA = "0x11C5A40", Offset = "0x11C5A40", VA = "0x11C5A40", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6002FAD")]
		[Address(RVA = "0x11C5A58", Offset = "0x11C5A58", VA = "0x11C5A58", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6002FAE")]
		[Address(RVA = "0x11C5B74", Offset = "0x11C5B74", VA = "0x11C5B74", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6002FAF")]
		[Address(RVA = "0x11C5DB0", Offset = "0x11C5DB0", VA = "0x11C5DB0", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6002FB0")]
		[Address(RVA = "0x11C5FC8", Offset = "0x11C5FC8", VA = "0x11C5FC8", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6002FB1")]
		[Address(RVA = "0x11C5778", Offset = "0x11C5778", VA = "0x11C5778")]
		private void SubmitRequest(string key, string altKey, float intensity, float duration, float offsetAngleX, float offsetY)
		{
		}

		[Token(Token = "0x6002FB2")]
		[Address(RVA = "0x11C60E0", Offset = "0x11C60E0", VA = "0x11C60E0", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6002FB3")]
		[Address(RVA = "0x11C3B74", Offset = "0x11C3B74", VA = "0x11C3B74")]
		public List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x6002FB4")]
		[Address(RVA = "0x11C6528", Offset = "0x11C6528", VA = "0x11C6528")]
		public void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6002FB5")]
		[Address(RVA = "0x11C6668", Offset = "0x11C6668", VA = "0x11C6668")]
		public void PingAll()
		{
		}

		[Token(Token = "0x6002FB6")]
		[Address(RVA = "0x11C66F8", Offset = "0x11C66F8", VA = "0x11C66F8")]
		public void Ping(string address)
		{
		}

		[Token(Token = "0x6002FB7")]
		[Address(RVA = "0x11C67F0", Offset = "0x11C67F0", VA = "0x11C67F0")]
		public void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x6002FB8")]
		[Address(RVA = "0x11C688C", Offset = "0x11C688C", VA = "0x11C688C")]
		public void EnableDevice(string address, bool boo)
		{
		}

		[Token(Token = "0x6002FB9")]
		[Address(RVA = "0x11C69E4", Offset = "0x11C69E4", VA = "0x11C69E4")]
		public void RefreshPairingInfo()
		{
		}

		[Token(Token = "0x6002FBA")]
		[Address(RVA = "0x11C420C", Offset = "0x11C420C", VA = "0x11C420C")]
		private void CallNativeVoidMethod(IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6002FBB")]
		[Address(RVA = "0x11C40EC", Offset = "0x11C40EC", VA = "0x11C40EC")]
		private bool CallNativeBoolMethod(IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20006DA")]
	public class HapticDevice
	{
		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsPaired;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsConnected;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceName;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionType Position;

		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Address;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositionType[] Candidates;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsEnable;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool IsAudioJack;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int Battery;

		[Token(Token = "0x6002FBD")]
		[Address(RVA = "0x11C6FB8", Offset = "0x11C6FB8", VA = "0x11C6FB8")]
		public HapticDevice()
		{
		}
	}
	[Token(Token = "0x20006DB")]
	public static class AndroidUtils
	{
		[Serializable]
		[Token(Token = "0x20006DC")]
		private class Wrapper<T>
		{
			[Token(Token = "0x4001E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] array;

			[Token(Token = "0x6002FC7")]
			public Wrapper()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006DD")]
		private class Device
		{
			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool paired;

			[Token(Token = "0x4001E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string deviceName;

			[Token(Token = "0x4001E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int position;

			[Token(Token = "0x4001E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool connected;

			[Token(Token = "0x4001E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string address;

			[Token(Token = "0x4001E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int battery;

			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool enable;

			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			public bool audioJackIn;

			[Token(Token = "0x6002FC8")]
			[Address(RVA = "0x11C727C", Offset = "0x11C727C", VA = "0x11C727C")]
			public Device()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006DE")]
		public class StreamHost
		{
			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool connected;

			[Token(Token = "0x6002FC9")]
			[Address(RVA = "0x11C7284", Offset = "0x11C7284", VA = "0x11C7284")]
			public StreamHost()
			{
			}
		}

		[Token(Token = "0x6002FBE")]
		[Address(RVA = "0x11C6FC0", Offset = "0x11C6FC0", VA = "0x11C6FC0")]
		private static PositionType ToDeviceType(int type)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6002FBF")]
		[Address(RVA = "0x11C6FE4", Offset = "0x11C6FE4", VA = "0x11C6FE4")]
		private static PositionType[] ToCandidates(int type)
		{
			return null;
		}

		[Token(Token = "0x6002FC0")]
		[Address(RVA = "0x11C7158", Offset = "0x11C7158", VA = "0x11C7158")]
		public static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FC1")]
		[Address(RVA = "0x11C7180", Offset = "0x11C7180", VA = "0x11C7180")]
		public static bool CanChangePosition(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FC2")]
		public static T[] GetJsonArray<T>(string json)
		{
			return null;
		}

		[Token(Token = "0x6002FC3")]
		[Address(RVA = "0x11C7190", Offset = "0x11C7190", VA = "0x11C7190")]
		private static HapticDevice Convert(Device d)
		{
			return null;
		}

		[Token(Token = "0x6002FC4")]
		[Address(RVA = "0x11C63D8", Offset = "0x11C63D8", VA = "0x11C63D8")]
		public static List<HapticDevice> ConvertToBhapticsDevices(string[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x6002FC5")]
		[Address(RVA = "0x11C6A80", Offset = "0x11C6A80", VA = "0x11C6A80")]
		public static void CallNativeVoidMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6002FC6")]
		[Address(RVA = "0x11C6C88", Offset = "0x11C6C88", VA = "0x11C6C88")]
		public static bool CallNativeBoolMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20006DF")]
	public class AndroidWidget_ControlButton : MonoBehaviour
	{
		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PositionType DeviceType;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Header("Images")]
		private Sprite defaultImage;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite pairImage;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite defaultHoverImage;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite pairHoverImage;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform pairDeviceCount;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button button;

		[Token(Token = "0x6002FCA")]
		[Address(RVA = "0x11C728C", Offset = "0x11C728C", VA = "0x11C728C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002FCB")]
		[Address(RVA = "0x11C7354", Offset = "0x11C7354", VA = "0x11C7354")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6002FCC")]
		[Address(RVA = "0x11C7B10", Offset = "0x11C7B10", VA = "0x11C7B10")]
		public void OnPingDevice()
		{
		}

		[Token(Token = "0x6002FCD")]
		[Address(RVA = "0x11C7D78", Offset = "0x11C7D78", VA = "0x11C7D78")]
		public void OnClickDevice()
		{
		}

		[Token(Token = "0x6002FCE")]
		[Address(RVA = "0x11C7E04", Offset = "0x11C7E04", VA = "0x11C7E04")]
		public AndroidWidget_ControlButton()
		{
		}
	}
	[Token(Token = "0x20006E0")]
	public class AndroidWidget_ObjectPool : MonoBehaviour
	{
		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollRect pariedDeviceScrollrect;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AndroidWidget_PairedDeviceUI pairedDeviceUIGameObject;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int objectCount;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AndroidWidget_PairedDeviceUI> pairedUIList;

		[Token(Token = "0x6002FCF")]
		[Address(RVA = "0x11C7E0C", Offset = "0x11C7E0C", VA = "0x11C7E0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002FD0")]
		[Address(RVA = "0x11C7FE4", Offset = "0x11C7FE4", VA = "0x11C7FE4")]
		public AndroidWidget_PairedDeviceUI GetPairedDeviceUI()
		{
			return null;
		}

		[Token(Token = "0x6002FD1")]
		[Address(RVA = "0x11C80A4", Offset = "0x11C80A4", VA = "0x11C80A4")]
		public void DisableAll()
		{
		}

		[Token(Token = "0x6002FD2")]
		[Address(RVA = "0x11C8140", Offset = "0x11C8140", VA = "0x11C8140")]
		public AndroidWidget_ObjectPool()
		{
		}
	}
	[Token(Token = "0x20006E1")]
	public class AndroidWidget_PairedDeviceUI : MonoBehaviour
	{
		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("[UI]")]
		[SerializeField]
		private Image deviceImage;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text deviceName;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button toggleButton;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Header("[Sprites]")]
		private Sprite leftSide;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite rightSide;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HapticDevice device;

		[Token(Token = "0x6002FD3")]
		[Address(RVA = "0x11C8148", Offset = "0x11C8148", VA = "0x11C8148")]
		private void Start()
		{
		}

		[Token(Token = "0x6002FD4")]
		[Address(RVA = "0x11C8238", Offset = "0x11C8238", VA = "0x11C8238")]
		public void Refresh(HapticDevice tactDevice, Bhaptics_Widget_Setting setting)
		{
		}

		[Token(Token = "0x6002FD5")]
		[Address(RVA = "0x11C853C", Offset = "0x11C853C", VA = "0x11C853C")]
		private void OnPing()
		{
		}

		[Token(Token = "0x6002FD6")]
		[Address(RVA = "0x11C8718", Offset = "0x11C8718", VA = "0x11C8718")]
		private void OnSwap()
		{
		}

		[Token(Token = "0x6002FD7")]
		[Address(RVA = "0x11C8870", Offset = "0x11C8870", VA = "0x11C8870")]
		public AndroidWidget_PairedDeviceUI()
		{
		}
	}
	[Token(Token = "0x20006E2")]
	public class AndroidWidget_SettingUIAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject SettingUI;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool settingPanelEnable;

		[Token(Token = "0x6002FD8")]
		[Address(RVA = "0x11C8878", Offset = "0x11C8878", VA = "0x11C8878")]
		private void Start()
		{
		}

		[Token(Token = "0x6002FD9")]
		[Address(RVA = "0x11C88E8", Offset = "0x11C88E8", VA = "0x11C88E8")]
		public void Hide()
		{
		}

		[Token(Token = "0x6002FDA")]
		[Address(RVA = "0x11C8908", Offset = "0x11C8908", VA = "0x11C8908")]
		public void Show()
		{
		}

		[Token(Token = "0x6002FDB")]
		[Address(RVA = "0x11C8928", Offset = "0x11C8928", VA = "0x11C8928")]
		public void ToggleSettingButton()
		{
		}

		[Token(Token = "0x6002FDC")]
		[Address(RVA = "0x11C8A48", Offset = "0x11C8A48", VA = "0x11C8A48")]
		public AndroidWidget_SettingUIAnimation()
		{
		}
	}
	[Token(Token = "0x20006E3")]
	public class AndroidWidget_UI : MonoBehaviour
	{
		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject uiContainer;

		[Token(Token = "0x4001E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button pingAllButton;

		[Token(Token = "0x4001E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("DeviceImages")]
		[SerializeField]
		private Bhaptics_Widget_Setting WidgetSetting;

		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AndroidWidget_ObjectPool settingObjectPool;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource buttonClickAudio;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool widgetActive;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AndroidWidget_ControlButton[] controllButtons;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidWidget_UI Instance;

		[Token(Token = "0x6002FDD")]
		[Address(RVA = "0x11C8A50", Offset = "0x11C8A50", VA = "0x11C8A50")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002FDE")]
		[Address(RVA = "0x11C8FB8", Offset = "0x11C8FB8", VA = "0x11C8FB8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002FDF")]
		[Address(RVA = "0x11C8C3C", Offset = "0x11C8C3C", VA = "0x11C8C3C")]
		private void InitializeButtons()
		{
		}

		[Token(Token = "0x6002FE0")]
		[Address(RVA = "0x11C91BC", Offset = "0x11C91BC", VA = "0x11C91BC")]
		public void ToggleWidgetButton()
		{
		}

		[Token(Token = "0x6002FE1")]
		[Address(RVA = "0x11C9258", Offset = "0x11C9258", VA = "0x11C9258")]
		public void ShowWidget()
		{
		}

		[Token(Token = "0x6002FE2")]
		[Address(RVA = "0x11C9278", Offset = "0x11C9278", VA = "0x11C9278")]
		public void HideWidget()
		{
		}

		[Token(Token = "0x6002FE3")]
		[Address(RVA = "0x11C9298", Offset = "0x11C9298", VA = "0x11C9298")]
		public void ButtonClickSound()
		{
		}

		[Token(Token = "0x6002FE4")]
		[Address(RVA = "0x11C92B4", Offset = "0x11C92B4", VA = "0x11C92B4")]
		private void RefreshPairedDevices(List<HapticDevice> devices)
		{
		}

		[Token(Token = "0x6002FE5")]
		[Address(RVA = "0x11C90C4", Offset = "0x11C90C4", VA = "0x11C90C4")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6002FE6")]
		[Address(RVA = "0x11C95B8", Offset = "0x11C95B8", VA = "0x11C95B8")]
		public AndroidWidget_UI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006E4")]
	public class PositonIconSetting
	{
		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite connect;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite disconnect;

		[Token(Token = "0x6002FE7")]
		[Address(RVA = "0x11C95C8", Offset = "0x11C95C8", VA = "0x11C95C8")]
		public PositonIconSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006E5")]
	public class IconSetting
	{
		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("[Setting Icons]")]
		public PositonIconSetting Vest;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PositonIconSetting Head;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositonIconSetting Arm;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PositonIconSetting Foot;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositonIconSetting Hand;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PositonIconSetting GloveL;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PositonIconSetting GloveR;

		[Token(Token = "0x6002FE8")]
		[Address(RVA = "0x11C95D0", Offset = "0x11C95D0", VA = "0x11C95D0")]
		public IconSetting()
		{
		}
	}
	[Token(Token = "0x20006E6")]
	public class Android_DeviceController : MonoBehaviour
	{
		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("UI")]
		private Image icon;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IconSetting widgetSetting;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite TactsuitWiredIcon;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image batteryLowImage;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Connect Menu")]
		[SerializeField]
		private GameObject ConnectMenu;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button lButton;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button rButton;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject wiredNotification;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[Header("Disconnect Menu")]
		private GameObject DisconnectMenu;

		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SelectHexColor;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string SelectHoverHexColor;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string DisableHexColor;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string DisableHoverHexColor;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HapticDevice device;

		[Token(Token = "0x6002FE9")]
		[Address(RVA = "0x11C95D8", Offset = "0x11C95D8", VA = "0x11C95D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002FEA")]
		[Address(RVA = "0x11C97B8", Offset = "0x11C97B8", VA = "0x11C97B8")]
		public void RefreshDevice(HapticDevice d)
		{
		}

		[Token(Token = "0x6002FEB")]
		[Address(RVA = "0x11C99A8", Offset = "0x11C99A8", VA = "0x11C99A8")]
		private void RenderConnectMenu()
		{
		}

		[Token(Token = "0x6002FEC")]
		[Address(RVA = "0x11C9A30", Offset = "0x11C9A30", VA = "0x11C9A30")]
		private void RenderDisconnectMenu()
		{
		}

		[Token(Token = "0x6002FED")]
		[Address(RVA = "0x11C9AA0", Offset = "0x11C9AA0", VA = "0x11C9AA0")]
		private void UpdateButtons()
		{
		}

		[Token(Token = "0x6002FEE")]
		[Address(RVA = "0x11C9868", Offset = "0x11C9868", VA = "0x11C9868")]
		private void UpdateIcon(HapticDevice d)
		{
		}

		[Token(Token = "0x6002FEF")]
		[Address(RVA = "0x11C9E84", Offset = "0x11C9E84", VA = "0x11C9E84")]
		private Sprite GetSprite(PositonIconSetting icon, bool connected)
		{
			return null;
		}

		[Token(Token = "0x6002FF0")]
		[Address(RVA = "0x11C9EA8", Offset = "0x11C9EA8", VA = "0x11C9EA8")]
		private void Ping()
		{
		}

		[Token(Token = "0x6002FF1")]
		[Address(RVA = "0x11C9F10", Offset = "0x11C9F10", VA = "0x11C9F10")]
		private void ToLeft()
		{
		}

		[Token(Token = "0x6002FF2")]
		[Address(RVA = "0x11C9FDC", Offset = "0x11C9FDC", VA = "0x11C9FDC")]
		private void ToRight()
		{
		}

		[Token(Token = "0x6002FF3")]
		[Address(RVA = "0x11CA0A8", Offset = "0x11CA0A8", VA = "0x11CA0A8")]
		private Color ToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x6002FF4")]
		[Address(RVA = "0x11C9D50", Offset = "0x11C9D50", VA = "0x11C9D50")]
		private void ChangeButtonColor(Button targetButton, bool isSelect)
		{
		}

		[Token(Token = "0x6002FF5")]
		[Address(RVA = "0x11C9D08", Offset = "0x11C9D08", VA = "0x11C9D08")]
		private static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FF6")]
		[Address(RVA = "0x11C9D2C", Offset = "0x11C9D2C", VA = "0x11C9D2C")]
		private static bool IsRight(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6002FF7")]
		[Address(RVA = "0x11CA0DC", Offset = "0x11CA0DC", VA = "0x11CA0DC")]
		public Android_DeviceController()
		{
		}
	}
	[Token(Token = "0x20006E7")]
	public class Android_UIController : MonoBehaviour
	{
		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform mainPanel;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform devicesContainer;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform deviceListPageUi;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button deviceListNextPageButton;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button deviceListBackPageButton;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text deviceListPageText;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Android_DeviceController devicePrefab;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("No Paired Device UI")]
		[SerializeField]
		private GameObject noPairedDeviceUi;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button helpButton;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button bHpaticsLinkButton;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject helpUi;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button helpCloseButton;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Android_DeviceController> controllers;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BoxCollider mainPanelCollider;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 defaultMainPanelSize;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 defaultDeviceContainerSize;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int deviceListSize;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int deviceListPageIndex;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int expandHeight;

		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int expandDeviceCount;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int pageActivateDeviceCount;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int pageExpandHeight;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int maxPageIndex;

		[Token(Token = "0x6002FF9")]
		[Address(RVA = "0x11CA1D8", Offset = "0x11CA1D8", VA = "0x11CA1D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002FFA")]
		[Address(RVA = "0x11CA6B8", Offset = "0x11CA6B8", VA = "0x11CA6B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6002FFB")]
		[Address(RVA = "0x11CA828", Offset = "0x11CA828", VA = "0x11CA828")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6002FFC")]
		[Address(RVA = "0x11CAE84", Offset = "0x11CAE84", VA = "0x11CAE84")]
		private void OnHelp()
		{
		}

		[Token(Token = "0x6002FFD")]
		[Address(RVA = "0x11CAF0C", Offset = "0x11CAF0C", VA = "0x11CAF0C")]
		private void CloseHelpNotification()
		{
		}

		[Token(Token = "0x6002FFE")]
		[Address(RVA = "0x11CAF94", Offset = "0x11CAF94", VA = "0x11CAF94")]
		private void OpenLink()
		{
		}

		[Token(Token = "0x6002FFF")]
		[Address(RVA = "0x11CAFD8", Offset = "0x11CAFD8", VA = "0x11CAFD8")]
		private void NextPage()
		{
		}

		[Token(Token = "0x6003000")]
		[Address(RVA = "0x11CAFFC", Offset = "0x11CAFFC", VA = "0x11CAFFC")]
		private void BackPage()
		{
		}

		[Token(Token = "0x6003001")]
		[Address(RVA = "0x11CB020", Offset = "0x11CB020", VA = "0x11CB020")]
		public Android_UIController()
		{
		}
	}
	[Token(Token = "0x20006E8")]
	public class BhapticsAndroidManager : MonoBehaviour
	{
		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BhapticsAndroidManager Instance;

		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool pcAndoidTestMode;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<HapticDevice> Devices;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<UnityAction> refreshActions;

		[Token(Token = "0x6003002")]
		[Address(RVA = "0x11CB0BC", Offset = "0x11CB0BC", VA = "0x11CB0BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6003003")]
		[Address(RVA = "0x11CB1D0", Offset = "0x11CB1D0", VA = "0x11CB1D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6003004")]
		[Address(RVA = "0x11CB268", Offset = "0x11CB268", VA = "0x11CB268")]
		private void RefreshDevices()
		{
		}

		[Token(Token = "0x6003005")]
		[Address(RVA = "0x11C7B68", Offset = "0x11C7B68", VA = "0x11C7B68")]
		public static void Ping(PositionType pos)
		{
		}

		[Token(Token = "0x6003006")]
		[Address(RVA = "0x11C87E8", Offset = "0x11C87E8", VA = "0x11C87E8")]
		public static void TogglePosition(string address)
		{
		}

		[Token(Token = "0x6003007")]
		[Address(RVA = "0x11C85B0", Offset = "0x11C85B0", VA = "0x11C85B0")]
		public static void Ping(HapticDevice device)
		{
		}

		[Token(Token = "0x6003008")]
		[Address(RVA = "0x11CB79C", Offset = "0x11CB79C", VA = "0x11CB79C")]
		public static void PingAll()
		{
		}

		[Token(Token = "0x6003009")]
		[Address(RVA = "0x11C94B4", Offset = "0x11C94B4", VA = "0x11C94B4")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x600300A")]
		[Address(RVA = "0x11C78B8", Offset = "0x11C78B8", VA = "0x11C78B8")]
		public static List<HapticDevice> GetConnectedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x600300B")]
		[Address(RVA = "0x11CB81C", Offset = "0x11CB81C", VA = "0x11CB81C")]
		public static List<HapticDevice> GetPairedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x600300C")]
		[Address(RVA = "0x11C8E90", Offset = "0x11C8E90", VA = "0x11C8E90")]
		public static void AddRefreshAction(UnityAction action)
		{
		}

		[Token(Token = "0x600300D")]
		[Address(RVA = "0x11CA758", Offset = "0x11CA758", VA = "0x11CA758")]
		public static void RemoveRefreshAction(UnityAction action)
		{
		}

		[Token(Token = "0x600300E")]
		[Address(RVA = "0x11CBA6C", Offset = "0x11CBA6C", VA = "0x11CBA6C")]
		public static void ClearRefreshAction()
		{
		}

		[Token(Token = "0x600300F")]
		[Address(RVA = "0x11CBB04", Offset = "0x11CBB04", VA = "0x11CBB04")]
		public static bool IsStreaming()
		{
			return default(bool);
		}

		[Token(Token = "0x6003010")]
		[Address(RVA = "0x11CBB88", Offset = "0x11CBB88", VA = "0x11CBB88")]
		public static void ToggleStreaming()
		{
		}

		[Token(Token = "0x6003011")]
		[Address(RVA = "0x11CBC08", Offset = "0x11CBC08", VA = "0x11CBC08")]
		public static List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x6003012")]
		[Address(RVA = "0x11CBCC4", Offset = "0x11CBCC4", VA = "0x11CBCC4")]
		public static void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x6003013")]
		[Address(RVA = "0x11CBD44", Offset = "0x11CBD44", VA = "0x11CBD44")]
		public static void ToggleEnableDevice(HapticDevice device)
		{
		}

		[Token(Token = "0x6003014")]
		[Address(RVA = "0x11CBDE8", Offset = "0x11CBDE8", VA = "0x11CBDE8")]
		private void OnApplicationFocus(bool pauseStatus)
		{
		}

		[Token(Token = "0x6003015")]
		[Address(RVA = "0x11CBE7C", Offset = "0x11CBE7C", VA = "0x11CBE7C")]
		public BhapticsAndroidManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20006E9")]
	public class SettingDeviceIcon
	{
		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite pairImage;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite unpairImage;

		[Token(Token = "0x6003017")]
		[Address(RVA = "0x11CBFA0", Offset = "0x11CBFA0", VA = "0x11CBFA0")]
		public SettingDeviceIcon()
		{
		}
	}
	[Token(Token = "0x20006EA")]
	public class Bhaptics_Widget_Setting : ScriptableObject
	{
		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("[Setting Icons]")]
		public SettingDeviceIcon SettingTactot;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SettingDeviceIcon SettingTactal;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SettingDeviceIcon SettingTactosyArm;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SettingDeviceIcon SettingTactosyFoot;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SettingDeviceIcon SettingTactosyHand;

		[Token(Token = "0x6003018")]
		[Address(RVA = "0x11C83E0", Offset = "0x11C83E0", VA = "0x11C83E0")]
		public Sprite GetPairedDeviceSprite(HapticDevice device)
		{
			return null;
		}

		[Token(Token = "0x6003019")]
		[Address(RVA = "0x11CBFA8", Offset = "0x11CBFA8", VA = "0x11CBFA8")]
		public Bhaptics_Widget_Setting()
		{
		}
	}
	[Token(Token = "0x20006EB")]
	public class HapticApi
	{
		[Token(Token = "0x20006EC")]
		public struct point
		{
			[Token(Token = "0x4001EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x4001EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x4001EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int intensity;

			[Token(Token = "0x4001EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int motorCount;
		}

		[Token(Token = "0x20006ED")]
		public struct status
		{
			[Token(Token = "0x4001EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] values;
		}

		[PreserveSig]
		[Token(Token = "0x600301A")]
		[Address(RVA = "0x11CBFB0", Offset = "0x11CBFB0", VA = "0x11CBFB0")]
		public static extern bool TryGetExePath(byte[] buf, ref int size);

		[PreserveSig]
		[Token(Token = "0x600301B")]
		[Address(RVA = "0x11CC044", Offset = "0x11CC044", VA = "0x11CC044")]
		public static extern void Initialise(string appId, string appName);

		[PreserveSig]
		[Token(Token = "0x600301C")]
		[Address(RVA = "0x11CC0F0", Offset = "0x11CC0F0", VA = "0x11CC0F0")]
		public static extern void Destroy();

		[PreserveSig]
		[Token(Token = "0x600301D")]
		[Address(RVA = "0x11CC154", Offset = "0x11CC154", VA = "0x11CC154")]
		public static extern void RegisterFeedback(string str, string projectJson);

		[PreserveSig]
		[Token(Token = "0x600301E")]
		[Address(RVA = "0x11CC1FC", Offset = "0x11CC1FC", VA = "0x11CC1FC")]
		public static extern void RegisterFeedbackFromTactFile(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x600301F")]
		[Address(RVA = "0x11CC2A8", Offset = "0x11CC2A8", VA = "0x11CC2A8")]
		public static extern void RegisterFeedbackFromTactFileReflected(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x6003020")]
		[Address(RVA = "0x11CC354", Offset = "0x11CC354", VA = "0x11CC354")]
		public static extern void SubmitRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x6003021")]
		[Address(RVA = "0x11CC3E0", Offset = "0x11CC3E0", VA = "0x11CC3E0")]
		public static extern void SubmitRegisteredStartMillis(string key, int startTimeMillis);

		[PreserveSig]
		[Token(Token = "0x6003022")]
		[Address(RVA = "0x11CC474", Offset = "0x11CC474", VA = "0x11CC474")]
		public static extern void SubmitRegisteredWithOption(string key, string altKey, float intensity, float duration, float offsetX, float offsetY);

		[PreserveSig]
		[Token(Token = "0x6003023")]
		[Address(RVA = "0x11CC550", Offset = "0x11CC550", VA = "0x11CC550")]
		public static extern void SubmitByteArray(string key, PositionType pos, byte[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x6003024")]
		[Address(RVA = "0x11CC614", Offset = "0x11CC614", VA = "0x11CC614")]
		public static extern void SubmitPathArray(string key, PositionType pos, point[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x6003025")]
		[Address(RVA = "0x11CC6D8", Offset = "0x11CC6D8", VA = "0x11CC6D8")]
		public static extern bool IsFeedbackRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x6003026")]
		[Address(RVA = "0x11CC770", Offset = "0x11CC770", VA = "0x11CC770")]
		public static extern bool IsPlaying();

		[PreserveSig]
		[Token(Token = "0x6003027")]
		[Address(RVA = "0x11CC7E0", Offset = "0x11CC7E0", VA = "0x11CC7E0")]
		public static extern bool IsPlayingKey(string key);

		[PreserveSig]
		[Token(Token = "0x6003028")]
		[Address(RVA = "0x11CC878", Offset = "0x11CC878", VA = "0x11CC878")]
		public static extern void TurnOff();

		[PreserveSig]
		[Token(Token = "0x6003029")]
		[Address(RVA = "0x11CC8DC", Offset = "0x11CC8DC", VA = "0x11CC8DC")]
		public static extern void TurnOffKey(string key);

		[PreserveSig]
		[Token(Token = "0x600302A")]
		[Address(RVA = "0x11CC968", Offset = "0x11CC968", VA = "0x11CC968")]
		public static extern void EnableFeedback();

		[PreserveSig]
		[Token(Token = "0x600302B")]
		[Address(RVA = "0x11CC9C8", Offset = "0x11CC9C8", VA = "0x11CC9C8")]
		public static extern void DisableFeedback();

		[PreserveSig]
		[Token(Token = "0x600302C")]
		[Address(RVA = "0x11CCA2C", Offset = "0x11CCA2C", VA = "0x11CCA2C")]
		public static extern void ToggleFeedback();

		[PreserveSig]
		[Token(Token = "0x600302D")]
		[Address(RVA = "0x11CCA8C", Offset = "0x11CCA8C", VA = "0x11CCA8C")]
		public static extern bool IsDevicePlaying(PositionType pos);

		[PreserveSig]
		[Token(Token = "0x600302E")]
		[Address(RVA = "0x11CCB10", Offset = "0x11CCB10", VA = "0x11CCB10")]
		public static extern bool TryGetResponseForPosition(PositionType pos, out status status);

		[Token(Token = "0x600302F")]
		[Address(RVA = "0x11CCBD4", Offset = "0x11CCBD4", VA = "0x11CCBD4")]
		public HapticApi()
		{
		}
	}
	[Token(Token = "0x20006EE")]
	public class ArmsHapticClip : FileHapticClip
	{
		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IsReflect;

		[Token(Token = "0x6003030")]
		[Address(RVA = "0x11CCBDC", Offset = "0x11CCBDC", VA = "0x11CCBDC", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6003031")]
		[Address(RVA = "0x11CCF84", Offset = "0x11CCF84", VA = "0x11CCF84", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6003032")]
		[Address(RVA = "0x11CCFA0", Offset = "0x11CCFA0", VA = "0x11CCFA0")]
		public ArmsHapticClip()
		{
		}
	}
	[Token(Token = "0x20006EF")]
	public class BhapticsHaptic : IHaptic
	{
		[Token(Token = "0x6003033")]
		[Address(RVA = "0x11CCFC8", Offset = "0x11CCFC8", VA = "0x11CCFC8")]
		public BhapticsHaptic()
		{
		}

		[Token(Token = "0x6003034")]
		[Address(RVA = "0x11CCFF8", Offset = "0x11CCFF8", VA = "0x11CCFF8", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6003035")]
		[Address(RVA = "0x11CD000", Offset = "0x11CD000", VA = "0x11CD000", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6003036")]
		[Address(RVA = "0x11CD064", Offset = "0x11CD064", VA = "0x11CD064", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6003037")]
		[Address(RVA = "0x11CD06C", Offset = "0x11CD06C", VA = "0x11CD06C", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6003038")]
		[Address(RVA = "0x11CD074", Offset = "0x11CD074", VA = "0x11CD074", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6003039")]
		[Address(RVA = "0x11CD078", Offset = "0x11CD078", VA = "0x11CD078", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600303A")]
		[Address(RVA = "0x11CD084", Offset = "0x11CD084", VA = "0x11CD084", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600303B")]
		[Address(RVA = "0x11CD090", Offset = "0x11CD090", VA = "0x11CD090", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x600303C")]
		[Address(RVA = "0x11CD190", Offset = "0x11CD190", VA = "0x11CD190", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x600303D")]
		[Address(RVA = "0x11CD310", Offset = "0x11CD310", VA = "0x11CD310", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x600303E")]
		[Address(RVA = "0x11CD338", Offset = "0x11CD338", VA = "0x11CD338", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x600303F")]
		[Address(RVA = "0x11CD360", Offset = "0x11CD360", VA = "0x11CD360", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6003040")]
		[Address(RVA = "0x11CD368", Offset = "0x11CD368", VA = "0x11CD368", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6003041")]
		[Address(RVA = "0x11CD374", Offset = "0x11CD374", VA = "0x11CD374", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6003042")]
		[Address(RVA = "0x11CD37C", Offset = "0x11CD37C", VA = "0x11CD37C", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6003043")]
		[Address(RVA = "0x11CD380", Offset = "0x11CD380", VA = "0x11CD380", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6003044")]
		[Address(RVA = "0x11CD384", Offset = "0x11CD384", VA = "0x11CD384", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}
	}
	[Token(Token = "0x20006F0")]
	public class BhapticsProject
	{
		[Token(Token = "0x17000B1E")]
		public Track[] Tracks
		{
			[Token(Token = "0x6003045")]
			[Address(RVA = "0x11CD3A4", Offset = "0x11CD3A4", VA = "0x11CD3A4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6003046")]
			[Address(RVA = "0x11CD3AC", Offset = "0x11CD3AC", VA = "0x11CD3AC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000B1F")]
		public Layout Layout
		{
			[Token(Token = "0x6003047")]
			[Address(RVA = "0x11CD3B4", Offset = "0x11CD3B4", VA = "0x11CD3B4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6003048")]
			[Address(RVA = "0x11CD3BC", Offset = "0x11CD3BC", VA = "0x11CD3BC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6003049")]
		[Address(RVA = "0x11CD3C4", Offset = "0x11CD3C4", VA = "0x11CD3C4")]
		public static BhapticsProject ToProject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x600304A")]
		[Address(RVA = "0x11CDC48", Offset = "0x11CDC48", VA = "0x11CDC48")]
		public JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600304B")]
		[Address(RVA = "0x11CD620", Offset = "0x11CD620", VA = "0x11CD620")]
		public BhapticsProject()
		{
		}
	}
	[Token(Token = "0x20006F1")]
	public class HapticFeedbackFile
	{
		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BhapticsProject Project;

		[Token(Token = "0x600304C")]
		[Address(RVA = "0x11CE1BC", Offset = "0x11CE1BC", VA = "0x11CE1BC")]
		public static HapticFeedbackFile ToHapticFeedbackFile(string jsonStr)
		{
			return null;
		}

		[Token(Token = "0x600304D")]
		[Address(RVA = "0x11CE28C", Offset = "0x11CE28C", VA = "0x11CE28C")]
		public HapticFeedbackFile()
		{
		}
	}
	[Token(Token = "0x20006F2")]
	public class Track
	{
		[Token(Token = "0x17000B20")]
		public HapticEffect[] Effects
		{
			[Token(Token = "0x600304E")]
			[Address(RVA = "0x11CE294", Offset = "0x11CE294", VA = "0x11CE294")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600304F")]
			[Address(RVA = "0x11CE29C", Offset = "0x11CE29C", VA = "0x11CE29C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6003050")]
		[Address(RVA = "0x11CE2A4", Offset = "0x11CE2A4", VA = "0x11CE2A4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6003051")]
		[Address(RVA = "0x11CD628", Offset = "0x11CD628", VA = "0x11CD628")]
		internal static Track ToTrack(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6003052")]
		[Address(RVA = "0x11CDD98", Offset = "0x11CDD98", VA = "0x11CDD98")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6003053")]
		[Address(RVA = "0x11CE328", Offset = "0x11CE328", VA = "0x11CE328")]
		public Track()
		{
		}
	}
	[Token(Token = "0x20006F3")]
	public class HapticEffect
	{
		[Token(Token = "0x17000B21")]
		public int StartTime
		{
			[Token(Token = "0x6003054")]
			[Address(RVA = "0x11CE858", Offset = "0x11CE858", VA = "0x11CE858")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003055")]
			[Address(RVA = "0x11CE860", Offset = "0x11CE860", VA = "0x11CE860")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000B22")]
		public int OffsetTime
		{
			[Token(Token = "0x6003056")]
			[Address(RVA = "0x11CE868", Offset = "0x11CE868", VA = "0x11CE868")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003057")]
			[Address(RVA = "0x11CE870", Offset = "0x11CE870", VA = "0x11CE870")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000B23")]
		public Dictionary<string, HapticEffectMode> Modes
		{
			[Token(Token = "0x6003058")]
			[Address(RVA = "0x11CE878", Offset = "0x11CE878", VA = "0x11CE878")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6003059")]
			[Address(RVA = "0x11CE880", Offset = "0x11CE880", VA = "0x11CE880")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600305A")]
		[Address(RVA = "0x11CE888", Offset = "0x11CE888", VA = "0x11CE888", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600305B")]
		[Address(RVA = "0x11CE330", Offset = "0x11CE330", VA = "0x11CE330")]
		internal static HapticEffect ToEffect(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600305C")]
		[Address(RVA = "0x11CE5CC", Offset = "0x11CE5CC", VA = "0x11CE5CC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600305D")]
		[Address(RVA = "0x11CEB68", Offset = "0x11CEB68", VA = "0x11CEB68")]
		public HapticEffect()
		{
		}
	}
	[Token(Token = "0x20006F4")]
	public class Layout
	{
		[Token(Token = "0x17000B24")]
		public string Type
		{
			[Token(Token = "0x600305E")]
			[Address(RVA = "0x11CEE60", Offset = "0x11CEE60", VA = "0x11CEE60")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600305F")]
			[Address(RVA = "0x11CEE68", Offset = "0x11CEE68", VA = "0x11CEE68")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000B25")]
		public Dictionary<string, LayoutObject[]> Layouts
		{
			[Token(Token = "0x6003060")]
			[Address(RVA = "0x11CEE70", Offset = "0x11CEE70", VA = "0x11CEE70")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6003061")]
			[Address(RVA = "0x11CEE78", Offset = "0x11CEE78", VA = "0x11CEE78")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6003062")]
		[Address(RVA = "0x11CD864", Offset = "0x11CD864", VA = "0x11CD864")]
		internal static Layout ToLayout(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6003063")]
		[Address(RVA = "0x11CDEB0", Offset = "0x11CDEB0", VA = "0x11CDEB0")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6003064")]
		[Address(RVA = "0x11CEE80", Offset = "0x11CEE80", VA = "0x11CEE80")]
		public Layout()
		{
		}
	}
	[Token(Token = "0x20006F5")]
	public class LayoutObject
	{
		[Token(Token = "0x17000B26")]
		public int Index
		{
			[Token(Token = "0x6003065")]
			[Address(RVA = "0x11CF100", Offset = "0x11CF100", VA = "0x11CF100")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003066")]
			[Address(RVA = "0x11CF108", Offset = "0x11CF108", VA = "0x11CF108")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000B27")]
		public float X
		{
			[Token(Token = "0x6003067")]
			[Address(RVA = "0x11CF110", Offset = "0x11CF110", VA = "0x11CF110")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003068")]
			[Address(RVA = "0x11CF118", Offset = "0x11CF118", VA = "0x11CF118")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000B28")]
		public float Y
		{
			[Token(Token = "0x6003069")]
			[Address(RVA = "0x11CF120", Offset = "0x11CF120", VA = "0x11CF120")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600306A")]
			[Address(RVA = "0x11CF128", Offset = "0x11CF128", VA = "0x11CF128")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600306B")]
		[Address(RVA = "0x11CEE88", Offset = "0x11CEE88", VA = "0x11CEE88")]
		internal static LayoutObject ToLayoutObject(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600306C")]
		[Address(RVA = "0x11CEFC0", Offset = "0x11CEFC0", VA = "0x11CEFC0")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600306D")]
		[Address(RVA = "0x11CF130", Offset = "0x11CF130", VA = "0x11CF130")]
		public LayoutObject()
		{
		}
	}
	[Token(Token = "0x20006F6")]
	public class HapticEffectMode
	{
		[Token(Token = "0x17000B29")]
		public FeedbackMode Mode
		{
			[Token(Token = "0x600306E")]
			[Address(RVA = "0x11CF138", Offset = "0x11CF138", VA = "0x11CF138")]
			[CompilerGenerated]
			get
			{
				return default(FeedbackMode);
			}
			[Token(Token = "0x600306F")]
			[Address(RVA = "0x11CF140", Offset = "0x11CF140", VA = "0x11CF140")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000B2A")]
		public DotMode DotMode
		{
			[Token(Token = "0x6003070")]
			[Address(RVA = "0x11CF148", Offset = "0x11CF148", VA = "0x11CF148")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6003071")]
			[Address(RVA = "0x11CF150", Offset = "0x11CF150", VA = "0x11CF150")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000B2B")]
		public PathMode PathMode
		{
			[Token(Token = "0x6003072")]
			[Address(RVA = "0x11CF158", Offset = "0x11CF158", VA = "0x11CF158")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6003073")]
			[Address(RVA = "0x11CF160", Offset = "0x11CF160", VA = "0x11CF160")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6003074")]
		[Address(RVA = "0x11CEB70", Offset = "0x11CEB70", VA = "0x11CEB70")]
		internal static HapticEffectMode ToMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6003075")]
		[Address(RVA = "0x11CECE8", Offset = "0x11CECE8", VA = "0x11CECE8")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6003076")]
		[Address(RVA = "0x11CF168", Offset = "0x11CF168", VA = "0x11CF168")]
		public HapticEffectMode()
		{
		}
	}
	[Token(Token = "0x20006F7")]
	public class DotMode
	{
		[Token(Token = "0x17000B2C")]
		public bool DotConnected
		{
			[Token(Token = "0x6003077")]
			[Address(RVA = "0x11CF890", Offset = "0x11CF890", VA = "0x11CF890")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6003078")]
			[Address(RVA = "0x11CF898", Offset = "0x11CF898", VA = "0x11CF898")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000B2D")]
		public DotModeObjectCollection[] Feedback
		{
			[Token(Token = "0x6003079")]
			[Address(RVA = "0x11CF8A4", Offset = "0x11CF8A4", VA = "0x11CF8A4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600307A")]
			[Address(RVA = "0x11CF8AC", Offset = "0x11CF8AC", VA = "0x11CF8AC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600307B")]
		[Address(RVA = "0x11CF170", Offset = "0x11CF170", VA = "0x11CF170")]
		internal static DotMode ToDotMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600307C")]
		[Address(RVA = "0x11CF5FC", Offset = "0x11CF5FC", VA = "0x11CF5FC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600307D")]
		[Address(RVA = "0x11CF8B4", Offset = "0x11CF8B4", VA = "0x11CF8B4")]
		public DotMode()
		{
		}
	}
	[Token(Token = "0x20006F8")]
	public class DotModeObjectCollection
	{
		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x17000B2E")]
		public int StartTime
		{
			[Token(Token = "0x600307E")]
			[Address(RVA = "0x11CFDD4", Offset = "0x11CFDD4", VA = "0x11CFDD4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600307F")]
			[Address(RVA = "0x11CFDDC", Offset = "0x11CFDDC", VA = "0x11CFDDC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000B2F")]
		public int EndTime
		{
			[Token(Token = "0x6003080")]
			[Address(RVA = "0x11CFDE4", Offset = "0x11CFDE4", VA = "0x11CFDE4")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003081")]
			[Address(RVA = "0x11CFDEC", Offset = "0x11CFDEC", VA = "0x11CFDEC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000B30")]
		public DotModeObject[] PointList
		{
			[Token(Token = "0x6003082")]
			[Address(RVA = "0x11CFDF4", Offset = "0x11CFDF4", VA = "0x11CFDF4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6003083")]
			[Address(RVA = "0x11CFDFC", Offset = "0x11CFDFC", VA = "0x11CFDFC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6003084")]
		[Address(RVA = "0x11CF8BC", Offset = "0x11CF8BC", VA = "0x11CF8BC")]
		internal static DotModeObjectCollection ToObject(JSONObject val)
		{
			return null;
		}

		[Token(Token = "0x6003085")]
		[Address(RVA = "0x11CFBA4", Offset = "0x11CFBA4", VA = "0x11CFBA4")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6003086")]
		[Address(RVA = "0x11CFE04", Offset = "0x11CFE04", VA = "0x11CFE04")]
		public DotModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x20006F9")]
	public class DotModeObject
	{
		[Token(Token = "0x17000B31")]
		public int Index
		{
			[Token(Token = "0x6003087")]
			[Address(RVA = "0x11D0100", Offset = "0x11D0100", VA = "0x11D0100")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6003088")]
			[Address(RVA = "0x11D0108", Offset = "0x11D0108", VA = "0x11D0108")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000B32")]
		public float Intensity
		{
			[Token(Token = "0x6003089")]
			[Address(RVA = "0x11D0110", Offset = "0x11D0110", VA = "0x11D0110")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600308A")]
			[Address(RVA = "0x11D0118", Offset = "0x11D0118", VA = "0x11D0118")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600308B")]
		[Address(RVA = "0x11CFF48", Offset = "0x11CFF48", VA = "0x11CFF48")]
		internal static DotModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x600308C")]
		[Address(RVA = "0x11D0000", Offset = "0x11D0000", VA = "0x11D0000")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600308D")]
		[Address(RVA = "0x11D0120", Offset = "0x11D0120", VA = "0x11D0120")]
		public DotModeObject()
		{
		}
	}
	[Token(Token = "0x20006FA")]
	public class PathMode
	{
		[Token(Token = "0x17000B33")]
		public PathModeObjectCollection[] Feedback
		{
			[Token(Token = "0x600308E")]
			[Address(RVA = "0x11D0274", Offset = "0x11D0274", VA = "0x11D0274")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x600308F")]
			[Address(RVA = "0x11D027C", Offset = "0x11D027C", VA = "0x11D027C")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6003090")]
		[Address(RVA = "0x11CF3E4", Offset = "0x11CF3E4", VA = "0x11CF3E4")]
		internal static PathMode ToPathMode(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6003091")]
		[Address(RVA = "0x11CF778", Offset = "0x11CF778", VA = "0x11CF778")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6003092")]
		[Address(RVA = "0x11D0284", Offset = "0x11D0284", VA = "0x11D0284")]
		public PathMode()
		{
		}
	}
	[Token(Token = "0x20006FB")]
	public class PathModeObjectCollection
	{
		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PathMovingPattern MovingPattern;

		[Token(Token = "0x17000B34")]
		public PathModeObject[] PointList
		{
			[Token(Token = "0x6003093")]
			[Address(RVA = "0x11D07BC", Offset = "0x11D07BC", VA = "0x11D07BC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6003094")]
			[Address(RVA = "0x11D07C4", Offset = "0x11D07C4", VA = "0x11D07C4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6003095")]
		[Address(RVA = "0x11D028C", Offset = "0x11D028C", VA = "0x11D028C")]
		internal static PathModeObjectCollection ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6003096")]
		[Address(RVA = "0x11D0590", Offset = "0x11D0590", VA = "0x11D0590")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6003097")]
		[Address(RVA = "0x11D07CC", Offset = "0x11D07CC", VA = "0x11D07CC")]
		public PathModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x20006FC")]
	public class PathModeObject
	{
		[Token(Token = "0x17000B35")]
		public float X
		{
			[Token(Token = "0x6003098")]
			[Address(RVA = "0x11D0A78", Offset = "0x11D0A78", VA = "0x11D0A78")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6003099")]
			[Address(RVA = "0x11D0A80", Offset = "0x11D0A80", VA = "0x11D0A80")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000B36")]
		public float Y
		{
			[Token(Token = "0x600309A")]
			[Address(RVA = "0x11D0A88", Offset = "0x11D0A88", VA = "0x11D0A88")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600309B")]
			[Address(RVA = "0x11D0A90", Offset = "0x11D0A90", VA = "0x11D0A90")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000B37")]
		public float Intensity
		{
			[Token(Token = "0x600309C")]
			[Address(RVA = "0x11D0A98", Offset = "0x11D0A98", VA = "0x11D0A98")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600309D")]
			[Address(RVA = "0x11D0AA0", Offset = "0x11D0AA0", VA = "0x11D0AA0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000B38")]
		public int Time
		{
			[Token(Token = "0x600309E")]
			[Address(RVA = "0x11D0AA8", Offset = "0x11D0AA8", VA = "0x11D0AA8")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600309F")]
			[Address(RVA = "0x11D0AB0", Offset = "0x11D0AB0", VA = "0x11D0AB0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x60030A0")]
		[Address(RVA = "0x11D07DC", Offset = "0x11D07DC", VA = "0x11D07DC")]
		internal static PathModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x60030A1")]
		[Address(RVA = "0x11D08F8", Offset = "0x11D08F8", VA = "0x11D08F8")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x60030A2")]
		[Address(RVA = "0x11D0AB8", Offset = "0x11D0AB8", VA = "0x11D0AB8")]
		public PathModeObject()
		{
		}
	}
	[Token(Token = "0x20006FD")]
	internal class ParseUtil
	{
		[Token(Token = "0x60030A3")]
		[Address(RVA = "0x11D0128", Offset = "0x11D0128", VA = "0x11D0128")]
		internal static float GetFloat(JSONObject obj, string key, float defaultValue = -1f)
		{
			return default(float);
		}

		[Token(Token = "0x60030A4")]
		[Address(RVA = "0x11CFE0C", Offset = "0x11CFE0C", VA = "0x11CFE0C")]
		internal static int GetInt(JSONObject obj, string key, int defaultValue = -1)
		{
			return default(int);
		}

		[Token(Token = "0x60030A5")]
		[Address(RVA = "0x11D0AC0", Offset = "0x11D0AC0", VA = "0x11D0AC0")]
		public ParseUtil()
		{
		}
	}
	[Token(Token = "0x20006FE")]
	public class BhapticsUtils
	{
		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isInit;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string exeFilePath;

		[Token(Token = "0x4001F06")]
		public const string TypeHead = "Head";

		[Token(Token = "0x4001F07")]
		public const string TypeTactal = "Tactal";

		[Token(Token = "0x4001F08")]
		public const string TypeVest = "Vest";

		[Token(Token = "0x4001F09")]
		public const string TypeTactot = "Tactot";

		[Token(Token = "0x4001F0A")]
		public const string TypeTactosy = "Tactosy";

		[Token(Token = "0x4001F0B")]
		public const string TypeTactosy2 = "Tactosy2";

		[Token(Token = "0x4001F0C")]
		public const string TypeHand = "Hand";

		[Token(Token = "0x4001F0D")]
		public const string TypeFoot = "Foot";

		[Token(Token = "0x4001F0E")]
		public const string TypeGlove = "Glove";

		[Token(Token = "0x60030A6")]
		private static T[] SubArray<T>(T[] data, int index, int length)
		{
			return null;
		}

		[Token(Token = "0x60030A7")]
		[Address(RVA = "0x11D0AC8", Offset = "0x11D0AC8", VA = "0x11D0AC8")]
		public static string GetExePath()
		{
			return null;
		}

		[Token(Token = "0x60030A8")]
		[Address(RVA = "0x11D0B08", Offset = "0x11D0B08", VA = "0x11D0B08")]
		public static bool IsPlayerInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x60030A9")]
		[Address(RVA = "0x11D0B10", Offset = "0x11D0B10", VA = "0x11D0B10")]
		public static bool IsPlayerRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x60030AA")]
		[Address(RVA = "0x11D0B18", Offset = "0x11D0B18", VA = "0x11D0B18")]
		private static bool Is64BitBuild()
		{
			return default(bool);
		}

		[Token(Token = "0x60030AB")]
		[Address(RVA = "0x11D0B34", Offset = "0x11D0B34", VA = "0x11D0B34")]
		public static void LaunchPlayer(bool tryLaunch)
		{
		}

		[Token(Token = "0x60030AC")]
		[Address(RVA = "0x11D0B38", Offset = "0x11D0B38", VA = "0x11D0B38")]
		public static float Angle(Vector3 fwd, Vector3 targetDir)
		{
			return default(float);
		}

		[Token(Token = "0x60030AD")]
		[Address(RVA = "0x11D0CDC", Offset = "0x11D0CDC", VA = "0x11D0CDC")]
		private static int AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
		{
			return default(int);
		}

		[Token(Token = "0x60030AE")]
		[Address(RVA = "0x11D0D34", Offset = "0x11D0D34", VA = "0x11D0D34")]
		public static PositionType ToPositionType(HapticClipPositionType pos)
		{
			return default(PositionType);
		}

		[Token(Token = "0x60030AF")]
		[Address(RVA = "0x11C45FC", Offset = "0x11C45FC", VA = "0x11C45FC")]
		public static PositionType ToPositionType(HapticDeviceType pos, bool isLeft = true)
		{
			return default(PositionType);
		}

		[Token(Token = "0x60030B0")]
		[Address(RVA = "0x11D0D54", Offset = "0x11D0D54", VA = "0x11D0D54")]
		public BhapticsUtils()
		{
		}
	}
	[Token(Token = "0x20006FF")]
	public class FeetHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x60030B1")]
		[Address(RVA = "0x11D0D5C", Offset = "0x11D0D5C", VA = "0x11D0D5C")]
		public FeetHapticClip()
		{
		}
	}
	[Token(Token = "0x2000700")]
	public class FileHapticClip : HapticClip
	{
		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0.2f, 5f)]
		[Tooltip("Value applied by multiplying")]
		public float Intensity;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("Value applied by multiplying")]
		[Range(0.2f, 5f)]
		public float Duration;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HapticDeviceType ClipType;

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string JsonValue;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected int _clipDurationTime;

		[Token(Token = "0x17000B39")]
		public int ClipDurationTime
		{
			[Token(Token = "0x60030B2")]
			[Address(RVA = "0x11D0D70", Offset = "0x11D0D70", VA = "0x11D0D70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60030B3")]
		[Address(RVA = "0x11D0E34", Offset = "0x11D0E34", VA = "0x11D0E34", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x60030B4")]
		[Address(RVA = "0x11D0E90", Offset = "0x11D0E90", VA = "0x11D0E90", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x60030B5")]
		[Address(RVA = "0x11D0EA8", Offset = "0x11D0EA8", VA = "0x11D0EA8", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x60030B6")]
		[Address(RVA = "0x11D0EC0", Offset = "0x11D0EC0", VA = "0x11D0EC0", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x60030B7")]
		[Address(RVA = "0x11D0ED4", Offset = "0x11D0ED4", VA = "0x11D0ED4", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x60030B8")]
		[Address(RVA = "0x11D0EE4", Offset = "0x11D0EE4", VA = "0x11D0EE4", Slot = "9")]
		public override void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x60030B9")]
		[Address(RVA = "0x11D1008", Offset = "0x11D1008", VA = "0x11D1008", Slot = "10")]
		public override void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x60030BA")]
		[Address(RVA = "0x11D107C", Offset = "0x11D107C", VA = "0x11D107C", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60030BB")]
		[Address(RVA = "0x11CCF94", Offset = "0x11CCF94", VA = "0x11CCF94", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60030BC")]
		[Address(RVA = "0x11D0D9C", Offset = "0x11D0D9C", VA = "0x11D0D9C")]
		private int CalculateClipDutationTime(HapticFeedbackFile hapticFeedbackFile)
		{
			return default(int);
		}

		[Token(Token = "0x60030BD")]
		[Address(RVA = "0x11CCFB4", Offset = "0x11CCFB4", VA = "0x11CCFB4")]
		public FileHapticClip()
		{
		}
	}
	[Token(Token = "0x2000701")]
	public class GloveHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x60030BE")]
		[Address(RVA = "0x11D1334", Offset = "0x11D1334", VA = "0x11D1334")]
		public GloveHapticClip()
		{
		}
	}
	[Token(Token = "0x2000702")]
	public class HandsHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x60030BF")]
		[Address(RVA = "0x11D1348", Offset = "0x11D1348", VA = "0x11D1348")]
		public HandsHapticClip()
		{
		}
	}
	[Token(Token = "0x2000703")]
	public enum HapticDeviceType
	{
		[Token(Token = "0x4001F15")]
		None,
		[Token(Token = "0x4001F16")]
		Tactal,
		[Token(Token = "0x4001F17")]
		TactSuit,
		[Token(Token = "0x4001F18")]
		Tactosy_arms,
		[Token(Token = "0x4001F19")]
		Tactosy_hands,
		[Token(Token = "0x4001F1A")]
		Tactosy_feet,
		[Token(Token = "0x4001F1B")]
		TactGlove
	}
	[Serializable]
	[Token(Token = "0x2000704")]
	public enum HapticClipPositionType
	{
		[Token(Token = "0x4001F1D")]
		VestFront,
		[Token(Token = "0x4001F1E")]
		VestBack,
		[Token(Token = "0x4001F1F")]
		Head,
		[Token(Token = "0x4001F20")]
		RightForearm,
		[Token(Token = "0x4001F21")]
		LeftForearm,
		[Token(Token = "0x4001F22")]
		LeftHand,
		[Token(Token = "0x4001F23")]
		RightHand,
		[Token(Token = "0x4001F24")]
		LeftFoot,
		[Token(Token = "0x4001F25")]
		RightFoot,
		[Token(Token = "0x4001F26")]
		LeftGlove,
		[Token(Token = "0x4001F27")]
		RightGlove
	}
	[Token(Token = "0x2000705")]
	public class HapticClip : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string assetId;

		[NonSerialized]
		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyId;

		[Token(Token = "0x60030C0")]
		[Address(RVA = "0x11D135C", Offset = "0x11D135C", VA = "0x11D135C", Slot = "4")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x60030C1")]
		[Address(RVA = "0x11D13BC", Offset = "0x11D13BC", VA = "0x11D13BC", Slot = "5")]
		public virtual void Play(string identifier)
		{
		}

		[Token(Token = "0x60030C2")]
		[Address(RVA = "0x11D13D8", Offset = "0x11D13D8", VA = "0x11D13D8", Slot = "6")]
		public virtual void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x60030C3")]
		[Address(RVA = "0x11D13F0", Offset = "0x11D13F0", VA = "0x11D13F0", Slot = "7")]
		public virtual void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x60030C4")]
		[Address(RVA = "0x11D1404", Offset = "0x11D1404", VA = "0x11D1404", Slot = "8")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x60030C5")]
		[Address(RVA = "0x11D1414", Offset = "0x11D1414", VA = "0x11D1414", Slot = "9")]
		public virtual void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x60030C6")]
		[Address(RVA = "0x11D1538", Offset = "0x11D1538", VA = "0x11D1538", Slot = "10")]
		public virtual void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x60030C7")]
		[Address(RVA = "0x11D15A8", Offset = "0x11D15A8", VA = "0x11D15A8", Slot = "11")]
		public virtual void Play(float intensity, float duration, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x60030C8")]
		[Address(RVA = "0x11D1628", Offset = "0x11D1628", VA = "0x11D1628", Slot = "12")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60030C9")]
		[Address(RVA = "0x11D162C", Offset = "0x11D162C", VA = "0x11D162C", Slot = "13")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x60030CA")]
		[Address(RVA = "0x11D16D0", Offset = "0x11D16D0", VA = "0x11D16D0", Slot = "14")]
		public virtual void Stop(string identifier)
		{
		}

		[Token(Token = "0x60030CB")]
		[Address(RVA = "0x11D17A0", Offset = "0x11D17A0", VA = "0x11D17A0", Slot = "15")]
		public virtual bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60030CC")]
		[Address(RVA = "0x11D185C", Offset = "0x11D185C", VA = "0x11D185C", Slot = "16")]
		public virtual bool IsPlaying(string identifier)
		{
			return default(bool);
		}

		[Token(Token = "0x60030CD")]
		[Address(RVA = "0x11D12BC", Offset = "0x11D12BC", VA = "0x11D12BC", Slot = "17")]
		public virtual void ResetValues()
		{
		}

		[Token(Token = "0x60030CE")]
		[Address(RVA = "0x11D192C", Offset = "0x11D192C", VA = "0x11D192C")]
		public string GetAssetID()
		{
			return null;
		}

		[Token(Token = "0x60030CF")]
		[Address(RVA = "0x11D12C0", Offset = "0x11D12C0", VA = "0x11D12C0")]
		public HapticClip()
		{
		}
	}
	[Token(Token = "0x2000706")]
	public class HapticReceiver : MonoBehaviour
	{
		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PositionTag PositionTag;

		[Token(Token = "0x60030D0")]
		[Address(RVA = "0x11D1934", Offset = "0x11D1934", VA = "0x11D1934")]
		private void Awake()
		{
		}

		[Token(Token = "0x60030D1")]
		[Address(RVA = "0x11D1A74", Offset = "0x11D1A74", VA = "0x11D1A74")]
		private void OnTriggerEnter(Collider bullet)
		{
		}

		[Token(Token = "0x60030D2")]
		[Address(RVA = "0x11D1C14", Offset = "0x11D1C14", VA = "0x11D1C14")]
		private void OnCollisionEnter(Collision bullet)
		{
		}

		[Token(Token = "0x60030D3")]
		[Address(RVA = "0x11D1B30", Offset = "0x11D1B30", VA = "0x11D1B30")]
		private void Handle(Vector3 contactPoint, HapticSender tactSender)
		{
		}

		[Token(Token = "0x60030D4")]
		[Address(RVA = "0x11D1DF8", Offset = "0x11D1DF8", VA = "0x11D1DF8")]
		public HapticReceiver()
		{
		}
	}
	[Token(Token = "0x2000707")]
	public class HapticSender : MonoBehaviour
	{
		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip[] DefaultClips;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadHapticClip[] HeadClips;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VestHapticClip[] BodyClips;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ArmsHapticClip[] LeftArmClips;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ArmsHapticClip[] RightArmClips;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yOffsetMultiplier;

		[Token(Token = "0x60030D5")]
		[Address(RVA = "0x11D1E08", Offset = "0x11D1E08", VA = "0x11D1E08")]
		public void Play(PositionTag posTag = PositionTag.Default)
		{
		}

		[Token(Token = "0x60030D6")]
		[Address(RVA = "0x11D1CEC", Offset = "0x11D1CEC", VA = "0x11D1CEC")]
		public void Play(PositionTag posTag, Vector3 contactPos, Collider targetCollider)
		{
		}

		[Token(Token = "0x60030D7")]
		[Address(RVA = "0x11D2084", Offset = "0x11D2084", VA = "0x11D2084")]
		private void Play(PositionTag posTag, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight)
		{
		}

		[Token(Token = "0x60030D8")]
		[Address(RVA = "0x11D20F8", Offset = "0x11D20F8", VA = "0x11D20F8")]
		public void Play(PositionTag posTag, RaycastHit hit)
		{
		}

		[Token(Token = "0x60030D9")]
		[Address(RVA = "0x11D2228", Offset = "0x11D2228", VA = "0x11D2228")]
		private HapticClip GetClip(PositionTag posTag)
		{
			return null;
		}

		[Token(Token = "0x60030DA")]
		[Address(RVA = "0x11D2340", Offset = "0x11D2340", VA = "0x11D2340")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60030DB")]
		[Address(RVA = "0x11D1E14", Offset = "0x11D1E14", VA = "0x11D1E14")]
		public void Play(PositionTag posTag, float angleX, float offsetY)
		{
		}

		[Token(Token = "0x60030DC")]
		[Address(RVA = "0x11D2348", Offset = "0x11D2348", VA = "0x11D2348")]
		public HapticSender()
		{
		}
	}
	[Token(Token = "0x2000708")]
	public enum PositionTag
	{
		[Token(Token = "0x4001F33")]
		Body,
		[Token(Token = "0x4001F34")]
		Head,
		[Token(Token = "0x4001F35")]
		LeftArm,
		[Token(Token = "0x4001F36")]
		RightArm,
		[Token(Token = "0x4001F37")]
		Default
	}
	[Token(Token = "0x2000709")]
	public class HapticSource : MonoBehaviour
	{
		[Token(Token = "0x200070A")]
		[CompilerGenerated]
		private sealed class <PlayCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecond;

			[Token(Token = "0x4001F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HapticSource <>4__this;

			[Token(Token = "0x17000B3A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030EC")]
				[Address(RVA = "0x11D3D48", Offset = "0x11D3D48", VA = "0x11D3D48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000B3B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030EE")]
				[Address(RVA = "0x11D3D90", Offset = "0x11D3D90", VA = "0x11D3D90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030E9")]
			[Address(RVA = "0x11D3C08", Offset = "0x11D3C08", VA = "0x11D3C08")]
			[DebuggerHidden]
			public <PlayCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60030EA")]
			[Address(RVA = "0x11D3C60", Offset = "0x11D3C60", VA = "0x11D3C60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030EB")]
			[Address(RVA = "0x11D3C64", Offset = "0x11D3C64", VA = "0x11D3C64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030ED")]
			[Address(RVA = "0x11D3D50", Offset = "0x11D3D50", VA = "0x11D3D50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200070B")]
		[CompilerGenerated]
		private sealed class <PlayLoopCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HapticSource <>4__this;

			[Token(Token = "0x4001F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <duration>5__2;

			[Token(Token = "0x17000B3C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60030F2")]
				[Address(RVA = "0x11D3F88", Offset = "0x11D3F88", VA = "0x11D3F88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000B3D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60030F4")]
				[Address(RVA = "0x11D3FD0", Offset = "0x11D3FD0", VA = "0x11D3FD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60030EF")]
			[Address(RVA = "0x11D3C30", Offset = "0x11D3C30", VA = "0x11D3C30")]
			[DebuggerHidden]
			public <PlayLoopCoroutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60030F0")]
			[Address(RVA = "0x11D3D98", Offset = "0x11D3D98", VA = "0x11D3D98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60030F1")]
			[Address(RVA = "0x11D3D9C", Offset = "0x11D3D9C", VA = "0x11D3D9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60030F3")]
			[Address(RVA = "0x11D3F90", Offset = "0x11D3F90", VA = "0x11D3F90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip clip;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool playOnAwake;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float loopDelaySeconds;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.Coroutine currentCoroutine;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityEngine.Coroutine loopCoroutine;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isLooping;

		[Token(Token = "0x60030DD")]
		[Address(RVA = "0x11D3358", Offset = "0x11D3358", VA = "0x11D3358")]
		private void Awake()
		{
		}

		[Token(Token = "0x60030DE")]
		[Address(RVA = "0x11D35D4", Offset = "0x11D35D4", VA = "0x11D35D4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60030DF")]
		[Address(RVA = "0x11D3850", Offset = "0x11D3850", VA = "0x11D3850")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60030E0")]
		[Address(RVA = "0x11D3934", Offset = "0x11D3934", VA = "0x11D3934")]
		public void Play()
		{
		}

		[Token(Token = "0x60030E1")]
		[Address(RVA = "0x11D35F0", Offset = "0x11D35F0", VA = "0x11D35F0")]
		public void PlayLoop()
		{
		}

		[Token(Token = "0x60030E2")]
		[Address(RVA = "0x11D39AC", Offset = "0x11D39AC", VA = "0x11D39AC")]
		public void PlayDelayed(float delaySecond = 0f)
		{
		}

		[Token(Token = "0x60030E3")]
		[Address(RVA = "0x11D3854", Offset = "0x11D3854", VA = "0x11D3854")]
		public void Stop()
		{
		}

		[Token(Token = "0x60030E4")]
		[Address(RVA = "0x11D3B78", Offset = "0x11D3B78", VA = "0x11D3B78")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60030E5")]
		[Address(RVA = "0x11D3AF4", Offset = "0x11D3AF4", VA = "0x11D3AF4")]
		[IteratorStateMachine(typeof(<PlayCoroutine>d__15))]
		private IEnumerator PlayCoroutine(float delaySecond)
		{
			return null;
		}

		[Token(Token = "0x60030E6")]
		[Address(RVA = "0x11D372C", Offset = "0x11D372C", VA = "0x11D372C")]
		private void PlayHapticClip()
		{
		}

		[Token(Token = "0x60030E7")]
		[Address(RVA = "0x11D3938", Offset = "0x11D3938", VA = "0x11D3938")]
		[IteratorStateMachine(typeof(<PlayLoopCoroutine>d__17))]
		private IEnumerator PlayLoopCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60030E8")]
		[Address(RVA = "0x11D3C58", Offset = "0x11D3C58", VA = "0x11D3C58")]
		public HapticSource()
		{
		}
	}
	[Token(Token = "0x200070C")]
	public class HeadHapticClip : FileHapticClip
	{
		[Token(Token = "0x60030F5")]
		[Address(RVA = "0x11D3FD8", Offset = "0x11D3FD8", VA = "0x11D3FD8")]
		public HeadHapticClip()
		{
		}
	}
	[Token(Token = "0x200070D")]
	public interface IHaptic
	{
		[Token(Token = "0x60030F6")]
		bool IsConnect(PositionType type);

		[Token(Token = "0x60030F7")]
		bool IsConnect(HapticDeviceType type, bool isLeft = true);

		[Token(Token = "0x60030F8")]
		bool IsPlaying(string key);

		[Token(Token = "0x60030F9")]
		bool IsFeedbackRegistered(string key);

		[Token(Token = "0x60030FA")]
		bool IsPlaying();

		[Token(Token = "0x60030FB")]
		void RegisterTactFileStr(string key, string tactFileStr);

		[Token(Token = "0x60030FC")]
		void RegisterTactFileStrReflected(string key, string tactFileStr);

		[Token(Token = "0x60030FD")]
		void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis);

		[Token(Token = "0x60030FE")]
		void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis);

		[Token(Token = "0x60030FF")]
		void SubmitRegistered(string key, string altKey, ScaleOption option);

		[Token(Token = "0x6003100")]
		void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption);

		[Token(Token = "0x6003101")]
		void SubmitRegistered(string key);

		[Token(Token = "0x6003102")]
		void SubmitRegistered(string key, int startTimeMillis);

		[Token(Token = "0x6003103")]
		void TurnOff(string key);

		[Token(Token = "0x6003104")]
		void TurnOff();

		[Token(Token = "0x6003105")]
		void Dispose();

		[Token(Token = "0x6003106")]
		int[] GetCurrentFeedback(PositionType pos);
	}
	[Token(Token = "0x200070E")]
	[CreateAssetMenu(fileName = "SimpleHapticClip", menuName = "Bhaptics/Create Simple HapticClip")]
	public class SimpleHapticClip : HapticClip
	{
		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HapticClipPositionType Position;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private SimpleHapticType Mode;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int[] DotPoints;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Point[] Points;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Range(20f, 10000f)]
		public int TimeMillis;

		[Token(Token = "0x6003107")]
		[Address(RVA = "0x11D3FE0", Offset = "0x11D3FE0", VA = "0x11D3FE0", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6003108")]
		[Address(RVA = "0x11D4470", Offset = "0x11D4470", VA = "0x11D4470", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6003109")]
		[Address(RVA = "0x11D4178", Offset = "0x11D4178", VA = "0x11D4178")]
		private static List<DotPoint> Convert(int[] points)
		{
			return null;
		}

		[Token(Token = "0x600310A")]
		[Address(RVA = "0x11D42F0", Offset = "0x11D42F0", VA = "0x11D42F0")]
		private static List<PathPoint> Convert(Point[] points)
		{
			return null;
		}

		[Token(Token = "0x600310B")]
		[Address(RVA = "0x11D45E0", Offset = "0x11D45E0", VA = "0x11D45E0")]
		public SimpleHapticClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200070F")]
	public class Point
	{
		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Range(0f, 1f)]
		public float X;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 1f)]
		public float Y;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 100f)]
		public int Intensity;

		[Token(Token = "0x600310C")]
		[Address(RVA = "0x11D45A4", Offset = "0x11D45A4", VA = "0x11D45A4")]
		public Point(float x, float y, int intensity)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000710")]
	public enum SimpleHapticType
	{
		[Token(Token = "0x4001F50")]
		DotMode = 1,
		[Token(Token = "0x4001F51")]
		PathMode
	}
	[Token(Token = "0x2000711")]
	public class VestHapticClip : FileHapticClip
	{
		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(0f, 360f)]
		[SerializeField]
		protected float TactFileAngleX;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(-0.5f, 0.5f)]
		[SerializeField]
		protected float TactFileOffsetY;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RotationOption _rotationOption;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ScaleOption _scaleOption;

		[Token(Token = "0x600310D")]
		[Address(RVA = "0x11D4714", Offset = "0x11D4714", VA = "0x11D4714", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x600310E")]
		[Address(RVA = "0x11D4770", Offset = "0x11D4770", VA = "0x11D4770", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x600310F")]
		[Address(RVA = "0x11D4788", Offset = "0x11D4788", VA = "0x11D4788", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6003110")]
		[Address(RVA = "0x11D47A0", Offset = "0x11D47A0", VA = "0x11D47A0", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6003111")]
		[Address(RVA = "0x11D47B4", Offset = "0x11D47B4", VA = "0x11D47B4", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6003112")]
		[Address(RVA = "0x11D47C4", Offset = "0x11D47C4", VA = "0x11D47C4", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x6003113")]
		[Address(RVA = "0x11D4A10", Offset = "0x11D4A10", VA = "0x11D4A10", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x6003114")]
		[Address(RVA = "0x11D4A2C", Offset = "0x11D4A2C", VA = "0x11D4A2C")]
		public VestHapticClip()
		{
		}
	}
	[Token(Token = "0x2000712")]
	public class VisualFeedback : MonoBehaviour
	{
		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClipPositionType devicePos;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform motorContainer;

		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient motorFeedbackGradient;

		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform[] motors;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float motorScaleOffset;

		[Token(Token = "0x6003115")]
		[Address(RVA = "0x11D4AEC", Offset = "0x11D4AEC", VA = "0x11D4AEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6003116")]
		[Address(RVA = "0x11D4E70", Offset = "0x11D4E70", VA = "0x11D4E70")]
		public void UpdateFeedback(HapticFeedback feedback)
		{
		}

		[Token(Token = "0x6003117")]
		[Address(RVA = "0x11D4F28", Offset = "0x11D4F28", VA = "0x11D4F28")]
		public void UpdateFeedback(int[] feedbackValues)
		{
		}

		[Token(Token = "0x6003118")]
		[Address(RVA = "0x11D5108", Offset = "0x11D5108", VA = "0x11D5108")]
		public VisualFeedback()
		{
		}
	}
}
