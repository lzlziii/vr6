using System;
using System.Collections;
using System.Collections.Concurrent;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq.Expressions;
using System.Net;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Xml;
using AK.Wwise;
using Bhaptics.Tact.Unity;
using CacheUtils;
using CodeStage.AntiCheat.ObscuredTypes;
using DG.Tweening;
using Dissonance.Networking;
using Exploder;
using Flat;
using FlatBuffers;
using Il2CppDummyDll;
using LitJson;
using NodeCanvas.BehaviourTrees;
using NodeCanvas.Framework;
using NodeCanvas.Framework.Internal;
using NodeCanvas.Tasks.Actions;
using NodeCanvas.Tasks.Conditions;
using ParadoxNotion;
using PostProcess;
using Pvr_UnitySDKAPI;
using Pvr_UnitySDKAPI.Achievement;
using RootMotion;
using RootMotion.FinalIK;
using SSA;
using SWS;
using TMPro;
using UniRx;
using Unity.Collections;
using Unity.Jobs;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Experimental.Rendering;
using UnityEngine.Experimental.Rendering.Universal;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Profiling;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal.Internal;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using VRNetLib;
using VRPlatformLib;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEDE954", Offset = "0xEDE954")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20004F6")]
	public enum RotationAxes
	{
		[Token(Token = "0x4001E7A")]
		MouseXAndY,
		[Token(Token = "0x4001E7B")]
		MouseX,
		[Token(Token = "0x4001E7C")]
		MouseY
	}

	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x12F2D70", Offset = "0x12F2D70", VA = "0x12F2D70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x12F2FD0", Offset = "0x12F2FD0", VA = "0x12F2FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x12F3090", Offset = "0x12F3090", VA = "0x12F3090")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000003")]
[ExecuteInEditMode]
public class ChinarMirror : MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mirrorPlane;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera mainCamera;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera mirrorCamera;

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x120C4E8", Offset = "0x120C4E8", VA = "0x120C4E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x120C548", Offset = "0x120C548", VA = "0x120C548")]
	private void Update()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x120C6F0", Offset = "0x120C6F0", VA = "0x120C6F0")]
	public ChinarMirror()
	{
	}
}
[Token(Token = "0x2000004")]
[ExecuteInEditMode]
public class ChinarMirrorPlane : MonoBehaviour
{
	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mirrorPlane;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool estimateViewFrustum;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool setNearClipPlane;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float nearClipDistanceOffset;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera mirrorCamera;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 vn;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float l;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float r;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float b;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float t;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float d;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float n;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float f;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 pa;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 pb;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 pc;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 pe;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 va;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 vb;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 vc;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 vr;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 vu;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Matrix4x4 p;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Matrix4x4 rm;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Matrix4x4 tm;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private Quaternion q;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private Vector3 lb_p;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private Vector3 rb_p;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private Vector3 lt_p;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x120C6F8", Offset = "0x120C6F8", VA = "0x120C6F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x120C758", Offset = "0x120C758", VA = "0x120C758")]
	private void Update()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x120D588", Offset = "0x120D588", VA = "0x120D588")]
	public ChinarMirrorPlane()
	{
	}
}
[Token(Token = "0x2000005")]
public class MirrorAutoInit : MonoBehaviour
{
	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChinarMirror Mirror;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ChinarMirrorPlane MirrorPlane;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x12E4668", Offset = "0x12E4668", VA = "0x12E4668")]
	private void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x12E47A4", Offset = "0x12E47A4", VA = "0x12E47A4")]
	public MirrorAutoInit()
	{
	}
}
[Token(Token = "0x2000006")]
public class LaserControl : MonoBehaviour
{
	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LineRenderer lineRender;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE52A4", Offset = "0xEE52A4")]
	[SerializeField]
	private float maxDistance;

	[Token(Token = "0x400002D")]
	private const int posCount = 2;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 endPosDefault;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem pts;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RaycastHit hit;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int activeLayer;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x147897C", Offset = "0x147897C", VA = "0x147897C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x1478B8C", Offset = "0x1478B8C", VA = "0x1478B8C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x1478DF8", Offset = "0x1478DF8", VA = "0x1478DF8")]
	public LaserControl()
	{
	}
}
[Token(Token = "0x2000007")]
public class LaserControl_Infrared : MonoBehaviour
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LineRenderer[] lineRenders;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem pts;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE5310", Offset = "0xEE5310")]
	[SerializeField]
	private float maxDistance;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private RaycastHit hit;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool IsPlay;

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x1478E08", Offset = "0x1478E08", VA = "0x1478E08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x1478F08", Offset = "0x1478F08", VA = "0x1478F08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x14791F8", Offset = "0x14791F8", VA = "0x14791F8")]
	public LaserControl_Infrared()
	{
	}
}
[Token(Token = "0x2000008")]
public class ForceSyncTransform : MonoBehaviour
{
	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform srcRoot;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform dstRoot;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x132E4F0", Offset = "0x132E4F0", VA = "0x132E4F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x132E5F8", Offset = "0x132E5F8", VA = "0x132E5F8")]
	public ForceSyncTransform()
	{
	}
}
[Token(Token = "0x2000009")]
public class HoldPos : MonoBehaviour
{
	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform VRCamera;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x1276570", Offset = "0x1276570", VA = "0x1276570")]
	private void Update()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x1276634", Offset = "0x1276634", VA = "0x1276634")]
	public HoldPos()
	{
	}
}
[Token(Token = "0x200000A")]
public class RoadTest : MonoBehaviour
{
	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public new GameObject gameObject;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x13B6154", Offset = "0x13B6154", VA = "0x13B6154")]
	private void Update()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x13B63CC", Offset = "0x13B63CC", VA = "0x13B63CC")]
	public RoadTest()
	{
	}
}
[Token(Token = "0x200000B")]
public class SpeedManager : MonoBehaviour
{
	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cameraRoot;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cameraT;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 lastPos;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 curPos;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float MOM;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 targetPos;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float lerpSpeed;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x12C44AC", Offset = "0x12C44AC", VA = "0x12C44AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x12C450C", Offset = "0x12C450C", VA = "0x12C450C")]
	private void Update()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x12C4804", Offset = "0x12C4804", VA = "0x12C4804")]
	private Vector3 Format(Vector3 vector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x12C48C8", Offset = "0x12C48C8", VA = "0x12C48C8")]
	public SpeedManager()
	{
	}
}
[Token(Token = "0x200000C")]
public class SpeedScale : MonoBehaviour
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform VRCamera;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Scale;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x12C48D8", Offset = "0x12C48D8", VA = "0x12C48D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x12C4998", Offset = "0x12C4998", VA = "0x12C4998")]
	public SpeedScale()
	{
	}
}
[Token(Token = "0x200000D")]
public class manager : MonoBehaviour
{
	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> rooms;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Collider> switchGears;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int index;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x1D7A780", Offset = "0x1D7A780", VA = "0x1D7A780")]
	private void Start()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x1D7AA9C", Offset = "0x1D7AA9C", VA = "0x1D7AA9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x1D7A938", Offset = "0x1D7A938", VA = "0x1D7A938")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x1D7AAD8", Offset = "0x1D7AAD8", VA = "0x1D7AAD8")]
	public void SwitchRoom(int _index)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x1D7ABEC", Offset = "0x1D7ABEC", VA = "0x1D7ABEC")]
	private void OnTriggerEnterCB(Collider collider_1, Collider collider_2)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x1D7AC9C", Offset = "0x1D7AC9C", VA = "0x1D7AC9C")]
	public manager()
	{
	}
}
[Token(Token = "0x200000E")]
public class AchievementSample : MonoBehaviour
{
	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text dataOutput;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField getDefinitionsByNameInputField;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InputField getProgressByNameInputField;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InputField unLockInputField;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InputField addCountInputField;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InputField addFieldsInputField;

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x17F5FF4", Offset = "0x17F5FF4", VA = "0x17F5FF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x17F6054", Offset = "0x17F6054", VA = "0x17F6054")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x17F60B4", Offset = "0x17F60B4", VA = "0x17F60B4")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x17F628C", Offset = "0x17F628C", VA = "0x17F628C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x17F6298", Offset = "0x17F6298", VA = "0x17F6298")]
	public void AsyncInitialize()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x17F6318", Offset = "0x17F6318", VA = "0x17F6318")]
	public void GetDefinitionsByName()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x17F64F8", Offset = "0x17F64F8", VA = "0x17F64F8")]
	public void GetProgressByName()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x17F66D8", Offset = "0x17F66D8", VA = "0x17F66D8")]
	public void GetAllDefinitions()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x17F6800", Offset = "0x17F6800", VA = "0x17F6800")]
	public void GetAllProgress()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x17F6928", Offset = "0x17F6928", VA = "0x17F6928")]
	public void UnLock()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x17F6AC0", Offset = "0x17F6AC0", VA = "0x17F6AC0")]
	public void AddCount()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x17F6DBC", Offset = "0x17F6DBC", VA = "0x17F6DBC")]
	public void AddFields()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x17F61E4", Offset = "0x17F61E4", VA = "0x17F61E4")]
	private void achievementInit()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x17F6758", Offset = "0x17F6758", VA = "0x17F6758")]
	private void getAchievementAllDefinition()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x17F6880", Offset = "0x17F6880", VA = "0x17F6880")]
	private void getAchievementAllProgress()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x17F6EFC", Offset = "0x17F6EFC", VA = "0x17F6EFC")]
	private void addFieldsAchievement(string achievementName, string fields)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x17F6CD8", Offset = "0x17F6CD8", VA = "0x17F6CD8")]
	private void addCountAchievement(string achievementName, string count)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x17F6A10", Offset = "0x17F6A10", VA = "0x17F6A10")]
	private void unlockAchievement(string achievementName)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x17F6628", Offset = "0x17F6628", VA = "0x17F6628")]
	private void getAchievementProgress(string[] achievementNames)
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x17F6448", Offset = "0x17F6448", VA = "0x17F6448")]
	private void getAchievementDefinition(string[] achievementNames)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x17F612C", Offset = "0x17F612C", VA = "0x17F612C")]
	private void printOutputLine(string newLine)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x17F6FB4", Offset = "0x17F6FB4", VA = "0x17F6FB4")]
	private void achievementAllDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x17F77FC", Offset = "0x17F77FC", VA = "0x17F77FC")]
	private void achievementAllProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x17F7E58", Offset = "0x17F7E58", VA = "0x17F7E58")]
	private void achievementFieldsCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x17F8104", Offset = "0x17F8104", VA = "0x17F8104")]
	private void achievementCountCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x17F83B0", Offset = "0x17F83B0", VA = "0x17F83B0")]
	private void achievementUnlockCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x17F865C", Offset = "0x17F865C", VA = "0x17F865C")]
	private void achievementProgressCallback(Pvr_Message<Pvr_AchievementProgressList> msg)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x17F8BA4", Offset = "0x17F8BA4", VA = "0x17F8BA4")]
	private void achievementDefinitionCallback(Pvr_Message<Pvr_AchievementDefinitionList> msg)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x17F9164", Offset = "0x17F9164", VA = "0x17F9164")]
	private void initAchievementCallback(Pvr_Message msg)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x17F9410", Offset = "0x17F9410", VA = "0x17F9410")]
	private void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x17F94C8", Offset = "0x17F94C8", VA = "0x17F94C8")]
	public AchievementSample()
	{
	}
}
[Token(Token = "0x200000F")]
public class Pvr_Controller : MonoBehaviour
{
	[Token(Token = "0x20004F7")]
	public enum UserHandNess
	{
		[Token(Token = "0x4001E7E")]
		Right,
		[Token(Token = "0x4001E7F")]
		Left
	}

	[Token(Token = "0x20004F8")]
	public enum GazeType
	{
		[Token(Token = "0x4001E81")]
		Never,
		[Token(Token = "0x4001E82")]
		DuringMotion,
		[Token(Token = "0x4001E83")]
		Always
	}

	[Token(Token = "0x20004F9")]
	public enum ControllerAxis
	{
		[Token(Token = "0x4001E85")]
		Controller,
		[Token(Token = "0x4001E86")]
		Wrist,
		[Token(Token = "0x4001E87")]
		Elbow,
		[Token(Token = "0x4001E88")]
		Shoulder
	}

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controller0;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller1;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UserHandNess handness;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerAxis Axis;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GazeType Gazetype;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE535C", Offset = "0xEE535C")]
	public float ElbowHeight;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE5378", Offset = "0xEE5378")]
	public float ElbowDepth;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE5394", Offset = "0xEE5394")]
	public float PointerTiltAngle;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mouseX;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mouseY;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mouseZ;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] inputDirection;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE53AC", Offset = "0xEE53AC")]
	private static Vector3 <pointerPosition>k__BackingField;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE53BC", Offset = "0xEE53BC")]
	private static Quaternion <pointerRotation>k__BackingField;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE53CC", Offset = "0xEE53CC")]
	private static Vector3 <elbowPosition>k__BackingField;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE53DC", Offset = "0xEE53DC")]
	private static Quaternion <elbowRotation>k__BackingField;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE53EC", Offset = "0xEE53EC")]
	private static Vector3 <wristPosition>k__BackingField;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE53FC", Offset = "0xEE53FC")]
	private static Quaternion <wristRotation>k__BackingField;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE540C", Offset = "0xEE540C")]
	private static Vector3 <shoulderPosition>k__BackingField;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE541C", Offset = "0xEE541C")]
	private static Quaternion <shoulderRotation>k__BackingField;

	[Token(Token = "0x17000001")]
	public static Vector3 pointerPosition
	{
		[Token(Token = "0x6000056")]
		[Address(RVA = "0x15391A8", Offset = "0x15391A8", VA = "0x15391A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBADC", Offset = "0xEEBADC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000057")]
		[Address(RVA = "0x15391FC", Offset = "0x15391FC", VA = "0x15391FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBAEC", Offset = "0xEEBAEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public static Quaternion pointerRotation
	{
		[Token(Token = "0x6000058")]
		[Address(RVA = "0x153926C", Offset = "0x153926C", VA = "0x153926C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBAFC", Offset = "0xEEBAFC")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000059")]
		[Address(RVA = "0x15392C0", Offset = "0x15392C0", VA = "0x15392C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBB0C", Offset = "0xEEBB0C")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public static Vector3 elbowPosition
	{
		[Token(Token = "0x600005A")]
		[Address(RVA = "0x1539334", Offset = "0x1539334", VA = "0x1539334")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBB1C", Offset = "0xEEBB1C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600005B")]
		[Address(RVA = "0x1539388", Offset = "0x1539388", VA = "0x1539388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBB2C", Offset = "0xEEBB2C")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public static Quaternion elbowRotation
	{
		[Token(Token = "0x600005C")]
		[Address(RVA = "0x15393F8", Offset = "0x15393F8", VA = "0x15393F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBB3C", Offset = "0xEEBB3C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x600005D")]
		[Address(RVA = "0x153944C", Offset = "0x153944C", VA = "0x153944C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBB4C", Offset = "0xEEBB4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public static Vector3 wristPosition
	{
		[Token(Token = "0x600005E")]
		[Address(RVA = "0x15394C0", Offset = "0x15394C0", VA = "0x15394C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBB5C", Offset = "0xEEBB5C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x600005F")]
		[Address(RVA = "0x1539514", Offset = "0x1539514", VA = "0x1539514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBB6C", Offset = "0xEEBB6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000006")]
	public static Quaternion wristRotation
	{
		[Token(Token = "0x6000060")]
		[Address(RVA = "0x1539584", Offset = "0x1539584", VA = "0x1539584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBB7C", Offset = "0xEEBB7C")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000061")]
		[Address(RVA = "0x15395D8", Offset = "0x15395D8", VA = "0x15395D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBB8C", Offset = "0xEEBB8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public static Vector3 shoulderPosition
	{
		[Token(Token = "0x6000062")]
		[Address(RVA = "0x153964C", Offset = "0x153964C", VA = "0x153964C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBB9C", Offset = "0xEEBB9C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000063")]
		[Address(RVA = "0x15396A0", Offset = "0x15396A0", VA = "0x15396A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBBAC", Offset = "0xEEBBAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public static Quaternion shoulderRotation
	{
		[Token(Token = "0x6000064")]
		[Address(RVA = "0x1539710", Offset = "0x1539710", VA = "0x1539710")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBBBC", Offset = "0xEEBBBC")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x6000065")]
		[Address(RVA = "0x1539764", Offset = "0x1539764", VA = "0x1539764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBBCC", Offset = "0xEEBBCC")]
		set
		{
		}
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x1537490", Offset = "0x1537490", VA = "0x1537490")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x15375CC", Offset = "0x15375CC", VA = "0x15375CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x153763C", Offset = "0x153763C", VA = "0x153763C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1537778", Offset = "0x1537778", VA = "0x1537778")]
	private void MainControllerChanged(string index)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x1537820", Offset = "0x1537820", VA = "0x1537820")]
	private void HandnessChanged(string index)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x1537824", Offset = "0x1537824", VA = "0x1537824")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x153777C", Offset = "0x153777C", VA = "0x153777C")]
	private void RefreshHandness()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x1537884", Offset = "0x1537884", VA = "0x1537884")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x1537A08", Offset = "0x1537A08", VA = "0x1537A08")]
	private void ShowController()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x1537B68", Offset = "0x1537B68", VA = "0x1537B68")]
	private void CheckControllerState(string data)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x1537C3C", Offset = "0x1537C3C", VA = "0x1537C3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x1537828", Offset = "0x1537828", VA = "0x1537828")]
	public static void ChangeHandNess()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x1537E40", Offset = "0x1537E40", VA = "0x1537E40")]
	private void DoUpdateControler0()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x1537EBC", Offset = "0x1537EBC", VA = "0x1537EBC")]
	private void DoUpdateControler1()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x1537F40", Offset = "0x1537F40", VA = "0x1537F40")]
	private void UpdateControlloerRay(bool update0 = true, bool update1 = true)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x1538FC4", Offset = "0x1538FC4", VA = "0x1538FC4")]
	private Quaternion UpdateSimulatedFrameParams()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x1538094", Offset = "0x1538094", VA = "0x1538094")]
	private void SetArmParaToSo(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x15380A4", Offset = "0x15380A4", VA = "0x15380A4")]
	private void CalcArmModelfromSo(int hand)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x1538580", Offset = "0x1538580", VA = "0x1538580")]
	public void UpdateControllerDataSO(int hand)
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x15397D8", Offset = "0x15397D8", VA = "0x15397D8")]
	public Pvr_Controller()
	{
	}
}
[Token(Token = "0x2000010")]
public class Pvr_ControllerDemo : MonoBehaviour
{
	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject HeadSetController;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject controller0;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject controller1;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject cube;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Ray ray;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject currentController;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform lastHit;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform currentHit;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Material normat;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Material gazemat;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Material clickmat;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool noClick;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject referenceObj;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float rayDefaultLength;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool isHasController;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool headcontrolmode;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private RaycastHit hit;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject rayLine;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject dot;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Transform dragObj;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float disX;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float disY;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float disZ;

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x153984C", Offset = "0x153984C", VA = "0x153984C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x15399E0", Offset = "0x15399E0", VA = "0x15399E0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x1539AF8", Offset = "0x1539AF8", VA = "0x1539AF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x153B4A0", Offset = "0x153B4A0", VA = "0x153B4A0")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x153B550", Offset = "0x153B550", VA = "0x153B550")]
	private void ControllerStateListener(string data)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x153B600", Offset = "0x153B600", VA = "0x153B600")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x153B698", Offset = "0x153B698", VA = "0x153B698")]
	public void SwitchControlMode()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x153B69C", Offset = "0x153B69C", VA = "0x153B69C")]
	public Pvr_ControllerDemo()
	{
	}
}
[Token(Token = "0x2000011")]
public class Pvr_ControllerEventsExamples : MonoBehaviour
{
	[Token(Token = "0x600006F")]
	[Address(RVA = "0x153B6AC", Offset = "0x153B6AC", VA = "0x153B6AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x153B8E4", Offset = "0x153B8E4", VA = "0x153B8E4")]
	private void UIPointerElementEnter(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x153B984", Offset = "0x153B984", VA = "0x153B984")]
	private void UIPointerElementExit(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x153BA24", Offset = "0x153BA24", VA = "0x153BA24")]
	private void UIPointerElementClick(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x153BAC4", Offset = "0x153BAC4", VA = "0x153BAC4")]
	private void UIPointerElementDragStart(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x153BB64", Offset = "0x153BB64", VA = "0x153BB64")]
	private void UIPointerElementDragEnd(object sender, UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x153BC04", Offset = "0x153BC04", VA = "0x153BC04")]
	public Pvr_ControllerEventsExamples()
	{
	}
}
[Token(Token = "0x2000012")]
public class Pvr_ControllerInit : MonoBehaviour
{
	[Token(Token = "0x20004FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4820", Offset = "0xEE4820")]
	private sealed class <RefreshController>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int id;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_ControllerInit <>4__this;

		[Token(Token = "0x1700040A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A02")]
			[Address(RVA = "0x153DB4C", Offset = "0x153DB4C", VA = "0x153DB4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A04")]
			[Address(RVA = "0x153DBB4", Offset = "0x153DBB4", VA = "0x153DBB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029FF")]
		[Address(RVA = "0x153CA44", Offset = "0x153CA44", VA = "0x153CA44")]
		[DebuggerHidden]
		public <RefreshController>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x6002A00")]
		[Address(RVA = "0x153D790", Offset = "0x153D790", VA = "0x153D790", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A01")]
		[Address(RVA = "0x153D794", Offset = "0x153D794", VA = "0x153D794", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A03")]
		[Address(RVA = "0x153DB54", Offset = "0x153DB54", VA = "0x153DB54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerVariety Variety;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isCustomModel;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject goblin;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject g2;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject neo2L;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject neo2R;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject neo3L;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject neo3R;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Material standardMat;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Material unlitMat;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int controllerType;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public bool loadModelSuccess;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int systemOrUnity;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private JsonData curControllerData;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string modelName;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string texFormat;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string prePath;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string modelFilePath;

	[Token(Token = "0x400008A")]
	private const string goblinTexbasePath = "Controller/controller1/controller1";

	[Token(Token = "0x400008B")]
	private const string g2TexbasePath = "Controller/controller3/controller3";

	[Token(Token = "0x400008C")]
	private const string neo2TexbasePath = "Controller/controller4/controller4";

	[Token(Token = "0x400008D")]
	private const string neo3TexbasePath = "Controller/controller5/controller5";

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x153BC0C", Offset = "0x153BC0C", VA = "0x153BC0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x153BD84", Offset = "0x153BD84", VA = "0x153BD84")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x153BE88", Offset = "0x153BE88", VA = "0x153BE88")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x153C118", Offset = "0x153C118", VA = "0x153C118")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x153C310", Offset = "0x153C310", VA = "0x153C310")]
	private void LoadResFromJson()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x153C53C", Offset = "0x153C53C", VA = "0x153C53C")]
	private void CheckControllerStateForGoblin(string state)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x153C8E0", Offset = "0x153C8E0", VA = "0x153C8E0")]
	private void CheckControllerStateOfAbility(string data)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x153BE94", Offset = "0x153BE94", VA = "0x153BE94")]
	private void DestroyLocalController()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x153C628", Offset = "0x153C628", VA = "0x153C628")]
	private void DestroySysController()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x153C4B0", Offset = "0x153C4B0", VA = "0x153C4B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEBBDC", Offset = "0xEEBBDC")]
	private IEnumerator RefreshController(int id)
	{
		return null;
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x153CA70", Offset = "0x153CA70", VA = "0x153CA70")]
	private void LoadControllerFromPrefab()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x153D0C4", Offset = "0x153D0C4", VA = "0x153D0C4")]
	private void LoadControllerFromSystem(int id)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x153CD20", Offset = "0x153CD20", VA = "0x153CD20")]
	private void LoadTexture(Pvr_ControllerVisual visual, string controllerName, bool fromRes)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x153D4D8", Offset = "0x153D4D8", VA = "0x153D4D8")]
	private Texture2D LoadOneTexture(string filepath, bool fromRes)
	{
		return null;
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x153D5E4", Offset = "0x153D5E4", VA = "0x153D5E4")]
	private byte[] ReadPNG(string path)
	{
		return null;
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x153D6F0", Offset = "0x153D6F0", VA = "0x153D6F0")]
	public Pvr_ControllerInit()
	{
	}
}
[Token(Token = "0x2000013")]
public class Pvr_ControllerLink
{
	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaClass javaHummingbirdClass;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AndroidJavaClass javaPico2ReceiverClass;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AndroidJavaClass javaserviceClass;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AndroidJavaClass javavractivityclass;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AndroidJavaClass javaCVClass;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AndroidJavaObject activity;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string gameobjname;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool picoDevice;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string hummingBirdMac;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hummingBirdRSSI;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool goblinserviceStarted;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool neoserviceStarted;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool controller0Connected;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
	public bool controller1Connected;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int mainHandID;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Pvr_Controller.UserHandNess handness;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int controllerType;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerHand Controller0;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ControllerHand Controller1;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int platFormType;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int trackingmode;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int systemProp;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int enablehand6dofbyhead;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool switchHomeKey;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] hbPoseData;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float[] sensorData;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int[] keyData;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int[] neo3TouchValue;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float[] fixedState;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float[] neoposeData;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int[] goblinKeyArray;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int[] neoKeyArray;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int[] neotriggerV;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float[] velocity;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float[] angularVelocity;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float[] acceData;

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x153DBBC", Offset = "0x153DBBC", VA = "0x153DBBC")]
	public Pvr_ControllerLink(string name)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x153E010", Offset = "0x153E010", VA = "0x153E010")]
	private void StartHummingBirdService()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x153EAB0", Offset = "0x153EAB0", VA = "0x153EAB0")]
	public bool IsServiceExisted()
	{
		return default(bool);
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x153E830", Offset = "0x153E830", VA = "0x153E830")]
	public void SetGameObjectToJar(string name)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x153E94C", Offset = "0x153E94C", VA = "0x153E94C")]
	public void BindService()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x153EC50", Offset = "0x153EC50", VA = "0x153EC50")]
	public void UnBindService()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x153EDB4", Offset = "0x153EDB4", VA = "0x153EDB4")]
	public void StopLark2Receiver()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x153EF28", Offset = "0x153EF28", VA = "0x153EF28")]
	public void StartLark2Receiver()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x153F064", Offset = "0x153F064", VA = "0x153F064")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x153F1D8", Offset = "0x153F1D8", VA = "0x153F1D8")]
	public void StartLark2Service()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x153F384", Offset = "0x153F384", VA = "0x153F384")]
	public int getHandness()
	{
		return default(int);
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x153F5A0", Offset = "0x153F5A0", VA = "0x153F5A0")]
	public void setHandness(int hand)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x153F704", Offset = "0x153F704", VA = "0x153F704")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x153F828", Offset = "0x153F828", VA = "0x153F828")]
	public void StopScan()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x153E6BC", Offset = "0x153E6BC", VA = "0x153E6BC")]
	public int GetSysproc()
	{
		return default(int);
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x153F950", Offset = "0x153F950", VA = "0x153F950")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x153FB60", Offset = "0x153FB60", VA = "0x153FB60")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x153FCA8", Offset = "0x153FCA8", VA = "0x153FCA8")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x153FDC8", Offset = "0x153FDC8", VA = "0x153FDC8")]
	public bool StartUpgrade()
	{
		return default(bool);
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x153FF04", Offset = "0x153FF04", VA = "0x153FF04")]
	public void setBinPath(string path, bool isasset)
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x1540094", Offset = "0x1540094", VA = "0x1540094")]
	public string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x15401F8", Offset = "0x15401F8", VA = "0x15401F8")]
	public long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1540360", Offset = "0x1540360", VA = "0x1540360")]
	public string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x15404C4", Offset = "0x15404C4", VA = "0x15404C4")]
	public long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x154062C", Offset = "0x154062C", VA = "0x154062C")]
	public int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x15409B0", Offset = "0x15409B0", VA = "0x15409B0")]
	public void RebackToLauncher()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1540B98", Offset = "0x1540B98", VA = "0x1540B98")]
	public void TurnUpVolume()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1540D2C", Offset = "0x1540D2C", VA = "0x1540D2C")]
	public void TurnDownVolume()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x1540EC0", Offset = "0x1540EC0", VA = "0x1540EC0")]
	public float[] GetHBControllerPoseData()
	{
		return null;
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x15412F8", Offset = "0x15412F8", VA = "0x15412F8")]
	public float[] GetControllerSensorData()
	{
		return null;
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x15414CC", Offset = "0x15414CC", VA = "0x15414CC")]
	public int[] GetControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x15415D0", Offset = "0x15415D0", VA = "0x15415D0")]
	public int[] GetNeo3TouchData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x1541E54", Offset = "0x1541E54", VA = "0x1541E54")]
	public int GetNeo3GripValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x1541FF0", Offset = "0x1541FF0", VA = "0x1541FF0")]
	public float[] GetControllerFixedSensorState(int hand)
	{
		return null;
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x1542684", Offset = "0x1542684", VA = "0x1542684")]
	public float[] GetCvControllerPoseData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x1542D34", Offset = "0x1542D34", VA = "0x1542D34")]
	public int[] GetHBControllerKeyData()
	{
		return null;
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x154431C", Offset = "0x154431C", VA = "0x154431C")]
	public int GetHBKeyValue()
	{
		return default(int);
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x15444BC", Offset = "0x15444BC", VA = "0x15444BC")]
	public int[] GetCvControllerKeyData(int hand)
	{
		return null;
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x1546390", Offset = "0x1546390", VA = "0x1546390")]
	public int GetCVTriggerValue(int hand)
	{
		return default(int);
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x1546554", Offset = "0x1546554", VA = "0x1546554")]
	public void AutoConnectHbController(int scanTimeMs)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x15466E4", Offset = "0x15466E4", VA = "0x15466E4")]
	public void StartControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x15468C0", Offset = "0x15468C0", VA = "0x15468C0")]
	public void StopControllerThread(int headSensorState, int handSensorState)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x1546A9C", Offset = "0x1546A9C", VA = "0x1546A9C")]
	public void SetUnityVersionToJar(string version)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1546BC8", Offset = "0x1546BC8", VA = "0x1546BC8")]
	public Vector3 GetVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x1546F9C", Offset = "0x1546F9C", VA = "0x1546F9C")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x1547408", Offset = "0x1547408", VA = "0x1547408")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x15477F4", Offset = "0x15477F4", VA = "0x15477F4")]
	public string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x1547958", Offset = "0x1547958", VA = "0x1547958")]
	public void VibrateNeo2Controller(float strength, int time, int hand)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x1547C8C", Offset = "0x1547C8C", VA = "0x1547C8C")]
	public int GetMainControllerIndex()
	{
		return default(int);
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x1547E04", Offset = "0x1547E04", VA = "0x1547E04")]
	public void SetMainController(int index)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x1547F64", Offset = "0x1547F64", VA = "0x1547F64")]
	public void ResetHeadSensorForController()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x154808C", Offset = "0x154808C", VA = "0x154808C")]
	public void GetDeviceVersion(int deviceType)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x15481F4", Offset = "0x15481F4", VA = "0x15481F4")]
	public void GetControllerSnCode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x154835C", Offset = "0x154835C", VA = "0x154835C")]
	public void SetControllerUnbind(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x15484C4", Offset = "0x15484C4", VA = "0x15484C4")]
	public void SetStationRestart()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x15485EC", Offset = "0x15485EC", VA = "0x15485EC")]
	public void StartStationOtaUpdate()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x1548714", Offset = "0x1548714", VA = "0x1548714")]
	public void StartControllerOtaUpdate(int mode, int controllerSerialNum)
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x15488E8", Offset = "0x15488E8", VA = "0x15488E8")]
	public void EnterPairMode(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x1548A50", Offset = "0x1548A50", VA = "0x1548A50")]
	public void SetControllerShutdown(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x1548BB8", Offset = "0x1548BB8", VA = "0x1548BB8")]
	public int GetStationPairState()
	{
		return default(int);
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x1548D34", Offset = "0x1548D34", VA = "0x1548D34")]
	public int GetStationOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x1548EB0", Offset = "0x1548EB0", VA = "0x1548EB0")]
	public int GetControllerOtaUpdateProgress()
	{
		return default(int);
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x154902C", Offset = "0x154902C", VA = "0x154902C")]
	public void GetControllerVersionAndSN(int controllerSerialNum)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1549194", Offset = "0x1549194", VA = "0x1549194")]
	public void GetControllerUniqueID()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x15492BC", Offset = "0x15492BC", VA = "0x15492BC")]
	public void InterruptStationPairMode()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x15493E4", Offset = "0x15493E4", VA = "0x15493E4")]
	public int GetControllerAbility(int controllerSerialNum)
	{
		return default(int);
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x1549568", Offset = "0x1549568", VA = "0x1549568")]
	public void SwitchHomeKey(bool state)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x154961C", Offset = "0x154961C", VA = "0x154961C")]
	public void SetBootReconnect()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x154973C", Offset = "0x154973C", VA = "0x154973C")]
	public int GetTemperature()
	{
		return default(int);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x15498B0", Offset = "0x15498B0", VA = "0x15498B0")]
	public int GetDeviceType()
	{
		return default(int);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x1549A24", Offset = "0x1549A24", VA = "0x1549A24")]
	public int GetControllerType()
	{
		return default(int);
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x1549B2C", Offset = "0x1549B2C", VA = "0x1549B2C")]
	public string GetHummingBird2SN()
	{
		return null;
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x1549C88", Offset = "0x1549C88", VA = "0x1549C88")]
	public string GetControllerVersion()
	{
		return null;
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x1549DE4", Offset = "0x1549DE4", VA = "0x1549DE4")]
	public bool IsEnbleTrigger()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x1549F44", Offset = "0x1549F44", VA = "0x1549F44")]
	public void StartCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x154A0AC", Offset = "0x154A0AC", VA = "0x154A0AC")]
	public void StopCV2PairingMode(int devicetype)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x154A214", Offset = "0x154A214", VA = "0x154A214")]
	public int GetControllerBindingState(int id)
	{
		return default(int);
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x154A388", Offset = "0x154A388", VA = "0x154A388")]
	public void setIsEnbleHomeKey(bool state)
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x154A4E0", Offset = "0x154A4E0", VA = "0x154A4E0")]
	public int getControllerSensorStatus(int id)
	{
		return default(int);
	}
}
[Token(Token = "0x2000014")]
public class Pvr_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x20004FB")]
	public delegate void PvrServiceStartSuccess();

	[Token(Token = "0x20004FC")]
	public delegate void PvrControllerStateChanged(string data);

	[Token(Token = "0x20004FD")]
	public delegate void ChangeMainControllerCallBack(string index);

	[Token(Token = "0x20004FE")]
	public delegate void ChangeHandNessCallBack(string index);

	[Token(Token = "0x20004FF")]
	public delegate void SetHbServiceBindState();

	[Token(Token = "0x2000500")]
	public delegate void ControllerThreadStartedCallback();

	[Token(Token = "0x2000501")]
	public delegate void SetControllerServiceBindState();

	[Token(Token = "0x2000502")]
	public delegate void ControllerStatusChange(string isconnect);

	[Token(Token = "0x2000503")]
	public delegate void SetControllerAbility(string data);

	[Token(Token = "0x2000504")]
	public delegate void SetControllerStateChanged(string data);

	[Token(Token = "0x2000505")]
	public delegate void SetHbControllerMac(string mac);

	[Token(Token = "0x2000506")]
	public delegate void ControllerDeviceVersionCallback(string data);

	[Token(Token = "0x2000507")]
	public delegate void ControllerSnCodeCallback(string data);

	[Token(Token = "0x2000508")]
	public delegate void ControllerUnbindCallback(string status);

	[Token(Token = "0x2000509")]
	public delegate void ControllerStationStatusCallback(string status);

	[Token(Token = "0x200050A")]
	public delegate void ControllerStationBusyCallback(string status);

	[Token(Token = "0x200050B")]
	public delegate void ControllerOtaStartCodeCallback(string data);

	[Token(Token = "0x200050C")]
	public delegate void ControllerDeviceVersionAndSNCallback(string data);

	[Token(Token = "0x200050D")]
	public delegate void ControllerUniqueIDCallback(string data);

	[Token(Token = "0x200050E")]
	public delegate void ControllerCombinedKeyUnbindCallback(string data);

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ControllerManager instance;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Pvr_ControllerLink controllerlink;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float cTime;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool stopConnect;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text toast;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool controllerServicestate;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float disConnectTime;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool LengthAdaptiveRay;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] sensorData;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int[] keyData;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float[] g2SensorData;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] g2KeyData;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int keyOffset;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int rotControllerMode;

	[Token(Token = "0x17000009")]
	public static Pvr_ControllerManager Instance
	{
		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x1C40A8C", Offset = "0x1C40A8C", VA = "0x1C40A8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000001")]
	public static event PvrServiceStartSuccess PvrServiceStartSuccessEvent
	{
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x1C40CCC", Offset = "0x1C40CCC", VA = "0x1C40CCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBC40", Offset = "0xEEBC40")]
		add
		{
		}
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0x1C40DBC", Offset = "0x1C40DBC", VA = "0x1C40DBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBC50", Offset = "0xEEBC50")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event PvrControllerStateChanged PvrControllerStateChangedEvent
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x1C40EAC", Offset = "0x1C40EAC", VA = "0x1C40EAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBC60", Offset = "0xEEBC60")]
		add
		{
		}
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x1C40F9C", Offset = "0x1C40F9C", VA = "0x1C40F9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBC70", Offset = "0xEEBC70")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public static event ChangeMainControllerCallBack ChangeMainControllerCallBackEvent
	{
		[Token(Token = "0x60000DA")]
		[Address(RVA = "0x1C4108C", Offset = "0x1C4108C", VA = "0x1C4108C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBC80", Offset = "0xEEBC80")]
		add
		{
		}
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0x1C4117C", Offset = "0x1C4117C", VA = "0x1C4117C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBC90", Offset = "0xEEBC90")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public static event ChangeHandNessCallBack ChangeHandNessCallBackEvent
	{
		[Token(Token = "0x60000DC")]
		[Address(RVA = "0x1C4126C", Offset = "0x1C4126C", VA = "0x1C4126C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBCA0", Offset = "0xEEBCA0")]
		add
		{
		}
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0x1C4135C", Offset = "0x1C4135C", VA = "0x1C4135C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBCB0", Offset = "0xEEBCB0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public static event SetHbServiceBindState SetHbServiceBindStateEvent
	{
		[Token(Token = "0x60000DE")]
		[Address(RVA = "0x1C4144C", Offset = "0x1C4144C", VA = "0x1C4144C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBCC0", Offset = "0xEEBCC0")]
		add
		{
		}
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x1C4153C", Offset = "0x1C4153C", VA = "0x1C4153C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBCD0", Offset = "0xEEBCD0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public static event ControllerThreadStartedCallback ControllerThreadStartedCallbackEvent
	{
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x1C4162C", Offset = "0x1C4162C", VA = "0x1C4162C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBCE0", Offset = "0xEEBCE0")]
		add
		{
		}
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x1C4171C", Offset = "0x1C4171C", VA = "0x1C4171C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBCF0", Offset = "0xEEBCF0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public static event SetControllerServiceBindState SetControllerServiceBindStateEvent
	{
		[Token(Token = "0x60000E2")]
		[Address(RVA = "0x1C4180C", Offset = "0x1C4180C", VA = "0x1C4180C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBD00", Offset = "0xEEBD00")]
		add
		{
		}
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0x1C418FC", Offset = "0x1C418FC", VA = "0x1C418FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBD10", Offset = "0xEEBD10")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public static event ControllerStatusChange ControllerStatusChangeEvent
	{
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x1C419EC", Offset = "0x1C419EC", VA = "0x1C419EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBD20", Offset = "0xEEBD20")]
		add
		{
		}
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x1C41ADC", Offset = "0x1C41ADC", VA = "0x1C41ADC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBD30", Offset = "0xEEBD30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public static event SetControllerAbility SetControllerAbilityEvent
	{
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0x1C41BCC", Offset = "0x1C41BCC", VA = "0x1C41BCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBD40", Offset = "0xEEBD40")]
		add
		{
		}
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x1C41CBC", Offset = "0x1C41CBC", VA = "0x1C41CBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBD50", Offset = "0xEEBD50")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public static event SetControllerStateChanged SetControllerStateChangedEvent
	{
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x1C41DAC", Offset = "0x1C41DAC", VA = "0x1C41DAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBD60", Offset = "0xEEBD60")]
		add
		{
		}
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x1C41E9C", Offset = "0x1C41E9C", VA = "0x1C41E9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBD70", Offset = "0xEEBD70")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public static event SetHbControllerMac SetHbControllerMacEvent
	{
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x1C41F8C", Offset = "0x1C41F8C", VA = "0x1C41F8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBD80", Offset = "0xEEBD80")]
		add
		{
		}
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x1C4207C", Offset = "0x1C4207C", VA = "0x1C4207C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBD90", Offset = "0xEEBD90")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public static event ControllerDeviceVersionCallback ControllerDeviceVersionCallbackEvent
	{
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0x1C4216C", Offset = "0x1C4216C", VA = "0x1C4216C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBDA0", Offset = "0xEEBDA0")]
		add
		{
		}
		[Token(Token = "0x60000ED")]
		[Address(RVA = "0x1C4225C", Offset = "0x1C4225C", VA = "0x1C4225C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBDB0", Offset = "0xEEBDB0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public static event ControllerSnCodeCallback ControllerSnCodeCallbackEvent
	{
		[Token(Token = "0x60000EE")]
		[Address(RVA = "0x1C4234C", Offset = "0x1C4234C", VA = "0x1C4234C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBDC0", Offset = "0xEEBDC0")]
		add
		{
		}
		[Token(Token = "0x60000EF")]
		[Address(RVA = "0x1C4243C", Offset = "0x1C4243C", VA = "0x1C4243C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBDD0", Offset = "0xEEBDD0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public static event ControllerUnbindCallback ControllerUnbindCallbackEvent
	{
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x1C4252C", Offset = "0x1C4252C", VA = "0x1C4252C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBDE0", Offset = "0xEEBDE0")]
		add
		{
		}
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x1C4261C", Offset = "0x1C4261C", VA = "0x1C4261C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBDF0", Offset = "0xEEBDF0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public static event ControllerStationStatusCallback ControllerStationStatusCallbackEvent
	{
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x1C4270C", Offset = "0x1C4270C", VA = "0x1C4270C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBE00", Offset = "0xEEBE00")]
		add
		{
		}
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x1C427FC", Offset = "0x1C427FC", VA = "0x1C427FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBE10", Offset = "0xEEBE10")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public static event ControllerStationBusyCallback ControllerStationBusyCallbackEvent
	{
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x1C428EC", Offset = "0x1C428EC", VA = "0x1C428EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBE20", Offset = "0xEEBE20")]
		add
		{
		}
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x1C429DC", Offset = "0x1C429DC", VA = "0x1C429DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBE30", Offset = "0xEEBE30")]
		remove
		{
		}
	}

	[Token(Token = "0x14000011")]
	public static event ControllerOtaStartCodeCallback ControllerOtaStartCodeCallbackEvent
	{
		[Token(Token = "0x60000F6")]
		[Address(RVA = "0x1C42ACC", Offset = "0x1C42ACC", VA = "0x1C42ACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBE40", Offset = "0xEEBE40")]
		add
		{
		}
		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x1C42BBC", Offset = "0x1C42BBC", VA = "0x1C42BBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBE50", Offset = "0xEEBE50")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event ControllerDeviceVersionAndSNCallback ControllerDeviceVersionAndSNCallbackEvent
	{
		[Token(Token = "0x60000F8")]
		[Address(RVA = "0x1C42CAC", Offset = "0x1C42CAC", VA = "0x1C42CAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBE60", Offset = "0xEEBE60")]
		add
		{
		}
		[Token(Token = "0x60000F9")]
		[Address(RVA = "0x1C42D9C", Offset = "0x1C42D9C", VA = "0x1C42D9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBE70", Offset = "0xEEBE70")]
		remove
		{
		}
	}

	[Token(Token = "0x14000013")]
	public static event ControllerUniqueIDCallback ControllerUniqueIDCallbackEvent
	{
		[Token(Token = "0x60000FA")]
		[Address(RVA = "0x1C42E8C", Offset = "0x1C42E8C", VA = "0x1C42E8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBE80", Offset = "0xEEBE80")]
		add
		{
		}
		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x1C42F7C", Offset = "0x1C42F7C", VA = "0x1C42F7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBE90", Offset = "0xEEBE90")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public static event ControllerCombinedKeyUnbindCallback ControllerCombinedKeyUnbindCallbackEvent
	{
		[Token(Token = "0x60000FC")]
		[Address(RVA = "0x1C4306C", Offset = "0x1C4306C", VA = "0x1C4306C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBEA0", Offset = "0xEEBEA0")]
		add
		{
		}
		[Token(Token = "0x60000FD")]
		[Address(RVA = "0x1C4315C", Offset = "0x1C4315C", VA = "0x1C4315C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBEB0", Offset = "0xEEBEB0")]
		remove
		{
		}
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x1C4324C", Offset = "0x1C4324C", VA = "0x1C4324C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x1C43550", Offset = "0x1C43550", VA = "0x1C43550")]
	private void Start()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x1C435F8", Offset = "0x1C435F8", VA = "0x1C435F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x1C450F8", Offset = "0x1C450F8", VA = "0x1C450F8")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x1C45790", Offset = "0x1C45790", VA = "0x1C45790")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1C45870", Offset = "0x1C45870", VA = "0x1C45870")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1C459B8", Offset = "0x1C459B8", VA = "0x1C459B8")]
	public void StopLark2Service()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x1C45A60", Offset = "0x1C45A60", VA = "0x1C45A60")]
	public Vector3 GetAngularVelocity(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x1C45B44", Offset = "0x1C45B44", VA = "0x1C45B44")]
	public Vector3 GetAcceleration(int num)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x1C434A8", Offset = "0x1C434A8", VA = "0x1C434A8")]
	public void BindService()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x1C45C28", Offset = "0x1C45C28", VA = "0x1C45C28")]
	public void StartScan()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x1C45CD0", Offset = "0x1C45CD0", VA = "0x1C45CD0")]
	public void StopScan()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x1C45D78", Offset = "0x1C45D78", VA = "0x1C45D78")]
	public void ResetController(int num)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x1C45508", Offset = "0x1C45508", VA = "0x1C45508")]
	public static int GetControllerConnectionState(int num)
	{
		return default(int);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1C45E28", Offset = "0x1C45E28", VA = "0x1C45E28")]
	public void ConnectBLE()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x1C45ED0", Offset = "0x1C45ED0", VA = "0x1C45ED0")]
	public void DisConnectBLE()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x1C45F78", Offset = "0x1C45F78", VA = "0x1C45F78")]
	public void SetBinPath(string path, bool isAsset)
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x1C4603C", Offset = "0x1C4603C", VA = "0x1C4603C")]
	public void StartUpgrade()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x1C460E4", Offset = "0x1C460E4", VA = "0x1C460E4")]
	public static string GetBLEImageType()
	{
		return null;
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x1C46158", Offset = "0x1C46158", VA = "0x1C46158")]
	public static long GetBLEVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x1C461CC", Offset = "0x1C461CC", VA = "0x1C461CC")]
	public static string GetFileImageType()
	{
		return null;
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x1C46240", Offset = "0x1C46240", VA = "0x1C46240")]
	public static long GetFileVersion()
	{
		return default(long);
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x1C462B4", Offset = "0x1C462B4", VA = "0x1C462B4")]
	public static void AutoConnectHbController(int scans)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x1C46364", Offset = "0x1C46364", VA = "0x1C46364")]
	public static string GetConnectedDeviceMac()
	{
		return null;
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x1C4641C", Offset = "0x1C4641C", VA = "0x1C4641C")]
	public void setHbControllerMac(string mac)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x1C46974", Offset = "0x1C46974", VA = "0x1C46974")]
	public int GetControllerRSSI()
	{
		return default(int);
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1C469E8", Offset = "0x1C469E8", VA = "0x1C469E8")]
	public void setHbServiceBindState(string state)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x1C46E80", Offset = "0x1C46E80", VA = "0x1C46E80")]
	public void setControllerServiceBindState(string state)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x1C47318", Offset = "0x1C47318", VA = "0x1C47318")]
	public void setHbControllerConnectState(string isconnect)
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x1C47CE4", Offset = "0x1C47CE4", VA = "0x1C47CE4")]
	public void setControllerStateChanged(string state)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x1C4862C", Offset = "0x1C4862C", VA = "0x1C4862C")]
	public void setControllerAbility(string data)
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1C48AB8", Offset = "0x1C48AB8", VA = "0x1C48AB8")]
	public void controllerThreadStartedCallback()
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1C49104", Offset = "0x1C49104", VA = "0x1C49104")]
	public void controllerDeviceVersionCallback(string data)
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x1C49590", Offset = "0x1C49590", VA = "0x1C49590")]
	public void controllerSnCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x1C49A1C", Offset = "0x1C49A1C", VA = "0x1C49A1C")]
	public void controllerUnbindCallback(string status)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x1C49EA8", Offset = "0x1C49EA8", VA = "0x1C49EA8")]
	public void controllerStationStatusCallback(string status)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x1C4A334", Offset = "0x1C4A334", VA = "0x1C4A334")]
	public void controllerStationBusyCallback(string status)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x1C4A7C0", Offset = "0x1C4A7C0", VA = "0x1C4A7C0")]
	public void controllerOTAStartCodeCallback(string data)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x1C4AC4C", Offset = "0x1C4AC4C", VA = "0x1C4AC4C")]
	public void controllerDeviceVersionAndSNCallback(string data)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x1C4B0D8", Offset = "0x1C4B0D8", VA = "0x1C4B0D8")]
	public void controllerUniqueIDCallback(string data)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x1C4B564", Offset = "0x1C4B564", VA = "0x1C4B564")]
	public void controllerCombinedKeyUnbindCallback(string controllerSerialNum)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x1C4B9A4", Offset = "0x1C4B9A4", VA = "0x1C4B9A4")]
	public void setupdateFailed()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x1C4B9A8", Offset = "0x1C4B9A8", VA = "0x1C4B9A8")]
	public void setupdateSuccess()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x1C4B9AC", Offset = "0x1C4B9AC", VA = "0x1C4B9AC")]
	public void setupdateProgress(string progress)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x1C4B9B0", Offset = "0x1C4B9B0", VA = "0x1C4B9B0")]
	public void setHbAutoConnectState(string state)
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x1C4BCCC", Offset = "0x1C4BCCC", VA = "0x1C4BCCC")]
	public void callbackControllerServiceState(string state)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x1C4BE28", Offset = "0x1C4BE28", VA = "0x1C4BE28")]
	public void changeMainControllerCallback(string index)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x1C4C308", Offset = "0x1C4C308", VA = "0x1C4C308")]
	public void changeHandnessCallback(string index)
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x1C4BB04", Offset = "0x1C4BB04", VA = "0x1C4BB04")]
	private void ShowToast(int type)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x1C4C7E8", Offset = "0x1C4C7E8", VA = "0x1C4C7E8")]
	private void HideToast()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x1C4C890", Offset = "0x1C4C890", VA = "0x1C4C890")]
	private void CheckControllerService()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x1C48BF0", Offset = "0x1C48BF0", VA = "0x1C48BF0")]
	private void GetCVControllerState()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x1C449D8", Offset = "0x1C449D8", VA = "0x1C449D8")]
	private void SetSystemKey()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x1C445FC", Offset = "0x1C445FC", VA = "0x1C445FC")]
	private void TransformData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1C4C8A4", Offset = "0x1C4C8A4", VA = "0x1C4C8A4")]
	private void TransSingleKey(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x1C4C9F4", Offset = "0x1C4C9F4", VA = "0x1C4C9F4")]
	private void TransformTouchData(ControllerHand hand, int handId, int[] data)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x1C4CA98", Offset = "0x1C4CA98", VA = "0x1C4CA98")]
	private void TransSingleTouchValue(PvrControllerKey key, int beginIndex, int[] data)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x1C4CB98", Offset = "0x1C4CB98", VA = "0x1C4CB98")]
	public Pvr_ControllerManager()
	{
	}
}
[Token(Token = "0x2000015")]
public class Pvr_ControllerModuleInit : MonoBehaviour
{
	[Token(Token = "0x200050F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4830", Offset = "0xEE4830")]
	private sealed class <ShowOrHideRay>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_ControllerModuleInit <>4__this;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int id;

		[Token(Token = "0x1700040C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A58")]
			[Address(RVA = "0x1C4DB18", Offset = "0x1C4DB18", VA = "0x1C4DB18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A5A")]
			[Address(RVA = "0x1C4DB80", Offset = "0x1C4DB80", VA = "0x1C4DB80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A55")]
		[Address(RVA = "0x1C4D6DC", Offset = "0x1C4D6DC", VA = "0x1C4D6DC")]
		[DebuggerHidden]
		public <ShowOrHideRay>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002A56")]
		[Address(RVA = "0x1C4DA20", Offset = "0x1C4DA20", VA = "0x1C4DA20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A57")]
		[Address(RVA = "0x1C4DA24", Offset = "0x1C4DA24", VA = "0x1C4DA24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A59")]
		[Address(RVA = "0x1C4DB20", Offset = "0x1C4DB20", VA = "0x1C4DB20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerVariety Variety;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsCustomModel;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject dot;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject rayLine;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject controller;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool moduleState;

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x1C4D1EC", Offset = "0x1C4D1EC", VA = "0x1C4D1EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x1C4D3B8", Offset = "0x1C4D3B8", VA = "0x1C4D3B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1C4D4D4", Offset = "0x1C4D4D4", VA = "0x1C4D4D4")]
	private void ServiceStartSuccess()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1C4D548", Offset = "0x1C4D548", VA = "0x1C4D548")]
	private void ControllerStateChanged(string data)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1C4D64C", Offset = "0x1C4D64C", VA = "0x1C4D64C")]
	private void MainControllerIDChanged(string data)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1C4D4D8", Offset = "0x1C4D4D8", VA = "0x1C4D4D8")]
	private void RefreshRay()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1C4D650", Offset = "0x1C4D650", VA = "0x1C4D650")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEBEC0", Offset = "0xEEBEC0")]
	private IEnumerator ShowOrHideRay(int id)
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1C4D708", Offset = "0x1C4D708", VA = "0x1C4D708")]
	public void ForceHideOrShow(bool state)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1C4D804", Offset = "0x1C4D804", VA = "0x1C4D804")]
	public void UpdateRay()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1C4DA10", Offset = "0x1C4DA10", VA = "0x1C4DA10")]
	public Pvr_ControllerModuleInit()
	{
	}
}
[Token(Token = "0x2000016")]
public class Pvr_ControllerPower : MonoBehaviour
{
	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite power1;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Sprite power2;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Sprite power3;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Sprite power4;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Sprite power5;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image powerImage;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int powerValue;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float power;

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1C4DB88", Offset = "0x1C4DB88", VA = "0x1C4DB88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1C4DC5C", Offset = "0x1C4DC5C", VA = "0x1C4DC5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1C4DC7C", Offset = "0x1C4DC7C", VA = "0x1C4DC7C")]
	private void RefreshPower(int hand)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1C4DD9C", Offset = "0x1C4DD9C", VA = "0x1C4DD9C")]
	public Pvr_ControllerPower()
	{
	}
}
[Token(Token = "0x2000017")]
public class Pvr_ControllerVisual : MonoBehaviour
{
	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerDevice currentDevice;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D m_idle;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D m_app;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D m_home;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D m_touchpad;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D m_volUp;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D m_volDn;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D m_trigger;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Texture2D m_a;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Texture2D m_b;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Texture2D m_x;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Texture2D m_y;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D m_grip;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Renderer controllerRenderMat;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1C4DDA4", Offset = "0x1C4DDA4", VA = "0x1C4DDA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1C4DE04", Offset = "0x1C4DE04", VA = "0x1C4DE04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x1C4DE74", Offset = "0x1C4DE74", VA = "0x1C4DE74")]
	private void Update()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x1C4DE94", Offset = "0x1C4DE94", VA = "0x1C4DE94")]
	private void ChangeKeyEffects(int hand)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x1C4E1C0", Offset = "0x1C4E1C0", VA = "0x1C4E1C0")]
	public Pvr_ControllerVisual()
	{
	}
}
[Token(Token = "0x2000018")]
public class Pvr_ToolTips : MonoBehaviour
{
	[Token(Token = "0x2000510")]
	public enum TipBtn
	{
		[Token(Token = "0x4001E92")]
		app,
		[Token(Token = "0x4001E93")]
		touchpad,
		[Token(Token = "0x4001E94")]
		home,
		[Token(Token = "0x4001E95")]
		volup,
		[Token(Token = "0x4001E96")]
		voldown,
		[Token(Token = "0x4001E97")]
		trigger,
		[Token(Token = "0x4001E98")]
		grip
	}

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ControllerDevice currentDevice;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float tipsAlpha;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Pvr_ToolTips tooltips;

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x1C52F18", Offset = "0x1C52F18", VA = "0x1C52F18")]
	public void ChangeTipsText(TipBtn tip, string key)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x1C53090", Offset = "0x1C53090", VA = "0x1C53090")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x1C53110", Offset = "0x1C53110", VA = "0x1C53110")]
	private void Update()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x1C53314", Offset = "0x1C53314", VA = "0x1C53314")]
	private void LoadTextFromJson()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x1C53760", Offset = "0x1C53760", VA = "0x1C53760")]
	public static void RefreshTips()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x1C53804", Offset = "0x1C53804", VA = "0x1C53804")]
	public Pvr_ToolTips()
	{
	}
}
[Token(Token = "0x2000019")]
public class Pvr_TouchPadScroll : MonoBehaviour
{
	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ScrollRect scrollRect;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isHoving;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int mainHand;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SwipeDirection direction;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 currPos;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 tarPos;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lerpSpeed;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform tranViewport;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float ignoreDis;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 lastTouchDownPos;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector2 lastTouchUpPos;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool isTouching;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isClosed;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector2 vecOrigin;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2 vecOriginNeo2;

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1C5380C", Offset = "0x1C5380C", VA = "0x1C5380C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x1C538B0", Offset = "0x1C538B0", VA = "0x1C538B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x1C53D58", Offset = "0x1C53D58", VA = "0x1C53D58")]
	private bool IsControllerConnect()
	{
		return default(bool);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x1C539F8", Offset = "0x1C539F8", VA = "0x1C539F8")]
	private void UpdateTargetPos()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x1C53F14", Offset = "0x1C53F14", VA = "0x1C53F14")]
	private void ComputeTouchPos()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x1C54264", Offset = "0x1C54264", VA = "0x1C54264")]
	private void ComputeRockerPos()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x1C545E8", Offset = "0x1C545E8", VA = "0x1C545E8")]
	private bool VerifyNeo2TouchValid(Vector2 nowTouchPos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x1C53B4C", Offset = "0x1C53B4C", VA = "0x1C53B4C")]
	private void UpdatePos()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x1C53E38", Offset = "0x1C53E38", VA = "0x1C53E38")]
	private void ResetParameter()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x1C538DC", Offset = "0x1C538DC", VA = "0x1C538DC")]
	private void Process()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x1C54624", Offset = "0x1C54624", VA = "0x1C54624")]
	private bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x1C54814", Offset = "0x1C54814", VA = "0x1C54814")]
	private bool FindTree(Transform tran)
	{
		return default(bool);
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x1C54900", Offset = "0x1C54900", VA = "0x1C54900")]
	public Pvr_TouchPadScroll()
	{
	}
}
[Token(Token = "0x200001A")]
public class Pvr_TouchVisual : MonoBehaviour
{
	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public ControllerDevice currentDevice;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public ControllerVariety variety;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer touchRenderer;

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x1C549BC", Offset = "0x1C549BC", VA = "0x1C549BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x1C54A6C", Offset = "0x1C54A6C", VA = "0x1C54A6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x1C54A8C", Offset = "0x1C54A8C", VA = "0x1C54A8C")]
	private void ChangeEffects(int hand)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x1C54B9C", Offset = "0x1C54B9C", VA = "0x1C54B9C")]
	public Pvr_TouchVisual()
	{
	}
}
[Token(Token = "0x200001B")]
public class DemoController : MonoBehaviour
{
	[Token(Token = "0x2000511")]
	public delegate void showLoadingEventHandler();

	[Token(Token = "0x2000512")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4840", Offset = "0xEE4840")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject btnObj;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoController <>4__this;

		[Token(Token = "0x6002A5F")]
		[Address(RVA = "0x1226E34", Offset = "0x1226E34", VA = "0x1226E34")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6002A60")]
		[Address(RVA = "0x12276B4", Offset = "0x12276B4", VA = "0x12276B4")]
		internal void <InitDelegate>b__0()
		{
		}
	}

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Callback callback;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject msg;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKManager picoVrManager;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string currentOrderID;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject loading;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject BG;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject InputPanel;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static showLoadingEventHandler showLoading;

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x12266A4", Offset = "0x12266A4", VA = "0x12266A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x1226810", Offset = "0x1226810", VA = "0x1226810")]
	private void Start()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x1226CD0", Offset = "0x1226CD0", VA = "0x1226CD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x12268F4", Offset = "0x12268F4", VA = "0x12268F4")]
	private void InitDelegate()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x1226E3C", Offset = "0x1226E3C", VA = "0x1226E3C")]
	private void OnClick(GameObject btnObj)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1227198", Offset = "0x1227198", VA = "0x1227198")]
	public string getRamdomTestOrderID()
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x1227154", Offset = "0x1227154", VA = "0x1227154")]
	private void StartLoading()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x12271EC", Offset = "0x12271EC", VA = "0x12271EC")]
	public void StopLoading()
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x12272FC", Offset = "0x12272FC", VA = "0x12272FC")]
	public void DoPayByCode()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x12275D0", Offset = "0x12275D0", VA = "0x12275D0")]
	private bool VerifyLocalToken()
	{
		return default(bool);
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x12276AC", Offset = "0x12276AC", VA = "0x12276AC")]
	public DemoController()
	{
	}
}
[Token(Token = "0x200001C")]
public class LoadingRatation : MonoBehaviour
{
	[Token(Token = "0x600016E")]
	[Address(RVA = "0x12DD6E8", Offset = "0x12DD6E8", VA = "0x12DD6E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x12DD6EC", Offset = "0x12DD6EC", VA = "0x12DD6EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x12DD760", Offset = "0x12DD760", VA = "0x12DD760")]
	public LoadingRatation()
	{
	}
}
[Token(Token = "0x200001D")]
public class Callback : MonoBehaviour
{
	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IS_SUCCESS;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string MSG;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string CODE;

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x12BA45C", Offset = "0x12BA45C", VA = "0x12BA45C")]
	public void LoginCallback(string LoginInfo)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x12BA754", Offset = "0x12BA754", VA = "0x12BA754")]
	public void QueryOrPayCallback(string queryOrPayInfo)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x12BA998", Offset = "0x12BA998", VA = "0x12BA998")]
	public void UserInfoCallback(string userInfo)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x12BA68C", Offset = "0x12BA68C", VA = "0x12BA68C")]
	public void SetMassage(string massage)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x12BAA74", Offset = "0x12BAA74", VA = "0x12BAA74")]
	public GameObject GetCurrentGameObject()
	{
		return null;
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x12BAAC0", Offset = "0x12BAAC0", VA = "0x12BAAC0")]
	public void ActivityForResultCallback(string activity)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x12BABF4", Offset = "0x12BABF4", VA = "0x12BABF4")]
	public Callback()
	{
	}
}
[Token(Token = "0x200001E")]
public class CommonDic
{
	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CommonDic dic;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<string, string> mydic;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string _app_ID;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _app_Key;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _user_token;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string _access_token;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _open_id;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string _refresh_token;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string _expires_in;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string _user_info;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string _subject;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string _body;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string _order_id;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string _total;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _goods_tag;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string _notify_url;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string _trade_type;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string _pay_code;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string _order_info;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private string _code;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private string _msg;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private string _merchant_ID;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private string _payKey;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private string _isSuucess;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private string _loginMsg;

	[Token(Token = "0x1700000A")]
	public string subject
	{
		[Token(Token = "0x600017D")]
		[Address(RVA = "0x121CEF0", Offset = "0x121CEF0", VA = "0x121CEF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600017E")]
		[Address(RVA = "0x121CEF8", Offset = "0x121CEF8", VA = "0x121CEF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public string body
	{
		[Token(Token = "0x600017F")]
		[Address(RVA = "0x121CF00", Offset = "0x121CF00", VA = "0x121CF00")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000180")]
		[Address(RVA = "0x121CF08", Offset = "0x121CF08", VA = "0x121CF08")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public string order_id
	{
		[Token(Token = "0x6000181")]
		[Address(RVA = "0x121CF10", Offset = "0x121CF10", VA = "0x121CF10")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000182")]
		[Address(RVA = "0x121CF18", Offset = "0x121CF18", VA = "0x121CF18")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public string total
	{
		[Token(Token = "0x6000183")]
		[Address(RVA = "0x121CF20", Offset = "0x121CF20", VA = "0x121CF20")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000184")]
		[Address(RVA = "0x121CF28", Offset = "0x121CF28", VA = "0x121CF28")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public string goods_tag
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x121CF30", Offset = "0x121CF30", VA = "0x121CF30")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x121CF38", Offset = "0x121CF38", VA = "0x121CF38")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public string notify_url
	{
		[Token(Token = "0x6000187")]
		[Address(RVA = "0x121CF40", Offset = "0x121CF40", VA = "0x121CF40")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000188")]
		[Address(RVA = "0x121CF48", Offset = "0x121CF48", VA = "0x121CF48")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public string pay_code
	{
		[Token(Token = "0x6000189")]
		[Address(RVA = "0x121CF50", Offset = "0x121CF50", VA = "0x121CF50")]
		get
		{
			return null;
		}
		[Token(Token = "0x600018A")]
		[Address(RVA = "0x121CF58", Offset = "0x121CF58", VA = "0x121CF58")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public string trade_type
	{
		[Token(Token = "0x600018B")]
		[Address(RVA = "0x121CF60", Offset = "0x121CF60", VA = "0x121CF60")]
		get
		{
			return null;
		}
		[Token(Token = "0x600018C")]
		[Address(RVA = "0x121CF68", Offset = "0x121CF68", VA = "0x121CF68")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public string user_token
	{
		[Token(Token = "0x600018D")]
		[Address(RVA = "0x121CF70", Offset = "0x121CF70", VA = "0x121CF70")]
		get
		{
			return null;
		}
		[Token(Token = "0x600018E")]
		[Address(RVA = "0x121CF78", Offset = "0x121CF78", VA = "0x121CF78")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public string access_token
	{
		[Token(Token = "0x600018F")]
		[Address(RVA = "0x121CF80", Offset = "0x121CF80", VA = "0x121CF80")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000190")]
		[Address(RVA = "0x121CF88", Offset = "0x121CF88", VA = "0x121CF88")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public string open_id
	{
		[Token(Token = "0x6000191")]
		[Address(RVA = "0x121CF90", Offset = "0x121CF90", VA = "0x121CF90")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000192")]
		[Address(RVA = "0x121CF98", Offset = "0x121CF98", VA = "0x121CF98")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public string refresh_token
	{
		[Token(Token = "0x6000193")]
		[Address(RVA = "0x121CFA0", Offset = "0x121CFA0", VA = "0x121CFA0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000194")]
		[Address(RVA = "0x121CFA8", Offset = "0x121CFA8", VA = "0x121CFA8")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public string expires_in
	{
		[Token(Token = "0x6000195")]
		[Address(RVA = "0x121CFB0", Offset = "0x121CFB0", VA = "0x121CFB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000196")]
		[Address(RVA = "0x121CFB8", Offset = "0x121CFB8", VA = "0x121CFB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public string isSuccess
	{
		[Token(Token = "0x6000197")]
		[Address(RVA = "0x121CFC0", Offset = "0x121CFC0", VA = "0x121CFC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000198")]
		[Address(RVA = "0x121CFC8", Offset = "0x121CFC8", VA = "0x121CFC8")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public string loginMsg
	{
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x121CFD0", Offset = "0x121CFD0", VA = "0x121CFD0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600019A")]
		[Address(RVA = "0x121CFD8", Offset = "0x121CFD8", VA = "0x121CFD8")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public string user_info
	{
		[Token(Token = "0x600019B")]
		[Address(RVA = "0x121CFE0", Offset = "0x121CFE0", VA = "0x121CFE0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600019C")]
		[Address(RVA = "0x121CFE8", Offset = "0x121CFE8", VA = "0x121CFE8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public string order_info
	{
		[Token(Token = "0x600019D")]
		[Address(RVA = "0x121CFF0", Offset = "0x121CFF0", VA = "0x121CFF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600019E")]
		[Address(RVA = "0x121CFF8", Offset = "0x121CFF8", VA = "0x121CFF8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public string code
	{
		[Token(Token = "0x600019F")]
		[Address(RVA = "0x121D000", Offset = "0x121D000", VA = "0x121D000")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A0")]
		[Address(RVA = "0x121D008", Offset = "0x121D008", VA = "0x121D008")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public string msg
	{
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x121D010", Offset = "0x121D010", VA = "0x121D010")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x121D018", Offset = "0x121D018", VA = "0x121D018")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public string app_ID
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x121D020", Offset = "0x121D020", VA = "0x121D020")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x121D028", Offset = "0x121D028", VA = "0x121D028")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public string app_Key
	{
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x121D030", Offset = "0x121D030", VA = "0x121D030")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x121D038", Offset = "0x121D038", VA = "0x121D038")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public string merchant_ID
	{
		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x121D040", Offset = "0x121D040", VA = "0x121D040")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x121D048", Offset = "0x121D048", VA = "0x121D048")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public string paykey
	{
		[Token(Token = "0x60001A9")]
		[Address(RVA = "0x121D050", Offset = "0x121D050", VA = "0x121D050")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001AA")]
		[Address(RVA = "0x121D058", Offset = "0x121D058", VA = "0x121D058")]
		set
		{
		}
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x121C688", Offset = "0x121C688", VA = "0x121C688")]
	public static CommonDic getInstance()
	{
		return null;
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x121CC6C", Offset = "0x121CC6C", VA = "0x121CC6C")]
	public Dictionary<string, string> getDic()
	{
		return null;
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x121CCBC", Offset = "0x121CCBC", VA = "0x121CCBC")]
	public void setParameters(string name, string value)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x121CE80", Offset = "0x121CE80", VA = "0x121CE80")]
	public string PayOrderString()
	{
		return null;
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x121C7E8", Offset = "0x121C7E8", VA = "0x121C7E8")]
	public static void InitDicData(Dictionary<string, string> mydic)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x121C760", Offset = "0x121C760", VA = "0x121C760")]
	public CommonDic()
	{
	}
}
[Token(Token = "0x200001F")]
public class LoginSDK
{
	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x12DF81C", Offset = "0x12DF81C", VA = "0x12DF81C")]
	public static void Login()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x12DF87C", Offset = "0x12DF87C", VA = "0x12DF87C")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x12DF8DC", Offset = "0x12DF8DC", VA = "0x12DF8DC")]
	public LoginSDK()
	{
	}
}
[Token(Token = "0x2000020")]
public class PicoPaymentSDK
{
	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject _jo;

	[Token(Token = "0x17000021")]
	public static AndroidJavaObject jo
	{
		[Token(Token = "0x60001B0")]
		[Address(RVA = "0x152DB50", Offset = "0x152DB50", VA = "0x152DB50")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0x152DBB8", Offset = "0x152DBB8", VA = "0x152DBB8")]
		set
		{
		}
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x152DC28", Offset = "0x152DC28", VA = "0x152DC28")]
	public static void Login()
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x152DEA0", Offset = "0x152DEA0", VA = "0x152DEA0")]
	public static void Pay(string payOrderJson)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x152E0E0", Offset = "0x152E0E0", VA = "0x152E0E0")]
	public static void QueryOrder(string orderId)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x152E320", Offset = "0x152E320", VA = "0x152E320")]
	public static void GetUserAPI()
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x152E598", Offset = "0x152E598", VA = "0x152E598")]
	public PicoPaymentSDK()
	{
	}
}
[Token(Token = "0x2000021")]
public class Pvr_ToBService : MonoBehaviour
{
	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text deviceInfoText;

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x1C529E0", Offset = "0x1C529E0", VA = "0x1C529E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x1C52A18", Offset = "0x1C52A18", VA = "0x1C52A18")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x1C52A28", Offset = "0x1C52A28", VA = "0x1C52A28")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x1C529E4", Offset = "0x1C529E4", VA = "0x1C529E4")]
	private void InitToBService()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x1C52A20", Offset = "0x1C52A20", VA = "0x1C52A20")]
	private void BindToBService()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x1C52A30", Offset = "0x1C52A30", VA = "0x1C52A30")]
	private void UnBindToBService()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x1C52A38", Offset = "0x1C52A38", VA = "0x1C52A38")]
	private void BoolCallback(string value)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x1C52AEC", Offset = "0x1C52AEC", VA = "0x1C52AEC")]
	private void IntCallback(string value)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x1C52B84", Offset = "0x1C52B84", VA = "0x1C52B84")]
	private void LongCallback(string value)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x1C52C1C", Offset = "0x1C52C1C", VA = "0x1C52C1C")]
	public void StateGetDeviceInfo()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x1C52CA4", Offset = "0x1C52CA4", VA = "0x1C52CA4")]
	public void ControlSetDeviceAction()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x1C52D24", Offset = "0x1C52D24", VA = "0x1C52D24")]
	private void ControlSetDeviceActionCallBack(int value)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x1C52DD4", Offset = "0x1C52DD4", VA = "0x1C52DD4")]
	public void AppManager()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x1C52E60", Offset = "0x1C52E60", VA = "0x1C52E60")]
	private void AppManagerCallBack(int value)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x1C52F10", Offset = "0x1C52F10", VA = "0x1C52F10")]
	public Pvr_ToBService()
	{
	}
}
[Token(Token = "0x2000022")]
public class PLOG : MonoBehaviour
{
	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int logLevel;

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x1390278", Offset = "0x1390278", VA = "0x1390278")]
	public static void getConfigTraceLevel()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x13902E4", Offset = "0x13902E4", VA = "0x13902E4")]
	public static void D(string msg)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x139038C", Offset = "0x139038C", VA = "0x139038C")]
	public static void I(string msg)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x1390434", Offset = "0x1390434", VA = "0x1390434")]
	public static void W(string msg)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x13904DC", Offset = "0x13904DC", VA = "0x13904DC")]
	public static void E(string msg)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x1390544", Offset = "0x1390544", VA = "0x1390544")]
	public PLOG()
	{
	}
}
[Token(Token = "0x2000023")]
public class CPicoSDKSettingAsset : ScriptableObject
{
	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IgnoreSDKSetting;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool DontshowBuildWaring;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AppIDChecked;

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x12ACF94", Offset = "0x12ACF94", VA = "0x12ACF94")]
	public CPicoSDKSettingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000024")]
public class Pvr_UnitySDKProjectSetting : ScriptableObject
{
	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTextureAntiAliasing rtAntiAlising;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RenderTextureDepth rtBitDepth;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTextureFormat rtFormat;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool usedefaultRenderTexture;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 customRTSize;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool usedefaultfps;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int customfps;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool usesinglepass;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool usecontentprotect;

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x1A32EF8", Offset = "0x1A32EF8", VA = "0x1A32EF8")]
	public static Pvr_UnitySDKProjectSetting GetProjectConfig()
	{
		return null;
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x1A3A3FC", Offset = "0x1A3A3FC", VA = "0x1A3A3FC")]
	public Pvr_UnitySDKProjectSetting()
	{
	}
}
[Token(Token = "0x2000025")]
public sealed class Pvr_UnitySDKPlatformSetting : ScriptableObject
{
	[Token(Token = "0x2000513")]
	public enum simulationType
	{
		[Token(Token = "0x4001E9C")]
		Null,
		[Token(Token = "0x4001E9D")]
		Invalid,
		[Token(Token = "0x4001E9E")]
		Valid
	}

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool entitlementchecksimulation;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool startTimeEntitlementCheck;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public string appID;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> deviceSN;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKPlatformSetting instance;

	[Token(Token = "0x17000022")]
	public static bool Entitlementchecksimulation
	{
		[Token(Token = "0x60001D1")]
		[Address(RVA = "0x1A39744", Offset = "0x1A39744", VA = "0x1A39744")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001D2")]
		[Address(RVA = "0x1A39764", Offset = "0x1A39764", VA = "0x1A39764")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public static bool StartTimeEntitlementCheck
	{
		[Token(Token = "0x60001D3")]
		[Address(RVA = "0x1A39390", Offset = "0x1A39390", VA = "0x1A39390")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001D4")]
		[Address(RVA = "0x1A397B0", Offset = "0x1A397B0", VA = "0x1A397B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public static Pvr_UnitySDKPlatformSetting Instance
	{
		[Token(Token = "0x60001D5")]
		[Address(RVA = "0x1A393B0", Offset = "0x1A393B0", VA = "0x1A393B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x1A397FC", Offset = "0x1A397FC", VA = "0x1A397FC")]
		set
		{
		}
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x1A39854", Offset = "0x1A39854", VA = "0x1A39854")]
	public Pvr_UnitySDKPlatformSetting()
	{
	}
}
[Token(Token = "0x2000026")]
public class Pvr_UnitySDKManager : MonoBehaviour
{
	[Token(Token = "0x2000514")]
	public delegate void EntitlementCheckResult(int ReturnValue);

	[Token(Token = "0x2000515")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4850", Offset = "0xEE4850")]
	private sealed class <ToastManager>d__97 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int type;

		[Token(Token = "0x4001EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4001EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool state;

		[Token(Token = "0x1700040E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A68")]
			[Address(RVA = "0x1A39628", Offset = "0x1A39628", VA = "0x1A39628", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700040F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A6A")]
			[Address(RVA = "0x1A39690", Offset = "0x1A39690", VA = "0x1A39690", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A65")]
		[Address(RVA = "0x1A34374", Offset = "0x1A34374", VA = "0x1A34374")]
		[DebuggerHidden]
		public <ToastManager>d__97(int <>1__state)
		{
		}

		[Token(Token = "0x6002A66")]
		[Address(RVA = "0x1A394E4", Offset = "0x1A394E4", VA = "0x1A394E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A67")]
		[Address(RVA = "0x1A394E8", Offset = "0x1A394E8", VA = "0x1A394E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A69")]
		[Address(RVA = "0x1A39630", Offset = "0x1A39630", VA = "0x1A39630", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000516")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4860", Offset = "0xEE4860")]
	private sealed class <>c__DisplayClass102_0
	{
		[Token(Token = "0x4001EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4001EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform trans;

		[Token(Token = "0x6002A6B")]
		[Address(RVA = "0x1A3575C", Offset = "0x1A3575C", VA = "0x1A3575C")]
		public <>c__DisplayClass102_0()
		{
		}

		[Token(Token = "0x6002A6C")]
		[Address(RVA = "0x1A38500", Offset = "0x1A38500", VA = "0x1A38500")]
		internal void <SetProperty>b__0()
		{
		}
	}

	[Token(Token = "0x2000517")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4870", Offset = "0xEE4870")]
	private sealed class <G3TipsManager>d__106 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject tip;

		[Token(Token = "0x17000410")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A70")]
			[Address(RVA = "0x1A38618", Offset = "0x1A38618", VA = "0x1A38618", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000411")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A72")]
			[Address(RVA = "0x1A38680", Offset = "0x1A38680", VA = "0x1A38680", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A6D")]
		[Address(RVA = "0x1A35A94", Offset = "0x1A35A94", VA = "0x1A35A94")]
		[DebuggerHidden]
		public <G3TipsManager>d__106(int <>1__state)
		{
		}

		[Token(Token = "0x6002A6E")]
		[Address(RVA = "0x1A38550", Offset = "0x1A38550", VA = "0x1A38550", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A6F")]
		[Address(RVA = "0x1A38554", Offset = "0x1A38554", VA = "0x1A38554", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A71")]
		[Address(RVA = "0x1A38620", Offset = "0x1A38620", VA = "0x1A38620", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000518")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4880", Offset = "0xEE4880")]
	private sealed class <Start>d__118 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x17000412")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A76")]
			[Address(RVA = "0x1A39474", Offset = "0x1A39474", VA = "0x1A39474", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000413")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A78")]
			[Address(RVA = "0x1A394DC", Offset = "0x1A394DC", VA = "0x1A394DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A73")]
		[Address(RVA = "0x1A3778C", Offset = "0x1A3778C", VA = "0x1A3778C")]
		[DebuggerHidden]
		public <Start>d__118(int <>1__state)
		{
		}

		[Token(Token = "0x6002A74")]
		[Address(RVA = "0x1A39140", Offset = "0x1A39140", VA = "0x1A39140", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A75")]
		[Address(RVA = "0x1A39144", Offset = "0x1A39144", VA = "0x1A39144", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A77")]
		[Address(RVA = "0x1A3947C", Offset = "0x1A3947C", VA = "0x1A3947C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000519")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4890", Offset = "0xEE4890")]
	private sealed class <InitRenderThreadRoutine>d__119 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x17000414")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A7C")]
			[Address(RVA = "0x1A3898C", Offset = "0x1A3898C", VA = "0x1A3898C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000415")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A7E")]
			[Address(RVA = "0x1A389F4", Offset = "0x1A389F4", VA = "0x1A389F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A79")]
		[Address(RVA = "0x1A37818", Offset = "0x1A37818", VA = "0x1A37818")]
		[DebuggerHidden]
		public <InitRenderThreadRoutine>d__119(int <>1__state)
		{
		}

		[Token(Token = "0x6002A7A")]
		[Address(RVA = "0x1A38688", Offset = "0x1A38688", VA = "0x1A38688", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A7B")]
		[Address(RVA = "0x1A3868C", Offset = "0x1A3868C", VA = "0x1A3868C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A7D")]
		[Address(RVA = "0x1A38994", Offset = "0x1A38994", VA = "0x1A38994", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE48A0", Offset = "0xEE48A0")]
	private sealed class <OnResume>d__132 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKManager <>4__this;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <ability6dof>5__2;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <waitNum>5__3;

		[Token(Token = "0x4001EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <resetNum>5__4;

		[Token(Token = "0x4001EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <i>5__5;

		[Token(Token = "0x17000416")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A82")]
			[Address(RVA = "0x1A390D0", Offset = "0x1A390D0", VA = "0x1A390D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000417")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A84")]
			[Address(RVA = "0x1A39138", Offset = "0x1A39138", VA = "0x1A39138", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A7F")]
		[Address(RVA = "0x1A383E4", Offset = "0x1A383E4", VA = "0x1A383E4")]
		[DebuggerHidden]
		public <OnResume>d__132(int <>1__state)
		{
		}

		[Token(Token = "0x6002A80")]
		[Address(RVA = "0x1A389FC", Offset = "0x1A389FC", VA = "0x1A389FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A81")]
		[Address(RVA = "0x1A38A00", Offset = "0x1A38A00", VA = "0x1A38A00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A83")]
		[Address(RVA = "0x1A390D8", Offset = "0x1A390D8", VA = "0x1A390D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlatForm platform;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Pvr_UnitySDKManager sdk;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public float EyesAspect;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public int posStatus;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool ismirroring;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Vector3 resetBasePos;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int trackingmode;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public int systemprop;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public bool systemFPS;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float[] headData;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool rotfoldout;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool hmdOnlyrot;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool controllerOnlyrot;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private TrackingOrigin trackingOrigin;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool ResetTrackerOnLoad;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public Vector3 leftEyeOffset;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Vector3 rightEyeOffset;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public Rect leftEyeRect;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Rect rightEyeRect;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Matrix4x4 leftEyeView;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public Matrix4x4 rightEyeView;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public Pvr_UnitySDKEditor pvr_UnitySDKEditor;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private bool vrModeEnabled;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public Material Eyematerial;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public Material Middlematerial;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE588C", Offset = "0xEE588C")]
	private bool <picovrTriggered>k__BackingField;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[HideInInspector]
	public bool newPicovrTriggered;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	[SerializeField]
	private bool showFPS;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	[HideInInspector]
	public Vector3 neckOffset;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private bool pVRNeck;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
	[HideInInspector]
	public bool UseCustomNeckPara;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
	[HideInInspector]
	public bool onResume;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
	[HideInInspector]
	public bool isEnterVRMode;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool isHasController;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Pvr_UnitySDKConfigProfile pvr_UnitySDKConfig;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private GameObject calltoast;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject msgtoast;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private GameObject lowhmdBatterytoast;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject lowphoneBatterytoast;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private GameObject LowPhoneHealthtoast;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private GameObject LowcontrollerBatterytoast;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private bool lowControllerpowerstate;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float controllerpowershowtime;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool UseToast;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int iPhoneHMDModeEnabled;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private GameObject G3LiteTips;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[SerializeField]
	private bool monoscopic;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool mIsAndroid7;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Func<bool> eventEnterVRMode;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
	[HideInInspector]
	public bool ShowVideoSeethrough;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public int SystemDebugFFRLevel;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public int SystemFFRLevel;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public int AppCheckResult;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Action longPressHomeKeyAction;

	[Token(Token = "0x17000025")]
	public static Pvr_UnitySDKManager SDK
	{
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x1A2AA98", Offset = "0x1A2AA98", VA = "0x1A2AA98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000026")]
	public bool Rotfoldout
	{
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x1A32E00", Offset = "0x1A32E00", VA = "0x1A32E00")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x1A32E08", Offset = "0x1A32E08", VA = "0x1A32E08")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public bool HmdOnlyrot
	{
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x1A32E28", Offset = "0x1A32E28", VA = "0x1A32E28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0x1A32E30", Offset = "0x1A32E30", VA = "0x1A32E30")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public bool ControllerOnlyrot
	{
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x1A32E50", Offset = "0x1A32E50", VA = "0x1A32E50")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x1A32E58", Offset = "0x1A32E58", VA = "0x1A32E58")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public TrackingOrigin TrackingOrigin
	{
		[Token(Token = "0x60001DF")]
		[Address(RVA = "0x1A32E78", Offset = "0x1A32E78", VA = "0x1A32E78")]
		get
		{
			return default(TrackingOrigin);
		}
		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x1A32E80", Offset = "0x1A32E80", VA = "0x1A32E80")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	[HideInInspector]
	public bool VRModeEnabled
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0x1A32F88", Offset = "0x1A32F88", VA = "0x1A32F88")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x1A2BC98", Offset = "0x1A2BC98", VA = "0x1A2BC98")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	[HideInInspector]
	public bool picovrTriggered
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0x1A32F90", Offset = "0x1A32F90", VA = "0x1A32F90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBF24", Offset = "0xEEBF24")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0x1A32F98", Offset = "0x1A32F98", VA = "0x1A32F98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBF34", Offset = "0xEEBF34")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public bool ShowFPS
	{
		[Token(Token = "0x60001E8")]
		[Address(RVA = "0x1A32FA4", Offset = "0x1A32FA4", VA = "0x1A32FA4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x1A32FAC", Offset = "0x1A32FAC", VA = "0x1A32FAC")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public bool PVRNeck
	{
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x1A32FCC", Offset = "0x1A32FCC", VA = "0x1A32FCC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001EB")]
		[Address(RVA = "0x1A32FD4", Offset = "0x1A32FD4", VA = "0x1A32FD4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	[HideInInspector]
	public bool Monoscopic
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x1A32FF4", Offset = "0x1A32FF4", VA = "0x1A32FF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x1A32FFC", Offset = "0x1A32FFC", VA = "0x1A32FFC")]
		set
		{
		}
	}

	[Token(Token = "0x14000015")]
	public static event EntitlementCheckResult EntitlementCheckResultEvent
	{
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x1A33028", Offset = "0x1A33028", VA = "0x1A33028")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBF44", Offset = "0xEEBF44")]
		add
		{
		}
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x1A33118", Offset = "0x1A33118", VA = "0x1A33118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEBF54", Offset = "0xEEBF54")]
		remove
		{
		}
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x1A32EA0", Offset = "0x1A32EA0", VA = "0x1A32EA0")]
	public void ChangeDefaultCustomRtSize(int w, int h)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x1A2D0AC", Offset = "0x1A2D0AC", VA = "0x1A2D0AC")]
	public Vector3 EyeOffset(Eye eye)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x1A32F4C", Offset = "0x1A32F4C", VA = "0x1A32F4C")]
	public Rect EyeRect(Eye eye)
	{
		return default(Rect);
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x1A33208", Offset = "0x1A33208", VA = "0x1A33208")]
	private bool SDKManagerInit()
	{
		return default(bool);
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x1A33360", Offset = "0x1A33360", VA = "0x1A33360")]
	private bool SDKManagerInitCoreAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x1A33498", Offset = "0x1A33498", VA = "0x1A33498")]
	public void smsReceivedCallback(string msg)
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x1A33C08", Offset = "0x1A33C08", VA = "0x1A33C08")]
	public void phoneStateCallback(string state)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x1A33F88", Offset = "0x1A33F88", VA = "0x1A33F88")]
	public void phoneBatteryStateCallback(string state)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x1A34238", Offset = "0x1A34238", VA = "0x1A34238")]
	public void hmdLowBatteryCallback(string level)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x1A33818", Offset = "0x1A33818", VA = "0x1A33818")]
	private string TransformNumber(string number)
	{
		return null;
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x1A34370", Offset = "0x1A34370", VA = "0x1A34370")]
	public void onHmdOrientationReseted()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x1A33B60", Offset = "0x1A33B60", VA = "0x1A33B60")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEBF64", Offset = "0xEEBF64")]
	private IEnumerator ToastManager(int type, bool state, float time)
	{
		return null;
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x1A343A0", Offset = "0x1A343A0", VA = "0x1A343A0")]
	private void CheckControllerStateForG2(string state)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x1A3454C", Offset = "0x1A3454C", VA = "0x1A3454C")]
	public void notificationCallback(string data)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x1A354FC", Offset = "0x1A354FC", VA = "0x1A354FC")]
	private Sprite LoadSprite(Vector2 size, string filepath)
	{
		return null;
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x1A35618", Offset = "0x1A35618", VA = "0x1A35618")]
	private byte[] ReadTex(string path)
	{
		return null;
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x1A348E4", Offset = "0x1A348E4", VA = "0x1A348E4")]
	private void SetProperty(int type, JsonData data, string value)
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x1A34DFC", Offset = "0x1A34DFC", VA = "0x1A34DFC")]
	private void SetBaseProperty(Transform trans, JsonData data, string value)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x1A351D8", Offset = "0x1A351D8", VA = "0x1A351D8")]
	private void SetImageProperty(Transform image, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x1A35764", Offset = "0x1A35764", VA = "0x1A35764")]
	private void SetTextProperty(Transform text, JsonData data, string value)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x1A35470", Offset = "0x1A35470", VA = "0x1A35470")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEBFC8", Offset = "0xEEBFC8")]
	private IEnumerator G3TipsManager(GameObject tip, float time)
	{
		return null;
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x1A35A18", Offset = "0x1A35A18", VA = "0x1A35A18")]
	private float JsonToFloat(JsonData data)
	{
		return default(float);
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x1A35AC0", Offset = "0x1A35AC0", VA = "0x1A35AC0")]
	private bool SDKManagerInitFPS()
	{
		return default(bool);
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x1A332E4", Offset = "0x1A332E4", VA = "0x1A332E4")]
	private bool SDKManagerInitConfigProfile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1A35C7C", Offset = "0x1A35C7C", VA = "0x1A35C7C")]
	private bool SDKManagerInitEditor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x1A35D48", Offset = "0x1A35D48", VA = "0x1A35D48")]
	private bool SDKManagerInitPara()
	{
		return default(bool);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x1A35D50", Offset = "0x1A35D50", VA = "0x1A35D50")]
	public void SDKManagerLongHomeKey()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x1A35E4C", Offset = "0x1A35E4C", VA = "0x1A35E4C")]
	private void setLongHomeKey()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x1A36220", Offset = "0x1A36220", VA = "0x1A36220")]
	public void verifyAPPCallback(string code)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x1A365B8", Offset = "0x1A365B8", VA = "0x1A365B8")]
	public void IpdRefreshCallBack(string ipd)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x1A366E8", Offset = "0x1A366E8", VA = "0x1A366E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x1A37710", Offset = "0x1A37710", VA = "0x1A37710")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEED02C", Offset = "0xEED02C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1A377B8", Offset = "0x1A377B8", VA = "0x1A377B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEED090", Offset = "0xEED090")]
	private IEnumerator InitRenderThreadRoutine()
	{
		return null;
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x1A37844", Offset = "0x1A37844", VA = "0x1A37844")]
	private void Update()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x1A37B10", Offset = "0x1A37B10", VA = "0x1A37B10")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x1A37C78", Offset = "0x1A37C78", VA = "0x1A37C78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1A37DD0", Offset = "0x1A37DD0", VA = "0x1A37DD0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1A37DD8", Offset = "0x1A37DD8", VA = "0x1A37DD8")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x1A38034", Offset = "0x1A38034", VA = "0x1A38034")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1A382EC", Offset = "0x1A382EC", VA = "0x1A382EC")]
	public void EnterVRMode()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x1A37E80", Offset = "0x1A37E80", VA = "0x1A37E80")]
	public void LeaveVRMode()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x1A383DC", Offset = "0x1A383DC", VA = "0x1A383DC")]
	public void SixDofForceQuit()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x1A370F8", Offset = "0x1A370F8", VA = "0x1A370F8")]
	private void InitUI()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x1A37348", Offset = "0x1A37348", VA = "0x1A37348")]
	private void RefreshTextByLanguage()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x1A36CEC", Offset = "0x1A36CEC", VA = "0x1A36CEC")]
	private void LoadIsMirroringValue()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x1A38270", Offset = "0x1A38270", VA = "0x1A38270")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEED0F4", Offset = "0xEED0F4")]
	private IEnumerator OnResume()
	{
		return null;
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x1A38410", Offset = "0x1A38410", VA = "0x1A38410")]
	public Pvr_UnitySDKManager()
	{
	}
}
[Token(Token = "0x2000027")]
public class QuitGame : MonoBehaviour
{
	[Token(Token = "0x600021D")]
	[Address(RVA = "0x1A42178", Offset = "0x1A42178", VA = "0x1A42178")]
	private void Start()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x1A4217C", Offset = "0x1A4217C", VA = "0x1A4217C")]
	private void Update()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x1A421A8", Offset = "0x1A421A8", VA = "0x1A421A8")]
	public QuitGame()
	{
	}
}
[Token(Token = "0x2000028")]
public class Pvr_UnityEyeMask : MonoBehaviour
{
	[Token(Token = "0x200051B")]
	private class EyeMaskData
	{
		[Token(Token = "0x4001EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Eye eyeSide;

		[Token(Token = "0x4001EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4001EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x6002A85")]
		[Address(RVA = "0x2057394", Offset = "0x2057394", VA = "0x2057394")]
		public EyeMaskData()
		{
		}
	}

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader eyeMaskShader;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material eyeMaskMaterial;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Mesh eyeMaskMeshLeft;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh eyeMaskMeshRight;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh eyeMaskMeshBoth;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float zDir;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color eyeMaskColor;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<EyeMaskData> cameraDataList;

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x205599C", Offset = "0x205599C", VA = "0x205599C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x2055A54", Offset = "0x2055A54", VA = "0x2055A54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x205667C", Offset = "0x205667C", VA = "0x205667C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x2056054", Offset = "0x2056054", VA = "0x2056054")]
	private void CreateCommandBuffer()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x20571C8", Offset = "0x20571C8", VA = "0x20571C8")]
	private void OnCustomPreRender(Camera cam)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x2056A40", Offset = "0x2056A40", VA = "0x2056A40")]
	private Mesh GetStencilMesh(Eye eyeSide)
	{
		return null;
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x2056D94", Offset = "0x2056D94", VA = "0x2056D94")]
	private Mesh GetStencilMeshBoth(Mesh leftMesh, Mesh rightMesh)
	{
		return null;
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x2056930", Offset = "0x2056930", VA = "0x2056930")]
	private bool VerifyCommadBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x2055CDC", Offset = "0x2055CDC", VA = "0x2055CDC")]
	private void PrepareCameras()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x2057364", Offset = "0x2057364", VA = "0x2057364")]
	private void AddCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x205685C", Offset = "0x205685C", VA = "0x205685C")]
	private void RemoveCameraCommandBuffer(EyeMaskData data)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x2056888", Offset = "0x2056888", VA = "0x2056888")]
	private void CleanEyeMask()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x205739C", Offset = "0x205739C", VA = "0x205739C")]
	public Pvr_UnityEyeMask()
	{
	}
}
[Token(Token = "0x2000029")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEDE9AC", Offset = "0xEDE9AC")]
public class Pvr_UnitySDKEye : MonoBehaviour
{
	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEye> Instances;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Eye eyeSide;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE593C", Offset = "0xEE593C")]
	private Camera <eyecamera>k__BackingField;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int eyeCameraOriginCullingMask;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private CameraClearFlags eyeCameraOriginClearFlag;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color eyeCameraOriginBackgroundColor;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastBoundaryState;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Matrix4x4 realProj;

	[Token(Token = "0x4000188")]
	private const int bufferSize = 3;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int IDIndex;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private RenderEventType eventType;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int previousId;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool setLevel;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Material mat_Vignette;

	[Token(Token = "0x1700002F")]
	public Camera eyecamera
	{
		[Token(Token = "0x600022D")]
		[Address(RVA = "0x1A2BD54", Offset = "0x1A2BD54", VA = "0x1A2BD54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED158", Offset = "0xEED158")]
		get
		{
			return null;
		}
		[Token(Token = "0x600022E")]
		[Address(RVA = "0x1A2BD5C", Offset = "0x1A2BD5C", VA = "0x1A2BD5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED168", Offset = "0xEED168")]
		private set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public int EyeCameraOriginCullingMask
	{
		[Token(Token = "0x600022F")]
		[Address(RVA = "0x1A2BD64", Offset = "0x1A2BD64", VA = "0x1A2BD64")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000230")]
		[Address(RVA = "0x1A2BD6C", Offset = "0x1A2BD6C", VA = "0x1A2BD6C")]
		set
		{
		}
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x1A2BD74", Offset = "0x1A2BD74", VA = "0x1A2BD74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x1A2BE1C", Offset = "0x1A2BE1C", VA = "0x1A2BE1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x1A2C380", Offset = "0x1A2C380", VA = "0x1A2C380")]
	private void Update()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x1A2C5B4", Offset = "0x1A2C5B4", VA = "0x1A2C5B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x1A2C6DC", Offset = "0x1A2C6DC", VA = "0x1A2C6DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x1A2C804", Offset = "0x1A2C804", VA = "0x1A2C804")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x1A2C888", Offset = "0x1A2C888", VA = "0x1A2C888")]
	public void MyPreRender(Camera camera)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x1A2CA70", Offset = "0x1A2CA70", VA = "0x1A2CA70")]
	public void MyPreRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x1A2CB30", Offset = "0x1A2CB30", VA = "0x1A2CB30")]
	public void MyPostRender(ScriptableRenderContext context, Camera camera)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x1A2C948", Offset = "0x1A2C948", VA = "0x1A2C948")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x1A2CBF0", Offset = "0x1A2CBF0", VA = "0x1A2CBF0")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x1A2CF3C", Offset = "0x1A2CF3C", VA = "0x1A2CF3C")]
	public void EyeRender()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x1A2BEF4", Offset = "0x1A2BEF4", VA = "0x1A2BEF4")]
	private void Setup(Eye eyeSide)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x1A2C110", Offset = "0x1A2C110", VA = "0x1A2C110")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x1A2D0E4", Offset = "0x1A2D0E4", VA = "0x1A2D0E4")]
	public void RefreshCameraPosition(float ipd)
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x1A2D288", Offset = "0x1A2D288", VA = "0x1A2D288")]
	private void DrawVignetteLine()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x1A2D3C4", Offset = "0x1A2D3C4", VA = "0x1A2D3C4")]
	private void vignette()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x1A2CD90", Offset = "0x1A2CD90", VA = "0x1A2CD90")]
	private void SetFFRParameter()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x1A2D73C", Offset = "0x1A2D73C", VA = "0x1A2D73C")]
	public Pvr_UnitySDKEye()
	{
	}
}
[Token(Token = "0x200002A")]
public class Pvr_UnitySDKEyeManager : MonoBehaviour
{
	[Token(Token = "0x200051C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE48B0", Offset = "0xEE48B0")]
	private sealed class <EndOfFrame>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x17000418")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A89")]
			[Address(RVA = "0x1A31548", Offset = "0x1A31548", VA = "0x1A31548", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000419")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A8B")]
			[Address(RVA = "0x1A315B0", Offset = "0x1A315B0", VA = "0x1A315B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A86")]
		[Address(RVA = "0x1A2F654", Offset = "0x1A2F654", VA = "0x1A2F654")]
		[DebuggerHidden]
		public <EndOfFrame>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6002A87")]
		[Address(RVA = "0x1A30434", Offset = "0x1A30434", VA = "0x1A30434", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A88")]
		[Address(RVA = "0x1A30438", Offset = "0x1A30438", VA = "0x1A30438", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A8A")]
		[Address(RVA = "0x1A31550", Offset = "0x1A31550", VA = "0x1A31550", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE48C0", Offset = "0xEE48C0")]
	private sealed class <ScreenFade>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Pvr_UnitySDKEyeManager <>4__this;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float startAlpha;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endAlpha;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x1700041A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002A8F")]
			[Address(RVA = "0x1A316F8", Offset = "0x1A316F8", VA = "0x1A316F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002A91")]
			[Address(RVA = "0x1A31760", Offset = "0x1A31760", VA = "0x1A31760", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002A8C")]
		[Address(RVA = "0x1A30380", Offset = "0x1A30380", VA = "0x1A30380")]
		[DebuggerHidden]
		public <ScreenFade>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6002A8D")]
		[Address(RVA = "0x1A315B8", Offset = "0x1A315B8", VA = "0x1A315B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002A8E")]
		[Address(RVA = "0x1A315BC", Offset = "0x1A315BC", VA = "0x1A315BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002A90")]
		[Address(RVA = "0x1A31700", Offset = "0x1A31700", VA = "0x1A31700", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKEyeManager instance;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Pvr_UnitySDKEye[] eyes;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Camera LeftEyeCamera;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Camera RightEyeCamera;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Camera MonoEyeCamera;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Camera BothEyeCamera;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int MonoEyeTextureID;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private readonly int WaitSplashScreenFrames;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int frameNum;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	[HideInInspector]
	private bool foveatedRendering;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[HideInInspector]
	private EFoveationLevel foveationLevel;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int eyeTextureId;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderEventType eventType;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Pvr_UnitySDKEyeOverlay compositeLayer;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int overlayLayerDepth;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int underlayLayerDepth;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isHeadLocked;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int layerFlags;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public bool EyeTracking;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Vector3 eyePoint;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EyeTrackingData eyePoseData;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static bool supportEyeTracking;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE5A2C", Offset = "0xEE5A2C")]
	public bool screenFade;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE5A64", Offset = "0xEE5A64")]
	public float fadeTime;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE5A9C", Offset = "0xEE5A9C")]
	public Color fadeColor;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public int renderQueue;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private MeshRenderer fadeMeshRenderer;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private MeshFilter fadeMeshFilter;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private Material fadeMaterial;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float elapsedTime;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private bool isFading;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float currentAlpha;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float nowFadeAlpha;

	[Token(Token = "0x17000031")]
	public static Pvr_UnitySDKEyeManager Instance
	{
		[Token(Token = "0x6000245")]
		[Address(RVA = "0x1A2D644", Offset = "0x1A2D644", VA = "0x1A2D644")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000032")]
	public Pvr_UnitySDKEye[] Eyes
	{
		[Token(Token = "0x6000246")]
		[Address(RVA = "0x1A2D85C", Offset = "0x1A2D85C", VA = "0x1A2D85C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000033")]
	[HideInInspector]
	public bool FoveatedRendering
	{
		[Token(Token = "0x6000247")]
		[Address(RVA = "0x1A2D8FC", Offset = "0x1A2D8FC", VA = "0x1A2D8FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000248")]
		[Address(RVA = "0x1A2D904", Offset = "0x1A2D904", VA = "0x1A2D904")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	[HideInInspector]
	public EFoveationLevel FoveationLevel
	{
		[Token(Token = "0x6000249")]
		[Address(RVA = "0x1A2D970", Offset = "0x1A2D970", VA = "0x1A2D970")]
		get
		{
			return default(EFoveationLevel);
		}
		[Token(Token = "0x600024A")]
		[Address(RVA = "0x1A2D978", Offset = "0x1A2D978", VA = "0x1A2D978")]
		set
		{
		}
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1A2D98C", Offset = "0x1A2D98C", VA = "0x1A2D98C")]
	private void SetCameraEnableEditor()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x1A2DB9C", Offset = "0x1A2DB9C", VA = "0x1A2DB9C")]
	private void SetCamerasEnableByStereoRendering()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x1A2DC5C", Offset = "0x1A2DC5C", VA = "0x1A2DC5C")]
	private void SetupMonoCamera()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x1A2DD70", Offset = "0x1A2DD70", VA = "0x1A2DD70")]
	private void SetupUpdate()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x1A2DE44", Offset = "0x1A2DE44", VA = "0x1A2DE44")]
	private void MonoEyeRender()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x1A2DFB4", Offset = "0x1A2DFB4", VA = "0x1A2DFB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1A2E7D0", Offset = "0x1A2E7D0", VA = "0x1A2E7D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x1A2EFFC", Offset = "0x1A2EFFC", VA = "0x1A2EFFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x1A2F020", Offset = "0x1A2F020", VA = "0x1A2F020")]
	private void Update()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x1A2F274", Offset = "0x1A2F274", VA = "0x1A2F274")]
	private void OnPause()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x1A2F368", Offset = "0x1A2F368", VA = "0x1A2F368")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x1A2F370", Offset = "0x1A2F370", VA = "0x1A2F370")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x1A2F4D8", Offset = "0x1A2F4D8", VA = "0x1A2F4D8")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x1A2F5D8", Offset = "0x1A2F5D8", VA = "0x1A2F5D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEED178", Offset = "0xEED178")]
	private IEnumerator EndOfFrame()
	{
		return null;
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x1A2F680", Offset = "0x1A2F680", VA = "0x1A2F680")]
	private void CreateExternalSurface(Pvr_UnitySDKEyeOverlay overlayInstance, int layerDepth)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x1A2FA90", Offset = "0x1A2FA90", VA = "0x1A2FA90")]
	public bool SetEyeTrackingMode()
	{
		return default(bool);
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x1A2FDA4", Offset = "0x1A2FDA4", VA = "0x1A2FDA4")]
	public Vector3 GetEyeTrackingPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x1A2FFD4", Offset = "0x1A2FFD4", VA = "0x1A2FFD4")]
	private EyeDeviceInfo GetDeviceInfo()
	{
		return default(EyeDeviceInfo);
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x1A2E340", Offset = "0x1A2E340", VA = "0x1A2E340")]
	private void CreateFadeMesh()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x1A2F374", Offset = "0x1A2F374", VA = "0x1A2F374")]
	private void DestoryFadeMesh()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x1A2E7C8", Offset = "0x1A2E7C8", VA = "0x1A2E7C8")]
	public void SetCurrentAlpha(float alpha)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x1A2EF6C", Offset = "0x1A2EF6C", VA = "0x1A2EF6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEED1DC", Offset = "0xEED1DC")]
	private IEnumerator ScreenFade(float startAlpha, float endAlpha)
	{
		return null;
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x1A30228", Offset = "0x1A30228", VA = "0x1A30228")]
	private void SetMaterialAlpha()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x1A2EE1C", Offset = "0x1A2EE1C", VA = "0x1A2EE1C")]
	public bool GfxDeviceAdvanceFrameGLES()
	{
		return default(bool);
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x1A303AC", Offset = "0x1A303AC", VA = "0x1A303AC")]
	public Pvr_UnitySDKEyeManager()
	{
	}
}
[Token(Token = "0x200002B")]
public class Pvr_UnitySDKEyeOverlay : MonoBehaviour, IComparable<Pvr_UnitySDKEyeOverlay>
{
	[Token(Token = "0x200051E")]
	public delegate void ExternalAndroidSurfaceObjectCreated();

	[Token(Token = "0x200051F")]
	public enum OverlayShape
	{
		[Token(Token = "0x4001EC5")]
		Quad,
		[Token(Token = "0x4001EC6")]
		Cylinder,
		[Token(Token = "0x4001EC7")]
		Equirect
	}

	[Token(Token = "0x2000520")]
	public enum OverlayType
	{
		[Token(Token = "0x4001EC9")]
		Overlay,
		[Token(Token = "0x4001ECA")]
		Underlay
	}

	[Token(Token = "0x2000521")]
	public enum OverlayTexFilterMode
	{
		[Token(Token = "0x4001ECC")]
		NotCare,
		[Token(Token = "0x4001ECD")]
		Nearest,
		[Token(Token = "0x4001ECE")]
		Linear,
		[Token(Token = "0x4001ECF")]
		Nearest_Mipmap_Nearest,
		[Token(Token = "0x4001ED0")]
		Linear_Mipmap_Nearest,
		[Token(Token = "0x4001ED1")]
		Nearest_Mipmap_Linear,
		[Token(Token = "0x4001ED2")]
		Linear_Mipmap_Linear
	}

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UnitySDKEyeOverlay> Instances;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int layerIndex;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OverlayType overlayType;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OverlayShape overlayShape;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform layerTransform;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture[] layerTextures;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] layerTextureIds;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Matrix4x4[] MVMatrixs;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3[] ModelScales;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion[] ModelRotations;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3[] ModelTranslations;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Quaternion[] CameraRotations;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3[] CameraTranslations;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Camera[] layerEyeCamera;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool overrideColorScaleAndOffset;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector4 colorScale;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector4 colorOffset;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector4 overlayLayerColorScaleDefault;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector4 overlayLayerColorOffsetDefault;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool isExternalAndroidSurface;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntPtr externalAndroidSurfaceObject;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ExternalAndroidSurfaceObjectCreated externalAndroidSurfaceObjectCreated;

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x1A31768", Offset = "0x1A31768", VA = "0x1A31768", Slot = "4")]
	public int CompareTo(Pvr_UnitySDKEyeOverlay other)
	{
		return default(int);
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x1A31788", Offset = "0x1A31788", VA = "0x1A31788")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x1A31CA8", Offset = "0x1A31CA8", VA = "0x1A31CA8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x1A32154", Offset = "0x1A32154", VA = "0x1A32154")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x1A2EBBC", Offset = "0x1A2EBBC", VA = "0x1A2EBBC")]
	public void RefreshCamera()
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x1A31AF4", Offset = "0x1A31AF4", VA = "0x1A31AF4")]
	private void InitializeBuffer()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x1A31CAC", Offset = "0x1A31CAC", VA = "0x1A31CAC")]
	private void UpdateCoords()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x1A323E4", Offset = "0x1A323E4", VA = "0x1A323E4")]
	public void SetTexture(Texture texture)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1A32494", Offset = "0x1A32494", VA = "0x1A32494")]
	public void SetLayerColorScaleAndOffset(Vector4 scale, Vector4 offset)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x1A314C8", Offset = "0x1A314C8", VA = "0x1A314C8")]
	public Vector4 GetLayerColorScale()
	{
		return default(Vector4);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x1A31508", Offset = "0x1A31508", VA = "0x1A31508")]
	public Vector4 GetLayerColorOffset()
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x1A324A8", Offset = "0x1A324A8", VA = "0x1A324A8")]
	public Pvr_UnitySDKEyeOverlay()
	{
	}
}
[Token(Token = "0x200002C")]
public class Pvr_UnitySDKRender
{
	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKRender instance;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AndroidJavaObject activity;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AndroidJavaClass javaVrActivityClass;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static AndroidJavaClass javaSysActivityClass;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static AndroidJavaClass javaserviceClass;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static AndroidJavaClass javaVrActivityLongReceiver;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static AndroidJavaClass javaVrActivityClientClass;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool canConnecttoActivity;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isInitrenderThread;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string model;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 prefinger1;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 prefinger2;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int eyeTextureCount;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderTexture[] eyeTextures;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] eyeTextureIds;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currEyeTextureIdx;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int nextEyeTextureIdx;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int lastEyeTextureIdx;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isSwitchSDK;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int RenderviewNumber;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool isFirstStartup;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool isShellMode;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private StereoRenderingPathPico stereoRenderPath;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5AD4", Offset = "0xEE5AD4")]
	private SDKStereoRendering <StereoRendering>k__BackingField;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float rtScaleFactor;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float eyeVFov;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float eyeHFov;

	[Token(Token = "0x17000035")]
	public static Pvr_UnitySDKRender Instance
	{
		[Token(Token = "0x6000272")]
		[Address(RVA = "0x1A2B1D8", Offset = "0x1A2B1D8", VA = "0x1A2B1D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000273")]
		[Address(RVA = "0x1A3A514", Offset = "0x1A3A514", VA = "0x1A3A514")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public StereoRenderingPathPico StereoRenderPath
	{
		[Token(Token = "0x6000275")]
		[Address(RVA = "0x1A3AEEC", Offset = "0x1A3AEEC", VA = "0x1A3AEEC")]
		get
		{
			return default(StereoRenderingPathPico);
		}
	}

	[Token(Token = "0x17000037")]
	public SDKStereoRendering StereoRendering
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0x1A3AEF4", Offset = "0x1A3AEF4", VA = "0x1A3AEF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED240", Offset = "0xEED240")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000277")]
		[Address(RVA = "0x1A3AEFC", Offset = "0x1A3AEFC", VA = "0x1A3AEFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED250", Offset = "0xEED250")]
		private set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public float RtScaleFactor
	{
		[Token(Token = "0x6000278")]
		[Address(RVA = "0x1A3AF04", Offset = "0x1A3AF04", VA = "0x1A3AF04")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000279")]
		[Address(RVA = "0x1A3AF0C", Offset = "0x1A3AF0C", VA = "0x1A3AF0C")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public float EyeVFoV
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0x1A3B06C", Offset = "0x1A3B06C", VA = "0x1A3B06C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600027B")]
		[Address(RVA = "0x1A2BB08", Offset = "0x1A2BB08", VA = "0x1A2BB08")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public float EyeHFoV
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0x1A3B074", Offset = "0x1A3B074", VA = "0x1A3B074")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600027D")]
		[Address(RVA = "0x1A3B07C", Offset = "0x1A3B07C", VA = "0x1A3B07C")]
		set
		{
		}
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x1A3A404", Offset = "0x1A3A404", VA = "0x1A3A404")]
	public Pvr_UnitySDKRender()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x1A3A584", Offset = "0x1A3A584", VA = "0x1A3A584")]
	public void ConnectToAndriod()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x1A3AE6C", Offset = "0x1A3AE6C", VA = "0x1A3AE6C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x1A3B4FC", Offset = "0x1A3B4FC", VA = "0x1A3B4FC")]
	private bool InitRenderAbility()
	{
		return default(bool);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x1A3B610", Offset = "0x1A3B610", VA = "0x1A3B610")]
	private bool UpdateRenderParaFrame()
	{
		return default(bool);
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x1A3B6B8", Offset = "0x1A3B6B8", VA = "0x1A3B6B8")]
	private bool CreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1A3C040", Offset = "0x1A3C040", VA = "0x1A3C040")]
	private void InitSinglePass()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x1A3BA14", Offset = "0x1A3BA14", VA = "0x1A3BA14")]
	public float GetEyeVFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x1A3BB74", Offset = "0x1A3BB74", VA = "0x1A3BB74")]
	public float GetEyeHFOV()
	{
		return default(float);
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x1A3C264", Offset = "0x1A3C264", VA = "0x1A3C264")]
	private void ConfigureEyeBuffer(int eyeTextureIndex, Vector2 resolution)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x1A3AF24", Offset = "0x1A3AF24", VA = "0x1A3AF24")]
	public bool ReCreateEyeBuffer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x1A39378", Offset = "0x1A39378", VA = "0x1A39378")]
	public void ReInit()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x1A3883C", Offset = "0x1A3883C", VA = "0x1A3883C")]
	public void IssueRenderThread()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x1A3C7C4", Offset = "0x1A3C7C4", VA = "0x1A3C7C4")]
	private void AutoAdpatForPico1s()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x1A3BCD4", Offset = "0x1A3BCD4", VA = "0x1A3BCD4")]
	public Vector2 GetEyeBufferResolution()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x1A3C9EC", Offset = "0x1A3C9EC", VA = "0x1A3C9EC")]
	public bool GetUsePredictedMatrix()
	{
		return default(bool);
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1A3B090", Offset = "0x1A3B090", VA = "0x1A3B090")]
	public bool GetIsShellMode()
	{
		return default(bool);
	}
}
[Token(Token = "0x200002D")]
public class Pvr_UnitySDKSinglePass : SDKStereoRendering
{
	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera bothCamera;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] eyesOffset;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CommandBuffer commandBufferBeforeForwardOpaque;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CommandBuffer commandBufferBeforeSkybox;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CommandBuffer commandBufferAfterSkybox;

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x1A3F82C", Offset = "0x1A3F82C", VA = "0x1A3F82C", Slot = "4")]
	public override void InitEye(Camera eye)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x1A400F8", Offset = "0x1A400F8", VA = "0x1A400F8", Slot = "5")]
	public override void OnSDKRenderInited()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1A40220", Offset = "0x1A40220", VA = "0x1A40220", Slot = "6")]
	public override void OnSDKPreRender()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x1A40A44", Offset = "0x1A40A44", VA = "0x1A40A44", Slot = "7")]
	public override void OnSDKPostRender()
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1A400FC", Offset = "0x1A400FC", VA = "0x1A400FC")]
	public void OnSDKRenderInited_SinglePass()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x1A40AFC", Offset = "0x1A40AFC", VA = "0x1A40AFC")]
	private void SetAntiAliasing()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x1A3FB9C", Offset = "0x1A3FB9C", VA = "0x1A3FB9C")]
	public void SetEyesPosition()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x1A3FFB0", Offset = "0x1A3FFB0", VA = "0x1A3FFB0")]
	public void SetEyeProjection()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x1A40C04", Offset = "0x1A40C04", VA = "0x1A40C04")]
	private static Matrix4x4 GetProjection(float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x1A40E1C", Offset = "0x1A40E1C", VA = "0x1A40E1C")]
	public static Matrix4x4 MakeProjection(float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x1A40CD8", Offset = "0x1A40CD8", VA = "0x1A40CD8")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x1A40A4C", Offset = "0x1A40A4C", VA = "0x1A40A4C")]
	private void SwitchKeywordAndDeviceView(bool enable)
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1A321D8", Offset = "0x1A321D8", VA = "0x1A321D8")]
	public static Matrix4x4[] GetStereoWorldToCameraMat()
	{
		return null;
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1A40224", Offset = "0x1A40224", VA = "0x1A40224")]
	public void SinglePassPreRender()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x1A41098", Offset = "0x1A41098", VA = "0x1A41098")]
	private void SetCommandBuffers()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x1A40FF8", Offset = "0x1A40FF8", VA = "0x1A40FF8")]
	private void SetRenderTextureWithDepth()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1A3C6E0", Offset = "0x1A3C6E0", VA = "0x1A3C6E0")]
	public Pvr_UnitySDKSinglePass()
	{
	}
}
[Token(Token = "0x200002E")]
public abstract class SDKStereoRendering
{
	[Token(Token = "0x60002A1")]
	public abstract void InitEye(Camera eye);

	[Token(Token = "0x60002A2")]
	public abstract void OnSDKRenderInited();

	[Token(Token = "0x60002A3")]
	public abstract void OnSDKPreRender();

	[Token(Token = "0x60002A4")]
	public abstract void OnSDKPostRender();

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x13C195C", Offset = "0x13C195C", VA = "0x13C195C")]
	protected SDKStereoRendering()
	{
	}
}
[Token(Token = "0x200002F")]
public class HighlightAtGaze : MonoBehaviour
{
	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color HighlightColor;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float AnimationTime;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer myRenderer;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color originalColor;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color targetColor;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x12757F0", Offset = "0x12757F0", VA = "0x12757F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x1275884", Offset = "0x1275884", VA = "0x1275884")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x1275A60", Offset = "0x1275A60", VA = "0x1275A60")]
	public HighlightAtGaze()
	{
	}
}
[Token(Token = "0x2000030")]
public class RayVisualizer : MonoBehaviour
{
	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer _line;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private EyeTrackingGazeRay gazeRay;

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x13B1E10", Offset = "0x13B1E10", VA = "0x13B1E10")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x13B1EB8", Offset = "0x13B1EB8", VA = "0x13B1EB8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x13B2054", Offset = "0x13B2054", VA = "0x13B2054")]
	public RayVisualizer()
	{
	}
}
[Token(Token = "0x2000031")]
public class GetSeeThroughImage : MonoBehaviour
{
	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RawImage viewImage_left;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RawImage viewImage_right;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int width;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int height;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture cameraTex_left;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RenderTexture cameraTex_right;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool cameraPreview;

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x126DE68", Offset = "0x126DE68", VA = "0x126DE68")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x126DF9C", Offset = "0x126DF9C", VA = "0x126DF9C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x126E028", Offset = "0x126E028", VA = "0x126E028")]
	private void OnDestory()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x126DE6C", Offset = "0x126DE6C", VA = "0x126DE6C")]
	private void CreateTexture()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x126DFD8", Offset = "0x126DFD8", VA = "0x126DFD8")]
	private void DrawTexture()
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x126E040", Offset = "0x126E040", VA = "0x126E040")]
	public GetSeeThroughImage()
	{
	}
}
[Token(Token = "0x2000032")]
public class OverlayExternalSurfaceDemo : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000522")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE48D0", Offset = "0xEE48D0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Pvr_UnitySDKEyeOverlay.ExternalAndroidSurfaceObjectCreated <>9__7_0;

		[Token(Token = "0x6002A97")]
		[Address(RVA = "0x1390204", Offset = "0x1390204", VA = "0x1390204")]
		public <>c()
		{
		}

		[Token(Token = "0x6002A98")]
		[Address(RVA = "0x139020C", Offset = "0x139020C", VA = "0x139020C")]
		internal void <StartPlay>b__7_0()
		{
		}
	}

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string movieName;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Pvr_UnitySDKEyeOverlay.OverlayType overlayType;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Pvr_UnitySDKEyeOverlay.OverlayShape overlayShape;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Pvr_UnitySDKEyeOverlay overlay;

	[Token(Token = "0x40001FE")]
	private const string TAG = "[ExternalSurface]>>>>>>";

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x138FDC4", Offset = "0x138FDC4", VA = "0x138FDC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x138FF04", Offset = "0x138FF04", VA = "0x138FF04")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x138FF88", Offset = "0x138FF88", VA = "0x138FF88")]
	private void StartPlay(string moviePath, string licenceUrl)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x1390194", Offset = "0x1390194", VA = "0x1390194")]
	public OverlayExternalSurfaceDemo()
	{
	}
}
[Token(Token = "0x2000033")]
public class MoveCylinder : MonoBehaviour
{
	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion startingRotation;

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x137A080", Offset = "0x137A080", VA = "0x137A080")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x137A0DC", Offset = "0x137A0DC", VA = "0x137A0DC")]
	public void Reset()
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x137A134", Offset = "0x137A134", VA = "0x137A134")]
	public MoveCylinder()
	{
	}
}
[Token(Token = "0x2000034")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEDEA10", Offset = "0xEDEA10")]
public class MoveSphere : MonoBehaviour
{
	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startingPosition;

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x137DB4C", Offset = "0x137DB4C", VA = "0x137DB4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x137DCC0", Offset = "0x137DCC0", VA = "0x137DCC0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x137DC28", Offset = "0x137DC28", VA = "0x137DC28")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x137DCC4", Offset = "0x137DCC4", VA = "0x137DCC4")]
	public void Reset()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x137DDC4", Offset = "0x137DDC4", VA = "0x137DDC4")]
	public void TeleportRandomly()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x137DED0", Offset = "0x137DED0", VA = "0x137DED0")]
	public MoveSphere()
	{
	}
}
[Token(Token = "0x2000035")]
public class Resetbutton : MonoBehaviour
{
	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x13B5BEC", Offset = "0x13B5BEC", VA = "0x13B5BEC")]
	public void DemoResetTracking()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x13B5C8C", Offset = "0x13B5C8C", VA = "0x13B5C8C")]
	public Resetbutton()
	{
	}
}
[Token(Token = "0x2000036")]
public class UserEntitlementCheck : MonoBehaviour
{
	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x1311858", Offset = "0x1311858", VA = "0x1311858")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x13118EC", Offset = "0x13118EC", VA = "0x13118EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1311980", Offset = "0x1311980", VA = "0x1311980")]
	private void HandelEntitlementCheckResult(int resultCode)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x1311C4C", Offset = "0x1311C4C", VA = "0x1311C4C")]
	public UserEntitlementCheck()
	{
	}
}
[Token(Token = "0x2000037")]
public class Pvr_UnitySDKHeadTrack : MonoBehaviour
{
	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE5AE4", Offset = "0xEE5AE4")]
	public bool trackRotation;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE5B1C", Offset = "0xEE5B1C")]
	public bool trackPosition;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool updated;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool dataClock;

	[Token(Token = "0x1700003B")]
	public Ray Gaze
	{
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x1A328FC", Offset = "0x1A328FC", VA = "0x1A328FC")]
		get
		{
			return default(Ray);
		}
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x1A32DE8", Offset = "0x1A32DE8", VA = "0x1A32DE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x1A32998", Offset = "0x1A32998", VA = "0x1A32998")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x1A32DF0", Offset = "0x1A32DF0", VA = "0x1A32DF0")]
	public Pvr_UnitySDKHeadTrack()
	{
	}
}
[Token(Token = "0x2000038")]
public class Pvr_UnitySDKPose
{
	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static readonly Matrix4x4 flipZ;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5B54", Offset = "0xEE5B54")]
	private Vector3 <Position>k__BackingField;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5B64", Offset = "0xEE5B64")]
	private Quaternion <Orientation>k__BackingField;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5B74", Offset = "0xEE5B74")]
	private Matrix4x4 <Matrix>k__BackingField;

	[Token(Token = "0x1700003C")]
	public Matrix4x4 RightHandedMatrix
	{
		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x1A39D7C", Offset = "0x1A39D7C", VA = "0x1A39D7C")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x1700003D")]
	public Vector3 Position
	{
		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x1A39EC0", Offset = "0x1A39EC0", VA = "0x1A39EC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED260", Offset = "0xEED260")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x1A39ECC", Offset = "0x1A39ECC", VA = "0x1A39ECC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED270", Offset = "0xEED270")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public Quaternion Orientation
	{
		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x1A39ED8", Offset = "0x1A39ED8", VA = "0x1A39ED8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED280", Offset = "0xEED280")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x1A39EE4", Offset = "0x1A39EE4", VA = "0x1A39EE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED290", Offset = "0xEED290")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public Matrix4x4 Matrix
	{
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x1A39EF0", Offset = "0x1A39EF0", VA = "0x1A39EF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED2A0", Offset = "0xEED2A0")]
		get
		{
			return default(Matrix4x4);
		}
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x1A39F0C", Offset = "0x1A39F0C", VA = "0x1A39F0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED2B0", Offset = "0xEED2B0")]
		protected set
		{
		}
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x1A2BC4C", Offset = "0x1A2BC4C", VA = "0x1A2BC4C")]
	public Pvr_UnitySDKPose(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x1A3A094", Offset = "0x1A3A094", VA = "0x1A3A094")]
	public Pvr_UnitySDKPose(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x1A3A114", Offset = "0x1A3A114", VA = "0x1A3A114")]
	public void Set(Vector3 position, Quaternion orientation)
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x1A39F28", Offset = "0x1A39F28", VA = "0x1A39F28")]
	protected void Set(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1A3A244", Offset = "0x1A3A244", VA = "0x1A3A244")]
	private Quaternion NormalizeQuaternion(ref Quaternion q)
	{
		return default(Quaternion);
	}
}
[Token(Token = "0x2000039")]
public class Pvr_UnitySDKSensor
{
	[Token(Token = "0x2000523")]
	public delegate void Enter3DofModel();

	[Token(Token = "0x2000524")]
	public delegate void Exit3DofModel();

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_UnitySDKSensor instance;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool SensorStart;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool SensorInit;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Quaternion UnityQuaternion;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 UnityPosition;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Sensorindex sensorIndex;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool dofClock;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action EyeFovChanged;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Pvr_UnitySDKPose HeadPose;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float vfov;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float hfov;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float w;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float x;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float y;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float z;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float px;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float py;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float pz;

	[Token(Token = "0x17000040")]
	public static Pvr_UnitySDKSensor Instance
	{
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x1A2B2A0", Offset = "0x1A2B2A0", VA = "0x1A2B2A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x1A3CAB4", Offset = "0x1A3CAB4", VA = "0x1A3CAB4")]
		set
		{
		}
	}

	[Token(Token = "0x14000016")]
	public static event Enter3DofModel Enter3DofModelEvent
	{
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x1A3CC60", Offset = "0x1A3CC60", VA = "0x1A3CC60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED2C0", Offset = "0xEED2C0")]
		add
		{
		}
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x1A3CD50", Offset = "0x1A3CD50", VA = "0x1A3CD50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED2D0", Offset = "0xEED2D0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public static event Exit3DofModel Exit3DofModelEvent
	{
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x1A3CE40", Offset = "0x1A3CE40", VA = "0x1A3CE40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED2E0", Offset = "0xEED2E0")]
		add
		{
		}
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x1A3CF30", Offset = "0x1A3CF30", VA = "0x1A3CF30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED2F0", Offset = "0xEED2F0")]
		remove
		{
		}
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x1A3C9F8", Offset = "0x1A3C9F8", VA = "0x1A3C9F8")]
	public Pvr_UnitySDKSensor()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x1A3CB24", Offset = "0x1A3CB24", VA = "0x1A3CB24")]
	public void Init()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x1A37AC4", Offset = "0x1A37AC4", VA = "0x1A37AC4")]
	public void SensorUpdate()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x1A3D260", Offset = "0x1A3D260", VA = "0x1A3D260")]
	public bool InitUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x1A3D020", Offset = "0x1A3D020", VA = "0x1A3D020")]
	public bool InitUnitySDK6DofSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x1A38F94", Offset = "0x1A38F94", VA = "0x1A38F94")]
	public bool StartUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x1A37EF8", Offset = "0x1A37EF8", VA = "0x1A37EF8")]
	public bool StopUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x1A360A4", Offset = "0x1A360A4", VA = "0x1A360A4")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x1A312E0", Offset = "0x1A312E0", VA = "0x1A312E0")]
	public bool OptionalResetUnitySDKSensor(int resetRot, int resetPos)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x1A3D39C", Offset = "0x1A3D39C", VA = "0x1A3D39C")]
	public bool GetUnitySDKSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x1A3E9F8", Offset = "0x1A3E9F8", VA = "0x1A3E9F8")]
	public bool GetUnitySDKPSensorState()
	{
		return default(bool);
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x1A3E874", Offset = "0x1A3E874", VA = "0x1A3E874")]
	private void RefreshHeadData(float x, float y, float z, float w, float px, float py, float pz)
	{
	}
}
[Token(Token = "0x200003A")]
public class CLoadingAsset : ScriptableObject
{
	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SplashScreenType;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture2D> splashImage;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D Inside_background;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseSplashText;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DefaultText;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ChineseText;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string EnglishText;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string JapaneseText;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string KoreanText;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string FontSize;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color FontColor;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string TextHeight;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool UseCarousel;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public int SplashTextAlignment;

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x12ACF18", Offset = "0x12ACF18", VA = "0x12ACF18")]
	public CLoadingAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x200003B")]
public class Pvr_UnitySDKConfigProfile
{
	[Token(Token = "0x2000525")]
	public struct Lenses
	{
		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float separation;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float offset;

		[Token(Token = "0x4001ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float distance;

		[Token(Token = "0x4001ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int alignment;

		[Token(Token = "0x4001ED9")]
		public const int AlignTop = -1;

		[Token(Token = "0x4001EDA")]
		public const int AlignCenter = 0;

		[Token(Token = "0x4001EDB")]
		public const int AlignBottom = 1;
	}

	[Token(Token = "0x2000526")]
	public struct MaxFOV
	{
		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float upper;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float lower;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float inner;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float outer;
	}

	[Token(Token = "0x2000527")]
	public struct Distortion
	{
		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float k1;

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float k2;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float k3;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float k4;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float k5;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float k6;

		[Token(Token = "0x6002AA1")]
		[Address(RVA = "0x1030258", Offset = "0x1030258", VA = "0x1030258")]
		public float distort(float r)
		{
			return default(float);
		}

		[Token(Token = "0x6002AA2")]
		[Address(RVA = "0x1030260", Offset = "0x1030260", VA = "0x1030260")]
		public float distort(float r, float dist)
		{
			return default(float);
		}

		[Token(Token = "0x6002AA3")]
		[Address(RVA = "0x1030268", Offset = "0x1030268", VA = "0x1030268")]
		public float diatortInv(float radious)
		{
			return default(float);
		}
	}

	[Token(Token = "0x2000528")]
	public struct Device
	{
		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Lenses devLenses;

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaxFOV devMaxFov;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Distortion devDistortion;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Distortion devDistortionInv;
	}

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Device SimulateDevice;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Device device;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static readonly Pvr_UnitySDKConfigProfile Default;

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1A29E6C", Offset = "0x1A29E6C", VA = "0x1A29E6C")]
	public Pvr_UnitySDKConfigProfile Clone()
	{
		return null;
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x1A29F04", Offset = "0x1A29F04", VA = "0x1A29F04")]
	public static Pvr_UnitySDKConfigProfile GetPicoProfile()
	{
		return null;
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x1A29FAC", Offset = "0x1A29FAC", VA = "0x1A29FAC")]
	public float[] GetLeftEyeVisibleTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x1A2A2F8", Offset = "0x1A2A2F8", VA = "0x1A2A2F8")]
	public float[] GetLeftEyeNoLensTanAngles(float width, float height)
	{
		return null;
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x1A2A524", Offset = "0x1A2A524", VA = "0x1A2A524")]
	public Rect GetLeftEyeVisibleScreenRect(float[] undistortedFrustum, float width, float height)
	{
		return default(Rect);
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x1A29EFC", Offset = "0x1A29EFC", VA = "0x1A29EFC")]
	public Pvr_UnitySDKConfigProfile()
	{
	}
}
[Token(Token = "0x200003C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEDEA74", Offset = "0xEDEA74")]
public class Pvr_UnitySDKFPS : MonoBehaviour
{
	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float updateInterval;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeLeft;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string strFps;

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x1A32750", Offset = "0x1A32750", VA = "0x1A32750")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x1A327D8", Offset = "0x1A327D8", VA = "0x1A327D8")]
	private void ShowFps()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x1A328EC", Offset = "0x1A328EC", VA = "0x1A328EC")]
	public Pvr_UnitySDKFPS()
	{
	}
}
[Token(Token = "0x200003D")]
public class Pvr_GazeFuse : MonoBehaviour
{
	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject gazeGameObject;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image image;

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x1C4E1D0", Offset = "0x1C4E1D0", VA = "0x1C4E1D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x1C4E230", Offset = "0x1C4E230", VA = "0x1C4E230")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x1C4E364", Offset = "0x1C4E364", VA = "0x1C4E364")]
	private void FuseAmountChanged(float fuseAmount)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x1C4E40C", Offset = "0x1C4E40C", VA = "0x1C4E40C")]
	public Pvr_GazeFuse()
	{
	}
}
[Token(Token = "0x200003E")]
public class Pvr_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x2000529")]
	public enum Mode
	{
		[Token(Token = "0x4001EEB")]
		Click,
		[Token(Token = "0x4001EEC")]
		Gaze
	}

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Mode mode;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE5BA4", Offset = "0xEE5BA4")]
	public string ClickInputName;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE5BDC", Offset = "0xEE5BDC")]
	public float GazeTimeInSeconds;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5C14", Offset = "0xEE5C14")]
	private static float <gazeFraction>k__BackingField;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5C24", Offset = "0xEE5C24")]
	private static GameObject <gazeGameObject>k__BackingField;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RaycastResult CurrentRaycast;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PointerEventData pointerEventData;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject currentLookAtHandler;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float currentLookAtHandlerClickTime;

	[Token(Token = "0x17000041")]
	public static float gazeFraction
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x1C4E414", Offset = "0x1C4E414", VA = "0x1C4E414")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED300", Offset = "0xEED300")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x1C4E464", Offset = "0x1C4E464", VA = "0x1C4E464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED310", Offset = "0xEED310")]
		private set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public static GameObject gazeGameObject
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x1C4E4C0", Offset = "0x1C4E4C0", VA = "0x1C4E4C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED320", Offset = "0xEED320")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x1C4E510", Offset = "0x1C4E510", VA = "0x1C4E510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED330", Offset = "0xEED330")]
		private set
		{
		}
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1C4E568", Offset = "0x1C4E568", VA = "0x1C4E568", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1C4E58C", Offset = "0x1C4E58C", VA = "0x1C4E58C")]
	private void HandleLook()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1C4E78C", Offset = "0x1C4E78C", VA = "0x1C4E78C")]
	private void HandleSelection()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1C4EC80", Offset = "0x1C4EC80", VA = "0x1C4EC80")]
	public Pvr_GazeInputModule()
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEDEAD8", Offset = "0xEDEAD8")]
public class Pvr_GazeInputModuleCrosshair : MonoBehaviour
{
	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DisplayCrosshair;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE5C34", Offset = "0xEE5C34")]
	public Transform Crosshair;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Pvr_GazeInputModule gazeInputModule;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 CrosshairOriginalScale;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float CrosshairOriginalDistance;

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x1C4ECE8", Offset = "0x1C4ECE8", VA = "0x1C4ECE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x1C4ED48", Offset = "0x1C4ED48", VA = "0x1C4ED48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x1C4EDB0", Offset = "0x1C4EDB0", VA = "0x1C4EDB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x1C4EEC0", Offset = "0x1C4EEC0", VA = "0x1C4EEC0")]
	private void SetCrossHairAtDistance(float dist)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x1C4EFB8", Offset = "0x1C4EFB8", VA = "0x1C4EFB8")]
	public Pvr_GazeInputModuleCrosshair()
	{
	}
}
[Token(Token = "0x2000040")]
public enum RenderEventType
{
	[Token(Token = "0x4000247")]
	InitRenderThread = 1024,
	[Token(Token = "0x4000248")]
	Pause,
	[Token(Token = "0x4000249")]
	Resume,
	[Token(Token = "0x400024A")]
	LeftEyeEndFrame,
	[Token(Token = "0x400024B")]
	RightEyeEndFrame,
	[Token(Token = "0x400024C")]
	TimeWarp,
	[Token(Token = "0x400024D")]
	ResetVrModeParms,
	[Token(Token = "0x400024E")]
	ShutdownRenderThread,
	[Token(Token = "0x400024F")]
	BeginEye,
	[Token(Token = "0x4000250")]
	EndEye,
	[Token(Token = "0x4000251")]
	BoundaryRenderLeft,
	[Token(Token = "0x4000252")]
	BoundaryRenderRight,
	[Token(Token = "0x4000253")]
	BothEyeEndFrame,
	[Token(Token = "0x4000254")]
	CameraFrameLeft,
	[Token(Token = "0x4000255")]
	CameraFrameRight,
	[Token(Token = "0x4000256")]
	StartCameraFrame,
	[Token(Token = "0x4000257")]
	StopCameraFrame
}
[Token(Token = "0x2000041")]
public static class Pvr_UnitySDKPluginEvent
{
	[Token(Token = "0x200052A")]
	private delegate void RenderEventDelegate(int eventId);

	[Token(Token = "0x4000258")]
	private const uint IS_DATA_FLAG = 2147483648u;

	[Token(Token = "0x4000259")]
	private const uint DATA_POS_MASK = 1073741824u;

	[Token(Token = "0x400025A")]
	private const int DATA_POS_SHIFT = 30;

	[Token(Token = "0x400025B")]
	private const uint EVENT_TYPE_MASK = 1056899072u;

	[Token(Token = "0x400025C")]
	private const int EVENT_TYPE_SHIFT = 17;

	[Token(Token = "0x400025D")]
	private const uint PAYLOAD_MASK = 65535u;

	[Token(Token = "0x400025E")]
	private const int PAYLOAD_SHIFT = 16;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RenderEventDelegate SetSinglePassBeforeForwardOpaqueHandle;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IntPtr SetSinglePassBeforeForwardOpaquePtr;

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x1A2CF10", Offset = "0x1A2CF10", VA = "0x1A2CF10")]
	public static void Issue(RenderEventType eventType)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x1A398D8", Offset = "0x1A398D8", VA = "0x1A398D8")]
	private static int EncodeType(int eventType)
	{
		return default(int);
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x1A398E0", Offset = "0x1A398E0", VA = "0x1A398E0")]
	private static int EncodeData(int eventId, int eventData, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1A39900", Offset = "0x1A39900", VA = "0x1A39900")]
	private static int DecodeData(int eventData)
	{
		return default(int);
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1A398D0", Offset = "0x1A398D0", VA = "0x1A398D0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xEED340", Offset = "0xEED340")]
	private static void SetSinglePassBeforeForwardOpaque(int eventId)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1A39914", Offset = "0x1A39914", VA = "0x1A39914")]
	public static void SetSinglePassBeforeForwardOpaque(CommandBuffer cmd)
	{
	}
}
[Token(Token = "0x2000042")]
public class Pvr_UnitySDKSightInputModule : BaseInputModule
{
	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE5C6C", Offset = "0xEE5C6C")]
	public GameObject cursor;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int trigger;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public float clickTime;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public Vector2 hotspot;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PointerEventData pointerData;

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x1A3EBD0", Offset = "0x1A3EBD0", VA = "0x1A3EBD0", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x1A3EC60", Offset = "0x1A3EC60", VA = "0x1A3EC60", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x1A3EF60", Offset = "0x1A3EF60", VA = "0x1A3EF60", Slot = "20")]
	public override bool IsPointerOverGameObject(int pointerId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1A3EFE8", Offset = "0x1A3EFE8", VA = "0x1A3EFE8", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x1A3F024", Offset = "0x1A3F024", VA = "0x1A3F024")]
	private void CastRayFromGaze()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x1A3F188", Offset = "0x1A3F188", VA = "0x1A3F188")]
	private void UpdateCurrentObject()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1A3F328", Offset = "0x1A3F328", VA = "0x1A3F328")]
	private void PlaceCursor()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x1A3ED6C", Offset = "0x1A3ED6C", VA = "0x1A3ED6C")]
	private void HandlePendingClick()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x1A3F550", Offset = "0x1A3F550", VA = "0x1A3F550")]
	private void HandleTrigger()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x1A3F7D8", Offset = "0x1A3F7D8", VA = "0x1A3F7D8")]
	public Pvr_UnitySDKSightInputModule()
	{
	}
}
[Token(Token = "0x2000043")]
public class Pvr_ObjImporter
{
	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Pvr_ObjImporter _instance;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<int> triangles;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Vector3> vertices;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector2> uv;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector3> normals;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<PvrVector3Int> faceData;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> intArray;

	[Token(Token = "0x400026D")]
	private const int MIN_POW_10 = -16;

	[Token(Token = "0x400026E")]
	private const int MAX_POW_10 = 16;

	[Token(Token = "0x400026F")]
	private const int NUM_POWS_10 = 33;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly float[] pow10;

	[Token(Token = "0x17000043")]
	public static Pvr_ObjImporter Instance
	{
		[Token(Token = "0x6000317")]
		[Address(RVA = "0x1C516C0", Offset = "0x1C516C0", VA = "0x1C516C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x1C51774", Offset = "0x1C51774", VA = "0x1C51774")]
	public Mesh ImportFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x1C51C10", Offset = "0x1C51C10", VA = "0x1C51C10")]
	private void LoadMeshData(string fileName)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x1C522E4", Offset = "0x1C522E4", VA = "0x1C522E4")]
	private float GetFloat(StringBuilder sb, ref int start, ref StringBuilder sbFloat)
	{
		return default(float);
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x1C5245C", Offset = "0x1C5245C", VA = "0x1C5245C")]
	private int GetInt(StringBuilder sb, ref int start, ref StringBuilder sbInt)
	{
		return default(int);
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1C52864", Offset = "0x1C52864", VA = "0x1C52864")]
	private static float[] GenerateLookupTable()
	{
		return null;
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x1C5259C", Offset = "0x1C5259C", VA = "0x1C5259C")]
	private float ParseFloat(StringBuilder value)
	{
		return default(float);
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x1C527D8", Offset = "0x1C527D8", VA = "0x1C527D8")]
	private int IntParseFast(StringBuilder value)
	{
		return default(int);
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x1C5176C", Offset = "0x1C5176C", VA = "0x1C5176C")]
	public Pvr_ObjImporter()
	{
	}
}
[Token(Token = "0x2000044")]
public sealed class PvrVector3Int
{
	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5CC4", Offset = "0xEE5CC4")]
	private int <x>k__BackingField;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5CD4", Offset = "0xEE5CD4")]
	private int <y>k__BackingField;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5CE4", Offset = "0xEE5CE4")]
	private int <z>k__BackingField;

	[Token(Token = "0x17000044")]
	public int x
	{
		[Token(Token = "0x6000321")]
		[Address(RVA = "0x1537418", Offset = "0x1537418", VA = "0x1537418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED3A4", Offset = "0xEED3A4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000322")]
		[Address(RVA = "0x1537420", Offset = "0x1537420", VA = "0x1537420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED3B4", Offset = "0xEED3B4")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public int y
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0x1537428", Offset = "0x1537428", VA = "0x1537428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED3C4", Offset = "0xEED3C4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000324")]
		[Address(RVA = "0x1537430", Offset = "0x1537430", VA = "0x1537430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED3D4", Offset = "0xEED3D4")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public int z
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0x1537438", Offset = "0x1537438", VA = "0x1537438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED3E4", Offset = "0xEED3E4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000326")]
		[Address(RVA = "0x1537440", Offset = "0x1537440", VA = "0x1537440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED3F4", Offset = "0xEED3F4")]
		set
		{
		}
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x1537448", Offset = "0x1537448", VA = "0x1537448")]
	public PvrVector3Int()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x1537450", Offset = "0x1537450", VA = "0x1537450")]
	public PvrVector3Int(int x, int y, int z)
	{
	}
}
[Token(Token = "0x2000045")]
public class Pvr_EnumFlags : PropertyAttribute
{
	[Token(Token = "0x6000329")]
	[Address(RVA = "0x1C4E1C8", Offset = "0x1C4E1C8", VA = "0x1C4E1C8")]
	public Pvr_EnumFlags()
	{
	}
}
[Token(Token = "0x2000046")]
public enum ConfirmBtn
{
	[Token(Token = "0x4000275")]
	App = 1,
	[Token(Token = "0x4000276")]
	TouchPad = 2,
	[Token(Token = "0x4000277")]
	Trigger = 4
}
[Token(Token = "0x2000047")]
public class Pvr_InputModule : PointerInputModule
{
	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Pvr_UIPointer> pointers;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Pvr_EnumFlags]
	public ConfirmBtn confirmBtn;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<RaycastResult> rayCasts;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RaycastResult rayCastResult;

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x1C4F014", Offset = "0x1C4F014", VA = "0x1C4F014", Slot = "30")]
	public virtual void Initialise()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x1C4F090", Offset = "0x1C4F090", VA = "0x1C4F090")]
	public static void AddPoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x1C4F160", Offset = "0x1C4F160", VA = "0x1C4F160")]
	public static void RemovePoint(Pvr_UIPointer point)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1C4F230", Offset = "0x1C4F230", VA = "0x1C4F230", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1C4F5A4", Offset = "0x1C4F5A4", VA = "0x1C4F5A4", Slot = "31")]
	protected virtual List<RaycastResult> CheckRaycasts(Pvr_UIPointer pointer)
	{
		return null;
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x1C4F664", Offset = "0x1C4F664", VA = "0x1C4F664", Slot = "32")]
	protected virtual bool CheckTransformTree(Transform target, Transform source)
	{
		return default(bool);
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x1C4F754", Offset = "0x1C4F754", VA = "0x1C4F754", Slot = "33")]
	protected virtual bool NoValidCollision(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x1C4F814", Offset = "0x1C4F814", VA = "0x1C4F814", Slot = "34")]
	protected virtual bool IsHovering(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x1C4FA1C", Offset = "0x1C4FA1C", VA = "0x1C4FA1C", Slot = "35")]
	protected virtual bool ValidElement(GameObject obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x1C4FACC", Offset = "0x1C4FACC", VA = "0x1C4FACC", Slot = "36")]
	protected virtual void CheckPointerHoverClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x1C4FB68", Offset = "0x1C4FB68", VA = "0x1C4FB68", Slot = "37")]
	protected virtual void Hover(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x1C50790", Offset = "0x1C50790", VA = "0x1C50790", Slot = "38")]
	protected virtual void Click(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x1C507D8", Offset = "0x1C507D8", VA = "0x1C507D8", Slot = "39")]
	protected virtual void ClickOnUp(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x1C50878", Offset = "0x1C50878", VA = "0x1C50878", Slot = "40")]
	protected virtual void ClickOnDown(Pvr_UIPointer pointer, List<RaycastResult> results, bool forceClick = false)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x1C50934", Offset = "0x1C50934", VA = "0x1C50934", Slot = "41")]
	protected virtual bool IsEligibleClick(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
		return default(bool);
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1C50C10", Offset = "0x1C50C10", VA = "0x1C50C10", Slot = "42")]
	protected virtual bool AttemptClick(Pvr_UIPointer pointer)
	{
		return default(bool);
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x1C50EDC", Offset = "0x1C50EDC", VA = "0x1C50EDC", Slot = "43")]
	protected virtual void Drag(Pvr_UIPointer pointer, List<RaycastResult> results)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1C515C4", Offset = "0x1C515C4", VA = "0x1C515C4")]
	public Pvr_InputModule()
	{
	}
}
[Token(Token = "0x2000048")]
public class Pvr_UICanvas : MonoBehaviour
{
	[Token(Token = "0x200052B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE48E0", Offset = "0xEE48E0")]
	private sealed class <CreateDraggablePanel>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 canvasSize;

		[Token(Token = "0x1700041C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AAB")]
			[Address(RVA = "0x1C556C4", Offset = "0x1C556C4", VA = "0x1C556C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AAD")]
			[Address(RVA = "0x1C5572C", Offset = "0x1C5572C", VA = "0x1C5572C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AA8")]
		[Address(RVA = "0x1C55014", Offset = "0x1C55014", VA = "0x1C55014")]
		[DebuggerHidden]
		public <CreateDraggablePanel>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002AA9")]
		[Address(RVA = "0x1C55328", Offset = "0x1C55328", VA = "0x1C55328", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AAA")]
		[Address(RVA = "0x1C5532C", Offset = "0x1C5532C", VA = "0x1C5532C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AAC")]
		[Address(RVA = "0x1C556CC", Offset = "0x1C556CC", VA = "0x1C556CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clickOnPointerCollision;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float autoActivateWithinDistance;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected BoxCollider canvasBoxCollider;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Rigidbody canvasRigidBody;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Coroutine draggablePanelCreation;

	[Token(Token = "0x4000281")]
	protected const string CANVAS_DRAGGABLE_PANEL = "UICANVAS_DRAGGABLE_PANEL";

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1C54BA4", Offset = "0x1C54BA4", VA = "0x1C54BA4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x1C54BB0", Offset = "0x1C54BB0", VA = "0x1C54BB0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1C54BBC", Offset = "0x1C54BBC", VA = "0x1C54BBC", Slot = "6")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x1C54BC8", Offset = "0x1C54BC8", VA = "0x1C54BC8", Slot = "7")]
	protected virtual void SetupCanvas()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x1C54F84", Offset = "0x1C54F84", VA = "0x1C54F84", Slot = "8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEED404", Offset = "0xEED404")]
	protected virtual IEnumerator CreateDraggablePanel(Canvas canvas, Vector2 canvasSize)
	{
		return null;
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1C55040", Offset = "0x1C55040", VA = "0x1C55040", Slot = "9")]
	protected virtual void RemoveCanvas()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x1C55320", Offset = "0x1C55320", VA = "0x1C55320")]
	public Pvr_UICanvas()
	{
	}
}
[Token(Token = "0x2000049")]
public struct UIDraggableItemEventArgs
{
	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject target;
}
[Token(Token = "0x200004A")]
public delegate void UIDraggableItemEventHandler(object sender, UIDraggableItemEventArgs e);
[Token(Token = "0x200004B")]
public class Pvr_UIDraggableItem : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IDragHandler, IEndDragHandler
{
	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool restrictToDropZone;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool restrictToOriginalCanvas;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float moveOffset;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject validDropZone;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected RectTransform dragTransform;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 startPosition;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Quaternion startRotation;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject startDropZone;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform startParent;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Canvas startCanvas;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected UnityEngine.CanvasGroup canvasGroup;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Pvr_InputModule currentInputmodule;

	[Token(Token = "0x14000018")]
	public event UIDraggableItemEventHandler DraggableItemDropped
	{
		[Token(Token = "0x6000348")]
		[Address(RVA = "0x1C55734", Offset = "0x1C55734", VA = "0x1C55734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED468", Offset = "0xEED468")]
		add
		{
		}
		[Token(Token = "0x6000349")]
		[Address(RVA = "0x1C557D8", Offset = "0x1C557D8", VA = "0x1C557D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED478", Offset = "0xEED478")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event UIDraggableItemEventHandler DraggableItemReset
	{
		[Token(Token = "0x600034A")]
		[Address(RVA = "0x1C5587C", Offset = "0x1C5587C", VA = "0x1C5587C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED488", Offset = "0xEED488")]
		add
		{
		}
		[Token(Token = "0x600034B")]
		[Address(RVA = "0x1C55920", Offset = "0x1C55920", VA = "0x1C55920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED498", Offset = "0xEED498")]
		remove
		{
		}
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x1C559C4", Offset = "0x1C559C4", VA = "0x1C559C4", Slot = "7")]
	public virtual void OnDraggableItemDropped(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x1C559E4", Offset = "0x1C559E4", VA = "0x1C559E4", Slot = "8")]
	public virtual void OnDraggableItemReset(UIDraggableItemEventArgs e)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x1C55A04", Offset = "0x1C55A04", VA = "0x1C55A04", Slot = "4")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x1C55C48", Offset = "0x1C55C48", VA = "0x1C55C48", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1C55C54", Offset = "0x1C55C54", VA = "0x1C55C54", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x1C560C8", Offset = "0x1C560C8", VA = "0x1C560C8", Slot = "9")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x1C561D0", Offset = "0x1C561D0", VA = "0x1C561D0", Slot = "10")]
	protected virtual Pvr_UIPointer GetPointer()
	{
		return null;
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x1C56354", Offset = "0x1C56354", VA = "0x1C56354", Slot = "11")]
	protected virtual void SetDragPosition(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x1C56620", Offset = "0x1C56620", VA = "0x1C56620", Slot = "12")]
	protected virtual void ResetElement()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x1C566D0", Offset = "0x1C566D0", VA = "0x1C566D0", Slot = "13")]
	protected virtual UIDraggableItemEventArgs SetEventPayload(GameObject target)
	{
		return default(UIDraggableItemEventArgs);
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x1C566F8", Offset = "0x1C566F8", VA = "0x1C566F8")]
	public Pvr_UIDraggableItem()
	{
	}
}
[Token(Token = "0x200004C")]
public class Pvr_UIDropZone : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Pvr_UIDraggableItem droppableItem;

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x1C5670C", Offset = "0x1C5670C", VA = "0x1C5670C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x1C56820", Offset = "0x1C56820", VA = "0x1C56820", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x1C568B8", Offset = "0x1C568B8", VA = "0x1C568B8")]
	public Pvr_UIDropZone()
	{
	}
}
[Token(Token = "0x200004D")]
public class Pvr_UIGraphicRaycaster : GraphicRaycaster
{
	[Serializable]
	[Token(Token = "0x200052C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE48F0", Offset = "0xEE48F0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastResult> <>9__7_0;

		[Token(Token = "0x6002AAF")]
		[Address(RVA = "0x1C577E0", Offset = "0x1C577E0", VA = "0x1C577E0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002AB0")]
		[Address(RVA = "0x1C577E8", Offset = "0x1C577E8", VA = "0x1C577E8")]
		internal int <Raycast>b__7_0(RaycastResult g1, RaycastResult g2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Canvas currentCanvas;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector2 lastKnownPosition;

	[Token(Token = "0x4000294")]
	protected const float UI_CONTROL_OFFSET = 1E-05f;

	[NonSerialized]
	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RaycastResult> s_RaycastResults;

	[Token(Token = "0x17000047")]
	protected virtual Canvas canvas
	{
		[Token(Token = "0x600035E")]
		[Address(RVA = "0x1C575DC", Offset = "0x1C575DC", VA = "0x1C575DC", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x1C568C0", Offset = "0x1C568C0", VA = "0x1C568C0", Slot = "17")]
	public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x1C56A70", Offset = "0x1C56A70", VA = "0x1C56A70", Slot = "22")]
	protected virtual void SetNearestRaycast(ref PointerEventData eventData, ref List<RaycastResult> resultAppendList, ref List<RaycastResult> raycastResults)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x1C56D04", Offset = "0x1C56D04", VA = "0x1C56D04", Slot = "23")]
	protected virtual float GetHitDistance(Ray ray)
	{
		return default(float);
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x1C57024", Offset = "0x1C57024", VA = "0x1C57024", Slot = "24")]
	protected virtual void Raycast(Canvas canvas, Camera eventCamera, Ray ray, ref List<RaycastResult> results)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x1C57698", Offset = "0x1C57698", VA = "0x1C57698")]
	public Pvr_UIGraphicRaycaster()
	{
	}
}
[Token(Token = "0x200004E")]
public struct UIPointerEventArgs
{
	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isActive;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject currentTarget;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject previousTarget;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RaycastResult raycastResult;
}
[Token(Token = "0x200004F")]
public delegate void UIPointerEventHandler(object sender, UIPointerEventArgs e);
[Token(Token = "0x2000050")]
public class Pvr_UIPointer : MonoBehaviour
{
	[Token(Token = "0x200052D")]
	public enum ClickMethods
	{
		[Token(Token = "0x4001EF4")]
		ClickOnButtonUp,
		[Token(Token = "0x4001EF5")]
		ClickOnButtonDown
	}

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClickMethods clickMethod;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public bool collisionClick;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[HideInInspector]
	public bool pressToDrag;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GameObject autoActivatingCanvas;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public PointerEventData pointerEventData;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject hoveringElement;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float hoverDurationTimer;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool canClickOnHover;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform pointerOriginTransform;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool pointerClicked;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	protected bool beamEnabledState;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	protected bool lastPointerPressState;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4B")]
	protected bool lastPointerClickState;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected GameObject currentTarget;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected EventSystem cachedEventSystem;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Pvr_InputModule cachedVRInputModule;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Transform originalPointerOriginTransform;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool TouchBtnValue;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool AppBtnValue;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool TriggerBtnValue;

	[Token(Token = "0x1400001A")]
	public event UIPointerEventHandler UIPointerElementEnter
	{
		[Token(Token = "0x6000365")]
		[Address(RVA = "0x1C577F8", Offset = "0x1C577F8", VA = "0x1C577F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED4A8", Offset = "0xEED4A8")]
		add
		{
		}
		[Token(Token = "0x6000366")]
		[Address(RVA = "0x1C5789C", Offset = "0x1C5789C", VA = "0x1C5789C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED4B8", Offset = "0xEED4B8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event UIPointerEventHandler UIPointerElementExit
	{
		[Token(Token = "0x6000367")]
		[Address(RVA = "0x1C57940", Offset = "0x1C57940", VA = "0x1C57940")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED4C8", Offset = "0xEED4C8")]
		add
		{
		}
		[Token(Token = "0x6000368")]
		[Address(RVA = "0x1C579E4", Offset = "0x1C579E4", VA = "0x1C579E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED4D8", Offset = "0xEED4D8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event UIPointerEventHandler UIPointerElementClick
	{
		[Token(Token = "0x6000369")]
		[Address(RVA = "0x1C57A88", Offset = "0x1C57A88", VA = "0x1C57A88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED4E8", Offset = "0xEED4E8")]
		add
		{
		}
		[Token(Token = "0x600036A")]
		[Address(RVA = "0x1C57B2C", Offset = "0x1C57B2C", VA = "0x1C57B2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED4F8", Offset = "0xEED4F8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event UIPointerEventHandler UIPointerElementDragStart
	{
		[Token(Token = "0x600036B")]
		[Address(RVA = "0x1C57BD0", Offset = "0x1C57BD0", VA = "0x1C57BD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED508", Offset = "0xEED508")]
		add
		{
		}
		[Token(Token = "0x600036C")]
		[Address(RVA = "0x1C57C74", Offset = "0x1C57C74", VA = "0x1C57C74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED518", Offset = "0xEED518")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event UIPointerEventHandler UIPointerElementDragEnd
	{
		[Token(Token = "0x600036D")]
		[Address(RVA = "0x1C57D18", Offset = "0x1C57D18", VA = "0x1C57D18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED528", Offset = "0xEED528")]
		add
		{
		}
		[Token(Token = "0x600036E")]
		[Address(RVA = "0x1C57DBC", Offset = "0x1C57DBC", VA = "0x1C57DBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED538", Offset = "0xEED538")]
		remove
		{
		}
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1C57E60", Offset = "0x1C57E60", VA = "0x1C57E60", Slot = "4")]
	public virtual bool PointerActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x1C57E68", Offset = "0x1C57E68", VA = "0x1C57E68", Slot = "5")]
	public virtual bool IsSelectionButtonPressed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x1C57F48", Offset = "0x1C57F48", VA = "0x1C57F48", Slot = "6")]
	public virtual Vector3 GetOriginPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1C57FDC", Offset = "0x1C57FDC", VA = "0x1C57FDC", Slot = "7")]
	public virtual Vector3 GetOriginForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1C58070", Offset = "0x1C58070", VA = "0x1C58070", Slot = "8")]
	public virtual bool ValidClick(bool checkLastClick, bool lastClickState = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x1C5808C", Offset = "0x1C5808C", VA = "0x1C5808C", Slot = "9")]
	protected virtual void ResetHoverTimer()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x1C58098", Offset = "0x1C58098", VA = "0x1C58098", Slot = "10")]
	public virtual void OnUIPointerElementEnter(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1C58180", Offset = "0x1C58180", VA = "0x1C58180", Slot = "11")]
	public virtual void OnUIPointerElementExit(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0x1C5824C", Offset = "0x1C5824C", VA = "0x1C5824C", Slot = "12")]
	public virtual void OnUIPointerElementClick(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x1C58318", Offset = "0x1C58318", VA = "0x1C58318", Slot = "13")]
	public virtual void OnUIPointerElementDragStart(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x1C58364", Offset = "0x1C58364", VA = "0x1C58364", Slot = "14")]
	public virtual void OnUIPointerElementDragEnd(UIPointerEventArgs e)
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1C583B0", Offset = "0x1C583B0", VA = "0x1C583B0", Slot = "15")]
	public virtual UIPointerEventArgs SetUIPointerEvent(RaycastResult currentRaycastResult, GameObject currentTarget, [Optional] GameObject lastTarget)
	{
		return default(UIPointerEventArgs);
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1C58470", Offset = "0x1C58470", VA = "0x1C58470", Slot = "16")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1C58484", Offset = "0x1C58484", VA = "0x1C58484", Slot = "17")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x1C584C8", Offset = "0x1C584C8", VA = "0x1C584C8", Slot = "18")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1C5852C", Offset = "0x1C5852C", VA = "0x1C5852C", Slot = "19")]
	protected virtual void ConfigureEventSystem()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x1C58704", Offset = "0x1C58704", VA = "0x1C58704")]
	public Pvr_UIPointer()
	{
	}
}
[Token(Token = "0x2000051")]
[ExecuteInEditMode]
public class Pvr_UnitySDKEditor : MonoBehaviour
{
	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool vrModeEnabled;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mouseX;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float mouseY;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mouseZ;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float neckModelScale;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool autoUntiltHead;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 neckOffset;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Matrix4x4 headView;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Matrix4x4 leftEyeUndistortedProj;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Matrix4x4 rightEyeUndistortedProj;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public Matrix4x4 leftEyeProj;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public Matrix4x4 rightEyeProj;

	[Token(Token = "0x40002BF")]
	private const float TOUCH_TIME_LIMIT = 0.2f;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float touchStartTime;

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x1A2A6D8", Offset = "0x1A2A6D8", VA = "0x1A2A6D8")]
	public Matrix4x4 UndistortedProjection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x1A2A6FC", Offset = "0x1A2A6FC", VA = "0x1A2A6FC")]
	public Matrix4x4 Projection(Eye eye)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1A2A720", Offset = "0x1A2A720", VA = "0x1A2A720")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x1A2A900", Offset = "0x1A2A900", VA = "0x1A2A900")]
	private void Update()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x1A2A734", Offset = "0x1A2A734", VA = "0x1A2A734")]
	public void InitEyePara()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x1A2A878", Offset = "0x1A2A878", VA = "0x1A2A878")]
	private void InitEditorSensorPara()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x1A2B420", Offset = "0x1A2B420", VA = "0x1A2B420")]
	public static Matrix4x4 MakeProjection(float l, float t, float r, float b, float n, float f)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x1A2B5C4", Offset = "0x1A2B5C4", VA = "0x1A2B5C4")]
	public bool UpdateStatesensor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x1A2ABC0", Offset = "0x1A2ABC0", VA = "0x1A2ABC0")]
	public void ComputeEyesFromProfile()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1A2BA58", Offset = "0x1A2BA58", VA = "0x1A2BA58")]
	public bool ResetUnitySDKSensor()
	{
		return default(bool);
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1A2A994", Offset = "0x1A2A994", VA = "0x1A2A994")]
	private void SimulateInput()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x1A2B368", Offset = "0x1A2B368", VA = "0x1A2B368")]
	private void FovAdjust()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x1A2BB1C", Offset = "0x1A2BB1C", VA = "0x1A2BB1C")]
	private Rect RectAdjust(Rect eyeRect)
	{
		return default(Rect);
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x1A2B5DC", Offset = "0x1A2B5DC", VA = "0x1A2B5DC")]
	private void UpdateSimulatedSensor()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x1A2B054", Offset = "0x1A2B054", VA = "0x1A2B054")]
	private void InitForEye(ref Material mat, ref Material mat1)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x1A2BA6C", Offset = "0x1A2BA6C", VA = "0x1A2BA6C")]
	private void EnableVEmodel()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x1A2BCB8", Offset = "0x1A2BCB8", VA = "0x1A2BCB8")]
	public Pvr_UnitySDKEditor()
	{
	}
}
[Token(Token = "0x2000052")]
public class Pvr_VolumePowerBrightness : MonoBehaviour
{
	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool VolEnable;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool BattEnable;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text showResult;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text setVolumnum;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text setBrightnum;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MusicPath;

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1A417AC", Offset = "0x1A417AC", VA = "0x1A417AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x1A4187C", Offset = "0x1A4187C", VA = "0x1A4187C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1A418D0", Offset = "0x1A418D0", VA = "0x1A418D0")]
	public void GetMaxVolumeNumber()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1A41970", Offset = "0x1A41970", VA = "0x1A41970")]
	public void GetCurrentVolumeNumber()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1A41A10", Offset = "0x1A41A10", VA = "0x1A41A10")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1A41A94", Offset = "0x1A41A94", VA = "0x1A41A94")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1A41B18", Offset = "0x1A41B18", VA = "0x1A41B18")]
	public void SetVolumeNum()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1A41C30", Offset = "0x1A41C30", VA = "0x1A41C30")]
	public void SetBrightness()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1A41D48", Offset = "0x1A41D48", VA = "0x1A41D48")]
	public void GetCurrentBrightness()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1A41DE8", Offset = "0x1A41DE8", VA = "0x1A41DE8")]
	public bool setAudio(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1A41E78", Offset = "0x1A41E78", VA = "0x1A41E78")]
	public bool setBattery(string s)
	{
		return default(bool);
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x1A41814", Offset = "0x1A41814", VA = "0x1A41814")]
	private bool InitBatteryVolClass()
	{
		return default(bool);
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x1A4181C", Offset = "0x1A4181C", VA = "0x1A4181C")]
	private bool StartBatteryReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x1A418C8", Offset = "0x1A418C8", VA = "0x1A418C8")]
	private bool StopBatteryReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x1A4184C", Offset = "0x1A4184C", VA = "0x1A4184C")]
	private bool StartAudioReceiver(string startreceivre)
	{
		return default(bool);
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1A418C0", Offset = "0x1A418C0", VA = "0x1A418C0")]
	private bool StopAudioReceiver()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x1A41F08", Offset = "0x1A41F08", VA = "0x1A41F08")]
	public Pvr_VolumePowerBrightness()
	{
	}
}
[Token(Token = "0x2000053")]
public class TeleportPICO : MonoBehaviour
{
	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsBezierCurve;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material LineMat;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material LineMatRed;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject PointGo;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material PointGoMat;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Pvr_UnitySDKRoot;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject currentControllerL;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject currentControllerR;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isHandR;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 currentHitPoint;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Color fadeColor;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material fademat;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private LineRenderer line;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Ray ray;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int layerMask;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int terrainLayerMask;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Color LineColorGreen;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Color LineEmissionColorGreen;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Color LineColorRed;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Color LineEmissionColorRed;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float LineDefaultDis;

	[Token(Token = "0x17000048")]
	public GameObject CurrentController
	{
		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x11D2328", Offset = "0x11D2328", VA = "0x11D2328")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x11D2344", Offset = "0x11D2344", VA = "0x11D2344")]
	private bool GetTeleportKey()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x11D2460", Offset = "0x11D2460", VA = "0x11D2460")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x11D2598", Offset = "0x11D2598", VA = "0x11D2598")]
	private void LineInit()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x11D2708", Offset = "0x11D2708", VA = "0x11D2708")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x11D2BB4", Offset = "0x11D2BB4", VA = "0x11D2BB4")]
	private void SetLineActiveColor(bool isActive)
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x11D2D0C", Offset = "0x11D2D0C", VA = "0x11D2D0C")]
	private void DrawLine()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x11D3034", Offset = "0x11D3034", VA = "0x11D3034")]
	private void MoveCameraPrefab(Vector3 target)
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x11D3280", Offset = "0x11D3280", VA = "0x11D3280")]
	private Vector3[] GetBeizerPathPointList(Vector3 startPoint, Vector3 controlPoint, Vector3 endPoint, int pointNum)
	{
		return null;
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x11D33A4", Offset = "0x11D33A4", VA = "0x11D33A4")]
	private Vector3 GetBeizerPathPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x11D3500", Offset = "0x11D3500", VA = "0x11D3500")]
	public TeleportPICO()
	{
	}
}
[Token(Token = "0x2000054")]
public class TeleporterLayer : MonoBehaviour
{
	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x11D41C0", Offset = "0x11D41C0", VA = "0x11D41C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x11D4284", Offset = "0x11D4284", VA = "0x11D4284")]
	public TeleporterLayer()
	{
	}
}
[Token(Token = "0x2000055")]
public class RecordCamera : MonoBehaviour
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cube;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform mainCamera;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Camera subCamera;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float sensitivity;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rotaSensitivity;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float fieldOfViewSensitivity;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float MouseSensitivity;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float MoveSensitivity;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mouseXAxis;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float mouseYAxis;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float moveXAxis;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float moveYAxis;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float m_RotationMouseInput;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_Vector3YAxisUp;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float m_tempVector3YAxisUp;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float m_Vector3YAxisDown;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float m_tempVector3YAxisDown;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float m_Vector3YAxisLeft;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float m_tempVector3YAxisLeft;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float m_Vector3YAxisRight;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float m_tempVector3YAxisRight;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float Vector3YAxisFor;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float tempVector3YAxisFor;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float Vector3YAxisBack;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float tempVector3YAxisBack;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float Vector3YAxisUp;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float tempVector3YAxisUp;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float Vector3YAxisDown;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float tempVector3YAxisDown;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float Vector3YAxisLeft;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float tempVector3YAxisLeft;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float Vector3YAxisRight;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float tempVector3YAxisRight;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float minimumY;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float maximumY;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float movespeed;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float rotationspeed;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float depthOfFieldspeed;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float rotationX;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float rotationY;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 MoveX;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 MoveY;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float depth;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool is1;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool is2;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	private bool is3;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE3")]
	private bool is4;

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x13B38F8", Offset = "0x13B38F8", VA = "0x13B38F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x13B3904", Offset = "0x13B3904", VA = "0x13B3904")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x13B39D0", Offset = "0x13B39D0", VA = "0x13B39D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x13B4CEC", Offset = "0x13B4CEC", VA = "0x13B4CEC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x13B4CF0", Offset = "0x13B4CF0", VA = "0x13B4CF0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xEED548", Offset = "0xEED548")]
	public void Test()
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x13B4CF4", Offset = "0x13B4CF4", VA = "0x13B4CF4")]
	public static Vector3 ExtractHorizontal(Vector3 v, Vector3 normal, float weight)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x13B4DF4", Offset = "0x13B4DF4", VA = "0x13B4DF4")]
	public RecordCamera()
	{
	}
}
[Token(Token = "0x2000056")]
public class RecordCameraAudioControl : MonoBehaviour
{
	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float Music;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float Voice;

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x13B4E24", Offset = "0x13B4E24", VA = "0x13B4E24")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x13B51D8", Offset = "0x13B51D8", VA = "0x13B51D8")]
	public RecordCameraAudioControl()
	{
	}
}
[Token(Token = "0x2000057")]
public class Bird : MonoBehaviour
{
	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int animCount;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speedX;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speedY;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speedZ;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float amplitudeX;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float amplitudeY;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float amplitudeZ;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator anim;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool canChangeAnim;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float angleX;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float angleY;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float angleZ;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 lastPosition;

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x13CDB6C", Offset = "0x13CDB6C", VA = "0x13CDB6C")]
	public Bird()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x13CDB7C", Offset = "0x13CDB7C", VA = "0x13CDB7C")]
	private Vector3 GetNewPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x13CDC38", Offset = "0x13CDC38", VA = "0x13CDC38")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x13CDC3C", Offset = "0x13CDC3C", VA = "0x13CDC3C")]
	private void OnAnimatorMove()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x13CDE34", Offset = "0x13CDE34", VA = "0x13CDE34")]
	private void Start()
	{
	}
}
[Token(Token = "0x2000058")]
public class TestAgentBlock : MonoBehaviour
{
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxBlockTime;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float blockDistance;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float totalDistance;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NavMeshAgent aiagent;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float curBlockTime;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool isBlock;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 oldPos;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 newPos;

	[Token(Token = "0x17000049")]
	public bool IsBlock
	{
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x11D4298", Offset = "0x11D4298", VA = "0x11D4298")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x11D428C", Offset = "0x11D428C", VA = "0x11D428C")]
		set
		{
		}
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x11D42A0", Offset = "0x11D42A0", VA = "0x11D42A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x11D433C", Offset = "0x11D433C", VA = "0x11D433C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x11D438C", Offset = "0x11D438C", VA = "0x11D438C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x11D4390", Offset = "0x11D4390", VA = "0x11D4390")]
	private void TestBlock2()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x11D4540", Offset = "0x11D4540", VA = "0x11D4540")]
	private void TestBlock()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x11D467C", Offset = "0x11D467C", VA = "0x11D467C")]
	public TestAgentBlock()
	{
	}
}
[Token(Token = "0x2000059")]
public enum eAIState
{
	[Token(Token = "0x4000324")]
	Idle,
	[Token(Token = "0x4000325")]
	Patrol,
	[Token(Token = "0x4000326")]
	Squat,
	[Token(Token = "0x4000327")]
	Attack1,
	[Token(Token = "0x4000328")]
	Attack2,
	[Token(Token = "0x4000329")]
	WarningAwake,
	[Token(Token = "0x400032A")]
	Move,
	[Token(Token = "0x400032B")]
	Run,
	[Token(Token = "0x400032C")]
	Teleport
}
[Token(Token = "0x200005A")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDEB4C", Offset = "0xEDEB4C")]
public class GetSpawnPointData : ActionTask
{
	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<int> index;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<SpawnPointInfo> spawnPointInfo;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Transform> spawnPoint;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<MoveTargetType> moveType;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<Transform> targetRange;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<float> speed;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<float> highOfDistance;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public BBParameter<eMonsterAttackType> attackType;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public BBParameter<eMonsterAttackDirType> attackDirType;

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x126E048", Offset = "0x126E048", VA = "0x126E048", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x126E238", Offset = "0x126E238", VA = "0x126E238")]
	public GetSpawnPointData()
	{
	}
}
[Token(Token = "0x200005B")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDEB84", Offset = "0xEDEB84")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDEB84", Offset = "0xEDEB84")]
public class LookAtPosition : ActionTask<Transform>
{
	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> position;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool isHorizontal;

	[Token(Token = "0x1700004A")]
	protected override string info
	{
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x12DFBA8", Offset = "0x12DFBA8", VA = "0x12DFBA8", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x12DFBFC", Offset = "0x12DFBFC", VA = "0x12DFBFC", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x12DFCD4", Offset = "0x12DFCD4", VA = "0x12DFCD4")]
	public LookAtPosition()
	{
	}
}
[Token(Token = "0x200005C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDEBE8", Offset = "0xEDEBE8")]
public class ReturnBool : ActionTask
{
	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<bool> retState;

	[Token(Token = "0x1700004B")]
	protected override string info
	{
		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x13B5C94", Offset = "0x13B5C94", VA = "0x13B5C94", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x13B5D2C", Offset = "0x13B5D2C", VA = "0x13B5D2C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x13B5D94", Offset = "0x13B5D94", VA = "0x13B5D94")]
	public ReturnBool()
	{
	}
}
[Token(Token = "0x200005D")]
public enum Direction
{
	[Token(Token = "0x400033B")]
	Left,
	[Token(Token = "0x400033C")]
	Right
}
[Token(Token = "0x200005E")]
public enum BornDirection
{
	[Token(Token = "0x400033E")]
	Front,
	[Token(Token = "0x400033F")]
	Left,
	[Token(Token = "0x4000340")]
	Right,
	[Token(Token = "0x4000341")]
	Top
}
[Token(Token = "0x200005F")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDEC20", Offset = "0xEDEC20")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDEC20", Offset = "0xEDEC20")]
public class CheckDirection : ActionTask<Transform>
{
	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> refPos;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<BornDirection> direction;

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x12C0424", Offset = "0x12C0424", VA = "0x12C0424", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x12C05F4", Offset = "0x12C05F4", VA = "0x12C05F4")]
	public CheckDirection()
	{
	}
}
[Token(Token = "0x2000060")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDEC84", Offset = "0xEDEC84")]
public class ComponentSwitch<T> : ActionTask<T> where T : Behaviour
{
	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<bool> enable;

	[Token(Token = "0x1700004C")]
	protected override string info
	{
		[Token(Token = "0x60003D1")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003D2")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003D3")]
	public ComponentSwitch()
	{
	}
}
[Token(Token = "0x2000061")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDECBC", Offset = "0xEDECBC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDECBC", Offset = "0xEDECBC")]
public class CreateList<T> : ActionTask
{
	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<string> varName;

	[Token(Token = "0x1700004D")]
	protected override string info
	{
		[Token(Token = "0x60003D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003D5")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003D6")]
	public CreateList()
	{
	}
}
[Token(Token = "0x2000062")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDED20", Offset = "0xEDED20")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDED20", Offset = "0xEDED20")]
public class CreateVariable<T> : ActionTask
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<string> varName;

	[Token(Token = "0x1700004E")]
	protected override string info
	{
		[Token(Token = "0x60003D7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003D8")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003D9")]
	public CreateVariable()
	{
	}
}
[Token(Token = "0x2000063")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDED84", Offset = "0xEDED84")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDED84", Offset = "0xEDED84")]
public class ExtractGameObject : ActionTask
{
	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> tunit;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<GameObject> resultObject;

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x1235CF0", Offset = "0x1235CF0", VA = "0x1235CF0", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x1235DF4", Offset = "0x1235DF4", VA = "0x1235DF4")]
	public ExtractGameObject()
	{
	}
}
[Token(Token = "0x2000064")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDEDE8", Offset = "0xEDEDE8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDEDE8", Offset = "0xEDEDE8")]
public class FindAttackPosWUnit : ActionTask<Transform>
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> tunit;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> radius;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> offset;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x1325B7C", Offset = "0x1325B7C", VA = "0x1325B7C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x1325DF8", Offset = "0x1325DF8", VA = "0x1325DF8")]
	public FindAttackPosWUnit()
	{
	}
}
[Token(Token = "0x2000065")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDEE4C", Offset = "0xEDEE4C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDEE4C", Offset = "0xEDEE4C")]
public class FindAttackPosTranform : ActionTask<Transform>
{
	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> tunit;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> radius;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> offset;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x1325558", Offset = "0x1325558", VA = "0x1325558", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x1325804", Offset = "0x1325804", VA = "0x1325804")]
	public FindAttackPosTranform()
	{
	}
}
[Token(Token = "0x2000066")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDEEB0", Offset = "0xEDEEB0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDEEB0", Offset = "0xEDEEB0")]
public class FindAttackPosTranformH : ActionTask<Transform>
{
	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> tunit;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> radius;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> high;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<bool> isRefPos;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<Vector3> refPos;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[BlackboardOnly]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 offset;

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x1325854", Offset = "0x1325854", VA = "0x1325854", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x1325B2C", Offset = "0x1325B2C", VA = "0x1325B2C")]
	public FindAttackPosTranformH()
	{
	}
}
[Token(Token = "0x2000067")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDEF14", Offset = "0xEDEF14")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDEF14", Offset = "0xEDEF14")]
public class FindMinFloatIndex : ActionTask
{
	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<List<float>> valueList;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<int> index;

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x1325E48", Offset = "0x1325E48", VA = "0x1325E48", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x1326028", Offset = "0x1326028", VA = "0x1326028")]
	public FindMinFloatIndex()
	{
	}
}
[Token(Token = "0x2000068")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDEF78", Offset = "0xEDEF78")]
public class FindNearPlayer : ActionTask<Transform>
{
	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1326894", Offset = "0x1326894", VA = "0x1326894", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1326A18", Offset = "0x1326A18", VA = "0x1326A18")]
	public FindNearPlayer()
	{
	}
}
[Token(Token = "0x2000069")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDEFB0", Offset = "0xEDEFB0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDEFB0", Offset = "0xEDEFB0")]
public class FindPointInRect : ActionTask
{
	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> rect;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> position;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> euler;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<Vector3> scale;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[BlackboardOnly]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x1326EA4", Offset = "0x1326EA4", VA = "0x1326EA4", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x13271F8", Offset = "0x13271F8", VA = "0x13271F8")]
	public static Vector3 FindPointInRectTransform(Transform transf)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x132737C", Offset = "0x132737C", VA = "0x132737C")]
	public FindPointInRect()
	{
	}
}
[Token(Token = "0x200006A")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF014", Offset = "0xEDF014")]
public class FindRandomPlayer : ActionTask
{
	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> saveAsTargetUnit;

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x1327988", Offset = "0x1327988", VA = "0x1327988", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x1327AC8", Offset = "0x1327AC8", VA = "0x1327AC8")]
	public FindRandomPlayer()
	{
	}
}
[Token(Token = "0x200006B")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF04C", Offset = "0xEDF04C")]
public class FindRandomPointInLine : ActionTask<Transform>
{
	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<GameObject> target;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> minDistance;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> maxDistance;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<Vector3> saveAsTargetPos;

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x1327AD0", Offset = "0x1327AD0", VA = "0x1327AD0", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x1327DB4", Offset = "0x1327DB4", VA = "0x1327DB4")]
	public FindRandomPointInLine()
	{
	}
}
[Token(Token = "0x200006C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF084", Offset = "0xEDF084")]
public class FindSpawnPoint : ActionTask<Transform>
{
	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<int> spawnId;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<Vector3> saveAsStrafePosition;

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x13280D0", Offset = "0x13280D0", VA = "0x13280D0", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1328104", Offset = "0x1328104", VA = "0x1328104")]
	public FindSpawnPoint()
	{
	}
}
[Token(Token = "0x200006D")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF0BC", Offset = "0xEDF0BC")]
public class GetChildTransform : ActionTask
{
	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> rootTransform;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<List<Transform>> childContainer;

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x126CC28", Offset = "0x126CC28", VA = "0x126CC28", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x126CDB0", Offset = "0x126CDB0", VA = "0x126CDB0")]
	public GetChildTransform()
	{
	}
}
[Token(Token = "0x200006E")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF0F4", Offset = "0xEDF0F4")]
public class GetNearTransform : ActionTask<Transform>
{
	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<List<Transform>> transforms;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<Transform> result;

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x126D2A0", Offset = "0x126D2A0", VA = "0x126D2A0", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x126D5D0", Offset = "0x126D5D0", VA = "0x126D5D0")]
	public GetNearTransform()
	{
	}
}
[Token(Token = "0x200006F")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF12C", Offset = "0xEDF12C")]
public class RandomChildTransform : ActionTask
{
	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> rootTransform;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<Transform> result;

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x13B170C", Offset = "0x13B170C", VA = "0x13B170C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x13B185C", Offset = "0x13B185C", VA = "0x13B185C")]
	public RandomChildTransform()
	{
	}
}
[Token(Token = "0x2000070")]
public class JumpMoveData : MonoBehaviour
{
	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isMoving;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float currentTime;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GoSpline path;

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x1471C5C", Offset = "0x1471C5C", VA = "0x1471C5C")]
	public JumpMoveData()
	{
	}
}
[Token(Token = "0x2000071")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDF164", Offset = "0xEDF164")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF164", Offset = "0xEDF164")]
public class JumpPointStraight : ActionTask<Transform>
{
	[Token(Token = "0x200052E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4900", Offset = "0xEE4900")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float curTime;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JumpPointStraight <>4__this;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float percent;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GoSpline path;

		[Token(Token = "0x6002AB1")]
		[Address(RVA = "0x1471FA4", Offset = "0x1471FA4", VA = "0x1471FA4")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002AB2")]
		[Address(RVA = "0x14723BC", Offset = "0x14723BC", VA = "0x14723BC")]
		internal void <OnExecute>b__0()
		{
		}
	}

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> highOfDistance;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> high;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> speed;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<float> time;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Action updateAction;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private JumpMoveData jumpdata;

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1471C64", Offset = "0x1471C64", VA = "0x1471C64", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x1472300", Offset = "0x1472300", VA = "0x1472300", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x1472314", Offset = "0x1472314", VA = "0x1472314", Slot = "14")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x1471FAC", Offset = "0x1471FAC", VA = "0x1471FAC")]
	private GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x1472348", Offset = "0x1472348", VA = "0x1472348")]
	public JumpPointStraight()
	{
	}
}
[Token(Token = "0x2000072")]
public enum e_type_jump_rotation
{
	[Token(Token = "0x4000379")]
	None,
	[Token(Token = "0x400037A")]
	LookAt,
	[Token(Token = "0x400037B")]
	TwoPointDir,
	[Token(Token = "0x400037C")]
	PointDirAndRotate
}
[Token(Token = "0x2000073")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDF1C8", Offset = "0xEDF1C8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF1C8", Offset = "0xEDF1C8")]
public class JumpPointStraightOhter : ActionTask<Transform>
{
	[Token(Token = "0x200052F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4910", Offset = "0xEE4910")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float curTime;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public JumpPointStraightOhter <>4__this;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GoSpline path;

		[Token(Token = "0x6002AB3")]
		[Address(RVA = "0x1472938", Offset = "0x1472938", VA = "0x1472938")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x6002AB4")]
		[Address(RVA = "0x14734E8", Offset = "0x14734E8", VA = "0x14734E8")]
		internal void <OnExecute>b__0()
		{
		}
	}

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xEE5F44", Offset = "0xEE5F44")]
	public BBParameter<float> targetPercent;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> highOfDistance;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> high;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<float> speed;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<float> time;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<float> curPercent;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public e_type_jump_rotation direction;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public BBParameter<Vector3> lookAtPos;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xEE5F5C", Offset = "0xEE5F5C")]
	public BBParameter<float> exchangeRotio;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xEE5F74", Offset = "0xEE5F74")]
	public BBParameter<float> middleRatio;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public BBParameter<AnimationCurve> exchangeCurve;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BBParameter<float> dirPointRatio;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public BBParameter<bool> isRefParent;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public BBParameter<Transform> refTransf;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Action updateAction;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private JumpMoveData jumpdata;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 beginPos;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 prePoint;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Vector3 endDir;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float curRotateRatio;

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x147254C", Offset = "0x147254C", VA = "0x147254C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x1472E64", Offset = "0x1472E64", VA = "0x1472E64", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x1472E78", Offset = "0x1472E78", VA = "0x1472E78", Slot = "14")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1472940", Offset = "0x1472940", VA = "0x1472940")]
	private GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1472CB8", Offset = "0x1472CB8", VA = "0x1472CB8")]
	private void InitDirection()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x1472EAC", Offset = "0x1472EAC", VA = "0x1472EAC")]
	private void SetDirection()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x14733B4", Offset = "0x14733B4", VA = "0x14733B4")]
	public JumpPointStraightOhter()
	{
	}
}
[Token(Token = "0x2000074")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDF22C", Offset = "0xEDF22C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF22C", Offset = "0xEDF22C")]
public class JumpPointStraightTime : ActionTask<Transform>
{
	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> speed;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> time;

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x147392C", Offset = "0x147392C", VA = "0x147392C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x1473ABC", Offset = "0x1473ABC", VA = "0x1473ABC")]
	public JumpPointStraightTime()
	{
	}
}
[Token(Token = "0x2000075")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDF290", Offset = "0xEDF290")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF290", Offset = "0xEDF290")]
public class CheckNavmeshWalkPoint : ConditionTask
{
	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> fromPoint;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> toPoint;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> radius;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> checkNavRadius;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xEE5F8C", Offset = "0xEE5F8C")]
	public BBParameter<int> checkMaxNum;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xEE5FA4", Offset = "0xEE5FA4")]
	public BBParameter<int> checkNum;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<float> randDis;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<Vector3> returnPos;

	[Token(Token = "0x1700004F")]
	protected override string info
	{
		[Token(Token = "0x6000404")]
		[Address(RVA = "0x12C20B0", Offset = "0x12C20B0", VA = "0x12C20B0", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x12C20F8", Offset = "0x12C20F8", VA = "0x12C20F8", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x12C284C", Offset = "0x12C284C", VA = "0x12C284C")]
	public CheckNavmeshWalkPoint()
	{
	}
}
[Token(Token = "0x2000076")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDF2F4", Offset = "0xEDF2F4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF2F4", Offset = "0xEDF2F4")]
public class Bullet1 : ActionTask<Transform>
{
	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> firePosOffset;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<bool> isChild;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<bool> isTarget;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<Transform> target;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public BBParameter<Vector3> targetOffset;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[BlackboardOnly]
	public BBParameter<MonsterBullet> msBullet;

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x13DF66C", Offset = "0x13DF66C", VA = "0x13DF66C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x13DFC18", Offset = "0x13DFC18", VA = "0x13DFC18")]
	public Bullet1()
	{
	}
}
[Token(Token = "0x2000077")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDF358", Offset = "0xEDF358")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF358", Offset = "0xEDF358")]
public class KillBullet : ActionTask
{
	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<MonsterBullet> bullet;

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x1474204", Offset = "0x1474204", VA = "0x1474204", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x147427C", Offset = "0x147427C", VA = "0x147427C")]
	public KillBullet()
	{
	}
}
[Token(Token = "0x2000078")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDF3BC", Offset = "0xEDF3BC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF3BC", Offset = "0xEDF3BC")]
public class BulletNOnTarget : ActionTask<Transform>
{
	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<int> bulletNum;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<List<Transform>> targetList;

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x12AAE30", Offset = "0x12AAE30", VA = "0x12AAE30", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x12AB1B0", Offset = "0x12AB1B0", VA = "0x12AB1B0")]
	public BulletNOnTarget()
	{
	}
}
[Token(Token = "0x2000079")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDF420", Offset = "0xEDF420")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF420", Offset = "0xEDF420")]
public class BulletN : ActionTask<Transform>
{
	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<int> bulletNum;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<float> posDistance;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<float> radius;

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x12AA854", Offset = "0x12AA854", VA = "0x12AA854", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x12AAD98", Offset = "0x12AAD98", VA = "0x12AAD98")]
	public BulletN()
	{
	}
}
[Token(Token = "0x200007A")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDF484", Offset = "0xEDF484")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF484", Offset = "0xEDF484")]
public class MonsterAttack : ActionTask
{
	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> damage;

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x12E5894", Offset = "0x12E5894", VA = "0x12E5894", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x12E5A94", Offset = "0x12E5A94", VA = "0x12E5A94")]
	public MonsterAttack()
	{
	}
}
[Token(Token = "0x200007B")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDF4E8", Offset = "0xEDF4E8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF4E8", Offset = "0xEDF4E8")]
public class MonsterSuicide : ActionTask
{
	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x12F1A00", Offset = "0x12F1A00", VA = "0x12F1A00", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x12F1A9C", Offset = "0x12F1A9C", VA = "0x12F1A9C")]
	public MonsterSuicide()
	{
	}
}
[Token(Token = "0x200007C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF54C", Offset = "0xEDF54C")]
public class MonsterAttackDelay : ActionTask<Animator>
{
	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xEE5FCC", Offset = "0xEE5FCC")]
	public BBParameter<float> timePercent;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<string> stateName;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> timeout;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<int> damage;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float attackTimePoint;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Action update;

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x12E5A9C", Offset = "0x12E5A9C", VA = "0x12E5A9C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x12E5B14", Offset = "0x12E5B14", VA = "0x12E5B14", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x12E5B30", Offset = "0x12E5B30", VA = "0x12E5B30")]
	public MonsterAttackDelay()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x12E5BA4", Offset = "0x12E5BA4", VA = "0x12E5BA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED580", Offset = "0xEED580")]
	private void <OnExecute>b__8_0()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x12E5D3C", Offset = "0x12E5D3C", VA = "0x12E5D3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED590", Offset = "0xEED590")]
	private void <OnExecute>b__8_1()
	{
	}
}
[Token(Token = "0x200007D")]
public class MonsterBulletManager
{
	[Serializable]
	[Token(Token = "0x2000530")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4920", Offset = "0xEE4920")]
	private sealed class <>c
	{
		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Transform> <>9__2_0;

		[Token(Token = "0x6002AB6")]
		[Address(RVA = "0x12E95B8", Offset = "0x12E95B8", VA = "0x12E95B8")]
		public <>c()
		{
		}

		[Token(Token = "0x6002AB7")]
		[Address(RVA = "0x12E95C0", Offset = "0x12E95C0", VA = "0x12E95C0")]
		internal void <ClientMonsterFire>b__2_0(Transform child)
		{
		}
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x12E8AA0", Offset = "0x12E8AA0", VA = "0x12E8AA0")]
	public static void ServerMonsterFire(WUnit owner, Vector3 firePos, Quaternion fireRot, int bulletAssetID, WUnit target, Vector3 targetPos, int randomSeed)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x12E8BDC", Offset = "0x12E8BDC", VA = "0x12E8BDC")]
	public static void ServerMonsterFire(WUnit owner, Transform firePos, Vector3 firePosOffset, int bulletAssetID, WUnit target, Vector3 targetPos, Vector3 targetOffset)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x12E8E08", Offset = "0x12E8E08", VA = "0x12E8E08")]
	public static void ClientMonsterFire(int ownerID, Vector3 firePos, Quaternion fireRot, int bulletAssetID, int targetID, Vector3 targetPos, int randomSeed)
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x12E9548", Offset = "0x12E9548", VA = "0x12E9548")]
	public MonsterBulletManager()
	{
	}
}
[Token(Token = "0x200007E")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF584", Offset = "0xEDF584")]
public class SummonMonster : ActionTask
{
	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<int> waveIndex;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x12CCB20", Offset = "0x12CCB20", VA = "0x12CCB20", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x12CCBFC", Offset = "0x12CCBFC", VA = "0x12CCBFC")]
	public SummonMonster()
	{
	}
}
[Token(Token = "0x200007F")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF5BC", Offset = "0xEDF5BC")]
public class SummonMonsterWaveNum : ActionTask
{
	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<int> result;

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x12CCC04", Offset = "0x12CCC04", VA = "0x12CCC04", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x12CCC0C", Offset = "0x12CCC0C", VA = "0x12CCC0C")]
	public SummonMonsterWaveNum()
	{
	}
}
[Token(Token = "0x2000080")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF5F4", Offset = "0xEDF5F4")]
public class SummonBulletMonster : ActionTask
{
	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> bulletModelID;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<WUnit> target;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool rightFire;

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x12CC6CC", Offset = "0x12CC6CC", VA = "0x12CC6CC", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x12CC8B8", Offset = "0x12CC8B8", VA = "0x12CC8B8")]
	public SummonBulletMonster()
	{
	}
}
[Token(Token = "0x2000081")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF62C", Offset = "0xEDF62C")]
public class SummonBulletMonsterN : ActionTask
{
	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> bulletModelID;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<List<Transform>> targets;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool rightFire;

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x12CC8C0", Offset = "0x12CC8C0", VA = "0x12CC8C0", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x12CCB18", Offset = "0x12CCB18", VA = "0x12CCB18")]
	public SummonBulletMonsterN()
	{
	}
}
[Token(Token = "0x2000082")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDF664", Offset = "0xEDF664")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF664", Offset = "0xEDF664")]
public class SyncBullet : ActionTask
{
	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> firePosOffset;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<bool> isTarget;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<WUnit> target;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<Vector3> targetOffset;

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x12CD73C", Offset = "0x12CD73C", VA = "0x12CD73C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x12CDA1C", Offset = "0x12CDA1C", VA = "0x12CDA1C")]
	public SyncBullet()
	{
	}
}
[Token(Token = "0x2000083")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDF6C8", Offset = "0xEDF6C8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF6C8", Offset = "0xEDF6C8")]
public class SyncBulletN : ActionTask
{
	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> firePosOffset;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<List<Transform>> targetList;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<Vector3> targetOffset;

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x12CDA24", Offset = "0x12CDA24", VA = "0x12CDA24", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x12CDC08", Offset = "0x12CDC08", VA = "0x12CDC08")]
	public SyncBulletN()
	{
	}
}
[Token(Token = "0x2000084")]
internal struct ActionTaskDeltaTime
{
	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private float oldElapsedTime;

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x10210AC", Offset = "0x10210AC", VA = "0x10210AC")]
	public void InitDeltaTime(float elapsedTime)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x10210B4", Offset = "0x10210B4", VA = "0x10210B4")]
	public float GetDeltaTime(float elapsedTime)
	{
		return default(float);
	}
}
[Token(Token = "0x2000085")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDF72C", Offset = "0xEDF72C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF72C", Offset = "0xEDF72C")]
public class MoveToPosition : ActionTask<Transform>
{
	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> speed;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> offset;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float moveTime;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float curTime;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 originPos;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float percent;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 targetPos;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float deltaTime;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float oldElapsedTime;

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x137DED8", Offset = "0x137DED8", VA = "0x137DED8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x137E0D8", Offset = "0x137E0D8", VA = "0x137E0D8", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0x137E26C", Offset = "0x137E26C", VA = "0x137E26C")]
	public MoveToPosition()
	{
	}
}
[Token(Token = "0x2000086")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDF790", Offset = "0xEDF790")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF790", Offset = "0xEDF790")]
public class MoveToPositionTime : ActionTask<Transform>
{
	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> speed;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> moveTime;

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x137E4F8", Offset = "0x137E4F8", VA = "0x137E4F8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x137E62C", Offset = "0x137E62C", VA = "0x137E62C")]
	public MoveToPositionTime()
	{
	}
}
[Token(Token = "0x2000087")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDF7F4", Offset = "0xEDF7F4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF7F4", Offset = "0xEDF7F4")]
public class MoveToPositionSpeed : ActionTask<Transform>
{
	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> baseSpeed;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> baseMoveTime;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> outputSpeed;

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x137E2BC", Offset = "0x137E2BC", VA = "0x137E2BC", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x137E484", Offset = "0x137E484", VA = "0x137E484")]
	public MoveToPositionSpeed()
	{
	}
}
[Token(Token = "0x2000088")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF858", Offset = "0xEDF858")]
public class PlayAnimator : ActionTask<ServerMonsterNetSyncController>
{
	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<int> layerIndex;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xEE5FF4", Offset = "0xEE5FF4")]
	public BBParameter<string> stateName;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool isUseTransitTime;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xEE6004", Offset = "0xEE6004")]
	public float transitTime;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool waitUntilFinish;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private AnimatorStateInfo stateInfo;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool played;

	[Token(Token = "0x17000050")]
	protected override string info
	{
		[Token(Token = "0x6000431")]
		[Address(RVA = "0x152E6AC", Offset = "0x152E6AC", VA = "0x152E6AC", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x152E728", Offset = "0x152E728", VA = "0x152E728", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x152E8AC", Offset = "0x152E8AC", VA = "0x152E8AC", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x152EA08", Offset = "0x152EA08", VA = "0x152EA08")]
	public PlayAnimator()
	{
	}
}
[Token(Token = "0x2000089")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDF890", Offset = "0xEDF890")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF890", Offset = "0xEDF890")]
public class RemoveBBParam : ActionTask
{
	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<string> varName;

	[Token(Token = "0x17000051")]
	protected override string info
	{
		[Token(Token = "0x6000435")]
		[Address(RVA = "0x13B5850", Offset = "0x13B5850", VA = "0x13B5850", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x13B58D0", Offset = "0x13B58D0", VA = "0x13B58D0", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x13B59BC", Offset = "0x13B59BC", VA = "0x13B59BC")]
	public RemoveBBParam()
	{
	}
}
[Token(Token = "0x200008A")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDF8F4", Offset = "0xEDF8F4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF8F4", Offset = "0xEDF8F4")]
[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEDF8F4", Offset = "0xEDF8F4")]
public class ResetRagdoll : ActionTask<Transform>
{
	[Token(Token = "0x6000438")]
	[Address(RVA = "0x13B5AD4", Offset = "0x13B5AD4", VA = "0x13B5AD4", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x13B5B9C", Offset = "0x13B5B9C", VA = "0x13B5B9C")]
	public ResetRagdoll()
	{
	}
}
[Token(Token = "0x200008B")]
public enum ParticleOp
{
	[Token(Token = "0x40003F8")]
	Play,
	[Token(Token = "0x40003F9")]
	Stop,
	[Token(Token = "0x40003FA")]
	Pause
}
[Token(Token = "0x200008C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDF97C", Offset = "0xEDF97C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF97C", Offset = "0xEDF97C")]
public class RunParticles : ActionTask
{
	[Serializable]
	[Token(Token = "0x2000531")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4930", Offset = "0xEE4930")]
	private sealed class <>c
	{
		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Transform> <>9__2_0;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Transform> <>9__2_1;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<Transform> <>9__2_2;

		[Token(Token = "0x6002AB9")]
		[Address(RVA = "0x13C15BC", Offset = "0x13C15BC", VA = "0x13C15BC")]
		public <>c()
		{
		}

		[Token(Token = "0x6002ABA")]
		[Address(RVA = "0x13C15C4", Offset = "0x13C15C4", VA = "0x13C15C4")]
		internal void <OnExecute>b__2_0(Transform child)
		{
		}

		[Token(Token = "0x6002ABB")]
		[Address(RVA = "0x13C1670", Offset = "0x13C1670", VA = "0x13C1670")]
		internal void <OnExecute>b__2_1(Transform child)
		{
		}

		[Token(Token = "0x6002ABC")]
		[Address(RVA = "0x13C171C", Offset = "0x13C171C", VA = "0x13C171C")]
		internal void <OnExecute>b__2_2(Transform child)
		{
		}
	}

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> effectRoot;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<ParticleOp> operation;

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x13C1230", Offset = "0x13C1230", VA = "0x13C1230", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x13C154C", Offset = "0x13C154C", VA = "0x13C154C")]
	public RunParticles()
	{
	}
}
[Token(Token = "0x200008D")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDF9E0", Offset = "0xEDF9E0")]
public class SetVector3Part : ActionTask
{
	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> srcVec;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> valueVec;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool changeX;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool changeY;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public bool changeZ;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<Vector3> resultVec;

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x1262D14", Offset = "0x1262D14", VA = "0x1262D14", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x1262E08", Offset = "0x1262E08", VA = "0x1262E08")]
	public SetVector3Part()
	{
	}
}
[Token(Token = "0x200008E")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDFA18", Offset = "0xEDFA18")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDFA18", Offset = "0xEDFA18")]
public class LookTarget_AimIK : ActionTask
{
	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<string> aimAimation;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> aimTarget;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> r_aimSuccessTime;

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x12DFF00", Offset = "0x12DFF00", VA = "0x12DFF00", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x12E012C", Offset = "0x12E012C", VA = "0x12E012C")]
	public LookTarget_AimIK()
	{
	}
}
[Token(Token = "0x200008F")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDFA7C", Offset = "0xEDFA7C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDFA7C", Offset = "0xEDFA7C")]
public class UnlookTarget_AimIK : ActionTask
{
	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x1311590", Offset = "0x1311590", VA = "0x1311590", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x13116E0", Offset = "0x13116E0", VA = "0x13116E0")]
	public UnlookTarget_AimIK()
	{
	}
}
[Token(Token = "0x2000090")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDFAE0", Offset = "0xEDFAE0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDFAE0", Offset = "0xEDFAE0")]
public class UpdateTarget_AimIK : ActionTask
{
	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> aimTarget;

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x13116E8", Offset = "0x13116E8", VA = "0x13116E8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x1311850", Offset = "0x1311850", VA = "0x1311850")]
	public UpdateTarget_AimIK()
	{
	}
}
[Token(Token = "0x2000091")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDFB44", Offset = "0xEDFB44")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDFB44", Offset = "0xEDFB44")]
public class BossMagicCircle : ActionTask
{
	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<bool> isShow;

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x13D47A0", Offset = "0x13D47A0", VA = "0x13D47A0", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x13D4928", Offset = "0x13D4928", VA = "0x13D4928")]
	public BossMagicCircle()
	{
	}
}
[Token(Token = "0x2000092")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDFBA8", Offset = "0xEDFBA8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDFBA8", Offset = "0xEDFBA8")]
public class FindNearGroupTargetUnit : ActionTask<Transform>
{
	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<e_group_type> targetGroup;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<WUnit> attackerUnit;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<GameObject> targetObj;

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x1326030", Offset = "0x1326030", VA = "0x1326030", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x1326378", Offset = "0x1326378", VA = "0x1326378")]
	public FindNearGroupTargetUnit()
	{
	}
}
[Token(Token = "0x2000093")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDFC0C", Offset = "0xEDFC0C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDFC0C", Offset = "0xEDFC0C")]
public class FindNearGroupTargetUnitAndInRoom : ActionTask<Transform>
{
	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<e_group_type> targetGroup;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<WUnit> attackerUnit;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<GameObject> targetObj;

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x13263C8", Offset = "0x13263C8", VA = "0x13263C8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x13266BC", Offset = "0x13266BC", VA = "0x13266BC")]
	private WUnit FindClosestInRoomTarget(List<WUnit>.Enumerator enumerator, WUnit attacker)
	{
		return null;
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1326844", Offset = "0x1326844", VA = "0x1326844")]
	public FindNearGroupTargetUnitAndInRoom()
	{
	}
}
[Token(Token = "0x2000094")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDFC70", Offset = "0xEDFC70")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDFC70", Offset = "0xEDFC70")]
public class FindRandomGroupTargetUnit : ActionTask<Transform>
{
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<e_group_type> targetGroup;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<e_type_role> targetRoleType;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBParameter<WUnit> attackerUnit;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[BlackboardOnly]
	public BBParameter<GameObject> targetObj;

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1327384", Offset = "0x1327384", VA = "0x1327384", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x1327754", Offset = "0x1327754", VA = "0x1327754")]
	public FindRandomGroupTargetUnit()
	{
	}
}
[Token(Token = "0x2000095")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDFCD4", Offset = "0xEDFCD4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDFCD4", Offset = "0xEDFCD4")]
public class FindRandomHostileGroup : ActionTask<Transform>
{
	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> attackerUnit;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<e_group_type> hostileGroup;

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x13277C8", Offset = "0x13277C8", VA = "0x13277C8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x1327938", Offset = "0x1327938", VA = "0x1327938")]
	public FindRandomHostileGroup()
	{
	}
}
[Token(Token = "0x2000096")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDFD38", Offset = "0xEDFD38")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDFD38", Offset = "0xEDFD38")]
public class FindSoldierMovePoint : ActionTask<Transform>
{
	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> unit;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<Transform> r_moveTarget;

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x1327E04", Offset = "0x1327E04", VA = "0x1327E04", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x1327EE0", Offset = "0x1327EE0", VA = "0x1327EE0")]
	public FindSoldierMovePoint()
	{
	}
}
[Token(Token = "0x2000097")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDFD9C", Offset = "0xEDFD9C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDFD9C", Offset = "0xEDFD9C")]
public class FindSoldierPathHostileUnit : ActionTask<Transform>
{
	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> attackerUnit;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<e_group_type> hostileUnit;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBParameter<WUnit> r_targetUnit;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<GameObject> r_targetObj;

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x1327F30", Offset = "0x1327F30", VA = "0x1327F30", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x1328080", Offset = "0x1328080", VA = "0x1328080")]
	public FindSoldierPathHostileUnit()
	{
	}
}
[Token(Token = "0x2000098")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDFE00", Offset = "0xEDFE00")]
public class GetPointInRange : ActionTask
{
	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> refTransf;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> forwardValue;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> rightValue;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> upValue;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<Vector3> resultPos;

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x126D620", Offset = "0x126D620", VA = "0x126D620", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x126D874", Offset = "0x126D874", VA = "0x126D874")]
	public GetPointInRange()
	{
	}
}
[Token(Token = "0x2000099")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDFE38", Offset = "0xEDFE38")]
public class GetRandomPointInTra : ActionTask
{
	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> sourceTra;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> saveasPos;

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x126DD6C", Offset = "0x126DD6C", VA = "0x126DD6C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x126DE60", Offset = "0x126DE60", VA = "0x126DE60")]
	public GetRandomPointInTra()
	{
	}
}
[Token(Token = "0x200009A")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDFE70", Offset = "0xEDFE70")]
public class GetPointInRangeVec : ActionTask
{
	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> refTransf;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> offsetVec;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> resultPos;

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x126D87C", Offset = "0x126D87C", VA = "0x126D87C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x126DAD0", Offset = "0x126DAD0", VA = "0x126DAD0")]
	public GetPointInRangeVec()
	{
	}
}
[Token(Token = "0x200009B")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDFEA8", Offset = "0xEDFEA8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDFEA8", Offset = "0xEDFEA8")]
public class GetUnitByHurtDefine : ActionTask<Transform>
{
	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> unit;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<GameObject> unitObj;

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x126E240", Offset = "0x126E240", VA = "0x126E240", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x126E3DC", Offset = "0x126E3DC", VA = "0x126E3DC")]
	public GetUnitByHurtDefine()
	{
	}
}
[Token(Token = "0x200009C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDFF0C", Offset = "0xEDFF0C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDFF0C", Offset = "0xEDFF0C")]
public class LookAimTarget : ActionTask
{
	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<GameObject> aimTarget;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> minHeight;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> maxHeight;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<float> minWidth;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<float> maxWidth;

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x12DF8E4", Offset = "0x12DF8E4", VA = "0x12DF8E4", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x12DFBA0", Offset = "0x12DFBA0", VA = "0x12DFBA0")]
	public LookAimTarget()
	{
	}
}
[Token(Token = "0x200009D")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDFF70", Offset = "0xEDFF70")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDFF70", Offset = "0xEDFF70")]
public class LookTarget_Aim : ActionTask
{
	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> aimTarget;

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x12DFD24", Offset = "0x12DFD24", VA = "0x12DFD24", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x12DFEF8", Offset = "0x12DFEF8", VA = "0x12DFEF8")]
	public LookTarget_Aim()
	{
	}
}
[Token(Token = "0x200009E")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEDFFD4", Offset = "0xEDFFD4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEDFFD4", Offset = "0xEDFFD4")]
public class LookTarget_Rot : ActionTask
{
	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> firePoint;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> aimTarget;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Quaternion> forwardRot;

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x12E0134", Offset = "0x12E0134", VA = "0x12E0134", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x12E0278", Offset = "0x12E0278", VA = "0x12E0278")]
	public LookTarget_Rot()
	{
	}
}
[Token(Token = "0x200009F")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE0038", Offset = "0xEE0038")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE0038", Offset = "0xEE0038")]
public class LookTarget_Skill_Rot : ActionTask
{
	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<e_Skill_State_Type> skillState;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> aimTarget;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<Quaternion> forwardRot;

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x12E0280", Offset = "0x12E0280", VA = "0x12E0280", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x12E056C", Offset = "0x12E056C", VA = "0x12E056C")]
	public LookTarget_Skill_Rot()
	{
	}
}
[Token(Token = "0x20000A0")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE009C", Offset = "0xEE009C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE009C", Offset = "0xEE009C")]
public class MonsterChangeSkill : ActionTask
{
	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<e_Skill_State_Type> skillState;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> pos;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<Quaternion> rot;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<Vector3> TargetPos;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<GameObject> TargetObj;

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x12E9F58", Offset = "0x12E9F58", VA = "0x12E9F58", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x12EA134", Offset = "0x12EA134", VA = "0x12EA134")]
	public MonsterChangeSkill()
	{
	}
}
[Token(Token = "0x20000A1")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE0100", Offset = "0xEE0100")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE0100", Offset = "0xEE0100")]
public class MonsterCleanBeHit : ActionTask
{
	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x12EA13C", Offset = "0x12EA13C", VA = "0x12EA13C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x12EA290", Offset = "0x12EA290", VA = "0x12EA290")]
	public MonsterCleanBeHit()
	{
	}
}
[Token(Token = "0x20000A2")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE0164", Offset = "0xEE0164")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE0164", Offset = "0xEE0164")]
public class MonsterCreateSkill : ActionTask
{
	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x12EA298", Offset = "0x12EA298", VA = "0x12EA298", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x12EA370", Offset = "0x12EA370", VA = "0x12EA370")]
	public MonsterCreateSkill()
	{
	}
}
[Token(Token = "0x20000A3")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE01C8", Offset = "0xEE01C8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE01C8", Offset = "0xEE01C8")]
public class MonsterReBirth : ActionTask
{
	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x12EC120", Offset = "0x12EC120", VA = "0x12EC120", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x12EC290", Offset = "0x12EC290", VA = "0x12EC290")]
	public MonsterReBirth()
	{
	}
}
[Token(Token = "0x20000A4")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE022C", Offset = "0xEE022C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE022C", Offset = "0xEE022C")]
public class MonsterStopSkill : ActionTask
{
	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x12F1924", Offset = "0x12F1924", VA = "0x12F1924", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x12F19F8", Offset = "0x12F19F8", VA = "0x12F19F8")]
	public MonsterStopSkill()
	{
	}
}
[Token(Token = "0x20000A5")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE0290", Offset = "0xEE0290")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE0290", Offset = "0xEE0290")]
public class MonsterTransfer : ActionTask
{
	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> tran;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> pos;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<Quaternion> rot;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<bool> isAppear;

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x12F1AA4", Offset = "0x12F1AA4", VA = "0x12F1AA4", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x12F1E44", Offset = "0x12F1E44", VA = "0x12F1E44")]
	public MonsterTransfer()
	{
	}
}
[Token(Token = "0x20000A6")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE02F4", Offset = "0xEE02F4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE02F4", Offset = "0xEE02F4")]
public class NPCFire : ActionTask<ServerMonsterNetSyncController>
{
	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> duration;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float timer;

	[Token(Token = "0x17000052")]
	protected override string info
	{
		[Token(Token = "0x600046F")]
		[Address(RVA = "0x137F868", Offset = "0x137F868", VA = "0x137F868", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x137FA24", Offset = "0x137FA24", VA = "0x137FA24", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0x137FACC", Offset = "0x137FACC", VA = "0x137FACC", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x137FBF0", Offset = "0x137FBF0", VA = "0x137FBF0")]
	public NPCFire()
	{
	}
}
[Token(Token = "0x20000A7")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE0358", Offset = "0xEE0358")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE0358", Offset = "0xEE0358")]
public class NPCFireCeaselessly : ActionTask<ServerMonsterNetSyncController>
{
	[Token(Token = "0x6000473")]
	[Address(RVA = "0x137FC40", Offset = "0x137FC40", VA = "0x137FC40", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x137FCB0", Offset = "0x137FCB0", VA = "0x137FCB0")]
	public NPCFireCeaselessly()
	{
	}
}
[Token(Token = "0x20000A8")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE03BC", Offset = "0xEE03BC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE03BC", Offset = "0xEE03BC")]
public class NPCFireStop : ActionTask<ServerMonsterNetSyncController>
{
	[Token(Token = "0x6000475")]
	[Address(RVA = "0x137FDC0", Offset = "0x137FDC0", VA = "0x137FDC0", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x137FE30", Offset = "0x137FE30", VA = "0x137FE30")]
	public NPCFireStop()
	{
	}
}
[Token(Token = "0x20000A9")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE0420", Offset = "0xEE0420")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE0420", Offset = "0xEE0420")]
public class NPCFireNow : ActionTask<ServerMonsterNetSyncController>
{
	[Token(Token = "0x6000477")]
	[Address(RVA = "0x137FD00", Offset = "0x137FD00", VA = "0x137FD00", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x137FD70", Offset = "0x137FD70", VA = "0x137FD70")]
	public NPCFireNow()
	{
	}
}
[Token(Token = "0x20000AA")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE0484", Offset = "0xEE0484")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE0484", Offset = "0xEE0484")]
public class UnityPause : ActionTask
{
	[Token(Token = "0x6000479")]
	[Address(RVA = "0x1311518", Offset = "0x1311518", VA = "0x1311518", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x1311588", Offset = "0x1311588", VA = "0x1311588")]
	public UnityPause()
	{
	}
}
[Token(Token = "0x20000AB")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE04E8", Offset = "0xEE04E8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE04E8", Offset = "0xEE04E8")]
public class NavMeshPriorityDistribution : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<int> minPriority;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<int> maxPriority;

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x13855A8", Offset = "0x13855A8", VA = "0x13855A8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x13856F8", Offset = "0x13856F8", VA = "0x13856F8")]
	public NavMeshPriorityDistribution()
	{
	}
}
[Token(Token = "0x20000AC")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE054C", Offset = "0xEE054C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE054C", Offset = "0xEE054C")]
public class RandomSolidierTargetPoint : ActionTask
{
	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<GameObject> rTargetPoint;

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x13B1C78", Offset = "0x13B1C78", VA = "0x13B1C78", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x13B1E08", Offset = "0x13B1E08", VA = "0x13B1E08")]
	public RandomSolidierTargetPoint()
	{
	}
}
[Token(Token = "0x20000AD")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE05B0", Offset = "0xEE05B0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE05B0", Offset = "0xEE05B0")]
public class UnLookAimTarget : ActionTask
{
	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x11E1C20", Offset = "0x11E1C20", VA = "0x11E1C20", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x11E1D70", Offset = "0x11E1D70", VA = "0x11E1D70")]
	public UnLookAimTarget()
	{
	}
}
[Token(Token = "0x20000AE")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE0614", Offset = "0xEE0614")]
public class SurroundToTarget : ActionTask<Transform>
{
	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<Vector3> saveAsSuroundPosition;

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x12CD384", Offset = "0x12CD384", VA = "0x12CD384", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x12CD6E4", Offset = "0x12CD6E4", VA = "0x12CD6E4")]
	public SurroundToTarget()
	{
	}
}
[Token(Token = "0x20000AF")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE064C", Offset = "0xEE064C")]
public class CheckAIBlock : ConditionTask<NavMeshAgent>
{
	[Token(Token = "0x6000483")]
	[Address(RVA = "0x12C03CC", Offset = "0x12C03CC", VA = "0x12C03CC", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x12C03D4", Offset = "0x12C03D4", VA = "0x12C03D4")]
	public CheckAIBlock()
	{
	}
}
[Token(Token = "0x20000B0")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE0684", Offset = "0xEE0684")]
public class CheckMonsterCurHP : ConditionTask
{
	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CompareMethod checkType;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> targetValuePer;

	[Token(Token = "0x17000053")]
	protected override string info
	{
		[Token(Token = "0x6000485")]
		[Address(RVA = "0x12C1A48", Offset = "0x12C1A48", VA = "0x12C1A48", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x12C1C08", Offset = "0x12C1C08", VA = "0x12C1C08", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x12C1D18", Offset = "0x12C1D18", VA = "0x12C1D18")]
	public CheckMonsterCurHP()
	{
	}
}
[Token(Token = "0x20000B1")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE06BC", Offset = "0xEE06BC")]
public class CheckMonsterStrategyCount : ConditionTask
{
	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<e_type_monster> monsterType;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<string> BBVarName;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> BBVarValue;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<int> targetValue;

	[Token(Token = "0x17000054")]
	protected override string info
	{
		[Token(Token = "0x6000488")]
		[Address(RVA = "0x12C1D20", Offset = "0x12C1D20", VA = "0x12C1D20", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x12C1F54", Offset = "0x12C1F54", VA = "0x12C1F54", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x12C20A8", Offset = "0x12C20A8", VA = "0x12C20A8")]
	public CheckMonsterStrategyCount()
	{
	}
}
[Token(Token = "0x20000B2")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE06F4", Offset = "0xEE06F4")]
public class CheckPointInCubic : ConditionTask
{
	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> point;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> cubicTransform;

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x120A188", Offset = "0x120A188", VA = "0x120A188", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x120A3E0", Offset = "0x120A3E0", VA = "0x120A3E0")]
	public CheckPointInCubic()
	{
	}
}
[Token(Token = "0x20000B3")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE072C", Offset = "0xEE072C")]
public class CheckSoldierIsCanMove : ConditionTask
{
	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> unit;

	[Token(Token = "0x17000055")]
	protected override string info
	{
		[Token(Token = "0x600048D")]
		[Address(RVA = "0x120A3E8", Offset = "0x120A3E8", VA = "0x120A3E8", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x120A448", Offset = "0x120A448", VA = "0x120A448", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x120A4EC", Offset = "0x120A4EC", VA = "0x120A4EC")]
	public CheckSoldierIsCanMove()
	{
	}
}
[Token(Token = "0x20000B4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE0764", Offset = "0xEE0764")]
public class CheckSoldierSuppressStatus : ConditionTask
{
	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> unit;

	[Token(Token = "0x17000056")]
	protected override string info
	{
		[Token(Token = "0x6000490")]
		[Address(RVA = "0x120A4F4", Offset = "0x120A4F4", VA = "0x120A4F4", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x120A554", Offset = "0x120A554", VA = "0x120A554", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x120A5F8", Offset = "0x120A5F8", VA = "0x120A5F8")]
	public CheckSoldierSuppressStatus()
	{
	}
}
[Token(Token = "0x20000B5")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE079C", Offset = "0xEE079C")]
public class CheckTest : ConditionTask
{
	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public new BBParameter<string> name;

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x120A600", Offset = "0x120A600", VA = "0x120A600", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x120A608", Offset = "0x120A608", VA = "0x120A608")]
	public CheckTest()
	{
	}
}
[Token(Token = "0x20000B6")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE07D4", Offset = "0xEE07D4")]
public class CheckUnitHP : ConditionTask
{
	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> unit;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CompareMethod checkType;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xEE625C", Offset = "0xEE625C")]
	public BBParameter<float> percent;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xEE6274", Offset = "0xEE6274")]
	public float differenceThreshold;

	[Token(Token = "0x17000057")]
	protected override string info
	{
		[Token(Token = "0x6000495")]
		[Address(RVA = "0x120A610", Offset = "0x120A610", VA = "0x120A610", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x120A678", Offset = "0x120A678", VA = "0x120A678", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x120A7D4", Offset = "0x120A7D4", VA = "0x120A7D4")]
	public CheckUnitHP()
	{
	}
}
[Token(Token = "0x20000B7")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE080C", Offset = "0xEE080C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE080C", Offset = "0xEE080C")]
public class CheckUnitHPValue : ConditionTask
{
	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> unit;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CompareMethod checkType;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> targetHPValue;

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x120A7E8", Offset = "0x120A7E8", VA = "0x120A7E8", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x120A8A4", Offset = "0x120A8A4", VA = "0x120A8A4")]
	public CheckUnitHPValue()
	{
	}
}
[Token(Token = "0x20000B8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE0870", Offset = "0xEE0870")]
public class CheckUnitNull : ConditionTask
{
	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> unit;

	[Token(Token = "0x17000058")]
	protected override string info
	{
		[Token(Token = "0x600049A")]
		[Address(RVA = "0x120A8AC", Offset = "0x120A8AC", VA = "0x120A8AC", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x120A90C", Offset = "0x120A90C", VA = "0x120A90C", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x120A970", Offset = "0x120A970", VA = "0x120A970")]
	public CheckUnitNull()
	{
	}
}
[Token(Token = "0x20000B9")]
public interface IEnvAudio
{
	[Token(Token = "0x600049D")]
	void PlayAudio();

	[Token(Token = "0x600049E")]
	void StopAudio();
}
[Token(Token = "0x20000BA")]
public class EnvAudio : MonoBehaviour, IEnvAudio
{
	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioEvent envAudioEvent;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool isUseObstruction;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WwiseDefine audioObj;

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x12333F4", Offset = "0x12333F4", VA = "0x12333F4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x1233474", Offset = "0x1233474", VA = "0x1233474")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x12333F8", Offset = "0x12333F8", VA = "0x12333F8")]
	private void Init()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x1233478", Offset = "0x1233478", VA = "0x1233478")]
	private void UnInit()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x12336F8", Offset = "0x12336F8", VA = "0x12336F8", Slot = "4")]
	public void PlayAudio()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x12337BC", Offset = "0x12337BC", VA = "0x12337BC", Slot = "5")]
	public void StopAudio()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1233850", Offset = "0x1233850", VA = "0x1233850")]
	public EnvAudio()
	{
	}
}
[Token(Token = "0x20000BB")]
public class EnvAudioManager : Singleton<EnvAudioManager>
{
	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private HashSet<IEnvAudio> gearList;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE62B0", Offset = "0xEE62B0")]
	private bool <isStart>k__BackingField;

	[Token(Token = "0x17000059")]
	public bool isStart
	{
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x1233858", Offset = "0x1233858", VA = "0x1233858")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED5A0", Offset = "0xEED5A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x1233860", Offset = "0x1233860", VA = "0x1233860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED5B0", Offset = "0xEED5B0")]
		private set
		{
		}
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x12334F4", Offset = "0x12334F4", VA = "0x12334F4")]
	public void RegisterEnvAudio(IEnvAudio audio)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1233600", Offset = "0x1233600", VA = "0x1233600")]
	public void UnRegisterEnvAudio(IEnvAudio audio)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x123386C", Offset = "0x123386C", VA = "0x123386C")]
	public void SetAllReset()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x12339DC", Offset = "0x12339DC", VA = "0x12339DC")]
	public void SetAllStart()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x1233B4C", Offset = "0x1233B4C", VA = "0x1233B4C")]
	public EnvAudioManager()
	{
	}
}
[Token(Token = "0x20000BC")]
public class RoomEnvAudios : MonoBehaviour, IEnvAudio
{
	[Serializable]
	[Token(Token = "0x2000532")]
	public class RoomEnvAudioCell
	{
		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int roomId;

		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AudioEvent audioEvent;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioEvent bgmEvent;

		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public AudioEvent audioStopEvent;

		[Token(Token = "0x4001F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RTPCEvent rtpcEvent;

		[Token(Token = "0x4001F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float rtpcValue;

		[Token(Token = "0x6002ABD")]
		[Address(RVA = "0x13BA6DC", Offset = "0x13BA6DC", VA = "0x13BA6DC")]
		public RoomEnvAudioCell()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000533")]
	public class InstanceRoomEnvAudioCell
	{
		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int instanceId;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AudioEvent bgmEvent;

		[Token(Token = "0x6002ABE")]
		[Address(RVA = "0x13BA6CC", Offset = "0x13BA6CC", VA = "0x13BA6CC")]
		public InstanceRoomEnvAudioCell()
		{
		}
	}

	[Token(Token = "0x2000534")]
	public enum RoomEnvType
	{
		[Token(Token = "0x4001F0D")]
		None,
		[Token(Token = "0x4001F0E")]
		Type_1,
		[Token(Token = "0x4001F0F")]
		Type_2,
		[Token(Token = "0x4001F10")]
		Type_3
	}

	[Token(Token = "0x2000535")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4940", Offset = "0xEE4940")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GuidTipUI tip;

		[Token(Token = "0x6002ABF")]
		[Address(RVA = "0x13B9FC8", Offset = "0x13B9FC8", VA = "0x13B9FC8")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6002AC0")]
		[Address(RVA = "0x13BA5E0", Offset = "0x13BA5E0", VA = "0x13BA5E0")]
		internal void <ShowUI>b__1()
		{
		}
	}

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RoomEnvAudioCell[] roomEnvAudioCells;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InstanceRoomEnvAudioCell[] instanceRoomEnvAudioCells;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int defaultRoomId;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WwiseDefine envObj;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WwiseDefine bgmObj;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RoomEnvAudioCell curCell;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RoomEnvType curType;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int curTypeRoomId;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE62E0", Offset = "0xEE62E0")]
	private static RoomEnvAudios <Instance>k__BackingField;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine guidTipUICoroutine;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> uiRoomIds;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float uiDelay;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool isInitUIRoomId;

	[Token(Token = "0x1700005A")]
	public static RoomEnvAudios Instance
	{
		[Token(Token = "0x60004AD")]
		[Address(RVA = "0x13B9040", Offset = "0x13B9040", VA = "0x13B9040")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED5C0", Offset = "0xEED5C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004AE")]
		[Address(RVA = "0x13B9090", Offset = "0x13B9090", VA = "0x13B9090")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED5D0", Offset = "0xEED5D0")]
		private set
		{
		}
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x13B90E8", Offset = "0x13B90E8", VA = "0x13B90E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x13B9140", Offset = "0x13B9140", VA = "0x13B9140")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x13B93D0", Offset = "0x13B93D0", VA = "0x13B93D0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x13B9800", Offset = "0x13B9800", VA = "0x13B9800")]
	private void OnEnterRoom(FlowNode fNod, bool isOk)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x13B99DC", Offset = "0x13B99DC", VA = "0x13B99DC")]
	private void DoEnterRoom(int roomId)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x13B9658", Offset = "0x13B9658", VA = "0x13B9658")]
	public void CloseUI()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x13B9B80", Offset = "0x13B9B80", VA = "0x13B9B80")]
	public void ShowUI(int roomId)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x13B9FD0", Offset = "0x13B9FD0", VA = "0x13B9FD0")]
	private void OnSwitchFightState(int i)
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x13B9FD4", Offset = "0x13B9FD4", VA = "0x13B9FD4")]
	private void OnRoomPass(int roomId)
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x13B9A10", Offset = "0x13B9A10", VA = "0x13B9A10")]
	public void DOEnvAudio(int roomId)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x13B92DC", Offset = "0x13B92DC", VA = "0x13B92DC")]
	public void SwitchBGM(RoomEnvType roomEnvType, bool isSkip = false)
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x13BA220", Offset = "0x13BA220", VA = "0x13BA220")]
	public void PlayBGM()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x13B9888", Offset = "0x13B9888", VA = "0x13B9888")]
	public void PlayInstanceBGM(int insId)
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x13BA378", Offset = "0x13BA378", VA = "0x13BA378")]
	private InstanceRoomEnvAudioCell GetInstanceEnvAudioCell(int insId)
	{
		return null;
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x13BA3E0", Offset = "0x13BA3E0", VA = "0x13BA3E0")]
	public void StopBGM()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x13BA0B0", Offset = "0x13BA0B0", VA = "0x13BA0B0")]
	public void PlayEnvAudio()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x13B9FD8", Offset = "0x13B9FD8", VA = "0x13B9FD8")]
	public void StopEnvAudio()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x13BA4B8", Offset = "0x13BA4B8", VA = "0x13BA4B8", Slot = "4")]
	public void PlayAudio()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x13B9574", Offset = "0x13B9574", VA = "0x13B9574", Slot = "5")]
	public void StopAudio()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x13BA4EC", Offset = "0x13BA4EC", VA = "0x13BA4EC")]
	public RoomEnvAudios()
	{
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x13BA578", Offset = "0x13BA578", VA = "0x13BA578")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED5E0", Offset = "0xEED5E0")]
	private void <ShowUI>b__25_0(int id, int room)
	{
	}
}
[Token(Token = "0x20000BD")]
public class SafeRoomEnvAudios : EnvAudio
{
	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x12527B8", Offset = "0x12527B8", VA = "0x12527B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x12527C0", Offset = "0x12527C0", VA = "0x12527C0")]
	private void Destroy()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x12527C4", Offset = "0x12527C4", VA = "0x12527C4")]
	public SafeRoomEnvAudios()
	{
	}
}
[Token(Token = "0x20000BE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE08A8", Offset = "0xEE08A8")]
public class BHapticsDivecesController : MonoBehaviour
{
	[Token(Token = "0x2000536")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4950", Offset = "0xEE4950")]
	private sealed class <StartUI>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BHapticsDivecesController <>4__this;

		[Token(Token = "0x1700041E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AC4")]
			[Address(RVA = "0x1562AD0", Offset = "0x1562AD0", VA = "0x1562AD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700041F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AC6")]
			[Address(RVA = "0x1562B38", Offset = "0x1562B38", VA = "0x1562B38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AC1")]
		[Address(RVA = "0x1562234", Offset = "0x1562234", VA = "0x1562234")]
		[DebuggerHidden]
		public <StartUI>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002AC2")]
		[Address(RVA = "0x156298C", Offset = "0x156298C", VA = "0x156298C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AC3")]
		[Address(RVA = "0x1562990", Offset = "0x1562990", VA = "0x1562990", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AC5")]
		[Address(RVA = "0x1562AD8", Offset = "0x1562AD8", VA = "0x1562AD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UI_Manager ui_Manager;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UI_Initialize ui_Initialize;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isActive;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE62F0", Offset = "0xEE62F0")]
	private static BHapticsDivecesController <Instance>k__BackingField;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Button button;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float nextClickTime;

	[Token(Token = "0x1700005B")]
	public static BHapticsDivecesController Instance
	{
		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x1561EF0", Offset = "0x1561EF0", VA = "0x1561EF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED5F0", Offset = "0xEED5F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x1561F40", Offset = "0x1561F40", VA = "0x1561F40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED600", Offset = "0xEED600")]
		private set
		{
		}
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x1561F98", Offset = "0x1561F98", VA = "0x1561F98")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x1561FF0", Offset = "0x1561FF0", VA = "0x1561FF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x15621B8", Offset = "0x15621B8", VA = "0x15621B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEED610", Offset = "0xEED610")]
	private IEnumerator StartUI()
	{
		return null;
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x1562260", Offset = "0x1562260", VA = "0x1562260")]
	public void SetUIState()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x15622FC", Offset = "0x15622FC", VA = "0x15622FC")]
	private void SetUIState(bool state)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x1562364", Offset = "0x1562364", VA = "0x1562364")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x1562368", Offset = "0x1562368", VA = "0x1562368")]
	private void InputWidgetControl()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x1562984", Offset = "0x1562984", VA = "0x1562984")]
	public BHapticsDivecesController()
	{
	}
}
[Token(Token = "0x20000BF")]
public class CameraMoveEffect : MonoBehaviour
{
	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material m_MoveMaterial;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material mUseMoveMaterial;

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x12BBBB4", Offset = "0x12BBBB4", VA = "0x12BBBB4")]
	public void MoveEffectFadeOutIn(bool isShow, float size, float opacity)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x12BBCD4", Offset = "0x12BBCD4", VA = "0x12BBCD4")]
	public void SetAdaptRate(Vector4 vect4)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x12BBDAC", Offset = "0x12BBDAC", VA = "0x12BBDAC")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x12BBE9C", Offset = "0x12BBE9C", VA = "0x12BBE9C")]
	public CameraMoveEffect()
	{
	}
}
[Token(Token = "0x20000C0")]
public enum eCameraMoveEffectSettingType
{
	[Token(Token = "0x4000483")]
	FixPoint,
	[Token(Token = "0x4000484")]
	CamBackPointByHeightAndDis,
	[Token(Token = "0x4000485")]
	CamBackPointByAngleAndDis
}
[Token(Token = "0x20000C1")]
public class SyncTwoPointTransform
{
	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform FromTran;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform ToTran;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 Offset;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool IsStart;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool mIsSynPosition;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	private bool mIsSynRotation;

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x12CDC10", Offset = "0x12CDC10", VA = "0x12CDC10")]
	public void Start(Transform fromTrn, Transform toTrn, bool synPos, bool synRot, [Optional] Vector3 Offset)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x12CDC94", Offset = "0x12CDC94", VA = "0x12CDC94")]
	public void Restart()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x12CDCA0", Offset = "0x12CDCA0", VA = "0x12CDCA0")]
	public void Excude()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x12CDE38", Offset = "0x12CDE38", VA = "0x12CDE38")]
	public void Pause()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x12CDE40", Offset = "0x12CDE40", VA = "0x12CDE40")]
	public void Stop()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x12CDE78", Offset = "0x12CDE78", VA = "0x12CDE78")]
	public SyncTwoPointTransform()
	{
	}
}
[Token(Token = "0x20000C2")]
public class CameraMoveEffectManager : Singleton<CameraMoveEffectManager>
{
	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, TransferMovieShot> MoveDic;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TransferMovieShot CurTrnMovieShot;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CameraMoveEffect mCameraMoveEffect;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool mIsRunning;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject mTmpMoveToObj;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject mMoveToObj;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject mBackObj;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float mBeginFade;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action mStartAct;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action<float> mExcudeAct;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action mMoveToFinishAct;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action mFinishAct;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private SyncTwoPointTransform mSynTran;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool ShowFade;

	[Token(Token = "0x1700005C")]
	public bool IsRunning
	{
		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x12BD1B0", Offset = "0x12BD1B0", VA = "0x12BD1B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x12BBEA4", Offset = "0x12BBEA4", VA = "0x12BBEA4")]
	public void Init()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x12BBFF4", Offset = "0x12BBFF4", VA = "0x12BBFF4")]
	public void Move(eCameraMoveEffectSettingType type, string moveName, [Optional] Vector2 setVec, bool needAutoMoveBack = false, float waitTime = 0f)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x12BCCC4", Offset = "0x12BCCC4", VA = "0x12BCCC4")]
	public void MoveBack()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x12BCD60", Offset = "0x12BCD60", VA = "0x12BCD60")]
	public void MoveBack(Vector3 backPos, Quaternion backRot)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x12BCEF8", Offset = "0x12BCEF8", VA = "0x12BCEF8")]
	public void Stop()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x12BC44C", Offset = "0x12BC44C", VA = "0x12BC44C")]
	private void DoStop()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x12BD0F8", Offset = "0x12BD0F8", VA = "0x12BD0F8")]
	public void Update()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x12BD1B8", Offset = "0x12BD1B8", VA = "0x12BD1B8")]
	public void UnInit()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x12BD1BC", Offset = "0x12BD1BC", VA = "0x12BD1BC")]
	public void AddMSPoint(string key, TransferMovieShot point)
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x12BD2E4", Offset = "0x12BD2E4", VA = "0x12BD2E4")]
	public void DelMSPoint(TransferMovieShot point)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x12BC9C0", Offset = "0x12BC9C0", VA = "0x12BC9C0")]
	private void DoRun(GameObject affectObj, bool needMoveBack, float waitTime)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x12BD530", Offset = "0x12BD530", VA = "0x12BD530")]
	private void SetFollowPoint(GameObject affectObj)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x12BD650", Offset = "0x12BD650", VA = "0x12BD650")]
	private void DoMoveStartAction()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x12BD7B0", Offset = "0x12BD7B0", VA = "0x12BD7B0")]
	private void DoMoveExcudeAction(float r)
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x12BD888", Offset = "0x12BD888", VA = "0x12BD888")]
	private void DoMoveToFinishAction()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x12BD914", Offset = "0x12BD914", VA = "0x12BD914")]
	private void DoMoveStopAction()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x12BCF30", Offset = "0x12BCF30", VA = "0x12BCF30")]
	private void RevertStatus()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x12BD6F0", Offset = "0x12BD6F0", VA = "0x12BD6F0")]
	private void SetMoveEffectFade(bool isShow, float size, float opacity)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x12BC4F0", Offset = "0x12BC4F0", VA = "0x12BC4F0")]
	private GameObject GetMoveToObj()
	{
		return null;
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x12BD47C", Offset = "0x12BD47C", VA = "0x12BD47C")]
	private GameObject GetBackObj()
	{
		return null;
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x12BC5A4", Offset = "0x12BC5A4", VA = "0x12BC5A4")]
	private void SetCamBackPos(eCameraMoveEffectSettingType type, Vector2 setVec, GameObject target, GameObject effectObj)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x12BCE80", Offset = "0x12BCE80", VA = "0x12BCE80")]
	public bool IsVRInput()
	{
		return default(bool);
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x12BD9AC", Offset = "0x12BD9AC", VA = "0x12BD9AC")]
	public GameObject GetAffectCameraObj()
	{
		return null;
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x12BC2B8", Offset = "0x12BC2B8", VA = "0x12BC2B8")]
	public GameObject GetMoveAffectObj()
	{
		return null;
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x12BDB20", Offset = "0x12BDB20", VA = "0x12BDB20")]
	public CameraMoveEffectManager()
	{
	}
}
[Token(Token = "0x20000C3")]
public class CameraMoveTest : MonoBehaviour
{
	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string MoveName;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public eCameraMoveEffectSettingType UseType;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool NeedMoveBack;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float WaitTime;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Height;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float DisH;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Angle;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float DisA;

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x12BDBE0", Offset = "0x12BDBE0", VA = "0x12BDBE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x12BDC54", Offset = "0x12BDC54", VA = "0x12BDC54")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x12BDC58", Offset = "0x12BDC58", VA = "0x12BDC58")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x12BDC5C", Offset = "0x12BDC5C", VA = "0x12BDC5C")]
	public CameraMoveTest()
	{
	}
}
[Token(Token = "0x20000C4")]
public class TransferMovieShot : MonoBehaviour
{
	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string MovieShotName;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool UseObjRotation;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve InCurve;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve OutCurve;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve FadeCurve;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve OutFadeCurve;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject MoveToObj;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject AffectObj;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject BackObj;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool mNeedMoveBack;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float WaitTime;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Action DoStartAction;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Action<float> DoExcudeAction;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Action DoMoveToFinishAction;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Action DoStopAction;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool mIsStart;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool mIsMoveFinish;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	private bool mIsMoveBack;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion mSourceRotation;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 mSourcePosition;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float mAddDelate;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool mIsFixRotation;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float fixAngle;

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x11DBDE0", Offset = "0x11DBDE0", VA = "0x11DBDE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x11DBE64", Offset = "0x11DBE64", VA = "0x11DBE64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x11DBEE4", Offset = "0x11DBEE4", VA = "0x11DBEE4")]
	public void SetMoveObj(GameObject moveToObj, GameObject affectObj, GameObject backObj)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x11DBF34", Offset = "0x11DBF34", VA = "0x11DBF34")]
	public void SetInfo(bool needMoveBack, float waitTime)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x11DBF60", Offset = "0x11DBF60", VA = "0x11DBF60")]
	public void SetCallBack(Action startAction, Action<float> excudeAction, Action moveToFinishAction, Action stopAction)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x11DBFC4", Offset = "0x11DBFC4", VA = "0x11DBFC4")]
	private void ReSet()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x11DBFE0", Offset = "0x11DBFE0", VA = "0x11DBFE0")]
	public void DoStart(bool isImmediately = false)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x11DC1A0", Offset = "0x11DC1A0", VA = "0x11DC1A0")]
	public void Excude(float dlt)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x11DCF30", Offset = "0x11DCF30", VA = "0x11DCF30")]
	public bool MoveBack()
	{
		return default(bool);
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x11DCF7C", Offset = "0x11DCF7C", VA = "0x11DCF7C")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x11DCCEC", Offset = "0x11DCCEC", VA = "0x11DCCEC")]
	private float HoldDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x11DCD6C", Offset = "0x11DCD6C", VA = "0x11DCD6C")]
	private void SetSlerpTrn(Quaternion destinationRot, Vector3 destinationPos, float ratio)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x11DCEF4", Offset = "0x11DCEF4", VA = "0x11DCEF4")]
	private void Finish()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x11DCF80", Offset = "0x11DCF80", VA = "0x11DCF80")]
	public TransferMovieShot()
	{
	}
}
[Token(Token = "0x20000C5")]
public class CameraEffectHandling : MonoBehaviour
{
	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Tween eyeBlur;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float preBlurValue;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float curBlurValue;

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x12BAC90", Offset = "0x12BAC90", VA = "0x12BAC90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x12BAC98", Offset = "0x12BAC98", VA = "0x12BAC98")]
	public void SetEyeBlur(float value, float time = 0f)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x12BAC9C", Offset = "0x12BAC9C", VA = "0x12BAC9C")]
	public void ResetEyeBlur()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x12BACA0", Offset = "0x12BACA0", VA = "0x12BACA0")]
	public CameraEffectHandling()
	{
	}
}
[Token(Token = "0x20000C6")]
public class CameraEffectTools : Singleton<CameraEffectTools>
{
	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private CameraEffectHandling effectHandling;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private EyeliyHandling eyeHandling;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine DelayStart;

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x12BACA8", Offset = "0x12BACA8", VA = "0x12BACA8")]
	public void SetEyeBlur(float value, float time)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x12BACAC", Offset = "0x12BACAC", VA = "0x12BACAC")]
	public void StopEyeBlur()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x12BACB0", Offset = "0x12BACB0", VA = "0x12BACB0")]
	public void Init()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x12BAE10", Offset = "0x12BAE10", VA = "0x12BAE10")]
	public void AreasWarningInit()
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x12BAEE4", Offset = "0x12BAEE4", VA = "0x12BAEE4")]
	public void StartAreasWarningEyeBlur(Vector3 targetPos)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x12BAEE8", Offset = "0x12BAEE8", VA = "0x12BAEE8")]
	public void DelayStartAreasWarningEyeBlur(Vector3 targetPos, float delayTime)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x12BAE14", Offset = "0x12BAE14", VA = "0x12BAE14")]
	public void StopAreasWarningEyeBlur()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x12BAE18", Offset = "0x12BAE18", VA = "0x12BAE18")]
	public void ToEyelib(bool isFade, float time, Action endAction, float delty = 0.1f)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x12BAEEC", Offset = "0x12BAEEC", VA = "0x12BAEEC")]
	public CameraEffectTools()
	{
	}
}
[Token(Token = "0x20000C7")]
public class EyeliyHandling : MonoBehaviour
{
	[Token(Token = "0x2000537")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4960", Offset = "0xEE4960")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EyeliyHandling <>4__this;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action endAction;

		[Token(Token = "0x6002AC7")]
		[Address(RVA = "0x1235F18", Offset = "0x1235F18", VA = "0x1235F18")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6002AC8")]
		[Address(RVA = "0x1235F28", Offset = "0x1235F28", VA = "0x1235F28")]
		internal void <EyeliyFade>b__0()
		{
		}
	}

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BlinkEffect mainCameraVolume;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine cr_fade;

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x1235DFC", Offset = "0x1235DFC", VA = "0x1235DFC")]
	public void EyeliyFade(bool isFade, float delay, float time, Action endAction)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x1235F20", Offset = "0x1235F20", VA = "0x1235F20")]
	public EyeliyHandling()
	{
	}
}
[Token(Token = "0x20000C8")]
public class ReadFileManager
{
	[Token(Token = "0x6000516")]
	[Address(RVA = "0x13B2984", Offset = "0x13B2984", VA = "0x13B2984")]
	public static byte[] LoadFileFromStreamAssets(string filename)
	{
		return null;
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x13B2C4C", Offset = "0x13B2C4C", VA = "0x13B2C4C")]
	public static string[] GetFileList(string folderName)
	{
		return null;
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x13B2D60", Offset = "0x13B2D60", VA = "0x13B2D60")]
	public static bool FileExist(string folderName, string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x13B309C", Offset = "0x13B309C", VA = "0x13B309C")]
	public static void InitOBBFile()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x13B31F4", Offset = "0x13B31F4", VA = "0x13B31F4")]
	private static int GetVersionCode()
	{
		return default(int);
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x13B2F7C", Offset = "0x13B2F7C", VA = "0x13B2F7C")]
	private static bool OBBFileExists(string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x13B2B38", Offset = "0x13B2B38", VA = "0x13B2B38")]
	public static byte[] LoadFileFromOBB(string filename)
	{
		return null;
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x13B35E4", Offset = "0x13B35E4", VA = "0x13B35E4")]
	public ReadFileManager()
	{
	}
}
[Token(Token = "0x20000C9")]
public enum AssetExtension
{
	[Token(Token = "0x40004C2")]
	none,
	[Token(Token = "0x40004C3")]
	meta,
	[Token(Token = "0x40004C4")]
	prefab,
	[Token(Token = "0x40004C5")]
	asset,
	[Token(Token = "0x40004C6")]
	bytes,
	[Token(Token = "0x40004C7")]
	txt,
	[Token(Token = "0x40004C8")]
	xml,
	[Token(Token = "0x40004C9")]
	anim,
	[Token(Token = "0x40004CA")]
	controller,
	[Token(Token = "0x40004CB")]
	mat,
	[Token(Token = "0x40004CC")]
	otf,
	[Token(Token = "0x40004CD")]
	ttf,
	[Token(Token = "0x40004CE")]
	shader,
	[Token(Token = "0x40004CF")]
	fbx,
	[Token(Token = "0x40004D0")]
	unity,
	[Token(Token = "0x40004D1")]
	png,
	[Token(Token = "0x40004D2")]
	tga,
	[Token(Token = "0x40004D3")]
	jpg,
	[Token(Token = "0x40004D4")]
	jpeg,
	[Token(Token = "0x40004D5")]
	exr,
	[Token(Token = "0x40004D6")]
	ogg,
	[Token(Token = "0x40004D7")]
	mp3,
	[Token(Token = "0x40004D8")]
	wav
}
[Token(Token = "0x20000CA")]
public class AssetFileInfo
{
	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AssetsRoot;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6310", Offset = "0xEE6310")]
	private string <OriginPath>k__BackingField;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FileInfo mFileInfo;

	[Token(Token = "0x1700005D")]
	public string OriginPath
	{
		[Token(Token = "0x600051E")]
		[Address(RVA = "0x155A598", Offset = "0x155A598", VA = "0x155A598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED674", Offset = "0xEED674")]
		get
		{
			return null;
		}
		[Token(Token = "0x600051F")]
		[Address(RVA = "0x155A5A0", Offset = "0x155A5A0", VA = "0x155A5A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED684", Offset = "0xEED684")]
		private set
		{
		}
	}

	[Token(Token = "0x1700005E")]
	public bool IsDirectoryExists
	{
		[Token(Token = "0x6000520")]
		[Address(RVA = "0x155A5A8", Offset = "0x155A5A8", VA = "0x155A5A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005F")]
	public bool IsFileExists
	{
		[Token(Token = "0x6000521")]
		[Address(RVA = "0x155A5B4", Offset = "0x155A5B4", VA = "0x155A5B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000060")]
	public bool IsMeta
	{
		[Token(Token = "0x6000522")]
		[Address(RVA = "0x155A5D4", Offset = "0x155A5D4", VA = "0x155A5D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000061")]
	public bool IsResourcesAsset
	{
		[Token(Token = "0x6000523")]
		[Address(RVA = "0x155A6A8", Offset = "0x155A6A8", VA = "0x155A6A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000062")]
	public bool IsDynamicAsset
	{
		[Token(Token = "0x6000524")]
		[Address(RVA = "0x155A7E0", Offset = "0x155A7E0", VA = "0x155A7E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000063")]
	public bool IsGUIDTrash
	{
		[Token(Token = "0x6000525")]
		[Address(RVA = "0x155A89C", Offset = "0x155A89C", VA = "0x155A89C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000064")]
	public int AssetID
	{
		[Token(Token = "0x6000526")]
		[Address(RVA = "0x155A81C", Offset = "0x155A81C", VA = "0x155A81C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000065")]
	public string Extension
	{
		[Token(Token = "0x6000527")]
		[Address(RVA = "0x155A63C", Offset = "0x155A63C", VA = "0x155A63C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000066")]
	public string DotExtension
	{
		[Token(Token = "0x6000528")]
		[Address(RVA = "0x155A9BC", Offset = "0x155A9BC", VA = "0x155A9BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000067")]
	public AssetExtension AssetExtension
	{
		[Token(Token = "0x6000529")]
		[Address(RVA = "0x155A9D8", Offset = "0x155A9D8", VA = "0x155A9D8")]
		get
		{
			return default(AssetExtension);
		}
	}

	[Token(Token = "0x17000068")]
	public string FileName
	{
		[Token(Token = "0x600052A")]
		[Address(RVA = "0x155AB5C", Offset = "0x155AB5C", VA = "0x155AB5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000069")]
	public string FileNameWithoutExtension
	{
		[Token(Token = "0x600052B")]
		[Address(RVA = "0x155A8F4", Offset = "0x155A8F4", VA = "0x155A8F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006A")]
	public string Notes
	{
		[Token(Token = "0x600052C")]
		[Address(RVA = "0x155AB7C", Offset = "0x155AB7C", VA = "0x155AB7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006B")]
	public string FullDirectoryName
	{
		[Token(Token = "0x600052D")]
		[Address(RVA = "0x155A714", Offset = "0x155A714", VA = "0x155A714")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006C")]
	public string ResourceDirectory
	{
		[Token(Token = "0x600052E")]
		[Address(RVA = "0x155AC0C", Offset = "0x155AC0C", VA = "0x155AC0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006D")]
	public string ResourcePath
	{
		[Token(Token = "0x600052F")]
		[Address(RVA = "0x155AC9C", Offset = "0x155AC9C", VA = "0x155AC9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006E")]
	public string SigleBundleName
	{
		[Token(Token = "0x6000530")]
		[Address(RVA = "0x155AD48", Offset = "0x155AD48", VA = "0x155AD48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006F")]
	public string MultiBundleName
	{
		[Token(Token = "0x6000531")]
		[Address(RVA = "0x155ADF4", Offset = "0x155ADF4", VA = "0x155ADF4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x155AE98", Offset = "0x155AE98", VA = "0x155AE98")]
	public AssetFileInfo(string iPath)
	{
	}
}
[Serializable]
[Token(Token = "0x20000CB")]
public class AssetInfo
{
	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] mAssetExtensions;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string mNameWithotExtension;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int mAssetID;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string mGUID;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string mBundleName;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private string mResourceDir;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AssetExtension mExtension;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string mName;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string mProjectPath;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string mResourcePath;

	[Token(Token = "0x17000070")]
	public int AssetID
	{
		[Token(Token = "0x6000534")]
		[Address(RVA = "0x155B078", Offset = "0x155B078", VA = "0x155B078")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000071")]
	public string GUID
	{
		[Token(Token = "0x6000535")]
		[Address(RVA = "0x155B080", Offset = "0x155B080", VA = "0x155B080")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000072")]
	public string Name
	{
		[Token(Token = "0x6000536")]
		[Address(RVA = "0x155B088", Offset = "0x155B088", VA = "0x155B088")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000073")]
	public string NameWithoutExtension
	{
		[Token(Token = "0x6000537")]
		[Address(RVA = "0x155B25C", Offset = "0x155B25C", VA = "0x155B25C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000074")]
	public string Extension
	{
		[Token(Token = "0x6000538")]
		[Address(RVA = "0x155B12C", Offset = "0x155B12C", VA = "0x155B12C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000075")]
	public string BundleName
	{
		[Token(Token = "0x6000539")]
		[Address(RVA = "0x155B264", Offset = "0x155B264", VA = "0x155B264")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000076")]
	public string ProjectPath
	{
		[Token(Token = "0x600053A")]
		[Address(RVA = "0x155B26C", Offset = "0x155B26C", VA = "0x155B26C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000077")]
	public string ResourcePath
	{
		[Token(Token = "0x600053B")]
		[Address(RVA = "0x155B344", Offset = "0x155B344", VA = "0x155B344")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000078")]
	public string ResourceDir
	{
		[Token(Token = "0x600053C")]
		[Address(RVA = "0x155B3E8", Offset = "0x155B3E8", VA = "0x155B3E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x155B3F0", Offset = "0x155B3F0", VA = "0x155B3F0")]
	public AssetInfo(int iAssetID, string iGUID, string iNameWithotExtension, string iBundleName, string iResourceDir, AssetExtension iExtension = AssetExtension.none)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x155B514", Offset = "0x155B514", VA = "0x155B514", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x20000CC")]
public class AssetManager : Singleton<AssetManager>
{
	[Token(Token = "0x2000538")]
	public delegate void ObjectCallback(UnityEngine.Object obj, bool isOld);

	[Token(Token = "0x2000539")]
	public delegate bool IsObjectOldFunc();

	[Token(Token = "0x200053A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4970", Offset = "0xEE4970")]
	private sealed class <LoadWorker>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AssetManager <>4__this;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int assetID;

		[Token(Token = "0x4001F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ObjectCallback iCallBack;

		[Token(Token = "0x4001F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IsObjectOldFunc func;

		[Token(Token = "0x4001F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool IsInstantiate;

		[Token(Token = "0x4001F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ResourceRequest <request>5__2;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private long <startTicks>5__3;

		[Token(Token = "0x17000420")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AD4")]
			[Address(RVA = "0x155D524", Offset = "0x155D524", VA = "0x155D524", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000421")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AD6")]
			[Address(RVA = "0x155D58C", Offset = "0x155D58C", VA = "0x155D58C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AD1")]
		[Address(RVA = "0x155C968", Offset = "0x155C968", VA = "0x155C968")]
		[DebuggerHidden]
		public <LoadWorker>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002AD2")]
		[Address(RVA = "0x155D2B8", Offset = "0x155D2B8", VA = "0x155D2B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AD3")]
		[Address(RVA = "0x155D2BC", Offset = "0x155D2BC", VA = "0x155D2BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AD5")]
		[Address(RVA = "0x155D52C", Offset = "0x155D52C", VA = "0x155D52C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200053B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4980", Offset = "0xEE4980")]
	private sealed class <InstantiateWorker>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AssetManager <>4__this;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject obj;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<GameObject> cb;

		[Token(Token = "0x17000422")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002ADA")]
			[Address(RVA = "0x155D248", Offset = "0x155D248", VA = "0x155D248", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000423")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002ADC")]
			[Address(RVA = "0x155D2B0", Offset = "0x155D2B0", VA = "0x155D2B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AD7")]
		[Address(RVA = "0x155CAD0", Offset = "0x155CAD0", VA = "0x155CAD0")]
		[DebuggerHidden]
		public <InstantiateWorker>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002AD8")]
		[Address(RVA = "0x155D190", Offset = "0x155D190", VA = "0x155D190", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AD9")]
		[Address(RVA = "0x155D194", Offset = "0x155D194", VA = "0x155D194", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002ADB")]
		[Address(RVA = "0x155D250", Offset = "0x155D250", VA = "0x155D250", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, UnityEngine.Object> objectPool;

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x155B7A4", Offset = "0x155B7A4", VA = "0x155B7A4")]
	public void LoadLevelAsync(string iAssetName)
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x155B814", Offset = "0x155B814", VA = "0x155B814")]
	private void LoadLevelAsync(int iID)
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x155B80C", Offset = "0x155B80C", VA = "0x155B80C")]
	private int GetAssetIDWithName(string iAssetName)
	{
		return default(int);
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x155B818", Offset = "0x155B818", VA = "0x155B818")]
	private void ClearPool()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x155B870", Offset = "0x155B870", VA = "0x155B870")]
	public UnityEngine.Object GetObjectInPool(int assetID)
	{
		return null;
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x155B8F0", Offset = "0x155B8F0", VA = "0x155B8F0")]
	private void AddObjectToPool(int assetID, UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x155BA04", Offset = "0x155BA04", VA = "0x155BA04")]
	public void DoCleanWhenStateChange()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x155BA08", Offset = "0x155BA08", VA = "0x155BA08")]
	public void ClearCacheData()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x155BA10", Offset = "0x155BA10", VA = "0x155BA10")]
	public static byte[] LoadFileData(string filename, bool isPrintError = true)
	{
		return null;
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x155BA18", Offset = "0x155BA18", VA = "0x155BA18")]
	private static byte[] LoadFileDataFromResource(string filename, bool isPrintError)
	{
		return null;
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x155BBC0", Offset = "0x155BBC0", VA = "0x155BBC0")]
	public void LoadObjectSync(int iAssetID, ObjectCallback iCallBack, IsObjectOldFunc func, bool isPrintError = true)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x155C668", Offset = "0x155C668", VA = "0x155C668")]
	public UnityEngine.Object LoadObject(int iAssetID, bool isPrintError = true)
	{
		return null;
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x155C584", Offset = "0x155C584", VA = "0x155C584")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEED694", Offset = "0xEED694")]
	private IEnumerator LoadWorker(int assetID, string path, ObjectCallback iCallBack, IsObjectOldFunc func, bool IsInstantiate)
	{
		return null;
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x1557544", Offset = "0x1557544", VA = "0x1557544")]
	public void DestroyGameObject(GameObject gameObject)
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x155C994", Offset = "0x155C994", VA = "0x155C994")]
	public void InstantiateGameObjectAsync(GameObject obj, Action<GameObject> cb)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x155CA24", Offset = "0x155CA24", VA = "0x155CA24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEED6F8", Offset = "0xEED6F8")]
	private IEnumerator InstantiateWorker(GameObject obj, Action<GameObject> cb)
	{
		return null;
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x155CAFC", Offset = "0x155CAFC", VA = "0x155CAFC")]
	public GameObject InstantiateGameObject(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x155CC9C", Offset = "0x155CC9C", VA = "0x155CC9C")]
	public GameObject InstantiateGameObject(GameObject obj, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x155CE94", Offset = "0x155CE94", VA = "0x155CE94")]
	public int GetAssetIDByObject(UnityEngine.Object obj)
	{
		return default(int);
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x155D0EC", Offset = "0x155D0EC", VA = "0x155D0EC")]
	public AssetManager()
	{
	}
}
[Token(Token = "0x20000CD")]
public enum AssetPrefix
{
	[Token(Token = "0x40004E8")]
	Hero = 11,
	[Token(Token = "0x40004E9")]
	Monster = 12,
	[Token(Token = "0x40004EA")]
	SceneObject = 21,
	[Token(Token = "0x40004EB")]
	BossMap = 22,
	[Token(Token = "0x40004EC")]
	NormalMap = 23,
	[Token(Token = "0x40004ED")]
	TownMap = 24,
	[Token(Token = "0x40004EE")]
	Font = 31,
	[Token(Token = "0x40004EF")]
	SpriteAltas = 32,
	[Token(Token = "0x40004F0")]
	UserInterface = 33,
	[Token(Token = "0x40004F1")]
	Icon = 41,
	[Token(Token = "0x40004F2")]
	VisualEffectUI = 51,
	[Token(Token = "0x40004F3")]
	VisualEffectBattle = 52,
	[Token(Token = "0x40004F4")]
	BackgroundMusic = 61,
	[Token(Token = "0x40004F5")]
	Voice = 62,
	[Token(Token = "0x40004F6")]
	SoundEffectGeneral = 63,
	[Token(Token = "0x40004F7")]
	SoundEffectUI = 64,
	[Token(Token = "0x40004F8")]
	SoundEffectBattle = 65
}
[Token(Token = "0x20000CE")]
public class AssetTable : Singleton<AssetTable>
{
	[Token(Token = "0x40004F9")]
	private const string RESOURCE_PATH = "Assets/Resources/";

	[Token(Token = "0x40004FA")]
	private const string RESOURCE_ASSETS_PATH = "Assets/Resources/Assets/";

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool mIsRebuilding;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<IAssetTableProvider> mReadonlyProviders;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<IAssetTableProvider> mProviders;

	[Token(Token = "0x17000079")]
	public static bool HasAnyProvider
	{
		[Token(Token = "0x6000553")]
		[Address(RVA = "0x155D6C0", Offset = "0x155D6C0", VA = "0x155D6C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x155D788", Offset = "0x155D788", VA = "0x155D788")]
	public static void RegisterReadonlyProvider(IAssetTableProvider iProvider)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x155D8E0", Offset = "0x155D8E0", VA = "0x155D8E0")]
	public static void RegisterProvider(IAssetTableProvider iProvider)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x155DA38", Offset = "0x155DA38", VA = "0x155DA38")]
	public static void UnregisterProvider(IAssetTableProvider iProvider)
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x155DBC0", Offset = "0x155DBC0", VA = "0x155DBC0")]
	public static bool IsRegisterProvider(IAssetTableProvider iProvider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x155C508", Offset = "0x155C508", VA = "0x155C508")]
	public static AssetInfo AssetInfoByAssetID(int iAssetID)
	{
		return null;
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x155DE60", Offset = "0x155DE60", VA = "0x155DE60")]
	public static void Reload()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x155D804", Offset = "0x155D804", VA = "0x155D804")]
	private void InternalRegisterReadonlyProvider(IAssetTableProvider iProvider)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x155D95C", Offset = "0x155D95C", VA = "0x155D95C")]
	private void InternalRegisterProvider(IAssetTableProvider iProvider)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x155DAB4", Offset = "0x155DAB4", VA = "0x155DAB4")]
	private void InternalUnregisterProvider(IAssetTableProvider iProvider)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x155DC3C", Offset = "0x155DC3C", VA = "0x155DC3C")]
	private bool InternalIsRegisterProvider(IAssetTableProvider iProvider)
	{
		return default(bool);
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x155DCA4", Offset = "0x155DCA4", VA = "0x155DCA4")]
	private AssetInfo InternalAssetInfoByAssetID(int iAssetID)
	{
		return null;
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x155DED4", Offset = "0x155DED4", VA = "0x155DED4")]
	private void InternalReload()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x155E08C", Offset = "0x155E08C", VA = "0x155E08C")]
	public AssetTable()
	{
	}
}
[Token(Token = "0x20000CF")]
public class AssetTableModify
{
	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6380", Offset = "0xEE6380")]
	private AssetTableModifyType <ModifyType>k__BackingField;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6390", Offset = "0xEE6390")]
	private string <PathA>k__BackingField;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE63A0", Offset = "0xEE63A0")]
	private string <PathB>k__BackingField;

	[Token(Token = "0x1700007A")]
	public AssetTableModifyType ModifyType
	{
		[Token(Token = "0x6000562")]
		[Address(RVA = "0x155E16C", Offset = "0x155E16C", VA = "0x155E16C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED75C", Offset = "0xEED75C")]
		get
		{
			return default(AssetTableModifyType);
		}
		[Token(Token = "0x6000563")]
		[Address(RVA = "0x155E174", Offset = "0x155E174", VA = "0x155E174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED76C", Offset = "0xEED76C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public string PathA
	{
		[Token(Token = "0x6000564")]
		[Address(RVA = "0x155E17C", Offset = "0x155E17C", VA = "0x155E17C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED77C", Offset = "0xEED77C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000565")]
		[Address(RVA = "0x155E184", Offset = "0x155E184", VA = "0x155E184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED78C", Offset = "0xEED78C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public string PathB
	{
		[Token(Token = "0x6000566")]
		[Address(RVA = "0x155E18C", Offset = "0x155E18C", VA = "0x155E18C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED79C", Offset = "0xEED79C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000567")]
		[Address(RVA = "0x155E194", Offset = "0x155E194", VA = "0x155E194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED7AC", Offset = "0xEED7AC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x155E19C", Offset = "0x155E19C", VA = "0x155E19C")]
	public AssetTableModify(AssetTableModifyType iModifyType, string iPathA, string iPathB)
	{
	}
}
[Token(Token = "0x20000D0")]
public enum AssetTableModifyType
{
	[Token(Token = "0x4000502")]
	Import,
	[Token(Token = "0x4000503")]
	Delete,
	[Token(Token = "0x4000504")]
	Update
}
[Token(Token = "0x20000D1")]
public class AssetTableXMLProvider : IAssetTableProvider
{
	[Token(Token = "0x200053C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4990", Offset = "0xEE4990")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int iAssetID;

		[Token(Token = "0x6002ADD")]
		[Address(RVA = "0x155EC10", Offset = "0x155EC10", VA = "0x155EC10")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6002ADE")]
		[Address(RVA = "0x155EFC8", Offset = "0x155EFC8", VA = "0x155EFC8")]
		internal bool <AssetInfoByAssetID>b__0(XMLNode item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000505")]
	private const string ASSET_TABLE_RES_PATH = "General/AssetTable.xml";

	[Token(Token = "0x4000506")]
	private const string TAG_ASSET_TABLE = "AssetTable";

	[Token(Token = "0x4000507")]
	private const string TAG_ASSET_INFO = "AssetInfo";

	[Token(Token = "0x4000508")]
	private const string TAG_ASSET_ID = "AID";

	[Token(Token = "0x4000509")]
	private const string TAG_NAME_WITHOUT_EXT = "NWE";

	[Token(Token = "0x400050A")]
	private const string TAG_GUID = "GID";

	[Token(Token = "0x400050B")]
	private const string TAG_BUNDLE_NAME = "BDN";

	[Token(Token = "0x400050C")]
	private const string TAG_RESOURCE_PATH = "RPA";

	[Token(Token = "0x400050D")]
	private const string TAG_EXTENSION = "EXT";

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE63B0", Offset = "0xEE63B0")]
	private static AssetTableXMLProvider <Instance>k__BackingField;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string mResourcePath;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private XMLNode[] mAssetInfos;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, AssetInfo> mAssetTableCache;

	[Token(Token = "0x1700007D")]
	public static AssetTableXMLProvider Instance
	{
		[Token(Token = "0x6000569")]
		[Address(RVA = "0x155E1F4", Offset = "0x155E1F4", VA = "0x155E1F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED7BC", Offset = "0xEED7BC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600056A")]
		[Address(RVA = "0x155E244", Offset = "0x155E244", VA = "0x155E244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED7CC", Offset = "0xEED7CC")]
		private set
		{
		}
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x155E29C", Offset = "0x155E29C", VA = "0x155E29C")]
	public static void Init()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x155E3CC", Offset = "0x155E3CC", VA = "0x155E3CC")]
	public AssetTableXMLProvider(string iResourcePath)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x155E848", Offset = "0x155E848", VA = "0x155E848", Slot = "4")]
	public AssetInfo AssetInfoByAssetID(int iAssetID)
	{
		return null;
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x155EC18", Offset = "0x155EC18", VA = "0x155EC18", Slot = "5")]
	public int CountOfAssetInfo()
	{
		return default(int);
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x155EC68", Offset = "0x155EC68", VA = "0x155EC68")]
	public AssetInfo[] AssetInfosByAssetIDRange(int iMinAssetID, int iMaxAssetID)
	{
		return null;
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x155ECD4", Offset = "0x155ECD4", VA = "0x155ECD4")]
	public AssetInfo[] AssetInfosByKeywords(string iKeyword)
	{
		return null;
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x155ED40", Offset = "0x155ED40", VA = "0x155ED40")]
	public bool AddAssetInfo(AssetInfo iAssetInfo, bool iRebuilding = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x155EDAC", Offset = "0x155EDAC", VA = "0x155EDAC")]
	public void UpdateAssetInfo(AssetInfo iNewAssetInfo, AssetInfo iOriginAssetInfo)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x155EE18", Offset = "0x155EE18", VA = "0x155EE18")]
	public void DeleteAssetInfo(AssetInfo iAssetInfo)
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x155EE84", Offset = "0x155EE84", VA = "0x155EE84")]
	public void ClearAll()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x155EEF0", Offset = "0x155EEF0", VA = "0x155EEF0")]
	public void DelaySave(int iCount = 1)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x155EF5C", Offset = "0x155EF5C", VA = "0x155EF5C")]
	public void Save()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x155E46C", Offset = "0x155E46C", VA = "0x155E46C", Slot = "6")]
	public void Reload()
	{
	}
}
[Token(Token = "0x20000D2")]
public class Despawn : MonoBehaviour
{
	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DespawnDelay;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timer;

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x12279EC", Offset = "0x12279EC", VA = "0x12279EC")]
	public void DespawnInit2(float _delay)
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x1227A04", Offset = "0x1227A04", VA = "0x1227A04")]
	public void DespawnInit()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x1227A0C", Offset = "0x1227A0C", VA = "0x1227A0C")]
	public void Init()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x12279F8", Offset = "0x12279F8", VA = "0x12279F8")]
	public void Init(float _delay)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x1227A14", Offset = "0x1227A14", VA = "0x1227A14")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x1227AE0", Offset = "0x1227AE0", VA = "0x1227AE0")]
	public Despawn()
	{
	}
}
[Token(Token = "0x20000D3")]
public interface IAssetTableProvider
{
	[Token(Token = "0x600057E")]
	AssetInfo AssetInfoByAssetID(int iAssetID);

	[Token(Token = "0x600057F")]
	int CountOfAssetInfo();

	[Token(Token = "0x6000580")]
	void Reload();
}
[Token(Token = "0x20000D4")]
public class AttributeHelper : Singleton<AttributeHelper>
{
	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly UnOrderMultiMap<Type, Type> types;

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x155F08C", Offset = "0x155F08C", VA = "0x155F08C")]
	public AttributeHelper()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x155F29C", Offset = "0x155F29C", VA = "0x155F29C")]
	public List<Type> GetTypes(Type systemAttributeType)
	{
		return null;
	}
}
[Token(Token = "0x20000D5")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE090C", Offset = "0xEE090C")]
public class BaseAttribute : Attribute
{
	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE63C0", Offset = "0xEE63C0")]
	private readonly Type <AttributeType>k__BackingField;

	[Token(Token = "0x1700007E")]
	public Type AttributeType
	{
		[Token(Token = "0x6000583")]
		[Address(RVA = "0x1562B40", Offset = "0x1562B40", VA = "0x1562B40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED7DC", Offset = "0xEED7DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x1562B48", Offset = "0x1562B48", VA = "0x1562B48")]
	public BaseAttribute()
	{
	}
}
[Token(Token = "0x20000D6")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEE0944", Offset = "0xEE0944")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkGameObj : MonoBehaviour
{
	[Token(Token = "0x200053D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE49A0", Offset = "0xEE49A0")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action callback;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AkGameObj <>4__this;

		[Token(Token = "0x6002ADF")]
		[Address(RVA = "0x1F7F6F0", Offset = "0x1F7F6F0", VA = "0x1F7F6F0")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6002AE0")]
		[Address(RVA = "0x1F80DA8", Offset = "0x1F80DA8", VA = "0x1F80DA8")]
		internal void <PostEvent>b__0(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
		{
		}
	}

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int eventPlayingNum;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool hasSetttingValue;

	[Token(Token = "0x4000518")]
	private const float destroyDelay = 2f;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timer;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isCamera;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AkCallbackManager.EventCallback akCallBack;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AkGameObjListenerList m_listeners;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isEnvironmentAware;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	private bool isStaticObject;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider m_Collider;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AkGameObjEnvironmentData m_envData;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AkGameObjPositionData m_posData;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AkGameObjPositionOffsetData m_positionOffsetData;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isRegistered;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	[SerializeField]
	private AkGameObjPosOffsetData m_posOffsetData;

	[Token(Token = "0x4000525")]
	private const int AK_NUM_LISTENERS = 8;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	[SerializeField]
	private int listenerMask;

	[Token(Token = "0x1700007F")]
	public bool IsUsingDefaultListeners
	{
		[Token(Token = "0x6000597")]
		[Address(RVA = "0x1F7FC04", Offset = "0x1F7FC04", VA = "0x1F7FC04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000080")]
	public List<AkAudioListener> ListenerList
	{
		[Token(Token = "0x6000598")]
		[Address(RVA = "0x1F7FC20", Offset = "0x1F7FC20", VA = "0x1F7FC20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x1F7F3C4", Offset = "0x1F7F3C4", VA = "0x1F7F3C4")]
	private void PlayEndAction()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x1F7F3D4", Offset = "0x1F7F3D4", VA = "0x1F7F3D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x1F7F480", Offset = "0x1F7F480", VA = "0x1F7F480")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x1F7F484", Offset = "0x1F7F484", VA = "0x1F7F484")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x1F7F490", Offset = "0x1F7F490", VA = "0x1F7F490")]
	public void PostEvent(string eventName)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x1F7F534", Offset = "0x1F7F534", VA = "0x1F7F534")]
	public void PostEvent(string eventName, AkCallbackManager.EventCallback callback, [Optional] object cookie)
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x1F7F5FC", Offset = "0x1F7F5FC", VA = "0x1F7F5FC")]
	public void PostEvent(string eventName, Action callback)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x1F7F6F8", Offset = "0x1F7F6F8", VA = "0x1F7F6F8")]
	public void Stop(string eventName, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1F7F7B4", Offset = "0x1F7F7B4", VA = "0x1F7F7B4")]
	public void Pause(string eventName, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x1F7F7C4", Offset = "0x1F7F7C4", VA = "0x1F7F7C4")]
	public void Resume(string eventName, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x1F7F708", Offset = "0x1F7F708", VA = "0x1F7F708")]
	public void ExecuteAction(string eventName, AkActionOnEventType actionOnEventType, int transitionDuration, AkCurveInterpolation curveInterpolation)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x1F7F7D8", Offset = "0x1F7F7D8", VA = "0x1F7F7D8")]
	public void SetSwitch(string switchGroup, string switchState)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x1F7F874", Offset = "0x1F7F874", VA = "0x1F7F874")]
	public void SetRTPCValue(string name, float value)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1F7F918", Offset = "0x1F7F918", VA = "0x1F7F918")]
	public void SetVolume(float volume)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1F7F9B0", Offset = "0x1F7F9B0", VA = "0x1F7F9B0")]
	public void StopAll()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x1F7F5EC", Offset = "0x1F7F5EC", VA = "0x1F7F5EC")]
	private void VerifyPlayingID(string eventName, uint playingId)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1F7F7D4", Offset = "0x1F7F7D4", VA = "0x1F7F7D4")]
	protected void Verify(AKRESULT result)
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x1F7FA2C", Offset = "0x1F7FA2C", VA = "0x1F7FA2C")]
	public void ResetDefaultListeners()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x1F7FBE4", Offset = "0x1F7FBE4", VA = "0x1F7FBE4")]
	internal void AddListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x1F7FC3C", Offset = "0x1F7FC3C", VA = "0x1F7FC3C")]
	internal void RemoveListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x1F7FC5C", Offset = "0x1F7FC5C", VA = "0x1F7FC5C")]
	public AKRESULT Register()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x1F7FD1C", Offset = "0x1F7FD1C", VA = "0x1F7FD1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x1F80490", Offset = "0x1F80490", VA = "0x1F80490")]
	private void CheckStaticStatus()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x1F80494", Offset = "0x1F80494", VA = "0x1F80494")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x1F804A8", Offset = "0x1F804A8", VA = "0x1F804A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x1F80608", Offset = "0x1F80608", VA = "0x1F80608")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x1F80888", Offset = "0x1F80888", VA = "0x1F80888", Slot = "4")]
	public virtual Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x1F809F8", Offset = "0x1F809F8", VA = "0x1F809F8", Slot = "5")]
	public virtual Vector3 GetForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x1F80A1C", Offset = "0x1F80A1C", VA = "0x1F80A1C", Slot = "6")]
	public virtual Vector3 GetUpward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x1F80A40", Offset = "0x1F80A40", VA = "0x1F80A40")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x1F80A58", Offset = "0x1F80A58", VA = "0x1F80A58")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x1F80C98", Offset = "0x1F80C98", VA = "0x1F80C98")]
	public AkGameObj()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x1F80D98", Offset = "0x1F80D98", VA = "0x1F80D98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED7EC", Offset = "0xEED7EC")]
	private void <PostEvent>b__10_0(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}
}
[Token(Token = "0x20000D7")]
internal class AudioManager : Singleton<AudioManager>
{
	[Token(Token = "0x4000527")]
	private const int commonAudioSourceAssetId = 64000001;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isEnable;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool wwiseInit;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HashSet<IAudioDefine> defineList;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, IAudioDefine> wwiseDefineList;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, string> wwiseRTPCDictionary;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dictionary<int, string> audioEventNameDic;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, string> e_SwitchGroupEventDic;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<int, string> e_SwitchEventDic;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<int, string> e_StateGroupEventDic;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<int, string> e_StateEventDic;

	[Token(Token = "0x17000081")]
	public bool IsEnable
	{
		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x155F358", Offset = "0x155F358", VA = "0x155F358")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0x155F360", Offset = "0x155F360", VA = "0x155F360")]
		set
		{
		}
	}

	[Token(Token = "0x17000082")]
	public bool WwiseInit
	{
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x155F6E8", Offset = "0x155F6E8", VA = "0x155F6E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x155F6F0", Offset = "0x155F6F0", VA = "0x155F6F0")]
		set
		{
		}
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x1557FF8", Offset = "0x1557FF8", VA = "0x1557FF8")]
	public WwiseDefine Play(AudioEvent audioEvent, GameObject wwiseObject, Action action, bool needDestroy, SwitchInfoData switchInfoData, bool isUseObstruction)
	{
		return null;
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x155FA20", Offset = "0x155FA20", VA = "0x155FA20")]
	public WwiseDefine Play(AudioEvent audioEvent, Vector3 pos, Quaternion rot, Action action, bool needDestroy, SwitchInfoData switchInfoData, bool isUseObstruction)
	{
		return null;
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x1560098", Offset = "0x1560098", VA = "0x1560098")]
	public void Stop(WwiseDefine wwiseObject, bool isDestoryObj = true)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x1560194", Offset = "0x1560194", VA = "0x1560194")]
	public void Pause(AudioEvent audioEvent, GameObject wwiseObject)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x15602E4", Offset = "0x15602E4", VA = "0x15602E4")]
	public void Resume(AudioEvent audioEvent, GameObject wwiseObject)
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x1560434", Offset = "0x1560434", VA = "0x1560434")]
	public void PauseAll()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x15605A0", Offset = "0x15605A0", VA = "0x15605A0")]
	public void ResumeAll()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x155F524", Offset = "0x155F524", VA = "0x155F524")]
	public void StopAll()
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x155F6FC", Offset = "0x155F6FC", VA = "0x155F6FC")]
	private WwiseDefine SetWwiseDefine(AudioEvent audioEvent, SwitchInfoData switchInfoData, GameObject eventRoot, Action action, bool needDestroy, bool isUseObstruction)
	{
		return null;
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x156070C", Offset = "0x156070C", VA = "0x156070C")]
	public void SetRTPCValue(RTPCEvent rTPCEvent, float value)
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x156088C", Offset = "0x156088C", VA = "0x156088C")]
	public void SetRTPCValue(RTPCEvent rTPCEvent, float value, WwiseDefine wwiseDefine)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x1560A98", Offset = "0x1560A98", VA = "0x1560A98")]
	public float GetRTPCValue(RTPCEvent rTPCEvent, GameObject obj)
	{
		return default(float);
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x1560C30", Offset = "0x1560C30", VA = "0x1560C30")]
	public void SetSwitch(e_SwitchGroupEvent switchGroupEvent, e_SwitchEvent switchEvent, WwiseDefine wwiseDefine)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x1560F14", Offset = "0x1560F14", VA = "0x1560F14")]
	public void SetState(e_StateGroupEvent stateGroupEvent, e_StateEvent stateEvent)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x1561168", Offset = "0x1561168", VA = "0x1561168")]
	public void SendToHWServer(int assetid, Vector3 pos, float volume)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x156116C", Offset = "0x156116C", VA = "0x156116C")]
	public void AddAudioDefine(IAudioDefine define)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x1561204", Offset = "0x1561204", VA = "0x1561204")]
	public void RemoveAudioDefine(IAudioDefine define)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x155F3B4", Offset = "0x155F3B4", VA = "0x155F3B4")]
	public void SetAllAudioDefine(bool isEnable)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x156129C", Offset = "0x156129C", VA = "0x156129C")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x20000D8")]
public interface IAudioDefine
{
	[Token(Token = "0x60005BF")]
	void Init(params object[] args);

	[Token(Token = "0x60005C0")]
	void Play();

	[Token(Token = "0x60005C1")]
	void Stop();

	[Token(Token = "0x60005C2")]
	void Pause();

	[Token(Token = "0x60005C3")]
	void Resume();

	[Token(Token = "0x60005C4")]
	void SetEnable(bool isEnable);
}
[Token(Token = "0x20000D9")]
public struct AudioStruct
{
	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject wwiseRoot;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public AudioEvent audioEvent;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int priority;

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x100BD64", Offset = "0x100BD64", VA = "0x100BD64")]
	public AudioStruct(GameObject _wwiseRoot, AudioEvent _audioEvent, int _priority)
	{
	}
}
[Serializable]
[Token(Token = "0x20000DA")]
public class SwitchInfoData
{
	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public e_SwitchGroupEvent groupType;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public e_SwitchEvent switchType;

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x12CD734", Offset = "0x12CD734", VA = "0x12CD734")]
	public SwitchInfoData()
	{
	}
}
[Serializable]
[Token(Token = "0x20000DB")]
public class StateInfoData
{
	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public e_StateGroupEvent groupType;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public e_StateEvent stateType;

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x12C5F64", Offset = "0x12C5F64", VA = "0x12C5F64")]
	public StateInfoData()
	{
	}
}
[Token(Token = "0x20000DC")]
public enum AudioEvent
{
	[Token(Token = "0x400053A")]
	Unknown = 0,
	[Token(Token = "0x400053B")]
	AMB_Switch = 1000,
	[Token(Token = "0x400053C")]
	AMB_Stop = 1001,
	[Token(Token = "0x400053D")]
	AMB_Electric = 1002,
	[Token(Token = "0x400053E")]
	AMB_Rain_Effect = 1003,
	[Token(Token = "0x400053F")]
	Bullet_Hit_Material_Switch = 2000,
	[Token(Token = "0x4000540")]
	Gun_Shoot_Switch = 3000,
	[Token(Token = "0x4000541")]
	Gun_Reload_Switch = 3001,
	[Token(Token = "0x4000542")]
	Gun_No_Bullet_Switch = 3002,
	[Token(Token = "0x4000543")]
	Gun_Shoot_Switch_Enemy = 3003,
	[Token(Token = "0x4000544")]
	Gun_Reload_Switch_Enemy = 3004,
	[Token(Token = "0x4000545")]
	Gun_No_Bullet_Switch_Enemy = 3005,
	[Token(Token = "0x4000546")]
	Bullet_Drop_Switch = 3006,
	[Token(Token = "0x4000547")]
	UI_Gun_Transition = 3007,
	[Token(Token = "0x4000548")]
	UI_Gun_Pick = 3008,
	[Token(Token = "0x4000549")]
	Footstep_Major = 5000,
	[Token(Token = "0x400054A")]
	UI_Level_Up = 5001,
	[Token(Token = "0x400054B")]
	Player_Die_Female = 5003,
	[Token(Token = "0x400054C")]
	Player_Die_Male = 5004,
	[Token(Token = "0x400054D")]
	BGM_Battle = 6000,
	[Token(Token = "0x400054E")]
	BGM_Win = 6001,
	[Token(Token = "0x400054F")]
	BGM_Level1 = 6101,
	[Token(Token = "0x4000550")]
	BGM_Level2 = 6102,
	[Token(Token = "0x4000551")]
	BGM_Level3 = 6103,
	[Token(Token = "0x4000552")]
	BGM_Level4 = 6104,
	[Token(Token = "0x4000553")]
	BGM_Level5 = 6105,
	[Token(Token = "0x4000554")]
	BGM_Level6 = 6106,
	[Token(Token = "0x4000555")]
	BGM_Level7 = 6107,
	[Token(Token = "0x4000556")]
	BGM_Level8 = 6108,
	[Token(Token = "0x4000557")]
	BGM_Level9 = 6109,
	[Token(Token = "0x4000558")]
	BGM_Boss = 6150,
	[Token(Token = "0x4000559")]
	BGM_Count = 6151,
	[Token(Token = "0x400055A")]
	Voice_Over_01 = 7000,
	[Token(Token = "0x400055B")]
	Voice_Over_02 = 7001,
	[Token(Token = "0x400055C")]
	Voice_Over_04 = 7002,
	[Token(Token = "0x400055D")]
	Voice_Over_05 = 7003,
	[Token(Token = "0x400055E")]
	Voice_Over_03 = 7004,
	[Token(Token = "0x400055F")]
	Voice_Mission_Success = 7005,
	[Token(Token = "0x4000560")]
	Voice_Mission_Failure = 7006,
	[Token(Token = "0x4000561")]
	Voice_Ten_Minutes_Left = 7007,
	[Token(Token = "0x4000562")]
	Voice_Five_Minutes_Left = 7008,
	[Token(Token = "0x4000563")]
	Voice_One_Minutes_Left = 7009,
	[Token(Token = "0x4000564")]
	Voice_Next_Level = 7010,
	[Token(Token = "0x4000565")]
	Voice_Count_Ten_Secends = 7011,
	[Token(Token = "0x4000566")]
	Voice_Remind_Move = 7012,
	[Token(Token = "0x4000567")]
	Voice_Remind_Choose = 7013,
	[Token(Token = "0x4000568")]
	Voice_Remind_Wait = 7014,
	[Token(Token = "0x4000569")]
	Voice_Remind_Captain = 7015,
	[Token(Token = "0x400056A")]
	Voice_Failure = 7016,
	[Token(Token = "0x400056B")]
	Voice_Succeed = 7017,
	[Token(Token = "0x400056C")]
	Voice_Over_Start = 7018,
	[Token(Token = "0x400056D")]
	UI_Circle = 7500,
	[Token(Token = "0x400056E")]
	UI_Open_Door = 7501,
	[Token(Token = "0x400056F")]
	UI_Wood_Break = 7502,
	[Token(Token = "0x4000570")]
	UI_Heal = 7503,
	[Token(Token = "0x4000571")]
	UI_Lift_Arrive = 7504,
	[Token(Token = "0x4000572")]
	UI_Lift_Open = 7505,
	[Token(Token = "0x4000573")]
	UI_Lift_Close = 7506,
	[Token(Token = "0x4000574")]
	UI_Lift_Moving = 7507,
	[Token(Token = "0x4000575")]
	UI_Cable_Car_Close = 7508,
	[Token(Token = "0x4000576")]
	UI_Cable_Car_Down = 7509,
	[Token(Token = "0x4000577")]
	UI_Cable_Car_Move_Loop = 7510,
	[Token(Token = "0x4000578")]
	UI_Cable_Car_Open = 7511,
	[Token(Token = "0x4000579")]
	UI_Lift_Down = 7512,
	[Token(Token = "0x400057A")]
	UI_Transfer = 7513,
	[Token(Token = "0x400057B")]
	Monster_Voice = 7700,
	[Token(Token = "0x400057C")]
	Monster_Ac_Pullout = 7701,
	[Token(Token = "0x400057D")]
	Monster_Ac_Pullbow = 7702,
	[Token(Token = "0x400057E")]
	Monster_Ac_Spell = 7703,
	[Token(Token = "0x400057F")]
	Monster_Ac_Fire = 7704,
	[Token(Token = "0x4000580")]
	Monster_Ac_Fire_Stop = 7705,
	[Token(Token = "0x4000581")]
	Monster_Ac_Hit = 7706,
	[Token(Token = "0x4000582")]
	Monster_Ac_Die_Vo = 7727,
	[Token(Token = "0x4000583")]
	Monster_Skeleton_Throw = 7708,
	[Token(Token = "0x4000584")]
	Monster_Skeleton_Grenade_Drop = 7709,
	[Token(Token = "0x4000585")]
	Monster_Skeleton_Grenade_Boom = 7710,
	[Token(Token = "0x4000586")]
	Monster_Skeleton_Die_Vo = 7728,
	[Token(Token = "0x4000587")]
	Monster_Staff_Charge = 7707,
	[Token(Token = "0x4000588")]
	Monster_Staff_Spell = 7711,
	[Token(Token = "0x4000589")]
	Monster_Staff_Hit = 7712,
	[Token(Token = "0x400058A")]
	Monster_Big_Appear = 7713,
	[Token(Token = "0x400058B")]
	Monster_Staff_Die_Vo = 7729,
	[Token(Token = "0x400058C")]
	Monster_Robot_Charge = 7714,
	[Token(Token = "0x400058D")]
	Monster_Robot_Spell = 7715,
	[Token(Token = "0x400058E")]
	Monster_Robot_Footstep = 7716,
	[Token(Token = "0x400058F")]
	Monster_Robot_Die_Vo = 7732,
	[Token(Token = "0x4000590")]
	Monster_Ghostclear_Spell = 7717,
	[Token(Token = "0x4000591")]
	Monster_Ghostclear_Hit = 7718,
	[Token(Token = "0x4000592")]
	Monster_Ghostclear_Disappear = 7719,
	[Token(Token = "0x4000593")]
	Monster_Ghostclear_Appear = 7720,
	[Token(Token = "0x4000594")]
	Monster_Ghostclear_Charge = 7726,
	[Token(Token = "0x4000595")]
	Monster_Ghostclear_Die_Vo = 7730,
	[Token(Token = "0x4000596")]
	Monster_Ghostblack_Spell = 7721,
	[Token(Token = "0x4000597")]
	Monster_Ghostblack_Hit = 7722,
	[Token(Token = "0x4000598")]
	Monster_Ghostblack_Appear = 7724,
	[Token(Token = "0x4000599")]
	Monster_Ghostblack_Charge = 7725,
	[Token(Token = "0x400059A")]
	Monster_Ghostblack_Die_Vo = 7731,
	[Token(Token = "0x400059B")]
	Monster_Body_fall = 7733,
	[Token(Token = "0x400059C")]
	AMB_Stab = 9000,
	[Token(Token = "0x400059D")]
	Laser = 8000,
	[Token(Token = "0x400059E")]
	Ms_Boss_C4_CS = 10501,
	[Token(Token = "0x400059F")]
	Ms_Boss_C4_Throw = 10502,
	[Token(Token = "0x40005A0")]
	Ms_Boss_C4_Vo = 10503,
	[Token(Token = "0x40005A1")]
	Ms_Boss_Footstep = 10504,
	[Token(Token = "0x40005A2")]
	Ms_Boss_Die_CS_1 = 10505,
	[Token(Token = "0x40005A3")]
	Ms_Boss_Die_Vo = 10506,
	[Token(Token = "0x40005A4")]
	Ms_Boss_Die_CS_2 = 10507,
	[Token(Token = "0x40005A5")]
	Ms_Boss_Gatlin01_CS = 10508,
	[Token(Token = "0x40005A6")]
	Ms_Boss_Gatlin01_Charge_Vo = 10509,
	[Token(Token = "0x40005A7")]
	Ms_Boss_Gatlin03_CS = 10510,
	[Token(Token = "0x40005A8")]
	Ms_Boss_Idle_Vo = 10511,
	[Token(Token = "0x40005A9")]
	Ms_Boss_Jingjue_CS = 10512,
	[Token(Token = "0x40005AA")]
	Ms_Boss_Jingjue_Vo = 10513,
	[Token(Token = "0x40005AB")]
	Ms_Boss_Shouji01_CS = 10514,
	[Token(Token = "0x40005AC")]
	Ms_Boss_Shouji01_Vo = 10515,
	[Token(Token = "0x40005AD")]
	Ms_Boss_Shouji02_CS = 10516,
	[Token(Token = "0x40005AE")]
	Ms_Boss_Shouji02_Vo = 10517,
	[Token(Token = "0x40005AF")]
	Monster_Boss_Charge = 10520,
	[Token(Token = "0x40005B0")]
	Monster_Boss_Spell = 10521,
	[Token(Token = "0x40005B1")]
	Monster_Boss_Purple_Ball_Loop = 10522,
	[Token(Token = "0x40005B2")]
	Monster_Boss_Purple_Ball_Hit = 10523,
	[Token(Token = "0x40005B3")]
	Monster_Boss_Laser_Loop = 10524,
	[Token(Token = "0x40005B4")]
	Monster_Boss_Laser_Stop = 10525,
	[Token(Token = "0x40005B5")]
	Monster_Boss_Summon = 10526,
	[Token(Token = "0x40005B6")]
	Monster_Boss_Disappear = 10527,
	[Token(Token = "0x40005B7")]
	Monster_Boss_Die_Vo = 10528,
	[Token(Token = "0x40005B8")]
	Monster_Boss_Appear = 10529,
	[Token(Token = "0x40005B9")]
	Monster_Boss_Fly = 10530,
	[Token(Token = "0x40005BA")]
	Monster_Boss_Enter = 10531,
	[Token(Token = "0x40005BB")]
	Gun_Gatlin_Single_Shoot = 10601,
	[Token(Token = "0x40005BC")]
	Gun_Gatlin_Blend = 10602,
	[Token(Token = "0x40005BD")]
	Gun_Gatlin_Blend_Stop = 10603,
	[Token(Token = "0x40005BE")]
	Grenades_Boss_Drop = 10604,
	[Token(Token = "0x40005BF")]
	AMB_LockerRoom = 10700,
	[Token(Token = "0x40005C0")]
	AMB_Battleroom_1 = 10701,
	[Token(Token = "0x40005C1")]
	AMB_Battleroom_2 = 10702,
	[Token(Token = "0x40005C2")]
	AMB_Battleroom_3 = 10703,
	[Token(Token = "0x40005C3")]
	AMB_Battleroom_4 = 10704,
	[Token(Token = "0x40005C4")]
	AMB_Battleroom_5 = 10705,
	[Token(Token = "0x40005C5")]
	AMB_Battleroom_6 = 10706,
	[Token(Token = "0x40005C6")]
	AMB_Battleroom_7 = 10707,
	[Token(Token = "0x40005C7")]
	AMB_Battleroom_8 = 10708,
	[Token(Token = "0x40005C8")]
	AMB_Battleroom_9 = 10709,
	[Token(Token = "0x40005C9")]
	AMB_Battleroom_10 = 10710,
	[Token(Token = "0x40005CA")]
	AMB_Battleroom_11 = 10711,
	[Token(Token = "0x40005CB")]
	AMB_Battleroom_12 = 10712,
	[Token(Token = "0x40005CC")]
	AMB_Battleroom_13 = 10713,
	[Token(Token = "0x40005CD")]
	AMB_Battleroom_14 = 10714,
	[Token(Token = "0x40005CE")]
	AMB_Battleroom_15 = 10715,
	[Token(Token = "0x40005CF")]
	AMB_Battleroom_16 = 10716,
	[Token(Token = "0x40005D0")]
	AMB_Battleroom_17 = 10717,
	[Token(Token = "0x40005D1")]
	AMB_Battleroom_18 = 10718,
	[Token(Token = "0x40005D2")]
	AMB_Battleroom_19 = 10719,
	[Token(Token = "0x40005D3")]
	AMB_Battleroom_20 = 10720,
	[Token(Token = "0x40005D4")]
	AMB_Battleroom_21 = 10721,
	[Token(Token = "0x40005D5")]
	AMB_Battleroom_22 = 10722,
	[Token(Token = "0x40005D6")]
	AMB_Battleroom_23 = 10723,
	[Token(Token = "0x40005D7")]
	AMB_Battleroom_24 = 10724,
	[Token(Token = "0x40005D8")]
	AMB_Battleroom_25 = 10725,
	[Token(Token = "0x40005D9")]
	AMB_Battleroom_26 = 10726,
	[Token(Token = "0x40005DA")]
	AMB_Battleroom_27 = 10727,
	[Token(Token = "0x40005DB")]
	AMB_Battleroom_28 = 10728,
	[Token(Token = "0x40005DC")]
	AMB_Battleroom_29 = 10729,
	[Token(Token = "0x40005DD")]
	AMB_Battleroom_30 = 10730,
	[Token(Token = "0x40005DE")]
	AMB_Battleroom_31 = 10731,
	[Token(Token = "0x40005DF")]
	AMB_Battleroom_32 = 10732
}
[Token(Token = "0x20000DD")]
public enum RTPCEvent
{
	[Token(Token = "0x40005E1")]
	Unknown = 0,
	[Token(Token = "0x40005E2")]
	Room = 1,
	[Token(Token = "0x40005E3")]
	Gatlin_Blend_RTPC = 2,
	[Token(Token = "0x40005E4")]
	Sfx_Volume_RTPC = 100,
	[Token(Token = "0x40005E5")]
	Music_Volume_RTPC = 101,
	[Token(Token = "0x40005E6")]
	Voice_Volume_RTPC = 102,
	[Token(Token = "0x40005E7")]
	Audio_Volume_RTPC = 103
}
[Token(Token = "0x20000DE")]
public enum e_SwitchGroupEvent
{
	[Token(Token = "0x40005E9")]
	Unknown,
	[Token(Token = "0x40005EA")]
	Bullet_Hit_Material_Switch_Group,
	[Token(Token = "0x40005EB")]
	Gun_Switch_Group,
	[Token(Token = "0x40005EC")]
	AMB_Switch_Group
}
[Token(Token = "0x20000DF")]
public enum e_SwitchEvent
{
	[Token(Token = "0x40005EE")]
	Unknown = 0,
	[Token(Token = "0x40005EF")]
	Cement = 1000,
	[Token(Token = "0x40005F0")]
	Sand = 1001,
	[Token(Token = "0x40005F1")]
	Wood = 1002,
	[Token(Token = "0x40005F2")]
	Metal = 1003,
	[Token(Token = "0x40005F3")]
	Shield = 1004,
	[Token(Token = "0x40005F4")]
	Glass = 1005,
	[Token(Token = "0x40005F5")]
	Glass_Die = 1006,
	[Token(Token = "0x40005F6")]
	Meat = 1007,
	[Token(Token = "0x40005F7")]
	Helmet_Blood = 1008,
	[Token(Token = "0x40005F8")]
	Major_Voice_Hurt = 1009,
	[Token(Token = "0x40005F9")]
	Crystal = 1010,
	[Token(Token = "0x40005FA")]
	Lava = 1011,
	[Token(Token = "0x40005FB")]
	Rocket = 1012,
	[Token(Token = "0x40005FC")]
	Water = 1013,
	[Token(Token = "0x40005FD")]
	Major_Voice_Hurt_Female = 1014,
	[Token(Token = "0x40005FE")]
	Pistol = 2000,
	[Token(Token = "0x40005FF")]
	Machinegun = 2001,
	[Token(Token = "0x4000600")]
	Rifle = 2002,
	[Token(Token = "0x4000601")]
	Crossbow = 2003,
	[Token(Token = "0x4000602")]
	Heavymachinegun = 2004,
	[Token(Token = "0x4000603")]
	Submachinegun = 2005,
	[Token(Token = "0x4000604")]
	Pistol_Other = 2006,
	[Token(Token = "0x4000605")]
	Machinegun_Other = 2007,
	[Token(Token = "0x4000606")]
	Rifle_Other = 2008,
	[Token(Token = "0x4000607")]
	Crossbow_Other = 2009,
	[Token(Token = "0x4000608")]
	Heavymachinegun_Other = 2010,
	[Token(Token = "0x4000609")]
	Submachinegun_Other = 2011,
	[Token(Token = "0x400060A")]
	Rocket_Other = 2012,
	[Token(Token = "0x400060B")]
	AMB_Inside = 3001,
	[Token(Token = "0x400060C")]
	AMB_Outside = 3002
}
[Token(Token = "0x20000E0")]
public enum e_StateGroupEvent : uint
{
	[Token(Token = "0x400060E")]
	Unknown = 0u,
	[Token(Token = "0x400060F")]
	Music_State_Group = 1000u
}
[Token(Token = "0x20000E1")]
public enum e_StateEvent : uint
{
	[Token(Token = "0x4000611")]
	Unknown = 0u,
	[Token(Token = "0x4000612")]
	BGM_Not_Encountered = 1001u,
	[Token(Token = "0x4000613")]
	BGM_Battle_Fight_Nomal = 1002u,
	[Token(Token = "0x4000614")]
	BGM_Battle_Fight_Climax = 1003u,
	[Token(Token = "0x4000615")]
	BGM_Battle_Fight_Boss = 1004u,
	[Token(Token = "0x4000616")]
	BGM_Locker_Room = 1005u,
	[Token(Token = "0x4000617")]
	BGM_Count = 1007u,
	[Token(Token = "0x4000618")]
	BGM_Battle_Fight_Nomal_Win = 1008u,
	[Token(Token = "0x4000619")]
	BGM_Battle_Fight_Climax_Win = 1009u,
	[Token(Token = "0x400061A")]
	BGM_Battle_Fight_Boss_End = 1010u,
	[Token(Token = "0x400061B")]
	BGM_Battle_Fight_Climax_01 = 1011u,
	[Token(Token = "0x400061C")]
	BGM_Battle_Fight_Climax_02 = 1012u,
	[Token(Token = "0x400061D")]
	BGM_Battle_Fight_Climax_03 = 1013u,
	[Token(Token = "0x400061E")]
	BGM_Battle_Fight_Climax_04 = 1014u,
	[Token(Token = "0x400061F")]
	BGM_Battle_Fight_Climax_05 = 1015u,
	[Token(Token = "0x4000620")]
	BGM_Battle_Fight_Climax_Win_01 = 1016u,
	[Token(Token = "0x4000621")]
	BGM_Battle_Fight_Climax_Win_02 = 1017u,
	[Token(Token = "0x4000622")]
	BGM_Battle_Fight_Climax_Win_03 = 1018u,
	[Token(Token = "0x4000623")]
	BGM_Battle_Fight_Climax_Win_04 = 1019u,
	[Token(Token = "0x4000624")]
	BGM_Battle_Fight_Climax_Win_05 = 1020u,
	[Token(Token = "0x4000625")]
	BGM_Battle_Fight_Large = 1021u,
	[Token(Token = "0x4000626")]
	BGM_Battle_Fight_Large_Win = 1022u,
	[Token(Token = "0x4000627")]
	BGM_Bridge01 = 1023u,
	[Token(Token = "0x4000628")]
	BGM_Bridge02 = 1024u,
	[Token(Token = "0x4000629")]
	BGM_Laser_Revive = 1025u,
	[Token(Token = "0x400062A")]
	BGM_Scanning_Revive = 1026u,
	[Token(Token = "0x400062B")]
	BGM_Lost = 1027u
}
[Token(Token = "0x20000E2")]
internal class SoundManager : Singleton<SoundManager>
{
	[Token(Token = "0x200053E")]
	public enum BankType
	{
		[Token(Token = "0x4001F2A")]
		Global,
		[Token(Token = "0x4001F2B")]
		Lobby,
		[Token(Token = "0x4001F2C")]
		Battle,
		[Token(Token = "0x4001F2D")]
		LevelMusic
	}

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_isPrepared;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<string>[] m_loadedBanks;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject m_soundRoot;

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x12C3948", Offset = "0x12C3948", VA = "0x12C3948")]
	public void Init()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x12C3BA8", Offset = "0x12C3BA8", VA = "0x12C3BA8")]
	public void LoadBank(string bankName, BankType bankType)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x12C3CC0", Offset = "0x12C3CC0", VA = "0x12C3CC0")]
	public uint PostEvent(string eventName, [Optional] GameObject srcGameObject)
	{
		return default(uint);
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x12C3E18", Offset = "0x12C3E18", VA = "0x12C3E18")]
	public void Prepare()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x12C3E9C", Offset = "0x12C3E9C", VA = "0x12C3E9C")]
	public void UnLoadBank(string bankName, BankType bankType)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x12C3F74", Offset = "0x12C3F74", VA = "0x12C3F74")]
	public SoundManager()
	{
	}
}
[Token(Token = "0x20000E3")]
public enum AudioType
{
	[Token(Token = "0x4000630")]
	Start = 1,
	[Token(Token = "0x4000631")]
	Stop
}
[Token(Token = "0x20000E4")]
public class WwiseDefine : MonoBehaviour, IAudioDefine
{
	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject wwiseRoot;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AkGameObj akGameObj;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioEvent audioEvent;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action action;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string audioEventName;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool objNeedDestroy;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool isUseObstruction;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SwitchInfoData switchInfoData;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioType audioType;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AkCallbackManager.EventCallback ec;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AutoDestroy auto;

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x1D76438", Offset = "0x1D76438", VA = "0x1D76438")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x1D764B0", Offset = "0x1D764B0", VA = "0x1D764B0", Slot = "4")]
	public void Init(params object[] args)
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x1D76B70", Offset = "0x1D76B70", VA = "0x1D76B70")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x1D76BF0", Offset = "0x1D76BF0", VA = "0x1D76BF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x1D76CE8", Offset = "0x1D76CE8", VA = "0x1D76CE8", Slot = "5")]
	public void Play()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x1D77028", Offset = "0x1D77028", VA = "0x1D77028")]
	private void OnAkCallback(object o1, AkCallbackType o2, object o3)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x1D7749C", Offset = "0x1D7749C", VA = "0x1D7749C", Slot = "6")]
	public void Stop()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x1D77864", Offset = "0x1D77864", VA = "0x1D77864", Slot = "7")]
	public void Pause()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x1D7790C", Offset = "0x1D7790C", VA = "0x1D7790C", Slot = "8")]
	public void Resume()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x1D76CDC", Offset = "0x1D76CDC", VA = "0x1D76CDC", Slot = "9")]
	public void SetEnable(bool isEnable)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x1D779B4", Offset = "0x1D779B4", VA = "0x1D779B4")]
	public WwiseDefine()
	{
	}
}
[Token(Token = "0x20000E5")]
public class WwiseInit : MonoBehaviour
{
	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6460", Offset = "0xEE6460")]
	private static WwiseInit <Instance>k__BackingField;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6470", Offset = "0xEE6470")]
	[SerializeField]
	private string language;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE64BC", Offset = "0xEE64BC")]
	[SerializeField]
	private bool engineLogging;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6508", Offset = "0xEE6508")]
	[SerializeField]
	public List<string> contentPath;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<string> voContentPath;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AkInitializer akInitializer;

	[Token(Token = "0x17000083")]
	public static WwiseInit Instance
	{
		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x1D77C1C", Offset = "0x1D77C1C", VA = "0x1D77C1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED7FC", Offset = "0xEED7FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x1D77C6C", Offset = "0x1D77C6C", VA = "0x1D77C6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED80C", Offset = "0xEED80C")]
		private set
		{
		}
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x1D77CC4", Offset = "0x1D77CC4", VA = "0x1D77CC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x1D77F00", Offset = "0x1D77F00", VA = "0x1D77F00")]
	public void LoadLanguageVoBank()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x1D78764", Offset = "0x1D78764", VA = "0x1D78764")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x1D788DC", Offset = "0x1D788DC", VA = "0x1D788DC")]
	public WwiseInit()
	{
	}
}
[Token(Token = "0x20000E6")]
public class WwiseObstruction : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200053F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE49B0", Offset = "0xEE49B0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__16_0;

		[Token(Token = "0x6002AE2")]
		[Address(RVA = "0x1D792FC", Offset = "0x1D792FC", VA = "0x1D792FC")]
		public <>c()
		{
		}

		[Token(Token = "0x6002AE3")]
		[Address(RVA = "0x1D79304", Offset = "0x1D79304", VA = "0x1D79304")]
		internal int <ObstructionProcessing>b__16_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AkGameObj m_gameObj;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AkAudioListener> akAudioListeners;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isStart;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MaxDis;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ObstructionValue;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LayerMask layerMask;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float refreshInterval;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float timer;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastHit[] tempRaycastHits;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<RaycastHit> tempSortList;

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x1D78A60", Offset = "0x1D78A60", VA = "0x1D78A60")]
	public void WwiseObstructionDoStart()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x1D769A4", Offset = "0x1D769A4", VA = "0x1D769A4")]
	public void DoStart()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x1D790D4", Offset = "0x1D790D4", VA = "0x1D790D4")]
	public void DoStop()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x1D790E0", Offset = "0x1D790E0", VA = "0x1D790E0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x1D79180", Offset = "0x1D79180", VA = "0x1D79180")]
	private void OnUpdate()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x1D78A64", Offset = "0x1D78A64", VA = "0x1D78A64")]
	private void ObstructionProcessing()
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x1D791D8", Offset = "0x1D791D8", VA = "0x1D791D8")]
	public WwiseObstruction()
	{
	}
}
[Token(Token = "0x20000E7")]
public class Wwise_SetRTPC : MonoBehaviour
{
	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RTPCEvent RTPC_Event;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RTPC_Value;

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x1D79A08", Offset = "0x1D79A08", VA = "0x1D79A08")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x1D79A8C", Offset = "0x1D79A8C", VA = "0x1D79A8C")]
	public Wwise_SetRTPC()
	{
	}
}
[Token(Token = "0x20000E8")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE09A0", Offset = "0xEE09A0")]
public class BuffAttribute : BaseAttribute
{
	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6584", Offset = "0xEE6584")]
	private short <BuffTypeId>k__BackingField;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6594", Offset = "0xEE6594")]
	private Type <BuffType>k__BackingField;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE65A4", Offset = "0xEE65A4")]
	private Type <BuffDataType>k__BackingField;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE65B4", Offset = "0xEE65B4")]
	private bool <IsMultiple>k__BackingField;

	[Token(Token = "0x17000084")]
	public short BuffTypeId
	{
		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x13DC6BC", Offset = "0x13DC6BC", VA = "0x13DC6BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED81C", Offset = "0xEED81C")]
		get
		{
			return default(short);
		}
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x13DC6C4", Offset = "0x13DC6C4", VA = "0x13DC6C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED82C", Offset = "0xEED82C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public Type BuffType
	{
		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x13DC6CC", Offset = "0x13DC6CC", VA = "0x13DC6CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED83C", Offset = "0xEED83C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x13DC6D4", Offset = "0x13DC6D4", VA = "0x13DC6D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED84C", Offset = "0xEED84C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public Type BuffDataType
	{
		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x13DC6DC", Offset = "0x13DC6DC", VA = "0x13DC6DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED85C", Offset = "0xEED85C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x13DC6E4", Offset = "0x13DC6E4", VA = "0x13DC6E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED86C", Offset = "0xEED86C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public bool IsMultiple
	{
		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x13DC6EC", Offset = "0x13DC6EC", VA = "0x13DC6EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED87C", Offset = "0xEED87C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x13DC6F4", Offset = "0x13DC6F4", VA = "0x13DC6F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED88C", Offset = "0xEED88C")]
		private set
		{
		}
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x13DC700", Offset = "0x13DC700", VA = "0x13DC700")]
	public BuffAttribute(short typeId, Type buffType, [Optional] Type buffDataType, bool isMultiple = false)
	{
	}
}
[Token(Token = "0x20000E9")]
public class BuffBase<T> : IBuff where T : IBuffData
{
	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE65C4", Offset = "0xEE65C4")]
	private int <BuffId>k__BackingField;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE65D4", Offset = "0xEE65D4")]
	private short <BuffType>k__BackingField;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE65E4", Offset = "0xEE65E4")]
	private T <Data>k__BackingField;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE65F4", Offset = "0xEE65F4")]
	private bool <IsCanDestory>k__BackingField;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6604", Offset = "0xEE6604")]
	private int <AttackerId>k__BackingField;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6614", Offset = "0xEE6614")]
	private int <HurterId>k__BackingField;

	[Token(Token = "0x17000088")]
	public int BuffId
	{
		[Token(Token = "0x60005F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED89C", Offset = "0xEED89C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED8AC", Offset = "0xEED8AC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public short BuffType
	{
		[Token(Token = "0x60005F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED8BC", Offset = "0xEED8BC")]
		get
		{
			return default(short);
		}
		[Token(Token = "0x60005F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED8CC", Offset = "0xEED8CC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public bool IsMultiple
	{
		[Token(Token = "0x60005F6")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700008B")]
	public T Data
	{
		[Token(Token = "0x60005F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED8DC", Offset = "0xEED8DC")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60005F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED8EC", Offset = "0xEED8EC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008C")]
	public bool IsCanDestory
	{
		[Token(Token = "0x60005F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED8FC", Offset = "0xEED8FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED90C", Offset = "0xEED90C")]
		protected set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public int AttackerId
	{
		[Token(Token = "0x60005FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED91C", Offset = "0xEED91C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED92C", Offset = "0xEED92C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public int HurterId
	{
		[Token(Token = "0x60005FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED93C", Offset = "0xEED93C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60005FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEED94C", Offset = "0xEED94C")]
		private set
		{
		}
	}

	[Token(Token = "0x60005FF")]
	public BuffBase(int id, short type, IBuffData buffData)
	{
	}

	[Token(Token = "0x6000600")]
	public void Init(int attackerId, int hurterId, string dataJson)
	{
	}

	[Token(Token = "0x6000601")]
	public void SetData(string dataJson)
	{
	}

	[Token(Token = "0x6000602")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000603")]
	public virtual void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000604")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x6000605")]
	public int GetId()
	{
		return default(int);
	}

	[Token(Token = "0x6000606")]
	public short GetBuffType()
	{
		return default(short);
	}

	[Token(Token = "0x6000607")]
	public bool GetIsCanDestory()
	{
		return default(bool);
	}

	[Token(Token = "0x6000608")]
	public bool GetIsMultiple()
	{
		return default(bool);
	}
}
[Token(Token = "0x20000EA")]
public class BuffFactory : Singleton<BuffFactory>
{
	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<short, BuffAttribute> buffTypeDic;

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x13DC770", Offset = "0x13DC770", VA = "0x13DC770")]
	public BuffFactory()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x13DCA5C", Offset = "0x13DCA5C", VA = "0x13DCA5C")]
	public IBuff Create(int buffId, short bufftype)
	{
		return null;
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x13DCC8C", Offset = "0x13DCC8C", VA = "0x13DCC8C")]
	public bool IsMultiple(short BuffType)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000EB")]
public interface IBuff
{
	[Token(Token = "0x600060C")]
	void Init(int attackerId, int hurterId, string dataJson);

	[Token(Token = "0x600060D")]
	void Start();

	[Token(Token = "0x600060E")]
	void DoUpdate(float deltaTime, int millisDeltaTime);

	[Token(Token = "0x600060F")]
	void Stop();

	[Token(Token = "0x6000610")]
	void SetData(string dataJson);

	[Token(Token = "0x6000611")]
	int GetId();

	[Token(Token = "0x6000612")]
	short GetBuffType();

	[Token(Token = "0x6000613")]
	bool GetIsCanDestory();

	[Token(Token = "0x6000614")]
	bool GetIsMultiple();
}
[Token(Token = "0x20000EC")]
public interface IBuffData
{
	[Token(Token = "0x6000615")]
	string Serialize();

	[Token(Token = "0x6000616")]
	void Deserialize(string json);
}
[Token(Token = "0x20000ED")]
public class CoroutineManager : Singleton<CoroutineManager>
{
	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private HashSet<ICoroutineControl> catchCells;

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x121D860", Offset = "0x121D860", VA = "0x121D860")]
	public UnityCoroutineControl CreateUnityCoroutineControl(string name)
	{
		return null;
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x121D938", Offset = "0x121D938", VA = "0x121D938")]
	private void CloseCoroutineControl(ICoroutineControl cell)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x121DA50", Offset = "0x121DA50", VA = "0x121DA50")]
	public void CloseAll()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x121DB38", Offset = "0x121DB38", VA = "0x121DB38")]
	public CoroutineManager()
	{
	}
}
[Token(Token = "0x20000EE")]
public interface ICoroutineControl
{
	[Token(Token = "0x600061B")]
	void StopAll();

	[Token(Token = "0x600061C")]
	void Close();

	[Token(Token = "0x600061D")]
	void Stop(ICoroutineControlCell cell);
}
[Token(Token = "0x20000EF")]
public interface ICoroutineControlCell
{
	[Token(Token = "0x600061E")]
	void Stop();
}
[Token(Token = "0x20000F0")]
public class UnityCoroutineControl : MonoBehaviour, ICoroutineControl
{
	[Token(Token = "0x2000540")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE49C0", Offset = "0xEE49C0")]
	private sealed class <_Delay>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x17000424")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AE7")]
			[Address(RVA = "0x130C2B4", Offset = "0x130C2B4", VA = "0x130C2B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000425")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AE9")]
			[Address(RVA = "0x130C31C", Offset = "0x130C31C", VA = "0x130C31C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AE4")]
		[Address(RVA = "0x130B684", Offset = "0x130B684", VA = "0x130B684")]
		[DebuggerHidden]
		public <_Delay>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6002AE5")]
		[Address(RVA = "0x130C1F0", Offset = "0x130C1F0", VA = "0x130C1F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AE6")]
		[Address(RVA = "0x130C1F4", Offset = "0x130C1F4", VA = "0x130C1F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AE8")]
		[Address(RVA = "0x130C2BC", Offset = "0x130C2BC", VA = "0x130C2BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000541")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE49D0", Offset = "0xEE49D0")]
	private sealed class <_Loop>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Func<bool> func;

		[Token(Token = "0x17000426")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AED")]
			[Address(RVA = "0x130C71C", Offset = "0x130C71C", VA = "0x130C71C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000427")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AEF")]
			[Address(RVA = "0x130C784", Offset = "0x130C784", VA = "0x130C784", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AEA")]
		[Address(RVA = "0x130B934", Offset = "0x130B934", VA = "0x130B934")]
		[DebuggerHidden]
		public <_Loop>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002AEB")]
		[Address(RVA = "0x130C648", Offset = "0x130C648", VA = "0x130C648", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AEC")]
		[Address(RVA = "0x130C64C", Offset = "0x130C64C", VA = "0x130C64C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AEE")]
		[Address(RVA = "0x130C724", Offset = "0x130C724", VA = "0x130C724", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000542")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE49E0", Offset = "0xEE49E0")]
	private sealed class <_Loop>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time1;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float time2;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Func<bool> func;

		[Token(Token = "0x17000428")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AF3")]
			[Address(RVA = "0x130C86C", Offset = "0x130C86C", VA = "0x130C86C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000429")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AF5")]
			[Address(RVA = "0x130C8D4", Offset = "0x130C8D4", VA = "0x130C8D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AF0")]
		[Address(RVA = "0x130BA9C", Offset = "0x130BA9C", VA = "0x130BA9C")]
		[DebuggerHidden]
		public <_Loop>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002AF1")]
		[Address(RVA = "0x130C78C", Offset = "0x130C78C", VA = "0x130C78C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AF2")]
		[Address(RVA = "0x130C790", Offset = "0x130C790", VA = "0x130C790", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AF4")]
		[Address(RVA = "0x130C874", Offset = "0x130C874", VA = "0x130C874", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000543")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE49F0", Offset = "0xEE49F0")]
	private sealed class <_Loop>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x1700042A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AF9")]
			[Address(RVA = "0x130C9A4", Offset = "0x130C9A4", VA = "0x130C9A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002AFB")]
			[Address(RVA = "0x130CA0C", Offset = "0x130CA0C", VA = "0x130CA0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AF6")]
		[Address(RVA = "0x130BC08", Offset = "0x130BC08", VA = "0x130BC08")]
		[DebuggerHidden]
		public <_Loop>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002AF7")]
		[Address(RVA = "0x130C8DC", Offset = "0x130C8DC", VA = "0x130C8DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AF8")]
		[Address(RVA = "0x130C8E0", Offset = "0x130C8E0", VA = "0x130C8E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002AFA")]
		[Address(RVA = "0x130C9AC", Offset = "0x130C9AC", VA = "0x130C9AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000544")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4A00", Offset = "0xEE4A00")]
	private sealed class <_Frame>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<bool> func;

		[Token(Token = "0x1700042C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002AFF")]
			[Address(RVA = "0x130C5D8", Offset = "0x130C5D8", VA = "0x130C5D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B01")]
			[Address(RVA = "0x130C640", Offset = "0x130C640", VA = "0x130C640", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002AFC")]
		[Address(RVA = "0x130BD5C", Offset = "0x130BD5C", VA = "0x130BD5C")]
		[DebuggerHidden]
		public <_Frame>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002AFD")]
		[Address(RVA = "0x130C530", Offset = "0x130C530", VA = "0x130C530", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002AFE")]
		[Address(RVA = "0x130C534", Offset = "0x130C534", VA = "0x130C534", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B00")]
		[Address(RVA = "0x130C5E0", Offset = "0x130C5E0", VA = "0x130C5E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000545")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4A10", Offset = "0xEE4A10")]
	private sealed class <_Frame>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x1700042E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B05")]
			[Address(RVA = "0x130C4C0", Offset = "0x130C4C0", VA = "0x130C4C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700042F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B07")]
			[Address(RVA = "0x130C528", Offset = "0x130C528", VA = "0x130C528", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B02")]
		[Address(RVA = "0x130BEA0", Offset = "0x130BEA0", VA = "0x130BEA0")]
		[DebuggerHidden]
		public <_Frame>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002B03")]
		[Address(RVA = "0x130C448", Offset = "0x130C448", VA = "0x130C448", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B04")]
		[Address(RVA = "0x130C44C", Offset = "0x130C44C", VA = "0x130C44C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B06")]
		[Address(RVA = "0x130C4C8", Offset = "0x130C4C8", VA = "0x130C4C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000546")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4A20", Offset = "0xEE4A20")]
	private sealed class <_EndOfFrame>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x17000430")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B0B")]
			[Address(RVA = "0x130C3D8", Offset = "0x130C3D8", VA = "0x130C3D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000431")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B0D")]
			[Address(RVA = "0x130C440", Offset = "0x130C440", VA = "0x130C440", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B08")]
		[Address(RVA = "0x130BFE4", Offset = "0x130BFE4", VA = "0x130BFE4")]
		[DebuggerHidden]
		public <_EndOfFrame>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002B09")]
		[Address(RVA = "0x130C324", Offset = "0x130C324", VA = "0x130C324", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B0A")]
		[Address(RVA = "0x130C328", Offset = "0x130C328", VA = "0x130C328", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B0C")]
		[Address(RVA = "0x130C3E0", Offset = "0x130C3E0", VA = "0x130C3E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x130B5F8", Offset = "0x130B5F8", VA = "0x130B5F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEED95C", Offset = "0xEED95C")]
	private static IEnumerator _Delay(float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x130B6B0", Offset = "0x130B6B0", VA = "0x130B6B0")]
	public ICoroutineControlCell Delay(float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x130B878", Offset = "0x130B878", VA = "0x130B878")]
	public ICoroutineControlCell Delay(float time1, float time2, Action action)
	{
		return null;
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x130B8A8", Offset = "0x130B8A8", VA = "0x130B8A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEED9C0", Offset = "0xEED9C0")]
	private static IEnumerator _Loop(float time, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x130B960", Offset = "0x130B960", VA = "0x130B960")]
	public ICoroutineControlCell Loop(float time, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x130BA0C", Offset = "0x130BA0C", VA = "0x130BA0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEDA24", Offset = "0xEEDA24")]
	private static IEnumerator _Loop(float time1, float time2, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x130BAC8", Offset = "0x130BAC8", VA = "0x130BAC8")]
	public ICoroutineControlCell Loop(float time1, float time2, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x130BB7C", Offset = "0x130BB7C", VA = "0x130BB7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEDA88", Offset = "0xEEDA88")]
	private static IEnumerator _Loop(float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x130BC34", Offset = "0x130BC34", VA = "0x130BC34")]
	public ICoroutineControlCell Loop(float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x130BCE0", Offset = "0x130BCE0", VA = "0x130BCE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEDAEC", Offset = "0xEEDAEC")]
	private static IEnumerator _Frame(Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x130BD88", Offset = "0x130BD88", VA = "0x130BD88")]
	public ICoroutineControlCell Frame(Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x130BE24", Offset = "0x130BE24", VA = "0x130BE24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEDB50", Offset = "0xEEDB50")]
	private static IEnumerator _Frame(Action action)
	{
		return null;
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x130BECC", Offset = "0x130BECC", VA = "0x130BECC")]
	public ICoroutineControlCell Frame(Action action)
	{
		return null;
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x130BF68", Offset = "0x130BF68", VA = "0x130BF68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEDBB4", Offset = "0xEEDBB4")]
	private static IEnumerator _EndOfFrame(Action action)
	{
		return null;
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x130C010", Offset = "0x130C010", VA = "0x130C010")]
	public ICoroutineControlCell EndOfFrame(Action action)
	{
		return null;
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x130C0AC", Offset = "0x130C0AC", VA = "0x130C0AC", Slot = "4")]
	public void StopAll()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x130C0B4", Offset = "0x130C0B4", VA = "0x130C0B4", Slot = "5")]
	public void Close()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x130C13C", Offset = "0x130C13C", VA = "0x130C13C", Slot = "6")]
	public void Stop(ICoroutineControlCell cell)
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x130C1E8", Offset = "0x130C1E8", VA = "0x130C1E8")]
	public UnityCoroutineControl()
	{
	}
}
[Token(Token = "0x20000F1")]
public class UnityCoroutineControlCell : ICoroutineControlCell
{
	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MonoBehaviour root;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Coroutine coroutine;

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x130B77C", Offset = "0x130B77C", VA = "0x130B77C")]
	public void Init(MonoBehaviour _root, Coroutine _coroutine)
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x130CA14", Offset = "0x130CA14", VA = "0x130CA14", Slot = "4")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x130B774", Offset = "0x130B774", VA = "0x130B774")]
	public UnityCoroutineControlCell()
	{
	}
}
[Token(Token = "0x20000F2")]
public class DemoModelController : MonoBehaviour
{
	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject DemoModelRoot;

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x1227918", Offset = "0x1227918", VA = "0x1227918")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x12279E4", Offset = "0x12279E4", VA = "0x12279E4")]
	public DemoModelController()
	{
	}
}
[Token(Token = "0x20000F3")]
public class EludePoint : MonoBehaviour
{
	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsUsed;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public eMonsterAttackType MonsterAttackType;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public eMonsterAttackDirType MonsterAttackDirType;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6624", Offset = "0xEE6624")]
	private WUnit <UseOwner>k__BackingField;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static char[] numChar;

	[Token(Token = "0x1700008F")]
	public WUnit UseOwner
	{
		[Token(Token = "0x6000637")]
		[Address(RVA = "0x12317DC", Offset = "0x12317DC", VA = "0x12317DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDC18", Offset = "0xEEDC18")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000638")]
		[Address(RVA = "0x12317E4", Offset = "0x12317E4", VA = "0x12317E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDC28", Offset = "0xEEDC28")]
		set
		{
		}
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x12317EC", Offset = "0x12317EC", VA = "0x12317EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x12319A8", Offset = "0x12319A8", VA = "0x12319A8")]
	public void SetUseStatus(bool isUsed, WUnit owner)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x12319BC", Offset = "0x12319BC", VA = "0x12319BC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x12319C0", Offset = "0x12319C0", VA = "0x12319C0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x12319C4", Offset = "0x12319C4", VA = "0x12319C4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x1231B28", Offset = "0x1231B28", VA = "0x1231B28")]
	public EludePoint()
	{
	}
}
[Token(Token = "0x20000F4")]
public class EludePointCell
{
	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private EludePoint ePoint;

	[Token(Token = "0x17000090")]
	public EludePoint EPoint
	{
		[Token(Token = "0x6000640")]
		[Address(RVA = "0x1231BB0", Offset = "0x1231BB0", VA = "0x1231BB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x1231BB8", Offset = "0x1231BB8", VA = "0x1231BB8")]
	public void Init(EludePoint point)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x1231BF8", Offset = "0x1231BF8", VA = "0x1231BF8")]
	public void UnInit()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x1231C3C", Offset = "0x1231C3C", VA = "0x1231C3C")]
	public void SetUseStatus(bool isUsed, WUnit unit)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x1231CF0", Offset = "0x1231CF0", VA = "0x1231CF0")]
	public bool IsUsed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x1231D0C", Offset = "0x1231D0C", VA = "0x1231D0C")]
	public bool IsSameOwner(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x1231DAC", Offset = "0x1231DAC", VA = "0x1231DAC")]
	public Vector3 Position()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x1231E70", Offset = "0x1231E70", VA = "0x1231E70")]
	public EludePointCell()
	{
	}
}
[Token(Token = "0x20000F5")]
public class EludePointManager : Singleton<EludePointManager>
{
	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, EludePointCell> EludePointDic;

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x1231E78", Offset = "0x1231E78", VA = "0x1231E78")]
	public void SetAreaEludePoint(int area, List<EludePoint> eludePointList)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x1231E7C", Offset = "0x1231E7C", VA = "0x1231E7C")]
	public void SetUseEludePoint(int id, WUnit owner)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x1231F94", Offset = "0x1231F94", VA = "0x1231F94")]
	public void SetNoUseEludePoint(int id)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x12320A0", Offset = "0x12320A0", VA = "0x12320A0")]
	public void SetNoUseEludePointByUnit(WUnit unit)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x1232200", Offset = "0x1232200", VA = "0x1232200")]
	public bool IsUnitInElude(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x1232324", Offset = "0x1232324", VA = "0x1232324")]
	public EludePointCell GetCloseEPCell(Vector3 pos, float dis)
	{
		return null;
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x1232568", Offset = "0x1232568", VA = "0x1232568")]
	public void CleanEludePoint()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x1232680", Offset = "0x1232680", VA = "0x1232680")]
	public EludePointManager()
	{
	}
}
[Token(Token = "0x20000F6")]
public class MonsterElude : MonoBehaviour
{
	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool IsInit;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x12EA378", Offset = "0x12EA378", VA = "0x12EA378")]
	public void Init()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x12EA438", Offset = "0x12EA438", VA = "0x12EA438")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x12EA4BC", Offset = "0x12EA4BC", VA = "0x12EA4BC")]
	public MonsterElude()
	{
	}
}
[Token(Token = "0x20000F7")]
public static class EventDefine
{
}
[Token(Token = "0x20000F8")]
public class EventManager
{
	[Token(Token = "0x2000547")]
	public delegate void EventDelegate(params object[] args);

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EventManager _instance;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, List<EventEntity>> eventHash;

	[Token(Token = "0x17000091")]
	public static EventManager Instance
	{
		[Token(Token = "0x6000653")]
		[Address(RVA = "0x12343A8", Offset = "0x12343A8", VA = "0x12343A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x12344A8", Offset = "0x12344A8", VA = "0x12344A8")]
	public void AddEventListener(int eventId, EventDelegate eventFunc)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x1234778", Offset = "0x1234778", VA = "0x1234778")]
	public void RemoveEventListener(int eventId, EventDelegate eventFunc)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x123482C", Offset = "0x123482C", VA = "0x123482C")]
	public void NotifyEvent(int eventId, params object[] args)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x12344AC", Offset = "0x12344AC", VA = "0x12344AC")]
	private void AddEventListenerImpl(int eventId, EventDelegate eventFunc)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x123477C", Offset = "0x123477C", VA = "0x123477C")]
	private void RemoveEventListenerImpl(int eventId, EventDelegate eventFunc)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x1234CB0", Offset = "0x1234CB0", VA = "0x1234CB0")]
	private bool IsHasEventDelegate(List<EventEntity> eventlist, EventDelegate eventFunc)
	{
		return default(bool);
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x1234D60", Offset = "0x1234D60", VA = "0x1234D60")]
	private bool RemoveEventDelegate(int eventId, List<EventEntity> eventlist, EventDelegate eventFunc)
	{
		return default(bool);
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x123442C", Offset = "0x123442C", VA = "0x123442C")]
	public EventManager()
	{
	}
}
[Token(Token = "0x20000F9")]
public class EventEntity
{
	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EventManager.EventDelegate func;

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x1233F9C", Offset = "0x1233F9C", VA = "0x1233F9C")]
	public EventEntity(EventManager.EventDelegate func)
	{
	}
}
[Token(Token = "0x20000FA")]
public class FloatingBase : MonoBehaviour
{
	[Token(Token = "0x600065D")]
	[Address(RVA = "0x132AE28", Offset = "0x132AE28", VA = "0x132AE28", Slot = "4")]
	public virtual void Init(Transform ownerTrn, Transform lookAtTrn, Vector3 forward)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x132AE2C", Offset = "0x132AE2C", VA = "0x132AE2C", Slot = "5")]
	public virtual void SetInfo(int extraState, int minDg, int maxDg)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x132AE30", Offset = "0x132AE30", VA = "0x132AE30", Slot = "6")]
	public virtual void Floating(int value)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x132AE34", Offset = "0x132AE34", VA = "0x132AE34", Slot = "7")]
	public virtual void UnInit()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x132AE38", Offset = "0x132AE38", VA = "0x132AE38")]
	public FloatingBase()
	{
	}
}
[Token(Token = "0x20000FB")]
public class FloatingDamage : FloatingBase
{
	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Txt;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform MoveTxt;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform RotTxt;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform OwnerTrn;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform LookAtTrn;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6634", Offset = "0xEE6634")]
	public float Time;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE666C", Offset = "0xEE666C")]
	public float BeginH;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE66A4", Offset = "0xEE66A4")]
	public float MiddleH;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE66DC", Offset = "0xEE66DC")]
	public float CubeL;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6714", Offset = "0xEE6714")]
	public float CubeW;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE674C", Offset = "0xEE674C")]
	public float CubeH;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6784", Offset = "0xEE6784")]
	public float CubeR;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE67BC", Offset = "0xEE67BC")]
	public float downBL;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE67F4", Offset = "0xEE67F4")]
	public float downBW;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE682C", Offset = "0xEE682C")]
	public float downEL;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6864", Offset = "0xEE6864")]
	public float downEW;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE689C", Offset = "0xEE689C")]
	public float ScaleBRatio;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE68D4", Offset = "0xEE68D4")]
	public float ScaleMRatio;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE690C", Offset = "0xEE690C")]
	public float ScaleERatio;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6944", Offset = "0xEE6944")]
	public int MinFontSize;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE697C", Offset = "0xEE697C")]
	public int MaxFontSize;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE69B4", Offset = "0xEE69B4")]
	public int ExtraMinFontSize;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE69EC", Offset = "0xEE69EC")]
	public int ExtraMaxFontSize;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 bPoint;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 sPoint;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 tPoint;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 pForward;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 pRight;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 pUp;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int extraState;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int inputMinDamage;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int inputMaxDamage;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Tween mMoveTn;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Tween mGradientTn;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Tween mScaleTn;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<int, string> expStrDic;

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x132AE40", Offset = "0x132AE40", VA = "0x132AE40", Slot = "4")]
	public override void Init(Transform ownerTrn, Transform lookAtTrn, Vector3 forward)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x132AFAC", Offset = "0x132AFAC", VA = "0x132AFAC", Slot = "5")]
	public override void SetInfo(int extraState, int minDg, int maxDg)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x132AFB8", Offset = "0x132AFB8", VA = "0x132AFB8")]
	public static string GetExpStr(int num)
	{
		return null;
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x132B0C4", Offset = "0x132B0C4", VA = "0x132B0C4", Slot = "6")]
	public override void Floating(int value)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x132BBF4", Offset = "0x132BBF4", VA = "0x132BBF4")]
	private void WaypointChange(int index)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x132BA10", Offset = "0x132BA10", VA = "0x132BA10")]
	private void Finish()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x132B978", Offset = "0x132B978", VA = "0x132B978")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x132BE24", Offset = "0x132BE24", VA = "0x132BE24")]
	private void Update()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x132BA94", Offset = "0x132BA94", VA = "0x132BA94")]
	private int GetTextSize(int damage)
	{
		return default(int);
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x132BEC8", Offset = "0x132BEC8", VA = "0x132BEC8", Slot = "7")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x132BEF4", Offset = "0x132BEF4", VA = "0x132BEF4")]
	public FloatingDamage()
	{
	}
}
[Token(Token = "0x20000FC")]
public class FloatingEffectManager : Singleton<FloatingEffectManager>
{
	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<FloatingBase> collectList;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<FloatingBase> recycleList;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isEnter;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isStart;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject floatingPrefab;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform floatingRoot;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int preNumber;

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x132C080", Offset = "0x132C080", VA = "0x132C080")]
	public void Enter()
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x132C1F4", Offset = "0x132C1F4", VA = "0x132C1F4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x132C1F8", Offset = "0x132C1F8", VA = "0x132C1F8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x132C204", Offset = "0x132C204", VA = "0x132C204")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x132C20C", Offset = "0x132C20C", VA = "0x132C20C")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x132C2F0", Offset = "0x132C2F0", VA = "0x132C2F0")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x132C4A8", Offset = "0x132C4A8", VA = "0x132C4A8")]
	public void Floating(Transform ownerTrn, Transform lookAtTrn, Vector3 forward, int value, int extraState, int minDg, int maxDg)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x132C6D0", Offset = "0x132C6D0", VA = "0x132C6D0")]
	public FloatingBase UseFloating(Transform ownerTrn, Transform lookAtTrn, Vector3 forward)
	{
		return null;
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x132BD4C", Offset = "0x132BD4C", VA = "0x132BD4C")]
	public void Remove(FloatingBase floating)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x132C210", Offset = "0x132C210", VA = "0x132C210")]
	public void RemoveAll()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x132C2F8", Offset = "0x132C2F8", VA = "0x132C2F8")]
	public void DestroyAll()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x132C13C", Offset = "0x132C13C", VA = "0x132C13C")]
	private void PreFloating()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x132C824", Offset = "0x132C824", VA = "0x132C824")]
	private FloatingBase GetFloating()
	{
		return null;
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x132C988", Offset = "0x132C988", VA = "0x132C988")]
	private FloatingBase ProduceFloating()
	{
		return null;
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x132C8AC", Offset = "0x132C8AC", VA = "0x132C8AC")]
	private bool RecycleFloating(FloatingBase floating)
	{
		return default(bool);
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x132CB48", Offset = "0x132CB48", VA = "0x132CB48")]
	public FloatingEffectManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FD")]
public class FlowNode
{
	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int ID;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int SectionId;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int SceneConfigId;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int MonsterConfigId;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int GearConfigId;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int FlowNameID;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public e_FlowType FlowType;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Sprite FlowIcon;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool IsBoss;

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x132CC2C", Offset = "0x132CC2C", VA = "0x132CC2C")]
	public FlowNode()
	{
	}
}
[Token(Token = "0x20000FE")]
public class FlowNodeCollector : MonoBehaviour
{
	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<FlowNode> FlowList;

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x132CC40", Offset = "0x132CC40", VA = "0x132CC40")]
	public FlowNodeCollector()
	{
	}
}
[Token(Token = "0x20000FF")]
public class RunningFlowNode
{
	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int fId;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlowNode fNode;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int bId;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FlowNode bNode;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int nId;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FlowNode nNode;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6A24", Offset = "0xEE6A24")]
	private bool <IsEnd>k__BackingField;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InstanceFlowNode ownerIns;

	[Token(Token = "0x17000092")]
	public bool IsEnd
	{
		[Token(Token = "0x6000680")]
		[Address(RVA = "0x13C17C8", Offset = "0x13C17C8", VA = "0x13C17C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDC38", Offset = "0xEEDC38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000681")]
		[Address(RVA = "0x13C17D0", Offset = "0x13C17D0", VA = "0x13C17D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDC48", Offset = "0xEEDC48")]
		set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public int FNodeSectionId
	{
		[Token(Token = "0x6000682")]
		[Address(RVA = "0x13C17DC", Offset = "0x13C17DC", VA = "0x13C17DC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000094")]
	public int BNodeSectionId
	{
		[Token(Token = "0x6000683")]
		[Address(RVA = "0x13C17F4", Offset = "0x13C17F4", VA = "0x13C17F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000095")]
	public int NNodeSectionId
	{
		[Token(Token = "0x6000684")]
		[Address(RVA = "0x13C180C", Offset = "0x13C180C", VA = "0x13C180C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x13C1824", Offset = "0x13C1824", VA = "0x13C1824")]
	public RunningFlowNode()
	{
	}
}
[Token(Token = "0x2000100")]
public class RunningInstance
{
	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int UseSelectInsId;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InstanceFlowNode UseSelectIns;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int RunSelectInsId;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InstanceFlowNode RunSelectIns;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int tmpId;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InstanceFlowNode RunningIns;

	[Token(Token = "0x17000096")]
	public int UseSelectInsFlowId
	{
		[Token(Token = "0x6000686")]
		[Address(RVA = "0x13C183C", Offset = "0x13C183C", VA = "0x13C183C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000097")]
	public int RunSelectInsFlowId
	{
		[Token(Token = "0x6000687")]
		[Address(RVA = "0x13C1854", Offset = "0x13C1854", VA = "0x13C1854")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000098")]
	public int RunningInsId
	{
		[Token(Token = "0x6000688")]
		[Address(RVA = "0x13C186C", Offset = "0x13C186C", VA = "0x13C186C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000689")]
		[Address(RVA = "0x13C1874", Offset = "0x13C1874", VA = "0x13C1874")]
		set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public int RunningInsFlowId
	{
		[Token(Token = "0x600068A")]
		[Address(RVA = "0x13C187C", Offset = "0x13C187C", VA = "0x13C187C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x13C1894", Offset = "0x13C1894", VA = "0x13C1894")]
	public void Reset()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x13C18E4", Offset = "0x13C18E4", VA = "0x13C18E4")]
	public void SetValues(int useSelectInsId, InstanceFlowNode useSelectIns, int runSelectInsId, InstanceFlowNode runSelectIns, int runningInsId, InstanceFlowNode runningIns)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x13C1954", Offset = "0x13C1954", VA = "0x13C1954")]
	public RunningInstance()
	{
	}
}
[Token(Token = "0x2000101")]
public class GameFlowSystem : Singleton<GameFlowSystem>
{
	[Token(Token = "0x2000548")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4A30", Offset = "0xEE4A30")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x6002B12")]
		[Address(RVA = "0x1332A80", Offset = "0x1332A80", VA = "0x1332A80")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6002B13")]
		[Address(RVA = "0x1332CE0", Offset = "0x1332CE0", VA = "0x1332CE0")]
		internal bool <GetFlowNode>b__0(FlowNode a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int configStartNodeId;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool isStart;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FlowNodeCollector flowCollector;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RunningInstance RunningInsCot;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool IsBossRoomWin;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<RunningFlowNode> runningSeqNodes;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RunningFlowNode lastUseNode;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RunningFlowNode curRunningNode;

	[Token(Token = "0x1700009A")]
	public int RunningInstanceId
	{
		[Token(Token = "0x600068E")]
		[Address(RVA = "0x132F6B8", Offset = "0x132F6B8", VA = "0x132F6B8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600068F")]
		[Address(RVA = "0x132F6D4", Offset = "0x132F6D4", VA = "0x132F6D4")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public int PassProgress
	{
		[Token(Token = "0x6000690")]
		[Address(RVA = "0x132F6F0", Offset = "0x132F6F0", VA = "0x132F6F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700009C")]
	public int FinalPassInstanceId
	{
		[Token(Token = "0x6000691")]
		[Address(RVA = "0x132F728", Offset = "0x132F728", VA = "0x132F728")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700009D")]
	public bool IsStart
	{
		[Token(Token = "0x6000692")]
		[Address(RVA = "0x132F744", Offset = "0x132F744", VA = "0x132F744")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x132F74C", Offset = "0x132F74C", VA = "0x132F74C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x132F81C", Offset = "0x132F81C", VA = "0x132F81C")]
	public void PreStart()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x132F92C", Offset = "0x132F92C", VA = "0x132F92C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x1330090", Offset = "0x1330090", VA = "0x1330090")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x133013C", Offset = "0x133013C", VA = "0x133013C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x1330140", Offset = "0x1330140", VA = "0x1330140")]
	public void BossRoomWin()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x13301E4", Offset = "0x13301E4", VA = "0x13301E4")]
	public void GotoNextRoom()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x133077C", Offset = "0x133077C", VA = "0x133077C")]
	public void GotoPreparedRoom(int uid, bool isSelectIns)
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x1330B90", Offset = "0x1330B90", VA = "0x1330B90")]
	public void PreparedRoomSelect(int uid)
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x1330C44", Offset = "0x1330C44", VA = "0x1330C44")]
	public void GotoBattleRoom()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x1330ECC", Offset = "0x1330ECC", VA = "0x1330ECC")]
	public void BattleRoomSelect()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x13310BC", Offset = "0x13310BC", VA = "0x13310BC")]
	public void BattleRoomClean()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x13314EC", Offset = "0x13314EC", VA = "0x13314EC")]
	public void BattleRoomPass(RunningFlowNode fNode)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x1331710", Offset = "0x1331710", VA = "0x1331710")]
	public RunningFlowNode GetRunningFlowNodeById(int id)
	{
		return null;
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x13317B4", Offset = "0x13317B4", VA = "0x13317B4")]
	public RunningFlowNode GetCurRunningFlowNode()
	{
		return null;
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x13317BC", Offset = "0x13317BC", VA = "0x13317BC")]
	public void SyncRoomStatus(RoomType roomType, int valueI_1, int valueI_2, int valueI_3, int valueI_4, int valueI_5, int valueI_6)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x1332110", Offset = "0x1332110", VA = "0x1332110")]
	public void EnterInstance()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x1332114", Offset = "0x1332114", VA = "0x1332114")]
	public bool SelectInstance(int instanceId, InstanceFlowNode insFlowNode)
	{
		return default(bool);
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x1332970", Offset = "0x1332970", VA = "0x1332970")]
	public FlowNode GetFlowNode(int id)
	{
		return null;
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x13305EC", Offset = "0x13305EC", VA = "0x13305EC")]
	private void StartFlowNode(RunningFlowNode fNode)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x1330530", Offset = "0x1330530", VA = "0x1330530")]
	private void EndFlowNode(RunningFlowNode fNode)
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x1332A88", Offset = "0x1332A88", VA = "0x1332A88")]
	private RunningFlowNode GetLastUseFlowNode()
	{
		return null;
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x1330540", Offset = "0x1330540", VA = "0x1330540")]
	private RunningFlowNode GetCurFlowNode()
	{
		return null;
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x1330340", Offset = "0x1330340", VA = "0x1330340")]
	private void unitHurt()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x1331248", Offset = "0x1331248", VA = "0x1331248")]
	private void unitNoHurt()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x132FF30", Offset = "0x132FF30", VA = "0x132FF30")]
	public void PlatformNewDataOk()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x1332B40", Offset = "0x1332B40", VA = "0x1332B40")]
	public void SyncInstanceViewStatus(int status, int capitalId)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x13305F8", Offset = "0x13305F8", VA = "0x13305F8")]
	public void SendSelectInstanceStatus(bool isUIOperate)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x1332C04", Offset = "0x1332C04", VA = "0x1332C04")]
	public GameFlowSystem()
	{
	}
}
[Token(Token = "0x2000102")]
public enum RoomType
{
	[Token(Token = "0x40006B8")]
	None,
	[Token(Token = "0x40006B9")]
	BattleRoom,
	[Token(Token = "0x40006BA")]
	PreparedRoom
}
[Token(Token = "0x2000103")]
public class GameStageSystem : Singleton<GameStageSystem>
{
	[Serializable]
	[Token(Token = "0x2000549")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4A40", Offset = "0xEE4A40")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<WUnit> <>9__18_0;

		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<WUnit> <>9__20_0;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__31_2;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action <>9__31_3;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action <>9__35_0;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action <>9__36_0;

		[Token(Token = "0x6002B15")]
		[Address(RVA = "0x133A674", Offset = "0x133A674", VA = "0x133A674")]
		public <>c()
		{
		}

		[Token(Token = "0x6002B16")]
		[Address(RVA = "0x133A67C", Offset = "0x133A67C", VA = "0x133A67C")]
		internal void <DoInit>b__18_0(WUnit u)
		{
		}

		[Token(Token = "0x6002B17")]
		[Address(RVA = "0x133A760", Offset = "0x133A760", VA = "0x133A760")]
		internal void <DoStart>b__20_0(WUnit u)
		{
		}

		[Token(Token = "0x6002B18")]
		[Address(RVA = "0x133A844", Offset = "0x133A844", VA = "0x133A844")]
		internal void <SyncBattleRoomStatus>b__31_2()
		{
		}

		[Token(Token = "0x6002B19")]
		[Address(RVA = "0x133A8C0", Offset = "0x133A8C0", VA = "0x133A8C0")]
		internal void <SyncBattleRoomStatus>b__31_3()
		{
		}

		[Token(Token = "0x6002B1A")]
		[Address(RVA = "0x133A93C", Offset = "0x133A93C", VA = "0x133A93C")]
		internal void <GotoPreparedeRoom>b__35_0()
		{
		}

		[Token(Token = "0x6002B1B")]
		[Address(RVA = "0x133A9C8", Offset = "0x133A9C8", VA = "0x133A9C8")]
		internal void <RollBackPreparedeRoom>b__36_0()
		{
		}
	}

	[Token(Token = "0x200054A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4A50", Offset = "0xEE4A50")]
	private sealed class <>c__DisplayClass31_0
	{
		[Token(Token = "0x4001F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RoleSectionStatus fRoomStatus;

		[Token(Token = "0x4001F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public RoleSectionStatus preStatus;

		[Token(Token = "0x4001F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameStageSystem <>4__this;

		[Token(Token = "0x4001F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlowNode node;

		[Token(Token = "0x4001F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int sceneConfigId;

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool isBoss;

		[Token(Token = "0x6002B1C")]
		[Address(RVA = "0x1339738", Offset = "0x1339738", VA = "0x1339738")]
		public <>c__DisplayClass31_0()
		{
		}

		[Token(Token = "0x6002B1D")]
		[Address(RVA = "0x133AA54", Offset = "0x133AA54", VA = "0x133AA54")]
		internal void <SyncBattleRoomStatus>b__0()
		{
		}

		[Token(Token = "0x6002B1E")]
		[Address(RVA = "0x133ACAC", Offset = "0x133ACAC", VA = "0x133ACAC")]
		internal void <SyncBattleRoomStatus>b__1()
		{
		}
	}

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isStart;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterMono controlMono;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RoomType roomType;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SSlidingRule rule;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SSlidingBlock block;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6A34", Offset = "0xEE6A34")]
	private int <Level>k__BackingField;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<List<FSMBattleRoom>> OnRoomResetPre;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Func<bool> KillCurrentEnemysCheck;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Func<bool> KillBossCheck;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action OnAllTeleport;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<FlowNode> OnAllTeleportWithRoomId;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action OnAllRollBack;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<FlowNode> OnKillCurrentEnemys;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Action<FlowNode> OnSelectInstance;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action<FlowNode> OnPassCurrentRoom;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action<FlowNode> OnPassCurrentRoomLoadEnd;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Action<int> OnAllEnter;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Action<SSlidingRuleSection> OnRoomUnLoadPre;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Action OnCharRollBack;

	[Token(Token = "0x1700009E")]
	public RoomType RoomType
	{
		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x1339180", Offset = "0x1339180", VA = "0x1339180")]
		get
		{
			return default(RoomType);
		}
		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x1339188", Offset = "0x1339188", VA = "0x1339188")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public int CurrentRoomID
	{
		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x1339190", Offset = "0x1339190", VA = "0x1339190")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000A0")]
	public SSlidingRuleSection CurrentRoom
	{
		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x13391AC", Offset = "0x13391AC", VA = "0x13391AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A1")]
	public SSlidingSeparateSection SafeRoom
	{
		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x13391C8", Offset = "0x13391C8", VA = "0x13391C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A2")]
	public int Level
	{
		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x13391E4", Offset = "0x13391E4", VA = "0x13391E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDC58", Offset = "0xEEDC58")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x13391EC", Offset = "0x13391EC", VA = "0x13391EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDC68", Offset = "0xEEDC68")]
		set
		{
		}
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x13347C4", Offset = "0x13347C4", VA = "0x13347C4")]
	public void DoInit()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x13391F4", Offset = "0x13391F4", VA = "0x13391F4")]
	public bool IsGameStatusEnd()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x132FA34", Offset = "0x132FA34", VA = "0x132FA34")]
	public void DoStart()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x1339350", Offset = "0x1339350", VA = "0x1339350")]
	public void DoStop()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x1333020", Offset = "0x1333020", VA = "0x1333020")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x13395A8", Offset = "0x13395A8", VA = "0x13395A8")]
	public void SendRoleRoom(int uid, int roomId)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x1330DC0", Offset = "0x1330DC0", VA = "0x1330DC0")]
	public void SendGotoCurrentBattleRoom(int flowNodeId, int bId, int fId, int nId)
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x1330814", Offset = "0x1330814", VA = "0x1330814")]
	public void SendGotoPreparedRoomStatus(RoleSectionStatus status, int uid, int gotoId, bool isSelect)
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x1331438", Offset = "0x1331438", VA = "0x1331438")]
	public void BattleRoomClean(int flowNodeId, int bId, int fId, int nId)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x1331008", Offset = "0x1331008", VA = "0x1331008")]
	public void BattleRoomSelect(int flowNodeId, int bId, int fId, int nId)
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x1331604", Offset = "0x1331604", VA = "0x1331604")]
	public void BattleRoomPass(int flowNodeId, int bId, int fId, int nId)
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x1339624", Offset = "0x1339624", VA = "0x1339624")]
	public void SyncRoleRoom(int uid, int roomId)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x13319D4", Offset = "0x13319D4", VA = "0x13319D4")]
	public void SyncBattleRoomStatus(RoomType roomType, int flowNodeId, int bRoomId, int fRoomId, int nRoomId, RoleSectionStatus fRoomStatus, int trsfValue)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x1331CF0", Offset = "0x1331CF0", VA = "0x1331CF0")]
	public void SyncPreparedRoomStatus(RoomType roomType, RoleSectionStatus status, int uid, int gotoId)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x1339740", Offset = "0x1339740", VA = "0x1339740")]
	private void NetTeleport(bool state)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x1339CC0", Offset = "0x1339CC0", VA = "0x1339CC0")]
	public void OnPlayerTeleportEnd()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x1339D50", Offset = "0x1339D50", VA = "0x1339D50")]
	public void GotoPreparedeRoom(bool isLoadScene = true)
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x1339B4C", Offset = "0x1339B4C", VA = "0x1339B4C")]
	public void RollBackPreparedeRoom()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x1339ECC", Offset = "0x1339ECC", VA = "0x1339ECC")]
	public void AllRollBack()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x1339F04", Offset = "0x1339F04", VA = "0x1339F04")]
	public void OnPlayerTeleportBack()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x1339FA4", Offset = "0x1339FA4", VA = "0x1339FA4")]
	public void NetKillCurrentEnemys(FlowNode node)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x133A1F4", Offset = "0x133A1F4", VA = "0x133A1F4")]
	public void NetSelectInstance(FlowNode node)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x133993C", Offset = "0x133993C", VA = "0x133993C")]
	public void NetPassCurrentRoom(FlowNode node)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x133A404", Offset = "0x133A404", VA = "0x133A404")]
	public void EnterCurrentRoomAfterLoadScene(FlowNode node)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x133A53C", Offset = "0x133A53C", VA = "0x133A53C")]
	public GameStageSystem()
	{
	}
}
[Token(Token = "0x2000104")]
public class SSlidingBlock
{
	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6A44", Offset = "0xEE6A44")]
	private RoleSectionStatus <FrontRoomStatus>k__BackingField;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6A54", Offset = "0xEE6A54")]
	private int <FrontRoomID>k__BackingField;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6A64", Offset = "0xEE6A64")]
	private SSlidingRuleSection <FrontSection>k__BackingField;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6A74", Offset = "0xEE6A74")]
	private int <BackRoomID>k__BackingField;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6A84", Offset = "0xEE6A84")]
	private SSlidingRuleSection <BackSection>k__BackingField;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6A94", Offset = "0xEE6A94")]
	private int <NextRoomID>k__BackingField;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6AA4", Offset = "0xEE6AA4")]
	private SSlidingRuleSection <NextSection>k__BackingField;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE6AB4", Offset = "0xEE6AB4")]
	private SSlidingSeparateSection <SeparateSection>k__BackingField;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SSlidingRule rule;

	[Token(Token = "0x170000A3")]
	public RoleSectionStatus FrontRoomStatus
	{
		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x13C45A0", Offset = "0x13C45A0", VA = "0x13C45A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDC78", Offset = "0xEEDC78")]
		get
		{
			return default(RoleSectionStatus);
		}
		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x13C45A8", Offset = "0x13C45A8", VA = "0x13C45A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDC88", Offset = "0xEEDC88")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public int FrontRoomID
	{
		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x13C45B0", Offset = "0x13C45B0", VA = "0x13C45B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDC98", Offset = "0xEEDC98")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x13C45B8", Offset = "0x13C45B8", VA = "0x13C45B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDCA8", Offset = "0xEEDCA8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public SSlidingRuleSection FrontSection
	{
		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x13C45C0", Offset = "0x13C45C0", VA = "0x13C45C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDCB8", Offset = "0xEEDCB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x13C45C8", Offset = "0x13C45C8", VA = "0x13C45C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDCC8", Offset = "0xEEDCC8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public int BackRoomID
	{
		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x13C45D0", Offset = "0x13C45D0", VA = "0x13C45D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDCD8", Offset = "0xEEDCD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x13C45D8", Offset = "0x13C45D8", VA = "0x13C45D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDCE8", Offset = "0xEEDCE8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public SSlidingRuleSection BackSection
	{
		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x13C45E0", Offset = "0x13C45E0", VA = "0x13C45E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDCF8", Offset = "0xEEDCF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x13C45E8", Offset = "0x13C45E8", VA = "0x13C45E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDD08", Offset = "0xEEDD08")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public int NextRoomID
	{
		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x13C45F0", Offset = "0x13C45F0", VA = "0x13C45F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDD18", Offset = "0xEEDD18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x13C45F8", Offset = "0x13C45F8", VA = "0x13C45F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDD28", Offset = "0xEEDD28")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public SSlidingRuleSection NextSection
	{
		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x13C4600", Offset = "0x13C4600", VA = "0x13C4600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDD38", Offset = "0xEEDD38")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x13C4608", Offset = "0x13C4608", VA = "0x13C4608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDD48", Offset = "0xEEDD48")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public SSlidingSeparateSection SeparateSection
	{
		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x13C4610", Offset = "0x13C4610", VA = "0x13C4610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDD58", Offset = "0xEEDD58")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x13C4618", Offset = "0x13C4618", VA = "0x13C4618")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDD68", Offset = "0xEEDD68")]
		private set
		{
		}
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x13C4620", Offset = "0x13C4620", VA = "0x13C4620")]
	public void Init(SSlidingRule rule)
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x13C46B0", Offset = "0x13C46B0", VA = "0x13C46B0")]
	public void Start()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x13C4CF8", Offset = "0x13C4CF8", VA = "0x13C4CF8")]
	public void Stop()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x13C4D04", Offset = "0x13C4D04", VA = "0x13C4D04")]
	public void SendSlidingRoomStatus(int flowNodeId, int bRoomId, int fRoomId, int nRoomId, RoleSectionStatus fRoomStatus, bool isTransfer)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x13C5194", Offset = "0x13C5194", VA = "0x13C5194")]
	public void SetRoomClean(int flowNodeId, int bId, int fId, int nId)
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x13C51A0", Offset = "0x13C51A0", VA = "0x13C51A0")]
	public void SetRoomSelect(int flowNodeId, int bId, int fId, int nId)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x13C51AC", Offset = "0x13C51AC", VA = "0x13C51AC")]
	public void SetRoomPass(int flowNodeId, int bId, int fId, int nId)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x13C51B8", Offset = "0x13C51B8", VA = "0x13C51B8")]
	public void GotoBattleRoom(int flowNodeId, int bId, int fId, int nId)
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x13C51C4", Offset = "0x13C51C4", VA = "0x13C51C4")]
	public void GotoPreparedRoom()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x13C51C8", Offset = "0x13C51C8", VA = "0x13C51C8")]
	public bool ToTransfer(int value)
	{
		return default(bool);
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x13C518C", Offset = "0x13C518C", VA = "0x13C518C")]
	private int TransferTo(bool isTrsf)
	{
		return default(int);
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x13C46F4", Offset = "0x13C46F4", VA = "0x13C46F4")]
	public void SetBattleRoom(int flowNodeId, bool isTransfer, int bRoomId, int fRoomId, int nRoomId, RoleSectionStatus fRoomStatus)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x13C466C", Offset = "0x13C466C", VA = "0x13C466C")]
	public void SetPreparedRoom(RoleSectionStatus status, int gotoId)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x13C5760", Offset = "0x13C5760", VA = "0x13C5760")]
	private void SetTeleporter(SSlidingRuleSection curSection, SSlidingRuleSection nextSection)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x13C5A04", Offset = "0x13C5A04", VA = "0x13C5A04")]
	private void SetPlayerPos(SSlidingRuleSection backSection, SSlidingRuleSection curSection)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x13C629C", Offset = "0x13C629C", VA = "0x13C629C")]
	public SSlidingBlock()
	{
	}
}
[Token(Token = "0x2000105")]
public class SSlidingRule
{
	[Token(Token = "0x200054B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4A60", Offset = "0xEE4A60")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4001F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x6002B1F")]
		[Address(RVA = "0x13C6704", Offset = "0x13C6704", VA = "0x13C6704")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6002B20")]
		[Address(RVA = "0x13C6790", Offset = "0x13C6790", VA = "0x13C6790")]
		internal bool <GetRuleSection>b__0(SSlidingRuleSection a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<SSlidingRuleSection> sectionList;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SSlidingSeparateSection separateSection;

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x13C62A4", Offset = "0x13C62A4", VA = "0x13C62A4")]
	public void Init(Transform root)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x13C63EC", Offset = "0x13C63EC", VA = "0x13C63EC")]
	public void Start()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x13C6490", Offset = "0x13C6490", VA = "0x13C6490")]
	public void Stop()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x13C657C", Offset = "0x13C657C", VA = "0x13C657C")]
	public void Unint()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x13C5348", Offset = "0x13C5348", VA = "0x13C5348")]
	public void SetRuleSectionStatus(int id, RoleSectionStatus status)
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x13C6580", Offset = "0x13C6580", VA = "0x13C6580")]
	private void SetRuleSectionStatus(SSlidingRuleSection section, RoleSectionStatus status)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x13C54C4", Offset = "0x13C54C4", VA = "0x13C54C4")]
	public void SetSeparateSectionStatus(RoleSectionStatus status, int curSectionId)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x13C5370", Offset = "0x13C5370", VA = "0x13C5370")]
	public void OtherRoomsExit(int frontId)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x13C51D4", Offset = "0x13C51D4", VA = "0x13C51D4")]
	public SSlidingRuleSection GetRuleSection(int id)
	{
		return null;
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x13C670C", Offset = "0x13C670C", VA = "0x13C670C")]
	public SSlidingSeparateSection GetSeparateSection()
	{
		return null;
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x13C6714", Offset = "0x13C6714", VA = "0x13C6714")]
	public SSlidingRule()
	{
	}
}
[Token(Token = "0x2000106")]
public enum RoleSectionStatus
{
	[Token(Token = "0x40006DA")]
	Enter,
	[Token(Token = "0x40006DB")]
	Clean,
	[Token(Token = "0x40006DC")]
	Select,
	[Token(Token = "0x40006DD")]
	Exit
}
[Token(Token = "0x2000107")]
public class SSlidingRuleSection : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200054C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4A70", Offset = "0xEE4A70")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<WUnit> <>9__18_0;

		[Token(Token = "0x6002B22")]
		[Address(RVA = "0x1251CF8", Offset = "0x1251CF8", VA = "0x1251CF8")]
		public <>c()
		{
		}

		[Token(Token = "0x6002B23")]
		[Address(RVA = "0x1251D00", Offset = "0x1251D00", VA = "0x1251D00")]
		internal int <GetStandModeTelep>b__18_0(WUnit a, WUnit b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ID;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Teleporter Teleporter;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BirthTeleporter BirthTeleporter;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform AreaPanel;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] StandModeTeleps;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isActive;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static char[] numChar;

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x13C67B4", Offset = "0x13C67B4", VA = "0x13C67B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x13C63C4", Offset = "0x13C63C4", VA = "0x13C63C4")]
	public void Init()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x13C648C", Offset = "0x13C648C", VA = "0x13C648C")]
	public void DoStart()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x13C6578", Offset = "0x13C6578", VA = "0x13C6578")]
	public void DoStop()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x13C6670", Offset = "0x13C6670", VA = "0x13C6670")]
	public void Enter()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x13C66A0", Offset = "0x13C66A0", VA = "0x13C66A0")]
	public void Select()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x13C669C", Offset = "0x13C669C", VA = "0x13C669C")]
	public void Clean()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x13C66E4", Offset = "0x13C66E4", VA = "0x13C66E4")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x13C6974", Offset = "0x13C6974", VA = "0x13C6974")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x13C697C", Offset = "0x13C697C", VA = "0x13C697C")]
	private void SetActive(bool isActive)
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x13C6988", Offset = "0x13C6988", VA = "0x13C6988")]
	public bool CheckTeleporterReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x13C6034", Offset = "0x13C6034", VA = "0x13C6034")]
	public Transform GetStandModeTelep(WUnit unit)
	{
		return null;
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x13C6A2C", Offset = "0x13C6A2C", VA = "0x13C6A2C")]
	public SSlidingRuleSection()
	{
	}
}
[Token(Token = "0x2000108")]
public class SSlidingSeparateSection : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200054D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4A80", Offset = "0xEE4A80")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<WUnit> <>9__20_0;

		[Token(Token = "0x6002B25")]
		[Address(RVA = "0x1252788", Offset = "0x1252788", VA = "0x1252788")]
		public <>c()
		{
		}

		[Token(Token = "0x6002B26")]
		[Address(RVA = "0x1252790", Offset = "0x1252790", VA = "0x1252790")]
		internal int <GetStandModeTelep>b__20_0(WUnit a, WUnit b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform AreaPanel;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MainTeleporter MainTel;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] StandModeTeleps;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isEnter;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isStart;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xEE6AC4", Offset = "0xEE6AC4")]
	private (Vector3, Quaternion, Vector3) originalInfo;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CharacterMono controlMono;

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x1251D28", Offset = "0x1251D28", VA = "0x1251D28")]
	public void Init()
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x1251D90", Offset = "0x1251D90", VA = "0x1251D90")]
	public void DoStart()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x1251E64", Offset = "0x1251E64", VA = "0x1251E64")]
	public void DoStop()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x1251F64", Offset = "0x1251F64", VA = "0x1251F64")]
	public void Enter()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x1251FFC", Offset = "0x1251FFC", VA = "0x1251FFC")]
	public void Select()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x1252034", Offset = "0x1252034", VA = "0x1252034")]
	public void Exit()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x125203C", Offset = "0x125203C", VA = "0x125203C")]
	public bool IsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x1252030", Offset = "0x1252030", VA = "0x1252030")]
	private void SetActive(bool isActive)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x1252044", Offset = "0x1252044", VA = "0x1252044")]
	private void Update()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x1251DD8", Offset = "0x1251DD8", VA = "0x1251DD8")]
	public void ResetStatus()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x125218C", Offset = "0x125218C", VA = "0x125218C")]
	public void AdjustMainTeleporterTR(Vector3 localPos, Quaternion rot, Vector3 scale)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x125237C", Offset = "0x125237C", VA = "0x125237C")]
	public bool CheckTeleporterReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x12520DC", Offset = "0x12520DC", VA = "0x12520DC")]
	private void UpdateCheckPreRoom()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x12524B0", Offset = "0x12524B0", VA = "0x12524B0")]
	public Transform GetStandModeTelep(WUnit unit)
	{
		return null;
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x1252718", Offset = "0x1252718", VA = "0x1252718")]
	public SSlidingSeparateSection()
	{
	}
}
[Token(Token = "0x2000109")]
public abstract class BaseGear : MonoBehaviour, IGear
{
	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Id;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> RoomIdList;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected e_group_type groupType;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool workInTheGame;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private UnityEvent onGearInit;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private UnityEvent onGearUnInit;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private UnityEvent onGearStart;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private UnityEvent onGearStop;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected bool isStart;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	protected bool isEnable;

	[Token(Token = "0x170000AB")]
	public e_group_type GroupType
	{
		[Token(Token = "0x6000718")]
		[Address(RVA = "0x1562B84", Offset = "0x1562B84", VA = "0x1562B84")]
		get
		{
			return default(e_group_type);
		}
	}

	[Token(Token = "0x170000AC")]
	protected bool IsStart
	{
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x1562B8C", Offset = "0x1562B8C", VA = "0x1562B8C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600071A")]
		[Address(RVA = "0x1562B94", Offset = "0x1562B94", VA = "0x1562B94")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	protected bool IsEnable
	{
		[Token(Token = "0x600071B")]
		[Address(RVA = "0x1562BA0", Offset = "0x1562BA0", VA = "0x1562BA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600071C")]
		[Address(RVA = "0x1562BA8", Offset = "0x1562BA8", VA = "0x1562BA8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public bool WorkInTheGame
	{
		[Token(Token = "0x600071D")]
		[Address(RVA = "0x1562BB4", Offset = "0x1562BB4", VA = "0x1562BB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600071E")]
		[Address(RVA = "0x1562BBC", Offset = "0x1562BBC", VA = "0x1562BBC")]
		private set
		{
		}
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x1562BC8", Offset = "0x1562BC8", VA = "0x1562BC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x1562C78", Offset = "0x1562C78", VA = "0x1562C78")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x1562D28", Offset = "0x1562D28", VA = "0x1562D28", Slot = "4")]
	public int GetID()
	{
		return default(int);
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x1562BCC", Offset = "0x1562BCC", VA = "0x1562BCC")]
	private void Init()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x1562C7C", Offset = "0x1562C7C", VA = "0x1562C7C")]
	private void UnInit()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x15616E0", Offset = "0x15616E0", VA = "0x15616E0", Slot = "16")]
	public virtual void GearInit()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x1562D30", Offset = "0x1562D30", VA = "0x1562D30", Slot = "17")]
	public virtual void GearUnInit()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x15617A4", Offset = "0x15617A4", VA = "0x15617A4", Slot = "18")]
	public virtual void GearStart()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x1561998", Offset = "0x1561998", VA = "0x1561998", Slot = "19")]
	public virtual void GearStop()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x1562D4C", Offset = "0x1562D4C", VA = "0x1562D4C", Slot = "20")]
	public virtual void GearReset()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x1562D50", Offset = "0x1562D50", VA = "0x1562D50", Slot = "21")]
	public virtual void GearEnable(bool isEnable)
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x1562D5C", Offset = "0x1562D5C", VA = "0x1562D5C", Slot = "22")]
	public virtual void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x1562D60", Offset = "0x1562D60", VA = "0x1562D60", Slot = "23")]
	public virtual void GetStatus(out e_GearHandleStatus_type status, out int prm1, out int prm2)
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x1562D74", Offset = "0x1562D74", VA = "0x1562D74", Slot = "13")]
	public List<int> GetRoomIdList()
	{
		return null;
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x1562D7C", Offset = "0x1562D7C", VA = "0x1562D7C", Slot = "14")]
	public bool IsGearStart()
	{
		return default(bool);
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x1562D84", Offset = "0x1562D84", VA = "0x1562D84", Slot = "15")]
	public bool IsGearEnable()
	{
		return default(bool);
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x1562D8C", Offset = "0x1562D8C", VA = "0x1562D8C", Slot = "24")]
	public virtual void SetRoomStatus(int roomId)
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x1561D24", Offset = "0x1561D24", VA = "0x1561D24")]
	protected BaseGear()
	{
	}
}
[Token(Token = "0x200010A")]
public abstract class BaseHurtGear : BaseGear
{
	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected UnityEvent onGearBroken;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	protected int hp;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	protected bool isSameGroupDamage;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _damage;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool isBroken;

	[Token(Token = "0x170000AF")]
	public bool IsSameGroupDamage
	{
		[Token(Token = "0x6000731")]
		[Address(RVA = "0x1562ED4", Offset = "0x1562ED4", VA = "0x1562ED4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000B0")]
	public int Damage
	{
		[Token(Token = "0x6000732")]
		[Address(RVA = "0x1562EDC", Offset = "0x1562EDC", VA = "0x1562EDC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000733")]
		[Address(RVA = "0x1562EE4", Offset = "0x1562EE4", VA = "0x1562EE4")]
		set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	protected bool IsBroken
	{
		[Token(Token = "0x6000734")]
		[Address(RVA = "0x1562EEC", Offset = "0x1562EEC", VA = "0x1562EEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000735")]
		[Address(RVA = "0x1562EF4", Offset = "0x1562EF4", VA = "0x1562EF4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x1562F00", Offset = "0x1562F00", VA = "0x1562F00", Slot = "25")]
	public virtual void GearHurt(e_group_type ackGroupType, int damage, Vector3 atkDir)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x155978C", Offset = "0x155978C", VA = "0x155978C", Slot = "26")]
	public virtual void DoGearBrokenEffect()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x15630BC", Offset = "0x15630BC", VA = "0x15630BC", Slot = "22")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x1563138", Offset = "0x1563138", VA = "0x1563138", Slot = "23")]
	public override void GetStatus(out e_GearHandleStatus_type status, out int hp, out int maxHp)
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x1559418", Offset = "0x1559418", VA = "0x1559418", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x15594DC", Offset = "0x15594DC", VA = "0x15594DC", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x15596B0", Offset = "0x15596B0", VA = "0x15596B0", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x1559A28", Offset = "0x1559A28", VA = "0x1559A28")]
	protected BaseHurtGear()
	{
	}
}
[Token(Token = "0x200010B")]
public class GearManager : Singleton<GearManager>
{
	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public HashSet<IGear> gearList;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<e_group_type, Dictionary<int, IGear>> gearDic;

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x126BA80", Offset = "0x126BA80", VA = "0x126BA80")]
	public void RegisterGear(e_group_type group, int id, IGear gear)
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x126BF8C", Offset = "0x126BF8C", VA = "0x126BF8C")]
	public void UnRegisterGear(e_group_type group, int id, IGear gear)
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x126C2F8", Offset = "0x126C2F8", VA = "0x126C2F8")]
	public void SetAllReset()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x126C2FC", Offset = "0x126C2FC", VA = "0x126C2FC")]
	public void SetAllStart()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x126C300", Offset = "0x126C300", VA = "0x126C300")]
	public void HandleGearStatus(e_group_type group, int id, e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x126C508", Offset = "0x126C508", VA = "0x126C508")]
	public IGear GetGear(e_group_type group, int id)
	{
		return null;
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x126C77C", Offset = "0x126C77C", VA = "0x126C77C")]
	public void SyncGearStateToClient(int sessionId, e_group_type group, int id)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x126CA4C", Offset = "0x126CA4C", VA = "0x126CA4C")]
	public GearManager()
	{
	}
}
[Token(Token = "0x200010C")]
public enum e_GearHandleStatus_type
{
	[Token(Token = "0x40006FE")]
	None = 0,
	[Token(Token = "0x40006FF")]
	Hurt = 1,
	[Token(Token = "0x4000700")]
	Die = 2,
	[Token(Token = "0x4000701")]
	status1 = 100,
	[Token(Token = "0x4000702")]
	status2 = 101,
	[Token(Token = "0x4000703")]
	status3 = 102
}
[Token(Token = "0x200010D")]
public interface IGear
{
	[Token(Token = "0x6000746")]
	int GetID();

	[Token(Token = "0x6000747")]
	void GearInit();

	[Token(Token = "0x6000748")]
	void GearUnInit();

	[Token(Token = "0x6000749")]
	void GearStart();

	[Token(Token = "0x600074A")]
	void GearStop();

	[Token(Token = "0x600074B")]
	void GearEnable(bool isEnable);

	[Token(Token = "0x600074C")]
	void GearReset();

	[Token(Token = "0x600074D")]
	void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion quaternion, params object[] prms);

	[Token(Token = "0x600074E")]
	void GetStatus(out e_GearHandleStatus_type status, out int prm1, out int prm2);

	[Token(Token = "0x600074F")]
	List<int> GetRoomIdList();

	[Token(Token = "0x6000750")]
	bool IsGearStart();

	[Token(Token = "0x6000751")]
	bool IsGearEnable();
}
[Token(Token = "0x200010E")]
public class LanguageManager : Singleton<LanguageManager>
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Action<e_type_language> OnLanguageChange;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<e_type_language, Dictionary<int, string>> languageDic;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, string> curLanguageDic;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private e_type_language curLanguageType;

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x1478210", Offset = "0x1478210", VA = "0x1478210")]
	public void Register(e_type_language type, int id, string str)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x14784C4", Offset = "0x14784C4", VA = "0x14784C4")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x1478530", Offset = "0x1478530", VA = "0x1478530")]
	public void SwitchLanguage(e_type_language type)
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x1478678", Offset = "0x1478678", VA = "0x1478678")]
	public string GetText(int id)
	{
		return null;
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x14788D8", Offset = "0x14788D8", VA = "0x14788D8")]
	public LanguageManager()
	{
	}
}
[Token(Token = "0x200010F")]
public class UILanguageImage : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200054E")]
	public class TextureHotSwitchCell
	{
		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Image Image;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string path;

		[Token(Token = "0x6002B27")]
		[Address(RVA = "0x11DFC14", Offset = "0x11DFC14", VA = "0x11DFC14")]
		public TextureHotSwitchCell()
		{
		}
	}

	[Token(Token = "0x200054F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4A90", Offset = "0xEE4A90")]
	private sealed class <SetText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UILanguageImage <>4__this;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image image;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DownloadHandlerTexture <downloadTexture>5__3;

		[Token(Token = "0x17000432")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B2B")]
			[Address(RVA = "0x11DFBA4", Offset = "0x11DFBA4", VA = "0x11DFBA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000433")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B2D")]
			[Address(RVA = "0x11DFC0C", Offset = "0x11DFC0C", VA = "0x11DFC0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B28")]
		[Address(RVA = "0x11DF86C", Offset = "0x11DF86C", VA = "0x11DF86C")]
		[DebuggerHidden]
		public <SetText>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002B29")]
		[Address(RVA = "0x11DF8A8", Offset = "0x11DF8A8", VA = "0x11DF8A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B2A")]
		[Address(RVA = "0x11DF8AC", Offset = "0x11DF8AC", VA = "0x11DF8AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B2C")]
		[Address(RVA = "0x11DFBAC", Offset = "0x11DFBAC", VA = "0x11DFBAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isMipMap;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public TextureHotSwitchCell[] cells;

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x11DF41C", Offset = "0x11DF41C", VA = "0x11DF41C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x11DF6BC", Offset = "0x11DF6BC", VA = "0x11DF6BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x11DF7BC", Offset = "0x11DF7BC", VA = "0x11DF7BC")]
	private void OnLanguageChange(e_type_language type)
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x11DF55C", Offset = "0x11DF55C", VA = "0x11DF55C")]
	private void HotSwitch(e_type_language type_Language)
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x11DF7C0", Offset = "0x11DF7C0", VA = "0x11DF7C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEDD78", Offset = "0xEEDD78")]
	private IEnumerator SetText(Image image, string path)
	{
		return null;
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x11DF898", Offset = "0x11DF898", VA = "0x11DF898")]
	public UILanguageImage()
	{
	}
}
[Token(Token = "0x2000110")]
public class UILanguageRawImage : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000550")]
	public class TextureHotSwitchCell
	{
		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RawImage Image;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string path;

		[Token(Token = "0x6002B2E")]
		[Address(RVA = "0x11E0390", Offset = "0x11E0390", VA = "0x11E0390")]
		public TextureHotSwitchCell()
		{
		}
	}

	[Token(Token = "0x2000551")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4AA0", Offset = "0xEE4AA0")]
	private sealed class <SetText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string path;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UILanguageRawImage <>4__this;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public RawImage image;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <request>5__2;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DownloadHandlerTexture <downloadTexture>5__3;

		[Token(Token = "0x17000434")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B32")]
			[Address(RVA = "0x11E0320", Offset = "0x11E0320", VA = "0x11E0320", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000435")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B34")]
			[Address(RVA = "0x11E0388", Offset = "0x11E0388", VA = "0x11E0388", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B2F")]
		[Address(RVA = "0x11E006C", Offset = "0x11E006C", VA = "0x11E006C")]
		[DebuggerHidden]
		public <SetText>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002B30")]
		[Address(RVA = "0x11E00A8", Offset = "0x11E00A8", VA = "0x11E00A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B31")]
		[Address(RVA = "0x11E00AC", Offset = "0x11E00AC", VA = "0x11E00AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B33")]
		[Address(RVA = "0x11E0328", Offset = "0x11E0328", VA = "0x11E0328", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isMipMap;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public TextureHotSwitchCell[] cells;

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x11DFC1C", Offset = "0x11DFC1C", VA = "0x11DFC1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x11DFEBC", Offset = "0x11DFEBC", VA = "0x11DFEBC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x11DFFBC", Offset = "0x11DFFBC", VA = "0x11DFFBC")]
	private void OnLanguageChange(e_type_language type)
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x11DFD5C", Offset = "0x11DFD5C", VA = "0x11DFD5C")]
	private void HotSwitch(e_type_language type_Language)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x11DFFC0", Offset = "0x11DFFC0", VA = "0x11DFFC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEDDDC", Offset = "0xEEDDDC")]
	private IEnumerator SetText(RawImage image, string path)
	{
		return null;
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x11E0098", Offset = "0x11E0098", VA = "0x11E0098")]
	public UILanguageRawImage()
	{
	}
}
[Token(Token = "0x2000111")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE09D8", Offset = "0xEE09D8")]
public class UILanguageText : MonoBehaviour
{
	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text t;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int textId;

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x11E0398", Offset = "0x11E0398", VA = "0x11E0398")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x11E039C", Offset = "0x11E039C", VA = "0x11E039C")]
	private void Init()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x11E03FC", Offset = "0x11E03FC", VA = "0x11E03FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x11E05A4", Offset = "0x11E05A4", VA = "0x11E05A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x11E06A4", Offset = "0x11E06A4", VA = "0x11E06A4")]
	private void OnLanguageChange(e_type_language type)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x11E0504", Offset = "0x11E0504", VA = "0x11E0504")]
	private void SetText()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x11E06A8", Offset = "0x11E06A8", VA = "0x11E06A8")]
	public UILanguageText()
	{
	}
}
[Token(Token = "0x2000112")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE0A3C", Offset = "0xEE0A3C")]
public class UILanguageTextMeshPro : MonoBehaviour
{
	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int textId;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshProUGUI TextMeshPro;

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x11E06B0", Offset = "0x11E06B0", VA = "0x11E06B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x11E06B4", Offset = "0x11E06B4", VA = "0x11E06B4")]
	private void Init()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x11E0748", Offset = "0x11E0748", VA = "0x11E0748")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x11E08E8", Offset = "0x11E08E8", VA = "0x11E08E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x11E09E8", Offset = "0x11E09E8", VA = "0x11E09E8")]
	private void OnLanguageChange(e_type_language type)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x11E0850", Offset = "0x11E0850", VA = "0x11E0850")]
	private void SetText()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x11E09EC", Offset = "0x11E09EC", VA = "0x11E09EC")]
	public UILanguageTextMeshPro()
	{
	}
}
[Token(Token = "0x2000113")]
public class PrefabLightmapData : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000552")]
	public class ObjectLightmapData
	{
		[Token(Token = "0x4001F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer renderer;

		[Token(Token = "0x4001F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int lightmapIndex;

		[Token(Token = "0x4001F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector4 lightmapOffsetScale;

		[Token(Token = "0x4001F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int realtimeLightmapIndex;

		[Token(Token = "0x4001F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector4 realtimeLightmapScaleOffset;

		[Token(Token = "0x6002B35")]
		[Address(RVA = "0x1533878", Offset = "0x1533878", VA = "0x1533878")]
		public ObjectLightmapData()
		{
		}
	}

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<int> lightingIndexs;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public List<ObjectLightmapData> objectLightingDatas;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PrefabLightmapManager lightmapManager;

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x1533388", Offset = "0x1533388", VA = "0x1533388")]
	private void Start()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x1533488", Offset = "0x1533488", VA = "0x1533488")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x153379C", Offset = "0x153379C", VA = "0x153379C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x1533618", Offset = "0x1533618", VA = "0x1533618")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x1533870", Offset = "0x1533870", VA = "0x1533870")]
	public PrefabLightmapData()
	{
	}
}
[Token(Token = "0x2000114")]
public class PrefabLightmapManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000553")]
	public class PrefabLightmapDataStruct
	{
		[Token(Token = "0x4001F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string lightmapColor;

		[Token(Token = "0x4001F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string lightmapDir;

		[Token(Token = "0x4001F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string shadowMask;

		[Token(Token = "0x6002B36")]
		[Address(RVA = "0x153484C", Offset = "0x153484C", VA = "0x153484C")]
		public PrefabLightmapDataStruct()
		{
		}
	}

	[Token(Token = "0x2000554")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4AB0", Offset = "0xEE4AB0")]
	private sealed class <RefreshLightmap>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PrefabLightmapManager <>4__this;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] <arrAdd>5__2;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PrefabLightmapDataStruct <dataStruct>5__4;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private LightmapData <data>5__5;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ResourceRequest <texture>5__6;

		[Token(Token = "0x17000436")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B3A")]
			[Address(RVA = "0x15347DC", Offset = "0x15347DC", VA = "0x15347DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000437")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B3C")]
			[Address(RVA = "0x1534844", Offset = "0x1534844", VA = "0x1534844", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B37")]
		[Address(RVA = "0x1533C0C", Offset = "0x1533C0C", VA = "0x1533C0C")]
		[DebuggerHidden]
		public <RefreshLightmap>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002B38")]
		[Address(RVA = "0x1533D14", Offset = "0x1533D14", VA = "0x1533D14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B39")]
		[Address(RVA = "0x1533D18", Offset = "0x1533D18", VA = "0x1533D18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B3B")]
		[Address(RVA = "0x15347E4", Offset = "0x15347E4", VA = "0x15347E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string basePath;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public new string name;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<PrefabLightmapDataStruct> lightmapDataStructs;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<PrefabLightmapData> PrefabLightmapDatas;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LightmapData[] tempLightmapDatas;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<PrefabLightmapData> CurPrefabLightmapDatas;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<int> CurLightmapIndexs;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<int> TempLightmapIndexs;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isInit;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine RefreshLightmap_C;

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x1533880", Offset = "0x1533880", VA = "0x1533880")]
	public void Init()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x1533B8C", Offset = "0x1533B8C", VA = "0x1533B8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x1533560", Offset = "0x1533560", VA = "0x1533560")]
	public void EnableLightmap(PrefabLightmapData data)
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x15337B8", Offset = "0x15337B8", VA = "0x15337B8")]
	public void DisableLightmap(PrefabLightmapData data)
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x1533B18", Offset = "0x1533B18", VA = "0x1533B18")]
	private void DoRefreshLightmap()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x1533B90", Offset = "0x1533B90", VA = "0x1533B90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEDE40", Offset = "0xEEDE40")]
	private IEnumerator RefreshLightmap()
	{
		return null;
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x1533C38", Offset = "0x1533C38", VA = "0x1533C38")]
	public PrefabLightmapManager()
	{
	}
}
[Token(Token = "0x2000115")]
public class LineControl : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000555")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4AC0", Offset = "0xEE4AC0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__11_0;

		[Token(Token = "0x6002B3E")]
		[Address(RVA = "0x147D880", Offset = "0x147D880", VA = "0x147D880")]
		public <>c()
		{
		}

		[Token(Token = "0x6002B3F")]
		[Address(RVA = "0x147D888", Offset = "0x147D888", VA = "0x147D888")]
		internal int <Update>b__11_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float maxDistance;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem endPointEffect;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private XRLineRenderer lineRender;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 endPoint;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int controlPosIndex;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float endPointEffectOffset;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastHit[] temphits;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<RaycastHit> tempSortList;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timer;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float refreshInterval;

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x147D0A0", Offset = "0x147D0A0", VA = "0x147D0A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x147D1E8", Offset = "0x147D1E8", VA = "0x147D1E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x147D74C", Offset = "0x147D74C", VA = "0x147D74C")]
	public LineControl()
	{
	}
}
[Token(Token = "0x2000116")]
public class Logger
{
	[Token(Token = "0x4000727")]
	private const int FilterTag_Default = 1;

	[Token(Token = "0x4000728")]
	public const int FilterTag_Battle = 2;

	[Token(Token = "0x4000729")]
	public const int FilterTag_State = 4;

	[Token(Token = "0x400072A")]
	public const int FilterTag_AI = 8;

	[Token(Token = "0x400072B")]
	public const int FilterTag_Net = 16;

	[Token(Token = "0x400072C")]
	public const int FilterTag_Emitter = 32;

	[Token(Token = "0x170000B2")]
	public static bool IsDebug
	{
		[Token(Token = "0x6000782")]
		[Address(RVA = "0x12DEBE0", Offset = "0x12DEBE0", VA = "0x12DEBE0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000783")]
		[Address(RVA = "0x12DEC48", Offset = "0x12DEC48", VA = "0x12DEC48")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public static bool IsShowTimeMillis
	{
		[Token(Token = "0x6000784")]
		[Address(RVA = "0x12DECB8", Offset = "0x12DECB8", VA = "0x12DECB8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000785")]
		[Address(RVA = "0x12DED20", Offset = "0x12DED20", VA = "0x12DED20")]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public static bool IsDevelopmentBuild
	{
		[Token(Token = "0x6000786")]
		[Address(RVA = "0x12DED90", Offset = "0x12DED90", VA = "0x12DED90")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x12DEAA4", Offset = "0x12DEAA4", VA = "0x12DEAA4")]
	public static void InitLogConfig()
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x12DEB3C", Offset = "0x12DEB3C", VA = "0x12DEB3C")]
	public static void SetFilterTag(int tag, bool isActive)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x12DEDF0", Offset = "0x12DEDF0", VA = "0x12DEDF0")]
	public static void SetFilterTagState(int tagState)
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x12DEE5C", Offset = "0x12DEE5C", VA = "0x12DEE5C")]
	public static string GetIntListStr(List<int> intArray)
	{
		return null;
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x12DEF70", Offset = "0x12DEF70", VA = "0x12DEF70")]
	public static string GetIntArrayStr(int[] intArray)
	{
		return null;
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x12DF094", Offset = "0x12DF094", VA = "0x12DF094")]
	public static string GetByteArrayStr(byte[] byteArray)
	{
		return null;
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x12DF1B8", Offset = "0x12DF1B8", VA = "0x12DF1B8")]
	public static string GetStringArrayStr(string[] stringArray)
	{
		return null;
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x12DF2B0", Offset = "0x12DF2B0", VA = "0x12DF2B0")]
	public Logger()
	{
	}
}
[Token(Token = "0x2000117")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xEE0AA0", Offset = "0xEE0AA0")]
public class MultiMap<T, K, V>
{
	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Dictionary<T, Dictionary<K, V>> dictionary;

	[Token(Token = "0x170000B5")]
	public int Count
	{
		[Token(Token = "0x6000793")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B6")]
	public V Item
	{
		[Token(Token = "0x6000797")]
		get
		{
			return (V)null;
		}
	}

	[Token(Token = "0x170000B7")]
	public Dictionary<K, V> Item
	{
		[Token(Token = "0x6000798")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600078E")]
	public MultiMap()
	{
	}

	[Token(Token = "0x600078F")]
	public Dictionary<T, Dictionary<K, V>> GetDictionary()
	{
		return null;
	}

	[Token(Token = "0x6000790")]
	public void Add(T t, K k, V v)
	{
	}

	[Token(Token = "0x6000791")]
	public KeyValuePair<T, Dictionary<K, V>> First()
	{
		return default(KeyValuePair<T, Dictionary<K, V>>);
	}

	[Token(Token = "0x6000792")]
	public KeyValuePair<K, V> Last(T t)
	{
		return default(KeyValuePair<K, V>);
	}

	[Token(Token = "0x6000794")]
	private Dictionary<K, V> FetchList()
	{
		return null;
	}

	[Token(Token = "0x6000795")]
	public bool Remove(T t, K k)
	{
		return default(bool);
	}

	[Token(Token = "0x6000796")]
	public bool Remove(T t)
	{
		return default(bool);
	}

	[Token(Token = "0x6000799")]
	public bool ContainsKey(T t, K k)
	{
		return default(bool);
	}

	[Token(Token = "0x600079A")]
	public bool ContainsKey(T t)
	{
		return default(bool);
	}

	[Token(Token = "0x600079B")]
	public void Clear()
	{
	}
}
[Token(Token = "0x2000118")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xEE0AD8", Offset = "0xEE0AD8")]
public class MultiSortMap<T, K, V>
{
	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private SortedDictionary<T, SortedDictionary<K, V>> dictionary;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private IComparer<T> t_comparer;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private IComparer<K> k_comparer;

	[Token(Token = "0x170000B8")]
	public int Count
	{
		[Token(Token = "0x60007A1")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000B9")]
	public V Item
	{
		[Token(Token = "0x60007A5")]
		get
		{
			return (V)null;
		}
	}

	[Token(Token = "0x170000BA")]
	public SortedDictionary<K, V> Item
	{
		[Token(Token = "0x60007A6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600079C")]
	public MultiSortMap([Optional] IComparer<T> _t_comparer, [Optional] IComparer<K> _k_comparer)
	{
	}

	[Token(Token = "0x600079D")]
	public SortedDictionary<T, SortedDictionary<K, V>> GetDictionary()
	{
		return null;
	}

	[Token(Token = "0x600079E")]
	public void Add(T t, K k, V v)
	{
	}

	[Token(Token = "0x600079F")]
	public KeyValuePair<T, SortedDictionary<K, V>> First()
	{
		return default(KeyValuePair<T, SortedDictionary<K, V>>);
	}

	[Token(Token = "0x60007A0")]
	public KeyValuePair<K, V> Last(T t)
	{
		return default(KeyValuePair<K, V>);
	}

	[Token(Token = "0x60007A2")]
	private SortedDictionary<K, V> FetchList()
	{
		return null;
	}

	[Token(Token = "0x60007A3")]
	public bool Remove(T t, K k)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A4")]
	public bool Remove(T t)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A7")]
	public bool ContainsKey(T t, K k)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A8")]
	public bool ContainsKey(T t)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A9")]
	public void Clear()
	{
	}

	[Token(Token = "0x60007AA")]
	public SortedDictionary<T, SortedDictionary<K, V>> GetRawMap()
	{
		return null;
	}
}
[Token(Token = "0x2000119")]
public abstract class IObjectRecycle : MonoBehaviour
{
	[Token(Token = "0x60007AB")]
	public abstract void Recycle();

	[Token(Token = "0x60007AC")]
	public abstract void Recover();

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x1282448", Offset = "0x1282448", VA = "0x1282448")]
	protected IObjectRecycle()
	{
	}
}
[Serializable]
[Token(Token = "0x200011A")]
public class ObjectPool
{
	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject pooledObject;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int initSize;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int id;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform parent;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Queue<ObjectPoolCell> pool;

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x1389B34", Offset = "0x1389B34", VA = "0x1389B34")]
	public void Init(int _id, Transform _parent)
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x1389DC8", Offset = "0x1389DC8", VA = "0x1389DC8")]
	public GameObject GetObject()
	{
		return null;
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x1389F64", Offset = "0x1389F64", VA = "0x1389F64")]
	public void RecycleObject(ObjectPoolCell cell)
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x1389CF0", Offset = "0x1389CF0", VA = "0x1389CF0")]
	private ObjectPoolCell InstantiateOnePoolCell()
	{
		return null;
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x138A180", Offset = "0x138A180", VA = "0x138A180")]
	public ObjectPool()
	{
	}
}
[Token(Token = "0x200011B")]
public class ObjectPoolCell : MonoBehaviour
{
	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int id;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool haveRecycling;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject catchGameObject;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform catchTransform;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IObjectRecycle CatchRecycleComponent;

	[Token(Token = "0x170000BB")]
	public int Id
	{
		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x138A190", Offset = "0x138A190", VA = "0x138A190")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x138A198", Offset = "0x138A198", VA = "0x138A198")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	public bool HaveRecycling
	{
		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x138A1A0", Offset = "0x138A1A0", VA = "0x138A1A0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x138A1A8", Offset = "0x138A1A8", VA = "0x138A1A8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	public GameObject CatchGameObject
	{
		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x138A1B4", Offset = "0x138A1B4", VA = "0x138A1B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x138A1BC", Offset = "0x138A1BC", VA = "0x138A1BC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000BE")]
	public Transform CatchTransform
	{
		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x138A1C4", Offset = "0x138A1C4", VA = "0x138A1C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x138A1CC", Offset = "0x138A1CC", VA = "0x138A1CC")]
		private set
		{
		}
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x138A0A0", Offset = "0x138A0A0", VA = "0x138A0A0")]
	public void Init(int _id)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x138A1D4", Offset = "0x138A1D4", VA = "0x138A1D4")]
	public void SetParent(Transform parent)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x1389ECC", Offset = "0x1389ECC", VA = "0x1389ECC")]
	public GameObject Get()
	{
		return null;
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x1389FDC", Offset = "0x1389FDC", VA = "0x1389FDC")]
	public void Recycle(Transform parent)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x138A270", Offset = "0x138A270", VA = "0x138A270")]
	public ObjectPoolCell()
	{
	}
}
[Token(Token = "0x200011C")]
public class ObjectPoolManager : MonoBehaviour
{
	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ObjectPoolManager Instance;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ObjectPool> pools;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, ObjectPool> _pools;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<GameObject, int> _prefabToPoolId;

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x138A280", Offset = "0x138A280", VA = "0x138A280")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x138A3D8", Offset = "0x138A3D8", VA = "0x138A3D8")]
	public void Init()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x138A6DC", Offset = "0x138A6DC", VA = "0x138A6DC")]
	public int RegisterObject(GameObject prefab, int initSize)
	{
		return default(int);
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x138A808", Offset = "0x138A808", VA = "0x138A808")]
	public int RegisterObject(ObjectPool objectPool)
	{
		return default(int);
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x138A99C", Offset = "0x138A99C", VA = "0x138A99C")]
	private GameObject GetObject(int id, [Optional] Vector3 position, [Optional] Quaternion rotation, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x138AB88", Offset = "0x138AB88", VA = "0x138AB88")]
	public GameObject GetObject(GameObject prefab, [Optional] Vector3 position, [Optional] Quaternion rotation, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x138ACC4", Offset = "0x138ACC4", VA = "0x138ACC4")]
	public void DestoryObject(GameObject obj)
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x138AE8C", Offset = "0x138AE8C", VA = "0x138AE8C")]
	private void RecycleObject(ObjectPoolCell cell)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x138AF1C", Offset = "0x138AF1C", VA = "0x138AF1C")]
	public ObjectPoolManager()
	{
	}
}
[Token(Token = "0x200011D")]
public abstract class ControlBase : MonoBehaviour, IGamePlay
{
	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent onPlayEvent;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onResetEvent;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool bInitialized;

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x121D7E0", Offset = "0x121D7E0", VA = "0x121D7E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x121D81C", Offset = "0x121D81C", VA = "0x121D81C", Slot = "7")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x121D820", Offset = "0x121D820", VA = "0x121D820", Slot = "8")]
	public virtual void Play(Action onExplosionComplete)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x121D83C", Offset = "0x121D83C", VA = "0x121D83C", Slot = "9")]
	public virtual void ToDefault()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x121D858", Offset = "0x121D858", VA = "0x121D858")]
	protected ControlBase()
	{
	}
}
[Token(Token = "0x200011E")]
public class EffectControl : ControlBase
{
	[Token(Token = "0x2000556")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4AD0", Offset = "0xEE4AD0")]
	private sealed class <DelayDissolve>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EffectControl <>4__this;

		[Token(Token = "0x17000438")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B43")]
			[Address(RVA = "0x122F9B0", Offset = "0x122F9B0", VA = "0x122F9B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000439")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B45")]
			[Address(RVA = "0x122FA18", Offset = "0x122FA18", VA = "0x122FA18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B40")]
		[Address(RVA = "0x122F66C", Offset = "0x122F66C", VA = "0x122F66C")]
		[DebuggerHidden]
		public <DelayDissolve>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6002B41")]
		[Address(RVA = "0x122F844", Offset = "0x122F844", VA = "0x122F844", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B42")]
		[Address(RVA = "0x122F848", Offset = "0x122F848", VA = "0x122F848", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B44")]
		[Address(RVA = "0x122F9B8", Offset = "0x122F9B8", VA = "0x122F9B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6C90", Offset = "0xEE6C90")]
	[SerializeField]
	private GameObject effectRoot;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem[] childrenPS;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6CDC", Offset = "0xEE6CDC")]
	[SerializeField]
	private GameObject matRoot;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int childMeshCount;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer[] childrenRender;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string dissolveName;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string emissionName;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Tweener dissolveTween;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Tweener emissionTween;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float dissolveProgress;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float curEmission;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float[] initEmissions;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6D28", Offset = "0xEE6D28")]
	[SerializeField]
	private float dissolveDelay;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float dissolveDuration;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityEvent onDissolveComplete;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private IEnumerator co_dissolve;

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x122ED80", Offset = "0x122ED80", VA = "0x122ED80", Slot = "7")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x122F430", Offset = "0x122F430", VA = "0x122F430", Slot = "9")]
	public override void ToDefault()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x122EDA8", Offset = "0x122EDA8", VA = "0x122EDA8")]
	private void InitParam()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x122F490", Offset = "0x122F490", VA = "0x122F490")]
	public void StartParticleEffect()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x122F4FC", Offset = "0x122F4FC", VA = "0x122F4FC")]
	public void StartDissolve()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x122F5C8", Offset = "0x122F5C8", VA = "0x122F5C8")]
	public void StartEmissionOff()
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x122F54C", Offset = "0x122F54C", VA = "0x122F54C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEDEA4", Offset = "0xEEDEA4")]
	private IEnumerator DelayDissolve()
	{
		return null;
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x122F698", Offset = "0x122F698", VA = "0x122F698")]
	private void SetMatProperty(string name, float amount)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x122F774", Offset = "0x122F774", VA = "0x122F774")]
	public EffectControl()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x122F7F8", Offset = "0x122F7F8", VA = "0x122F7F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDF08", Offset = "0xEEDF08")]
	private float <InitParam>b__18_0()
	{
		return default(float);
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x122F800", Offset = "0x122F800", VA = "0x122F800")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDF18", Offset = "0xEEDF18")]
	private void <InitParam>b__18_1(float x)
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x122F808", Offset = "0x122F808", VA = "0x122F808")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDF28", Offset = "0xEEDF28")]
	private float <InitParam>b__18_2()
	{
		return default(float);
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x122F810", Offset = "0x122F810", VA = "0x122F810")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDF38", Offset = "0xEEDF38")]
	private void <InitParam>b__18_3(float x)
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x122F818", Offset = "0x122F818", VA = "0x122F818")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDF48", Offset = "0xEEDF48")]
	private void <StartEmissionOff>b__21_0()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x122F824", Offset = "0x122F824", VA = "0x122F824")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDF58", Offset = "0xEEDF58")]
	private void <DelayDissolve>b__22_0()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x122F830", Offset = "0x122F830", VA = "0x122F830")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEDF68", Offset = "0xEEDF68")]
	private void <DelayDissolve>b__22_1()
	{
	}
}
[Token(Token = "0x200011F")]
public interface IGamePlay
{
	[Token(Token = "0x60007DE")]
	void Play(Action onExplosionComplete);

	[Token(Token = "0x60007DF")]
	void ToDefault();

	[Token(Token = "0x60007E0")]
	void Initialize();
}
[Token(Token = "0x2000120")]
public interface IPhysics
{
	[Token(Token = "0x60007E1")]
	void Play(Action onExplosionComplete);

	[Token(Token = "0x60007E2")]
	void ToDefault();

	[Token(Token = "0x60007E3")]
	void Initialize();
}
[Token(Token = "0x2000121")]
[ExecuteInEditMode]
public class PhysicalForce : MonoBehaviour
{
	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6D84", Offset = "0xEE6D84")]
	private Transform forceCenter;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6DD0", Offset = "0xEE6DD0")]
	private Vector3 forceOffset;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6E1C", Offset = "0xEE6E1C")]
	private float forceIntensity;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6E68", Offset = "0xEE6E68")]
	private float forceRadius;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 forcePos;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_Theta;

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x1153FC8", Offset = "0x1153FC8", VA = "0x1153FC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x1154058", Offset = "0x1154058", VA = "0x1154058")]
	private void Update()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x1154098", Offset = "0x1154098", VA = "0x1154098")]
	public void SetExplosionForce(Rigidbody rig, float forceScale = 1f, ForceMode mode = ForceMode.Impulse)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x11540D8", Offset = "0x11540D8", VA = "0x11540D8")]
	public void SetWindForce(Rigidbody rig, Vector3 force)
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x11540F4", Offset = "0x11540F4", VA = "0x11540F4")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x11541F4", Offset = "0x11541F4", VA = "0x11541F4")]
	private void DrawCircle(Color m_Color, float radius, Vector3 pos)
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x11544B8", Offset = "0x11544B8", VA = "0x11544B8")]
	public PhysicalForce()
	{
	}
}
[Token(Token = "0x2000122")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE0B20", Offset = "0xEE0B20")]
public abstract class PhysicsBase : MonoBehaviour, IGamePlay
{
	[Token(Token = "0x2000557")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4AE0", Offset = "0xEE4AE0")]
	private sealed class <DelayPlay>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhysicsBase <>4__this;

		[Token(Token = "0x1700043A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B49")]
			[Address(RVA = "0x152D560", Offset = "0x152D560", VA = "0x152D560", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B4B")]
			[Address(RVA = "0x152D5C8", Offset = "0x152D5C8", VA = "0x152D5C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B46")]
		[Address(RVA = "0x152D428", Offset = "0x152D428", VA = "0x152D428")]
		[DebuggerHidden]
		public <DelayPlay>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002B47")]
		[Address(RVA = "0x152D454", Offset = "0x152D454", VA = "0x152D454", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B48")]
		[Address(RVA = "0x152D458", Offset = "0x152D458", VA = "0x152D458", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B4A")]
		[Address(RVA = "0x152D568", Offset = "0x152D568", VA = "0x152D568", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000558")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4AF0", Offset = "0xEE4AF0")]
	private sealed class <DelayComplete>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhysicsBase <>4__this;

		[Token(Token = "0x1700043C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0x1154BD0", Offset = "0x1154BD0", VA = "0x1154BD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B51")]
			[Address(RVA = "0x1154C38", Offset = "0x1154C38", VA = "0x1154C38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B4C")]
		[Address(RVA = "0x1154AC0", Offset = "0x1154AC0", VA = "0x1154AC0")]
		[DebuggerHidden]
		public <DelayComplete>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002B4D")]
		[Address(RVA = "0x1154B00", Offset = "0x1154B00", VA = "0x1154B00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B4E")]
		[Address(RVA = "0x1154B04", Offset = "0x1154B04", VA = "0x1154B04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B50")]
		[Address(RVA = "0x1154BD8", Offset = "0x1154BD8", VA = "0x1154BD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected PhysicalForce mForce;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool bInitialized;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	protected bool bReadyPlay;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onPlayEvent;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent onExplosionEvent;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent onDefaultEvent;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent onDelayCompleteEvent;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Action onEffectCompleteEvent;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6EB4", Offset = "0xEE6EB4")]
	protected float waitTimeForce;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6F00", Offset = "0xEE6F00")]
	protected float delayComplete;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected IEnumerator co_delayPlay;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected IEnumerator co_basePlay;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected IEnumerator co_delayComplete;

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x1154778", Offset = "0x1154778", VA = "0x1154778", Slot = "7")]
	public virtual void Play(Action onAllComplete)
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x11547FC", Offset = "0x11547FC", VA = "0x11547FC")]
	protected void Awake()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x1154838", Offset = "0x1154838", VA = "0x1154838", Slot = "8")]
	public virtual void ToDefault()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x1154894", Offset = "0x1154894", VA = "0x1154894", Slot = "9")]
	public virtual void Initialize()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x11549B4", Offset = "0x11549B4", VA = "0x11549B4")]
	public void OnEffectComplete()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x11549C8", Offset = "0x11549C8", VA = "0x11549C8", Slot = "10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEDF78", Offset = "0xEEDF78")]
	protected virtual IEnumerator DelayPlay()
	{
		return null;
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x1154A44", Offset = "0x1154A44", VA = "0x1154A44", Slot = "11")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEDFDC", Offset = "0xEEDFDC")]
	protected virtual IEnumerator DelayComplete()
	{
		return null;
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x1154AEC", Offset = "0x1154AEC", VA = "0x1154AEC")]
	protected PhysicsBase()
	{
	}
}
[Token(Token = "0x2000123")]
public class PropShock : PhysicsBase
{
	[Token(Token = "0x2000559")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4B00", Offset = "0xEE4B00")]
	private sealed class <DelayPlay>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PropShock <>4__this;

		[Token(Token = "0x4001F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700043E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B55")]
			[Address(RVA = "0x15373A8", Offset = "0x15373A8", VA = "0x15373A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700043F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B57")]
			[Address(RVA = "0x1537410", Offset = "0x1537410", VA = "0x1537410", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B52")]
		[Address(RVA = "0x1536F0C", Offset = "0x1536F0C", VA = "0x1536F0C")]
		[DebuggerHidden]
		public <DelayPlay>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002B53")]
		[Address(RVA = "0x1537148", Offset = "0x1537148", VA = "0x1537148", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B54")]
		[Address(RVA = "0x153714C", Offset = "0x153714C", VA = "0x153714C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B56")]
		[Address(RVA = "0x15373B0", Offset = "0x15373B0", VA = "0x15373B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Joint[] joints;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int jointCount;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3[] anchors;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6F4C", Offset = "0xEE6F4C")]
	private GameObject jointRoot;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Rigidbody rig;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6F98", Offset = "0xEE6F98")]
	private float waitShock;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE6FE4", Offset = "0xEE6FE4")]
	private float breakInterval;

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x1536AC4", Offset = "0x1536AC4", VA = "0x1536AC4", Slot = "7")]
	public override void Play(Action onShockComplete)
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x1536B9C", Offset = "0x1536B9C", VA = "0x1536B9C", Slot = "8")]
	public override void ToDefault()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x1536E90", Offset = "0x1536E90", VA = "0x1536E90", Slot = "10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEF040", Offset = "0xEEF040")]
	protected override IEnumerator DelayPlay()
	{
		return null;
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x1536F38", Offset = "0x1536F38", VA = "0x1536F38", Slot = "9")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x1537138", Offset = "0x1537138", VA = "0x1537138")]
	public PropShock()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x1537140", Offset = "0x1537140", VA = "0x1537140")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF0A4", Offset = "0xEEF0A4")]
	[DebuggerHidden]
	private IEnumerator <>n__0()
	{
		return null;
	}
}
[Token(Token = "0x2000124")]
[ExecuteInEditMode]
public class ShatterExplode : PhysicsBase
{
	[Token(Token = "0x200055A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4B10", Offset = "0xEE4B10")]
	private sealed class <DelayPlay>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShatterExplode <>4__this;

		[Token(Token = "0x17000440")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B5B")]
			[Address(RVA = "0x1266274", Offset = "0x1266274", VA = "0x1266274", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000441")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B5D")]
			[Address(RVA = "0x12662DC", Offset = "0x12662DC", VA = "0x12662DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B58")]
		[Address(RVA = "0x1266108", Offset = "0x1266108", VA = "0x1266108")]
		[DebuggerHidden]
		public <DelayPlay>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6002B59")]
		[Address(RVA = "0x1266150", Offset = "0x1266150", VA = "0x1266150", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B5A")]
		[Address(RVA = "0x1266154", Offset = "0x1266154", VA = "0x1266154", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B5C")]
		[Address(RVA = "0x126627C", Offset = "0x126627C", VA = "0x126627C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE7030", Offset = "0xEE7030")]
	private Transform shatterRoot;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE707C", Offset = "0xEE707C")]
	private bool useRandom;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 initShatterRootPos;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion initShatterRootRot;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject[] children;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Rigidbody[] m_rigs;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Collider[] m_colliders;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int childCount;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3[] initPositions;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion[] initRots;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE70C8", Offset = "0xEE70C8")]
	[SerializeField]
	private bool alwaysShow;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Tweener timeTween;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float progress;

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x1265628", Offset = "0x1265628", VA = "0x1265628", Slot = "7")]
	public override void Play(Action onExplodeComplete)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x12658E4", Offset = "0x12658E4", VA = "0x12658E4", Slot = "8")]
	public override void ToDefault()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x1265A5C", Offset = "0x1265A5C", VA = "0x1265A5C", Slot = "9")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x126608C", Offset = "0x126608C", VA = "0x126608C", Slot = "10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEF0DC", Offset = "0xEEF0DC")]
	protected override IEnumerator DelayPlay()
	{
		return null;
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x12657FC", Offset = "0x12657FC", VA = "0x12657FC")]
	private void SetDynamicStatus(bool isActive)
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x126573C", Offset = "0x126573C", VA = "0x126573C")]
	private void SetMeshStatus(bool isActive)
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x1266134", Offset = "0x1266134", VA = "0x1266134")]
	public ShatterExplode()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x1266148", Offset = "0x1266148", VA = "0x1266148")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF140", Offset = "0xEEF140")]
	[DebuggerHidden]
	private IEnumerator <>n__0()
	{
		return null;
	}
}
[Token(Token = "0x2000125")]
public class StatusControl : ControlBase
{
	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Renderer[] renders;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Collider[] colliders;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Rigidbody[] rigidbodys;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 initPos;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion initRot;

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x12CBE30", Offset = "0x12CBE30", VA = "0x12CBE30", Slot = "7")]
	public override void Initialize()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x12CBE98", Offset = "0x12CBE98", VA = "0x12CBE98")]
	public void OnRenderStatus(bool bActive)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x12CBF14", Offset = "0x12CBF14", VA = "0x12CBF14")]
	public void OnDynamicStatus(bool bDynamic)
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x12CBFEC", Offset = "0x12CBFEC", VA = "0x12CBFEC")]
	public void OnDefaultTran()
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x12CC044", Offset = "0x12CC044", VA = "0x12CC044")]
	public StatusControl()
	{
	}
}
[Token(Token = "0x2000126")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE0B94", Offset = "0xEE0B94")]
public class WindHandle : MonoBehaviour
{
	[Token(Token = "0x200055B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4B20", Offset = "0xEE4B20")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WindHandle <>4__this;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _bWindOn;

		[Token(Token = "0x6002B5E")]
		[Address(RVA = "0x1D7468C", Offset = "0x1D7468C", VA = "0x1D7468C")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6002B5F")]
		[Address(RVA = "0x1D74744", Offset = "0x1D74744", VA = "0x1D74744")]
		internal Vector3 <SetWindState>b__0()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002B60")]
		[Address(RVA = "0x1D74764", Offset = "0x1D74764", VA = "0x1D74764")]
		internal void <SetWindState>b__1(Vector3 x)
		{
		}

		[Token(Token = "0x6002B61")]
		[Address(RVA = "0x1D74784", Offset = "0x1D74784", VA = "0x1D74784")]
		internal void <SetWindState>b__2()
		{
		}

		[Token(Token = "0x6002B62")]
		[Address(RVA = "0x1D747A8", Offset = "0x1D747A8", VA = "0x1D747A8")]
		internal void <SetWindState>b__3()
		{
		}

		[Token(Token = "0x6002B63")]
		[Address(RVA = "0x1D747D0", Offset = "0x1D747D0", VA = "0x1D747D0")]
		internal void <SetWindState>b__4()
		{
		}
	}

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE7144", Offset = "0xEE7144")]
	[SerializeField]
	private Transform rigidbodyRoot;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody[] childRigidbodys;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PhysicalForce forceHandle;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE7190", Offset = "0xEE7190")]
	public Vector3 windForce;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 initForce;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool useRandomWind;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 disturbForce;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE71D8", Offset = "0xEE71D8")]
	[SerializeField]
	private float distScale;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Tweener easeWindTween;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 curProgress;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool bWindOn;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UnityEvent fromLeftWindEvent;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEvent fromRightWindEvent;

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x1D74124", Offset = "0x1D74124", VA = "0x1D74124")]
	private void Start()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x1D74258", Offset = "0x1D74258", VA = "0x1D74258")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x1D743DC", Offset = "0x1D743DC", VA = "0x1D743DC")]
	public void SetWindState(bool _bWindOn)
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x1D74694", Offset = "0x1D74694", VA = "0x1D74694")]
	public void SetWindLeft()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x1D746AC", Offset = "0x1D746AC", VA = "0x1D746AC")]
	public void SetWindRight()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x1D746C4", Offset = "0x1D746C4", VA = "0x1D746C4")]
	public void ToDefault()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x1D74734", Offset = "0x1D74734", VA = "0x1D74734")]
	public WindHandle()
	{
	}
}
[Token(Token = "0x2000127")]
public class DelayAction : MonoBehaviour
{
	[Token(Token = "0x600080D")]
	[Address(RVA = "0x1226500", Offset = "0x1226500", VA = "0x1226500")]
	public void Run(float time, Action action)
	{
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x1226508", Offset = "0x1226508", VA = "0x1226508")]
	public static DelayAction Run(GameObject target, float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x1226594", Offset = "0x1226594", VA = "0x1226594")]
	public DelayAction()
	{
	}
}
[Token(Token = "0x2000128")]
public class NonPhysicalPosition : MonoBehaviour
{
	[Token(Token = "0x200055C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4B30", Offset = "0xEE4B30")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float curTime;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float percent;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float time;

		[Token(Token = "0x4001F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform transf;

		[Token(Token = "0x4001F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NonPhysicalPosition <>4__this;

		[Token(Token = "0x4001F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action finAction;

		[Token(Token = "0x4001F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 curPosition;

		[Token(Token = "0x4001F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion curRotation;

		[Token(Token = "0x6002B64")]
		[Address(RVA = "0x1387E04", Offset = "0x1387E04", VA = "0x1387E04")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002B65")]
		[Address(RVA = "0x1387EA4", Offset = "0x1387EA4", VA = "0x1387EA4")]
		internal bool <LerpReset>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Vector3 position;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public Quaternion rotation;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public bool isRoot;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int bodyPartID;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RagdollPartData processData;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Rigidbody> applyParts;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine cr_reset;

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x1387BDC", Offset = "0x1387BDC", VA = "0x1387BDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x1387CB4", Offset = "0x1387CB4", VA = "0x1387CB4")]
	public void LerpReset(Transform transf, float time, Action finAction)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x1387E0C", Offset = "0x1387E0C", VA = "0x1387E0C")]
	public void ImmediateFinish(Transform transf, Action finAction)
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x1387E9C", Offset = "0x1387E9C", VA = "0x1387E9C")]
	public NonPhysicalPosition()
	{
	}
}
[Token(Token = "0x2000129")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xEE0BF8", Offset = "0xEE0BF8")]
public class RagdollPartData : ScriptableObject
{
	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool partHitEnable;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float partHitRactionTime;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float partHitResetTime;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float partHitForce;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool partHitUseGravity;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float partHitDelay;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool partDieEnable;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float partDieForce;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool partDieHitEnable;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float partDieHitForce;

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x1A421B0", Offset = "0x1A421B0", VA = "0x1A421B0")]
	public RagdollPartData()
	{
	}
}
[Token(Token = "0x200012A")]
public class RagdollTester : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200055D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4B40", Offset = "0xEE4B40")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__10_0;

		[Token(Token = "0x6002B67")]
		[Address(RVA = "0x13AEB7C", Offset = "0x13AEB7C", VA = "0x13AEB7C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002B68")]
		[Address(RVA = "0x13AEB84", Offset = "0x13AEB84", VA = "0x13AEB84")]
		internal void <RayHitOld>b__10_0()
		{
		}
	}

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CameraController cameraController;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject targetGameObject;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hitForce;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string colliderName;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RagdollTools ragdollTools;

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x1A421E8", Offset = "0x1A421E8", VA = "0x1A421E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x1A42354", Offset = "0x1A42354", VA = "0x1A42354")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x1A42518", Offset = "0x1A42518", VA = "0x1A42518")]
	private void Update()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x1A42558", Offset = "0x1A42558", VA = "0x1A42558")]
	private void doHitReaction()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x1A42554", Offset = "0x1A42554", VA = "0x1A42554")]
	private void doDieRagdoll()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x1A42714", Offset = "0x1A42714", VA = "0x1A42714")]
	private void RayHitOld()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x1A42AF0", Offset = "0x1A42AF0", VA = "0x1A42AF0")]
	public RagdollTester()
	{
	}
}
[Token(Token = "0x200012B")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE0C58", Offset = "0xEE0C58")]
public class RagdollTools : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200055E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4B50", Offset = "0xEE4B50")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<CharacterJoint> <>9__28_1;

		[Token(Token = "0x6002B6A")]
		[Address(RVA = "0x13B0BF0", Offset = "0x13B0BF0", VA = "0x13B0BF0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002B6B")]
		[Address(RVA = "0x13B0BF8", Offset = "0x13B0BF8", VA = "0x13B0BF8")]
		internal void <Init>b__28_1(CharacterJoint c)
		{
		}
	}

	[Token(Token = "0x200055F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4B60", Offset = "0xEE4B60")]
	private sealed class <>c__DisplayClass29_0
	{
		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isGravity;

		[Token(Token = "0x6002B6C")]
		[Address(RVA = "0x13AF0FC", Offset = "0x13AF0FC", VA = "0x13AF0FC")]
		public <>c__DisplayClass29_0()
		{
		}

		[Token(Token = "0x6002B6D")]
		[Address(RVA = "0x13B0C18", Offset = "0x13B0C18", VA = "0x13B0C18")]
		internal void <EnableRagdoll>b__0(Rigidbody c)
		{
		}
	}

	[Token(Token = "0x2000560")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4B70", Offset = "0xEE4B70")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float time;

		[Token(Token = "0x4001FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RagdollTools <>4__this;

		[Token(Token = "0x4001FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x6002B6E")]
		[Address(RVA = "0x13AF530", Offset = "0x13AF530", VA = "0x13AF530")]
		public <>c__DisplayClass32_0()
		{
		}
	}

	[Token(Token = "0x2000561")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4B80", Offset = "0xEE4B80")]
	private sealed class <>c__DisplayClass32_1
	{
		[Token(Token = "0x4001FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int componentCounter;

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass32_0 CS$<>8__locals1;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action <>9__1;

		[Token(Token = "0x6002B6F")]
		[Address(RVA = "0x13AF538", Offset = "0x13AF538", VA = "0x13AF538")]
		public <>c__DisplayClass32_1()
		{
		}

		[Token(Token = "0x6002B70")]
		[Address(RVA = "0x13B0D20", Offset = "0x13B0D20", VA = "0x13B0D20")]
		internal void <DisableRagdoll>b__0(Rigidbody c)
		{
		}

		[Token(Token = "0x6002B71")]
		[Address(RVA = "0x13B0EE8", Offset = "0x13B0EE8", VA = "0x13B0EE8")]
		internal void <DisableRagdoll>b__1()
		{
		}
	}

	[Token(Token = "0x2000562")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4B90", Offset = "0xEE4B90")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 velocity;

		[Token(Token = "0x6002B72")]
		[Address(RVA = "0x13AF7FC", Offset = "0x13AF7FC", VA = "0x13AF7FC")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x6002B73")]
		[Address(RVA = "0x13B1028", Offset = "0x13B1028", VA = "0x13B1028")]
		internal void <ApplyVelocity>b__0(Transform child)
		{
		}
	}

	[Token(Token = "0x2000563")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4BA0", Offset = "0xEE4BA0")]
	private sealed class <>c__DisplayClass44_0
	{
		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Rigidbody rig;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RagdollTools <>4__this;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isFullBodyForce;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 dir;

		[Token(Token = "0x4001FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float hitFore;

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public NonPhysicalPosition npp;

		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action cb;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<Transform> <>9__3;

		[Token(Token = "0x6002B74")]
		[Address(RVA = "0x13B0314", Offset = "0x13B0314", VA = "0x13B0314")]
		public <>c__DisplayClass44_0()
		{
		}

		[Token(Token = "0x6002B75")]
		[Address(RVA = "0x13B10EC", Offset = "0x13B10EC", VA = "0x13B10EC")]
		internal void <SwitchDiePart>b__0()
		{
		}

		[Token(Token = "0x6002B76")]
		[Address(RVA = "0x13B1370", Offset = "0x13B1370", VA = "0x13B1370")]
		internal void <SwitchDiePart>b__3(Transform child)
		{
		}

		[Token(Token = "0x6002B77")]
		[Address(RVA = "0x13B1488", Offset = "0x13B1488", VA = "0x13B1488")]
		internal void <SwitchDiePart>b__1()
		{
		}

		[Token(Token = "0x6002B78")]
		[Address(RVA = "0x13B1530", Offset = "0x13B1530", VA = "0x13B1530")]
		internal void <SwitchDiePart>b__2()
		{
		}
	}

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ragdollRoot;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator ani;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HitReaction hitReaction;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public NavMeshAgent navAgent;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Velocity v;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float dieResetTime;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool isAutoReset;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool isDieVelocity;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float dieVelocityFactor;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Rigidbody> rigbodys;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<NonPhysicalPosition> posRecordes;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isRagdoll;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool isProcessing;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine cr_hit;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AnimatorUpdateMode aniUpdateMode;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<GameObject> RagdollDisableObjects;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isDie;

	[Token(Token = "0x40007B3")]
	private const float HIT_LAST_TIME = 1f;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float hitLastTimer;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool isCheckHitRunning;

	[Token(Token = "0x170000BF")]
	public bool IsDie
	{
		[Token(Token = "0x600081C")]
		[Address(RVA = "0x13AEB88", Offset = "0x13AEB88", VA = "0x13AEB88")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x13AEB90", Offset = "0x13AEB90", VA = "0x13AEB90")]
	private void Awake()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x13AEE24", Offset = "0x13AEE24", VA = "0x13AEE24")]
	private void Start()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x13AEE28", Offset = "0x13AEE28", VA = "0x13AEE28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000820")]
	private void MapList<T>(List<T> items, Action<T> action)
	{
	}

	[Token(Token = "0x6000821")]
	private void MapArray<T>(T[] items, Action<T> action)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x13AEBB4", Offset = "0x13AEBB4", VA = "0x13AEBB4")]
	private void InitParts()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x13AECD8", Offset = "0x13AECD8", VA = "0x13AECD8")]
	private void Init()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x13AEE90", Offset = "0x13AEE90", VA = "0x13AEE90")]
	public void EnableRagdoll(Action action, bool isGravity, List<Rigidbody> rigs)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x13AF1E8", Offset = "0x13AF1E8", VA = "0x13AF1E8")]
	public void EnableRagdoll(Action action, bool isGravity)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x13AF1F4", Offset = "0x13AF1F4", VA = "0x13AF1F4")]
	public void EnableRagdoll(Action action)
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x13AF200", Offset = "0x13AF200", VA = "0x13AF200")]
	public void DisableRagdoll(float time, Action action, List<Rigidbody> rigs)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x13AF624", Offset = "0x13AF624", VA = "0x13AF624")]
	public void DisableRagdoll(float time, Action action)
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x13AF62C", Offset = "0x13AF62C", VA = "0x13AF62C")]
	public void DisableRagdoll(float time)
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x13AF638", Offset = "0x13AF638", VA = "0x13AF638")]
	public void DoDie(Action action)
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x13AF6A4", Offset = "0x13AF6A4", VA = "0x13AF6A4")]
	public void Reset(Action action)
	{
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x13AF6E8", Offset = "0x13AF6E8", VA = "0x13AF6E8")]
	public void Reset()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x13AF6F8", Offset = "0x13AF6F8", VA = "0x13AF6F8")]
	public void ApplyVelocity(Vector3 velocity)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x13AF804", Offset = "0x13AF804", VA = "0x13AF804")]
	public Rigidbody GetRigbodyByID(int id)
	{
		return null;
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x13AF92C", Offset = "0x13AF92C", VA = "0x13AF92C")]
	public int GetRandamBodyPartId()
	{
		return default(int);
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x13AF9C0", Offset = "0x13AF9C0", VA = "0x13AF9C0")]
	private NonPhysicalPosition GetPosRecByID(int id)
	{
		return null;
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x13AFAD4", Offset = "0x13AFAD4", VA = "0x13AFAD4")]
	public void DieHit(int ragdollId, Vector3 dir, float hitForce, Action cb)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x13AFDA4", Offset = "0x13AFDA4", VA = "0x13AFDA4")]
	private void DieHit(NonPhysicalPosition npp, Rigidbody rig, Vector3 dir, float hitForce, Action cb)
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x13AFE50", Offset = "0x13AFE50", VA = "0x13AFE50")]
	public void SwitchDiePart(int ragdollId, Vector3 dir, float hitForce, bool isFullBodyForce, Action cb)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x13B031C", Offset = "0x13B031C", VA = "0x13B031C")]
	public void SwitchPartsHit(int ragdollId, Vector3 dir, [Optional] Action cb)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x13B0780", Offset = "0x13B0780", VA = "0x13B0780")]
	public void Hit(Collider collider, Vector3 force, Vector3 point)
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x13B098C", Offset = "0x13B098C", VA = "0x13B098C")]
	public void Die(int ragdollId, Vector3 dir, float hitForce, [Optional] Action cb)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x13B0998", Offset = "0x13B0998", VA = "0x13B0998")]
	public void Die(int ragdollId, Vector3 dir, float hitForce, bool isFullBodyForce, [Optional] Action cb)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x13AEE2C", Offset = "0x13AEE2C", VA = "0x13AEE2C")]
	private void CheckHitDeadTime()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x13AF540", Offset = "0x13AF540", VA = "0x13AF540")]
	private void EnableIK()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x13AF104", Offset = "0x13AF104", VA = "0x13AF104")]
	private void DisableIK()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x13B0888", Offset = "0x13B0888", VA = "0x13B0888")]
	private void SetIKWeight(float weight)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x13B09A0", Offset = "0x13B09A0", VA = "0x13B09A0")]
	public RagdollTools()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x13B09C0", Offset = "0x13B09C0", VA = "0x13B09C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF178", Offset = "0xEEF178")]
	private void <InitParts>b__27_0(Transform child)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x13B0AC0", Offset = "0x13B0AC0", VA = "0x13B0AC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF188", Offset = "0xEEF188")]
	private void <Init>b__28_0(Rigidbody c)
	{
	}
}
[Token(Token = "0x200012C")]
public class RandomApplyForce : MonoBehaviour
{
	[Token(Token = "0x2000564")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4BB0", Offset = "0xEE4BB0")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 force;

		[Token(Token = "0x6002B79")]
		[Address(RVA = "0x13B16D4", Offset = "0x13B16D4", VA = "0x13B16D4")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6002B7A")]
		[Address(RVA = "0x13B16E8", Offset = "0x13B16E8", VA = "0x13B16E8")]
		internal void <ApplyForce>b__0(Rigidbody rig)
		{
		}
	}

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 forceVec;

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x13B15E4", Offset = "0x13B15E4", VA = "0x13B15E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x13B15E8", Offset = "0x13B15E8", VA = "0x13B15E8")]
	public void ApplyForce(Vector3 force)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x13B16DC", Offset = "0x13B16DC", VA = "0x13B16DC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x13B16E0", Offset = "0x13B16E0", VA = "0x13B16E0")]
	public RandomApplyForce()
	{
	}
}
[Token(Token = "0x200012D")]
public class Velocity : MonoBehaviour
{
	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 velocity;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float checkTime;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 oldPos;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine cr_v;

	[Token(Token = "0x170000C0")]
	public Vector3 v
	{
		[Token(Token = "0x6000843")]
		[Address(RVA = "0x131CAC0", Offset = "0x131CAC0", VA = "0x131CAC0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x131CB50", Offset = "0x131CB50", VA = "0x131CB50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x131CC24", Offset = "0x131CC24", VA = "0x131CC24")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x131CC38", Offset = "0x131CC38", VA = "0x131CC38")]
	public Velocity()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x131CC4C", Offset = "0x131CC4C", VA = "0x131CC4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF198", Offset = "0xEEF198")]
	private void <OnEnable>b__6_0()
	{
	}
}
[Token(Token = "0x200012E")]
public class RoomCharacterDeathBase
{
	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public e_RoomCharacterDeath_Type DeathType;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool IsOwnerDeath;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool IsShowUI;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ShowUITime;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string DeathSay;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsStart;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float RunningTime;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float fadeBeginTime;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float fadeEndTime;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Action FinishCallBack;

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x13B6454", Offset = "0x13B6454", VA = "0x13B6454")]
	public void SetFinishCallBack(Action callBack)
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x13B645C", Offset = "0x13B645C", VA = "0x13B645C", Slot = "4")]
	public virtual void Start([Optional] Vector3 dir)
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x13B6560", Offset = "0x13B6560", VA = "0x13B6560")]
	private void BeginTimeDelay()
	{
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x13B670C", Offset = "0x13B670C", VA = "0x13B670C")]
	private void FadeOutEndAction()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x13B676C", Offset = "0x13B676C", VA = "0x13B676C", Slot = "5")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x13B6658", Offset = "0x13B6658", VA = "0x13B6658")]
	protected void DoEnd()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x13B6770", Offset = "0x13B6770", VA = "0x13B6770", Slot = "6")]
	protected virtual void End()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x13B6A24", Offset = "0x13B6A24", VA = "0x13B6A24", Slot = "7")]
	protected virtual void DoShowUIUpdate(float time)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x13B6B34", Offset = "0x13B6B34", VA = "0x13B6B34")]
	private void EndFade()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x13B6C20", Offset = "0x13B6C20", VA = "0x13B6C20", Slot = "8")]
	protected virtual void DoShowUI()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x13B6C98", Offset = "0x13B6C98", VA = "0x13B6C98", Slot = "9")]
	public virtual void DoUpdate(float time)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x13B6CB0", Offset = "0x13B6CB0", VA = "0x13B6CB0", Slot = "10")]
	public virtual void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x13B6CB4", Offset = "0x13B6CB4", VA = "0x13B6CB4")]
	public RoomCharacterDeathBase()
	{
	}
}
[Token(Token = "0x200012F")]
public enum e_RoomCharacterDeath_Type
{
	[Token(Token = "0x40007C6")]
	Nomal,
	[Token(Token = "0x40007C7")]
	Laster,
	[Token(Token = "0x40007C8")]
	SingleBridge,
	[Token(Token = "0x40007C9")]
	CameraDetect
}
[Token(Token = "0x2000130")]
public class RoomCharacterDeathManager : Singleton<RoomCharacterDeathManager>
{
	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool IsEnter;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool IsStart;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int curRoomId;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_RoomCharacterDeath_Type DeathType;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsDeathProcess;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool IsOwnerDeath;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool isUISkyBoxActive;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RoomCharacterDeathBase DeathData;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private CharacterDeathUI characterUI;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int characterDeathUILayer;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int preLayer;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Action startAct;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Action rollBackAct;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Action finishAct;

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x13B6CC4", Offset = "0x13B6CC4", VA = "0x13B6CC4")]
	public void Enter()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x13B6D54", Offset = "0x13B6D54", VA = "0x13B6D54")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x13B6D64", Offset = "0x13B6D64", VA = "0x13B6D64")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x13B6D78", Offset = "0x13B6D78", VA = "0x13B6D78")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x13B6DCC", Offset = "0x13B6DCC", VA = "0x13B6DCC")]
	public void RoomCharacterDeath(e_RoomCharacterDeath_Type deathType, int uId, Vector3 dir)
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x13B72D4", Offset = "0x13B72D4", VA = "0x13B72D4")]
	public void SetCallbackAct(Action start, Action rollback, Action finish)
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x13B680C", Offset = "0x13B680C", VA = "0x13B680C")]
	public void SetCharacterDeathUI(bool isActive)
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x13B7324", Offset = "0x13B7324", VA = "0x13B7324")]
	private void SetCharacterDeathUILayer(bool isSet)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x13B72A0", Offset = "0x13B72A0", VA = "0x13B72A0")]
	private void SetDeathTypeData(e_RoomCharacterDeath_Type deathType, string deathName)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x13B7A04", Offset = "0x13B7A04", VA = "0x13B7A04")]
	private void DeathFinish()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x13B66F8", Offset = "0x13B66F8", VA = "0x13B66F8")]
	public void CharacterRollBack()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x13B7454", Offset = "0x13B7454", VA = "0x13B7454")]
	public void SetUISkyBox(bool isActive)
	{
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x13B7B70", Offset = "0x13B7B70", VA = "0x13B7B70")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x13B7BC8", Offset = "0x13B7BC8", VA = "0x13B7BC8")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x13B71F0", Offset = "0x13B71F0", VA = "0x13B71F0")]
	private WUnit GetOwnerUnit()
	{
		return null;
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x13B75F4", Offset = "0x13B75F4", VA = "0x13B75F4")]
	private RoomCharacterDeathBase GetDeathDataByType(string deathName)
	{
		return null;
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x13B7D18", Offset = "0x13B7D18", VA = "0x13B7D18")]
	public RoomCharacterDeathManager()
	{
	}
}
[Token(Token = "0x2000131")]
public class RoomCharacterDropOutDeath : RoomCharacterDeathBase
{
	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool IsMotion;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float MotionTime;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isDropOutBack;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 dropPrePos;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion dropPreRot;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 dropPreCamLocalPos;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Quaternion dropPreCamLocalRot;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 dropPreCamPos;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Quaternion dropPreCamRot;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 dropPlayerDir;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float dropTotalTime;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float dropAcceleration;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float dropTime;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 tmpPos;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float dropFadeBeginTime;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float dropFadeInTime;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float dropFadeOutTime;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool isFadeIn;

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x13B7DA8", Offset = "0x13B7DA8", VA = "0x13B7DA8", Slot = "4")]
	public override void Start([Optional] Vector3 dir)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x13B7F0C", Offset = "0x13B7F0C", VA = "0x13B7F0C", Slot = "5")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x13B8060", Offset = "0x13B8060", VA = "0x13B8060")]
	protected void DoMotionUpdate(float time)
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x13B7F08", Offset = "0x13B7F08", VA = "0x13B7F08")]
	protected void DoMotion()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x13B8490", Offset = "0x13B8490", VA = "0x13B8490", Slot = "9")]
	public override void DoUpdate(float time)
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x13B84B4", Offset = "0x13B84B4", VA = "0x13B84B4", Slot = "10")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x13B8998", Offset = "0x13B8998", VA = "0x13B8998")]
	private GameObject GetPlayerObj()
	{
		return null;
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x13B8B4C", Offset = "0x13B8B4C", VA = "0x13B8B4C")]
	public GameObject GetAffectCameraObj()
	{
		return null;
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x13B8CF4", Offset = "0x13B8CF4", VA = "0x13B8CF4")]
	public void SetVrAffectCam(bool isActive)
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x13B8E08", Offset = "0x13B8E08", VA = "0x13B8E08")]
	public void SetWeaponActive(bool isActive)
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x13B8EEC", Offset = "0x13B8EEC", VA = "0x13B8EEC")]
	private void UpdatePlayerPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x13B8294", Offset = "0x13B8294", VA = "0x13B8294")]
	public void DoDropOutBack()
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x13B7F3C", Offset = "0x13B7F3C", VA = "0x13B7F3C")]
	private void DropOutBackEnd()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x13B81A4", Offset = "0x13B81A4", VA = "0x13B81A4")]
	private void DropOutBackUpdate()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x13B84CC", Offset = "0x13B84CC", VA = "0x13B84CC")]
	private void LockTransformLateUpdate()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x13B7BF0", Offset = "0x13B7BF0", VA = "0x13B7BF0")]
	public RoomCharacterDropOutDeath()
	{
	}
}
[Token(Token = "0x2000132")]
public class SkyBoxCollector : MonoBehaviour
{
	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SkyBoxCollector Instance;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material preTmpMat;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Material> SkyBoxMaterials;

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x1269204", Offset = "0x1269204", VA = "0x1269204")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x1269274", Offset = "0x1269274", VA = "0x1269274")]
	public void ChangeSkyBoxById(int index)
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x12693CC", Offset = "0x12693CC", VA = "0x12693CC")]
	public void SavePreTmpSkyBox()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x12693FC", Offset = "0x12693FC", VA = "0x12693FC")]
	public void ResetPreSkyBox()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x1269408", Offset = "0x1269408", VA = "0x1269408")]
	public SkyBoxCollector()
	{
	}
}
[Token(Token = "0x2000133")]
public class RoomGearManager : Singleton<RoomGearManager>
{
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool IsEnter;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int curRoomId;

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x13BD400", Offset = "0x13BD400", VA = "0x13BD400")]
	public void Enter()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x13BD588", Offset = "0x13BD588", VA = "0x13BD588")]
	public void Exit()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x13BD708", Offset = "0x13BD708", VA = "0x13BD708")]
	public void EnterStartGear(int id)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x13BDCDC", Offset = "0x13BDCDC", VA = "0x13BDCDC")]
	public void EnterCurRoomStartGearID(int id)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x13BDCE0", Offset = "0x13BDCE0", VA = "0x13BDCE0")]
	public void EnterStopGearAll()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x13BE24C", Offset = "0x13BE24C", VA = "0x13BE24C")]
	public void EnterPassRoomGear(FlowNode node)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x13BDCF4", Offset = "0x13BDCF4", VA = "0x13BDCF4")]
	public void EnterStopGear(int id, bool isStopAll)
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x13BE260", Offset = "0x13BE260", VA = "0x13BE260")]
	public RoomGearManager()
	{
	}
}
[Token(Token = "0x2000134")]
public enum eMonsterAttackType
{
	[Token(Token = "0x40007F0")]
	None,
	[Token(Token = "0x40007F1")]
	Stand,
	[Token(Token = "0x40007F2")]
	Squat
}
[Token(Token = "0x2000135")]
public enum eMonsterAttackDirType
{
	[Token(Token = "0x40007F4")]
	None,
	[Token(Token = "0x40007F5")]
	Left,
	[Token(Token = "0x40007F6")]
	Right
}
[Token(Token = "0x2000136")]
public class RoomMonsterManager : Singleton<RoomMonsterManager>
{
	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool IsEnter;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int curMonsterRoomId;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int bossRoomId;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool mIsActiveMonster;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool mIsSpawnMonster;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine coroutine;

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x13BE2D0", Offset = "0x13BE2D0", VA = "0x13BE2D0")]
	public void Enter()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x13BE75C", Offset = "0x13BE75C", VA = "0x13BE75C")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x13BEB30", Offset = "0x13BEB30", VA = "0x13BEB30")]
	public bool IsMonsterClean()
	{
		return default(bool);
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x13BEC88", Offset = "0x13BEC88", VA = "0x13BEC88")]
	public bool IsKillBossClean()
	{
		return default(bool);
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x13BEDA8", Offset = "0x13BEDA8", VA = "0x13BEDA8")]
	public void SkipMonster()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x13BEDC0", Offset = "0x13BEDC0", VA = "0x13BEDC0")]
	private void CleanMonster(bool isNow = true)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x13BEF98", Offset = "0x13BEF98", VA = "0x13BEF98")]
	public bool IsActiveMonster()
	{
		return default(bool);
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x13BEFA0", Offset = "0x13BEFA0", VA = "0x13BEFA0")]
	public void AlertMonster(Vector3 center, float radius)
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x13BF290", Offset = "0x13BF290", VA = "0x13BF290")]
	public void DoAlertMonsterActive()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x13BF294", Offset = "0x13BF294", VA = "0x13BF294")]
	public void EnterMonsterRoom(FlowNode fNode, bool isOk)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x13BF2A4", Offset = "0x13BF2A4", VA = "0x13BF2A4")]
	public void EnterMonsterPreSpawn(FlowNode node)
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x13BF6B8", Offset = "0x13BF6B8", VA = "0x13BF6B8")]
	public void EnterMonsterActive(int roomdID)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x13BF97C", Offset = "0x13BF97C", VA = "0x13BF97C")]
	public void EnterMonsterPauseCallBack()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x13BEE6C", Offset = "0x13BEE6C", VA = "0x13BEE6C")]
	public void EnterMonsterPause(FlowNode node)
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x13BF564", Offset = "0x13BF564", VA = "0x13BF564")]
	public void EnterMonsterRestart()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x13BF980", Offset = "0x13BF980", VA = "0x13BF980")]
	public RoomMonsterManager()
	{
	}
}
[Token(Token = "0x2000137")]
public class InstanceFlowNode
{
	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int Id;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int InstanceId;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int FlowId;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InstanceFlowData configData;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InstanceFlowNode[] ChildNodes;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7254", Offset = "0xEE7254")]
	private int <Status>k__BackingField;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7264", Offset = "0xEE7264")]
	private int <PassStatus>k__BackingField;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7274", Offset = "0xEE7274")]
	private int <CurLevel>k__BackingField;

	[Token(Token = "0x170000C1")]
	public int Status
	{
		[Token(Token = "0x6000894")]
		[Address(RVA = "0x1470568", Offset = "0x1470568", VA = "0x1470568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF1A8", Offset = "0xEEF1A8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000895")]
		[Address(RVA = "0x1470570", Offset = "0x1470570", VA = "0x1470570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF1B8", Offset = "0xEEF1B8")]
		set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public int PassStatus
	{
		[Token(Token = "0x6000896")]
		[Address(RVA = "0x1470578", Offset = "0x1470578", VA = "0x1470578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF1C8", Offset = "0xEEF1C8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000897")]
		[Address(RVA = "0x1470580", Offset = "0x1470580", VA = "0x1470580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF1D8", Offset = "0xEEF1D8")]
		set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public int CurLevel
	{
		[Token(Token = "0x6000898")]
		[Address(RVA = "0x1470588", Offset = "0x1470588", VA = "0x1470588")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF1E8", Offset = "0xEEF1E8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000899")]
		[Address(RVA = "0x1470590", Offset = "0x1470590", VA = "0x1470590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF1F8", Offset = "0xEEF1F8")]
		set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public bool IsInstanceFlowPass
	{
		[Token(Token = "0x600089A")]
		[Address(RVA = "0x1470598", Offset = "0x1470598", VA = "0x1470598")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x1470634", Offset = "0x1470634", VA = "0x1470634")]
	public InstanceFlowNode()
	{
	}
}
[Token(Token = "0x2000138")]
public class SelectInstanceManager : Singleton<SelectInstanceManager>
{
	[Token(Token = "0x2000565")]
	public enum e_ProcessType
	{
		[Token(Token = "0x4001FB1")]
		NULL,
		[Token(Token = "0x4001FB2")]
		start,
		[Token(Token = "0x4001FB3")]
		noPass,
		[Token(Token = "0x4001FB4")]
		pass
	}

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isInit;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool isStart;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private bool isShow;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private bool isPreselect;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, Dictionary<int, InstanceFlowNode>> playerInstanceFlowNodeDic;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, InstanceFlowNode> instanceFlowNodeDic;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, List<InstanceFlowNode>> instanceDic;

	[Token(Token = "0x400080C")]
	public const int SafeRoomInstanceID_Const = 10000;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int GetFlowNodeId;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Dictionary<int, int> instanceDiffLevelDic;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<InstanceFlowNode> tmpBroadInstanceInfoList;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<InstanceFlowNode> tmpSelectInstanceList;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float selectTime;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float selectRunningTime;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isSelectFinish;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int startCaptainId;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int instanceMinLevel;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int instanceMaxLevel;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int instanceFailTotalTime;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private CheckpointUI selectUI;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private CheckpointUI selectUI_Live;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float standingModeDelayTime;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine standingModeDelay;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Action SelectUpdate;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Action showUpdate;

	[Token(Token = "0x170000C5")]
	public bool IsPreselect
	{
		[Token(Token = "0x600089C")]
		[Address(RVA = "0x1252C78", Offset = "0x1252C78", VA = "0x1252C78")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000C6")]
	public InstanceFlowNode SelectInstanceFlow
	{
		[Token(Token = "0x600089D")]
		[Address(RVA = "0x1252C80", Offset = "0x1252C80", VA = "0x1252C80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000C7")]
	public int StartCaptainId
	{
		[Token(Token = "0x600089E")]
		[Address(RVA = "0x1252D00", Offset = "0x1252D00", VA = "0x1252D00")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x1252D08", Offset = "0x1252D08", VA = "0x1252D08")]
	public void Init()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x1252FC0", Offset = "0x1252FC0", VA = "0x1252FC0")]
	public void UnInit()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x125329C", Offset = "0x125329C", VA = "0x125329C")]
	public void PreStart()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x12533FC", Offset = "0x12533FC", VA = "0x12533FC")]
	public void Start()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x12535D8", Offset = "0x12535D8", VA = "0x12535D8")]
	public void StartNewNetPlatfrormData()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x125425C", Offset = "0x125425C", VA = "0x125425C")]
	public void Stop()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x125458C", Offset = "0x125458C", VA = "0x125458C")]
	public void Show(e_ProcessType e_ProcessType)
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x1252FCC", Offset = "0x1252FCC", VA = "0x1252FCC")]
	public void Hide(bool isNextSelect = true)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x1254D70", Offset = "0x1254D70", VA = "0x1254D70")]
	public void Update()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x12532A0", Offset = "0x12532A0", VA = "0x12532A0")]
	private void InitPlayerInstanceFlowNodes()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x1253694", Offset = "0x1253694", VA = "0x1253694")]
	private void InitCapitalInstanceFlowNodes()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x125502C", Offset = "0x125502C", VA = "0x125502C")]
	public void SetPlatformStatus(int pId, int key, int status)
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x1253A34", Offset = "0x1253A34", VA = "0x1253A34")]
	public void SetPlatformData()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x1253B74", Offset = "0x1253B74", VA = "0x1253B74")]
	private void ResetInstanceDatas()
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x1254F44", Offset = "0x1254F44", VA = "0x1254F44")]
	public InstanceFlowNode GetInstanceFlowNode(int id)
	{
		return null;
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x1255284", Offset = "0x1255284", VA = "0x1255284")]
	public Dictionary<int, InstanceFlowNode> GetAllInstanceFlowNodes()
	{
		return null;
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x125528C", Offset = "0x125528C", VA = "0x125528C")]
	public Dictionary<int, InstanceFlowNode> GetPlayerAllInstanceFlowNodesById(int id)
	{
		return null;
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x1255374", Offset = "0x1255374", VA = "0x1255374")]
	public List<InstanceFlowNode> GetInstanceFlowNodes(int insId)
	{
		return null;
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x125545C", Offset = "0x125545C", VA = "0x125545C")]
	public List<InstanceFlowNode> GetNextInstanceFlowNodes()
	{
		return null;
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x125559C", Offset = "0x125559C", VA = "0x125559C")]
	public void SetSelectInstanceFlowNode(int insFlowNodeId)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x12558D0", Offset = "0x12558D0", VA = "0x12558D0")]
	private void GotoBattleRoomSelect()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x1255A24", Offset = "0x1255A24", VA = "0x1255A24")]
	public void SetServerSelectInstanceFlowNode(int insFlowNodeId)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x1255A4C", Offset = "0x1255A4C", VA = "0x1255A4C")]
	public void SetServerPreSelectInstanceFlowNode(int insFlowNodeId)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x1255ADC", Offset = "0x1255ADC", VA = "0x1255ADC")]
	public void SelectInstanceFlowNode(int insFlowNodeId)
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x1255D38", Offset = "0x1255D38", VA = "0x1255D38")]
	public void PreselectionInstanceFlowNode(int insFlowNodeId)
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x1254E80", Offset = "0x1254E80", VA = "0x1254E80")]
	public void SelectDefalutInstanceFlowNode()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x1255FBC", Offset = "0x1255FBC", VA = "0x1255FBC")]
	public bool IsCaptain(int uId)
	{
		return default(bool);
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x1255CA0", Offset = "0x1255CA0", VA = "0x1255CA0")]
	public bool IsCaptain(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x1255FCC", Offset = "0x1255FCC", VA = "0x1255FCC")]
	public bool IsOwnerCaptain()
	{
		return default(bool);
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x12560A4", Offset = "0x12560A4", VA = "0x12560A4")]
	public WUnit GetCaptain()
	{
		return null;
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x12541A4", Offset = "0x12541A4", VA = "0x12541A4")]
	public void FreshCaptain()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x12547FC", Offset = "0x12547FC", VA = "0x12547FC")]
	private void StartInstanceDiffLevel()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x1256340", Offset = "0x1256340", VA = "0x1256340")]
	public void AddInstanceFailTimes()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x1256350", Offset = "0x1256350", VA = "0x1256350")]
	public void SetCurInstanceFlowPass(InstanceFlowNode insFlow)
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x1256434", Offset = "0x1256434", VA = "0x1256434")]
	public bool IsCurSelectInstanceFlowForPass(int insFlowId)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x1256500", Offset = "0x1256500", VA = "0x1256500")]
	public void SetCurSelectInstanceFlowEnter()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x1253DDC", Offset = "0x1253DDC", VA = "0x1253DDC")]
	public void SetInstanceFlowStatus(int insFlowId, int status, int passStatus, int curLevel)
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x125660C", Offset = "0x125660C", VA = "0x125660C")]
	public void FreshCurLevel()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x12551F0", Offset = "0x12551F0", VA = "0x12551F0")]
	public void SendInstanceInfo(List<InstanceFlowNode> list)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x1256738", Offset = "0x1256738", VA = "0x1256738")]
	public void SyncInstanceFlowStatus(int insFlowId, int status, int passStatus, int curLevel)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x1255CC0", Offset = "0x1255CC0", VA = "0x1255CC0")]
	public void SendSelectInstanceFlow(int uId, int insFlowNodeId)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x1255F44", Offset = "0x1255F44", VA = "0x1255F44")]
	public void SendPreselectInstanceFlow(int uId, int insFlowNodeId)
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x12567D8", Offset = "0x12567D8", VA = "0x12567D8")]
	public void SyncC2SSelectInstanceFlow(int uId, int insFlowNodeId)
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x12568C0", Offset = "0x12568C0", VA = "0x12568C0")]
	public void SyncC2SPreSelectInstanceFlow(int uId, int insFlowNodeId)
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x12569A8", Offset = "0x12569A8", VA = "0x12569A8")]
	public void SyncS2CInstanceFlowStatus(int useSelectInsId, int useSelectInsFlowId, int runSelectInsId, int runSelectInsFlowId, int runningInsId, int runningInsFlowId, bool isUIOp)
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x1256B60", Offset = "0x1256B60", VA = "0x1256B60")]
	public void SyncS2CPreslectStatus(int runningInsId)
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x1254750", Offset = "0x1254750", VA = "0x1254750")]
	private bool IsGameStatusEnd()
	{
		return default(bool);
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x1256BF0", Offset = "0x1256BF0", VA = "0x1256BF0")]
	public SelectInstanceManager()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x1256D8C", Offset = "0x1256D8C", VA = "0x1256D8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF208", Offset = "0xEEF208")]
	private void <InitPlayerInstanceFlowNodes>b__41_0(WUnit u)
	{
	}
}
[Token(Token = "0x2000139")]
public static class GameObjectExtensions
{
	[Token(Token = "0x60008D0")]
	public static T AddComponentOnce<T>(this GameObject self) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60008D1")]
	public static void DestroyComponent<T>(this GameObject self) where T : Component
	{
	}

	[Token(Token = "0x60008D2")]
	public static void DestroyComponent<T>(this GameObject self, float t) where T : Component
	{
	}
}
[Token(Token = "0x200013A")]
public static class MonoBehaviourExtensions
{
	[Token(Token = "0x2000566")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4BC0", Offset = "0xEE4BC0")]
	private sealed class <_Delay>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x17000442")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B7E")]
			[Address(RVA = "0x12E4FF4", Offset = "0x12E4FF4", VA = "0x12E4FF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000443")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B80")]
			[Address(RVA = "0x12E505C", Offset = "0x12E505C", VA = "0x12E505C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B7B")]
		[Address(RVA = "0x12E4838", Offset = "0x12E4838", VA = "0x12E4838")]
		[DebuggerHidden]
		public <_Delay>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6002B7C")]
		[Address(RVA = "0x12E4F30", Offset = "0x12E4F30", VA = "0x12E4F30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B7D")]
		[Address(RVA = "0x12E4F34", Offset = "0x12E4F34", VA = "0x12E4F34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B7F")]
		[Address(RVA = "0x12E4FFC", Offset = "0x12E4FFC", VA = "0x12E4FFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000567")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4BD0", Offset = "0xEE4BD0")]
	private sealed class <_Delay>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time1;

		[Token(Token = "0x4001FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float time2;

		[Token(Token = "0x4001FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x17000444")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B84")]
			[Address(RVA = "0x12E5134", Offset = "0x12E5134", VA = "0x12E5134", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000445")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B86")]
			[Address(RVA = "0x12E519C", Offset = "0x12E519C", VA = "0x12E519C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B81")]
		[Address(RVA = "0x12E4958", Offset = "0x12E4958", VA = "0x12E4958")]
		[DebuggerHidden]
		public <_Delay>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002B82")]
		[Address(RVA = "0x12E5064", Offset = "0x12E5064", VA = "0x12E5064", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B83")]
		[Address(RVA = "0x12E5068", Offset = "0x12E5068", VA = "0x12E5068", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B85")]
		[Address(RVA = "0x12E513C", Offset = "0x12E513C", VA = "0x12E513C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000568")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4BE0", Offset = "0xEE4BE0")]
	private sealed class <_Loop>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Func<bool> func;

		[Token(Token = "0x17000446")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B8A")]
			[Address(RVA = "0x12E559C", Offset = "0x12E559C", VA = "0x12E559C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000447")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B8C")]
			[Address(RVA = "0x12E5604", Offset = "0x12E5604", VA = "0x12E5604", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B87")]
		[Address(RVA = "0x12E4A48", Offset = "0x12E4A48", VA = "0x12E4A48")]
		[DebuggerHidden]
		public <_Loop>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002B88")]
		[Address(RVA = "0x12E54C8", Offset = "0x12E54C8", VA = "0x12E54C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B89")]
		[Address(RVA = "0x12E54CC", Offset = "0x12E54CC", VA = "0x12E54CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B8B")]
		[Address(RVA = "0x12E55A4", Offset = "0x12E55A4", VA = "0x12E55A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000569")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4BF0", Offset = "0xEE4BF0")]
	private sealed class <_Loop>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time1;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float time2;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Func<bool> func;

		[Token(Token = "0x17000448")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B90")]
			[Address(RVA = "0x12E56EC", Offset = "0x12E56EC", VA = "0x12E56EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000449")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B92")]
			[Address(RVA = "0x12E5754", Offset = "0x12E5754", VA = "0x12E5754", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B8D")]
		[Address(RVA = "0x12E4B3C", Offset = "0x12E4B3C", VA = "0x12E4B3C")]
		[DebuggerHidden]
		public <_Loop>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002B8E")]
		[Address(RVA = "0x12E560C", Offset = "0x12E560C", VA = "0x12E560C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B8F")]
		[Address(RVA = "0x12E5610", Offset = "0x12E5610", VA = "0x12E5610", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B91")]
		[Address(RVA = "0x12E56F4", Offset = "0x12E56F4", VA = "0x12E56F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4C00", Offset = "0xEE4C00")]
	private sealed class <_Loop>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action action;

		[Token(Token = "0x1700044A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B96")]
			[Address(RVA = "0x12E5824", Offset = "0x12E5824", VA = "0x12E5824", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B98")]
			[Address(RVA = "0x12E588C", Offset = "0x12E588C", VA = "0x12E588C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B93")]
		[Address(RVA = "0x12E4C2C", Offset = "0x12E4C2C", VA = "0x12E4C2C")]
		[DebuggerHidden]
		public <_Loop>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002B94")]
		[Address(RVA = "0x12E575C", Offset = "0x12E575C", VA = "0x12E575C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B95")]
		[Address(RVA = "0x12E5760", Offset = "0x12E5760", VA = "0x12E5760", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B97")]
		[Address(RVA = "0x12E582C", Offset = "0x12E582C", VA = "0x12E582C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4C10", Offset = "0xEE4C10")]
	private sealed class <_Frame>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<bool> func;

		[Token(Token = "0x1700044C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002B9C")]
			[Address(RVA = "0x12E5370", Offset = "0x12E5370", VA = "0x12E5370", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002B9E")]
			[Address(RVA = "0x12E53D8", Offset = "0x12E53D8", VA = "0x12E53D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B99")]
		[Address(RVA = "0x12E4D0C", Offset = "0x12E4D0C", VA = "0x12E4D0C")]
		[DebuggerHidden]
		public <_Frame>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002B9A")]
		[Address(RVA = "0x12E52C8", Offset = "0x12E52C8", VA = "0x12E52C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002B9B")]
		[Address(RVA = "0x12E52CC", Offset = "0x12E52CC", VA = "0x12E52CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002B9D")]
		[Address(RVA = "0x12E5378", Offset = "0x12E5378", VA = "0x12E5378", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4C20", Offset = "0xEE4C20")]
	private sealed class <_Frame>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x1700044E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BA2")]
			[Address(RVA = "0x12E5458", Offset = "0x12E5458", VA = "0x12E5458", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700044F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BA4")]
			[Address(RVA = "0x12E54C0", Offset = "0x12E54C0", VA = "0x12E54C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002B9F")]
		[Address(RVA = "0x12E4DEC", Offset = "0x12E4DEC", VA = "0x12E4DEC")]
		[DebuggerHidden]
		public <_Frame>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002BA0")]
		[Address(RVA = "0x12E53E0", Offset = "0x12E53E0", VA = "0x12E53E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BA1")]
		[Address(RVA = "0x12E53E4", Offset = "0x12E53E4", VA = "0x12E53E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BA3")]
		[Address(RVA = "0x12E5460", Offset = "0x12E5460", VA = "0x12E5460", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4C30", Offset = "0xEE4C30")]
	private sealed class <_EndOfFrame>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action action;

		[Token(Token = "0x17000450")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BA8")]
			[Address(RVA = "0x12E5258", Offset = "0x12E5258", VA = "0x12E5258", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000451")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BAA")]
			[Address(RVA = "0x12E52C0", Offset = "0x12E52C0", VA = "0x12E52C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BA5")]
		[Address(RVA = "0x12E4ECC", Offset = "0x12E4ECC", VA = "0x12E4ECC")]
		[DebuggerHidden]
		public <_EndOfFrame>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002BA6")]
		[Address(RVA = "0x12E51A4", Offset = "0x12E51A4", VA = "0x12E51A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BA7")]
		[Address(RVA = "0x12E51A8", Offset = "0x12E51A8", VA = "0x12E51A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BA9")]
		[Address(RVA = "0x12E5260", Offset = "0x12E5260", VA = "0x12E5260", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60008D3")]
	public static void MapAllComponent<T>(this MonoBehaviour self, Action<T> action) where T : Component
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x12E47AC", Offset = "0x12E47AC", VA = "0x12E47AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEF258", Offset = "0xEEF258")]
	private static IEnumerator _Delay(float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x12E4864", Offset = "0x12E4864", VA = "0x12E4864")]
	public static Coroutine Delay(this MonoBehaviour self, float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x12E48C8", Offset = "0x12E48C8", VA = "0x12E48C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEF2CC", Offset = "0xEEF2CC")]
	private static IEnumerator _Delay(float time1, float time2, Action action)
	{
		return null;
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x12E4984", Offset = "0x12E4984", VA = "0x12E4984")]
	public static Coroutine Delay(this MonoBehaviour self, float time1, float time2, Action action)
	{
		return null;
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x12E49BC", Offset = "0x12E49BC", VA = "0x12E49BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEF340", Offset = "0xEEF340")]
	private static IEnumerator _Loop(float time, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x12E4A74", Offset = "0x12E4A74", VA = "0x12E4A74")]
	public static Coroutine Loop(this MonoBehaviour self, float time, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x12E4AAC", Offset = "0x12E4AAC", VA = "0x12E4AAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEF3B4", Offset = "0xEEF3B4")]
	private static IEnumerator _Loop(float time1, float time2, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x12E4B68", Offset = "0x12E4B68", VA = "0x12E4B68")]
	public static Coroutine Loop(this MonoBehaviour self, float time1, float time2, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x12E4BA0", Offset = "0x12E4BA0", VA = "0x12E4BA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEF428", Offset = "0xEEF428")]
	private static IEnumerator _Loop(float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x12E4C58", Offset = "0x12E4C58", VA = "0x12E4C58")]
	public static Coroutine Loop(this MonoBehaviour self, float time, Action action)
	{
		return null;
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x12E4C90", Offset = "0x12E4C90", VA = "0x12E4C90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEF49C", Offset = "0xEEF49C")]
	private static IEnumerator _Frame(Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x12E4D38", Offset = "0x12E4D38", VA = "0x12E4D38")]
	public static Coroutine Frame(this MonoBehaviour self, Func<bool> func)
	{
		return null;
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x12E4D70", Offset = "0x12E4D70", VA = "0x12E4D70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEF510", Offset = "0xEEF510")]
	private static IEnumerator _Frame(Action action)
	{
		return null;
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x12E4E18", Offset = "0x12E4E18", VA = "0x12E4E18")]
	public static Coroutine Frame(this MonoBehaviour self, Action action)
	{
		return null;
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x12E4E50", Offset = "0x12E4E50", VA = "0x12E4E50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEF584", Offset = "0xEEF584")]
	private static IEnumerator _EndOfFrame(Action action)
	{
		return null;
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x12E4EF8", Offset = "0x12E4EF8", VA = "0x12E4EF8")]
	public static Coroutine EndOfFrame(this MonoBehaviour self, Action action)
	{
		return null;
	}
}
[Token(Token = "0x200013B")]
public static class TransformExtensions
{
	[Token(Token = "0x60008E4")]
	public static void MapAllComponent<T>(this Transform self, Action<T> action) where T : Component
	{
	}

	[Token(Token = "0x60008E5")]
	public static void RandInComponents<T>(this Transform self, Action<T> action) where T : Component
	{
	}
}
[Token(Token = "0x200013C")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xEE0CEC", Offset = "0xEE0CEC")]
public class UnOrderMultiMap<T, K>
{
	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private readonly Dictionary<T, List<K>> dictionary;

	[Token(Token = "0x170000C8")]
	public int Count
	{
		[Token(Token = "0x60008E9")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000C9")]
	public List<K> Item
	{
		[Token(Token = "0x60008EE")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60008E6")]
	public Dictionary<T, List<K>> GetDictionary()
	{
		return null;
	}

	[Token(Token = "0x60008E7")]
	public void Add(T t, K k)
	{
	}

	[Token(Token = "0x60008E8")]
	public KeyValuePair<T, List<K>> First()
	{
		return default(KeyValuePair<T, List<K>>);
	}

	[Token(Token = "0x60008EA")]
	private List<K> FetchList()
	{
		return null;
	}

	[Token(Token = "0x60008EB")]
	public bool Remove(T t, K k)
	{
		return default(bool);
	}

	[Token(Token = "0x60008EC")]
	public bool Remove(T t)
	{
		return default(bool);
	}

	[Token(Token = "0x60008ED")]
	public K[] GetAll(T t)
	{
		return null;
	}

	[Token(Token = "0x60008EF")]
	public K GetOne(T t)
	{
		return (K)null;
	}

	[Token(Token = "0x60008F0")]
	public bool Contains(T t, K k)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F1")]
	public bool ContainsKey(T t)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F2")]
	public void Clear()
	{
	}

	[Token(Token = "0x60008F3")]
	public UnOrderMultiMap()
	{
	}
}
[Token(Token = "0x200013D")]
public static class UtilityTool
{
	[Token(Token = "0x200056E")]
	public class AgentClass<T1, T2>
	{
		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<T1, T2> stateList;

		[Token(Token = "0x6002BAB")]
		public void Register(T1 type, T2 st)
		{
		}

		[Token(Token = "0x6002BAC")]
		public void UnRegister(T1 type)
		{
		}

		[Token(Token = "0x6002BAD")]
		public bool IsHasState(T1 nextType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002BAE")]
		public T2 GetStateValue(T1 type)
		{
			return (T2)null;
		}

		[Token(Token = "0x6002BAF")]
		public AgentClass()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200056F")]
	public class SerializationList<T>
	{
		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<T> target;

		[Token(Token = "0x6002BB0")]
		public List<T> ToList()
		{
			return null;
		}

		[Token(Token = "0x6002BB1")]
		public SerializationList(List<T> target)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000570")]
	public class SerializationDictionary<TKey, TValue> : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TKey> keys;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TValue> values;

		[NonSerialized]
		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<TKey, TValue> target;

		[Token(Token = "0x6002BB2")]
		public Dictionary<TKey, TValue> ToDictionary()
		{
			return null;
		}

		[Token(Token = "0x6002BB3")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6002BB4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6002BB5")]
		public SerializationDictionary()
		{
		}
	}

	[Token(Token = "0x400081F")]
	private const float ByteToM = 1E-06f;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsUnityPause;

	[Token(Token = "0x170000CA")]
	public static bool isApplicationPlaying
	{
		[Token(Token = "0x600091A")]
		[Address(RVA = "0x1313164", Offset = "0x1313164", VA = "0x1313164")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x1311C54", Offset = "0x1311C54", VA = "0x1311C54")]
	public static bool IsBit(int state, int flag)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x1311C60", Offset = "0x1311C60", VA = "0x1311C60")]
	public static void SetBit(ref int state, int flag, bool value)
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x1311C7C", Offset = "0x1311C7C", VA = "0x1311C7C")]
	public static bool IsByteBit(byte state, int flag)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x1311C8C", Offset = "0x1311C8C", VA = "0x1311C8C")]
	public static void SetByteBit(ref byte state, int flag, bool value)
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x1311CA8", Offset = "0x1311CA8", VA = "0x1311CA8")]
	public static XMLNode SelectSingleNode(XMLNode xn, string url)
	{
		return null;
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x1311D5C", Offset = "0x1311D5C", VA = "0x1311D5C")]
	public static XMLNodeList SelectArrayNode(XMLNode xn, string url)
	{
		return null;
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x1311E10", Offset = "0x1311E10", VA = "0x1311E10")]
	public static string Attribute(XMLNode node, string name)
	{
		return null;
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x1311E88", Offset = "0x1311E88", VA = "0x1311E88")]
	public static bool HasAttribute(XMLNode node, string name)
	{
		return default(bool);
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x1311F14", Offset = "0x1311F14", VA = "0x1311F14")]
	public static int GetIntAttribute(XMLNode node, string name, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x1312024", Offset = "0x1312024", VA = "0x1312024")]
	public static float GetFloatAttribute(XMLNode node, string name, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x131213C", Offset = "0x131213C", VA = "0x131213C")]
	public static string GetStringAttribute(XMLNode node, string name, string defaultValue = "")
	{
		return null;
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x13121DC", Offset = "0x13121DC", VA = "0x13121DC")]
	public static Vector3 GetVector3Attribute(XMLNode node, string name, [Optional] Vector3 defaultValue)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x1312360", Offset = "0x1312360", VA = "0x1312360")]
	public static string ToString(byte[] array)
	{
		return null;
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x13123EC", Offset = "0x13123EC", VA = "0x13123EC")]
	public static bool XML_WriteV3(XmlElement iXmlData, Vector3 iValue, string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x1312564", Offset = "0x1312564", VA = "0x1312564")]
	public static int parseObjInt(object obj, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x1312610", Offset = "0x1312610", VA = "0x1312610")]
	public static byte parseByte(string text, byte defaultValue = 0)
	{
		return default(byte);
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x1311FEC", Offset = "0x1311FEC", VA = "0x1311FEC")]
	public static int parseInt(string text, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x1312104", Offset = "0x1312104", VA = "0x1312104")]
	public static float parseFloat(string text, float defaultValue = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x1312648", Offset = "0x1312648", VA = "0x1312648")]
	public static long parseLong(string text, long defaultValue = 0L)
	{
		return default(long);
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x1312680", Offset = "0x1312680", VA = "0x1312680")]
	public static bool parseBool(string text, bool defaultValue = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x1312718", Offset = "0x1312718", VA = "0x1312718")]
	public static int ParticleSystemLength(GameObject transform)
	{
		return default(int);
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x13128FC", Offset = "0x13128FC", VA = "0x13128FC")]
	public static Transform FindChild(Transform trans, string goName)
	{
		return null;
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x1312A54", Offset = "0x1312A54", VA = "0x1312A54")]
	public static void PollingChildWithDeep(Transform trans, Action<Transform> action, int deep = 5)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x1312B3C", Offset = "0x1312B3C", VA = "0x1312B3C")]
	public static void PollingChild(Transform trans, Action<Transform> action)
	{
	}

	[Token(Token = "0x600090C")]
	public static T FindWithTag<T>(string szTagNmae) where T : Component
	{
		return null;
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x1312C48", Offset = "0x1312C48", VA = "0x1312C48")]
	public static Transform GetTransform(Transform iRoot, string iPath)
	{
		return null;
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x1312D5C", Offset = "0x1312D5C", VA = "0x1312D5C")]
	public static Transform GetTransformByName(Transform check, string name)
	{
		return null;
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x1312E30", Offset = "0x1312E30", VA = "0x1312E30")]
	public static void GetTransformByWithTag(Transform target, string tagName, ref Transform obj)
	{
	}

	[Token(Token = "0x6000910")]
	public static T AddComponent<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000911")]
	public static T AddComponent<T>(Transform iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000912")]
	public static T GetComponent<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000913")]
	public static T GetComponent<T>(Transform iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000914")]
	public static T GetChildComponent<T>(GameObject iObject, string szFindName) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000915")]
	public static T GetComponentInChildren<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000916")]
	public static T GetComponentInParent<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x1313034", Offset = "0x1313034", VA = "0x1313034")]
	public static void SetGameObjectLayer(GameObject go, int srcLayer, int destLayer)
	{
	}

	[Token(Token = "0x6000918")]
	public static void PollingChildComponent<T>(Transform trans, Action<T> action, int deep = 5) where T : Component
	{
	}

	[Token(Token = "0x6000919")]
	public static void PollingChildComponent<T>(Transform trans, Action<T> action) where T : Component
	{
	}

	[Token(Token = "0x600091B")]
	public static T GetCacheComponent<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x600091C")]
	public static T AddCacheComponent<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x600091D")]
	public static T GetCacheComponentInChildren<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x600091E")]
	public static T GetCacheComponentInParent<T>(GameObject iObject) where T : Component
	{
		return null;
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x131316C", Offset = "0x131316C", VA = "0x131316C")]
	public static List<string> Net_GetIPv4()
	{
		return null;
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x131326C", Offset = "0x131326C", VA = "0x131326C")]
	public static bool isNullText(string text)
	{
		return default(bool);
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x13132F4", Offset = "0x13132F4", VA = "0x13132F4")]
	public static bool SetIdentityPosition(GameObject gameObj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x131347C", Offset = "0x131347C", VA = "0x131347C")]
	public static bool SetIdentityPosition(GameObject gameObj, Transform parent)
	{
		return default(bool);
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x131362C", Offset = "0x131362C", VA = "0x131362C")]
	public static Quaternion GetVector3ToQuaternion(Vector3 source, Vector3 dire)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x13137A8", Offset = "0x13137A8", VA = "0x13137A8")]
	public static Offset<Flat_Vector3> ConvertVector3ToFlat(FlatBufferBuilder builder, Vector3 value)
	{
		return default(Offset<Flat_Vector3>);
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x13138C0", Offset = "0x13138C0", VA = "0x13138C0")]
	public static Offset<Flat_Vector3> ConvertVector3ToFlat(FlatBufferBuilder builder, Flat_Vector3 value)
	{
		return default(Offset<Flat_Vector3>);
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x1313A08", Offset = "0x1313A08", VA = "0x1313A08")]
	public static Offset<Flat_Vector2> ConvertVector2ToFlat(FlatBufferBuilder builder, Vector2 value)
	{
		return default(Offset<Flat_Vector2>);
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x1313B10", Offset = "0x1313B10", VA = "0x1313B10")]
	public static Offset<Flat_Vector2> ConvertVector2ToFlat(FlatBufferBuilder builder, Flat_Vector2 value)
	{
		return default(Offset<Flat_Vector2>);
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x1313C40", Offset = "0x1313C40", VA = "0x1313C40")]
	public static Offset<Flat_Quaternion> ConvertQuaternionToFlat(FlatBufferBuilder builder, Quaternion value)
	{
		return default(Offset<Flat_Quaternion>);
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x1313D60", Offset = "0x1313D60", VA = "0x1313D60")]
	public static Offset<Flat_Quaternion> ConvertQuaternionToFlat(FlatBufferBuilder builder, Flat_Quaternion value)
	{
		return default(Offset<Flat_Quaternion>);
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x1313EC8", Offset = "0x1313EC8", VA = "0x1313EC8")]
	public static Vector3 ConvertFlatToVector3(Flat_Vector3 value)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x1314000", Offset = "0x1314000", VA = "0x1314000")]
	public static Vector2 ConvertFlatToVector2(Flat_Vector2 value)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x131411C", Offset = "0x131411C", VA = "0x131411C")]
	public static Quaternion ConvertFlatToQuaternion(Flat_Quaternion value)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x1314278", Offset = "0x1314278", VA = "0x1314278")]
	public static void FreeMemory()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x13147F4", Offset = "0x13147F4", VA = "0x13147F4")]
	public static void BeginSample(string _name)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x13147F8", Offset = "0x13147F8", VA = "0x13147F8")]
	public static void EndSample()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x13147FC", Offset = "0x13147FC", VA = "0x13147FC")]
	public static void SetTitleText(string titleName)
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x1314800", Offset = "0x1314800", VA = "0x1314800")]
	public static void ClearRegistryConfig()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x1311584", Offset = "0x1311584", VA = "0x1311584")]
	public static void UnityPause()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x1314804", Offset = "0x1314804", VA = "0x1314804")]
	public static bool CheckNaNOrInfinity(Vector3 vector3)
	{
		return default(bool);
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x1314898", Offset = "0x1314898", VA = "0x1314898")]
	public static bool CheckNaNOrInfinity(Quaternion quaternion)
	{
		return default(bool);
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x1314950", Offset = "0x1314950", VA = "0x1314950")]
	public static Vector3 TransformPosition(Vector3 inputPos, Transform inverseTra, Transform tra)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x1314988", Offset = "0x1314988", VA = "0x1314988")]
	public static void FixAudioLeak(WwiseDefine wwiseDefine, float autoDestory = 20f)
	{
	}
}
[Token(Token = "0x200013E")]
public class VideoPlayerController : MonoBehaviour
{
	[Token(Token = "0x2000571")]
	private enum VideoType
	{
		[Token(Token = "0x4001FDA")]
		type_goodLogo,
		[Token(Token = "0x4001FDB")]
		type_otherLogo,
		[Token(Token = "0x4001FDC")]
		type_video,
		[Token(Token = "0x4001FDD")]
		type_End
	}

	[Serializable]
	[Token(Token = "0x2000572")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4C40", Offset = "0xEE4C40")]
	private sealed class <>c
	{
		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<VideoPlayer> <>9__43_0;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<VideoPlayer> <>9__43_1;

		[Token(Token = "0x6002BB7")]
		[Address(RVA = "0x131ED78", Offset = "0x131ED78", VA = "0x131ED78")]
		public <>c()
		{
		}

		[Token(Token = "0x6002BB8")]
		[Address(RVA = "0x131ED80", Offset = "0x131ED80", VA = "0x131ED80")]
		internal void <.ctor>b__43_0(VideoPlayer <p0>)
		{
		}

		[Token(Token = "0x6002BB9")]
		[Address(RVA = "0x131ED84", Offset = "0x131ED84", VA = "0x131ED84")]
		internal void <.ctor>b__43_1(VideoPlayer <p0>)
		{
		}
	}

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject root;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 InitPos;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VideoPlayer player_3d;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VideoPlayer player_2d;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public VideoPlayer videoPlayer;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform point_a;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform point_b;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float displayDis;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string[] playList;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material videoSkybox;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<int, VideoPlayer> playersDict;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private VideoType curVideoType;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public bool IsPlayVideo;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action<VideoPlayer> OnStart;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action<VideoPlayer> OnEnd;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool Is2D;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool isA;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool fogState;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material skybox;

	[Token(Token = "0x170000CB")]
	[HideInInspector]
	public bool IsExistLogo
	{
		[Token(Token = "0x6000938")]
		[Address(RVA = "0x131CD3C", Offset = "0x131CD3C", VA = "0x131CD3C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x131CDC0", Offset = "0x131CDC0", VA = "0x131CDC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x131CE30", Offset = "0x131CE30", VA = "0x131CE30")]
	private void Start()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x131CE34", Offset = "0x131CE34", VA = "0x131CE34")]
	private void Init()
	{
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x131CF38", Offset = "0x131CF38", VA = "0x131CF38")]
	private void VideoPlayer_started(VideoPlayer source)
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x131CFA0", Offset = "0x131CFA0", VA = "0x131CFA0")]
	private void VideoPlayer_loopPointReached(VideoPlayer source)
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x131D008", Offset = "0x131D008", VA = "0x131D008")]
	private void EndOneClip(VideoPlayer player)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x131D624", Offset = "0x131D624", VA = "0x131D624")]
	private Transform GetPlayPoint()
	{
		return null;
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x131D10C", Offset = "0x131D10C", VA = "0x131D10C")]
	private void _Play()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x131D878", Offset = "0x131D878", VA = "0x131D878")]
	private void InitGoodLogo(e_type_language language)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x131DC5C", Offset = "0x131DC5C", VA = "0x131DC5C")]
	private void InitVideoLang(e_type_language language)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x131E364", Offset = "0x131E364", VA = "0x131E364")]
	public void InitVideo(bool is2d = false)
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x131E4C8", Offset = "0x131E4C8", VA = "0x131E4C8")]
	public void ReadyPlay()
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x131E4CC", Offset = "0x131E4CC", VA = "0x131E4CC")]
	private void BeginPlay()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x131D45C", Offset = "0x131D45C", VA = "0x131D45C")]
	private void _Stop()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x131E634", Offset = "0x131E634", VA = "0x131E634")]
	public bool CanPlay()
	{
		return default(bool);
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x131E698", Offset = "0x131E698", VA = "0x131E698")]
	public void TriggerEnd()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x131E6F4", Offset = "0x131E6F4", VA = "0x131E6F4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xEEF618", Offset = "0xEEF618")]
	private void Play1()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x131E98C", Offset = "0x131E98C", VA = "0x131E98C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xEEF650", Offset = "0xEEF650")]
	private void Play2()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x131E700", Offset = "0x131E700", VA = "0x131E700")]
	public void Play(bool isPlayVideo, bool isA)
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x131E998", Offset = "0x131E998", VA = "0x131E998")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xEEF688", Offset = "0xEEF688")]
	public void Stop()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x131EB5C", Offset = "0x131EB5C", VA = "0x131EB5C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x131EB68", Offset = "0x131EB68", VA = "0x131EB68")]
	public VideoPlayerController()
	{
	}
}
[Token(Token = "0x200013F")]
public static class WTime
{
	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly DateTime time197011;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static float curDeltaTime;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int curMillisDeltaTime;

	[Token(Token = "0x170000CC")]
	public static long SystemTimeTicks
	{
		[Token(Token = "0x6000950")]
		[Address(RVA = "0x131EFA0", Offset = "0x131EFA0", VA = "0x131EFA0")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x170000CD")]
	public static float realtimeSinceStartup
	{
		[Token(Token = "0x6000951")]
		[Address(RVA = "0x131F018", Offset = "0x131F018", VA = "0x131F018")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000CE")]
	public static float unscaledTime
	{
		[Token(Token = "0x6000952")]
		[Address(RVA = "0x131F020", Offset = "0x131F020", VA = "0x131F020")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000CF")]
	public static float deltaTime
	{
		[Token(Token = "0x6000953")]
		[Address(RVA = "0x131F028", Offset = "0x131F028", VA = "0x131F028")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D0")]
	public static int millisDeltaTime
	{
		[Token(Token = "0x6000954")]
		[Address(RVA = "0x131F090", Offset = "0x131F090", VA = "0x131F090")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000D1")]
	public static float unscaledDeltaTime
	{
		[Token(Token = "0x6000956")]
		[Address(RVA = "0x131F188", Offset = "0x131F188", VA = "0x131F188")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000D2")]
	public static float TimeScale
	{
		[Token(Token = "0x6000957")]
		[Address(RVA = "0x131F190", Offset = "0x131F190", VA = "0x131F190")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000958")]
		[Address(RVA = "0x131F198", Offset = "0x131F198", VA = "0x131F198")]
		set
		{
		}
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x131ED88", Offset = "0x131ED88", VA = "0x131ED88")]
	public static DateTime GetCovertServerDataTime(long serverTimeMillis, bool isClientTimeZone = false)
	{
		return default(DateTime);
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x131F0F8", Offset = "0x131F0F8", VA = "0x131F0F8")]
	public static void SetDeltaTime(float deltaTime)
	{
	}
}
[Token(Token = "0x2000140")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE0D24", Offset = "0xEE0D24")]
public class ComponentCacheAttribute : Attribute
{
	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7294", Offset = "0xEE7294")]
	private readonly Type <ComponentCacheType>k__BackingField;

	[Token(Token = "0x170000D3")]
	public Type ComponentCacheType
	{
		[Token(Token = "0x600095A")]
		[Address(RVA = "0x121D060", Offset = "0x121D060", VA = "0x121D060")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF6C0", Offset = "0xEEF6C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x121D068", Offset = "0x121D068", VA = "0x121D068")]
	public ComponentCacheAttribute(Type type)
	{
	}
}
[Token(Token = "0x2000141")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE0D5C", Offset = "0xEE0D5C")]
public class SingletonComponentCacheAttribute : Attribute
{
	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE72A4", Offset = "0xEE72A4")]
	private readonly Type <ComponentCacheType>k__BackingField;

	[Token(Token = "0x170000D4")]
	public Type ComponentCacheType
	{
		[Token(Token = "0x600095C")]
		[Address(RVA = "0x12691C8", Offset = "0x12691C8", VA = "0x12691C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF6D0", Offset = "0xEEF6D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x12691D0", Offset = "0x12691D0", VA = "0x12691D0")]
	public SingletonComponentCacheAttribute(Type type)
	{
	}
}
[Token(Token = "0x2000142")]
public class ComponentCacheTools : MonoBehaviour
{
	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Type, List<Component>> ComponentsDic;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<Type, Component> SingletonComponentDic;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<Type, object[]> TypeToCustomAttributesDic;

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x121D09C", Offset = "0x121D09C", VA = "0x121D09C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x121D3E4", Offset = "0x121D3E4", VA = "0x121D3E4")]
	private void AddToDic(Type type, Component component)
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x121D4CC", Offset = "0x121D4CC", VA = "0x121D4CC")]
	private void AddToSingletonDic(Type type, Component component)
	{
	}

	[Token(Token = "0x6000961")]
	public List<Component> GetCacheComponents<T>()
	{
		return null;
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x121D6D8", Offset = "0x121D6D8", VA = "0x121D6D8")]
	public List<Component> GetCacheComponents(Type type)
	{
		return null;
	}

	[Token(Token = "0x6000963")]
	public T GetCacheSingletonComponent<T>() where T : Component
	{
		return null;
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x121D758", Offset = "0x121D758", VA = "0x121D758")]
	public Component GetCacheSingletonComponent(Type type)
	{
		return null;
	}

	[Token(Token = "0x6000965")]
	public bool PollingCacheComponent<T>(Action<T> returnCB, bool isReturnNull = true) where T : Component
	{
		return default(bool);
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x121D7D8", Offset = "0x121D7D8", VA = "0x121D7D8")]
	public ComponentCacheTools()
	{
	}
}
[Token(Token = "0x2000143")]
public class DamageReactTools : Singleton<DamageReactTools>
{
	[Token(Token = "0x6000967")]
	[Address(RVA = "0x121F2F8", Offset = "0x121F2F8", VA = "0x121F2F8")]
	public void AttackHead()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x121F358", Offset = "0x121F358", VA = "0x121F358")]
	public void EncounterAttack(Vector3 _hitDir, Transform _transform)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x121F4FC", Offset = "0x121F4FC", VA = "0x121F4FC")]
	public void EncounterAttack(EAttackDir eAttackDir)
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x121F500", Offset = "0x121F500", VA = "0x121F500")]
	public void Burn()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x121F504", Offset = "0x121F504", VA = "0x121F504")]
	public void Poisoning()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x121F508", Offset = "0x121F508", VA = "0x121F508")]
	public void SprayBlood()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x121F50C", Offset = "0x121F50C", VA = "0x121F50C")]
	public void ToDie()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x121F510", Offset = "0x121F510", VA = "0x121F510")]
	public void BornToDie()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x121F514", Offset = "0x121F514", VA = "0x121F514")]
	public void ScreenFadeOutIn(bool bOut, float duration, Action onFadeComplete)
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x121F518", Offset = "0x121F518", VA = "0x121F518")]
	public void ScreenFadeStop()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x121F51C", Offset = "0x121F51C", VA = "0x121F51C")]
	public void ShakeCamera(float strength, float shakeDuration)
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x121F520", Offset = "0x121F520", VA = "0x121F520")]
	public void ToDefault()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x121F524", Offset = "0x121F524", VA = "0x121F524")]
	private bool CheckComponent()
	{
		return default(bool);
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x121F52C", Offset = "0x121F52C", VA = "0x121F52C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x121F530", Offset = "0x121F530", VA = "0x121F530")]
	public DamageReactTools()
	{
	}
}
[Token(Token = "0x2000144")]
public class EncounterAttackEffects : MonoBehaviour
{
	[Token(Token = "0x2000573")]
	public enum EncounterAttackDir
	{
		[Token(Token = "0x4001FE2")]
		none = 0,
		[Token(Token = "0x4001FE3")]
		left = 1,
		[Token(Token = "0x4001FE4")]
		right = 2,
		[Token(Token = "0x4001FE5")]
		up = 3,
		[Token(Token = "0x4001FE6")]
		down = 4,
		[Token(Token = "0x4001FE7")]
		head = 100
	}

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject up;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject down;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject left;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject right;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject head;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EncounterAttackEffects Instance;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> effects;

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x1232F94", Offset = "0x1232F94", VA = "0x1232F94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x1232FEC", Offset = "0x1232FEC", VA = "0x1232FEC")]
	public void Play(EncounterAttackDir dir)
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x1233378", Offset = "0x1233378", VA = "0x1233378")]
	public EncounterAttackEffects()
	{
	}
}
[Token(Token = "0x2000145")]
public class CSVHelper
{
	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE72B4", Offset = "0xEE72B4")]
	private static readonly NumberFormatInfo <NumberFormatInfo>k__BackingField;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string ADD_PATH_NAME;

	[Token(Token = "0x4000845")]
	public const string PATH_NAME = "Table";

	[Token(Token = "0x170000D5")]
	public static NumberFormatInfo NumberFormatInfo
	{
		[Token(Token = "0x6000979")]
		[Address(RVA = "0x12AE638", Offset = "0x12AE638", VA = "0x12AE638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF6E0", Offset = "0xEEF6E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x12AE6A0", Offset = "0x12AE6A0", VA = "0x12AE6A0")]
	public static void SetAddPathName(string name)
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x12AD094", Offset = "0x12AD094", VA = "0x12AD094")]
	public static string Combine(string csv_name)
	{
		return null;
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x12AD46C", Offset = "0x12AD46C", VA = "0x12AD46C")]
	public static byte[] GetBytes(string table_path)
	{
		return null;
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x12AD404", Offset = "0x12AD404", VA = "0x12AD404")]
	public static ulong GetKey(object key1)
	{
		return default(ulong);
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x12AE710", Offset = "0x12AE710", VA = "0x12AE710")]
	public static ulong GetKey(object key1, object key2)
	{
		return default(ulong);
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x12AE820", Offset = "0x12AE820", VA = "0x12AE820")]
	public static ulong GetKey(object key1, object key2, object key3)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x12AE96C", Offset = "0x12AE96C", VA = "0x12AE96C")]
	public static ulong GetKey(object key1, object key2, object key3, object key4)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x12AEAF4", Offset = "0x12AEAF4", VA = "0x12AEAF4")]
	public static ulong GetKey(object key1, object key2, object key3, object key4, object key5)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x12AECB8", Offset = "0x12AECB8", VA = "0x12AECB8")]
	public CSVHelper()
	{
	}
}
[Token(Token = "0x2000146")]
public class DataManager : Singleton<DataManager>
{
	[Token(Token = "0x2000574")]
	public class LevelComparer : IComparer<int>
	{
		[Token(Token = "0x6002BBA")]
		[Address(RVA = "0x1225EFC", Offset = "0x1225EFC", VA = "0x1225EFC", Slot = "4")]
		public int Compare(int x, int y)
		{
			return default(int);
		}

		[Token(Token = "0x6002BBB")]
		[Address(RVA = "0x1225F28", Offset = "0x1225F28", VA = "0x1225F28")]
		public LevelComparer()
		{
		}
	}

	[Token(Token = "0x2000575")]
	public struct ExpShareData
	{
		[Token(Token = "0x4001FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int level_diff;

		[Token(Token = "0x4001FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float killer_ratio;

		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float other_ratio;
	}

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, UnitAttribute> playerDataHash;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, UnitAttribute> monsterDataHash;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, WeaponAttribute> weaponDataHash;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, List<LiveCameraConfigData>> LiveCameraStepConfigDataHash;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, LiveCameraConfigData> LiveCameraCommonConfigDataHash;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, InstanceFlowData> InstanceFlowDataHash;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MultiSortMap<int, int, WeaponLevelData> weaponLevelHash;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<int, int> weaponMaxLevelHash;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MultiSortMap<int, int, PlayerLevelData> playerLevelHash;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<int, int> playerMaxLevelHash;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<int, int> playerMinLevelHash;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MultiSortMap<int, int, MonsterLevelData> monsterLevelHash;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<int, int> monsterMaxLevelHash;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<int, int> monsterMinLevelHash;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Dictionary<int, ExpShareData> ExpShareDataDic;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<int, string> SettingHash;

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x12207AC", Offset = "0x12207AC", VA = "0x12207AC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x122353C", Offset = "0x122353C", VA = "0x122353C")]
	public WeaponLevelData GetWeaponLevelData(int weaponType, int lv)
	{
		return null;
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x1223804", Offset = "0x1223804", VA = "0x1223804")]
	public int GetWeaponMaxLevel(int weaponType)
	{
		return default(int);
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x122003C", Offset = "0x122003C", VA = "0x122003C")]
	public PlayerLevelData GetPlayerLevelData(int playerType, int lv)
	{
		return null;
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x1223908", Offset = "0x1223908", VA = "0x1223908")]
	public SortedDictionary<int, PlayerLevelData> GetPlayerLevelDatas(int playerType)
	{
		return null;
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x121FBE4", Offset = "0x121FBE4", VA = "0x121FBE4")]
	public int GetPlayerMaxLevel(int playerType)
	{
		return default(int);
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x121F9DC", Offset = "0x121F9DC", VA = "0x121F9DC")]
	public int GetPlayerMinLevel(int playerType)
	{
		return default(int);
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x1223A04", Offset = "0x1223A04", VA = "0x1223A04")]
	public MonsterLevelData GetMonsterLevelData(int monsterType, int lv)
	{
		return null;
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x121FCE8", Offset = "0x121FCE8", VA = "0x121FCE8")]
	public int GetMonsterMaxLevel(int monsterType)
	{
		return default(int);
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x121FAE0", Offset = "0x121FAE0", VA = "0x121FAE0")]
	public int GetMonsterMinLevel(int monsterType)
	{
		return default(int);
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x1223318", Offset = "0x1223318", VA = "0x1223318")]
	private void InitExpShareData()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x1223CCC", Offset = "0x1223CCC", VA = "0x1223CCC")]
	public bool GetExpShareData(int level_diff, out ExpShareData expShareData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x12219B0", Offset = "0x12219B0", VA = "0x12219B0")]
	public void InitPlayerAttribute()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x1223DC0", Offset = "0x1223DC0", VA = "0x1223DC0")]
	public UnitAttribute GetPlayerAttribute(int playerTableId)
	{
		return null;
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x1222750", Offset = "0x1222750", VA = "0x1222750")]
	public void InitMonsterAttribute()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x1223E54", Offset = "0x1223E54", VA = "0x1223E54")]
	public UnitAttribute GetMonsterAttribute(int monsterTableId)
	{
		return null;
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x1223EE8", Offset = "0x1223EE8", VA = "0x1223EE8")]
	public UnitAttribute GetNpcAttribute(int npcTableId)
	{
		return null;
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x122120C", Offset = "0x122120C", VA = "0x122120C")]
	public void InitWeaponAttribute()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x1223EF0", Offset = "0x1223EF0", VA = "0x1223EF0")]
	public WeaponAttribute GetWeaponAttribute(e_weapon_type weaponType)
	{
		return null;
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x122216C", Offset = "0x122216C", VA = "0x122216C")]
	private void InitLanguage()
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x1220FCC", Offset = "0x1220FCC", VA = "0x1220FCC")]
	private void InitTableSetting()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x1223F84", Offset = "0x1223F84", VA = "0x1223F84")]
	public string GetSettingValue(e_setting_type key)
	{
		return null;
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x1223F88", Offset = "0x1223F88", VA = "0x1223F88")]
	public string GetSettingValue(int key)
	{
		return null;
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x1224070", Offset = "0x1224070", VA = "0x1224070")]
	public int GetSettingValueInt(e_setting_type key)
	{
		return default(int);
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x1224074", Offset = "0x1224074", VA = "0x1224074")]
	public int GetSettingValueInt(int key)
	{
		return default(int);
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x1224194", Offset = "0x1224194", VA = "0x1224194")]
	public float GetSettingValueFloat(e_setting_type key)
	{
		return default(float);
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x1224198", Offset = "0x1224198", VA = "0x1224198")]
	public float GetSettingValueFloat(int key)
	{
		return default(float);
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x12242B8", Offset = "0x12242B8", VA = "0x12242B8")]
	public bool GetSettingValueBool(e_setting_type key)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x12242BC", Offset = "0x12242BC", VA = "0x12242BC")]
	public bool GetSettingValueBool(int key)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x12243BC", Offset = "0x12243BC", VA = "0x12243BC")]
	public bool GetSettingValueSplitInt(e_setting_type key, Action<int, int> returnCB)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x12243C0", Offset = "0x12243C0", VA = "0x12243C0")]
	public bool GetSettingValueSplitInt(int key, Action<int, int> returnCB)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x1224628", Offset = "0x1224628", VA = "0x1224628")]
	public bool GetSettingValueSplitFloat(e_setting_type key, Action<int, float> returnCB)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x122462C", Offset = "0x122462C", VA = "0x122462C")]
	public bool GetSettingValueSplitFloat(int key, Action<int, float> returnCB)
	{
		return default(bool);
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x12223C0", Offset = "0x12223C0", VA = "0x12223C0")]
	public void InitLiveCameraConfigData()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x1224890", Offset = "0x1224890", VA = "0x1224890")]
	public List<LiveCameraConfigData> GetLiveCameraAttributeList(int step)
	{
		return null;
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x1224978", Offset = "0x1224978", VA = "0x1224978")]
	public Dictionary<int, LiveCameraConfigData> GetCommonLiveCameraAttributeList()
	{
		return null;
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x1223020", Offset = "0x1223020", VA = "0x1223020")]
	public void InitInstanceFlowData()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x1224980", Offset = "0x1224980", VA = "0x1224980")]
	public InstanceFlowData GetInstanceFlowDataById(int id)
	{
		return null;
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x1224A30", Offset = "0x1224A30", VA = "0x1224A30")]
	public Dictionary<int, InstanceFlowData> GetInstanceFlowDatas()
	{
		return null;
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x1224A38", Offset = "0x1224A38", VA = "0x1224A38")]
	public DataManager()
	{
	}
}
[Token(Token = "0x2000147")]
public class InstanceFlowData
{
	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int instanceId;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int flowId;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] childs;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int levelCap;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int levelOffset;

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x1470560", Offset = "0x1470560", VA = "0x1470560")]
	public InstanceFlowData()
	{
	}
}
[Token(Token = "0x2000148")]
public class MonsterLevelData
{
	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int monsterType;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int lv;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxHp;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int atk;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int expDrop;

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x12EB8D0", Offset = "0x12EB8D0", VA = "0x12EB8D0")]
	public MonsterLevelData()
	{
	}
}
[Token(Token = "0x2000149")]
public class PlayerLevelData
{
	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int playerType;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int lv;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxHp;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int exp;

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x1530C70", Offset = "0x1530C70", VA = "0x1530C70")]
	public PlayerLevelData()
	{
	}
}
[Serializable]
[Token(Token = "0x200014A")]
public class UnitAttribute
{
	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxHP;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isCreateWeapon;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public e_type_monster monsterType;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public e_type_npc npcType;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int modelId;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int Atk;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public e_weapon_type weaponType;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public e_weapon_group weaponGroup;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int score;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int hpRecoverInterval;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int hpRecoverValue;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<int> dropList;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int dropRatio;

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x11E1D78", Offset = "0x11E1D78", VA = "0x11E1D78")]
	public UnitAttribute()
	{
	}
}
[Token(Token = "0x200014B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xEE0D94", Offset = "0xEE0D94")]
public class UnitAttributeSet : ScriptableObject
{
	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnitAttribute[] PlayerAttributeList;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnitAttribute[] MonsterAttributeList;

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x11E1E14", Offset = "0x11E1E14", VA = "0x11E1E14")]
	public UnitAttributeSet()
	{
	}
}
[Serializable]
[Token(Token = "0x200014C")]
public class WeaponAttribute
{
	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public e_weapon_type weaponType;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int modelId;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int Atk;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int headPer;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int bulletCount;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int MagazineCount;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int fireInterval;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int scatterRadius;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int recoil;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int bulletForce;

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x1D6E330", Offset = "0x1D6E330", VA = "0x1D6E330")]
	public WeaponAttribute()
	{
	}
}
[Token(Token = "0x200014D")]
public class WeaponLevelData
{
	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int weaponType;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int lv;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int bulletCount;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int magazineCount;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int atk;

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x1D6F37C", Offset = "0x1D6F37C", VA = "0x1D6F37C")]
	public WeaponLevelData()
	{
	}
}
[Token(Token = "0x200014E")]
public abstract class Bullet : MonoBehaviour
{
	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static Collider[] tempHitCollider;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WUnit attacker;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE72C4", Offset = "0xEE72C4")]
	private e_weapon_type <WeaponType>k__BackingField;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform mTransformCache;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject mGameObjectCache;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public e_Attack_type type;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public e_HitEffect_type hittype;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject hitEffect;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject dieEffect;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isBreakType;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool isTriggerHoleEffect;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool isTriggerMaterialEffect;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	public bool isAOE;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float AOERadius;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int bulletForce;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int headPer;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private int bulletAttack;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static List<int> AOEHurtPlayIDList;

	[Token(Token = "0x170000D6")]
	public WUnit Attacker
	{
		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x13DE4C8", Offset = "0x13DE4C8", VA = "0x13DE4C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D7")]
	public e_weapon_type WeaponType
	{
		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x13DE4D0", Offset = "0x13DE4D0", VA = "0x13DE4D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF6F0", Offset = "0xEEF6F0")]
		get
		{
			return default(e_weapon_type);
		}
		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x13DE4D8", Offset = "0x13DE4D8", VA = "0x13DE4D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF700", Offset = "0xEEF700")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D8")]
	public Transform TransformCache
	{
		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x13DE4E0", Offset = "0x13DE4E0", VA = "0x13DE4E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000D9")]
	public GameObject GameObjectCache
	{
		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x13DE4E8", Offset = "0x13DE4E8", VA = "0x13DE4E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000DA")]
	public int HeadPer
	{
		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x13DE4F0", Offset = "0x13DE4F0", VA = "0x13DE4F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000DB")]
	public int BulletAttack
	{
		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x13DE4F8", Offset = "0x13DE4F8", VA = "0x13DE4F8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x13DE500", Offset = "0x13DE500", VA = "0x13DE500")]
		protected set
		{
		}
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x13D1268", Offset = "0x13D1268", VA = "0x13D1268", Slot = "4")]
	public virtual void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x13DE508", Offset = "0x13DE508", VA = "0x13DE508")]
	private void Update()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x13DE538", Offset = "0x13DE538", VA = "0x13DE538")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x13DE568", Offset = "0x13DE568", VA = "0x13DE568")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x13DE574", Offset = "0x13DE574", VA = "0x13DE574", Slot = "5")]
	protected virtual void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x13DE578", Offset = "0x13DE578", VA = "0x13DE578", Slot = "6")]
	protected virtual void DoLateUpdate()
	{
	}

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x13DE57C", Offset = "0x13DE57C", VA = "0x13DE57C", Slot = "7")]
	protected virtual void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x13DE580", Offset = "0x13DE580", VA = "0x13DE580", Slot = "8")]
	public virtual void DoDestroy(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x13D18A8", Offset = "0x13D18A8", VA = "0x13D18A8", Slot = "9")]
	public virtual void DoDestroy()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x13DE5B4", Offset = "0x13DE5B4", VA = "0x13DE5B4", Slot = "10")]
	protected virtual void ApplyHitEffect(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x13DE684", Offset = "0x13DE684", VA = "0x13DE684", Slot = "11")]
	protected virtual void ApplyDieEffect(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal)
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x13DE754", Offset = "0x13DE754", VA = "0x13DE754", Slot = "12")]
	protected virtual bool HitProcessing(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x13DF0E4", Offset = "0x13DF0E4", VA = "0x13DF0E4", Slot = "13")]
	protected virtual void AOEProcessing(Vector3 hitPos)
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x13DF288", Offset = "0x13DF288", VA = "0x13DF288", Slot = "14")]
	protected virtual void AOEHitProcess(Vector3 hitpos, Collider collider)
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x13DF4EC", Offset = "0x13DF4EC", VA = "0x13DF4EC", Slot = "15")]
	protected virtual void AOEHitSingleProcess(Vector3 hitpos, GameObject go, WUnit hitUnit, int bulletDamage = -1)
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x13DF4FC", Offset = "0x13DF4FC", VA = "0x13DF4FC", Slot = "16")]
	protected virtual void HitSingleProcess(Vector3 hitpos, GameObject go, WUnit hitUnit, int bulletDamage = -1)
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x13DF5A4", Offset = "0x13DF5A4", VA = "0x13DF5A4")]
	protected Bullet()
	{
	}
}
[Token(Token = "0x200014F")]
public class BulletAnimationController : MonoBehaviour
{
	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public clipItem[] animators;

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x13DFC68", Offset = "0x13DFC68", VA = "0x13DFC68")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x13DFCE0", Offset = "0x13DFCE0", VA = "0x13DFCE0")]
	public void ResetPlay()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x13DFD60", Offset = "0x13DFD60", VA = "0x13DFD60")]
	public BulletAnimationController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000150")]
public class clipItem
{
	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Animator ani;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int layer;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float beginTime;

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x1D7A778", Offset = "0x1D7A778", VA = "0x1D7A778")]
	public clipItem()
	{
	}
}
[Token(Token = "0x2000151")]
public class BossBulletLaser : MonsterBullet
{
	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float MaxDistance;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform Laser;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform LaserHead;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float DamageInterval;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Animator ani;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioEvent FireLoopAudio;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public AudioEvent FinishAudio;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float CheckSize;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private WwiseDefine fireLoopSoundWwise;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private WwiseDefine finishSoundWwise;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float damageRunningTime;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private GameObject preHitGameObject;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float laserRunningDistance;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Vector3 headPosition;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 headPositionOffset;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Coroutine delayAct;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool isHurting;

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x13D29BC", Offset = "0x13D29BC", VA = "0x13D29BC", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x13D2CF0", Offset = "0x13D2CF0", VA = "0x13D2CF0", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x13D2D50", Offset = "0x13D2D50", VA = "0x13D2D50", Slot = "21")]
	protected override void RayCheck()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x13D2B38", Offset = "0x13D2B38", VA = "0x13D2B38")]
	private void UpdateLaserPosition()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x13D33DC", Offset = "0x13D33DC", VA = "0x13D33DC", Slot = "25")]
	public override void ManualDoDestroy()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x13D3584", Offset = "0x13D3584", VA = "0x13D3584")]
	private void DelayAniDestroy()
	{
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x13D3604", Offset = "0x13D3604", VA = "0x13D3604", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x13D360C", Offset = "0x13D360C", VA = "0x13D360C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x13D36B8", Offset = "0x13D36B8", VA = "0x13D36B8", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x13D36C0", Offset = "0x13D36C0", VA = "0x13D36C0")]
	public BossBulletLaser()
	{
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x13D376C", Offset = "0x13D376C", VA = "0x13D376C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF710", Offset = "0xEEF710")]
	private void <ManualDoDestroy>b__21_0()
	{
	}
}
[Token(Token = "0x2000152")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE0E00", Offset = "0xEE0E00")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE0E00", Offset = "0xEE0E00")]
public class CleanBullet : ActionTask<Transform>
{
	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> bulletRoot;

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x120D674", Offset = "0x120D674", VA = "0x120D674", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x120D814", Offset = "0x120D814", VA = "0x120D814")]
	public CleanBullet()
	{
	}
}
[Token(Token = "0x2000153")]
public class FireKeepAttack : MonoBehaviour
{
	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x1328154", Offset = "0x1328154", VA = "0x1328154")]
	private void Start()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x1328158", Offset = "0x1328158", VA = "0x1328158")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x132815C", Offset = "0x132815C", VA = "0x132815C")]
	private void Run()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x1328160", Offset = "0x1328160", VA = "0x1328160")]
	public FireKeepAttack()
	{
	}
}
[Token(Token = "0x2000154")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE0E64", Offset = "0xEE0E64")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE0E64", Offset = "0xEE0E64")]
public class GuidedMissileAI : ActionTask<Transform>
{
	[Token(Token = "0x2000576")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4C50", Offset = "0xEE4C50")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float curTime;

		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GuidedMissileAI <>4__this;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float percent;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GoSpline path;

		[Token(Token = "0x6002BBC")]
		[Address(RVA = "0x12735C8", Offset = "0x12735C8", VA = "0x12735C8")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6002BBD")]
		[Address(RVA = "0x1273AB0", Offset = "0x1273AB0", VA = "0x1273AB0")]
		internal void <OnExecute>b__0()
		{
		}
	}

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> targetPos;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xEE72E4", Offset = "0xEE72E4")]
	public BBParameter<float> targetPercent;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> upFactor;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<bool> isRightOffset;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<float> rightOrLeftFactor;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<float> bulletSpeed;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<bool> isRefParent;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public BBParameter<Transform> refTransf;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 beginPos;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Action updateAction;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private JumpMoveData jumpdata;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BBParameter<float> time;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 oldPos;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 direction;

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x12732C4", Offset = "0x12732C4", VA = "0x12732C4", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x12739B0", Offset = "0x12739B0", VA = "0x12739B0", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x12739C4", Offset = "0x12739C4", VA = "0x12739C4", Slot = "14")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x12735D0", Offset = "0x12735D0", VA = "0x12735D0")]
	private GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x12739F8", Offset = "0x12739F8", VA = "0x12739F8")]
	public GuidedMissileAI()
	{
	}
}
[Token(Token = "0x2000155")]
public class KeepAttackBase : MonoBehaviour
{
	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int damage;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float interval;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeout;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isFirstHit;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WUnit attacker;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WUnit target;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public e_Attack_type screenEffectType;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public e_HitEffect_type hitReactionType;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float curTime;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine cr_interval;

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x1473B0C", Offset = "0x1473B0C", VA = "0x1473B0C")]
	public void ResetTime()
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x1473B14", Offset = "0x1473B14", VA = "0x1473B14")]
	public void Run()
	{
	}

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x1473D50", Offset = "0x1473D50", VA = "0x1473D50")]
	public void Stop()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x1473DD0", Offset = "0x1473DD0", VA = "0x1473DD0", Slot = "4")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x1473E28", Offset = "0x1473E28", VA = "0x1473E28")]
	public KeepAttackBase()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x1473E38", Offset = "0x1473E38", VA = "0x1473E38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF720", Offset = "0xEEF720")]
	private void <Run>b__11_0()
	{
	}
}
[Token(Token = "0x2000156")]
public class MonsterBullerEmitter1 : MonsterBulletEmitter
{
	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool isChild;

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x12E64FC", Offset = "0x12E64FC", VA = "0x12E64FC", Slot = "4")]
	public override void Fire(int randseed)
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x12E6644", Offset = "0x12E6644", VA = "0x12E6644")]
	public MonsterBullerEmitter1()
	{
	}
}
[Token(Token = "0x2000157")]
public class MonsterBullet : Bullet
{
	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float lifeTime;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float bulletRadius;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float speed;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform target;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 targetPos;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 targetOffset;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected float moveStep;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected float curTime;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Vector3 oldPos;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected Vector3 direction;

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x12E6654", Offset = "0x12E6654", VA = "0x12E6654", Slot = "17")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x12E6658", Offset = "0x12E6658", VA = "0x12E6658", Slot = "18")]
	public virtual void ResetPosition()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x12E6698", Offset = "0x12E6698", VA = "0x12E6698", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x12E6708", Offset = "0x12E6708", VA = "0x12E6708", Slot = "19")]
	protected virtual void UpdateMove(float time)
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x12E670C", Offset = "0x12E670C", VA = "0x12E670C", Slot = "20")]
	protected virtual void UpdateLifeTime(float time)
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x12E6734", Offset = "0x12E6734", VA = "0x12E6734", Slot = "21")]
	protected virtual void RayCheck()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x12E693C", Offset = "0x12E693C", VA = "0x12E693C", Slot = "22")]
	protected virtual void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x12E6AF8", Offset = "0x12E6AF8", VA = "0x12E6AF8", Slot = "23")]
	protected virtual void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x12E6C94", Offset = "0x12E6C94", VA = "0x12E6C94", Slot = "24")]
	protected virtual bool HitProcess(GameObject target, Vector3 hitpos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x12E6D64", Offset = "0x12E6D64", VA = "0x12E6D64", Slot = "25")]
	public virtual void ManualDoDestroy()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x12E6D6C", Offset = "0x12E6D6C", VA = "0x12E6D6C")]
	public MonsterBullet()
	{
	}
}
[Token(Token = "0x2000158")]
public class MonsterBulletBodyFire : MonsterBulletStay
{
	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int damage;

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x12E73AC", Offset = "0x12E73AC", VA = "0x12E73AC", Slot = "23")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x12E74EC", Offset = "0x12E74EC", VA = "0x12E74EC", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x12E74F0", Offset = "0x12E74F0", VA = "0x12E74F0", Slot = "25")]
	public override void ManualDoDestroy()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x12E74F8", Offset = "0x12E74F8", VA = "0x12E74F8")]
	public MonsterBulletBodyFire()
	{
	}
}
[Token(Token = "0x2000159")]
public class MonsterBulletBoommanExplode : MonsterBulletStay
{
	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool isKeepAttack;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int damage;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float interval;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float timeout;

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x12E7500", Offset = "0x12E7500", VA = "0x12E7500", Slot = "23")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x12E75B0", Offset = "0x12E75B0", VA = "0x12E75B0", Slot = "15")]
	protected override void AOEHitSingleProcess(Vector3 hitPos, GameObject go, WUnit hitUnit, int bulletDamage = -1)
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x12E77A4", Offset = "0x12E77A4", VA = "0x12E77A4")]
	public MonsterBulletBoommanExplode()
	{
	}
}
[Token(Token = "0x200015A")]
public class MonsterBulletEmitter : MonoBehaviour
{
	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform firePos;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WUnit owner;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int bulletAssetID;

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x12E77A8", Offset = "0x12E77A8", VA = "0x12E77A8")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x12E77B0", Offset = "0x12E77B0", VA = "0x12E77B0")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x12E77B4", Offset = "0x12E77B4", VA = "0x12E77B4", Slot = "4")]
	public virtual void Fire(int randseed)
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x12E664C", Offset = "0x12E664C", VA = "0x12E664C")]
	public MonsterBulletEmitter()
	{
	}
}
[Token(Token = "0x200015B")]
public class MonsterBulletEmitterN : MonsterBulletEmitter
{
	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int bulletNum;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float posDistance;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float radius;

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x12E7820", Offset = "0x12E7820", VA = "0x12E7820", Slot = "4")]
	public override void Fire(int randseed)
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x12E7AD0", Offset = "0x12E7AD0", VA = "0x12E7AD0")]
	public MonsterBulletEmitterN()
	{
	}
}
[Token(Token = "0x200015C")]
public class MonsterBulletFire : MonsterBullet
{
	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x12E7AE0", Offset = "0x12E7AE0", VA = "0x12E7AE0", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x12E7AE4", Offset = "0x12E7AE4", VA = "0x12E7AE4", Slot = "22")]
	protected override void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x12E7AE8", Offset = "0x12E7AE8", VA = "0x12E7AE8")]
	private new void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x12E7C5C", Offset = "0x12E7C5C", VA = "0x12E7C5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x12E7C64", Offset = "0x12E7C64", VA = "0x12E7C64")]
	public MonsterBulletFire()
	{
	}
}
[Token(Token = "0x200015D")]
public class MonsterBulletGravity : MonsterBullet
{
	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Rigidbody rig;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform directionObject;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float directionCurTime;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float directionTime;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 forceDirection;

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x12E7C68", Offset = "0x12E7C68", VA = "0x12E7C68", Slot = "17")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x12E7C6C", Offset = "0x12E7C6C", VA = "0x12E7C6C")]
	private void MakeDirection(float time)
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x12E7D88", Offset = "0x12E7D88", VA = "0x12E7D88", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x12E7E7C", Offset = "0x12E7E7C", VA = "0x12E7E7C", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x12E7E80", Offset = "0x12E7E80", VA = "0x12E7E80", Slot = "7")]
	protected override void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x12E7EF0", Offset = "0x12E7EF0", VA = "0x12E7EF0", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x12E7F2C", Offset = "0x12E7F2C", VA = "0x12E7F2C", Slot = "19")]
	protected override void UpdateMove(float time)
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x12E8110", Offset = "0x12E8110", VA = "0x12E8110")]
	public MonsterBulletGravity()
	{
	}
}
[Token(Token = "0x200015E")]
public class MonsterBulletGroundPoison : MonsterBulletStay
{
	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool isKeepAttack;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int damage;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float interval;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float timeout;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioEvent audioEvent;

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x12E8120", Offset = "0x12E8120", VA = "0x12E8120", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x12E8124", Offset = "0x12E8124", VA = "0x12E8124")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x12E81D8", Offset = "0x12E81D8", VA = "0x12E81D8", Slot = "20")]
	protected override void UpdateLifeTime(float time)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x12E81FC", Offset = "0x12E81FC", VA = "0x12E81FC", Slot = "23")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x12E84AC", Offset = "0x12E84AC", VA = "0x12E84AC")]
	public MonsterBulletGroundPoison()
	{
	}
}
[Token(Token = "0x200015F")]
public class MonsterBulletHead : MonsterBullet
{
	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float highFactor;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AnimationCurve moveCurve;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GoSpline path;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float moveTime;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float percent;

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x12E84B0", Offset = "0x12E84B0", VA = "0x12E84B0")]
	private GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x12E86F4", Offset = "0x12E86F4", VA = "0x12E86F4")]
	private new void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x12E8894", Offset = "0x12E8894", VA = "0x12E8894", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x12E88C8", Offset = "0x12E88C8", VA = "0x12E88C8", Slot = "19")]
	protected override void UpdateMove(float time)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x12E8A94", Offset = "0x12E8A94", VA = "0x12E8A94")]
	public MonsterBulletHead()
	{
	}
}
[Token(Token = "0x2000160")]
public class MonsterBulletPoison : MonsterBulletStraight
{
	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int explodeBulletID;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Vector3 positionOffset;

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x12E9674", Offset = "0x12E9674", VA = "0x12E9674", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x12E98CC", Offset = "0x12E98CC", VA = "0x12E98CC", Slot = "21")]
	protected override void RayCheck()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x12E9B34", Offset = "0x12E9B34", VA = "0x12E9B34", Slot = "22")]
	protected override void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x12E9B38", Offset = "0x12E9B38", VA = "0x12E9B38", Slot = "23")]
	protected override void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x12E969C", Offset = "0x12E969C", VA = "0x12E969C")]
	private void CreateExplodeBullet()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x12E9B3C", Offset = "0x12E9B3C", VA = "0x12E9B3C")]
	public MonsterBulletPoison()
	{
	}
}
[Token(Token = "0x2000161")]
public class MonsterBulletStay : MonsterBullet
{
	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x12E9B44", Offset = "0x12E9B44", VA = "0x12E9B44", Slot = "23")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x12E9CE4", Offset = "0x12E9CE4", VA = "0x12E9CE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x12E9D90", Offset = "0x12E9D90", VA = "0x12E9D90", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x12E74FC", Offset = "0x12E74FC", VA = "0x12E74FC")]
	public MonsterBulletStay()
	{
	}
}
[Token(Token = "0x2000162")]
public class MonsterBulletStraight : MonsterBullet
{
	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x12E9D98", Offset = "0x12E9D98", VA = "0x12E9D98", Slot = "19")]
	protected override void UpdateMove(float time)
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x12E9B40", Offset = "0x12E9B40", VA = "0x12E9B40")]
	public MonsterBulletStraight()
	{
	}
}
[Token(Token = "0x2000163")]
public class PoisonKeepAttack : KeepAttackBase
{
	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x15319E8", Offset = "0x15319E8", VA = "0x15319E8")]
	public PoisonKeepAttack()
	{
	}
}
[Token(Token = "0x2000164")]
public class BulletBomb : Bullet
{
	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject boomEffect;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float highFactor;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve moveCurve;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioEvent Grenades_Drop;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public AudioEvent Grenades_Bomb;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float speed;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 targetOffset;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected float moveStep;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected float curTime;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Vector3 oldPos;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected Vector3 direction;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GoSpline path;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float moveTime;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float percent;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private IDisposable updateDisposable;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private GameObject warnObject;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private WwiseDefine c4BlendAudioObj;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float maxDistance;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 forward;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 curPos;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private RaycastHit hit;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Coroutine coroutine;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool isTarget;

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x12A7398", Offset = "0x12A7398", VA = "0x12A7398", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x12A76AC", Offset = "0x12A76AC", VA = "0x12A76AC")]
	protected void DoUpdate()
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x12A73F8", Offset = "0x12A73F8", VA = "0x12A73F8")]
	public void ResetPosition()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x12A7B6C", Offset = "0x12A7B6C", VA = "0x12A7B6C")]
	private Vector3 randPos(Vector3 Pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x12A7960", Offset = "0x12A7960", VA = "0x12A7960")]
	protected GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x12A7784", Offset = "0x12A7784", VA = "0x12A7784")]
	protected void OnMotionEnd()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x12A7C40", Offset = "0x12A7C40", VA = "0x12A7C40")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x12A7C90", Offset = "0x12A7C90", VA = "0x12A7C90")]
	protected void ApplyBoomEffect(Vector3 hitPos)
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x12A7D60", Offset = "0x12A7D60", VA = "0x12A7D60", Slot = "12")]
	protected override bool HitProcessing(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x12A7D68", Offset = "0x12A7D68", VA = "0x12A7D68")]
	public BulletBomb()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x12A7E28", Offset = "0x12A7E28", VA = "0x12A7E28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF730", Offset = "0xEEF730")]
	private void <ResetPosition>b__25_0(Unit unit)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x12A7E2C", Offset = "0x12A7E2C", VA = "0x12A7E2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF740", Offset = "0xEEF740")]
	private void <ResetPosition>b__25_1(Unit unit)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x12A7E30", Offset = "0x12A7E30", VA = "0x12A7E30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF750", Offset = "0xEEF750")]
	private void <OnMotionEnd>b__28_0()
	{
	}
}
[Token(Token = "0x2000165")]
public class BulletCollision : BulletSustainedDamage
{
	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float bulletRadius;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Collider[] colliders;

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x12A7FA0", Offset = "0x12A7FA0", VA = "0x12A7FA0", Slot = "19")]
	protected override void RayCheck()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x12A8410", Offset = "0x12A8410", VA = "0x12A8410")]
	public BulletCollision()
	{
	}
}
[Token(Token = "0x2000166")]
public class BulletEffect : Bullet
{
	[Serializable]
	[Token(Token = "0x2000577")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4C60", Offset = "0xEE4C60")]
	private sealed class <>c
	{
		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__15_0;

		[Token(Token = "0x6002BBF")]
		[Address(RVA = "0x12A95F0", Offset = "0x12A95F0", VA = "0x12A95F0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002BC0")]
		[Address(RVA = "0x12A95F8", Offset = "0x12A95F8", VA = "0x12A95F8")]
		internal int <RayCheck>b__15_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 lastPos;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 forward;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 curPos;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE72FC", Offset = "0xEE72FC")]
	public float moveSpeed;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float miniShowDistance;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float effectDistance;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 vector3_o;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject effectRoot;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BulletAnimationController bac;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastHit[] tempRaycastHits;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<RaycastHit> tempSortList;

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x12A8504", Offset = "0x12A8504", VA = "0x12A8504", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x12A8638", Offset = "0x12A8638", VA = "0x12A8638", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x12A8790", Offset = "0x12A8790", VA = "0x12A8790")]
	private void PreMove(float deltatime)
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x12A886C", Offset = "0x12A886C", VA = "0x12A886C")]
	private void Move(float deltatime)
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x12A8894", Offset = "0x12A8894", VA = "0x12A8894")]
	private void RayCheck()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x12A8E90", Offset = "0x12A8E90", VA = "0x12A8E90")]
	private void OnHitJob(int index, int length)
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x12A8CD0", Offset = "0x12A8CD0", VA = "0x12A8CD0")]
	private bool HitTarget(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x12A90C0", Offset = "0x12A90C0", VA = "0x12A90C0", Slot = "12")]
	protected override bool HitProcessing(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x12A9420", Offset = "0x12A9420", VA = "0x12A9420")]
	public BulletEffect()
	{
	}
}
[Token(Token = "0x2000167")]
public class BulletLaser : Bullet
{
	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float delayDestroy;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool isDelayDestroy;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine coroutine;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject ExplosionEffect;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ParticleSystem pts;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE7354", Offset = "0xEE7354")]
	[SerializeField]
	private float maxDistance;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 forward;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 curPos;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private RaycastHit hitInfo;

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x12A963C", Offset = "0x12A963C", VA = "0x12A963C", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x12A99F0", Offset = "0x12A99F0", VA = "0x12A99F0", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x12A99F8", Offset = "0x12A99F8", VA = "0x12A99F8", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x12A9AD8", Offset = "0x12A9AD8", VA = "0x12A9AD8")]
	private void OnHitJob(int index, int length)
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x12A9794", Offset = "0x12A9794", VA = "0x12A9794")]
	private bool HitTarget(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x12A9CF4", Offset = "0x12A9CF4", VA = "0x12A9CF4", Slot = "12")]
	protected override bool HitProcessing(GameObject hitTarget, Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x12AA748", Offset = "0x12AA748", VA = "0x12AA748")]
	public BulletLaser()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x12AA808", Offset = "0x12AA808", VA = "0x12AA808")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF760", Offset = "0xEEF760")]
	private void <DoDestroy>b__11_0()
	{
	}
}
[Token(Token = "0x2000168")]
public class BulletStraight : Bullet
{
	[Serializable]
	[Token(Token = "0x2000578")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4C70", Offset = "0xEE4C70")]
	private sealed class <>c
	{
		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__15_0;

		[Token(Token = "0x6002BC2")]
		[Address(RVA = "0x12AC41C", Offset = "0x12AC41C", VA = "0x12AC41C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002BC3")]
		[Address(RVA = "0x12AC424", Offset = "0x12AC424", VA = "0x12AC424")]
		internal int <RayCheck>b__15_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float velocity;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject effectRoot;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float delayDisplay;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	protected Vector3 lastPos;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Vector3 forward;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected Vector3 curPos;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine coroutine;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected bool isMove;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static RaycastHit[] tempRaycastHits;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static List<RaycastHit> tempSortList;

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x12AB800", Offset = "0x12AB800", VA = "0x12AB800", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x12AB954", Offset = "0x12AB954", VA = "0x12AB954", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x12AB9DC", Offset = "0x12AB9DC", VA = "0x12AB9DC", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x12ABA28", Offset = "0x12ABA28", VA = "0x12ABA28", Slot = "17")]
	protected virtual void PreMove(float deltatime)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x12ABB08", Offset = "0x12ABB08", VA = "0x12ABB08", Slot = "18")]
	protected virtual void Move(float deltatime)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x12ABB30", Offset = "0x12ABB30", VA = "0x12ABB30", Slot = "19")]
	protected virtual void RayCheck()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x12ABFB0", Offset = "0x12ABFB0", VA = "0x12ABFB0")]
	private void OnHitJob(int index, int length)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x12A8250", Offset = "0x12A8250", VA = "0x12A8250")]
	protected bool HitTarget(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x12AC218", Offset = "0x12AC218", VA = "0x12AC218")]
	public BulletStraight()
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x12AC394", Offset = "0x12AC394", VA = "0x12AC394")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF770", Offset = "0xEEF770")]
	private void <DoInit>b__8_0()
	{
	}
}
[Token(Token = "0x2000169")]
public class BulletSustainedDamage : BulletStraight
{
	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float delayDestroy;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	protected bool isDelayDestroy;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine coroutine;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool isHealthPercentage;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float BleedingRatio;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool IsAOEDamageAttenuation;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool isBulletMonster;

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x12AC468", Offset = "0x12AC468", VA = "0x12AC468", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x12AC48C", Offset = "0x12AC48C", VA = "0x12AC48C", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x12AC570", Offset = "0x12AC570", VA = "0x12AC570", Slot = "14")]
	protected override void AOEHitProcess(Vector3 hitpos, Collider collider)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x12AC8CC", Offset = "0x12AC8CC", VA = "0x12AC8CC", Slot = "16")]
	protected override void HitSingleProcess(Vector3 hitpos, GameObject go, WUnit hitUnit, int bulletDamage = -1)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x12AC8D0", Offset = "0x12AC8D0", VA = "0x12AC8D0")]
	private void damage(Vector3 hitPos, GameObject TargetObject, WUnit hitUnit, int bulletDamage)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x12A8420", Offset = "0x12A8420", VA = "0x12A8420")]
	public BulletSustainedDamage()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x12ACB1C", Offset = "0x12ACB1C", VA = "0x12ACB1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF780", Offset = "0xEEF780")]
	private void <DoDestroy>b__8_0()
	{
	}
}
[Token(Token = "0x200016A")]
public class Bulletscattering : BulletStraight
{
	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[SerializeField]
	private float delayDestroy;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Coroutine coroutine;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject ArrowTail;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool isTime;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float time;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioEvent AudioEvent;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private WwiseDefine wwiseDefine;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float AccumulateTime;

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x12ACB20", Offset = "0x12ACB20", VA = "0x12ACB20", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x12ACC6C", Offset = "0x12ACC6C", VA = "0x12ACC6C", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x12ACDB8", Offset = "0x12ACDB8", VA = "0x12ACDB8", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x12ACEA4", Offset = "0x12ACEA4", VA = "0x12ACEA4")]
	public Bulletscattering()
	{
	}
}
[Token(Token = "0x200016B")]
public class EffectBulletStraight : BulletStraight
{
	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public AudioEvent DestroyAudio;

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x122EC58", Offset = "0x122EC58", VA = "0x122EC58", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x122ED18", Offset = "0x122ED18", VA = "0x122ED18")]
	public EffectBulletStraight()
	{
	}
}
[Token(Token = "0x200016C")]
public class EmitterManager : Singleton<EmitterManager>
{
	[Token(Token = "0x2000579")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4C80", Offset = "0xEE4C80")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform parent;

		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 pos;

		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion rot;

		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public WUnit attacker;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Weapon weapon;

		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<Bullet> cb;

		[Token(Token = "0x6002BC4")]
		[Address(RVA = "0x1232D90", Offset = "0x1232D90", VA = "0x1232D90")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6002BC5")]
		[Address(RVA = "0x1232E08", Offset = "0x1232E08", VA = "0x1232E08")]
		internal void <CreateEmitterAsync>b__0(GameObject obj)
		{
		}
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x1232724", Offset = "0x1232724", VA = "0x1232724")]
	public Bullet CreateEmitter(WUnit attacker, int iAssetID, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x1232910", Offset = "0x1232910", VA = "0x1232910")]
	public Bullet CreateEmitter(WUnit attacker, Weapon weapon, GameObject prefab, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x1232B98", Offset = "0x1232B98", VA = "0x1232B98")]
	public void CreateEmitterAsync(WUnit attacker, Weapon weapon, GameObject prefab, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent, [Optional] Action<Bullet> cb)
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x1232D98", Offset = "0x1232D98", VA = "0x1232D98")]
	public EmitterManager()
	{
	}
}
[Token(Token = "0x200016D")]
public class AimIKConfigs : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200057A")]
	public class AimIKConfig
	{
		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_weapon_group type;

		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool isRight;

		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IKSolver.Bone[] iKSolverAimBones_Right;

		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool isLeft;

		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKSolver.Bone[] iKSolverAimBones_Left;

		[Token(Token = "0x6002BC6")]
		[Address(RVA = "0x17F967C", Offset = "0x17F967C", VA = "0x17F967C")]
		public AimIKConfig()
		{
		}
	}

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<AimIKConfig> ikConfigList;

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x17F94EC", Offset = "0x17F94EC", VA = "0x17F94EC")]
	public AimIKConfig GetAimIkConfig(e_weapon_group type)
	{
		return null;
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x17F9674", Offset = "0x17F9674", VA = "0x17F9674")]
	public AimIKConfigs()
	{
	}
}
[Token(Token = "0x200016E")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE0EC8", Offset = "0xEE0EC8")]
public class AimIKTools : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200057B")]
	public class AnimationConfig
	{
		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string aniName;

		[Token(Token = "0x4001FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float startTime;

		[Token(Token = "0x4002000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float updateWeightTime;

		[Token(Token = "0x6002BC7")]
		[Address(RVA = "0x17FA528", Offset = "0x17FA528", VA = "0x17FA528")]
		public AnimationConfig()
		{
		}
	}

	[Token(Token = "0x200057C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4C90", Offset = "0xEE4C90")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4002001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AimIKTools <>4__this;

		[Token(Token = "0x4002002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationConfig c;

		[Token(Token = "0x6002BC8")]
		[Address(RVA = "0x17FA02C", Offset = "0x17FA02C", VA = "0x17FA02C")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6002BC9")]
		[Address(RVA = "0x17FA530", Offset = "0x17FA530", VA = "0x17FA530")]
		internal void <StartAim>b__0(long l)
		{
		}
	}

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AimIK aimIk;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LookAtIK lookAtIk;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AimIKConfigs aimIKConfigs;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool updateWeight;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float updateTargetWeight;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float updateWeightTime;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float curUpdateWeightTime;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine startAimCoroution;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject target;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE73D0", Offset = "0xEE73D0")]
	private Vector3 <targetPos>k__BackingField;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE73E0", Offset = "0xEE73E0")]
	private bool <isStartAim>k__BackingField;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE73F0", Offset = "0xEE73F0")]
	private WUnit <owner>k__BackingField;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AnimationConfig[] animationConfigs;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AnimationConfig defaultAnimationConfig;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7420", Offset = "0xEE7420")]
	private e_weapon_group <weapon_Group>k__BackingField;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7430", Offset = "0xEE7430")]
	private bool <isRightAimBone>k__BackingField;

	[Token(Token = "0x170000DC")]
	public Vector3 targetPos
	{
		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x17F968C", Offset = "0x17F968C", VA = "0x17F968C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF790", Offset = "0xEEF790")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x17F9698", Offset = "0x17F9698", VA = "0x17F9698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF7A0", Offset = "0xEEF7A0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public bool isStartAim
	{
		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x17F96A4", Offset = "0x17F96A4", VA = "0x17F96A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF7B0", Offset = "0xEEF7B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0x17F96AC", Offset = "0x17F96AC", VA = "0x17F96AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF7C0", Offset = "0xEEF7C0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DE")]
	public WUnit owner
	{
		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0x17F96B8", Offset = "0x17F96B8", VA = "0x17F96B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF7D0", Offset = "0xEEF7D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x17F96C0", Offset = "0x17F96C0", VA = "0x17F96C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF7E0", Offset = "0xEEF7E0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public e_weapon_group weapon_Group
	{
		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x17F96C8", Offset = "0x17F96C8", VA = "0x17F96C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF7F0", Offset = "0xEEF7F0")]
		get
		{
			return default(e_weapon_group);
		}
		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x17F96D0", Offset = "0x17F96D0", VA = "0x17F96D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF800", Offset = "0xEEF800")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public bool isRightAimBone
	{
		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x17F96D8", Offset = "0x17F96D8", VA = "0x17F96D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF810", Offset = "0xEEF810")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x17F96E0", Offset = "0x17F96E0", VA = "0x17F96E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF820", Offset = "0xEEF820")]
		private set
		{
		}
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x17F96EC", Offset = "0x17F96EC", VA = "0x17F96EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x17F9814", Offset = "0x17F9814", VA = "0x17F9814")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x17F981C", Offset = "0x17F981C", VA = "0x17F981C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x17F9ACC", Offset = "0x17F9ACC", VA = "0x17F9ACC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x17F98D4", Offset = "0x17F98D4", VA = "0x17F98D4")]
	private void UpdateWeight()
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x17F9B80", Offset = "0x17F9B80", VA = "0x17F9B80")]
	public AnimationConfig GetConfig(string aniState)
	{
		return null;
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x17F9C2C", Offset = "0x17F9C2C", VA = "0x17F9C2C")]
	public void SetAimTransform(Transform aimTransform)
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x17F9C54", Offset = "0x17F9C54", VA = "0x17F9C54")]
	public void ResetAimTransform()
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x17F9C80", Offset = "0x17F9C80", VA = "0x17F9C80")]
	public float StartAimHost(string _aniState, Vector3 _targetPos)
	{
		return default(float);
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x17F9D7C", Offset = "0x17F9D7C", VA = "0x17F9D7C")]
	public float StartAim(string _aniState, Vector3 _targetPos)
	{
		return default(float);
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x17FA200", Offset = "0x17FA200", VA = "0x17FA200")]
	public void SwitchBones(e_weapon_group group, bool isRight)
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x17FA304", Offset = "0x17FA304", VA = "0x17FA304")]
	public bool IsExistRightAimBone(e_weapon_group group)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x17FA334", Offset = "0x17FA334", VA = "0x17FA334")]
	public bool IsExistLeftAimBone(e_weapon_group group)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x17FA364", Offset = "0x17FA364", VA = "0x17FA364")]
	public void UpdateAimPos(Vector3 _targetPos)
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x17FA378", Offset = "0x17FA378", VA = "0x17FA378")]
	public void StopAimHost()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x17FA034", Offset = "0x17FA034", VA = "0x17FA034")]
	public void StopAim()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x17F9754", Offset = "0x17F9754", VA = "0x17F9754")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x17FA488", Offset = "0x17FA488", VA = "0x17FA488")]
	public AimIKTools()
	{
	}
}
[Token(Token = "0x200016F")]
public class Battle
{
	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private BattleData battleData;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<WUnit> allBattleUnitList;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, WUnit> allBattleUnitHash;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, List<WUnit>> allGroupBattleUnitHash;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<WUnit> monsterBattleUnitList;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<WUnit> npcBattleUnitList;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<WUnit> playerBattleUnitList;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected WUnit controlUnit;

	[Token(Token = "0x170000E1")]
	public BattleData Data
	{
		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x1563310", Offset = "0x1563310", VA = "0x1563310")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E2")]
	public WUnit ControlUnit
	{
		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x1563318", Offset = "0x1563318", VA = "0x1563318")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x1563320", Offset = "0x1563320", VA = "0x1563320")]
		private set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public int AllPlayerCount
	{
		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x1563360", Offset = "0x1563360", VA = "0x1563360")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x1563328", Offset = "0x1563328", VA = "0x1563328")]
	public void ClearControlUnit()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x15633B0", Offset = "0x15633B0", VA = "0x15633B0")]
	public void SetControlUnit(WUnit unit)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x15633B8", Offset = "0x15633B8", VA = "0x15633B8")]
	public static Battle CreateBattle(BattleData battleData)
	{
		return null;
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x1563418", Offset = "0x1563418", VA = "0x1563418")]
	private Battle(BattleData _battleData)
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x15635D0", Offset = "0x15635D0", VA = "0x15635D0")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x15636E8", Offset = "0x15636E8", VA = "0x15636E8")]
	public void DoFixedUpdate()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x15637C0", Offset = "0x15637C0", VA = "0x15637C0")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x1563898", Offset = "0x1563898", VA = "0x1563898")]
	public void DoExit()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x1563910", Offset = "0x1563910", VA = "0x1563910")]
	public void AddUnit(WUnit unit)
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x1563B0C", Offset = "0x1563B0C", VA = "0x1563B0C")]
	public bool RemoveUnit(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x1563CC4", Offset = "0x1563CC4", VA = "0x1563CC4")]
	public WUnit GetUnitById(int id)
	{
		return null;
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x1563D3C", Offset = "0x1563D3C", VA = "0x1563D3C")]
	public int GetUnitCountByRoleType(e_type_role roleType)
	{
		return default(int);
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x1563E34", Offset = "0x1563E34", VA = "0x1563E34")]
	public int GetAliveUnitCountByRoleType(e_type_role roleType)
	{
		return default(int);
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x1563F78", Offset = "0x1563F78", VA = "0x1563F78")]
	public int GetAliveMonsterCount(bool noBoss = false, bool isNoBulletMonster = false)
	{
		return default(int);
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x1564070", Offset = "0x1564070", VA = "0x1564070")]
	public int GetAliveMonsterUnitCount(e_type_monster e_Type_Monster)
	{
		return default(int);
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x156413C", Offset = "0x156413C", VA = "0x156413C")]
	public bool IsLocalPlayer(int unitId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x1564180", Offset = "0x1564180", VA = "0x1564180")]
	public bool IsLocalPlayer(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x15641A8", Offset = "0x15641A8", VA = "0x15641A8")]
	public bool IsAIPlayer(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x156423C", Offset = "0x156423C", VA = "0x156423C")]
	public bool IsPlayer(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x15641BC", Offset = "0x15641BC", VA = "0x15641BC")]
	public bool IsAIPlayer(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x15642BC", Offset = "0x15642BC", VA = "0x15642BC")]
	public bool IsRealityPlayer(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x156433C", Offset = "0x156433C", VA = "0x156433C")]
	public bool IsNpc(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x15643BC", Offset = "0x15643BC", VA = "0x15643BC")]
	public bool IsMonster(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x156443C", Offset = "0x156443C", VA = "0x156443C")]
	public bool IsLocalPlayerGroup(int unitId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x156449C", Offset = "0x156449C", VA = "0x156449C")]
	public bool IsLocalPlayerGroup(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x15644E8", Offset = "0x15644E8", VA = "0x15644E8")]
	public bool IsLocalPlayerGroup(e_group_type gType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x1564508", Offset = "0x1564508", VA = "0x1564508")]
	public e_group_type GetLocalPlayerGroup()
	{
		return default(e_group_type);
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x1555EC8", Offset = "0x1555EC8", VA = "0x1555EC8")]
	public List<WUnit> GetUnitListByRoleType(e_type_role roleType, bool includeDie = false)
	{
		return null;
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x1564520", Offset = "0x1564520", VA = "0x1564520")]
	public List<WUnit> GetUnitListByCamp(WUnit unit, e_type_camp campType, bool includeDie = false)
	{
		return null;
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x1564714", Offset = "0x1564714", VA = "0x1564714")]
	public List<WUnit>.Enumerator GetAllWUnitEnumerator()
	{
		return default(List<WUnit>.Enumerator);
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x1564780", Offset = "0x1564780", VA = "0x1564780")]
	public List<WUnit>.Enumerator GetMonsterEnumerator()
	{
		return default(List<WUnit>.Enumerator);
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x15647EC", Offset = "0x15647EC", VA = "0x15647EC")]
	public List<WUnit>.Enumerator GetNPCEnumerator()
	{
		return default(List<WUnit>.Enumerator);
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x1564858", Offset = "0x1564858", VA = "0x1564858")]
	public List<WUnit>.Enumerator GetPlayerEnumerator()
	{
		return default(List<WUnit>.Enumerator);
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x15648C4", Offset = "0x15648C4", VA = "0x15648C4")]
	public bool TryGetGroupListEnumerator(e_group_type gType, out List<WUnit>.Enumerator enumerator)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x15648C8", Offset = "0x15648C8", VA = "0x15648C8")]
	public bool TryGetGroupListEnumerator(int gType, out List<WUnit>.Enumerator enumerator)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x1564998", Offset = "0x1564998", VA = "0x1564998")]
	public int GetGroupUnitCount(e_group_type gType)
	{
		return default(int);
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x156499C", Offset = "0x156499C", VA = "0x156499C")]
	public int GetGroupUnitCount(int gType)
	{
		return default(int);
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x1564A28", Offset = "0x1564A28", VA = "0x1564A28")]
	public List<WUnit> GetAllPlayers(bool includeDie = false)
	{
		return null;
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x1564A34", Offset = "0x1564A34", VA = "0x1564A34")]
	public WUnit GetBoss()
	{
		return null;
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x1564AF4", Offset = "0x1564AF4", VA = "0x1564AF4")]
	public int GetMonsterStrategyCount(e_type_monster monsterType, string BBVarName, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x1564C50", Offset = "0x1564C50", VA = "0x1564C50")]
	public void ClearUnitsByRoleType(e_type_role roleType, bool includeDie = false)
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x1564D5C", Offset = "0x1564D5C", VA = "0x1564D5C")]
	public bool CheckAllUnitDieByRoleType(e_type_role roleType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x1564E24", Offset = "0x1564E24", VA = "0x1564E24")]
	public WUnit GetUnitBySite(int site)
	{
		return null;
	}
}
[Token(Token = "0x2000170")]
public class BattleManager
{
	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Battle battle;

	[Token(Token = "0x170000E4")]
	public Battle ownerBattle
	{
		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x13C7B6C", Offset = "0x13C7B6C", VA = "0x13C7B6C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x13C7B74", Offset = "0x13C7B74", VA = "0x13C7B74")]
	public BattleManager(Battle _battle)
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x13C7B7C", Offset = "0x13C7B7C", VA = "0x13C7B7C")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x13C7B80", Offset = "0x13C7B80", VA = "0x13C7B80")]
	public void DoExit()
	{
	}
}
[Token(Token = "0x2000171")]
public class BattleMono : MonoBehaviour
{
	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x13C7B84", Offset = "0x13C7B84", VA = "0x13C7B84")]
	public BattleMono()
	{
	}
}
[Token(Token = "0x2000172")]
public class BattleState : IState
{
	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x13CB9F0", Offset = "0x13CB9F0", VA = "0x13CB9F0", Slot = "4")]
	public void DoInit(object param)
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x13CBB88", Offset = "0x13CBB88", VA = "0x13CBB88", Slot = "7")]
	public void DoFixedUpdate()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x13CBCA0", Offset = "0x13CBCA0", VA = "0x13CBCA0", Slot = "5")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x13CBE70", Offset = "0x13CBE70", VA = "0x13CBE70", Slot = "6")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x13CBF88", Offset = "0x13CBF88", VA = "0x13CBF88", Slot = "12")]
	public bool DoExit(StateManager.StateDefine nextType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x13CC1FC", Offset = "0x13CC1FC", VA = "0x13CC1FC", Slot = "8")]
	public void DoGUI()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x13CC200", Offset = "0x13CC200", VA = "0x13CC200", Slot = "9")]
	public void DoLoad()
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x13CC204", Offset = "0x13CC204", VA = "0x13CC204", Slot = "10")]
	public void DoStart(StateManager.StateDefine preType)
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x13CC208", Offset = "0x13CC208", VA = "0x13CC208", Slot = "13")]
	public void DoUpdateLoad()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x13CC20C", Offset = "0x13CC20C", VA = "0x13CC20C", Slot = "14")]
	public void DoUpdateInTransEnd()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x13CC210", Offset = "0x13CC210", VA = "0x13CC210", Slot = "11")]
	public void DoTransformStartOver(StateManager.StateDefine preType)
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x13CC214", Offset = "0x13CC214", VA = "0x13CC214")]
	public BattleState()
	{
	}
}
[Token(Token = "0x2000173")]
public class BattleUtils
{
	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static System.Random rd;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<int, string> timerStrDic;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<int, string> numStrDic;

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x13CC4F0", Offset = "0x13CC4F0", VA = "0x13CC4F0")]
	public static e_group_type GetGroupId(WUnit actor)
	{
		return default(e_group_type);
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x13CC504", Offset = "0x13CC504", VA = "0x13CC504")]
	public static bool IsSameGroup(WUnit actor1, WUnit actor2)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x13CC5D0", Offset = "0x13CC5D0", VA = "0x13CC5D0")]
	public static int Random(int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x13CC5D8", Offset = "0x13CC5D8", VA = "0x13CC5D8")]
	public static float RandomFloat(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x13CC5E0", Offset = "0x13CC5E0", VA = "0x13CC5E0")]
	public static float RandomUnitFloat()
	{
		return default(float);
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x13CC5E8", Offset = "0x13CC5E8", VA = "0x13CC5E8")]
	public static Vector2 RandomInsideUnitCircle()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x13CC5F0", Offset = "0x13CC5F0", VA = "0x13CC5F0")]
	public static Vector3 RandomInsideUnitSphere()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x13CC5F8", Offset = "0x13CC5F8", VA = "0x13CC5F8")]
	public static Vector3 RandomOnUnitSphere()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x13CC600", Offset = "0x13CC600", VA = "0x13CC600")]
	public static int RandomInt()
	{
		return default(int);
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x13CC678", Offset = "0x13CC678", VA = "0x13CC678")]
	public static int Rand(int min, int max)
	{
		return default(int);
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x13CC708", Offset = "0x13CC708", VA = "0x13CC708")]
	public static float Rand(float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x13CC7BC", Offset = "0x13CC7BC", VA = "0x13CC7BC")]
	public static float Rand01()
	{
		return default(float);
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x13CC820", Offset = "0x13CC820", VA = "0x13CC820")]
	public static Vector3 RandSphereDir()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x13CC958", Offset = "0x13CC958", VA = "0x13CC958")]
	public static WUnit FindRandomTarget(List<WUnit> target_list)
	{
		return null;
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x13CCA04", Offset = "0x13CCA04", VA = "0x13CCA04")]
	public static WUnit FindClosestTarget(List<WUnit>.Enumerator enumerator, Vector3 refPos)
	{
		return null;
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x13CCB48", Offset = "0x13CCB48", VA = "0x13CCB48")]
	public static WUnit FindRandomTarget(List<WUnit>.Enumerator enumerator, int count)
	{
		return null;
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x13CCC10", Offset = "0x13CCC10", VA = "0x13CCC10")]
	public static WUnit FindClosestTarget(List<WUnit> units, Vector3 refPos)
	{
		return null;
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x13CCD58", Offset = "0x13CCD58", VA = "0x13CCD58")]
	public static WUnit FindInGameRandomPlayer()
	{
		return null;
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x13CCEA4", Offset = "0x13CCEA4", VA = "0x13CCEA4")]
	public static WUnit FindInGameNearPlayer(Vector3 refPos)
	{
		return null;
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x13CD088", Offset = "0x13CD088", VA = "0x13CD088")]
	private List<WUnit> FindRangeTargets(List<WUnit> units, Vector3 refPos, float min, float max)
	{
		return null;
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x13CD224", Offset = "0x13CD224", VA = "0x13CD224")]
	public static Vector3 GetAttackDir(WUnit attacker, WUnit hurter)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x13CD384", Offset = "0x13CD384", VA = "0x13CD384")]
	public static void PollingUnit(IList<int> list, bool isReturnNull, Action<int, WUnit> rAction)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x13CD5B0", Offset = "0x13CD5B0", VA = "0x13CD5B0")]
	public static void PollingUnit(IList<WUnit> list, bool isReturnNull, Action<WUnit> rAction)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x13CD744", Offset = "0x13CD744", VA = "0x13CD744")]
	public static void PollingUnit(List<WUnit>.Enumerator enumerator, bool isReturnNull, Action<WUnit> rAction)
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x13CD870", Offset = "0x13CD870", VA = "0x13CD870")]
	public static void PollingUnitFunc(List<WUnit>.Enumerator enumerator, bool isReturnNull, Func<WUnit, bool> rAction)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x13CC3DC", Offset = "0x13CC3DC", VA = "0x13CC3DC")]
	public static string GetTimeStr(int num)
	{
		return null;
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x13CD994", Offset = "0x13CD994", VA = "0x13CD994")]
	public static string GetNumStr(int num)
	{
		return null;
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x13CDA8C", Offset = "0x13CDA8C", VA = "0x13CDA8C")]
	public BattleUtils()
	{
	}
}
[Token(Token = "0x2000174")]
public class BleedBuffData : IBuffData
{
	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int delayStartTime;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int delayDoCount;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int delayDoStep;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int damage;

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x13CF00C", Offset = "0x13CF00C", VA = "0x13CF00C", Slot = "5")]
	public void Deserialize(string json)
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x13CF0B4", Offset = "0x13CF0B4", VA = "0x13CF0B4", Slot = "4")]
	public string Serialize()
	{
		return null;
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x13CF11C", Offset = "0x13CF11C", VA = "0x13CF11C")]
	public BleedBuffData()
	{
	}
}
[Token(Token = "0x2000175")]
[AttributeAttribute(Name = "BuffAttribute", RVA = "0xEE0F2C", Offset = "0xEE0F2C")]
public class BleedBuff_Burn : BleedBuff
{
	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x13CF124", Offset = "0x13CF124", VA = "0x13CF124")]
	public BleedBuff_Burn(int id, short type, IBuffData buffData)
	{
	}
}
[Token(Token = "0x2000176")]
[AttributeAttribute(Name = "BuffAttribute", RVA = "0xEE0FB4", Offset = "0xEE0FB4")]
public class BleedBuff_General : BleedBuff
{
	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x13CF128", Offset = "0x13CF128", VA = "0x13CF128")]
	public BleedBuff_General(int id, short type, IBuffData buffData)
	{
	}
}
[Token(Token = "0x2000177")]
public class BleedBuff : BuffBase<BleedBuffData>
{
	[Token(Token = "0x200057D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4CA0", Offset = "0xEE4CA0")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4002003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BuffResReferenceCollector.BuffEffectRoot root;

		[Token(Token = "0x4002004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform temp;

		[Token(Token = "0x4002005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<Transform> <>9__0;

		[Token(Token = "0x6002BCA")]
		[Address(RVA = "0x13CE674", Offset = "0x13CE674", VA = "0x13CE674")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6002BCB")]
		[Address(RVA = "0x13CEADC", Offset = "0x13CEADC", VA = "0x13CEADC")]
		internal void <Start>b__0(Transform t)
		{
		}
	}

	[Token(Token = "0x200057E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4CB0", Offset = "0xEE4CB0")]
	private sealed class <DoHurt>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BleedBuff <>4__this;

		[Token(Token = "0x4002009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForSeconds <wait>5__2;

		[Token(Token = "0x400200A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WUnit <unit>5__3;

		[Token(Token = "0x400200B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WUnit <unit_ack>5__4;

		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__5;

		[Token(Token = "0x17000452")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BCF")]
			[Address(RVA = "0x13CEE44", Offset = "0x13CEE44", VA = "0x13CEE44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000453")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BD1")]
			[Address(RVA = "0x13CEEAC", Offset = "0x13CEEAC", VA = "0x13CEEAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BCC")]
		[Address(RVA = "0x13CE92C", Offset = "0x13CE92C", VA = "0x13CE92C")]
		[DebuggerHidden]
		public <DoHurt>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002BCD")]
		[Address(RVA = "0x13CEBAC", Offset = "0x13CEBAC", VA = "0x13CEBAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BCE")]
		[Address(RVA = "0x13CEBB0", Offset = "0x13CEBB0", VA = "0x13CEBB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD0")]
		[Address(RVA = "0x13CEE4C", Offset = "0x13CEE4C", VA = "0x13CEE4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200057F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4CC0", Offset = "0xEE4CC0")]
	private sealed class <DoWait>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BleedBuff <>4__this;

		[Token(Token = "0x17000454")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BD5")]
			[Address(RVA = "0x13CEF9C", Offset = "0x13CEF9C", VA = "0x13CEF9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000455")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BD7")]
			[Address(RVA = "0x13CF004", Offset = "0x13CF004", VA = "0x13CF004", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BD2")]
		[Address(RVA = "0x13CE958", Offset = "0x13CE958", VA = "0x13CE958")]
		[DebuggerHidden]
		public <DoWait>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002BD3")]
		[Address(RVA = "0x13CEEB4", Offset = "0x13CEEB4", VA = "0x13CEEB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BD4")]
		[Address(RVA = "0x13CEEB8", Offset = "0x13CEEB8", VA = "0x13CEEB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BD6")]
		[Address(RVA = "0x13CEFA4", Offset = "0x13CEFA4", VA = "0x13CEFA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine coroutine;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject effect;

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x13CDF6C", Offset = "0x13CDF6C", VA = "0x13CDF6C")]
	public BleedBuff(int id, short type, IBuffData buffData)
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x13CDFE4", Offset = "0x13CDFE4", VA = "0x13CDFE4", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x13CE67C", Offset = "0x13CE67C", VA = "0x13CE67C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEF830", Offset = "0xEEF830")]
	private IEnumerator DoHurt()
	{
		return null;
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x13CE6F8", Offset = "0x13CE6F8", VA = "0x13CE6F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEF894", Offset = "0xEEF894")]
	private IEnumerator DoWait()
	{
		return null;
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x13CE984", Offset = "0x13CE984", VA = "0x13CE984", Slot = "15")]
	public override void Stop()
	{
	}
}
[Token(Token = "0x2000178")]
public static class BuffManager
{
	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static sbyte BUFF_STATE_ADD;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static sbyte BUFF_STATE_REMOVE;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static sbyte BUFF_STATE_UPDATE;

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x13DCD0C", Offset = "0x13DCD0C", VA = "0x13DCD0C")]
	public static int CreateBuffByServer(BuffTypeEnum buffTypeEnum, int attachId, int attackerId, IBuffData data)
	{
		return default(int);
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x13DCE94", Offset = "0x13DCE94", VA = "0x13DCE94")]
	public static void UpdateBuffByServer(int buffId, int buffAttachId, IBuffData data)
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x13DCFC4", Offset = "0x13DCFC4", VA = "0x13DCFC4")]
	public static void RemoveBuffByServer(int attachId, int buffId)
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x13DD07C", Offset = "0x13DD07C", VA = "0x13DD07C")]
	public static void CreateBuff(BuffTypeEnum buffTypeEnum, int buffId, int attackerId, int hurterId, string buffdata)
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x13DD234", Offset = "0x13DD234", VA = "0x13DD234")]
	public static void UpdateBuff(int buffId, int buffAttachId, string dataJson)
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x13DD330", Offset = "0x13DD330", VA = "0x13DD330")]
	public static void RemoveBuff(int buffId, int buffAttachId)
	{
	}
}
[Token(Token = "0x2000179")]
public class BuffResReferenceCollector : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000580")]
	public class ReferenceCollectorCell
	{
		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string key;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public UnityEngine.Object value;

		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<BuffEffectRoot> roots;

		[Token(Token = "0x6002BD8")]
		[Address(RVA = "0x13DD68C", Offset = "0x13DD68C", VA = "0x13DD68C")]
		public ReferenceCollectorCell()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000581")]
	public class BuffEffectRoot
	{
		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public string root;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public Vector3 pos_offset;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public Vector3 rot_offset;

		[Token(Token = "0x6002BD9")]
		[Address(RVA = "0x13DD608", Offset = "0x13DD608", VA = "0x13DD608")]
		public BuffEffectRoot()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000582")]
	public class ReferenceCollector
	{
		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public BuffTypeEnum buffType;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<ReferenceCollectorCell> cells;

		[Token(Token = "0x6002BDA")]
		[Address(RVA = "0x13CE84C", Offset = "0x13CE84C", VA = "0x13CE84C")]
		public ReferenceCollectorCell GetRC(string key)
		{
			return null;
		}

		[Token(Token = "0x6002BDB")]
		[Address(RVA = "0x13DD610", Offset = "0x13DD610", VA = "0x13DD610")]
		public ReferenceCollector()
		{
		}
	}

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7440", Offset = "0xEE7440")]
	private static BuffResReferenceCollector <Instance>k__BackingField;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public List<ReferenceCollector> referenceCollectors;

	[Token(Token = "0x170000E5")]
	public static BuffResReferenceCollector Instance
	{
		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x13DD48C", Offset = "0x13DD48C", VA = "0x13DD48C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF8F8", Offset = "0xEEF8F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x13DD4DC", Offset = "0x13DD4DC", VA = "0x13DD4DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF908", Offset = "0xEEF908")]
		private set
		{
		}
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x13CE774", Offset = "0x13CE774", VA = "0x13CE774")]
	public ReferenceCollector GetRC(BuffTypeEnum buffType)
	{
		return null;
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x13DD534", Offset = "0x13DD534", VA = "0x13DD534")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x13DD58C", Offset = "0x13DD58C", VA = "0x13DD58C")]
	public BuffResReferenceCollector()
	{
	}
}
[Token(Token = "0x200017A")]
public enum BuffTypeEnum : short
{
	[Token(Token = "0x400095F")]
	BUFF_NONE,
	[Token(Token = "0x4000960")]
	BUFF_BLEED_BURN,
	[Token(Token = "0x4000961")]
	BUFF_BLEED_GENERAL
}
[Token(Token = "0x200017B")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE103C", Offset = "0xEE103C")]
public class IKConfigMono : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000583")]
	public class IKConfig
	{
		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_weapon_group weapon_Group;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject IKRoot;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform HeadAnchor;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IKSolverVR.Spine HeadSolver;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform LeftHandAnchor;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IKSolverVR.Arm LeftHandSolver;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform RightHandAnchor;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IKSolverVR.Arm RightHandSolver;

		[Token(Token = "0x6002BDC")]
		[Address(RVA = "0x1282440", Offset = "0x1282440", VA = "0x1282440")]
		public IKConfig()
		{
		}
	}

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRIK ik;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandPoser leftHandPoser;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandPoser rightHandPoser;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private IKConfig[] iKConfigs;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<e_weapon_group, IKConfig> iKConfigDic;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IKConfig curIKConfig;

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x1282070", Offset = "0x1282070", VA = "0x1282070")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x1281FD4", Offset = "0x1281FD4", VA = "0x1281FD4")]
	public void InitIK(e_weapon_group weapon_Group)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x12821AC", Offset = "0x12821AC", VA = "0x12821AC")]
	private void SetIKSolver(IKConfig newConfig)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x1281844", Offset = "0x1281844", VA = "0x1281844")]
	public void UpdateHMD(Vector3 vrCameraPos)
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x1281C9C", Offset = "0x1281C9C", VA = "0x1281C9C")]
	public void UpdateHand_L(Vector3 leftHandPos, Quaternion leftHandRot)
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x1281DC0", Offset = "0x1281DC0", VA = "0x1281DC0")]
	public void UpdateHand_R(Vector3 rightHandPos, Quaternion rightHandRot)
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x12823C4", Offset = "0x12823C4", VA = "0x12823C4")]
	public IKConfigMono()
	{
	}
}
[Token(Token = "0x200017C")]
public class LevelEffect : MonoBehaviour
{
	[Token(Token = "0x2000584")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4CD0", Offset = "0xEE4CD0")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GuidTipUI tip;

		[Token(Token = "0x6002BDD")]
		[Address(RVA = "0x147A2D8", Offset = "0x147A2D8", VA = "0x147A2D8")]
		public <>c__DisplayClass7_0()
		{
		}
	}

	[Token(Token = "0x2000585")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4CE0", Offset = "0xEE4CE0")]
	private sealed class <>c__DisplayClass7_1
	{
		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int callIndex;

		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass7_0 CS$<>8__locals1;

		[Token(Token = "0x6002BDE")]
		[Address(RVA = "0x147A2E0", Offset = "0x147A2E0", VA = "0x147A2E0")]
		public <>c__DisplayClass7_1()
		{
		}

		[Token(Token = "0x6002BDF")]
		[Address(RVA = "0x147A2F0", Offset = "0x147A2F0", VA = "0x147A2F0")]
		internal void <PlayLevelEffect>b__0()
		{
		}
	}

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject levelEffect;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioEvent audioEvent;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WUnit owner;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject effect;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine guidTipUICoroutine;

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x1479A9C", Offset = "0x1479A9C", VA = "0x1479A9C")]
	public void Init(WUnit _owner)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x1479BB0", Offset = "0x1479BB0", VA = "0x1479BB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x1479D38", Offset = "0x1479D38", VA = "0x1479D38")]
	public void PlayLevelEffect(WUnit unit, int oldlv, int newlv)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x147A2E8", Offset = "0x147A2E8", VA = "0x147A2E8")]
	public LevelEffect()
	{
	}
}
[Token(Token = "0x200017D")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE10A0", Offset = "0xEE10A0")]
public class MonsterBirth : MonoBehaviour
{
	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject birthEffect;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioEvent audioEvent;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 Offset;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsBirth;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WUnit owner;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject effect;

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x12E5F74", Offset = "0x12E5F74", VA = "0x12E5F74")]
	public void Init()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x12E63A0", Offset = "0x12E63A0", VA = "0x12E63A0")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x12E6480", Offset = "0x12E6480", VA = "0x12E6480")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x12E60EC", Offset = "0x12E60EC", VA = "0x12E60EC")]
	public void BirthEffect(bool isParent = false, bool isAudio = true)
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x12E63A4", Offset = "0x12E63A4", VA = "0x12E63A4")]
	private void DetroyBirthEffect()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x12E6484", Offset = "0x12E6484", VA = "0x12E6484")]
	public MonsterBirth()
	{
	}
}
[Token(Token = "0x200017E")]
public class OtherPlayerMainController : MonoBehaviour
{
	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isInit;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject NameHUDObj;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform UIRoot;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string preName;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private UnitNormalNameHUD NameHUD;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject CaptainHUDObj;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform CaptainUIRoot;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private UnitNormalNameHUD CaptainNameHUD;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isCaptain;

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x138DA98", Offset = "0x138DA98", VA = "0x138DA98")]
	public void Init()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x138E000", Offset = "0x138E000", VA = "0x138E000")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x138E220", Offset = "0x138E220", VA = "0x138E220")]
	private void Fresh()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x138DBCC", Offset = "0x138DBCC", VA = "0x138DBCC")]
	private void InitUIView()
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x138E0B8", Offset = "0x138E0B8", VA = "0x138E0B8")]
	public void SetUIView(bool isShow)
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x138E164", Offset = "0x138E164", VA = "0x138E164")]
	private void CaptainNameShow(bool isShow)
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x138E2B0", Offset = "0x138E2B0", VA = "0x138E2B0")]
	private void SetUIViewDir()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x138E4E4", Offset = "0x138E4E4", VA = "0x138E4E4")]
	public void SetShowNameText(bool isShow)
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x138E5E8", Offset = "0x138E5E8", VA = "0x138E5E8")]
	private void UpdateSetName()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x138E810", Offset = "0x138E810", VA = "0x138E810")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x138E840", Offset = "0x138E840", VA = "0x138E840")]
	private void DoUpdate()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x138E864", Offset = "0x138E864", VA = "0x138E864")]
	public OtherPlayerMainController()
	{
	}
}
[Token(Token = "0x200017F")]
public class PlayerDeadRagdollTools : MonoBehaviour
{
	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject modleObj;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader deadShader;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader liveShader;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string opacityShaderProperty;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WUnit owner;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private RendererConfigMono rendererConfigMono;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject cloneModleObj;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MaterialPropertyBlock prop;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int opacityID;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RendererConfigMono weaponRendererConfigMono;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RendererConfigMono weaponRendererConfigMono2;

	[Token(Token = "0x4000988")]
	private const float OPACITY_0 = 1f;

	[Token(Token = "0x4000989")]
	private const float OPACITY_1 = 0.5f;

	[Token(Token = "0x400098A")]
	private const float OPACITY_2 = 0f;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<string, Transform> childNodeDic;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7470", Offset = "0xEE7470")]
	private bool <IsDie>k__BackingField;

	[Token(Token = "0x170000E6")]
	public bool IsDie
	{
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x152F2C0", Offset = "0x152F2C0", VA = "0x152F2C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF918", Offset = "0xEEF918")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x152F2C8", Offset = "0x152F2C8", VA = "0x152F2C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF928", Offset = "0xEEF928")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x152F2D4", Offset = "0x152F2D4", VA = "0x152F2D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x152F494", Offset = "0x152F494", VA = "0x152F494")]
	public void Init(WUnit unit, GameObject weaponObj_r, [Optional] GameObject weaponObj_l)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x152F4E4", Offset = "0x152F4E4", VA = "0x152F4E4")]
	private void InitModelInfo()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x152F6E8", Offset = "0x152F6E8", VA = "0x152F6E8")]
	private void InitWeaponInfo(GameObject obj_0, GameObject obj_1)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x152FAD4", Offset = "0x152FAD4", VA = "0x152FAD4")]
	public void Dead(int ragdollId, Vector3 dir, float hitForce, bool isSameCamp)
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x1530080", Offset = "0x1530080", VA = "0x1530080")]
	public void Restore()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x152FF20", Offset = "0x152FF20", VA = "0x152FF20")]
	private void RecursiveCloneTransform(Transform target)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x152F940", Offset = "0x152F940", VA = "0x152F940")]
	private void SetOpacityProperty(Renderer[] renderers, float value, Shader shader)
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x1530228", Offset = "0x1530228", VA = "0x1530228")]
	public PlayerDeadRagdollTools()
	{
	}
}
[Token(Token = "0x2000180")]
public class PlayerDeadTester : MonoBehaviour
{
	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CameraController cameraController;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject targetGameObject;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftHandTarget;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightHandTarget;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float hitForce;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float delay;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RagdollTools ragdollTools;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject weapon;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string colliderName;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private IKConfigMono iKConfigMono;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlayerDeadRagdollTools deadTools;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine coroutine;

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x1530288", Offset = "0x1530288", VA = "0x1530288")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x153058C", Offset = "0x153058C", VA = "0x153058C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x1530704", Offset = "0x1530704", VA = "0x1530704")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x15308B0", Offset = "0x15308B0", VA = "0x15308B0")]
	private void RayHit(bool isSameCamp)
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x1530C24", Offset = "0x1530C24", VA = "0x1530C24")]
	public PlayerDeadTester()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x1530C38", Offset = "0x1530C38", VA = "0x1530C38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF938", Offset = "0xEEF938")]
	private void <RayHit>b__15_0()
	{
	}
}
[Token(Token = "0x2000181")]
public class PlayerModelDefine : MonoBehaviour
{
	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_Player_Style style;

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x1530C78", Offset = "0x1530C78", VA = "0x1530C78")]
	public PlayerModelDefine()
	{
	}
}
[Token(Token = "0x2000182")]
public class RendererConfigMono : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000586")]
	public class RendererConfig
	{
		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer renderer;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Shader[] shaders;

		[Token(Token = "0x6002BE0")]
		[Address(RVA = "0x13B5ACC", Offset = "0x13B5ACC", VA = "0x13B5ACC")]
		public RendererConfig()
		{
		}
	}

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer[] modleRenderers;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RendererConfig[] rendererConfigs;

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x13B59C4", Offset = "0x13B59C4", VA = "0x13B59C4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x13B5AC4", Offset = "0x13B5AC4", VA = "0x13B5AC4")]
	public RendererConfigMono()
	{
	}
}
[Token(Token = "0x2000183")]
public class ReviveHPEffect : MonoBehaviour
{
	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject localReviveEffect;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject otherReviveEffect;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioEvent audioEvent;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WUnit owner;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject effect;

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x13B5D9C", Offset = "0x13B5D9C", VA = "0x13B5D9C")]
	public void Init(WUnit _owner)
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x13B5DA4", Offset = "0x13B5DA4", VA = "0x13B5DA4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x13B5E80", Offset = "0x13B5E80", VA = "0x13B5E80")]
	public void PlayReviveEffect()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x13B614C", Offset = "0x13B614C", VA = "0x13B614C")]
	public ReviveHPEffect()
	{
	}
}
[Token(Token = "0x2000184")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE1104", Offset = "0xEE1104")]
public class UnitConfigMono : MonoBehaviour
{
	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject modelObject;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CharacterMono characterBehaviour;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ReviveHPEffect reviveHPEffect;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LevelEffect levelEffect;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> RenderObjectList;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected UnityEvent InitAction;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected UnityEvent DieAction;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected UnityEvent DestroyAction;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WUnit mOwner;

	[Token(Token = "0x170000E7")]
	public WUnit Owner
	{
		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x11E1E1C", Offset = "0x11E1E1C", VA = "0x11E1E1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x11E1E24", Offset = "0x11E1E24", VA = "0x11E1E24")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x11E1FEC", Offset = "0x11E1FEC", VA = "0x11E1FEC")]
	private void InitEventOwner()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x11E2150", Offset = "0x11E2150", VA = "0x11E2150")]
	public void DoDie()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x11E2164", Offset = "0x11E2164", VA = "0x11E2164")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x11E2228", Offset = "0x11E2228", VA = "0x11E2228")]
	public UnitConfigMono()
	{
	}
}
[Token(Token = "0x2000185")]
public class UnityDefine
{
	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int Layer_Default;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int Layer_Bullet;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int Layer_Terrain;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int Layer_HurtCharacter;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int Layer_PhysicsItem;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static int Layer_Video;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static int Layer_GameEnd;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static int Layer_UI;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int Layer_Weapon;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int Layer_WeaponObstacle;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int Layer_MoveBorder;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static int Layer_NoDisplay;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static int BulletHitLayerMask;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static int BulletAOEHitLayerMask;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static int WeaponLineHitLayerMask;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static int PlayerVideoMask;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static int GameStartLayerMask;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static int GameEndLayerMask;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static int Layer_TeleporterEffect;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static int Layer_DropItem;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static int Layer_TeleporterTwo;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static int Layer_BattleRoomDoor;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static int Layer_BattleRoomWall;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static int Layer_BattleRoomFloor;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static int Layer_BattleRoomSign;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static int Layer_Character;

	[Token(Token = "0x40009C5")]
	public const string Tag_Player = "Player";

	[Token(Token = "0x40009C6")]
	public const string Tag_Monster = "Monster";

	[Token(Token = "0x40009C7")]
	public const string Tag_Cement = "Cement";

	[Token(Token = "0x40009C8")]
	public const string Tag_Wood = "Wood";

	[Token(Token = "0x40009C9")]
	public const string Tag_Metal = "Metal";

	[Token(Token = "0x40009CA")]
	public const string Tag_Glass = "Glass";

	[Token(Token = "0x40009CB")]
	public const string Tag_Sand = "Sand";

	[Token(Token = "0x40009CC")]
	public const string Tag_Shield = "Shield";

	[Token(Token = "0x40009CD")]
	public const string Tag_Crystal = "Crystal";

	[Token(Token = "0x40009CE")]
	public const string Tag_Lava = "Lava";

	[Token(Token = "0x40009CF")]
	public const string Tag_Meat = "Meat";

	[Token(Token = "0x40009D0")]
	public const string Tag_Water = "Water";

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static int[] NavMeshAreaMask;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static int Walkable;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public static int NotWalkable;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static int Jump;

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x130CAFC", Offset = "0x130CAFC", VA = "0x130CAFC")]
	public static int GetRoomIndexToArea(int index)
	{
		return default(int);
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x130CBCC", Offset = "0x130CBCC", VA = "0x130CBCC")]
	public static int GetRoomIndexToAreaMask(int area, bool includeWalk = true)
	{
		return default(int);
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x130CC64", Offset = "0x130CC64", VA = "0x130CC64")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x130CFDC", Offset = "0x130CFDC", VA = "0x130CFDC")]
	public UnityDefine()
	{
	}
}
[Token(Token = "0x2000186")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE1168", Offset = "0xEE1168")]
public class WeaponPivot : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000587")]
	private struct WeaponPivotCell
	{
		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public e_weapon_group type;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject pivot_left;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject pivot_right;

		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isLeftMainWeapin;
	}

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<WeaponPivotCell> weaponPivotList;

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x1D709F0", Offset = "0x1D709F0", VA = "0x1D709F0")]
	public (GameObject, GameObject, bool) GetWeaponPivotByType(e_weapon_group type)
	{
		return default((GameObject, GameObject, bool));
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x1D70BF8", Offset = "0x1D70BF8", VA = "0x1D70BF8")]
	public WeaponPivot()
	{
	}
}
[Token(Token = "0x2000187")]
public class PreFightCutSceneManager : Singleton<PreFightCutSceneManager>
{
	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool IsEnter;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool IsStart;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private bool IsDownAddering;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private bool IsFirstOnlyFinish;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 realPlayerPosition;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 setPlayerPosition;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 beginPlayerPosition;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion downDir;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float MoveSpeed;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float MoveSpeedGDown;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float MoveSpeedDownDis;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float RunningMoveSpeed;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isDropOutBack;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 dropPrePos;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion dropPreRot;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 dropPreCamLocalPos;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion dropPreCamLocalRot;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 dropPreCamPos;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Quaternion dropPreCamRot;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 dropPlayerDir;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 tmpPos;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float dropFadeBeginDis;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float dropFadeInTime;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float dropFadeOutTime;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool isFadeIn;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
	private bool isFadeInFin;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
	private bool IsDownAdderFinish;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float DownLen;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Coroutine timeDelayDownCort;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioEvent BeginAudio;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private WwiseDefine BeginObj;

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x1531C64", Offset = "0x1531C64", VA = "0x1531C64")]
	public void Enter()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x1531E38", Offset = "0x1531E38", VA = "0x1531E38")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x1531EC0", Offset = "0x1531EC0", VA = "0x1531EC0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x1531E40", Offset = "0x1531E40", VA = "0x1531E40")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x153211C", Offset = "0x153211C", VA = "0x153211C")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x1532328", Offset = "0x1532328", VA = "0x1532328")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x15326EC", Offset = "0x15326EC", VA = "0x15326EC")]
	private void SetOtherPlayerVisible(bool isVisible)
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x153288C", Offset = "0x153288C", VA = "0x153288C")]
	private void CharTeleporter(int id)
	{
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x1531F4C", Offset = "0x1531F4C", VA = "0x1531F4C")]
	private void SetSound(bool active)
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x15328B4", Offset = "0x15328B4", VA = "0x15328B4")]
	private void BeginDownAdderFinish()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x1533038", Offset = "0x1533038", VA = "0x1533038")]
	private void DownAdder()
	{
	}

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x1533044", Offset = "0x1533044", VA = "0x1533044")]
	private void DownAdderDown()
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x1533110", Offset = "0x1533110", VA = "0x1533110")]
	private void DownAdderEnd()
	{
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x153213C", Offset = "0x153213C", VA = "0x153213C")]
	private void DownAdderUpdate()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x15331DC", Offset = "0x15331DC", VA = "0x15331DC")]
	private void DropFadeInFinish()
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x1532350", Offset = "0x1532350", VA = "0x1532350")]
	private void DownAdderLateUpdate()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x1532BD8", Offset = "0x1532BD8", VA = "0x1532BD8")]
	private GameObject GetPlayerObj()
	{
		return null;
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x1532D8C", Offset = "0x1532D8C", VA = "0x1532D8C")]
	public GameObject GetAffectCameraObj()
	{
		return null;
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x1532F34", Offset = "0x1532F34", VA = "0x1532F34")]
	private void UpdatePlayerPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x1533118", Offset = "0x1533118", VA = "0x1533118")]
	private bool CheckMoveDis(float dis)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x15331E8", Offset = "0x15331E8", VA = "0x15331E8")]
	public PreFightCutSceneManager()
	{
	}
}
[Token(Token = "0x2000188")]
public class DropCollector : MonoBehaviour
{
	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<DropItem> DropItemRes;

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x122C244", Offset = "0x122C244", VA = "0x122C244")]
	public DropCollector()
	{
	}
}
[Token(Token = "0x2000189")]
public class DropItem : MonoBehaviour
{
	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ItemType;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private e_weapon_group weaponType;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int displayName;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int type;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int id;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnitNormalNameHUD Hud;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject effect;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject effect_flash;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject effect_delete;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isInit;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool isActive;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float DelayActiveTime;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float delayActiveRunningTime;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float DelayDestoryTime;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float delayDestoryRunningTime;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float DelayFlashTime;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float DelayDestoryingTime;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float delayDestoryingRunningTime;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool isDelayDesotying;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool isDelayDesoty;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	private bool isMove;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float moveTime;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float middlePointAdd;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float timer;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 fromPoint;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 middlePoint;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector3 endPoint;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public WUnit unit;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public SwitchInfoData audioSwitch;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioEvent PickUpAudio;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public AudioEvent DropMoveEndAudio;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private WwiseDefine WwiseDefine;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private WwiseDefine WwiseDefine2;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float DropSpeed;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float endDropStartPointStep;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float endDropPointOffset;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 endDropPoint;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool isDropMove;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastHit[] results;

	[Token(Token = "0x170000E8")]
	public bool IsActive
	{
		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x122C2C0", Offset = "0x122C2C0", VA = "0x122C2C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000E9")]
	public bool IsCanTrigger
	{
		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x122C2C8", Offset = "0x122C2C8", VA = "0x122C2C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x122C300", Offset = "0x122C300", VA = "0x122C300", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x122C828", Offset = "0x122C828", VA = "0x122C828", Slot = "5")]
	public virtual void Activate()
	{
	}

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x122C958", Offset = "0x122C958", VA = "0x122C958", Slot = "6")]
	public virtual void Deactivate()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x122CB14", Offset = "0x122CB14", VA = "0x122CB14", Slot = "7")]
	public virtual void Trigger(int uid)
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x122CC30", Offset = "0x122CC30", VA = "0x122CC30")]
	private void MoveToTarget(int uid)
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x122CDE0", Offset = "0x122CDE0", VA = "0x122CDE0")]
	private void DoMove()
	{
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x122D198", Offset = "0x122D198", VA = "0x122D198", Slot = "8")]
	public virtual void DoDestroy()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x122D254", Offset = "0x122D254", VA = "0x122D254")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x122D614", Offset = "0x122D614", VA = "0x122D614")]
	private void DoDropMove()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x122CFC4", Offset = "0x122CFC4", VA = "0x122CFC4")]
	public Vector3 GetCurvePoint(Vector3 point0, Vector3 point1, Vector3 point2, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x122D2D8", Offset = "0x122D2D8", VA = "0x122D2D8")]
	private void DelayActiveUpdate()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x122D534", Offset = "0x122D534", VA = "0x122D534")]
	private void DelayDestoryUpdate()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x122D7D8", Offset = "0x122D7D8", VA = "0x122D7D8")]
	private void DelayDestoryingUpdate()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x122D454", Offset = "0x122D454", VA = "0x122D454")]
	private void DoUpdate()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x122D888", Offset = "0x122D888", VA = "0x122D888")]
	public DropItem()
	{
	}
}
[Token(Token = "0x200018A")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE11CC", Offset = "0xEE11CC")]
public class DropItemUnitConfig : MonoBehaviour
{
	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WUnit owner;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 Offset;

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x122D934", Offset = "0x122D934", VA = "0x122D934")]
	public void Init()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x122D9F4", Offset = "0x122D9F4", VA = "0x122D9F4")]
	public void DropItem()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x122DD74", Offset = "0x122DD74", VA = "0x122DD74")]
	public DropItemUnitConfig()
	{
	}
}
[Token(Token = "0x200018B")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE1230", Offset = "0xEE1230")]
public class AnimationDefine : MonoBehaviour
{
	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimationDefineEventCallBack animationEventCallBack;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] audioObjects;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationEventData[] defines;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<UnityEngine.Object> resList;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, Transform> boneDic;

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x15568EC", Offset = "0x15568EC", VA = "0x15568EC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x1557314", Offset = "0x1557314", VA = "0x1557314")]
	public void UnInit()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x15579A4", Offset = "0x15579A4", VA = "0x15579A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x1556B20", Offset = "0x1556B20", VA = "0x1556B20")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x15570D0", Offset = "0x15570D0", VA = "0x15570D0")]
	private void InitEvent()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x1556F30", Offset = "0x1556F30", VA = "0x1556F30")]
	private void InitBoneDic()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x1557B78", Offset = "0x1557B78", VA = "0x1557B78")]
	private Transform GetBoneByPath(string path)
	{
		return null;
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x1557C4C", Offset = "0x1557C4C", VA = "0x1557C4C")]
	private void OnAnimationCB(AnimationEventData.EventData cell)
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x1558758", Offset = "0x1558758", VA = "0x1558758")]
	public AnimationDefine()
	{
	}
}
[Token(Token = "0x200018C")]
public class AnimationDefineEventCallBack : MonoBehaviour
{
	[Token(Token = "0x2000588")]
	private class timeCell
	{
		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationEventData.EventData vfx;

		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timer;

		[Token(Token = "0x6002BE1")]
		[Address(RVA = "0x1558E00", Offset = "0x1558E00", VA = "0x1558E00")]
		public void Init(AnimationEventData.EventData _vfx, float _time)
		{
		}

		[Token(Token = "0x6002BE2")]
		[Address(RVA = "0x15590E4", Offset = "0x15590E4", VA = "0x15590E4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002BE3")]
		[Address(RVA = "0x15590A4", Offset = "0x15590A4", VA = "0x15590A4")]
		public timeCell()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000589")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4CF0", Offset = "0xEE4CF0")]
	private sealed class <>c
	{
		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<timeCell> <>9__12_0;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<timeCell> <>9__12_1;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<AnimationEventData.EventData> <>9__20_0;

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<AnimationEventData.EventData> <>9__21_0;

		[Token(Token = "0x6002BE5")]
		[Address(RVA = "0x1559040", Offset = "0x1559040", VA = "0x1559040")]
		public <>c()
		{
		}

		[Token(Token = "0x6002BE6")]
		[Address(RVA = "0x1559048", Offset = "0x1559048", VA = "0x1559048")]
		internal timeCell <Init>b__12_0()
		{
			return null;
		}

		[Token(Token = "0x6002BE7")]
		[Address(RVA = "0x15590AC", Offset = "0x15590AC", VA = "0x15590AC")]
		internal void <Init>b__12_1(timeCell cell)
		{
		}

		[Token(Token = "0x6002BE8")]
		[Address(RVA = "0x1559114", Offset = "0x1559114", VA = "0x1559114")]
		internal void <UnRegisterAllAnimationEffectCB>b__20_0(AnimationEventData.EventData <p0>)
		{
		}

		[Token(Token = "0x6002BE9")]
		[Address(RVA = "0x1559118", Offset = "0x1559118", VA = "0x1559118")]
		internal void <.ctor>b__21_0(AnimationEventData.EventData <p0>)
		{
		}
	}

	[Token(Token = "0x4000A25")]
	private const string OnAnimationEffectEventName = "OnAnimationEvent";

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<AnimationEventData.EventData> animationEffectEventCB;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, List<AnimationEventData.EventData>> animationDefineVFXCellDic;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lastAni;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int curAni;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HashSet<AnimationEventData.EventData> lastEventData;

	[Token(Token = "0x4000A2C")]
	private const float ANI_EVEVT_START_TIME = 0.03333f;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CacheUtils.ObjectPool<timeCell> timecellPool;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<timeCell> timerList;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AnimationDefineSMBCB animationDefineSMBCB;

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x1556BBC", Offset = "0x1556BBC", VA = "0x1556BBC")]
	public void Init(Animator _animator)
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x1557888", Offset = "0x1557888", VA = "0x1557888")]
	public void UnInit()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x15579A8", Offset = "0x15579A8", VA = "0x15579A8")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x1558940", Offset = "0x1558940", VA = "0x1558940")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x1558A34", Offset = "0x1558A34", VA = "0x1558A34")]
	private void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x1558E38", Offset = "0x1558E38", VA = "0x1558E38")]
	private void OnAnimationEvent(string aniName)
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x155880C", Offset = "0x155880C", VA = "0x155880C")]
	private void UpdateAnimationEvent(float deltaTime)
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x1557A5C", Offset = "0x1557A5C", VA = "0x1557A5C")]
	public void RegisterAnimationEffectCB(AnimationEventData.EventData cell)
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x15576CC", Offset = "0x15576CC", VA = "0x15576CC")]
	public void UnRegisterAllAnimationEffectCB()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x1558E3C", Offset = "0x1558E3C", VA = "0x1558E3C")]
	public AnimationDefineEventCallBack()
	{
	}
}
[Token(Token = "0x200018D")]
public class AnimationDefineSMBCB : StateMachineBehaviour
{
	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<Animator, AnimatorStateInfo, int> OnStateEnterAction;

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x155911C", Offset = "0x155911C", VA = "0x155911C", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x15591C4", Offset = "0x15591C4", VA = "0x15591C4")]
	public AnimationDefineSMBCB()
	{
	}
}
[Serializable]
[Token(Token = "0x200018E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xEE1294", Offset = "0xEE1294")]
public class AnimationEventData : ScriptableObject
{
	[Token(Token = "0x200058A")]
	public enum Type
	{
		[Token(Token = "0x4002031")]
		Effect,
		[Token(Token = "0x4002032")]
		Audio
	}

	[Serializable]
	[Token(Token = "0x200058B")]
	public class EventData
	{
		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type type;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AudioEvent audioEvent;

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int aniFrame;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool isLoop;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string aniName;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string boneNode;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 offsetPos;

		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 offsetRot;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEngine.Object prefabs;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int audioSourceIndex;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool isEnableLifeTime;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float lifeTime;

		[Token(Token = "0x17000456")]
		public float aniStartTime
		{
			[Token(Token = "0x6002BEA")]
			[Address(RVA = "0x1558DE8", Offset = "0x1558DE8", VA = "0x1558DE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002BEB")]
		[Address(RVA = "0x15591D4", Offset = "0x15591D4", VA = "0x15591D4")]
		public EventData()
		{
		}
	}

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<EventData> defineCells;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int modelId;

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x15591CC", Offset = "0x15591CC", VA = "0x15591CC")]
	public AnimationEventData()
	{
	}
}
[Token(Token = "0x200018F")]
public class AutoDestroy : MonoBehaviour
{
	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DespawnDelay;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timer;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isEnable;

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x1561480", Offset = "0x1561480", VA = "0x1561480")]
	public void AutoDestroyInit(float _delay)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x1561494", Offset = "0x1561494", VA = "0x1561494")]
	public void Init(float _delay)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x15614A8", Offset = "0x15614A8", VA = "0x15614A8")]
	public void UnInit()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x15614B0", Offset = "0x15614B0", VA = "0x15614B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x1561574", Offset = "0x1561574", VA = "0x1561574")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x1561580", Offset = "0x1561580", VA = "0x1561580")]
	public AutoDestroy()
	{
	}
}
[Token(Token = "0x2000190")]
public class BuildingsEffectProxy : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200058C")]
	public struct BuildingsEffectProxyCell
	{
		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string tag;

		[Token(Token = "0x4002041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AudioEvent audioEvent;

		[Token(Token = "0x4002042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SwitchInfoData switchEvent;

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] effects;
	}

	[Serializable]
	[Token(Token = "0x200058D")]
	public class WeaponEffectProxyCell
	{
		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_weapon_type e_Weapon_Type;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BuildingsEffectProxyCell[] effectCells;

		[Token(Token = "0x6002BEC")]
		[Address(RVA = "0x13DE4C0", Offset = "0x13DE4C0", VA = "0x13DE4C0")]
		public WeaponEffectProxyCell()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200058E")]
	public struct DecalProxyCell
	{
		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject target;
	}

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BuildingsEffectProxy _Instance;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<WeaponEffectProxyCell> effectCells2;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public QuadDecalPool bulletHoleEffect;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, Dictionary<string, BuildingsEffectProxyCell>> effectCellDic2;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<e_weapon_type> e_Weapon_Typess;

	[Token(Token = "0x170000EA")]
	public static BuildingsEffectProxy Instance
	{
		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x13DD708", Offset = "0x13DD708", VA = "0x13DD708")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x13DD758", Offset = "0x13DD758", VA = "0x13DD758")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x13DD7B0", Offset = "0x13DD7B0", VA = "0x13DD7B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x13DD964", Offset = "0x13DD964", VA = "0x13DD964")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x13DDC30", Offset = "0x13DDC30", VA = "0x13DDC30")]
	public void ShowHitEffect(e_weapon_type weapon_Type, GameObject _hitObj, Vector3 _hitPos, Vector3 _hitNormal, bool _isShowHole = false)
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x13DE1C8", Offset = "0x13DE1C8", VA = "0x13DE1C8")]
	private void PlayAudio(AudioEvent audioEvent, Vector3 _hitPos, SwitchInfoData switchEvent)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x13DDFEC", Offset = "0x13DDFEC", VA = "0x13DDFEC")]
	private void ShowMaterialEffect(GameObject[] _hitEffects, GameObject _hitObj, Vector3 _hitPos, Quaternion _hitRot)
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x13DE318", Offset = "0x13DE318", VA = "0x13DE318")]
	private EffectDefine ShowMaterialEffect(GameObject _hitEffect, GameObject _hitObj, Vector3 _hitPos, Quaternion _hitRot)
	{
		return null;
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x13DE410", Offset = "0x13DE410", VA = "0x13DE410")]
	public BuildingsEffectProxy()
	{
	}
}
[Token(Token = "0x2000191")]
public class BulletScaleAnimation : MonoBehaviour
{
	[Token(Token = "0x200058F")]
	public enum EAxis
	{
		[Token(Token = "0x4002048")]
		X,
		[Token(Token = "0x4002049")]
		Y,
		[Token(Token = "0x400204A")]
		Z
	}

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EAxis MoveAxis;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float BulletLength;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float BulletStretchFrame;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float BulletStrinkFrame;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float BulletKeepFrame;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float BulletScaleFactor;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float mBulletStretchTime;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float mBulletStrinkTime;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float mBulletKeepTime;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mStretchSpeed;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float mStrinkSpeed;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mCurrentLength;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float mTime;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float mCurrentScale;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 mFront;

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x12AB224", Offset = "0x12AB224", VA = "0x12AB224")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x12AB474", Offset = "0x12AB474", VA = "0x12AB474")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x12AB744", Offset = "0x12AB744", VA = "0x12AB744")]
	public void Init()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x12AB47C", Offset = "0x12AB47C", VA = "0x12AB47C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x12AB76C", Offset = "0x12AB76C", VA = "0x12AB76C")]
	public BulletScaleAnimation()
	{
	}
}
[Token(Token = "0x2000192")]
public class EffectDefine : MonoBehaviour
{
	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x122FA20", Offset = "0x122FA20", VA = "0x122FA20")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x122FA24", Offset = "0x122FA24", VA = "0x122FA24")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x122FA28", Offset = "0x122FA28", VA = "0x122FA28")]
	public EffectDefine()
	{
	}
}
[Token(Token = "0x2000193")]
public class AlphaTimeLine : MaterialPropTimeLine
{
	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float Begin;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float End;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve mCurve;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color RGB;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int TintColorCode;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int TintColorArrayCode;

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x1556528", Offset = "0x1556528", VA = "0x1556528")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x15565C0", Offset = "0x15565C0", VA = "0x15565C0", Slot = "4")]
	public override void UpdateCurve(float present)
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x155666C", Offset = "0x155666C", VA = "0x155666C")]
	public AlphaTimeLine()
	{
	}
}
[Token(Token = "0x2000194")]
public class MaterialProp : MonoBehaviour
{
	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer mRend;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock mMatProp;

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x12E4370", Offset = "0x12E4370", VA = "0x12E4370")]
	public void Init(Renderer rend)
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x12E43F4", Offset = "0x12E43F4", VA = "0x12E43F4")]
	public MaterialPropertyBlock GetMatProp()
	{
		return null;
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x12E43FC", Offset = "0x12E43FC", VA = "0x12E43FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x12E4494", Offset = "0x12E4494", VA = "0x12E4494")]
	public MaterialProp()
	{
	}
}
[Token(Token = "0x2000195")]
public class MaterialPropTimeLine : TimeLineBase
{
	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MaterialProp mMatProp;

	[Token(Token = "0x170000EB")]
	protected MaterialPropertyBlock MatPropBlock
	{
		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0x12E45D0", Offset = "0x12E45D0", VA = "0x12E45D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x12E449C", Offset = "0x12E449C", VA = "0x12E449C")]
	public void CreateMaterialProperty(Renderer rend)
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x12E4660", Offset = "0x12E4660", VA = "0x12E4660")]
	public MaterialPropTimeLine()
	{
	}
}
[Token(Token = "0x2000196")]
public class RotateTimeLine : TimeLineBase
{
	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 mEndVector3;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 mStartVector3;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve mXAnimationCurve;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve mYAnimationCurve;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve mZAnimationCurve;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool mXAngle;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool mYAngle;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool mZAngle;

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x13C0908", Offset = "0x13C0908", VA = "0x13C0908", Slot = "4")]
	public override void UpdateCurve(float present)
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x13C0C68", Offset = "0x13C0C68", VA = "0x13C0C68")]
	public RotateTimeLine()
	{
	}
}
[Token(Token = "0x2000197")]
public class ScaleTimeLine : MonoBehaviour
{
	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve XAsixScale;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve YAsixScale;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve ZAsixScale;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve ALLAsixScale;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool ScaleAll;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool Loop;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float DelayTime;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float ScaleTime;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 Scales;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float mTime;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 mCurScale;

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x12527CC", Offset = "0x12527CC", VA = "0x12527CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x1252808", Offset = "0x1252808", VA = "0x1252808")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x1252858", Offset = "0x1252858", VA = "0x1252858")]
	public void Init()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x125285C", Offset = "0x125285C", VA = "0x125285C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x1252B44", Offset = "0x1252B44", VA = "0x1252B44")]
	public ScaleTimeLine()
	{
	}
}
[Token(Token = "0x2000198")]
public class SpriteTimeLine : MaterialPropTimeLine
{
	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string UVParameterName;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float TileX;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float TileY;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve mUVCurve;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool RandomEndSprite;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected int UVParameterID;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected float EndSpriteNum;

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x12C56F0", Offset = "0x12C56F0", VA = "0x12C56F0")]
	private void OnReStart()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x12C5738", Offset = "0x12C5738", VA = "0x12C5738")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x12C586C", Offset = "0x12C586C", VA = "0x12C586C", Slot = "4")]
	public override void UpdateCurve(float present)
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x12C59B4", Offset = "0x12C59B4", VA = "0x12C59B4")]
	public SpriteTimeLine()
	{
	}
}
[Token(Token = "0x2000199")]
public class TimeLineBase : MonoBehaviour
{
	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Action mReStartCallback;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Loop;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool LoopIgnoreDelayTime;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float DelayTime;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ScaleTime;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float LoopSecondStartTime;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float mTime;

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x11D9174", Offset = "0x11D9174", VA = "0x11D9174", Slot = "4")]
	public virtual void UpdateCurve(float present)
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x11D9178", Offset = "0x11D9178", VA = "0x11D9178", Slot = "5")]
	public virtual void OnMonoEnable()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x11D9180", Offset = "0x11D9180", VA = "0x11D9180")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x11D91C0", Offset = "0x11D91C0", VA = "0x11D91C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x11D927C", Offset = "0x11D927C", VA = "0x11D927C")]
	public TimeLineBase()
	{
	}
}
[Token(Token = "0x200019A")]
public class TransformTimeLine : TimeLineBase
{
	[Token(Token = "0x2000590")]
	public enum TranType
	{
		[Token(Token = "0x400204C")]
		TRAN_SCALE,
		[Token(Token = "0x400204D")]
		TRAN_POS
	}

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public TranType mTranType;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve XAsixScale;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve YAsixScale;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve ZAsixScale;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve ALLAsixScale;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ScaleAll;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool RandomEnd;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 Begin;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 End;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 ReStartEnd;

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x11DDEDC", Offset = "0x11DDEDC", VA = "0x11DDEDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x11DDFB4", Offset = "0x11DDFB4", VA = "0x11DDFB4")]
	private void OnReStart()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x11DE094", Offset = "0x11DE094", VA = "0x11DE094")]
	public void Init()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x11DE0A0", Offset = "0x11DE0A0", VA = "0x11DE0A0", Slot = "4")]
	public override void UpdateCurve(float present)
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x11DE3B4", Offset = "0x11DE3B4", VA = "0x11DE3B4")]
	public TransformTimeLine()
	{
	}
}
[Token(Token = "0x200019B")]
public class UVAnimTimeLine : SpriteTimeLine
{
	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float SpeedU;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float SpeedV;

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x11E1040", Offset = "0x11E1040", VA = "0x11E1040", Slot = "4")]
	public override void UpdateCurve(float present)
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x11E1110", Offset = "0x11E1110", VA = "0x11E1110")]
	public UVAnimTimeLine()
	{
	}
}
[Token(Token = "0x200019C")]
public class FPSRandomRotateAngle : MonoBehaviour
{
	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool RotateX;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool RotateY;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool RotateZ;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform t;

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x1235F7C", Offset = "0x1235F7C", VA = "0x1235F7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x1235FAC", Offset = "0x1235FAC", VA = "0x1235FAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x12360A4", Offset = "0x12360A4", VA = "0x12360A4")]
	public FPSRandomRotateAngle()
	{
	}
}
[Token(Token = "0x200019D")]
public class RunParticle : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000591")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4D00", Offset = "0xEE4D00")]
	private sealed class <>c
	{
		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<ParticleSystem> <>9__0_0;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<ParticleSystem> <>9__1_0;

		[Token(Token = "0x6002BEE")]
		[Address(RVA = "0x13C11F0", Offset = "0x13C11F0", VA = "0x13C11F0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002BEF")]
		[Address(RVA = "0x13C11F8", Offset = "0x13C11F8", VA = "0x13C11F8")]
		internal void <OnEnable>b__0_0(ParticleSystem p)
		{
		}

		[Token(Token = "0x6002BF0")]
		[Address(RVA = "0x13C1214", Offset = "0x13C1214", VA = "0x13C1214")]
		internal void <OnDisable>b__1_0(ParticleSystem p)
		{
		}
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x13C0F98", Offset = "0x13C0F98", VA = "0x13C0F98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x13C108C", Offset = "0x13C108C", VA = "0x13C108C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x13C1180", Offset = "0x13C1180", VA = "0x13C1180")]
	public RunParticle()
	{
	}
}
[Token(Token = "0x200019E")]
public class TransparentScaleAnimation : MonoBehaviour
{
	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ShowFrame;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float KeepFrame;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float HideFrame;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float mShowTime;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float mKeepTime;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float mHideTime;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float mTime;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material mMaterial;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int TintColorCode;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color mCurrentMaterialColor;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float mAlpha;

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x11DE500", Offset = "0x11DE500", VA = "0x11DE500")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x11DE5EC", Offset = "0x11DE5EC", VA = "0x11DE5EC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x11DE61C", Offset = "0x11DE61C", VA = "0x11DE61C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x11DE604", Offset = "0x11DE604", VA = "0x11DE604")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x11DE6D0", Offset = "0x11DE6D0", VA = "0x11DE6D0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x11DE798", Offset = "0x11DE798", VA = "0x11DE798")]
	public TransparentScaleAnimation()
	{
	}
}
[Token(Token = "0x200019F")]
public class UVOffsetAnimation : MonoBehaviour
{
	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float XSpeed;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float YSpeed;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float xOffset;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float yOffset;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material mainMaterial;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastTime;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool initSucceed;

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x11E1118", Offset = "0x11E1118", VA = "0x11E1118")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x11E11FC", Offset = "0x11E11FC", VA = "0x11E11FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x11E1304", Offset = "0x11E1304", VA = "0x11E1304")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x11E1250", Offset = "0x11E1250", VA = "0x11E1250")]
	private void UpdateAnimation()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x11E13B8", Offset = "0x11E13B8", VA = "0x11E13B8")]
	public UVOffsetAnimation()
	{
	}
}
[Token(Token = "0x20001A0")]
internal class UVTextureAnimator : MonoBehaviour
{
	[Token(Token = "0x2000592")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4D10", Offset = "0xEE4D10")]
	private sealed class <UpdateCorutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UVTextureAnimator <>4__this;

		[Token(Token = "0x17000457")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002BF4")]
			[Address(RVA = "0x11E1BB0", Offset = "0x11E1BB0", VA = "0x11E1BB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000458")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002BF6")]
			[Address(RVA = "0x11E1C18", Offset = "0x11E1C18", VA = "0x11E1C18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002BF1")]
		[Address(RVA = "0x11E189C", Offset = "0x11E189C", VA = "0x11E189C")]
		[DebuggerHidden]
		public <UpdateCorutine>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6002BF2")]
		[Address(RVA = "0x11E1AB0", Offset = "0x11E1AB0", VA = "0x11E1AB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002BF3")]
		[Address(RVA = "0x11E1AB4", Offset = "0x11E1AB4", VA = "0x11E1AB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002BF5")]
		[Address(RVA = "0x11E1BB8", Offset = "0x11E1BB8", VA = "0x11E1BB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Rows;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int Columns;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Fps;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int OffsetMat;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float StartDelay;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isInizialised;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int index;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int count;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int allCount;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float deltaFps;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool isVisible;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool isCorutineStarted;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer currentRenderer;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material instanceMaterial;

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x11E13D0", Offset = "0x11E13D0", VA = "0x11E13D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x11E144C", Offset = "0x11E144C", VA = "0x11E144C")]
	private void InitDefaultVariables()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x11E16C0", Offset = "0x11E16C0", VA = "0x11E16C0")]
	private void Play()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x11E17D4", Offset = "0x11E17D4", VA = "0x11E17D4")]
	private void PlayDelay()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x11E1800", Offset = "0x11E1800", VA = "0x11E1800")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x11E1838", Offset = "0x11E1838", VA = "0x11E1838")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x11E1758", Offset = "0x11E1758", VA = "0x11E1758")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEF948", Offset = "0xEEF948")]
	private IEnumerator UpdateCorutine()
	{
		return null;
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x11E18C8", Offset = "0x11E18C8", VA = "0x11E18C8")]
	private void UpdateCorutineFrame()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x11E19CC", Offset = "0x11E19CC", VA = "0x11E19CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x11E1A90", Offset = "0x11E1A90", VA = "0x11E1A90")]
	public UVTextureAnimator()
	{
	}
}
[Token(Token = "0x20001A1")]
public class ExploderConfig : MonoBehaviour
{
	[Token(Token = "0x2000593")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4D20", Offset = "0xEE4D20")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExploderConfig <>4__this;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 point;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float force;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 dir;

		[Token(Token = "0x6002BF7")]
		[Address(RVA = "0x123569C", Offset = "0x123569C", VA = "0x123569C")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6002BF8")]
		[Address(RVA = "0x123572C", Offset = "0x123572C", VA = "0x123572C")]
		internal void <Expolder>b__0(float time, ExploderObject.ExplosionState state)
		{
		}
	}

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] explodeParts;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int targetFragments;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fragmentsForceRadius;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool IsOpen;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Collider[] tempFragmentColliders;

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x12350E0", Offset = "0x12350E0", VA = "0x12350E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x1235284", Offset = "0x1235284", VA = "0x1235284")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x1235290", Offset = "0x1235290", VA = "0x1235290")]
	public void Expolder(Vector3 point, Vector3 dir, float force, DeactivateOptions deactivateOptions, FadeoutOptions fadeoutOptions, float fadeoutValue)
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x12356A4", Offset = "0x12356A4", VA = "0x12356A4")]
	public ExploderConfig()
	{
	}
}
[Token(Token = "0x20001A2")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE1300", Offset = "0xEE1300")]
public class ExploderTools : MonoBehaviour
{
	[Token(Token = "0x2000594")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4D30", Offset = "0xEE4D30")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExploderConfig exploderConfig;

		[Token(Token = "0x4002059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 point;

		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 dir;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float force;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ExploderTools <>4__this;

		[Token(Token = "0x6002BF9")]
		[Address(RVA = "0x1235C78", Offset = "0x1235C78", VA = "0x1235C78")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6002BFA")]
		[Address(RVA = "0x1235CB0", Offset = "0x1235CB0", VA = "0x1235CB0")]
		internal void <Exploder>b__0()
		{
		}
	}

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<ExploderConfig> exploderConfigs;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<GameObject> parts;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float fadeOutTime;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public DeactivateOptions deactivateOptions;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FadeoutOptions FadeoutOptions;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float brokenDelay;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine coroutine;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isOpen;

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x12351EC", Offset = "0x12351EC", VA = "0x12351EC")]
	public void Register(ExploderConfig exploderConfig)
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x1235A44", Offset = "0x1235A44", VA = "0x1235A44")]
	public void Exploder(ExploderConfig exploderConfig, Vector3 point, Vector3 dir, float force)
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x1227DF0", Offset = "0x1227DF0", VA = "0x1227DF0")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x1235C80", Offset = "0x1235C80", VA = "0x1235C80")]
	public ExploderTools()
	{
	}
}
[Token(Token = "0x20001A3")]
public delegate void OnStateStart(int state_id);
[Token(Token = "0x20001A4")]
public delegate void OnStateUpdate(int state_id, float deltaTime);
[Token(Token = "0x20001A5")]
public delegate void OnStateLateUpdate(int state_id);
[Token(Token = "0x20001A6")]
public delegate void OnStateFixedUpdate(int state_id, float fixedDeltaTime);
[Token(Token = "0x20001A7")]
public delegate void OnStateQuit(int state_id);
[Token(Token = "0x20001A8")]
public class FSMState
{
	[Serializable]
	[Token(Token = "0x2000595")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4D40", Offset = "0xEE4D40")]
	private sealed class <>c
	{
		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static OnStateStart <>9__38_0;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static OnStateUpdate <>9__38_1;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static OnStateFixedUpdate <>9__38_2;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static OnStateLateUpdate <>9__38_3;

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static OnStateQuit <>9__38_4;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static OnStateStart <>9__46_0;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static OnStateUpdate <>9__46_1;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static OnStateFixedUpdate <>9__46_2;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static OnStateLateUpdate <>9__46_3;

		[Token(Token = "0x4002067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static OnStateQuit <>9__46_4;

		[Token(Token = "0x6002BFC")]
		[Address(RVA = "0x1324EC4", Offset = "0x1324EC4", VA = "0x1324EC4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002BFD")]
		[Address(RVA = "0x1324ECC", Offset = "0x1324ECC", VA = "0x1324ECC")]
		internal void <Reset>b__38_0(int <p0>)
		{
		}

		[Token(Token = "0x6002BFE")]
		[Address(RVA = "0x1324ED0", Offset = "0x1324ED0", VA = "0x1324ED0")]
		internal void <Reset>b__38_1(int <p0>, float <p1>)
		{
		}

		[Token(Token = "0x6002BFF")]
		[Address(RVA = "0x1324ED4", Offset = "0x1324ED4", VA = "0x1324ED4")]
		internal void <Reset>b__38_2(int <p0>, float <p1>)
		{
		}

		[Token(Token = "0x6002C00")]
		[Address(RVA = "0x1324ED8", Offset = "0x1324ED8", VA = "0x1324ED8")]
		internal void <Reset>b__38_3(int <p0>)
		{
		}

		[Token(Token = "0x6002C01")]
		[Address(RVA = "0x1324EDC", Offset = "0x1324EDC", VA = "0x1324EDC")]
		internal void <Reset>b__38_4(int <p0>)
		{
		}

		[Token(Token = "0x6002C02")]
		[Address(RVA = "0x1324EE0", Offset = "0x1324EE0", VA = "0x1324EE0")]
		internal void <.ctor>b__46_0(int <p0>)
		{
		}

		[Token(Token = "0x6002C03")]
		[Address(RVA = "0x1324EE4", Offset = "0x1324EE4", VA = "0x1324EE4")]
		internal void <.ctor>b__46_1(int <p0>, float <p1>)
		{
		}

		[Token(Token = "0x6002C04")]
		[Address(RVA = "0x1324EE8", Offset = "0x1324EE8", VA = "0x1324EE8")]
		internal void <.ctor>b__46_2(int <p0>, float <p1>)
		{
		}

		[Token(Token = "0x6002C05")]
		[Address(RVA = "0x1324EEC", Offset = "0x1324EEC", VA = "0x1324EEC")]
		internal void <.ctor>b__46_3(int <p0>)
		{
		}

		[Token(Token = "0x6002C06")]
		[Address(RVA = "0x1324EF0", Offset = "0x1324EF0", VA = "0x1324EF0")]
		internal void <.ctor>b__46_4(int <p0>)
		{
		}
	}

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7530", Offset = "0xEE7530")]
	private string <Name>k__BackingField;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7540", Offset = "0xEE7540")]
	private int <StateID>k__BackingField;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<int> m_trans_list;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7550", Offset = "0xEE7550")]
	private FSMSystem <StateMachine>k__BackingField;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7560", Offset = "0xEE7560")]
	private OnStateStart <StartCallback>k__BackingField;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7570", Offset = "0xEE7570")]
	private OnStateUpdate <UpdateCallback>k__BackingField;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7580", Offset = "0xEE7580")]
	private OnStateFixedUpdate <FixedUpdateCallback>k__BackingField;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7590", Offset = "0xEE7590")]
	private OnStateLateUpdate <LateUpdateCallback>k__BackingField;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE75A0", Offset = "0xEE75A0")]
	private OnStateQuit <QuitCallback>k__BackingField;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE75B0", Offset = "0xEE75B0")]
	private object <UserData>k__BackingField;

	[Token(Token = "0x170000EC")]
	public string Name
	{
		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x123D3D0", Offset = "0x123D3D0", VA = "0x123D3D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF9AC", Offset = "0xEEF9AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x123D3D8", Offset = "0x123D3D8", VA = "0x123D3D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF9BC", Offset = "0xEEF9BC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000ED")]
	public int StateID
	{
		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x123D3E0", Offset = "0x123D3E0", VA = "0x123D3E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF9CC", Offset = "0xEEF9CC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x123D3E8", Offset = "0x123D3E8", VA = "0x123D3E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF9DC", Offset = "0xEEF9DC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000EE")]
	public FSMSystem StateMachine
	{
		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x123D3F0", Offset = "0x123D3F0", VA = "0x123D3F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF9EC", Offset = "0xEEF9EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x123D3F8", Offset = "0x123D3F8", VA = "0x123D3F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEF9FC", Offset = "0xEEF9FC")]
		set
		{
		}
	}

	[Token(Token = "0x170000EF")]
	public OnStateStart StartCallback
	{
		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x123D400", Offset = "0x123D400", VA = "0x123D400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFA0C", Offset = "0xEEFA0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x123D408", Offset = "0x123D408", VA = "0x123D408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFA1C", Offset = "0xEEFA1C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F0")]
	public OnStateUpdate UpdateCallback
	{
		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x123D410", Offset = "0x123D410", VA = "0x123D410")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFA2C", Offset = "0xEEFA2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x123D418", Offset = "0x123D418", VA = "0x123D418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFA3C", Offset = "0xEEFA3C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F1")]
	public OnStateFixedUpdate FixedUpdateCallback
	{
		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x123D420", Offset = "0x123D420", VA = "0x123D420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFA4C", Offset = "0xEEFA4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x123D428", Offset = "0x123D428", VA = "0x123D428")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFA5C", Offset = "0xEEFA5C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F2")]
	public OnStateLateUpdate LateUpdateCallback
	{
		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x123D430", Offset = "0x123D430", VA = "0x123D430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFA6C", Offset = "0xEEFA6C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x123D438", Offset = "0x123D438", VA = "0x123D438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFA7C", Offset = "0xEEFA7C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F3")]
	public OnStateQuit QuitCallback
	{
		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x123D440", Offset = "0x123D440", VA = "0x123D440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFA8C", Offset = "0xEEFA8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x123D448", Offset = "0x123D448", VA = "0x123D448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFA9C", Offset = "0xEEFA9C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F4")]
	public object UserData
	{
		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x123D450", Offset = "0x123D450", VA = "0x123D450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFAAC", Offset = "0xEEFAAC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x123D458", Offset = "0x123D458", VA = "0x123D458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFABC", Offset = "0xEEFABC")]
		set
		{
		}
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x123D460", Offset = "0x123D460", VA = "0x123D460")]
	public void Init(int state_id, string state_name)
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x123D470", Offset = "0x123D470", VA = "0x123D470")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x123D810", Offset = "0x123D810", VA = "0x123D810")]
	public void AddTransLink(int link_id)
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x123D878", Offset = "0x123D878", VA = "0x123D878")]
	public bool CanTrans(int link_id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x123D91C", Offset = "0x123D91C", VA = "0x123D91C")]
	public void DoStartState()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x123D940", Offset = "0x123D940", VA = "0x123D940")]
	public void DoUpdateState(float deltaTime)
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x123D964", Offset = "0x123D964", VA = "0x123D964")]
	public void DoLateUpdateState()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x123D988", Offset = "0x123D988", VA = "0x123D988")]
	public void DoFixedUpdateState(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x123D9AC", Offset = "0x123D9AC", VA = "0x123D9AC")]
	public void DoQuitState()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x123D9D0", Offset = "0x123D9D0", VA = "0x123D9D0")]
	public FSMState()
	{
	}
}
[Token(Token = "0x20001A9")]
public class FSMSystem
{
	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, FSMState> m_state_dict;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FSMState m_start_state;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE75C0", Offset = "0xEE75C0")]
	private FSMState <CurrentState>k__BackingField;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE75D0", Offset = "0xEE75D0")]
	private bool <NextFrameChg>k__BackingField;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int m_target_state_id;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE75E0", Offset = "0xEE75E0")]
	private object <UserData>k__BackingField;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE75F0", Offset = "0xEE75F0")]
	private bool <IsStop>k__BackingField;

	[Token(Token = "0x170000F5")]
	public FSMState CurrentState
	{
		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x1324EF4", Offset = "0x1324EF4", VA = "0x1324EF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFACC", Offset = "0xEEFACC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x1324EFC", Offset = "0x1324EFC", VA = "0x1324EFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFADC", Offset = "0xEEFADC")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F6")]
	public bool NextFrameChg
	{
		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x1324F04", Offset = "0x1324F04", VA = "0x1324F04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFAEC", Offset = "0xEEFAEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x1324F0C", Offset = "0x1324F0C", VA = "0x1324F0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFAFC", Offset = "0xEEFAFC")]
		set
		{
		}
	}

	[Token(Token = "0x170000F7")]
	public object UserData
	{
		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x1324F18", Offset = "0x1324F18", VA = "0x1324F18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFB0C", Offset = "0xEEFB0C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x1324F20", Offset = "0x1324F20", VA = "0x1324F20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFB1C", Offset = "0xEEFB1C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F8")]
	public bool IsStop
	{
		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x1324F28", Offset = "0x1324F28", VA = "0x1324F28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFB2C", Offset = "0xEEFB2C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x1324F30", Offset = "0x1324F30", VA = "0x1324F30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFB3C", Offset = "0xEEFB3C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x1324F3C", Offset = "0x1324F3C", VA = "0x1324F3C")]
	public FSMState GetState(int state_id)
	{
		return null;
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x1324FD0", Offset = "0x1324FD0", VA = "0x1324FD0")]
	public bool AddState(FSMState handle_state)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x1325098", Offset = "0x1325098", VA = "0x1325098")]
	public void RemoveState(int state_id)
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x132519C", Offset = "0x132519C", VA = "0x132519C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x13251E8", Offset = "0x13251E8", VA = "0x13251E8")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x1325234", Offset = "0x1325234", VA = "0x1325234")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x132528C", Offset = "0x132528C", VA = "0x132528C")]
	public void ChangeState(int state_id, object userData, bool force)
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x13253C0", Offset = "0x13253C0", VA = "0x13253C0")]
	public void Update(float deltaTime)
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x132549C", Offset = "0x132549C", VA = "0x132549C")]
	public void FixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x13254B8", Offset = "0x13254B8", VA = "0x13254B8")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x13254D4", Offset = "0x13254D4", VA = "0x13254D4")]
	public FSMSystem()
	{
	}
}
[Token(Token = "0x20001AA")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1364", Offset = "0xEE1364")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1364", Offset = "0xEE1364")]
public class BossBomb : ActionTask<Transform>
{
	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> bulletModelID;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<Transform> target;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool rightFire;

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x13D0E98", Offset = "0x13D0E98", VA = "0x13D0E98", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x13D10A4", Offset = "0x13D10A4", VA = "0x13D10A4")]
	public BossBomb()
	{
	}
}
[Token(Token = "0x20001AB")]
public class BossBulletC4 : MonsterBullet
{
	[Token(Token = "0x2000596")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4D50", Offset = "0xEE4D50")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4002068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimatorStateInfo stateinfo;

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BossBulletC4 <>4__this;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Func<Animator, float> <>9__1;

		[Token(Token = "0x6002C07")]
		[Address(RVA = "0x13D2418", Offset = "0x13D2418", VA = "0x13D2418")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x6002C08")]
		[Address(RVA = "0x13D26A8", Offset = "0x13D26A8", VA = "0x13D26A8")]
		internal void <OnMotionEnd>b__0(long l)
		{
		}

		[Token(Token = "0x6002C09")]
		[Address(RVA = "0x13D28A8", Offset = "0x13D28A8", VA = "0x13D28A8")]
		internal float <OnMotionEnd>b__1(Animator animator)
		{
			return default(float);
		}
	}

	[Serializable]
	[Token(Token = "0x2000597")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4D60", Offset = "0xEE4D60")]
	private sealed class <>c
	{
		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<float, bool> <>9__19_2;

		[Token(Token = "0x6002C0B")]
		[Address(RVA = "0x13D2690", Offset = "0x13D2690", VA = "0x13D2690")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C0C")]
		[Address(RVA = "0x13D2698", Offset = "0x13D2698", VA = "0x13D2698")]
		internal bool <OnMotionEnd>b__19_2(float f)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject boomEffect;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float highFactor;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AnimationCurve moveCurve;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string aniName;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject warnPrefab;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioEvent Grenades_Boss_Drop;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GoSpline path;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float moveTime;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 mTargetPos;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Animator ani;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float percent;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private IDisposable updateDisposable;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private GameObject warnObject;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private WwiseDefine c4BlendAudioObj;

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x13D1BA8", Offset = "0x13D1BA8", VA = "0x13D1BA8", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x13D1C28", Offset = "0x13D1C28", VA = "0x13D1C28", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x13D1CF8", Offset = "0x13D1CF8", VA = "0x13D1CF8")]
	protected GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x13D1F80", Offset = "0x13D1F80", VA = "0x13D1F80", Slot = "20")]
	protected override void UpdateLifeTime(float time)
	{
	}

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x13D1F84", Offset = "0x13D1F84", VA = "0x13D1F84")]
	protected void DoUpdate()
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x13D2054", Offset = "0x13D2054", VA = "0x13D2054")]
	protected void OnMotionEnd()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x13D2420", Offset = "0x13D2420", VA = "0x13D2420")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x13D2470", Offset = "0x13D2470", VA = "0x13D2470")]
	protected void ApplyBoomEffect(Vector3 hitPos)
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x13D2540", Offset = "0x13D2540", VA = "0x13D2540")]
	public BossBulletC4()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x13D2550", Offset = "0x13D2550", VA = "0x13D2550")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFB4C", Offset = "0xEEFB4C")]
	private void <ResetPosition>b__15_0(Unit unit)
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x13D2554", Offset = "0x13D2554", VA = "0x13D2554")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFB5C", Offset = "0xEEFB5C")]
	private void <OnMotionEnd>b__19_3(float f)
	{
	}
}
[Token(Token = "0x20001AC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE13C8", Offset = "0xEE13C8")]
public class BossGatlinBlendRTPC : ActionTask
{
	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xEE7600", Offset = "0xEE7600")]
	public BBParameter<bool> startShot;

	[Token(Token = "0x170000F9")]
	protected override string info
	{
		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x13D3958", Offset = "0x13D3958", VA = "0x13D3958", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x13D39AC", Offset = "0x13D39AC", VA = "0x13D39AC", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x13D3A54", Offset = "0x13D3A54", VA = "0x13D3A54")]
	public BossGatlinBlendRTPC()
	{
	}
}
[Token(Token = "0x20001AD")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1400", Offset = "0xEE1400")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1400", Offset = "0xEE1400")]
public class BossInit : ActionTask<BossMono>
{
	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xEE7610", Offset = "0xEE7610")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<GameObject> ownerObj;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBParameter<BossState> bossState;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<float> moveSpeed;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[BlackboardOnly]
	public BBParameter<float> strafeMoveSpeed;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[BlackboardOnly]
	public BBParameter<float> angularSpeed;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[BlackboardOnly]
	public BBParameter<int> c4Count;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[BlackboardOnly]
	public BBParameter<List<GameObject>> patrolPoints;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[BlackboardOnly]
	public BBParameter<List<Transform>> bombPoints;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[BlackboardOnly]
	public BBParameter<List<Transform>> strafePoints;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[BlackboardOnly]
	public BBParameter<Transform> inCombatPoint;

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x13D3A5C", Offset = "0x13D3A5C", VA = "0x13D3A5C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x13D3B70", Offset = "0x13D3B70", VA = "0x13D3B70")]
	private void InitFromBossSetting()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x13D3E3C", Offset = "0x13D3E3C", VA = "0x13D3E3C")]
	private void InitFromMainScene()
	{
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x13D45E8", Offset = "0x13D45E8", VA = "0x13D45E8")]
	public BossInit()
	{
	}
}
[Token(Token = "0x20001AE")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1464", Offset = "0xEE1464")]
public class BossLookAt : ActionTask
{
	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xEE76E8", Offset = "0xEE76E8")]
	public BBParameter<Transform> looker;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<GameObject> lookTarget;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool repeat;

	[Token(Token = "0x170000FA")]
	protected override string info
	{
		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x13D4638", Offset = "0x13D4638", VA = "0x13D4638", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x13D468C", Offset = "0x13D468C", VA = "0x13D468C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x13D4794", Offset = "0x13D4794", VA = "0x13D4794", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x13D4690", Offset = "0x13D4690", VA = "0x13D4690")]
	private void DoLook()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x13D4798", Offset = "0x13D4798", VA = "0x13D4798")]
	public BossLookAt()
	{
	}
}
[Token(Token = "0x20001AF")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE149C", Offset = "0xEE149C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE149C", Offset = "0xEE149C")]
public class BossMove : ActionTask<Transform>
{
	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> destinationPoint;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<float> moveSpeed;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float centorOffset;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AnimationCurve curve;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Animator animator;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 targetPoint;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float moveTime;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 mStart;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 mEnd;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 centor;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 worldDir;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 inertialDir;

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x13D7274", Offset = "0x13D7274", VA = "0x13D7274", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x13D74BC", Offset = "0x13D74BC", VA = "0x13D74BC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x13D7538", Offset = "0x13D7538", VA = "0x13D7538")]
	private void SetMoveParam()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x13D7700", Offset = "0x13D7700", VA = "0x13D7700", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x13D79DC", Offset = "0x13D79DC", VA = "0x13D79DC")]
	public BossMove()
	{
	}
}
[Token(Token = "0x20001B0")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1500", Offset = "0xEE1500")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1500", Offset = "0xEE1500")]
public class BossResetByStage : ActionTask<Transform>
{
	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<BossState> bossState;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<int> c4Count;

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x13D7DF8", Offset = "0x13D7DF8", VA = "0x13D7DF8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x13D7ED0", Offset = "0x13D7ED0", VA = "0x13D7ED0")]
	public BossResetByStage()
	{
	}
}
[Token(Token = "0x20001B1")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1564", Offset = "0xEE1564")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1564", Offset = "0xEE1564")]
public class FindNearPoint : ActionTask<Transform>
{
	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<List<Transform>> sourceTraList;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> destinationPoint;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float ignoreDistance;

	[Token(Token = "0x170000FB")]
	protected override string info
	{
		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x1326A68", Offset = "0x1326A68", VA = "0x1326A68", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x1326ABC", Offset = "0x1326ABC", VA = "0x1326ABC", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x1326D28", Offset = "0x1326D28", VA = "0x1326D28")]
	public FindNearPoint()
	{
	}
}
[Token(Token = "0x20001B2")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE15C8", Offset = "0xEE15C8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE15C8", Offset = "0xEE15C8")]
public class FindNearbyArea : ActionTask<BossMono>
{
	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<List<Transform>> sourceTraList;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> destinationPoint;

	[Token(Token = "0x170000FC")]
	protected override string info
	{
		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x1326D80", Offset = "0x1326D80", VA = "0x1326D80", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x1326DD4", Offset = "0x1326DD4", VA = "0x1326DD4", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x1326E54", Offset = "0x1326E54", VA = "0x1326E54")]
	public FindNearbyArea()
	{
	}
}
[Token(Token = "0x20001B3")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE162C", Offset = "0xEE162C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE162C", Offset = "0xEE162C")]
public class GetElementInList<T> : ActionTask
{
	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xEE7718", Offset = "0xEE7718")]
	public BBParameter<List<T>> sourceList;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<T> saveAs;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isRandom;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool delElement;

	[Token(Token = "0x170000FD")]
	protected override string info
	{
		[Token(Token = "0x6000C42")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C43")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000C44")]
	public GetElementInList()
	{
	}
}
[Token(Token = "0x20001B4")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1690", Offset = "0xEE1690")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1690", Offset = "0xEE1690")]
public class GetElementsInList<T> : ActionTask
{
	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xEE7728", Offset = "0xEE7728")]
	public BBParameter<List<T>> sourceList;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<List<T>> saveAs;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<int> getCount;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isRandom;

	[Token(Token = "0x170000FE")]
	protected override string info
	{
		[Token(Token = "0x6000C45")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C46")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000C47")]
	protected void GetRangeElements(int getCount, List<T> sourceList)
	{
	}

	[Token(Token = "0x6000C48")]
	public GetElementsInList()
	{
	}
}
[Token(Token = "0x20001B5")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE16F4", Offset = "0xEE16F4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE16F4", Offset = "0xEE16F4")]
public class GetElementInListByIndex<T> : ActionTask
{
	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xEE7738", Offset = "0xEE7738")]
	public BBParameter<List<T>> sourceList;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<int> index;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<T> saveAs;

	[Token(Token = "0x170000FF")]
	protected override string info
	{
		[Token(Token = "0x6000C49")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C4A")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000C4B")]
	public GetElementInListByIndex()
	{
	}
}
[Token(Token = "0x20001B6")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1758", Offset = "0xEE1758")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1758", Offset = "0xEE1758")]
public class GetElementsIndexList<T> : ActionTask
{
	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xEE7748", Offset = "0xEE7748")]
	public BBParameter<List<T>> sourceList;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<List<T>> saveAs;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<int> beginIndex;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<int> getCount;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<int> resultCount;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<bool> isReverse;

	[Token(Token = "0x17000100")]
	protected override string info
	{
		[Token(Token = "0x6000C4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C4D")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000C4E")]
	public GetElementsIndexList()
	{
	}
}
[Token(Token = "0x20001B7")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE17BC", Offset = "0xEE17BC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE17BC", Offset = "0xEE17BC")]
public class GetElementsInListOrderly<T> : ActionTask
{
	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xEE7758", Offset = "0xEE7758")]
	public BBParameter<List<T>> sourceList;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<List<T>> saveAs;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<int> getCount;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isRandom;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isOrderly;

	[Token(Token = "0x17000101")]
	protected override string info
	{
		[Token(Token = "0x6000C4F")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C50")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000C51")]
	protected void GetRangeElements(int getCount, List<T> sourceList)
	{
	}

	[Token(Token = "0x6000C52")]
	protected void GetRangeElementsOrder(int getCount, List<T> sourceList)
	{
	}

	[Token(Token = "0x6000C53")]
	public GetElementsInListOrderly()
	{
	}
}
[Token(Token = "0x20001B8")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1820", Offset = "0xEE1820")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1820", Offset = "0xEE1820")]
public class GetOddNumberElementsInList<T> : ActionTask
{
	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xEE7768", Offset = "0xEE7768")]
	public BBParameter<List<T>> sourceList;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<List<T>> saveAs;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public BBParameter<bool> isOdd;

	[Token(Token = "0x17000102")]
	protected override string info
	{
		[Token(Token = "0x6000C54")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C55")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000C56")]
	public GetOddNumberElementsInList()
	{
	}
}
[Token(Token = "0x20001B9")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1884", Offset = "0xEE1884")]
public class SetBossAgentAngleSpeed : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xEE7778", Offset = "0xEE7778")]
	public BBParameter<float> angleSpeed;

	[Token(Token = "0x17000103")]
	protected override string info
	{
		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x1261E80", Offset = "0x1261E80", VA = "0x1261E80", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x1261ED4", Offset = "0x1261ED4", VA = "0x1261ED4", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x1261F68", Offset = "0x1261F68", VA = "0x1261F68")]
	public SetBossAgentAngleSpeed()
	{
	}
}
[Token(Token = "0x20001BA")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE18BC", Offset = "0xEE18BC")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE18BC", Offset = "0xEE18BC")]
public class SetBossStrafeMoveParame : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool move;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Animator animator;

	[Token(Token = "0x17000104")]
	protected override string info
	{
		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x1262990", Offset = "0x1262990", VA = "0x1262990", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x12629F4", Offset = "0x12629F4", VA = "0x12629F4", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x1262A84", Offset = "0x1262A84", VA = "0x1262A84")]
	private void SetStrafeMoveParame()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x1262B4C", Offset = "0x1262B4C", VA = "0x1262B4C")]
	public SetBossStrafeMoveParame()
	{
	}
}
[Token(Token = "0x20001BB")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1920", Offset = "0xEE1920")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1920", Offset = "0xEE1920")]
public class SetBossStrafeMoveAction : ActionTask<NavMeshAgent>
{
	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Vector3> targetPosition;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> speed;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float keepDistance;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Animator animator;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 worldDir;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 inertialDir;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3[] pathCorners;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int index;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 stageTarget;

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x1261FB8", Offset = "0x1261FB8", VA = "0x1261FB8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x12623B8", Offset = "0x12623B8", VA = "0x12623B8")]
	private void SetMove()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x12626F0", Offset = "0x12626F0", VA = "0x12626F0", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x126246C", Offset = "0x126246C", VA = "0x126246C")]
	private void SetMoveParam(Vector3 targetPos)
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x1262934", Offset = "0x1262934", VA = "0x1262934")]
	public SetBossStrafeMoveAction()
	{
	}
}
[Token(Token = "0x20001BC")]
public class BossAddFirePoint : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000598")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4D70", Offset = "0xEE4D70")]
	private sealed class <>c
	{
		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GameObject, bool> <>9__2_0;

		[Token(Token = "0x6002C0E")]
		[Address(RVA = "0x13CF84C", Offset = "0x13CF84C", VA = "0x13CF84C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C0F")]
		[Address(RVA = "0x13CF854", Offset = "0x13CF854", VA = "0x13CF854")]
		internal bool <Awake>b__2_0(GameObject property)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject relationalUnit;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Collider> beImpactedUInit;

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x13CF4D8", Offset = "0x13CF4D8", VA = "0x13CF4D8")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x13CF634", Offset = "0x13CF634", VA = "0x13CF634")]
	public BossAddFirePoint()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x13CF63C", Offset = "0x13CF63C", VA = "0x13CF63C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFB6C", Offset = "0xEEFB6C")]
	private void <Awake>b__2_1(bool b)
	{
	}
}
[Token(Token = "0x20001BD")]
public class BossDie : DeathAnimation
{
	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BossMono bossMono;

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x13D3770", Offset = "0x13D3770", VA = "0x13D3770", Slot = "5")]
	public override void TriggerDeathDefine(Action endAction)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x13D3950", Offset = "0x13D3950", VA = "0x13D3950")]
	public BossDie()
	{
	}
}
[Token(Token = "0x20001BE")]
public enum BossDone
{
	[Token(Token = "0x4000B23")]
	Default,
	[Token(Token = "0x4000B24")]
	Born,
	[Token(Token = "0x4000B25")]
	Summon,
	[Token(Token = "0x4000B26")]
	Strafe,
	[Token(Token = "0x4000B27")]
	Bomb
}
[Token(Token = "0x20001BF")]
public enum BossToDo
{
	[Token(Token = "0x4000B29")]
	Born,
	[Token(Token = "0x4000B2A")]
	Summon,
	[Token(Token = "0x4000B2B")]
	Strafe,
	[Token(Token = "0x4000B2C")]
	Bomb
}
[Token(Token = "0x20001C0")]
public enum BossState
{
	[Token(Token = "0x4000B2E")]
	Stage1,
	[Token(Token = "0x4000B2F")]
	Stage2
}
[Token(Token = "0x20001C1")]
public class BossMono : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000599")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4D80", Offset = "0xEE4D80")]
	private sealed class <>c
	{
		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__29_2;

		[Token(Token = "0x6002C11")]
		[Address(RVA = "0x13D71EC", Offset = "0x13D71EC", VA = "0x13D71EC")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C12")]
		[Address(RVA = "0x13D71F4", Offset = "0x13D71F4", VA = "0x13D71F4")]
		internal void <ClientHandleGatlinBlendRTPCNotify>b__29_2()
		{
		}
	}

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform inUnit;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float slopeRotThreshold;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float baseOffset;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BossDone m_BossDone;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public BossToDo m_BossToDo;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WUnit unit;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Transform> addFirePointList;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MonsterWarning mw;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Blackboard bb;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RaycastHit hitInfo;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private NavMeshAgent agent;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 lastNormal;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 currentNormal;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int currentArea;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject body;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject leftFoot;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject rightFoot;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool startMove;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private IObservable<long> AnimatorSetBoolStream;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private WwiseDefine gatlinAudioObj;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private SwitchInfoData switchInfoData;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float gatlin_Blend_RTPC;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool toSlopeRot;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Quaternion slopeStartRot;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Quaternion slopeEndRot;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float tSlopeRotBlendTime;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float slopeRotBlendTime;

	[Token(Token = "0x17000105")]
	public int CurrentArea
	{
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x13D6020", Offset = "0x13D6020", VA = "0x13D6020")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x13D6028", Offset = "0x13D6028", VA = "0x13D6028")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x13D602C", Offset = "0x13D602C", VA = "0x13D602C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x13D4310", Offset = "0x13D4310", VA = "0x13D4310")]
	public void BTInit()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x13D6410", Offset = "0x13D6410", VA = "0x13D6410")]
	private void OnAnimatorSetBoolAction(bool state)
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x13D641C", Offset = "0x13D641C", VA = "0x13D641C")]
	private void ServerSendGatlinBlendRTPCNotify(bool shot)
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x13D64A4", Offset = "0x13D64A4", VA = "0x13D64A4")]
	public void ClientHandleGatlinBlendRTPCNotify(bool shot)
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x13D68EC", Offset = "0x13D68EC", VA = "0x13D68EC")]
	private bool CheckOnArea()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x13D3870", Offset = "0x13D3870", VA = "0x13D3870")]
	public void OnBossDieAction()
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x13D6C70", Offset = "0x13D6C70", VA = "0x13D6C70")]
	public BossMono()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x13D6C8C", Offset = "0x13D6C8C", VA = "0x13D6C8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFB7C", Offset = "0xEEFB7C")]
	private void <Init>b__17_0(Unit unit1)
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x13D6D08", Offset = "0x13D6D08", VA = "0x13D6D08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFB8C", Offset = "0xEEFB8C")]
	private bool <Init>b__17_1(Unit l)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x13D6D10", Offset = "0x13D6D10", VA = "0x13D6D10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFB9C", Offset = "0xEEFB9C")]
	private void <Init>b__17_2(Unit l)
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x13D6DDC", Offset = "0x13D6DDC", VA = "0x13D6DDC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFBAC", Offset = "0xEEFBAC")]
	private void <Init>b__17_3(Unit l)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x13D6EA8", Offset = "0x13D6EA8", VA = "0x13D6EA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFBBC", Offset = "0xEEFBBC")]
	private void <Init>b__17_4(Unit l)
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x13D6F74", Offset = "0x13D6F74", VA = "0x13D6F74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFBCC", Offset = "0xEEFBCC")]
	private bool <ClientHandleGatlinBlendRTPCNotify>b__29_0(long l)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x13D6F88", Offset = "0x13D6F88", VA = "0x13D6F88")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFBDC", Offset = "0xEEFBDC")]
	private void <ClientHandleGatlinBlendRTPCNotify>b__29_1(long l)
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x13D7030", Offset = "0x13D7030", VA = "0x13D7030")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFBEC", Offset = "0xEEFBEC")]
	private void <ClientHandleGatlinBlendRTPCNotify>b__29_3(long l)
	{
	}
}
[Token(Token = "0x20001C2")]
public class BossSettingManager : Singleton<BossSettingManager>
{
	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, object> SettingHash;

	[Token(Token = "0x4000B4C")]
	private const string MOVE_SPEED = "MOVE_SPEED";

	[Token(Token = "0x4000B4D")]
	private const string STRAFE_MOVE_SPEED = "STRAFE_MOVE_SPEED";

	[Token(Token = "0x4000B4E")]
	private const string JUMP_SPEED = "JUMP_SPEED";

	[Token(Token = "0x4000B4F")]
	private const string ANGULAR_SPEED = "ANGULAR_SPEED";

	[Token(Token = "0x4000B50")]
	private const string INTERRUPTDATA_HP_ONE = "INTERRUPTDATA_HP_ONE";

	[Token(Token = "0x4000B51")]
	private const string INTERRUPTDATA_HP_TWO = "INTERRUPTDATA_HP_TWO";

	[Token(Token = "0x4000B52")]
	private const string INTERRUPTDATA_HP_THREE = "INTERRUPTDATA_HP_THREE";

	[Token(Token = "0x4000B53")]
	private const string C4COUNT = "C4COUNT";

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x13D7F20", Offset = "0x13D7F20", VA = "0x13D7F20")]
	public void InitTableSetting()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x13D81FC", Offset = "0x13D81FC", VA = "0x13D81FC")]
	public object GetSettingValue(string key)
	{
		return null;
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x13D44F8", Offset = "0x13D44F8", VA = "0x13D44F8")]
	public object GetBossMoveSpeed()
	{
		return null;
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x13D4548", Offset = "0x13D4548", VA = "0x13D4548")]
	public object GetBossStrafeSpeed()
	{
		return null;
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x13D8334", Offset = "0x13D8334", VA = "0x13D8334")]
	public object GetBossJumpSpeed()
	{
		return null;
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x13D4598", Offset = "0x13D4598", VA = "0x13D4598")]
	public object GetBossAngularSpeed()
	{
		return null;
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x13D4454", Offset = "0x13D4454", VA = "0x13D4454")]
	public int GetBossC4Count(BossState state)
	{
		return default(int);
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x13D84E8", Offset = "0x13D84E8", VA = "0x13D84E8")]
	public List<int> GetBossInterruptdataHp()
	{
		return null;
	}

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x13D8384", Offset = "0x13D8384", VA = "0x13D8384")]
	private List<int> GetSettingListValue(string strValue)
	{
		return null;
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x13D85FC", Offset = "0x13D85FC", VA = "0x13D85FC")]
	public BossSettingManager()
	{
	}
}
[Token(Token = "0x20001C3")]
public enum eDoor_LockSign_Net_Status
{
	[Token(Token = "0x4000B55")]
	None = 0,
	[Token(Token = "0x4000B56")]
	DoorSignActive = 0,
	[Token(Token = "0x4000B57")]
	DoorSignInactive = 1,
	[Token(Token = "0x4000B58")]
	DoorSignProgressActive = 2,
	[Token(Token = "0x4000B59")]
	DoorSignProgressInactive = 3,
	[Token(Token = "0x4000B5A")]
	DoorLevelFxActive = 4,
	[Token(Token = "0x4000B5B")]
	DoorLevelFxInactive = 5,
	[Token(Token = "0x4000B5C")]
	PreDoorSignActive = 200,
	[Token(Token = "0x4000B5D")]
	PreDoorSignInactive = 201,
	[Token(Token = "0x4000B5E")]
	PreDoorSignProgressActive = 202,
	[Token(Token = "0x4000B5F")]
	PreDoorSignProgressInactive = 203,
	[Token(Token = "0x4000B60")]
	GuidDoorSignActive = 100,
	[Token(Token = "0x4000B61")]
	GuidDoorSignInactive = 101,
	[Token(Token = "0x4000B62")]
	GuidSignProgressActive = 102,
	[Token(Token = "0x4000B63")]
	GuidSignProgressInactive = 103,
	[Token(Token = "0x4000B64")]
	CommonTempTipActive = 250,
	[Token(Token = "0x4000B65")]
	CommonTempTipInactive = 251
}
[Token(Token = "0x20001C4")]
public class BattleRoomDoor : MonoBehaviour
{
	[Token(Token = "0x200059A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4D90", Offset = "0xEE4D90")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BattleRoomDoor <>4__this;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform fxParent;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform liftNumFxParent;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform liftNumFxParent2;

		[Token(Token = "0x6002C13")]
		[Address(RVA = "0x13C909C", Offset = "0x13C909C", VA = "0x13C909C")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x6002C14")]
		[Address(RVA = "0x13CA9C4", Offset = "0x13CA9C4", VA = "0x13CA9C4")]
		internal void <Init>b__0(Transform trn)
		{
		}
	}

	[Token(Token = "0x200059B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4DA0", Offset = "0xEE4DA0")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BattleRoomDoor <>4__this;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6002C15")]
		[Address(RVA = "0x13C96F8", Offset = "0x13C96F8", VA = "0x13C96F8")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6002C16")]
		[Address(RVA = "0x13CAAF4", Offset = "0x13CAAF4", VA = "0x13CAAF4")]
		internal void <SetChildModelDelayActive>b__0()
		{
		}
	}

	[Token(Token = "0x200059C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4DB0", Offset = "0xEE4DB0")]
	private sealed class <WaitToDoorAniPlay>d__37 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delayTime;

		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BattleRoomDoor <>4__this;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool open;

		[Token(Token = "0x17000459")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002C1A")]
			[Address(RVA = "0x13CABE8", Offset = "0x13CABE8", VA = "0x13CABE8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700045A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002C1C")]
			[Address(RVA = "0x13CAC50", Offset = "0x13CAC50", VA = "0x13CAC50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002C17")]
		[Address(RVA = "0x13C9AC4", Offset = "0x13C9AC4", VA = "0x13C9AC4")]
		[DebuggerHidden]
		public <WaitToDoorAniPlay>d__37(int <>1__state)
		{
		}

		[Token(Token = "0x6002C18")]
		[Address(RVA = "0x13CAB24", Offset = "0x13CAB24", VA = "0x13CAB24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002C19")]
		[Address(RVA = "0x13CAB28", Offset = "0x13CAB28", VA = "0x13CAB28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C1B")]
		[Address(RVA = "0x13CABF0", Offset = "0x13CABF0", VA = "0x13CABF0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int doorId;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject openDoorSignPrefab;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject openDoorFxPrefab;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject liftNumFxPrefab;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject timerPrefab;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 timerPos;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 timerRot;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject doorModel;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject doorChildModel;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Animation doorAni;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<string> aniClipNameList;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool open;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private IEnumerator IEDoorPlay;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine timeDelayActive;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject openDoorSign;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private BattleRoomDoorLockSign doorLockSign;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject openDoorFx;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform doorSignParent;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject timerDoor;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject liftLevelFxObj;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private BattleRoomDoorLiftLevel liftLevelFx;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject liftLevelFxObj2;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private BattleRoomDoorLiftLevel liftLevelFx2;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioEvent OpenDoorAudio;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public AudioEvent CloseDoorAudio;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private WwiseDefine OpenDoorObj;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private WwiseDefine CloseDoorObj;

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x13C8078", Offset = "0x13C8078", VA = "0x13C8078")]
	public void Init(int id, GameObject doorModel)
	{
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x13C91DC", Offset = "0x13C91DC", VA = "0x13C91DC")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x13C93D4", Offset = "0x13C93D4", VA = "0x13C93D4")]
	public void LoadDoor()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x13C9218", Offset = "0x13C9218", VA = "0x13C9218")]
	public void CancelDoor()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x13C9410", Offset = "0x13C9410", VA = "0x13C9410")]
	public void SetModelActive(bool isActive)
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x13C9514", Offset = "0x13C9514", VA = "0x13C9514")]
	public void SetChildModelActive(bool isActive)
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x13C95D4", Offset = "0x13C95D4", VA = "0x13C95D4")]
	public void SetChildModelDelayActive(bool isActive, float time = 0.5f)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x13C954C", Offset = "0x13C954C", VA = "0x13C954C")]
	private void StopDelayActive()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x13C9274", Offset = "0x13C9274", VA = "0x13C9274")]
	public void DoorAniPlay(bool open)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x13C99E4", Offset = "0x13C99E4", VA = "0x13C99E4")]
	public void DoorAniDelayPlay(bool open, float delayAniTime)
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x13C9A24", Offset = "0x13C9A24", VA = "0x13C9A24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEEFBFC", Offset = "0xEEFBFC")]
	private IEnumerator WaitToDoorAniPlay(bool open, float delayTime)
	{
		return null;
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x13C97F0", Offset = "0x13C97F0", VA = "0x13C97F0")]
	private void SetSound(bool Open, bool isSet)
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x13C94E0", Offset = "0x13C94E0", VA = "0x13C94E0")]
	private void StopSound()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x13C9700", Offset = "0x13C9700", VA = "0x13C9700")]
	private void DoorAniPlay(string aniName)
	{
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x13C9AF0", Offset = "0x13C9AF0", VA = "0x13C9AF0")]
	public void OnTeleportToPreparedRoom()
	{
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x13C9B3C", Offset = "0x13C9B3C", VA = "0x13C9B3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x13C9CCC", Offset = "0x13C9CCC", VA = "0x13C9CCC")]
	public bool CheckDoorOpenReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x13C9CD4", Offset = "0x13C9CD4", VA = "0x13C9CD4")]
	public void SetJustVisible(bool isActive)
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x13C9DAC", Offset = "0x13C9DAC", VA = "0x13C9DAC")]
	public bool CheckDoorLockSignReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x13C9430", Offset = "0x13C9430", VA = "0x13C9430")]
	public void SetDoorLockSignActive(bool isActive)
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x13C9ED8", Offset = "0x13C9ED8", VA = "0x13C9ED8")]
	public void SetDoorLockSignProgress(bool active)
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x13CA090", Offset = "0x13CA090", VA = "0x13CA090", Slot = "4")]
	public virtual bool CheckSignCon()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x13CA148", Offset = "0x13CA148", VA = "0x13CA148", Slot = "5")]
	public virtual void DoBeginSignCallBack(int roomId)
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x13CA274", Offset = "0x13CA274", VA = "0x13CA274", Slot = "6")]
	public virtual void DoBreakSignCallBack(int roomId)
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x13C9B60", Offset = "0x13C9B60", VA = "0x13C9B60")]
	private void DoUpdateLockSign()
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x13CA1DC", Offset = "0x13CA1DC", VA = "0x13CA1DC")]
	public int GetFirstSignTriggerOwnerId()
	{
		return default(int);
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x13C90A4", Offset = "0x13C90A4", VA = "0x13C90A4")]
	private void UpdateFollowSwitch()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x13CA4F4", Offset = "0x13CA4F4", VA = "0x13CA4F4")]
	public void SetLiftLevelActive(bool isActive, bool isJustLogic = false)
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x13CA790", Offset = "0x13CA790", VA = "0x13CA790")]
	public bool HasLiftLevelFx()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x13CA800", Offset = "0x13CA800", VA = "0x13CA800")]
	public bool CheckLiftLevelReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x13CA8C8", Offset = "0x13CA8C8", VA = "0x13CA8C8")]
	public BattleRoomDoor()
	{
	}
}
[Token(Token = "0x20001C5")]
public class BattleRoomDoorLiftLevel : MonoBehaviour
{
	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int roomId;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject LiftFx;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator LiftFxAni;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BattleRoomDoorLiftLevelEvent LiftLvelFxEndEvent;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioEvent runningAudioEvent;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AudioEvent reachAudioEvent;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float ProgressTime;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool mLiftLevelFx;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool mLiftLevelFxFinish;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WwiseDefine audioRunningObj;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WwiseDefine audioReachObj;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action FinishCallBack;

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x13CAC58", Offset = "0x13CAC58", VA = "0x13CAC58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x13CAD20", Offset = "0x13CAD20", VA = "0x13CAD20")]
	public void Init(int id)
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x13CA65C", Offset = "0x13CA65C", VA = "0x13CA65C")]
	public void SetShow(bool isActive, [Optional] Action finish)
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x13CA64C", Offset = "0x13CA64C", VA = "0x13CA64C")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x13CAD34", Offset = "0x13CAD34", VA = "0x13CAD34")]
	private void SetLiftLevelFx(bool isActive, [Optional] Action finish)
	{
	}

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x13CA8A8", Offset = "0x13CA8A8", VA = "0x13CA8A8")]
	public bool IsLiftLevelFxOk()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x13CAE50", Offset = "0x13CAE50", VA = "0x13CAE50")]
	private void LiftLevelFxActionEnd()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x13CAD78", Offset = "0x13CAD78", VA = "0x13CAD78")]
	private void StopRunningSound()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x13CAF34", Offset = "0x13CAF34", VA = "0x13CAF34")]
	private void StopReachSound()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x13CB00C", Offset = "0x13CB00C", VA = "0x13CB00C")]
	public BattleRoomDoorLiftLevel()
	{
	}
}
[Token(Token = "0x20001C6")]
public class BattleRoomDoorLiftLevelEvent : MonoBehaviour
{
	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action EndEventCallBack;

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x13CB024", Offset = "0x13CB024", VA = "0x13CB024")]
	private void EndEvent()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x13CB038", Offset = "0x13CB038", VA = "0x13CB038")]
	public BattleRoomDoorLiftLevelEvent()
	{
	}
}
[Token(Token = "0x20001C7")]
public class BattleRoomDoorLockSign : MonoBehaviour
{
	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int roomId;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ProgressUIRoot;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image ProgressImg;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform DirRoot;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioEvent ProgressActiveAudio;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float ProgressTime;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool mIsProgressing;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float mProgressRunningTime;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool mIsProgressFinish;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> entryList;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action FinishCallBack;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<int> BeginSignCallBack;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<int> BreakSignCallBack;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Func<bool> OnCheckSignCon;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WwiseDefine AudioProgressObj;

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x13C91D4", Offset = "0x13C91D4", VA = "0x13C91D4")]
	public void Init(int id)
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x13C9D78", Offset = "0x13C9D78", VA = "0x13C9D78")]
	public void SetShow(bool isActive)
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x13C9E74", Offset = "0x13C9E74", VA = "0x13C9E74")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x13CB040", Offset = "0x13CB040", VA = "0x13CB040")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x13C9FC4", Offset = "0x13C9FC4", VA = "0x13C9FC4")]
	public void SetProgressUI(bool isActive, [Optional] Action finish)
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x13CB050", Offset = "0x13CB050", VA = "0x13CB050")]
	private void UpdateProgress()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x13CA2EC", Offset = "0x13CA2EC", VA = "0x13CA2EC")]
	public void SetLook(Transform point)
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x13C9E54", Offset = "0x13C9E54", VA = "0x13C9E54")]
	public bool IsDoorLockSignOk()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x13CB33C", Offset = "0x13CB33C", VA = "0x13CB33C")]
	private void DoorLockSignActionEnd()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x13CB360", Offset = "0x13CB360", VA = "0x13CB360")]
	private void BeginDoorLockSign()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x13CB3D4", Offset = "0x13CB3D4", VA = "0x13CB3D4")]
	private void BreakDoorLockSign()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x13CB12C", Offset = "0x13CB12C", VA = "0x13CB12C")]
	private void PlaySound()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x13CB264", Offset = "0x13CB264", VA = "0x13CB264")]
	private void StopSound()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x13CB448", Offset = "0x13CB448", VA = "0x13CB448")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x13CB6A8", Offset = "0x13CB6A8", VA = "0x13CB6A8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x13CB75C", Offset = "0x13CB75C", VA = "0x13CB75C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x13CB4FC", Offset = "0x13CB4FC", VA = "0x13CB4FC")]
	private void TriggerIn(GameObject col)
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x13CB90C", Offset = "0x13CB90C", VA = "0x13CB90C")]
	private bool CheckTeleporter()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x13CB810", Offset = "0x13CB810", VA = "0x13CB810")]
	private void TriggerOut(GameObject col)
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x13CA3D8", Offset = "0x13CA3D8", VA = "0x13CA3D8")]
	public WUnit GetFirstSignTriggerOwner()
	{
		return null;
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x13CB964", Offset = "0x13CB964", VA = "0x13CB964")]
	public BattleRoomDoorLockSign()
	{
	}
}
[Token(Token = "0x20001C8")]
public class BirthTeleporter : MonoBehaviour
{
	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int roomId;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool IsStartNoDisplay;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject DisplayRoot;

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x13CDEA8", Offset = "0x13CDEA8", VA = "0x13CDEA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x13CDF5C", Offset = "0x13CDF5C", VA = "0x13CDF5C")]
	public BirthTeleporter()
	{
	}
}
[Token(Token = "0x20001C9")]
public enum RoleStandOnType
{
	[Token(Token = "0x4000BA1")]
	None,
	[Token(Token = "0x4000BA2")]
	BattleRoom,
	[Token(Token = "0x4000BA3")]
	PreparedRoom
}
[Token(Token = "0x20001CA")]
public class CharacterMono : MonoBehaviour
{
	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool areaLimited;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int lastRoomId;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int currentRoomId;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WUnit owner;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool canTeleport;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action OnRollBack;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action OnTeleporter;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject TeleporterEffect;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioEvent TeleporterEvent;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private RoleStandOnType curStandOnType;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform transfer;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 cameraRigOriginalPos;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private RaycastHit hitInfo;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ReactiveProperty<Collider> hitCol;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private RaycastHit[] raycastHits;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private GameObject TeleporterEffectObj;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int cameraLayer;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Coroutine coroutine;

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x12BE1A0", Offset = "0x12BE1A0", VA = "0x12BE1A0")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x12BE1A4", Offset = "0x12BE1A4", VA = "0x12BE1A4")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x12BE1B0", Offset = "0x12BE1B0", VA = "0x12BE1B0")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x12BE3E0", Offset = "0x12BE3E0", VA = "0x12BE3E0")]
	public void SetCameraRigOriginal()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x12BE478", Offset = "0x12BE478", VA = "0x12BE478")]
	private void SafeArea()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x12BE47C", Offset = "0x12BE47C", VA = "0x12BE47C")]
	private bool CheckOnArea()
	{
		return default(bool);
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x12BE64C", Offset = "0x12BE64C", VA = "0x12BE64C")]
	private void ResetLeaveAreaEffect()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x12BE7B4", Offset = "0x12BE7B4", VA = "0x12BE7B4")]
	public void NetTeleport(bool inversion)
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x12BE88C", Offset = "0x12BE88C", VA = "0x12BE88C")]
	private void CloseTeleporterEffect()
	{
	}

	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x12BE9DC", Offset = "0x12BE9DC", VA = "0x12BE9DC")]
	private void DoRollBack()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x12BF4D8", Offset = "0x12BF4D8", VA = "0x12BF4D8")]
	private void OnRollBackEnd()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x12BEDD0", Offset = "0x12BEDD0", VA = "0x12BEDD0")]
	public void DoTeleporter()
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x12BF228", Offset = "0x12BF228", VA = "0x12BF228")]
	public void SetTransferPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x12BF670", Offset = "0x12BF670", VA = "0x12BF670")]
	public Vector3 GetTransferPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x12BF4A0", Offset = "0x12BF4A0", VA = "0x12BF4A0")]
	public static Vector3 TransformPosition(Vector3 inputPos, Transform inverseTra, Transform tra)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x12BF68C", Offset = "0x12BF68C", VA = "0x12BF68C")]
	public CharacterMono()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x12BF738", Offset = "0x12BF738", VA = "0x12BF738")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFC60", Offset = "0xEEFC60")]
	private void <Init>b__16_0(Unit unit1)
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x12BF770", Offset = "0x12BF770", VA = "0x12BF770")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFC70", Offset = "0xEEFC70")]
	private void <SafeArea>b__18_0(Collider collider1)
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x12BFDC4", Offset = "0x12BFDC4", VA = "0x12BFDC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFC80", Offset = "0xEEFC80")]
	private void <NetTeleport>b__22_0()
	{
	}
}
[Token(Token = "0x20001CB")]
public class CheckInRoom : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200059D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4DC0", Offset = "0xEE4DC0")]
	private sealed class <>c
	{
		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Unit, bool> <>9__5_4;

		[Token(Token = "0x6002C1E")]
		[Address(RVA = "0x12C165C", Offset = "0x12C165C", VA = "0x12C165C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C1F")]
		[Address(RVA = "0x12C1664", Offset = "0x12C1664", VA = "0x12C1664")]
		internal bool <OnPreEnter>b__5_4(Unit unit)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int roomId;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<CharacterMono> recordCharacterList;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool passed;

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x12C0B20", Offset = "0x12C0B20", VA = "0x12C0B20")]
	public void Init(int _roomId, FSMBattleRoom room)
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x12C0BF4", Offset = "0x12C0BF4", VA = "0x12C0BF4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x12C0C50", Offset = "0x12C0C50", VA = "0x12C0C50")]
	private void OnPreEnter()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x12C0F74", Offset = "0x12C0F74", VA = "0x12C0F74")]
	private void ServerCheckPlayerTrigger(Collider collider)
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x12C11FC", Offset = "0x12C11FC", VA = "0x12C11FC")]
	private CharacterMono GetCharMono(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x12C1354", Offset = "0x12C1354", VA = "0x12C1354")]
	public CheckInRoom()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x12C13D0", Offset = "0x12C13D0", VA = "0x12C13D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFC90", Offset = "0xEEFC90")]
	private bool <OnPreEnter>b__5_0(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x12C1488", Offset = "0x12C1488", VA = "0x12C1488")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFCA0", Offset = "0xEEFCA0")]
	private void <OnPreEnter>b__5_1(Collider collider1)
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x12C148C", Offset = "0x12C148C", VA = "0x12C148C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFCB0", Offset = "0xEEFCB0")]
	private bool <OnPreEnter>b__5_2(Unit _)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x12C149C", Offset = "0x12C149C", VA = "0x12C149C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFCC0", Offset = "0xEEFCC0")]
	private bool <OnPreEnter>b__5_3(Unit _)
	{
		return default(bool);
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x12C1570", Offset = "0x12C1570", VA = "0x12C1570")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFCD0", Offset = "0xEEFCD0")]
	private void <OnPreEnter>b__5_5(Unit l)
	{
	}
}
[Token(Token = "0x20001CC")]
public class DoorSignTrigger : MonoBehaviour
{
	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WUnit mOwner;

	[Token(Token = "0x17000106")]
	public WUnit Owner
	{
		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x122C0FC", Offset = "0x122C0FC", VA = "0x122C0FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x122C104", Offset = "0x122C104", VA = "0x122C104")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x122C230", Offset = "0x122C230", VA = "0x122C230")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x122C238", Offset = "0x122C238", VA = "0x122C238")]
	public void UnInit()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x122C23C", Offset = "0x122C23C", VA = "0x122C23C")]
	public DoorSignTrigger()
	{
	}
}
[Token(Token = "0x20001CD")]
public enum RoleRoomStatus
{
	[Token(Token = "0x4000BBB")]
	Prepare,
	[Token(Token = "0x4000BBC")]
	Enter,
	[Token(Token = "0x4000BBD")]
	Clean,
	[Token(Token = "0x4000BBE")]
	Pass,
	[Token(Token = "0x4000BBF")]
	Exit
}
[Token(Token = "0x20001CE")]
public enum RoomStatus
{
	[Token(Token = "0x4000BC1")]
	Active,
	[Token(Token = "0x4000BC2")]
	Deactivate
}
[Token(Token = "0x20001CF")]
public class BattleRoomConstantAtt
{
	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int RoomID;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject RoomModel;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BattleRoomDoor FrontDoor;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BattleRoomDoor BackDoor;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Teleporter RoomTeleporter;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BirthTeleporter RoomBirthTeleporter;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CheckInRoom CheckInRoom;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject Floor;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 OriginalFloorPos;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public PathManager FrameAreaHolder;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public FSMBattleRoomAction RoomAction;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform MoveArea;

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x13C7C94", Offset = "0x13C7C94", VA = "0x13C7C94")]
	public void Init(int id, FSMBattleRoom room, GameObject model, Transform parent, BattleRoomDoor fd, BattleRoomDoor bd)
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x13C8064", Offset = "0x13C8064", VA = "0x13C8064")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x13C8068", Offset = "0x13C8068", VA = "0x13C8068")]
	public BattleRoomConstantAtt()
	{
	}
}
[Token(Token = "0x20001D0")]
public class FSMBattleRoom : MonoBehaviour
{
	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DelayPass;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool hasSameDoor;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delayTime;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected BattleRoomConstantAtt constantAtt;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected LiftBattleRoomMontion liftMontion;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Transform> limitedAreaPointList;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool doorLockSignStatus;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool doorLiftLevelFxStatus;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private RoleRoomStatus roleRoomStatus;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RoomStatus roomStatus;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine delayCoroutine;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Action OnPreEnter;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action OnLoad;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action OnKillCurrentEnemys;

	[Token(Token = "0x17000107")]
	public int RoomID
	{
		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x12362F0", Offset = "0x12362F0", VA = "0x12362F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000108")]
	public BattleRoomDoor FrontDoor
	{
		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x123630C", Offset = "0x123630C", VA = "0x123630C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000109")]
	public BattleRoomDoor BackDoor
	{
		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x1236328", Offset = "0x1236328", VA = "0x1236328")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010A")]
	public Teleporter Teleporter
	{
		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x1236344", Offset = "0x1236344", VA = "0x1236344")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010B")]
	public Transform MoveArea
	{
		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x1236360", Offset = "0x1236360", VA = "0x1236360")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010C")]
	public BirthTeleporter BirthTeleporter
	{
		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x123637C", Offset = "0x123637C", VA = "0x123637C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010D")]
	public BattleRoomConstantAtt ConstantAtt
	{
		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x1236398", Offset = "0x1236398", VA = "0x1236398")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700010E")]
	public RoleRoomStatus RoleRoomStatus
	{
		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x12363A0", Offset = "0x12363A0", VA = "0x12363A0")]
		get
		{
			return default(RoleRoomStatus);
		}
		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x12363A8", Offset = "0x12363A8", VA = "0x12363A8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public RoomStatus RoomStatus
	{
		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x12363B0", Offset = "0x12363B0", VA = "0x12363B0")]
		get
		{
			return default(RoomStatus);
		}
		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x12363B8", Offset = "0x12363B8", VA = "0x12363B8")]
		private set
		{
		}
	}

	[Token(Token = "0x1400001F")]
	public event Action<Action> OnKillCurrentEnemysPreAction
	{
		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x12363C0", Offset = "0x12363C0", VA = "0x12363C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFCE0", Offset = "0xEEFCE0")]
		add
		{
		}
		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x1236464", Offset = "0x1236464", VA = "0x1236464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFCF0", Offset = "0xEEFCF0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x1236508", Offset = "0x1236508", VA = "0x1236508", Slot = "4")]
	public virtual void DoInit(int roomId, GameObject roomModel, BattleRoomDoor fd, BattleRoomDoor bd, int lastRoomId = -1, int nextRoomId = -1)
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x1236668", Offset = "0x1236668", VA = "0x1236668", Slot = "5")]
	public virtual void DoReset()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x1236780", Offset = "0x1236780", VA = "0x1236780", Slot = "6")]
	public virtual void DoUpdate()
	{
	}

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x1236A70", Offset = "0x1236A70", VA = "0x1236A70")]
	public void PrepareRoom()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x1236BA4", Offset = "0x1236BA4", VA = "0x1236BA4")]
	public void EnterRoom([Optional] Action callBack)
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x1236C58", Offset = "0x1236C58", VA = "0x1236C58")]
	public void CleanRoom()
	{
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x1236D38", Offset = "0x1236D38", VA = "0x1236D38")]
	public void PassRoom()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x1236E1C", Offset = "0x1236E1C", VA = "0x1236E1C")]
	public void ExitRoom()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x1236B0C", Offset = "0x1236B0C", VA = "0x1236B0C")]
	private void ActiveRoom()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x1236EC0", Offset = "0x1236EC0", VA = "0x1236EC0")]
	private void DeactivateRoom()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x1236B38", Offset = "0x1236B38", VA = "0x1236B38")]
	private void SetActiveCheckInRoom(bool isActive)
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x1236B7C", Offset = "0x1236B7C", VA = "0x1236B7C")]
	private void ResetCheckInRoom()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x1236F54", Offset = "0x1236F54", VA = "0x1236F54")]
	public void SetPreparedRoomTeleporter()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x12373BC", Offset = "0x12373BC", VA = "0x12373BC")]
	private bool GetLimitedAreaPoints()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x1236634", Offset = "0x1236634", VA = "0x1236634")]
	private void ShowSelf(bool state)
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x1236824", Offset = "0x1236824", VA = "0x1236824")]
	private bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x1237528", Offset = "0x1237528", VA = "0x1237528")]
	public void HideRoom()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x12375E8", Offset = "0x12375E8", VA = "0x12375E8")]
	private void ShowRoom()
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x1237734", Offset = "0x1237734", VA = "0x1237734")]
	public bool CheckRoomReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x12377AC", Offset = "0x12377AC", VA = "0x12377AC")]
	public void SetJustVisible(BattleRoomDoor door, bool isActive)
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x1237850", Offset = "0x1237850", VA = "0x1237850", Slot = "7")]
	public virtual void PreRoomOpen()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x1237854", Offset = "0x1237854", VA = "0x1237854")]
	public void SetDoorLockSignActive(BattleRoomDoor door, bool active)
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x1237908", Offset = "0x1237908", VA = "0x1237908")]
	public void SetDoorLockSignProgressActive(BattleRoomDoor door, bool active)
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x1237780", Offset = "0x1237780", VA = "0x1237780")]
	public bool CheckTeleporterReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x1236724", Offset = "0x1236724", VA = "0x1236724")]
	private void ResetCheckDoorLockSign()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x12379AC", Offset = "0x12379AC", VA = "0x12379AC")]
	private void SetDoorLockSignInctive()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x1236848", Offset = "0x1236848", VA = "0x1236848")]
	private void UpdateCheckDoorLockSign()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x1237A1C", Offset = "0x1237A1C", VA = "0x1237A1C")]
	public void SyncDoorLockSignStatus(bool isActive)
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x1237A40", Offset = "0x1237A40", VA = "0x1237A40")]
	public void SetLevelFxActive(BattleRoomDoor door, bool active, bool isJustLogic = false)
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x123672C", Offset = "0x123672C", VA = "0x123672C")]
	private void ResetCheckLevelFx(bool isFrontLogic = false)
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x1237AEC", Offset = "0x1237AEC", VA = "0x1237AEC")]
	public bool CheckGotoLevelFxReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x12368F8", Offset = "0x12368F8", VA = "0x12368F8")]
	private void UpdateCheckDoorLevelFx()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x1237AF0", Offset = "0x1237AF0", VA = "0x1237AF0")]
	public void SyncDoorLevelFxStatus(bool isActive)
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x1237B18", Offset = "0x1237B18", VA = "0x1237B18", Slot = "8")]
	public virtual void DoPrepareEnter()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x1237B2C", Offset = "0x1237B2C", VA = "0x1237B2C", Slot = "9")]
	public virtual void DoPassAndPrepareLeave()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x1237C6C", Offset = "0x1237C6C", VA = "0x1237C6C", Slot = "10")]
	public virtual void DoSuccessKillCurrentEnemys()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x1237D14", Offset = "0x1237D14", VA = "0x1237D14", Slot = "11")]
	public virtual void SuccessKillCurrentEnemysCallBack()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x1237DB8", Offset = "0x1237DB8", VA = "0x1237DB8", Slot = "12")]
	public virtual void DoLoad()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x1237DBC", Offset = "0x1237DBC", VA = "0x1237DBC")]
	public void SetTeleporter()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x1237DC0", Offset = "0x1237DC0", VA = "0x1237DC0", Slot = "13")]
	public virtual void DoUnLoad()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x1237DC4", Offset = "0x1237DC4", VA = "0x1237DC4", Slot = "14")]
	public virtual void SetDoorLockSignProgressStatus(bool isActive)
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x1237E7C", Offset = "0x1237E7C", VA = "0x1237E7C", Slot = "15")]
	public virtual void DoPlayerTeleportBack()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x1237FE0", Offset = "0x1237FE0", VA = "0x1237FE0")]
	public void OnLeaveSafeArea()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x12382A4", Offset = "0x12382A4", VA = "0x12382A4")]
	public void OnReturnSafeArea()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x1238540", Offset = "0x1238540", VA = "0x1238540")]
	public FSMBattleRoom()
	{
	}
}
[Token(Token = "0x20001D1")]
public class FSMBattleRoomAction : MonoBehaviour
{
	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation ani;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int openDoorRoomId;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int closeDoorRoomId;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> aniClipNameList;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsBossDoor;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float BossDoorDelayTime;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool IsMoveLiftDoor;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int MoveLiftCloseDoorSpecialRoomId;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine TimeDelayClose;

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x12385FC", Offset = "0x12385FC", VA = "0x12385FC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x1237FA8", Offset = "0x1237FA8", VA = "0x1237FA8")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x1238BC0", Offset = "0x1238BC0", VA = "0x1238BC0")]
	private void CloseDoor(int RoomId)
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x1238BD8", Offset = "0x1238BD8", VA = "0x1238BD8")]
	private void MoveLiftSpecialCloseDoor(int RoomId)
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x1238BF0", Offset = "0x1238BF0", VA = "0x1238BF0")]
	private void OpenBossDoor(int RoomId)
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x1238CCC", Offset = "0x1238CCC", VA = "0x1238CCC")]
	private void OpenDoor(int RoomId)
	{
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x1238A98", Offset = "0x1238A98", VA = "0x1238A98")]
	public void DoorAniPlay(bool open)
	{
	}

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x1238CE4", Offset = "0x1238CE4", VA = "0x1238CE4")]
	private void DoorAniPlay(string aniName)
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x1238DD4", Offset = "0x1238DD4", VA = "0x1238DD4")]
	public FSMBattleRoomAction()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x1238E58", Offset = "0x1238E58", VA = "0x1238E58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFD00", Offset = "0xEEFD00")]
	private void <OpenBossDoor>b__13_0()
	{
	}
}
[Token(Token = "0x20001D2")]
public class SlidingBlock
{
	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7798", Offset = "0xEE7798")]
	private FSMBattleRoom <BackRoom>k__BackingField;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE77A8", Offset = "0xEE77A8")]
	private FSMBattleRoom <FrontRoom>k__BackingField;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE77B8", Offset = "0xEE77B8")]
	private FSMBattleRoom <NextRoom>k__BackingField;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE77C8", Offset = "0xEE77C8")]
	private RoleRoomStatus <BackRoomStatus>k__BackingField;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE77D8", Offset = "0xEE77D8")]
	private RoleRoomStatus <FrontRoomStatus>k__BackingField;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE77E8", Offset = "0xEE77E8")]
	private RoleRoomStatus <NextRoomStatus>k__BackingField;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE77F8", Offset = "0xEE77F8")]
	private int <BackRoomID>k__BackingField;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7808", Offset = "0xEE7808")]
	private int <FrontRoomID>k__BackingField;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7818", Offset = "0xEE7818")]
	private int <NextRoomID>k__BackingField;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FSMBattleRoomSystem RoomSystem;

	[Token(Token = "0x17000110")]
	public FSMBattleRoom BackRoom
	{
		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x1269488", Offset = "0x1269488", VA = "0x1269488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFD10", Offset = "0xEEFD10")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x1269490", Offset = "0x1269490", VA = "0x1269490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFD20", Offset = "0xEEFD20")]
		private set
		{
		}
	}

	[Token(Token = "0x17000111")]
	public FSMBattleRoom FrontRoom
	{
		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x1269498", Offset = "0x1269498", VA = "0x1269498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFD30", Offset = "0xEEFD30")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x12694A0", Offset = "0x12694A0", VA = "0x12694A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFD40", Offset = "0xEEFD40")]
		private set
		{
		}
	}

	[Token(Token = "0x17000112")]
	public FSMBattleRoom NextRoom
	{
		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x12694A8", Offset = "0x12694A8", VA = "0x12694A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFD50", Offset = "0xEEFD50")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x12694B0", Offset = "0x12694B0", VA = "0x12694B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFD60", Offset = "0xEEFD60")]
		private set
		{
		}
	}

	[Token(Token = "0x17000113")]
	public RoleRoomStatus BackRoomStatus
	{
		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x12694B8", Offset = "0x12694B8", VA = "0x12694B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFD70", Offset = "0xEEFD70")]
		get
		{
			return default(RoleRoomStatus);
		}
		[Token(Token = "0x6000D37")]
		[Address(RVA = "0x12694C0", Offset = "0x12694C0", VA = "0x12694C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFD80", Offset = "0xEEFD80")]
		private set
		{
		}
	}

	[Token(Token = "0x17000114")]
	public RoleRoomStatus FrontRoomStatus
	{
		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x12694C8", Offset = "0x12694C8", VA = "0x12694C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFD90", Offset = "0xEEFD90")]
		get
		{
			return default(RoleRoomStatus);
		}
		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x12694D0", Offset = "0x12694D0", VA = "0x12694D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFDA0", Offset = "0xEEFDA0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000115")]
	public RoleRoomStatus NextRoomStatus
	{
		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x12694D8", Offset = "0x12694D8", VA = "0x12694D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFDB0", Offset = "0xEEFDB0")]
		get
		{
			return default(RoleRoomStatus);
		}
		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x12694E0", Offset = "0x12694E0", VA = "0x12694E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFDC0", Offset = "0xEEFDC0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000116")]
	public int BackRoomID
	{
		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x12694E8", Offset = "0x12694E8", VA = "0x12694E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFDD0", Offset = "0xEEFDD0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x12694F0", Offset = "0x12694F0", VA = "0x12694F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFDE0", Offset = "0xEEFDE0")]
		private set
		{
		}
	}

	[Token(Token = "0x17000117")]
	public int FrontRoomID
	{
		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x12694F8", Offset = "0x12694F8", VA = "0x12694F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFDF0", Offset = "0xEEFDF0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x1269500", Offset = "0x1269500", VA = "0x1269500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFE00", Offset = "0xEEFE00")]
		private set
		{
		}
	}

	[Token(Token = "0x17000118")]
	public int NextRoomID
	{
		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x1269508", Offset = "0x1269508", VA = "0x1269508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFE10", Offset = "0xEEFE10")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x1269510", Offset = "0x1269510", VA = "0x1269510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFE20", Offset = "0xEEFE20")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x1269518", Offset = "0x1269518", VA = "0x1269518")]
	public void Init(FSMBattleRoomSystem system)
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x1269520", Offset = "0x1269520", VA = "0x1269520")]
	public void Reset(int resetRoomId)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x126A39C", Offset = "0x126A39C", VA = "0x126A39C")]
	public void SendSlidingRoomStatus(int bRoomId, RoleRoomStatus bRoomStatus, int fRoomId, RoleRoomStatus fRoomStatus, int nRoomId, RoleRoomStatus nRoomStatus)
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x126A824", Offset = "0x126A824", VA = "0x126A824")]
	public void SetRoomEnter(int roomId)
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x126A840", Offset = "0x126A840", VA = "0x126A840")]
	public void SetRoomClean()
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x126A880", Offset = "0x126A880", VA = "0x126A880")]
	public void SetRoomPass()
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x126A898", Offset = "0x126A898", VA = "0x126A898")]
	public void GotoBattleRoom()
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x126A958", Offset = "0x126A958", VA = "0x126A958")]
	public void GotoPreparedRoom()
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x12697FC", Offset = "0x12697FC", VA = "0x12697FC")]
	public void SetBattleRoom(int bRoomId, FSMBattleRoom backRoom, RoleRoomStatus bRoomStatus, int fRoomId, FSMBattleRoom frontRoom, RoleRoomStatus fRoomStatus, int nRoomId, FSMBattleRoom nextRoom, RoleRoomStatus nRoomStatus)
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x126A984", Offset = "0x126A984", VA = "0x126A984")]
	public void SetPreparedRoom()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x126A95C", Offset = "0x126A95C", VA = "0x126A95C")]
	private void SetDelayLockStatus(RoleRoomStatus status)
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x126A9AC", Offset = "0x126A9AC", VA = "0x126A9AC")]
	public SlidingBlock()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x126A9B4", Offset = "0x126A9B4", VA = "0x126A9B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFE30", Offset = "0xEEFE30")]
	private void <SetBattleRoom>b__45_0()
	{
	}
}
[Token(Token = "0x20001D3")]
public class FSMBattleRoomSystem : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200059E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4DD0", Offset = "0xEE4DD0")]
	private sealed class <>c
	{
		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<WUnit> <>9__38_0;

		[Token(Token = "0x6002C21")]
		[Address(RVA = "0x123D2E4", Offset = "0x123D2E4", VA = "0x123D2E4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C22")]
		[Address(RVA = "0x123D2EC", Offset = "0x123D2EC", VA = "0x123D2EC")]
		internal void <DoStart>b__38_0(WUnit u)
		{
		}
	}

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform roomsRoot;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform roomModelsRoot;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform doorsRoot;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform doorModelsRoot;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform battleMoveArea;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform bossBattleMoveArea;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int configStartId;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int BossRoomId;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FSMBattleRoomSystem Instance;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<FSMBattleRoom> battleRooms;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<BattleRoomDoor> battleRoomDoors;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool IsDelayLock;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public RoleRoomStatus DelayLockStatus;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CharacterMono controlMono;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private RoomType roomType;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private SlidingBlock block;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action<List<FSMBattleRoom>> OnRoomResetPre;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject TeleporterEffect;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioEvent TeleporterEvent;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject TeleporterEffectObj;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine coroutine;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Func<bool> KillCurrentEnemysCheck;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Func<bool> KillBossCheck;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Action OnAllTeleport;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Action<int> OnAllTeleportWithRoomId;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Action OnAllRollBack;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Action<int> OnKillCurrentEnemys;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Action<int> OnPassCurrentRoom;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Action<int> OnAllEnter;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Action<int> OnAllEnterNoDelay;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Action<FSMBattleRoom> OnRoomUnLoadPre;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Action OnCharRollBack;

	[Token(Token = "0x17000119")]
	public Transform MoveArea
	{
		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x1238E60", Offset = "0x1238E60", VA = "0x1238E60")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011A")]
	public int CurrentRoomID
	{
		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x1238E90", Offset = "0x1238E90", VA = "0x1238E90")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700011B")]
	public FSMBattleRoom CurrentRoom
	{
		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x1238EAC", Offset = "0x1238EAC", VA = "0x1238EAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011C")]
	public int BackRoomID
	{
		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x1238EC8", Offset = "0x1238EC8", VA = "0x1238EC8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700011D")]
	public FSMBattleRoom BackRoom
	{
		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x1238EE4", Offset = "0x1238EE4", VA = "0x1238EE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700011E")]
	public int NextRoomID
	{
		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x1238F00", Offset = "0x1238F00", VA = "0x1238F00")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700011F")]
	public FSMBattleRoom NextRoom
	{
		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x1238F1C", Offset = "0x1238F1C", VA = "0x1238F1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000120")]
	public int ProcessRoomID
	{
		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x1238F38", Offset = "0x1238F38", VA = "0x1238F38")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000121")]
	public RoomType RoomType
	{
		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x1238FEC", Offset = "0x1238FEC", VA = "0x1238FEC")]
		get
		{
			return default(RoomType);
		}
		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x1238FF4", Offset = "0x1238FF4", VA = "0x1238FF4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x1238FFC", Offset = "0x1238FFC", VA = "0x1238FFC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x1239054", Offset = "0x1239054", VA = "0x1239054")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x123982C", Offset = "0x123982C", VA = "0x123982C")]
	private bool IsGameStatusEnd()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x12398D8", Offset = "0x12398D8", VA = "0x12398D8")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x1239DC4", Offset = "0x1239DC4", VA = "0x1239DC4")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x123A050", Offset = "0x123A050", VA = "0x123A050")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x1239678", Offset = "0x1239678", VA = "0x1239678")]
	public void AddState(FSMBattleRoom room)
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x123A0F8", Offset = "0x123A0F8", VA = "0x123A0F8")]
	public void SendRoleRoom(int uid, int roomId)
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x123A174", Offset = "0x123A174", VA = "0x123A174")]
	public void SendGotoCurrentBattleRoom()
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x123A1F8", Offset = "0x123A1F8", VA = "0x123A1F8")]
	public void SendGotoPreparedRoomStatus(int uid, int backType, float dirX = 0f, float dirZ = 0f)
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x123A57C", Offset = "0x123A57C", VA = "0x123A57C")]
	public void BattleRoomEnter(int roomId)
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x123A648", Offset = "0x123A648", VA = "0x123A648")]
	public void BattleRoomClean()
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x123A6CC", Offset = "0x123A6CC", VA = "0x123A6CC")]
	public void BattleRoomPass()
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x123A750", Offset = "0x123A750", VA = "0x123A750")]
	public void BattleRoomExit()
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x123A754", Offset = "0x123A754", VA = "0x123A754")]
	public void SyncRoleRoom(int uid, int roomId)
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x123A868", Offset = "0x123A868", VA = "0x123A868")]
	public void SyncRoomStatus(RoomType roomType, int valueI_1, int valueI_2, int valueI_3, int valueI_4, int valueI_5, int valueI_6)
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x123A9CC", Offset = "0x123A9CC", VA = "0x123A9CC")]
	private void SyncBattleRoomStatus(RoomType roomType, int bRoomId, RoleRoomStatus bRoomStatus, int fRoomId, RoleRoomStatus fRoomStatus, int nRoomId, RoleRoomStatus nRoomStatus)
	{
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x123AAAC", Offset = "0x123AAAC", VA = "0x123AAAC")]
	private void SyncPreparedRoomStatus(RoomType roomType, int uid, int backType, int dirX, int dirZ)
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x123AF7C", Offset = "0x123AF7C", VA = "0x123AF7C")]
	private void RoomCharacterTypeBack(int uid, e_RoomCharacterDeath_Type type, [Optional] Vector3 dir)
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x123B318", Offset = "0x123B318", VA = "0x123B318")]
	public void OtherRoomsExit(int backId, int frontId, int nextId)
	{
	}

	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x123AC6C", Offset = "0x123AC6C", VA = "0x123AC6C")]
	public FSMBattleRoom GetRoomById(int roomId)
	{
		return null;
	}

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x1239748", Offset = "0x1239748", VA = "0x1239748")]
	public (BattleRoomDoor, BattleRoomDoor) GetDoorsOfRoom(int roomId)
	{
		return default((BattleRoomDoor, BattleRoomDoor));
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x123B5B8", Offset = "0x123B5B8", VA = "0x123B5B8")]
	private void NetTeleport(bool state)
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x123ADBC", Offset = "0x123ADBC", VA = "0x123ADBC")]
	private void GotoBattleRoom(int bRoomId, int fRoomId, int nRoomId)
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x123BBA4", Offset = "0x123BBA4", VA = "0x123BBA4")]
	public void OnPlayerTeleportEnd()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x123AE7C", Offset = "0x123AE7C", VA = "0x123AE7C")]
	private void GotoPreparedeRoomQuickly()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x123B2AC", Offset = "0x123B2AC", VA = "0x123B2AC")]
	private void GotoPreparedeRoomByDeath()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x123BCB8", Offset = "0x123BCB8", VA = "0x123BCB8")]
	public void AllRollBack()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x123BC34", Offset = "0x123BC34", VA = "0x123BC34")]
	public void NetTeleportRollBackEnd()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x123BFC8", Offset = "0x123BFC8", VA = "0x123BFC8")]
	private void DeathRollback()
	{
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x123BF04", Offset = "0x123BF04", VA = "0x123BF04")]
	public void OnPlayerTeleportBack()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x123C0E4", Offset = "0x123C0E4", VA = "0x123C0E4")]
	public void NetDelayEnterRoom(int roomID)
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x123C1B4", Offset = "0x123C1B4", VA = "0x123C1B4")]
	public void NetNoDelayEnterRoom(int roomID)
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x123C254", Offset = "0x123C254", VA = "0x123C254")]
	public void NetKillCurrentEnemys(int roomID)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x123C324", Offset = "0x123C324", VA = "0x123C324")]
	public void NetPassCurrentRoom(int roomID)
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x123C52C", Offset = "0x123C52C", VA = "0x123C52C")]
	public void NetPassGotoNextRoom(int curId, int nextId)
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x123CA5C", Offset = "0x123CA5C", VA = "0x123CA5C")]
	public void SetFog(int currRoomID)
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x123CB28", Offset = "0x123CB28", VA = "0x123CB28")]
	public void NetRoomDoorLockSignStatus(int roomId, eDoor_LockSign_Net_Status status)
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x123B818", Offset = "0x123B818", VA = "0x123B818")]
	private void ShowTeleporterEffect()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x123BD94", Offset = "0x123BD94", VA = "0x123BD94")]
	private void CloseTeleporterEffect()
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x123CC1C", Offset = "0x123CC1C", VA = "0x123CC1C")]
	public void OnLeaveSafeArea()
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x123CCBC", Offset = "0x123CCBC", VA = "0x123CCBC")]
	public void OnReturnSafeArea()
	{
	}

	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x123CD5C", Offset = "0x123CD5C", VA = "0x123CD5C")]
	public FSMBattleRoomSystem()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x123CE50", Offset = "0x123CE50", VA = "0x123CE50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFE40", Offset = "0xEEFE40")]
	private bool <DoInit>b__36_0(Unit _)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x123CF0C", Offset = "0x123CF0C", VA = "0x123CF0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFE50", Offset = "0xEEFE50")]
	private bool <DoInit>b__36_1(Unit __)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x123CFA4", Offset = "0x123CFA4", VA = "0x123CFA4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFE60", Offset = "0xEEFE60")]
	private void <DoInit>b__36_2(Unit l)
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x123D0C4", Offset = "0x123D0C4", VA = "0x123D0C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFE70", Offset = "0xEEFE70")]
	private void <DoInit>b__36_6(long l1)
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x123D0F8", Offset = "0x123D0F8", VA = "0x123D0F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFE80", Offset = "0xEEFE80")]
	private bool <DoInit>b__36_3(Unit _)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x123D1B0", Offset = "0x123D1B0", VA = "0x123D1B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFE90", Offset = "0xEEFE90")]
	private void <DoInit>b__36_4(Unit l)
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x123D1F0", Offset = "0x123D1F0", VA = "0x123D1F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFEA0", Offset = "0xEEFEA0")]
	private void <DoInit>b__36_5(Unit l)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x123D1F4", Offset = "0x123D1F4", VA = "0x123D1F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFEB0", Offset = "0xEEFEB0")]
	private void <ShowTeleporterEffect>b__78_0()
	{
	}
}
[Token(Token = "0x20001D4")]
public class LiftBattleRoomMontion : MonoBehaviour
{
	[Token(Token = "0x200059F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4DE0", Offset = "0xEE4DE0")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action callBack;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TweenCallback <>9__0;

		[Token(Token = "0x6002C23")]
		[Address(RVA = "0x147CFCC", Offset = "0x147CFCC", VA = "0x147CFCC")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x6002C24")]
		[Address(RVA = "0x147D084", Offset = "0x147D084", VA = "0x147D084")]
		internal void <RoomMontion>b__0()
		{
		}
	}

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FSMBattleRoom room;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> montionObjList;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 montionTargetLocalPos;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float montionDuration;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioEvent movingSoundAudio;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WwiseDefine moveSoundObj;

	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> montionObjOriginalPosList;

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x147C890", Offset = "0x147C890", VA = "0x147C890")]
	public void Init(FSMBattleRoom controlerRoom)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x147CA8C", Offset = "0x147CA8C", VA = "0x147CA8C")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x147CC50", Offset = "0x147CC50", VA = "0x147CC50")]
	public void DoSetQuickly()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x147CD00", Offset = "0x147CD00", VA = "0x147CD00")]
	private void PlayMovingSound()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x147CB78", Offset = "0x147CB78", VA = "0x147CB78")]
	private void StopMovingSound()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x147CDCC", Offset = "0x147CDCC", VA = "0x147CDCC")]
	public void OnDestory()
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x147CE60", Offset = "0x147CE60", VA = "0x147CE60")]
	private void RoomMontion(Action callBack)
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x147CFD4", Offset = "0x147CFD4", VA = "0x147CFD4")]
	public LiftBattleRoomMontion()
	{
	}
}
[Token(Token = "0x20001D5")]
public class MainTeleporter : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4DF0", Offset = "0xEE4DF0")]
	private sealed class <>c
	{
		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Collider, bool> <>9__3_0;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Collider, bool> <>9__3_2;

		[Token(Token = "0x6002C26")]
		[Address(RVA = "0x12E33F4", Offset = "0x12E33F4", VA = "0x12E33F4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C27")]
		[Address(RVA = "0x12E33FC", Offset = "0x12E33FC", VA = "0x12E33FC")]
		internal bool <DoInit>b__3_0(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C28")]
		[Address(RVA = "0x12E3498", Offset = "0x12E3498", VA = "0x12E3498")]
		internal bool <DoInit>b__3_2(Collider collider)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected List<CharacterMono> recordCharacterList;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool checkView;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float viewToTeleporter;

	[Token(Token = "0x17000122")]
	[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xEF4160", Offset = "0xEF4160")]
	public (Vector3, Quaternion, Vector3) TRS
	{
		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0x12E3100", Offset = "0x12E3100", VA = "0x12E3100")]
		get
		{
			return default((Vector3, Quaternion, Vector3));
		}
		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x12E3264", Offset = "0x12E3264", VA = "0x12E3264")]
		[param: AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xEF3B00", Offset = "0xEF3B00")]
		set
		{
		}
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x12E2940", Offset = "0x12E2940", VA = "0x12E2940")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x12E2C6C", Offset = "0x12E2C6C", VA = "0x12E2C6C", Slot = "4")]
	protected virtual bool CheckRightView()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x12E2DD4", Offset = "0x12E2DD4", VA = "0x12E2DD4")]
	public bool CheckReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x12E2EC8", Offset = "0x12E2EC8", VA = "0x12E2EC8")]
	public void SetStateFinish()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x12E2F2C", Offset = "0x12E2F2C", VA = "0x12E2F2C", Slot = "5")]
	protected virtual void NetCheckPlayerTrigger(Collider collider, bool enter)
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x12E30D0", Offset = "0x12E30D0", VA = "0x12E30D0")]
	public (Vector3, Quaternion, Vector3) DoStart()
	{
		return default((Vector3, Quaternion, Vector3));
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x12E3220", Offset = "0x12E3220", VA = "0x12E3220")]
	public void DoReset([AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xEF3A44", Offset = "0xEF3A44")] (Vector3, Quaternion, Vector3) trs)
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x12E2C38", Offset = "0x12E2C38", VA = "0x12E2C38")]
	public void Toggle(bool state)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x12E32E0", Offset = "0x12E32E0", VA = "0x12E32E0")]
	public MainTeleporter()
	{
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x12E336C", Offset = "0x12E336C", VA = "0x12E336C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFEC0", Offset = "0xEEFEC0")]
	private void <DoInit>b__3_1(Collider collider1)
	{
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x12E337C", Offset = "0x12E337C", VA = "0x12E337C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFED0", Offset = "0xEEFED0")]
	private void <DoInit>b__3_3(Collider collider1)
	{
	}
}
[Token(Token = "0x20001D6")]
public class MotionFloor : MonoBehaviour
{
	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x12F2B30", Offset = "0x12F2B30", VA = "0x12F2B30")]
	public void Init()
	{
	}

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x12F2B34", Offset = "0x12F2B34", VA = "0x12F2B34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x12F2C28", Offset = "0x12F2C28", VA = "0x12F2C28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x12F2D1C", Offset = "0x12F2D1C", VA = "0x12F2D1C")]
	private void OnGearRoomMotion(Vector3 pos)
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x12F2D68", Offset = "0x12F2D68", VA = "0x12F2D68")]
	public MotionFloor()
	{
	}
}
[Token(Token = "0x20001D7")]
public class PreparedRoomDoor : BattleRoomDoor
{
	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x1534854", Offset = "0x1534854", VA = "0x1534854", Slot = "4")]
	public override bool CheckSignCon()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x15348D4", Offset = "0x15348D4", VA = "0x15348D4", Slot = "5")]
	public override void DoBeginSignCallBack(int roomId)
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x1534970", Offset = "0x1534970", VA = "0x1534970", Slot = "6")]
	public override void DoBreakSignCallBack(int roomId)
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x15349EC", Offset = "0x15349EC", VA = "0x15349EC")]
	public PreparedRoomDoor()
	{
	}
}
[Token(Token = "0x20001D8")]
public class PreparedRoomManager : MonoBehaviour
{
	[Token(Token = "0x20005A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4E00", Offset = "0xEE4E00")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int doorId;

		[Token(Token = "0x6002C29")]
		[Address(RVA = "0x1536530", Offset = "0x1536530", VA = "0x1536530")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6002C2A")]
		[Address(RVA = "0x1536AA0", Offset = "0x1536AA0", VA = "0x1536AA0")]
		internal bool <SetCurDoor>b__0(PreparedRoomDoor a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PreparedRoomManager Instance;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform preparedRoomModel;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MainTeleporter mainTeleporter;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform preparedRoom;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xEE7828", Offset = "0xEE7828")]
	private (Vector3, Quaternion, Vector3) originalInfo;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CharacterMono controlMono;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isStart;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PathManager FrameAreaHolder;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Transform> limitedAreaPointList;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<PreparedRoomDoor> RoomDoorList;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public PreparedRoomDoor CurRoomDoor;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform DoorRoot;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform RoomDoorModelRoot;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private BattleRoomDoor curBattleOpenDoor;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool doorLockSignStatus;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action OnInit;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Action<Transform> OnPreparedRoomUnLoadPre;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Action<Transform> OnPreparedRoomLoadPre;

	[Token(Token = "0x17000123")]
	public Transform PreparedRoom
	{
		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x15349F4", Offset = "0x15349F4", VA = "0x15349F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x15349FC", Offset = "0x15349FC", VA = "0x15349FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x1534A54", Offset = "0x1534A54", VA = "0x1534A54")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x1534C78", Offset = "0x1534C78", VA = "0x1534C78")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x1535170", Offset = "0x1535170", VA = "0x1535170")]
	public void DoPreReset()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x1535178", Offset = "0x1535178", VA = "0x1535178")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x1535500", Offset = "0x1535500", VA = "0x1535500")]
	private void OnPlayerTeleportTo()
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x1535750", Offset = "0x1535750", VA = "0x1535750")]
	private void OnPlayerTeleportBack()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x15358B0", Offset = "0x15358B0", VA = "0x15358B0")]
	public void AdjustMainTeleporterTR(Vector3 localPos, Quaternion rot, Vector3 scale)
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x15359BC", Offset = "0x15359BC", VA = "0x15359BC")]
	public void OnReturnSafeArea()
	{
	}

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x1535AF0", Offset = "0x1535AF0", VA = "0x1535AF0")]
	public void OnLeaveSafeArea()
	{
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x1535C4C", Offset = "0x1535C4C", VA = "0x1535C4C")]
	private bool GetLimitedAreaPoints()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x1535DA8", Offset = "0x1535DA8", VA = "0x1535DA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x1535FD8", Offset = "0x1535FD8", VA = "0x1535FD8")]
	public void NetDoorLockSignStatus(int roomId, eDoor_LockSign_Net_Status status)
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x1534C74", Offset = "0x1534C74", VA = "0x1534C74")]
	private void InitDoor()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x15363AC", Offset = "0x15363AC", VA = "0x15363AC")]
	private void SetCurDoor(int doorId)
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x1536538", Offset = "0x1536538", VA = "0x1536538")]
	public void AdjustMainDoor(BattleRoomDoor door, Vector3 doorOffsetPos, Quaternion doorRot, Vector3 doorScale)
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x1535698", Offset = "0x1535698", VA = "0x1535698")]
	private void PlayBattleOpenDoor()
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x15367D0", Offset = "0x15367D0", VA = "0x15367D0")]
	public bool CheckRoomReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x15353F4", Offset = "0x15353F4", VA = "0x15353F4")]
	public void ResetRoomDoor()
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x15355E0", Offset = "0x15355E0", VA = "0x15355E0")]
	public void ResetStatus()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x15350B8", Offset = "0x15350B8", VA = "0x15350B8")]
	public void SetDoorLockSignActive(bool active)
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x15368E0", Offset = "0x15368E0", VA = "0x15368E0")]
	public void SetRoomDoorChildModelActive(PreparedRoomDoor door, bool active, bool isDelayActive = false)
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x1536304", Offset = "0x1536304", VA = "0x1536304")]
	public void SetDoorLockSignProgressActive(bool active)
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x15348B8", Offset = "0x15348B8", VA = "0x15348B8")]
	public bool CheckTeleporterReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x15369C0", Offset = "0x15369C0", VA = "0x15369C0")]
	private void ResetCheckDoorLockSign()
	{
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x1535F44", Offset = "0x1535F44", VA = "0x1535F44")]
	private void UpdateCheckPreRoom()
	{
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x1535E48", Offset = "0x1535E48", VA = "0x1535E48")]
	private void UpdateCheckDoorLockSign()
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x1536258", Offset = "0x1536258", VA = "0x1536258")]
	public void SyncDoorLockSignStatus(bool isActive)
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x15369F0", Offset = "0x15369F0", VA = "0x15369F0")]
	public PreparedRoomManager()
	{
	}
}
[Token(Token = "0x20001D9")]
public class Teleporter : MonoBehaviour
{
	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int roomId;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<CharacterMono> recordCharacterList;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool checkView;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool autoAdjustRot;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float viewToTeleporter;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool passed;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_MaxDistance;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_HitDetect;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 m_Dir;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RaycastHit m_Hit;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool isActive;

	[Token(Token = "0x17000124")]
	[AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xEF421C", Offset = "0xEF421C")]
	public (Vector3, Quaternion, Vector3) TRS
	{
		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x11D3E08", Offset = "0x11D3E08", VA = "0x11D3E08")]
		get
		{
			return default((Vector3, Quaternion, Vector3));
		}
		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x11D3F28", Offset = "0x11D3F28", VA = "0x11D3F28")]
		[param: AttributeAttribute(Name = "TupleElementNamesAttribute", RVA = "0xEF3BBC", Offset = "0xEF3BBC")]
		set
		{
		}
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x11D3650", Offset = "0x11D3650", VA = "0x11D3650")]
	public void Init(int id)
	{
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x11D365C", Offset = "0x11D365C", VA = "0x11D365C")]
	public void SetActive(bool state)
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x11D36DC", Offset = "0x11D36DC", VA = "0x11D36DC")]
	public void SetPass(bool isPass)
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x11D3748", Offset = "0x11D3748", VA = "0x11D3748", Slot = "4")]
	protected virtual bool CheckRightView()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x11D38A4", Offset = "0x11D38A4", VA = "0x11D38A4", Slot = "5")]
	public virtual bool CheckReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x11D3988", Offset = "0x11D3988", VA = "0x11D3988", Slot = "6")]
	protected virtual void ServerCheckPlayerTrigger(Collider collider, bool enter)
	{
	}

	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x11D3AB4", Offset = "0x11D3AB4", VA = "0x11D3AB4")]
	private CharacterMono GetCharMono(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x11D3C0C", Offset = "0x11D3C0C", VA = "0x11D3C0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x11D3FA4", Offset = "0x11D3FA4", VA = "0x11D3FA4")]
	public Teleporter()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x11D4030", Offset = "0x11D4030", VA = "0x11D4030")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFEE0", Offset = "0xEEFEE0")]
	private bool <Update>b__18_0(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x11D40E8", Offset = "0x11D40E8", VA = "0x11D40E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFEF0", Offset = "0xEEFEF0")]
	private void <Update>b__18_1(Collider collider1)
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x11D40F8", Offset = "0x11D40F8", VA = "0x11D40F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFF00", Offset = "0xEEFF00")]
	private bool <Update>b__18_2(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x11D41B0", Offset = "0x11D41B0", VA = "0x11D41B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFF10", Offset = "0xEEFF10")]
	private void <Update>b__18_3(Collider collider1)
	{
	}
}
[Token(Token = "0x20001DA")]
public class KeyboardInput : MonoBehaviour
{
	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TestPlayerMove Player;

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x1473F64", Offset = "0x1473F64", VA = "0x1473F64")]
	public void Update()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x14741FC", Offset = "0x14741FC", VA = "0x14741FC")]
	public KeyboardInput()
	{
	}
}
[Token(Token = "0x20001DB")]
public class AreaLimitedTipUI : BaseUI
{
	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AreaLimitedTipUI Instance;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float followDis;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float followSpeed;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float downOffset;

	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x155A1E0", Offset = "0x155A1E0", VA = "0x155A1E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x155A248", Offset = "0x155A248", VA = "0x155A248")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x155A24C", Offset = "0x155A24C", VA = "0x155A24C")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x155A570", Offset = "0x155A570", VA = "0x155A570")]
	public AreaLimitedTipUI()
	{
	}
}
[Token(Token = "0x20001DC")]
public class LeaveAreaEffect : PostEffectsBase
{
	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LeaveAreaEffect Instance;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Shader fogShader;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material fogMaterial;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera myCamera;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform myCameraTransform;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE78E4", Offset = "0xEE78E4")]
	public float fogDensity;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color fogColor;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float normalStart;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float normalEnd;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int camLayerMask;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool effectState;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector4[] PolygonPoints;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action CloseEffectAction;

	[Token(Token = "0x17000125")]
	public Material material
	{
		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x1479210", Offset = "0x1479210", VA = "0x1479210")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000126")]
	public Camera camera
	{
		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x1479250", Offset = "0x1479250", VA = "0x1479250")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000127")]
	public Transform cameraTransform
	{
		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x14792FC", Offset = "0x14792FC", VA = "0x14792FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000128")]
	public bool Enabled
	{
		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x14793AC", Offset = "0x14793AC", VA = "0x14793AC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x14793B4", Offset = "0x14793B4", VA = "0x14793B4")]
		set
		{
		}
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x14793F0", Offset = "0x14793F0", VA = "0x14793F0", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x1479448", Offset = "0x1479448", VA = "0x1479448")]
	public bool ToggleEffect(bool toggle)
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x1479450", Offset = "0x1479450", VA = "0x1479450")]
	public void SetPolygonPoints(List<Transform> points)
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x14795A4", Offset = "0x14795A4", VA = "0x14795A4")]
	private Matrix4x4 GetFrustumCorners()
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x1479A54", Offset = "0x1479A54", VA = "0x1479A54")]
	public LeaveAreaEffect()
	{
	}
}
[Token(Token = "0x20001DD")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE1984", Offset = "0xEE1984")]
public class PostEffectsBase : MonoBehaviour
{
	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool m_ToggleEffect;

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x15319F0", Offset = "0x15319F0", VA = "0x15319F0")]
	protected void CheckResources()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x1531A2C", Offset = "0x1531A2C", VA = "0x1531A2C")]
	protected bool CheckSupport()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x1531AC0", Offset = "0x1531AC0", VA = "0x1531AC0")]
	protected void NotSupported()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x1531ACC", Offset = "0x1531ACC", VA = "0x1531ACC", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x1531AD0", Offset = "0x1531AD0", VA = "0x1531AD0")]
	protected Material CheckShaderAndCreateMaterial(Shader shader, Material material)
	{
		return null;
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x1531C5C", Offset = "0x1531C5C", VA = "0x1531C5C")]
	public PostEffectsBase()
	{
	}
}
[Token(Token = "0x20001DE")]
public enum ClientBattleMessageType
{
	[Token(Token = "0x4000C4D")]
	EnterRoom = 1001,
	[Token(Token = "0x4000C4E")]
	GearRoomMotion = 2001
}
[Token(Token = "0x20001DF")]
public enum ServerBattleMessageType
{
	[Token(Token = "0x4000C50")]
	BossGatlinBlendRTPC = 3001
}
[Token(Token = "0x20001E0")]
public delegate void EventListenerDelegate(GMessage evt);
[Token(Token = "0x20001E1")]
public class GDispatcher : Singleton<GDispatcher>, IDispatcher
{
	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, EventListenerDelegate> events;

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x132E600", Offset = "0x132E600", VA = "0x132E600", Slot = "4")]
	public void AddListener(int type, EventListenerDelegate listener)
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x132E718", Offset = "0x132E718", VA = "0x132E718", Slot = "5")]
	public void RemoveListener(int type, EventListenerDelegate listener)
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x132E818", Offset = "0x132E818", VA = "0x132E818", Slot = "8")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x132E870", Offset = "0x132E870", VA = "0x132E870", Slot = "6")]
	public void SendMessage(GMessage evt)
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x132EB0C", Offset = "0x132EB0C", VA = "0x132EB0C", Slot = "7")]
	public void SendMessage(int type, params object[] param)
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x132EE1C", Offset = "0x132EE1C", VA = "0x132EE1C")]
	public void AddListener(ServerBattleMessageType type, EventListenerDelegate listener)
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x132EE20", Offset = "0x132EE20", VA = "0x132EE20")]
	public void RemoveListener(ServerBattleMessageType type, EventListenerDelegate listener)
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x132EE24", Offset = "0x132EE24", VA = "0x132EE24")]
	public void SendMessage(ServerBattleMessageType type, params object[] param)
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x132EE28", Offset = "0x132EE28", VA = "0x132EE28")]
	public void AddListener(ClientBattleMessageType type, EventListenerDelegate listener)
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x132EE2C", Offset = "0x132EE2C", VA = "0x132EE2C")]
	public void RemoveListener(ClientBattleMessageType type, EventListenerDelegate listener)
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x132EE30", Offset = "0x132EE30", VA = "0x132EE30")]
	public void SendMessage(ClientBattleMessageType type, params object[] param)
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x132EE34", Offset = "0x132EE34", VA = "0x132EE34")]
	public GDispatcher()
	{
	}
}
[Token(Token = "0x20001E2")]
public class GMessage : IMessage
{
	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE78FC", Offset = "0xEE78FC")]
	private int <Type>k__BackingField;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE790C", Offset = "0xEE790C")]
	private object[] <Params>k__BackingField;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE791C", Offset = "0xEE791C")]
	private object <Sender>k__BackingField;

	[Token(Token = "0x17000129")]
	public int Type
	{
		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x132EED8", Offset = "0x132EED8", VA = "0x132EED8", Slot = "4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFF20", Offset = "0xEEFF20")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x132EEE0", Offset = "0x132EEE0", VA = "0x132EEE0", Slot = "5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFF30", Offset = "0xEEFF30")]
		set
		{
		}
	}

	[Token(Token = "0x1700012A")]
	public object[] Params
	{
		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x132EEE8", Offset = "0x132EEE8", VA = "0x132EEE8", Slot = "8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFF40", Offset = "0xEEFF40")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x132EEF0", Offset = "0x132EEF0", VA = "0x132EEF0", Slot = "9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFF50", Offset = "0xEEFF50")]
		set
		{
		}
	}

	[Token(Token = "0x1700012B")]
	public object Sender
	{
		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x132EEF8", Offset = "0x132EEF8", VA = "0x132EEF8", Slot = "6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFF60", Offset = "0xEEFF60")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x132EF00", Offset = "0x132EF00", VA = "0x132EF00", Slot = "7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFF70", Offset = "0xEEFF70")]
		set
		{
		}
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x132EF08", Offset = "0x132EF08", VA = "0x132EF08", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x132F20C", Offset = "0x132F20C", VA = "0x132F20C")]
	public GMessage Clone()
	{
		return null;
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x132F348", Offset = "0x132F348", VA = "0x132F348")]
	public GMessage(int type)
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x132EDD8", Offset = "0x132EDD8", VA = "0x132EDD8")]
	public GMessage(int type, params object[] param)
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x132F2F0", Offset = "0x132F2F0", VA = "0x132F2F0")]
	public GMessage(int type, object sender, params object[] param)
	{
	}
}
[Token(Token = "0x20001E3")]
public interface IDispatcher
{
	[Token(Token = "0x6000E08")]
	void AddListener(int type, EventListenerDelegate listener);

	[Token(Token = "0x6000E09")]
	void RemoveListener(int type, EventListenerDelegate listener);

	[Token(Token = "0x6000E0A")]
	void SendMessage(GMessage evt);

	[Token(Token = "0x6000E0B")]
	void SendMessage(int type, params object[] param);

	[Token(Token = "0x6000E0C")]
	void Clear();
}
[Token(Token = "0x20001E4")]
public interface IMessage
{
	[Token(Token = "0x1700012C")]
	int Type
	{
		[Token(Token = "0x6000E0D")]
		get;
		[Token(Token = "0x6000E0E")]
		set;
	}

	[Token(Token = "0x1700012D")]
	object Sender
	{
		[Token(Token = "0x6000E0F")]
		get;
		[Token(Token = "0x6000E10")]
		set;
	}

	[Token(Token = "0x1700012E")]
	object[] Params
	{
		[Token(Token = "0x6000E11")]
		get;
		[Token(Token = "0x6000E12")]
		set;
	}

	[Token(Token = "0x6000E13")]
	new string ToString();
}
[Token(Token = "0x20001E5")]
public enum MessageEvents
{
	[Token(Token = "0x4000C56")]
	NONE = -1,
	[Token(Token = "0x4000C57")]
	EnterRoom = 1000,
	[Token(Token = "0x4000C58")]
	GearRoomMotion = 2001,
	[Token(Token = "0x4000C59")]
	BossGatlinBlendRTPC = 2002,
	[Token(Token = "0x4000C5A")]
	SelectInstanceFinish = 5000,
	[Token(Token = "0x4000C5B")]
	InstanceInfoFresh = 5001,
	[Token(Token = "0x4000C5C")]
	CaptainFresh = 6000
}
[Token(Token = "0x20001E6")]
public class ObjMessenger
{
	[Token(Token = "0x20005A2")]
	public delegate void Callback();

	[Token(Token = "0x20005A3")]
	public delegate void Callback<T>(T arg1);

	[Token(Token = "0x20005A4")]
	public delegate void Callback<T, U>(T arg1, U arg2);

	[Token(Token = "0x20005A5")]
	public delegate void Callback<T, U, V>(T arg1, U arg2, V arg3);

	[Token(Token = "0x20005A6")]
	public delegate void Callback<T, U, V, X>(T arg1, U arg2, V arg3, X arg4);

	[Token(Token = "0x20005A7")]
	public delegate void Callback<T, U, V, X, Y>(T arg1, U arg2, V arg3, X arg4, Y arg5);

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<MessageEvents, Delegate> eventTable;

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x1388710", Offset = "0x1388710", VA = "0x1388710")]
	public static void Cleanup()
	{
	}

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x138878C", Offset = "0x138878C", VA = "0x138878C")]
	private static void AddListenerToTable(MessageEvents eventType, Delegate handler)
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x1388860", Offset = "0x1388860", VA = "0x1388860")]
	public static void AddListener(MessageEvents eventType, Callback handler)
	{
	}

	[Token(Token = "0x6000E17")]
	public static void AddListener<T>(MessageEvents eventType, Callback<T> handler)
	{
	}

	[Token(Token = "0x6000E18")]
	public static void AddListener<T, U>(MessageEvents eventType, Callback<T, U> handler)
	{
	}

	[Token(Token = "0x6000E19")]
	public static void AddListener<T, U, V>(MessageEvents eventType, Callback<T, U, V> handler)
	{
	}

	[Token(Token = "0x6000E1A")]
	public static void AddListener<T, U, V, X>(MessageEvents eventType, Callback<T, U, V, X> handler)
	{
	}

	[Token(Token = "0x6000E1B")]
	public static void AddListener<T, U, V, X, Y>(MessageEvents eventType, Callback<T, U, V, X, Y> handler)
	{
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x1388960", Offset = "0x1388960", VA = "0x1388960")]
	public static void RemoveListener(MessageEvents eventType)
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x1388A30", Offset = "0x1388A30", VA = "0x1388A30")]
	private static void OnListenerRemoved(MessageEvents eventType)
	{
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x1388B40", Offset = "0x1388B40", VA = "0x1388B40")]
	public static void RemoveListener(MessageEvents eventType, Callback handler)
	{
	}

	[Token(Token = "0x6000E1F")]
	public static void RemoveListener<T>(MessageEvents eventType, Callback<T> handler)
	{
	}

	[Token(Token = "0x6000E20")]
	public static void RemoveListener<T, U>(MessageEvents eventType, Callback<T, U> handler)
	{
	}

	[Token(Token = "0x6000E21")]
	public static void RemoveListener<T, U, V>(MessageEvents eventType, Callback<T, U, V> handler)
	{
	}

	[Token(Token = "0x6000E22")]
	public static void RemoveListener<T, U, V, X>(MessageEvents eventType, Callback<T, U, V, X> handler)
	{
	}

	[Token(Token = "0x6000E23")]
	public static void RemoveListener<T, U, V, X, Y>(MessageEvents eventType, Callback<T, U, V, X, Y> handler)
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x1388C90", Offset = "0x1388C90", VA = "0x1388C90")]
	private static void throwSendMessageExption(MessageEvents eventType)
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x1388D40", Offset = "0x1388D40", VA = "0x1388D40")]
	public static void Send(MessageEvents eventType)
	{
	}

	[Token(Token = "0x6000E26")]
	public static void Send<T>(MessageEvents eventType, T arg1)
	{
	}

	[Token(Token = "0x6000E27")]
	public static void Send<T, U>(MessageEvents eventType, T arg1, U arg2)
	{
	}

	[Token(Token = "0x6000E28")]
	public static void Send<T, U, V>(MessageEvents eventType, T arg1, U arg2, V arg3)
	{
	}

	[Token(Token = "0x6000E29")]
	public static void Send<T, U, V, X>(MessageEvents eventType, T arg1, U arg2, V arg3, X arg4)
	{
	}

	[Token(Token = "0x6000E2A")]
	public static void Send<T, U, V, X, Y>(MessageEvents eventType, T arg1, U arg2, V arg3, X arg4, Y arg5)
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x1389030", Offset = "0x1389030", VA = "0x1389030")]
	public ObjMessenger()
	{
	}
}
[Token(Token = "0x20001E7")]
public class TestPlayerMove : MonoBehaviour
{
	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera mianCam;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE792C", Offset = "0xEE792C")]
	public float MoveSpeed;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float RotateSpeed;

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x11D831C", Offset = "0x11D831C", VA = "0x11D831C")]
	public void Move(Vector3 dir, bool isforward)
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x11D844C", Offset = "0x11D844C", VA = "0x11D844C")]
	public void Rotate(bool isleft)
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x11D8530", Offset = "0x11D8530", VA = "0x11D8530")]
	public void PlayerRotate(float x, float y)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x11D85E8", Offset = "0x11D85E8", VA = "0x11D85E8")]
	public TestPlayerMove()
	{
	}
}
[Token(Token = "0x20001E8")]
public enum GameDiffculty
{
	[Token(Token = "0x4000C62")]
	None,
	[Token(Token = "0x4000C63")]
	Diff_1Player,
	[Token(Token = "0x4000C64")]
	Diff_2Player,
	[Token(Token = "0x4000C65")]
	Diff_3Player,
	[Token(Token = "0x4000C66")]
	Diff_4Player,
	[Token(Token = "0x4000C67")]
	Diff_5Player
}
[Token(Token = "0x20001E9")]
public enum e_type_camp
{
	[Token(Token = "0x4000C69")]
	Enemy,
	[Token(Token = "0x4000C6A")]
	Teammate,
	[Token(Token = "0x4000C6B")]
	Self,
	[Token(Token = "0x4000C6C")]
	All
}
[Token(Token = "0x20001EA")]
public enum e_Player_Style
{
	[Token(Token = "0x4000C6E")]
	Default,
	[Token(Token = "0x4000C6F")]
	Men01,
	[Token(Token = "0x4000C70")]
	Woman01,
	[Token(Token = "0x4000C71")]
	Men02
}
[Token(Token = "0x20001EB")]
public enum e_weapon_group
{
	[Token(Token = "0x4000C73")]
	NONE = 0,
	[Token(Token = "0x4000C74")]
	Revolver_WG = 1,
	[Token(Token = "0x4000C75")]
	AssaultRifle_WG = 2,
	[Token(Token = "0x4000C76")]
	SpearGun_WG = 3,
	[Token(Token = "0x4000C77")]
	RocketLauncher_WG = 4,
	[Token(Token = "0x4000C78")]
	MachineGun_WG = 5,
	[Token(Token = "0x4000C79")]
	SubMGun_WG = 6,
	[Token(Token = "0x4000C7A")]
	Rifle_NPC = 1001,
	[Token(Token = "0x4000C7B")]
	SubMGun_NPC = 1002,
	[Token(Token = "0x4000C7C")]
	Bow_NPC = 1003,
	[Token(Token = "0x4000C7D")]
	Fireball_NPC = 1004,
	[Token(Token = "0x4000C7E")]
	Laser_NPC = 1005,
	[Token(Token = "0x4000C7F")]
	FlyingBall_NPC = 1006,
	[Token(Token = "0x4000C80")]
	SingleBow_NPC = 1007,
	[Token(Token = "0x4000C81")]
	Fireball_Teleport_NPC = 1008,
	[Token(Token = "0x4000C82")]
	Bomb_NPC = 1009,
	[Token(Token = "0x4000C83")]
	Boss = 1010
}
[Token(Token = "0x20001EC")]
public enum e_weapon_type
{
	[Token(Token = "0x4000C85")]
	NONE = 0,
	[Token(Token = "0x4000C86")]
	Revolver = 1,
	[Token(Token = "0x4000C87")]
	AssaultRifle = 2,
	[Token(Token = "0x4000C88")]
	SpearGun = 3,
	[Token(Token = "0x4000C89")]
	RocketLauncher = 4,
	[Token(Token = "0x4000C8A")]
	MachineGun = 5,
	[Token(Token = "0x4000C8B")]
	SubMGun = 6,
	[Token(Token = "0x4000C8C")]
	RIFLE_NPC_1 = 1001,
	[Token(Token = "0x4000C8D")]
	RIFLE_NPC_2 = 1002,
	[Token(Token = "0x4000C8E")]
	Bow_NPC = 1003,
	[Token(Token = "0x4000C8F")]
	Fireball_NPC = 1004,
	[Token(Token = "0x4000C90")]
	Laser_NPC = 1005,
	[Token(Token = "0x4000C91")]
	FlyingBall_NPC = 1006,
	[Token(Token = "0x4000C92")]
	SingleBow_NPC = 1007,
	[Token(Token = "0x4000C93")]
	Fireball_Teleport_NPC = 1008,
	[Token(Token = "0x4000C94")]
	Bomb_NPC = 1009,
	[Token(Token = "0x4000C95")]
	Boss = 1010
}
[Token(Token = "0x20001ED")]
[Flags]
public enum e_Attack_type
{
	[Token(Token = "0x4000C97")]
	None = 0,
	[Token(Token = "0x4000C98")]
	Normal = 1,
	[Token(Token = "0x4000C99")]
	Burning = 2,
	[Token(Token = "0x4000C9A")]
	Poison = 4,
	[Token(Token = "0x4000C9B")]
	FixedBackGroundNormal = 8
}
[Token(Token = "0x20001EE")]
[Flags]
public enum e_HitEffect_type
{
	[Token(Token = "0x4000C9D")]
	Normal = 1,
	[Token(Token = "0x4000C9E")]
	Ragdoll = 2,
	[Token(Token = "0x4000C9F")]
	Broken = 4,
	[Token(Token = "0x4000CA0")]
	FullRagdoll = 8
}
[Token(Token = "0x20001EF")]
public enum e_type_monster
{
	[Token(Token = "0x4000CA2")]
	None = 0,
	[Token(Token = "0x4000CA3")]
	Normal = 1,
	[Token(Token = "0x4000CA4")]
	Big = 2,
	[Token(Token = "0x4000CA5")]
	BulletMonster = 3,
	[Token(Token = "0x4000CA6")]
	Boss = 100
}
[Token(Token = "0x20001F0")]
public enum e_type_npc
{
	[Token(Token = "0x4000CA8")]
	None = 0,
	[Token(Token = "0x4000CA9")]
	Commander = 10,
	[Token(Token = "0x4000CAA")]
	Soldier = 20,
	[Token(Token = "0x4000CAB")]
	Soldier2 = 21,
	[Token(Token = "0x4000CAC")]
	Soldier3 = 22
}
[Token(Token = "0x20001F1")]
public enum e_type_role
{
	[Token(Token = "0x4000CAE")]
	NONE,
	[Token(Token = "0x4000CAF")]
	HERO,
	[Token(Token = "0x4000CB0")]
	MONSTER,
	[Token(Token = "0x4000CB1")]
	NPC
}
[Token(Token = "0x20001F2")]
public enum e_group_type
{
	[Token(Token = "0x4000CB3")]
	None = -1,
	[Token(Token = "0x4000CB4")]
	Unit_Group_Player_A = 0,
	[Token(Token = "0x4000CB5")]
	Unit_Group_Player_B = 1,
	[Token(Token = "0x4000CB6")]
	Unit_Group_Monster = 100
}
[Token(Token = "0x20001F3")]
public enum e_GameStatusType
{
	[Token(Token = "0x4000CB8")]
	NONE,
	[Token(Token = "0x4000CB9")]
	Ready,
	[Token(Token = "0x4000CBA")]
	FightStart,
	[Token(Token = "0x4000CBB")]
	FightStop,
	[Token(Token = "0x4000CBC")]
	StartVideo,
	[Token(Token = "0x4000CBD")]
	StopVideo,
	[Token(Token = "0x4000CBE")]
	ControlFire
}
[Token(Token = "0x20001F4")]
public enum e_CutScenesType
{
	[Token(Token = "0x4000CC0")]
	NONE,
	[Token(Token = "0x4000CC1")]
	FightStart,
	[Token(Token = "0x4000CC2")]
	Unlock_One,
	[Token(Token = "0x4000CC3")]
	Unlock_Two,
	[Token(Token = "0x4000CC4")]
	FightEnd_Win,
	[Token(Token = "0x4000CC5")]
	FightEnd_Fail,
	[Token(Token = "0x4000CC6")]
	Player_Death_One,
	[Token(Token = "0x4000CC7")]
	Player_Death_Two,
	[Token(Token = "0x4000CC8")]
	Player_Death_Three,
	[Token(Token = "0x4000CC9")]
	Player_Death_Four,
	[Token(Token = "0x4000CCA")]
	Doctor_Remind_One
}
[Token(Token = "0x20001F5")]
public enum e_setting_type
{
	[Token(Token = "0x4000CCC")]
	None = 0,
	[Token(Token = "0x4000CCD")]
	BattleTime = 1,
	[Token(Token = "0x4000CCE")]
	BattleEndDelayTime = 2,
	[Token(Token = "0x4000CCF")]
	MaxMonsterCount = 3,
	[Token(Token = "0x4000CD0")]
	RoomReviveHP = 4,
	[Token(Token = "0x4000CD1")]
	RoomReviveIds = 5,
	[Token(Token = "0x4000CD2")]
	NormalKillScoreCoefficient = 6,
	[Token(Token = "0x4000CD3")]
	HeadKillScoreCoefficient = 7,
	[Token(Token = "0x4000CD4")]
	InstancePassCoefficient = 8,
	[Token(Token = "0x4000CD5")]
	FailScoreCoefficient = 10,
	[Token(Token = "0x4000CD6")]
	GameTimeScoreCoefficient = 11,
	[Token(Token = "0x4000CD7")]
	GameTimeBase = 12,
	[Token(Token = "0x4000CD8")]
	GameScoreRanges = 13,
	[Token(Token = "0x4000CD9")]
	AreaLimited = 14,
	[Token(Token = "0x4000CDA")]
	BossInstanceId = 15,
	[Token(Token = "0x4000CDB")]
	WinInstanceId = 16,
	[Token(Token = "0x4000CDC")]
	ClearUIIds = 17,
	[Token(Token = "0x4000CDD")]
	ClearUIDelay = 18,
	[Token(Token = "0x4000CDE")]
	LineFailClose = 19,
	[Token(Token = "0x4000CDF")]
	LevelBattleTimes = 20,
	[Token(Token = "0x4000CE0")]
	OfflimitsAreasDamage = 100,
	[Token(Token = "0x4000CE1")]
	OfflimitsAreasDamageFrequency = 101,
	[Token(Token = "0x4000CE2")]
	MagmaAreasDamage = 30,
	[Token(Token = "0x4000CE3")]
	MagmaAreasDamageFrequency = 31,
	[Token(Token = "0x4000CE4")]
	AxeDamage = 32,
	[Token(Token = "0x4000CE5")]
	AxeDamageFrequency = 33,
	[Token(Token = "0x4000CE6")]
	SpitfireAreasDamage = 34,
	[Token(Token = "0x4000CE7")]
	SpitfiresDamageFrequency = 35,
	[Token(Token = "0x4000CE8")]
	MovingWallDamage = 36,
	[Token(Token = "0x4000CE9")]
	MovingWallDamageFrequency = 37,
	[Token(Token = "0x4000CEA")]
	ToStabDamage = 38,
	[Token(Token = "0x4000CEB")]
	ToStabDamageFrequency = 39,
	[Token(Token = "0x4000CEC")]
	SawDamage = 40,
	[Token(Token = "0x4000CED")]
	SawDamageFrequency = 41
}
[Token(Token = "0x20001F6")]
public enum e_FlowType
{
	[Token(Token = "0x4000CEF")]
	NONE,
	[Token(Token = "0x4000CF0")]
	MonsterRoom,
	[Token(Token = "0x4000CF1")]
	GearRoom,
	[Token(Token = "0x4000CF2")]
	BoosRoom,
	[Token(Token = "0x4000CF3")]
	SafeRoom
}
[Token(Token = "0x20001F7")]
public enum EffectStatus
{
	[Token(Token = "0x4000CF5")]
	None,
	[Token(Token = "0x4000CF6")]
	PlayerRollBack,
	[Token(Token = "0x4000CF7")]
	PlayerTeleport,
	[Token(Token = "0x4000CF8")]
	PassCurrentRoom,
	[Token(Token = "0x4000CF9")]
	PlayerEnterRoom,
	[Token(Token = "0x4000CFA")]
	KillCurrentEnemys,
	[Token(Token = "0x4000CFB")]
	PlayerTypeRollBack,
	[Token(Token = "0x4000CFC")]
	ReviveHP,
	[Token(Token = "0x4000CFD")]
	RoomDoorLockSignStatus,
	[Token(Token = "0x4000CFE")]
	GuidStepStatus,
	[Token(Token = "0x4000CFF")]
	ClearMonster,
	[Token(Token = "0x4000D00")]
	Calibration,
	[Token(Token = "0x4000D01")]
	InTeleporter,
	[Token(Token = "0x4000D02")]
	TimerAudio_1,
	[Token(Token = "0x4000D03")]
	TimerAudio_2,
	[Token(Token = "0x4000D04")]
	TimerAudio_3,
	[Token(Token = "0x4000D05")]
	SetLevel,
	[Token(Token = "0x4000D06")]
	TimerAudio_4,
	[Token(Token = "0x4000D07")]
	DeadStart,
	[Token(Token = "0x4000D08")]
	DeadEnd,
	[Token(Token = "0x4000D09")]
	InstanceDataPreStart
}
[Token(Token = "0x20001F8")]
public enum VRInputType
{
	[Token(Token = "0x4000D0B")]
	HTC
}
[Token(Token = "0x20001F9")]
public static class GameConfig
{
	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, e_type_language> languageList;

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x132F374", Offset = "0x132F374", VA = "0x132F374")]
	public static string ToLanguage(string languageName, out e_type_language languageType)
	{
		return null;
	}
}
[Token(Token = "0x20001FA")]
public enum e_type_language
{
	[Token(Token = "0x4000D0E")]
	None = -1,
	[Token(Token = "0x4000D0F")]
	Chinese,
	[Token(Token = "0x4000D10")]
	English_US,
	[Token(Token = "0x4000D11")]
	Korean,
	[Token(Token = "0x4000D12")]
	Japanese,
	[Token(Token = "0x4000D13")]
	Chinese_TW,
	[Token(Token = "0x4000D14")]
	Vietnamese,
	[Token(Token = "0x4000D15")]
	Thai,
	[Token(Token = "0x4000D16")]
	Indonesian,
	[Token(Token = "0x4000D17")]
	German,
	[Token(Token = "0x4000D18")]
	French,
	[Token(Token = "0x4000D19")]
	Russian,
	[Token(Token = "0x4000D1A")]
	Portuguese,
	[Token(Token = "0x4000D1B")]
	Spanish,
	[Token(Token = "0x4000D1C")]
	Italian,
	[Token(Token = "0x4000D1D")]
	Polish,
	[Token(Token = "0x4000D1E")]
	Turkish,
	[Token(Token = "0x4000D1F")]
	Dutch,
	[Token(Token = "0x4000D20")]
	Arabic
}
[Token(Token = "0x20001FB")]
public enum e_hardware_type
{
	[Token(Token = "0x4000D22")]
	Default,
	[Token(Token = "0x4000D23")]
	L_Haptics,
	[Token(Token = "0x4000D24")]
	L_Shield,
	[Token(Token = "0x4000D25")]
	R_Knt,
	[Token(Token = "0x4000D26")]
	L_HapticsAndR_Knt,
	[Token(Token = "0x4000D27")]
	L_ShieldAndR_Knt
}
[Token(Token = "0x20001FC")]
public enum e_weapon_hardware_type
{
	[Token(Token = "0x4000D29")]
	Default,
	[Token(Token = "0x4000D2A")]
	KNT,
	[Token(Token = "0x4000D2B")]
	Haptics,
	[Token(Token = "0x4000D2C")]
	Shield
}
[Token(Token = "0x20001FD")]
public enum e_Server_Type
{
	[Token(Token = "0x4000D2E")]
	None,
	[Token(Token = "0x4000D2F")]
	Host,
	[Token(Token = "0x4000D30")]
	Server
}
[Token(Token = "0x20001FE")]
public enum GameModeType
{
	[Token(Token = "0x4000D32")]
	LargeSpace = 1,
	[Token(Token = "0x4000D33")]
	Room,
	[Token(Token = "0x4000D34")]
	VRBox
}
[Token(Token = "0x20001FF")]
public class GameWorld : Singleton<GameWorld>
{
	[Serializable]
	[Token(Token = "0x20005A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4E10", Offset = "0xEE4E10")]
	private sealed class <>c
	{
		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<WUnit> <>9__40_0;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<WUnit> <>9__41_0;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action <>9__43_1;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action <>9__43_2;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action <>9__43_0;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action<WUnit> <>9__47_0;

		[Token(Token = "0x6002C44")]
		[Address(RVA = "0x133DCF4", Offset = "0x133DCF4", VA = "0x133DCF4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C45")]
		[Address(RVA = "0x133DCFC", Offset = "0x133DCFC", VA = "0x133DCFC")]
		internal void <BattleReady>b__40_0(WUnit unit)
		{
		}

		[Token(Token = "0x6002C46")]
		[Address(RVA = "0x133DDC0", Offset = "0x133DDC0", VA = "0x133DDC0")]
		internal void <BattleStart>b__41_0(WUnit unit)
		{
		}

		[Token(Token = "0x6002C47")]
		[Address(RVA = "0x133DE70", Offset = "0x133DE70", VA = "0x133DE70")]
		internal void <BattleEnd>b__43_0()
		{
		}

		[Token(Token = "0x6002C48")]
		[Address(RVA = "0x133E3EC", Offset = "0x133E3EC", VA = "0x133E3EC")]
		internal void <BattleEnd>b__43_1()
		{
		}

		[Token(Token = "0x6002C49")]
		[Address(RVA = "0x133E5EC", Offset = "0x133E5EC", VA = "0x133E5EC")]
		internal void <BattleEnd>b__43_2()
		{
		}

		[Token(Token = "0x6002C4A")]
		[Address(RVA = "0x133E5F0", Offset = "0x133E5F0", VA = "0x133E5F0")]
		internal void <ReviveAllPlayer>b__47_0(WUnit unit)
		{
		}
	}

	[Token(Token = "0x20005A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4E20", Offset = "0xEE4E20")]
	private sealed class <>c__DisplayClass46_0
	{
		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool state;

		[Token(Token = "0x6002C4B")]
		[Address(RVA = "0x126BA5C", Offset = "0x126BA5C", VA = "0x126BA5C")]
		public <>c__DisplayClass46_0()
		{
		}

		[Token(Token = "0x6002C4C")]
		[Address(RVA = "0x126BA64", Offset = "0x126BA64", VA = "0x126BA64")]
		internal void <SetNoHurtStateAllUnit>b__0(WUnit unit)
		{
		}
	}

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7964", Offset = "0xEE7964")]
	private static bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool gRunning;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int gCounter;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static RoomStateAgent.eRoomState roomState;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static bool isFirstInGame;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Battle battle;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static BattleManager battleManager;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static BattleData battleData;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static NetworkStatusHandle GlobalNetworkStatus;

	[Token(Token = "0x1700012F")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x133AEC0", Offset = "0x133AEC0", VA = "0x133AEC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFF80", Offset = "0xEEFF80")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x133AF28", Offset = "0x133AF28", VA = "0x133AF28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFF90", Offset = "0xEEFF90")]
		set
		{
		}
	}

	[Token(Token = "0x17000130")]
	public static bool IsLogin
	{
		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x133AF98", Offset = "0x133AF98", VA = "0x133AF98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x133B00C", Offset = "0x133B00C", VA = "0x133B00C")]
		set
		{
		}
	}

	[Token(Token = "0x17000131")]
	public static bool GameStartStatus
	{
		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x133B088", Offset = "0x133B088", VA = "0x133B088")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000132")]
	public static RoomStateAgent.eRoomState CurrentGameRoomState
	{
		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x133B198", Offset = "0x133B198", VA = "0x133B198")]
		get
		{
			return default(RoomStateAgent.eRoomState);
		}
		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x133B200", Offset = "0x133B200", VA = "0x133B200")]
		set
		{
		}
	}

	[Token(Token = "0x17000133")]
	public static bool IsServer
	{
		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x1339530", Offset = "0x1339530", VA = "0x1339530")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000134")]
	public static e_Server_Type ServerType
	{
		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x133B26C", Offset = "0x133B26C", VA = "0x133B26C")]
		get
		{
			return default(e_Server_Type);
		}
	}

	[Token(Token = "0x17000135")]
	public static bool IsLive
	{
		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x13392A0", Offset = "0x13392A0", VA = "0x13392A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000136")]
	public static bool IsOnlyServer
	{
		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x133B2E4", Offset = "0x133B2E4", VA = "0x133B2E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000137")]
	public static string Version
	{
		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x133B374", Offset = "0x133B374", VA = "0x133B374")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000138")]
	public static string GameName
	{
		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x133B3EC", Offset = "0x133B3EC", VA = "0x133B3EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000139")]
	public static GameModeType GameMode
	{
		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x133B464", Offset = "0x133B464", VA = "0x133B464")]
		get
		{
			return default(GameModeType);
		}
	}

	[Token(Token = "0x1700013A")]
	public static Battle GlobalBattle
	{
		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x133B4DC", Offset = "0x133B4DC", VA = "0x133B4DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700013B")]
	public static BattleManager GlobalBattleManager
	{
		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x133B544", Offset = "0x133B544", VA = "0x133B544")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x133B5AC", Offset = "0x133B5AC", VA = "0x133B5AC")]
	public static BattleData GetBattleData()
	{
		return null;
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x133B614", Offset = "0x133B614", VA = "0x133B614")]
	public static void SetBattleData(BattleData _battleData)
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x133B684", Offset = "0x133B684", VA = "0x133B684")]
	public static void SetBattleInstance(Battle _battle, BattleManager _battleManager)
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x133B714", Offset = "0x133B714", VA = "0x133B714")]
	public static void BattleReady()
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x133C8D4", Offset = "0x133C8D4", VA = "0x133C8D4")]
	public static void BattleStart()
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x133CF58", Offset = "0x133CF58", VA = "0x133CF58")]
	private static float GetBattleTimeIndex(int level)
	{
		return default(float);
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x133CFE8", Offset = "0x133CFE8", VA = "0x133CFE8")]
	public static void BattleEnd()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x133D3C4", Offset = "0x133D3C4", VA = "0x133D3C4")]
	public static void StartVideo(bool status)
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x133D6A8", Offset = "0x133D6A8", VA = "0x133D6A8")]
	public static void StopVideo()
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x133C588", Offset = "0x133C588", VA = "0x133C588")]
	public static void SetNoHurtStateAllUnit(bool state)
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x133C6F4", Offset = "0x133C6F4", VA = "0x133C6F4")]
	private static void ReviveAllPlayer()
	{
	}

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x133D974", Offset = "0x133D974", VA = "0x133D974")]
	public static void RevivePlayer(WUnit unit, bool isPlayReviveAudio = false)
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x133DBB0", Offset = "0x133DBB0", VA = "0x133DBB0")]
	public GameWorld()
	{
	}
}
[Token(Token = "0x2000200")]
public class GuidTeleporter : MonoBehaviour
{
	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected List<CharacterMono> recordCharacterList;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool checkView;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float viewToTeleporter;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool passed;

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x126E42C", Offset = "0x126E42C", VA = "0x126E42C", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x126E620", Offset = "0x126E620", VA = "0x126E620")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x126E650", Offset = "0x126E650", VA = "0x126E650")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x126E6C0", Offset = "0x126E6C0", VA = "0x126E6C0", Slot = "5")]
	protected virtual void SetState(bool state)
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x126E6F4", Offset = "0x126E6F4", VA = "0x126E6F4", Slot = "6")]
	protected virtual bool CheckRightView()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x126E850", Offset = "0x126E850", VA = "0x126E850", Slot = "7")]
	public virtual bool CheckReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x126E934", Offset = "0x126E934", VA = "0x126E934", Slot = "8")]
	protected virtual void ServerCheckPlayerTrigger(Collider collider, bool enter)
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x126EA60", Offset = "0x126EA60", VA = "0x126EA60")]
	private CharacterMono GetCharMono(Collider collider)
	{
		return null;
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x126EBB8", Offset = "0x126EBB8", VA = "0x126EBB8")]
	public GuidTeleporter()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x126EC44", Offset = "0x126EC44", VA = "0x126EC44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFFA0", Offset = "0xEEFFA0")]
	private bool <Init>b__4_0(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x126ECFC", Offset = "0x126ECFC", VA = "0x126ECFC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFFB0", Offset = "0xEEFFB0")]
	private void <Init>b__4_1(Collider collider1)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x126ED0C", Offset = "0x126ED0C", VA = "0x126ED0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFFC0", Offset = "0xEEFFC0")]
	private bool <Init>b__4_2(Collider collider)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x126EDC4", Offset = "0x126EDC4", VA = "0x126EDC4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFFD0", Offset = "0xEEFFD0")]
	private void <Init>b__4_3(Collider collider1)
	{
	}
}
[Token(Token = "0x2000201")]
public class GuideController : MonoBehaviour
{
	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuideVideoPlayer VideoPlayer;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GuidTeleporter GuidTeleporter;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform LockSignRoot;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform SignPrefab;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private BattleRoomDoorLockSign LockSign;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform GuidToArrow;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Action playerVideoEnd;

	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x126F660", Offset = "0x126F660", VA = "0x126F660")]
	public void Init()
	{
	}

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x126FAA0", Offset = "0x126FAA0", VA = "0x126FAA0")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x126FAA4", Offset = "0x126FAA4", VA = "0x126FAA4")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x126FB90", Offset = "0x126FB90", VA = "0x126FB90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x126FAFC", Offset = "0x126FAFC", VA = "0x126FAFC")]
	public void ShowGuidTeleporter(bool isShow)
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x126FD04", Offset = "0x126FD04", VA = "0x126FD04")]
	public void PlayVideo(Action endCallBack)
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x126FAE4", Offset = "0x126FAE4", VA = "0x126FAE4")]
	public void StopVideo()
	{
	}

	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x126FF00", Offset = "0x126FF00", VA = "0x126FF00")]
	public void PlayEnd(VideoPlayer player)
	{
	}

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x126F7E0", Offset = "0x126F7E0", VA = "0x126F7E0")]
	private void InitGuidSign()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x126FB4C", Offset = "0x126FB4C", VA = "0x126FB4C")]
	public void ShowGuidSign(bool isShow)
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x126FF44", Offset = "0x126FF44", VA = "0x126FF44")]
	public void ShowSignProgress(bool isShow)
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x126FF68", Offset = "0x126FF68", VA = "0x126FF68")]
	public bool CheckSignCon()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x126FF88", Offset = "0x126FF88", VA = "0x126FF88")]
	public bool CheckSignOk()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x126FFA4", Offset = "0x126FFA4", VA = "0x126FFA4")]
	private void DoBeginSignCallBack(int roomId)
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x12701E4", Offset = "0x12701E4", VA = "0x12701E4")]
	private void DoBreakSignCallBack(int roomId)
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x126FB94", Offset = "0x126FB94", VA = "0x126FB94")]
	private void DoUpdateLockSign()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x1270038", Offset = "0x1270038", VA = "0x1270038")]
	public int GetFirstSignTriggerOwnerId()
	{
		return default(int);
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x127025C", Offset = "0x127025C", VA = "0x127025C")]
	public GuideController()
	{
	}
}
[Token(Token = "0x2000202")]
public enum e_GuideStepStatus
{
	[Token(Token = "0x4000D4A")]
	Stop,
	[Token(Token = "0x4000D4B")]
	Start,
	[Token(Token = "0x4000D4C")]
	DelayTime,
	[Token(Token = "0x4000D4D")]
	GuidVirtualDoor,
	[Token(Token = "0x4000D4E")]
	Video,
	[Token(Token = "0x4000D4F")]
	GuidEnd
}
[Token(Token = "0x2000203")]
public enum e_GuideTip_Type
{
	[Token(Token = "0x4000D51")]
	EnterStandPoint = 5,
	[Token(Token = "0x4000D52")]
	HitSignBall = 10,
	[Token(Token = "0x4000D53")]
	Video = 15,
	[Token(Token = "0x4000D54")]
	Select = 16,
	[Token(Token = "0x4000D55")]
	GotoRoomPoint = 20
}
[Token(Token = "0x2000204")]
public class GuideManager : Singleton<GuideManager>
{
	[Token(Token = "0x20005AA")]
	public class GuidTip
	{
		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsLoop;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsDelayClose;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Time;

		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioEvent aEvent;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string uiSay;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float preDelayTime;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float RunningTime;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isAudioFinish;

		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 playAudioPos;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WwiseDefine audioObj;

		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isPreDelay;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float posH;

		[Token(Token = "0x6002C4D")]
		[Address(RVA = "0x1271A50", Offset = "0x1271A50", VA = "0x1271A50")]
		public void Start(Vector3 pos, float posH)
		{
		}

		[Token(Token = "0x6002C4E")]
		[Address(RVA = "0x12718A4", Offset = "0x12718A4", VA = "0x12718A4")]
		public void Stop()
		{
		}

		[Token(Token = "0x6002C4F")]
		[Address(RVA = "0x127297C", Offset = "0x127297C", VA = "0x127297C")]
		public void AudioFinish()
		{
		}

		[Token(Token = "0x6002C50")]
		[Address(RVA = "0x12727AC", Offset = "0x12727AC", VA = "0x12727AC")]
		private void DoStart(Vector3 pos, float posH)
		{
		}

		[Token(Token = "0x6002C51")]
		[Address(RVA = "0x1272564", Offset = "0x1272564", VA = "0x1272564")]
		public void Update(float dltTime)
		{
		}

		[Token(Token = "0x6002C52")]
		[Address(RVA = "0x12719C0", Offset = "0x12719C0", VA = "0x12719C0")]
		public GuidTip()
		{
		}
	}

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool IsEnter;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool IsStart;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GuideController guidCtrl;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GuidTipUI tipUI;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private e_GuideStepStatus GuidStepStatus;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool signStatus;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float delayTime;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float delayRunningTime;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GuidTip curGuidTip;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float sayDelayTime;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float sayDelayRunningTime;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioEvent deathBackAudio;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WwiseDefine dbAudioObj;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string deathBackSay;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Coroutine deathBackGuidDelay;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float dbDelayTime;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string commonTempTipSay;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coroutine tempTipDelay;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float tempTipDelayTime;

	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x1270264", Offset = "0x1270264", VA = "0x1270264")]
	public void Enter()
	{
	}

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x1270544", Offset = "0x1270544", VA = "0x1270544")]
	public void Exit()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x1270698", Offset = "0x1270698", VA = "0x1270698")]
	public void Start()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x1270650", Offset = "0x1270650", VA = "0x1270650")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x12706E8", Offset = "0x12706E8", VA = "0x12706E8")]
	private void DoStart()
	{
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x12708CC", Offset = "0x12708CC", VA = "0x12708CC")]
	private void DoStop()
	{
	}

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x1270780", Offset = "0x1270780", VA = "0x1270780")]
	private void SendGuidStepStatus(e_GuideStepStatus stepStatus)
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x1270AB4", Offset = "0x1270AB4", VA = "0x1270AB4")]
	public void SyncGuidStepStatus(e_GuideStepStatus stepStatus)
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x12708B4", Offset = "0x12708B4", VA = "0x12708B4")]
	private void TimeDelayBegin()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x1271188", Offset = "0x1271188", VA = "0x1271188")]
	private void TimeDelayUpdate()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x12711DC", Offset = "0x12711DC", VA = "0x12711DC")]
	private void TimeDelayEnd()
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x12712BC", Offset = "0x12712BC", VA = "0x12712BC")]
	private void DoorLockSignEnd()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x12712F8", Offset = "0x12712F8", VA = "0x12712F8")]
	private void SayVideoUpdate()
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x1271354", Offset = "0x1271354", VA = "0x1271354")]
	private void SayVideoDelayEnd()
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x12713F8", Offset = "0x12713F8", VA = "0x12713F8")]
	public bool CheckVirtualDoorReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x1270964", Offset = "0x1270964", VA = "0x1270964")]
	public void ResetVirtualDoor()
	{
	}

	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x1270C04", Offset = "0x1270C04", VA = "0x1270C04")]
	public void SetSignActive(bool active)
	{
	}

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x12714B0", Offset = "0x12714B0", VA = "0x12714B0")]
	public void SetProgressActive(bool active)
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x1271444", Offset = "0x1271444", VA = "0x1271444")]
	public bool CheckTeleporterReady()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x1271470", Offset = "0x1271470", VA = "0x1271470")]
	private void ResetDoorLockSign()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x12714CC", Offset = "0x12714CC", VA = "0x12714CC")]
	private void UpdateCheckDoorLockSign()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x1271578", Offset = "0x1271578", VA = "0x1271578")]
	public void SyncSignStatus(int roomId, eDoor_LockSign_Net_Status status)
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x1271378", Offset = "0x1271378", VA = "0x1271378")]
	public void PlayVideoEnd()
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x1270C54", Offset = "0x1270C54", VA = "0x1270C54")]
	public void ShowGuidTip(e_GuideTip_Type type)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x1270504", Offset = "0x1270504", VA = "0x1270504")]
	public void StopGuidTip()
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x1271BD4", Offset = "0x1271BD4", VA = "0x1271BD4")]
	public void SetGuidTipUI(bool isActive, string say = "", float posH = 0f)
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x1271E94", Offset = "0x1271E94", VA = "0x1271E94")]
	public void ShowDeathBackGuid()
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x1271E98", Offset = "0x1271E98", VA = "0x1271E98")]
	private void DoShowDBGuid()
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x12708C8", Offset = "0x12708C8", VA = "0x12708C8")]
	public void HideDeathBackGuid()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x127211C", Offset = "0x127211C", VA = "0x127211C")]
	private void StopDBDelayCoroutine()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x1272070", Offset = "0x1272070", VA = "0x1272070")]
	private bool IsGameFighting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x12721A4", Offset = "0x12721A4", VA = "0x12721A4")]
	public void ShowCommonTempTip(bool isActive)
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x1272254", Offset = "0x1272254", VA = "0x1272254")]
	public void SetTempTip(bool isActive, string str)
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x1272444", Offset = "0x1272444", VA = "0x1272444")]
	public void SyncCommonTempTip(bool isActive)
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x1271110", Offset = "0x1271110", VA = "0x1271110")]
	private void GuidEnd()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x1272450", Offset = "0x1272450", VA = "0x1272450")]
	private void CharacterBackRoom(FlowNode node)
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x12717F8", Offset = "0x12717F8", VA = "0x12717F8")]
	private bool IsGameStatusEnd()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x1272454", Offset = "0x1272454", VA = "0x1272454")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x127268C", Offset = "0x127268C", VA = "0x127268C")]
	public GuideManager()
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x1272754", Offset = "0x1272754", VA = "0x1272754")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEFFE0", Offset = "0xEEFFE0")]
	private void <SetTempTip>b__52_0()
	{
	}
}
[Token(Token = "0x2000205")]
public class GuideVideoPlayer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4E30", Offset = "0xEE4E30")]
	private sealed class <>c
	{
		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<VideoPlayer> <>9__17_0;

		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<VideoPlayer> <>9__17_1;

		[Token(Token = "0x6002C54")]
		[Address(RVA = "0x12732B4", Offset = "0x12732B4", VA = "0x12732B4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C55")]
		[Address(RVA = "0x12732BC", Offset = "0x12732BC", VA = "0x12732BC")]
		internal void <.ctor>b__17_0(VideoPlayer <p0>)
		{
		}

		[Token(Token = "0x6002C56")]
		[Address(RVA = "0x12732C0", Offset = "0x12732C0", VA = "0x12732C0")]
		internal void <.ctor>b__17_1(VideoPlayer <p0>)
		{
		}
	}

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Root;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VideoPlayer videoPlayer;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string VideoName;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioEvent VAudio;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<VideoPlayer> OnStart;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action<VideoPlayer> OnEnd;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WwiseDefine audioObj;

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x1272988", Offset = "0x1272988", VA = "0x1272988")]
	private void Init()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x126F758", Offset = "0x126F758", VA = "0x126F758")]
	public void InitVideo()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x1272A8C", Offset = "0x1272A8C", VA = "0x1272A8C")]
	private void InitVideoLang(e_type_language language)
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x1272DBC", Offset = "0x1272DBC", VA = "0x1272DBC")]
	private void EndOneClip(VideoPlayer player)
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x1272F1C", Offset = "0x1272F1C", VA = "0x1272F1C")]
	private void _Play()
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x1272E20", Offset = "0x1272E20", VA = "0x1272E20")]
	private void _Stop()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x126FD38", Offset = "0x126FD38", VA = "0x126FD38")]
	public void Play()
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x126FEFC", Offset = "0x126FEFC", VA = "0x126FEFC")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x12730A4", Offset = "0x12730A4", VA = "0x12730A4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xEEFFF0", Offset = "0xEEFFF0")]
	private void Play1()
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x12730A8", Offset = "0x12730A8", VA = "0x12730A8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xEF0028", Offset = "0xEF0028")]
	private void Stop1()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x12730AC", Offset = "0x12730AC", VA = "0x12730AC")]
	public GuideVideoPlayer()
	{
	}
}
[Token(Token = "0x2000206")]
public class LiveManager : Singleton<LiveManager>
{
	[Serializable]
	[Token(Token = "0x20005AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4E40", Offset = "0xEE4E40")]
	private sealed class <>c
	{
		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<FlowNode> <>9__0_1;

		[Token(Token = "0x6002C58")]
		[Address(RVA = "0x14849BC", Offset = "0x14849BC", VA = "0x14849BC")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C59")]
		[Address(RVA = "0x14849C4", Offset = "0x14849C4", VA = "0x14849C4")]
		internal void <Init>b__0_1(FlowNode node)
		{
		}
	}

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WUnit PlayerUnit;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ILiveCameraDataCell cameraControl;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool SetFirstPersonCamera;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform handLeftModel;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform handRightModel;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator handAni_l;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator handAni_r;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlayerDeadRagdollTools ragdollTools;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isDie;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> preMashLayerList;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int changeSetMaskLayer;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private EffectDefine momentumEffect;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private EffectDefine momentumAddEffect;

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x1482E50", Offset = "0x1482E50", VA = "0x1482E50")]
	public void Init()
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x1483280", Offset = "0x1483280", VA = "0x1483280")]
	public void UnInit()
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x14834CC", Offset = "0x14834CC", VA = "0x14834CC")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x1483930", Offset = "0x1483930", VA = "0x1483930")]
	private void FirstPersonMode_Start(int site, ILiveCameraDataCell control)
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x1484094", Offset = "0x1484094", VA = "0x1484094")]
	private void playerStyleChange()
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x148419C", Offset = "0x148419C", VA = "0x148419C")]
	private void UnPlayerStyleChange()
	{
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x148429C", Offset = "0x148429C", VA = "0x148429C")]
	private void OnPlayerLayer(WUnit player)
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x1483EC4", Offset = "0x1483EC4", VA = "0x1483EC4")]
	private void OnWeaponChange()
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x14842D8", Offset = "0x14842D8", VA = "0x14842D8")]
	private void OnWeaponClear(WUnit unit)
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x1483CC8", Offset = "0x1483CC8", VA = "0x1483CC8")]
	private void SetPlayerRenderActive(WUnit player, bool isActive)
	{
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x1484430", Offset = "0x1484430", VA = "0x1484430")]
	private void FirstPersonMode_State()
	{
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x1484434", Offset = "0x1484434", VA = "0x1484434")]
	private void FirstPersonMode_StateClear()
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x1483284", Offset = "0x1483284", VA = "0x1483284")]
	private void FirstPersonMode_Clear()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x1484540", Offset = "0x1484540", VA = "0x1484540")]
	private void FirstPersonMode_Hit(WUnit hurter, HitResultData data)
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x1484498", Offset = "0x1484498", VA = "0x1484498")]
	private void FirstPersonMode_HitClear()
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x1484708", Offset = "0x1484708", VA = "0x1484708")]
	private void FirstPersonMode_Die(int playerId)
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x1484728", Offset = "0x1484728", VA = "0x1484728")]
	private void FirstPersonMode_DieClear(WUnit unit)
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x1484528", Offset = "0x1484528", VA = "0x1484528")]
	private void FirstPersonMode_DieClear()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x148474C", Offset = "0x148474C", VA = "0x148474C")]
	public void FirstPersonMode_ReviveUI(int playerId)
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x14834D0", Offset = "0x14834D0", VA = "0x14834D0")]
	private void FirstPersonMode_Update()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x1483E8C", Offset = "0x1483E8C", VA = "0x1483E8C")]
	public void SetCurPlayerWeaponActive(bool isActive)
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x148476C", Offset = "0x148476C", VA = "0x148476C")]
	public LiveManager()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x1484834", Offset = "0x1484834", VA = "0x1484834")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0060", Offset = "0xEF0060")]
	private void <Init>b__0_2(e_LiveCamera_Model_Type type, int site, LiveCameraConfigData data, ILiveCameraDataCell control)
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x14848F0", Offset = "0x14848F0", VA = "0x14848F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0070", Offset = "0xEF0070")]
	private void <Init>b__0_3(e_LiveCamera_Model_Type type, int site, LiveCameraConfigData data)
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x14848F4", Offset = "0x14848F4", VA = "0x14848F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0080", Offset = "0xEF0080")]
	private void <Init>b__0_0(e_type_role type, WUnit attacker, WUnit hurter, HitResultData r)
	{
	}
}
[Token(Token = "0x2000207")]
public class RoomStateAgent
{
	[Token(Token = "0x20005AD")]
	public enum eRoomState
	{
		[Token(Token = "0x40020A0")]
		None,
		[Token(Token = "0x40020A1")]
		Ready,
		[Token(Token = "0x40020A2")]
		Movie,
		[Token(Token = "0x40020A3")]
		Fighting,
		[Token(Token = "0x40020A4")]
		FightEnd,
		[Token(Token = "0x40020A5")]
		FightStart
	}

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private RoomBaseState activeState;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private eRoomState activeStateType;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<eRoomState, RoomBaseState> stateList;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private eRoomState preStateType;

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x13C0280", Offset = "0x13C0280", VA = "0x13C0280")]
	public eRoomState STPreStateType()
	{
		return default(eRoomState);
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x13C0288", Offset = "0x13C0288", VA = "0x13C0288")]
	public void Init(Battle battle, ServerBattleRoom battleRoom)
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x13C056C", Offset = "0x13C056C", VA = "0x13C056C")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x13C0584", Offset = "0x13C0584", VA = "0x13C0584")]
	public void DoFixUpdate(float fixDeltaTime)
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x13C059C", Offset = "0x13C059C", VA = "0x13C059C")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x13C05B4", Offset = "0x13C05B4", VA = "0x13C05B4")]
	private void DoStateExit()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x13C05F4", Offset = "0x13C05F4", VA = "0x13C05F4")]
	private void DoInit()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x13C04D4", Offset = "0x13C04D4", VA = "0x13C04D4")]
	private void Register(eRoomState type, RoomBaseState st)
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x13C060C", Offset = "0x13C060C", VA = "0x13C060C")]
	private void UnRegister(eRoomState type)
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x13C05DC", Offset = "0x13C05DC", VA = "0x13C05DC")]
	public eRoomState GetStateType()
	{
		return default(eRoomState);
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x13C0704", Offset = "0x13C0704", VA = "0x13C0704")]
	private RoomBaseState GetState()
	{
		return null;
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x13C070C", Offset = "0x13C070C", VA = "0x13C070C")]
	private RoomBaseState GetStateByType(eRoomState type)
	{
		return null;
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x13C0790", Offset = "0x13C0790", VA = "0x13C0790")]
	private void SetActiveState(eRoomState nextType)
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x13C069C", Offset = "0x13C069C", VA = "0x13C069C")]
	private bool IsHasState(eRoomState nextType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x13C0820", Offset = "0x13C0820", VA = "0x13C0820")]
	public void ChangeRoomState(eRoomState _nextState)
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x13C088C", Offset = "0x13C088C", VA = "0x13C088C")]
	public RoomStateAgent()
	{
	}
}
[Token(Token = "0x2000208")]
public class NPCSpawnManager : Singleton<NPCSpawnManager>
{
	[Token(Token = "0x20005AE")]
	public struct SpawnPointInfo
	{
		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int groupId;

		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform transform;
	}

	[Token(Token = "0x20005AF")]
	public class SoldierNumberInfo
	{
		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private e_group_type groupId;

		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int count;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int maxCount;

		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int coolingTime;

		[Token(Token = "0x1700045B")]
		public e_group_type GroupId
		{
			[Token(Token = "0x6002C5A")]
			[Address(RVA = "0x13853C8", Offset = "0x13853C8", VA = "0x13853C8")]
			get
			{
				return default(e_group_type);
			}
			[Token(Token = "0x6002C5B")]
			[Address(RVA = "0x13853D0", Offset = "0x13853D0", VA = "0x13853D0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700045C")]
		public int Count
		{
			[Token(Token = "0x6002C5C")]
			[Address(RVA = "0x13853D8", Offset = "0x13853D8", VA = "0x13853D8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002C5D")]
			[Address(RVA = "0x13853E0", Offset = "0x13853E0", VA = "0x13853E0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700045D")]
		public int CoolingTime
		{
			[Token(Token = "0x6002C5E")]
			[Address(RVA = "0x13853E8", Offset = "0x13853E8", VA = "0x13853E8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002C5F")]
			[Address(RVA = "0x13853F0", Offset = "0x13853F0", VA = "0x13853F0")]
			private set
			{
			}
		}

		[Token(Token = "0x6002C60")]
		[Address(RVA = "0x13853F8", Offset = "0x13853F8", VA = "0x13853F8")]
		public SoldierNumberInfo(e_group_type _groupId, int _maxcount)
		{
		}

		[Token(Token = "0x6002C61")]
		[Address(RVA = "0x1385434", Offset = "0x1385434", VA = "0x1385434")]
		public bool isMax()
		{
			return default(bool);
		}

		[Token(Token = "0x6002C62")]
		[Address(RVA = "0x1385444", Offset = "0x1385444", VA = "0x1385444")]
		public void add()
		{
		}

		[Token(Token = "0x6002C63")]
		[Address(RVA = "0x1385454", Offset = "0x1385454", VA = "0x1385454")]
		public void reduce()
		{
		}

		[Token(Token = "0x6002C64")]
		[Address(RVA = "0x1385464", Offset = "0x1385464", VA = "0x1385464")]
		public void setCoolingTime(int time)
		{
		}

		[Token(Token = "0x6002C65")]
		[Address(RVA = "0x138546C", Offset = "0x138546C", VA = "0x138546C")]
		public void UpdateCoolingTime(int millisDeltaTime)
		{
		}

		[Token(Token = "0x6002C66")]
		[Address(RVA = "0x13854FC", Offset = "0x13854FC", VA = "0x13854FC")]
		public bool isCoolingEnd()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005B0")]
	public class Soldier3SpawnPathInfo
	{
		[Token(Token = "0x200096C")]
		public class CoolTime
		{
			[Token(Token = "0x4002376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public e_group_type groupType;

			[Token(Token = "0x4002377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int timer;

			[Token(Token = "0x60031AB")]
			[Address(RVA = "0x1385180", Offset = "0x1385180", VA = "0x1385180")]
			public CoolTime()
			{
			}
		}

		[Token(Token = "0x200096D")]
		public class GroupInfoCell
		{
			[Token(Token = "0x60031AC")]
			[Address(RVA = "0x13853C0", Offset = "0x13853C0", VA = "0x13853C0")]
			public GroupInfoCell()
			{
			}
		}

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpawnPathInfo spawnPathInfo;

		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<e_group_type> groupList;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<e_group_type, int> curPointDic;

		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<e_group_type, int> canMovePointDic;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<e_group_type, bool> curSpawnInfo;

		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dictionary<e_group_type, WUnit> curUnitInfo;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<e_group_type, bool> curSuppressStatusDic;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<CoolTime> coolingTimes;

		[Token(Token = "0x6002C67")]
		[Address(RVA = "0x138314C", Offset = "0x138314C", VA = "0x138314C")]
		public void Init(SpawnPathInfo _spawnPathInfo)
		{
		}

		[Token(Token = "0x6002C68")]
		[Address(RVA = "0x1382AA4", Offset = "0x1382AA4", VA = "0x1382AA4")]
		public bool CheckIsCanMove(e_group_type groupType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C69")]
		[Address(RVA = "0x1382C6C", Offset = "0x1382C6C", VA = "0x1382C6C")]
		public int GetMovePoint(e_group_type groupType)
		{
			return default(int);
		}

		[Token(Token = "0x6002C6A")]
		[Address(RVA = "0x1382EF0", Offset = "0x1382EF0", VA = "0x1382EF0")]
		public void SetCurPoint(e_group_type groupType, int id)
		{
		}

		[Token(Token = "0x6002C6B")]
		[Address(RVA = "0x13845EC", Offset = "0x13845EC", VA = "0x13845EC")]
		private bool isCoolingEnd(e_group_type gType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C6C")]
		[Address(RVA = "0x1384704", Offset = "0x1384704", VA = "0x1384704")]
		public bool CheckIsSpawn(e_group_type groupType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C6D")]
		[Address(RVA = "0x138479C", Offset = "0x138479C", VA = "0x138479C")]
		public bool CheckSelfSuppressStatus(e_group_type selfGroupType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C6E")]
		[Address(RVA = "0x1382870", Offset = "0x1382870", VA = "0x1382870")]
		public bool CheckIsSuppressHostile(e_group_type selfGroupType)
		{
			return default(bool);
		}

		[Token(Token = "0x6002C6F")]
		[Address(RVA = "0x1384820", Offset = "0x1384820", VA = "0x1384820")]
		public int GetSpawnPointId(e_group_type groupType)
		{
			return default(int);
		}

		[Token(Token = "0x6002C70")]
		[Address(RVA = "0x1384838", Offset = "0x1384838", VA = "0x1384838")]
		public int GetModleId(e_group_type groupType)
		{
			return default(int);
		}

		[Token(Token = "0x6002C71")]
		[Address(RVA = "0x138484C", Offset = "0x138484C", VA = "0x138484C")]
		private void Spawn(e_group_type groupType)
		{
		}

		[Token(Token = "0x6002C72")]
		[Address(RVA = "0x1384924", Offset = "0x1384924", VA = "0x1384924")]
		public void Destory(WUnit unit)
		{
		}

		[Token(Token = "0x6002C73")]
		[Address(RVA = "0x1383B00", Offset = "0x1383B00", VA = "0x1383B00")]
		public void AddUnit(WUnit unit)
		{
		}

		[Token(Token = "0x6002C74")]
		[Address(RVA = "0x1382994", Offset = "0x1382994", VA = "0x1382994")]
		public WUnit GetTargetUnit(e_group_type groupType)
		{
			return null;
		}

		[Token(Token = "0x6002C75")]
		[Address(RVA = "0x1385010", Offset = "0x1385010", VA = "0x1385010")]
		private void OnDeadCB(WUnit unit)
		{
		}

		[Token(Token = "0x6002C76")]
		[Address(RVA = "0x13850F0", Offset = "0x13850F0", VA = "0x13850F0")]
		private void SetCoolingTime(e_group_type gType, int time)
		{
		}

		[Token(Token = "0x6002C77")]
		[Address(RVA = "0x13849C4", Offset = "0x13849C4", VA = "0x13849C4")]
		private void SetMovePoint(e_group_type destoryGroupType)
		{
		}

		[Token(Token = "0x6002C78")]
		[Address(RVA = "0x138330C", Offset = "0x138330C", VA = "0x138330C")]
		public void Update(int millisDeltaTime)
		{
		}

		[Token(Token = "0x6002C79")]
		[Address(RVA = "0x1385188", Offset = "0x1385188", VA = "0x1385188")]
		private void UpdateCoolingTime(int millisDeltaTime)
		{
		}

		[Token(Token = "0x6002C7A")]
		[Address(RVA = "0x13852A0", Offset = "0x13852A0", VA = "0x13852A0")]
		private void UpdateSpawn()
		{
		}

		[Token(Token = "0x6002C7B")]
		[Address(RVA = "0x1384E08", Offset = "0x1384E08", VA = "0x1384E08")]
		private void UpdateSuppressStatus()
		{
		}

		[Token(Token = "0x6002C7C")]
		[Address(RVA = "0x1382FB0", Offset = "0x1382FB0", VA = "0x1382FB0")]
		public Soldier3SpawnPathInfo()
		{
		}
	}

	[Token(Token = "0x20005B1")]
	public class SpawnPathInfo
	{
		[Serializable]
		[Token(Token = "0x200096E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5234", Offset = "0xEE5234")]
		private sealed class <>c
		{
			[Token(Token = "0x4002378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<int> <>9__4_0;

			[Token(Token = "0x60031AE")]
			[Address(RVA = "0x1385574", Offset = "0x1385574", VA = "0x1385574")]
			public <>c()
			{
			}

			[Token(Token = "0x60031AF")]
			[Address(RVA = "0x138557C", Offset = "0x138557C", VA = "0x138557C")]
			internal int <Init>b__4_0(int x, int y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int pathId;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> spawnList;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Dictionary<int, List<int>> groupPathDic;

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<int, int> groupSpawnPoint;

		[Token(Token = "0x6002C7D")]
		[Address(RVA = "0x1383E3C", Offset = "0x1383E3C", VA = "0x1383E3C")]
		public void Init()
		{
		}

		[Token(Token = "0x6002C7E")]
		[Address(RVA = "0x138456C", Offset = "0x138456C", VA = "0x138456C")]
		public int GetSpawnPoint(int groupId)
		{
			return default(int);
		}

		[Token(Token = "0x6002C7F")]
		[Address(RVA = "0x1383D58", Offset = "0x1383D58", VA = "0x1383D58")]
		public SpawnPathInfo()
		{
		}
	}

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isStart;

	[Token(Token = "0x4000D82")]
	private const int Soldier1_Id_a = 4401001;

	[Token(Token = "0x4000D83")]
	private const int Soldier2_Id_a = 4403001;

	[Token(Token = "0x4000D84")]
	private const int Soldier3_Id_a = 4404001;

	[Token(Token = "0x4000D85")]
	private const int Commander_Id_a = 4402001;

	[Token(Token = "0x4000D86")]
	private const int Soldier1_Id_b = 4401002;

	[Token(Token = "0x4000D87")]
	private const int Soldier2_Id_b = 4403002;

	[Token(Token = "0x4000D88")]
	private const int Soldier3_Id_b = 4404002;

	[Token(Token = "0x4000D89")]
	private const int Commander_Id_b = 4402002;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, SpawnPointInfo> spawnCommanderTransHash;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, List<int>> commanderSpawnTransGroupDic;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<e_group_type> deadCommanderGroupList;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, SpawnPointInfo> soldierSpawnTransHash;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, List<int>> soldierSpawnTransGroupDic;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<SoldierNumberInfo> soldierGroundNumberInfoList;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<int, SpawnPointInfo> soldier2SpawnTransHash;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<int, List<int>> soldier2SpawnTransGroupDic;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<SoldierNumberInfo> soldier2NumberInfoList;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int soldierGroundMaxCount;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Soldier3SpawnPathInfo> Soldier3SpawnPathInfoList;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<int, Soldier3SpawnPathInfo> Soldier3SpawnPathInfoDic;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<WUnit, Soldier3SpawnPathInfo> Soldier3UnitSpawnPathInfoDic;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<HostServer.NpcSpawnInfo> tempNPCSpawnList;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<int, List<Transform>> soldierGroundTargetPointDic;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Dictionary<int, SpawnPathInfo> Soldier3SpawnInfoHash;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<int, Transform> Soldier3SpawnTransHash;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<int, int> pointToPathDic;

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x137FE80", Offset = "0x137FE80", VA = "0x137FE80")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x1381AF8", Offset = "0x1381AF8", VA = "0x1381AF8")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x1381B00", Offset = "0x1381B00", VA = "0x1381B00")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x1381EE0", Offset = "0x1381EE0", VA = "0x1381EE0")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x1381EE8", Offset = "0x1381EE8", VA = "0x1381EE8")]
	public void DoUpdate(int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x1381B2C", Offset = "0x1381B2C", VA = "0x1381B2C")]
	private void ProcessorSpawnCommander()
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x1382444", Offset = "0x1382444", VA = "0x1382444")]
	private void OnCommanderDeadCB(WUnit unit)
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x1382550", Offset = "0x1382550", VA = "0x1382550")]
	private bool CheckCommanderDead(e_group_type gType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x13822C4", Offset = "0x13822C4", VA = "0x13822C4")]
	private int RandomCommanderSpawnPoint(int groupId)
	{
		return default(int);
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x13825B8", Offset = "0x13825B8", VA = "0x13825B8")]
	private void OnSoldierDeadCB(WUnit unit)
	{
	}

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x1382688", Offset = "0x1382688", VA = "0x1382688")]
	private void OnSoldier2DeadCB(WUnit unit)
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x1382758", Offset = "0x1382758", VA = "0x1382758")]
	public Soldier3SpawnPathInfo GetSpawnPathRTInfo(int pointId)
	{
		return null;
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x13827D8", Offset = "0x13827D8", VA = "0x13827D8")]
	public bool CheckSoldier3IsSuppressOtherGroup(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x13828F8", Offset = "0x13828F8", VA = "0x13828F8")]
	public WUnit GetSoldier3Target(WUnit unit, e_group_type type)
	{
		return null;
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x1382A0C", Offset = "0x1382A0C", VA = "0x1382A0C")]
	public bool CheckSoldier3IsCanMove(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x1382B34", Offset = "0x1382B34", VA = "0x1382B34")]
	public Transform GetSoldier3MovePoint(WUnit unit)
	{
		return null;
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x1382CD4", Offset = "0x1382CD4", VA = "0x1382CD4")]
	private int GetSoldier3SpawnTransId(Transform point)
	{
		return default(int);
	}

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x1382E3C", Offset = "0x1382E3C", VA = "0x1382E3C")]
	public void SetSoldier3SuppressPoint(WUnit unit, Transform point)
	{
	}

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x1381BD0", Offset = "0x1381BD0", VA = "0x1381BD0")]
	private void ProcessorSoldierInit()
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x1381F0C", Offset = "0x1381F0C", VA = "0x1381F0C")]
	private void ProcessorSpawnSoldier(int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x1383340", Offset = "0x1383340", VA = "0x1383340")]
	private int RandomGroundSoldierSpawnPoint(int groupId)
	{
		return default(int);
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x13833FC", Offset = "0x13833FC", VA = "0x13833FC")]
	private int RandomSoldier2SpawnPoint(int groupId)
	{
		return default(int);
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x1382380", Offset = "0x1382380", VA = "0x1382380")]
	private void AddSpawnNPCList(int npcId, int spawnPointId, int groupId)
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x1382018", Offset = "0x1382018", VA = "0x1382018")]
	private void ProcessorSpawnNPCNet()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x137FFDC", Offset = "0x137FFDC", VA = "0x137FFDC")]
	private void InitCommanderSpawnTransHash(Transform parentNode)
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x138055C", Offset = "0x138055C", VA = "0x138055C")]
	private void InitSpawnTransHash(Transform parentNode)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x1380ADC", Offset = "0x1380ADC", VA = "0x1380ADC")]
	private void InitSoldierGroundTargetTransHash(Transform parentNode)
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x1380F78", Offset = "0x1380F78", VA = "0x1380F78")]
	private void InitSoldier2SpawnTransHash(Transform parentNode)
	{
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x1383C28", Offset = "0x1383C28", VA = "0x1383C28")]
	public Transform RandomSoldierGroundTargetPoint(int groupId)
	{
		return null;
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x13814F8", Offset = "0x13814F8", VA = "0x13814F8")]
	private void InitSoldier3SpawnTransHash(Transform parentNode)
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x13834B8", Offset = "0x13834B8", VA = "0x13834B8")]
	public WUnit SpawnNPC(int objId, int npcId, int spawnPointId, int groupId)
	{
		return null;
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x13841AC", Offset = "0x13841AC", VA = "0x13841AC")]
	public NPCSpawnManager()
	{
	}
}
[Token(Token = "0x2000209")]
public class ServerBattleManager : Singleton<ServerBattleManager>
{
	[Token(Token = "0x4000D9C")]
	private const int SPAWN_START_PLAYER_ID = 1;

	[Token(Token = "0x4000D9D")]
	private const int SPAWN_START_AI_PLAYER_ID = 100;

	[Token(Token = "0x4000D9E")]
	private const int SPAWN_START_MONSTER_ID = 1000000;

	[Token(Token = "0x4000D9F")]
	private const int SPAWN_START_NPC_ID = 2000000;

	[Token(Token = "0x4000DA0")]
	private const int SPAWN_START_BUFF_ID = 3000000;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int playerId;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int aiPlayerId;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int monsterId;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int npcId;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int buffId;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ServerBattleRoom _battleRoom;

	[Token(Token = "0x1700013C")]
	public ServerBattleRoom BattleRoom
	{
		[Token(Token = "0x6000EF7")]
		[Address(RVA = "0x125975C", Offset = "0x125975C", VA = "0x125975C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x1259508", Offset = "0x1259508", VA = "0x1259508")]
	public int GetSpawnPlayerID()
	{
		return default(int);
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x12595D4", Offset = "0x12595D4", VA = "0x12595D4")]
	public int GetSpawnAIPlayerID()
	{
		return default(int);
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x12596A0", Offset = "0x12596A0", VA = "0x12596A0")]
	public int GetSpawnMonsterID()
	{
		return default(int);
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x12596B4", Offset = "0x12596B4", VA = "0x12596B4")]
	public int GetSpawnNpcID()
	{
		return default(int);
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x12596C8", Offset = "0x12596C8", VA = "0x12596C8")]
	public int GetSpawnBuffID()
	{
		return default(int);
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x12596DC", Offset = "0x12596DC", VA = "0x12596DC")]
	public void ResetObjectID()
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x12596F8", Offset = "0x12596F8", VA = "0x12596F8")]
	public bool IsPlayer(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x1259708", Offset = "0x1259708", VA = "0x1259708")]
	public bool IsRealityPlayer(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x1259718", Offset = "0x1259718", VA = "0x1259718")]
	public bool IsAIPlayer(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x1259728", Offset = "0x1259728", VA = "0x1259728")]
	public bool IsMonster(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x1259748", Offset = "0x1259748", VA = "0x1259748")]
	public bool IsNpc(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x1259764", Offset = "0x1259764", VA = "0x1259764")]
	public void CreateBattleRoom(Battle battle)
	{
	}

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x12599BC", Offset = "0x12599BC", VA = "0x12599BC")]
	private void DoRoomInit()
	{
	}

	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x1259BEC", Offset = "0x1259BEC", VA = "0x1259BEC")]
	public void DoRoomExit()
	{
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x1259E34", Offset = "0x1259E34", VA = "0x1259E34")]
	public void DoRoomUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x1259E64", Offset = "0x1259E64", VA = "0x1259E64")]
	public void DoRoomFixedUpdate()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x1259EB8", Offset = "0x1259EB8", VA = "0x1259EB8")]
	public void DoRoomLateUpdate()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x1259EE8", Offset = "0x1259EE8", VA = "0x1259EE8")]
	public ServerBattleManager()
	{
	}
}
[Token(Token = "0x200020A")]
public class ServerBattleRoom
{
	[Token(Token = "0x20005B2")]
	public class PlayerReviveData
	{
		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float reviveTimer;

		[Token(Token = "0x6002C80")]
		[Address(RVA = "0x125A394", Offset = "0x125A394", VA = "0x125A394")]
		public PlayerReviveData(WUnit _unit, float _reviveTimer)
		{
		}
	}

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Battle battle;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RoomStateAgent roomStateAgent;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<PlayerReviveData> playerResurgenceTimer;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public e_group_type winGroup;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameDiffculty gameDiffculty;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<WUnit> joinGamePlayerList;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<HostServer.UnitTransform> tempUnitTransformList;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<HostServer.UpdateAimIKInfoCell> tempUpdateAimIKInfoCellList;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isPlayVideo;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool isEnd;

	[Token(Token = "0x1700013D")]
	public bool isStartFight
	{
		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x125A014", Offset = "0x125A014", VA = "0x125A014")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x1259834", Offset = "0x1259834", VA = "0x1259834")]
	public ServerBattleRoom(Battle _battle)
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x12599CC", Offset = "0x12599CC", VA = "0x12599CC")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x1259E50", Offset = "0x1259E50", VA = "0x1259E50")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x1259EA4", Offset = "0x1259EA4", VA = "0x1259EA4")]
	public void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x1259ED4", Offset = "0x1259ED4", VA = "0x1259ED4")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x1259C20", Offset = "0x1259C20", VA = "0x1259C20")]
	public void DoExit()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x1259F70", Offset = "0x1259F70", VA = "0x1259F70")]
	public void ChangeRoomState(RoomStateAgent.eRoomState nextState)
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x125A040", Offset = "0x125A040", VA = "0x125A040")]
	public RoomStateAgent.eRoomState GetCurRoomState()
	{
		return default(RoomStateAgent.eRoomState);
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x125A054", Offset = "0x125A054", VA = "0x125A054")]
	public void OnStartOrStopGame(bool playVideo)
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x125A118", Offset = "0x125A118", VA = "0x125A118")]
	private void Instance_GameStatusEvent(bool videoStatus)
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x125A120", Offset = "0x125A120", VA = "0x125A120")]
	private void Instance_controlServerUI()
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x125A298", Offset = "0x125A298", VA = "0x125A298")]
	private void Instance_skinCutScenes()
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x125A38C", Offset = "0x125A38C", VA = "0x125A38C")]
	private void Instance_startOrStopGame()
	{
	}
}
[Token(Token = "0x200020B")]
public class ServerHitManager
{
	[Token(Token = "0x20005B3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4E50", Offset = "0xEE4E50")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit attacker;

		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WUnit hurter;

		[Token(Token = "0x6002C81")]
		[Address(RVA = "0x125C704", Offset = "0x125C704", VA = "0x125C704")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002C82")]
		[Address(RVA = "0x125DCF8", Offset = "0x125DCF8", VA = "0x125DCF8")]
		internal void <ProcessingHitDamageNotify_Monster>b__0(WUnit unit)
		{
		}

		[Token(Token = "0x6002C83")]
		[Address(RVA = "0x125DF78", Offset = "0x125DF78", VA = "0x125DF78")]
		internal void <ProcessingHitDamageNotify_Monster>b__1()
		{
		}

		[Token(Token = "0x6002C84")]
		[Address(RVA = "0x125E038", Offset = "0x125E038", VA = "0x125E038")]
		internal void <ProcessingHitDamageNotify_Monster>b__2()
		{
		}
	}

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<e_type_role, WUnit, WUnit, HitResultData> hitMessage;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Action<e_type_role, WUnit, WUnit, HitResultData> hitPreMessage;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Func<WUnit, WUnit, int, int> damageProxy;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<e_HitEffect_type> tempTypes;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Array typeValues;

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x125A3DC", Offset = "0x125A3DC", VA = "0x125A3DC")]
	public static bool BulletHit(Bullet bullet, Vector3 hitPos, GameObject targetObject, int bulletDamage = -1)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x125AB28", Offset = "0x125AB28", VA = "0x125AB28")]
	private static bool CheckCanProcessingAttacks(WUnit attacker, WUnit hueter)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x125B024", Offset = "0x125B024", VA = "0x125B024")]
	public static bool MonsterSuicide(WUnit suicide)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x125B418", Offset = "0x125B418", VA = "0x125B418")]
	public static bool UnitHurt(WUnit attacker, WUnit hurter, int damage)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x125B8F4", Offset = "0x125B8F4", VA = "0x125B8F4")]
	public static bool MonsterAttack(WUnit attacker, WUnit target, int damage, Vector3 hitPos, Vector3 dir, e_Attack_type atkType = e_Attack_type.Normal, e_HitEffect_type effectType = e_HitEffect_type.Normal, bool isGroupDamage = true)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x125BB00", Offset = "0x125BB00", VA = "0x125BB00")]
	public static void ProcessingHitDamageNotify_Monster(WUnit hurter, WUnit attacker, HitResultData hitData)
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x125CACC", Offset = "0x125CACC", VA = "0x125CACC")]
	public static void ProcessingHitDamageNotify_Hero(WUnit hurter, WUnit attacker, HitResultData hitData)
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x125D2A4", Offset = "0x125D2A4", VA = "0x125D2A4")]
	public static void ProcessingHitDamageNotify_Npc(WUnit hurter, WUnit attacker, HitResultData hitData)
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x125C718", Offset = "0x125C718", VA = "0x125C718")]
	public static void HitHeroFloating(WUnit hurter, WUnit attacker, HitResultData hitData)
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x125D2A8", Offset = "0x125D2A8", VA = "0x125D2A8")]
	public static void HitHeroExpFloating(WUnit handleUnit, WUnit hurter, int exp)
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x125D644", Offset = "0x125D644", VA = "0x125D644")]
	public static void HandleS2CHitDamageNotify(HitResultData hitData)
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x125AD14", Offset = "0x125AD14", VA = "0x125AD14")]
	public static void HandleC2SHitDamageNotify(HitResultData hitData)
	{
	}

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x125D938", Offset = "0x125D938", VA = "0x125D938")]
	private static bool GetEnumToOne(e_HitEffect_type type, out e_HitEffect_type doType)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x125D298", Offset = "0x125D298", VA = "0x125D298")]
	public static bool CheckAttackType(e_Attack_type source, e_Attack_type checkValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x125C70C", Offset = "0x125C70C", VA = "0x125C70C")]
	public static bool CheckHitEffectType(e_HitEffect_type source, e_HitEffect_type checkValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x125AC48", Offset = "0x125AC48", VA = "0x125AC48")]
	public static bool CheckGroupDamage(WUnit attacker, WUnit hurter)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x125DC78", Offset = "0x125DC78", VA = "0x125DC78")]
	public ServerHitManager()
	{
	}
}
[Token(Token = "0x200020C")]
public struct AreaSpawnInfo
{
	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int id;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int monsterId;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int time;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int areaId;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int pointId;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int spawnCount;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int wave;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int suicideDelayTime;
}
[Token(Token = "0x200020D")]
public enum AreaType
{
	[Token(Token = "0x4000DBF")]
	Monster,
	[Token(Token = "0x4000DC0")]
	End,
	[Token(Token = "0x4000DC1")]
	NoLimitMonster,
	[Token(Token = "0x4000DC2")]
	Action
}
[Token(Token = "0x200020E")]
public class AreaWaveInfoData
{
	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int wave;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AreaSpawnInfo areaInfo;

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x155A590", Offset = "0x155A590", VA = "0x155A590")]
	public AreaWaveInfoData()
	{
	}
}
[Token(Token = "0x200020F")]
public class AreaInfoData
{
	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int time;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int spawnDataIndex;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isFin;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AreaType type;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool isAreaPos;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Vector3 position;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public Quaternion rotation;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dictionary<int, List<AreaSpawnInfo>> areaWave;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int areaWaveIndex;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<AreaSpawnInfo> curWaveInfoList;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float areaWaveBeginTime;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<AreaSpawnInfo> spanwDataList;

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x1559CA4", Offset = "0x1559CA4", VA = "0x1559CA4")]
	public AreaInfoData(int areaId, List<AreaSpawnInfo> spawnData)
	{
	}

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x1559ED0", Offset = "0x1559ED0", VA = "0x1559ED0")]
	public AreaSpawnInfo GetSpawnData()
	{
		return default(AreaSpawnInfo);
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x1559F50", Offset = "0x1559F50", VA = "0x1559F50")]
	public bool IsFirstWave()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x1559F60", Offset = "0x1559F60", VA = "0x1559F60")]
	public bool IsEndWave()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x1559FC8", Offset = "0x1559FC8", VA = "0x1559FC8")]
	public void ChangeNextWave()
	{
	}

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x155A0CC", Offset = "0x155A0CC", VA = "0x155A0CC")]
	public bool IsWaveSpawnFin()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x155A12C", Offset = "0x155A12C", VA = "0x155A12C")]
	public bool IsSpawnFin()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000210")]
public class AreaInfo : MonoBehaviour
{
	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int id;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AreaType type;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> spawnPointRoots;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int time;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public int spawnDataIndex;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool isSpawnFin;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent enterEvent;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<EludePoint> eludePointList;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static char[] numChar;

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x1559A34", Offset = "0x1559A34", VA = "0x1559A34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x1559BF4", Offset = "0x1559BF4", VA = "0x1559BF4")]
	public void ResetArea()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x1559C00", Offset = "0x1559C00", VA = "0x1559C00")]
	public void EnterEventHandle()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x1559C1C", Offset = "0x1559C1C", VA = "0x1559C1C")]
	public AreaInfo()
	{
	}
}
[Token(Token = "0x2000211")]
public class HideMeshRenderer : MonoBehaviour
{
	[Token(Token = "0x20005B4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4E60", Offset = "0xEE4E60")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool state;

		[Token(Token = "0x6002C85")]
		[Address(RVA = "0x1275660", Offset = "0x1275660", VA = "0x1275660")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6002C86")]
		[Address(RVA = "0x1275680", Offset = "0x1275680", VA = "0x1275680")]
		internal void <init>b__0(Transform child)
		{
		}
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x127556C", Offset = "0x127556C", VA = "0x127556C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x1275574", Offset = "0x1275574", VA = "0x1275574")]
	public void init(bool state)
	{
	}

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x1275668", Offset = "0x1275668", VA = "0x1275668")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xEF0090", Offset = "0xEF0090")]
	public void SetDisplay0()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x1275670", Offset = "0x1275670", VA = "0x1275670")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xEF00C8", Offset = "0xEF00C8")]
	public void SetDisplay1()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x1275678", Offset = "0x1275678", VA = "0x1275678")]
	public HideMeshRenderer()
	{
	}
}
[Token(Token = "0x2000212")]
public struct SpawnInfo
{
	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int id;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int time;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int pointId;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int monsterId;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int spawnCount;
}
[Token(Token = "0x2000213")]
public struct SpawnSummonInfo
{
	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int id;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int time;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int pointId;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int monsterId;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int spawnCount;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int spawnTime;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int spawnParentsId;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 spawnPos;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Quaternion spawnRot;
}
[Token(Token = "0x2000214")]
public class MonsterSpawnManager : Singleton<MonsterSpawnManager>
{
	[Serializable]
	[Token(Token = "0x20005B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4E70", Offset = "0xEE4E70")]
	private sealed class <>c
	{
		[Token(Token = "0x40020BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40020BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<AreaSpawnInfo> <>9__68_1;

		[Token(Token = "0x40020C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<int> <>9__68_0;

		[Token(Token = "0x40020C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Comparison<AreaSpawnInfo> <>9__68_3;

		[Token(Token = "0x40020C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Comparison<int> <>9__68_2;

		[Token(Token = "0x40020C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Comparison<AreaSpawnInfo> <>9__68_5;

		[Token(Token = "0x40020C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Comparison<int> <>9__68_4;

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Comparison<AreaSpawnInfo> <>9__69_0;

		[Token(Token = "0x6002C88")]
		[Address(RVA = "0x12F18C4", Offset = "0x12F18C4", VA = "0x12F18C4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C89")]
		[Address(RVA = "0x12F18CC", Offset = "0x12F18CC", VA = "0x12F18CC")]
		internal int <InitAreaSortSpawnList>b__68_1(AreaSpawnInfo data1, AreaSpawnInfo data2)
		{
			return default(int);
		}

		[Token(Token = "0x6002C8A")]
		[Address(RVA = "0x12F18DC", Offset = "0x12F18DC", VA = "0x12F18DC")]
		internal int <InitAreaSortSpawnList>b__68_0(int data1, int data2)
		{
			return default(int);
		}

		[Token(Token = "0x6002C8B")]
		[Address(RVA = "0x12F18E4", Offset = "0x12F18E4", VA = "0x12F18E4")]
		internal int <InitAreaSortSpawnList>b__68_3(AreaSpawnInfo data1, AreaSpawnInfo data2)
		{
			return default(int);
		}

		[Token(Token = "0x6002C8C")]
		[Address(RVA = "0x12F18F4", Offset = "0x12F18F4", VA = "0x12F18F4")]
		internal int <InitAreaSortSpawnList>b__68_2(int data1, int data2)
		{
			return default(int);
		}

		[Token(Token = "0x6002C8D")]
		[Address(RVA = "0x12F18FC", Offset = "0x12F18FC", VA = "0x12F18FC")]
		internal int <InitAreaSortSpawnList>b__68_5(AreaSpawnInfo data1, AreaSpawnInfo data2)
		{
			return default(int);
		}

		[Token(Token = "0x6002C8E")]
		[Address(RVA = "0x12F190C", Offset = "0x12F190C", VA = "0x12F190C")]
		internal int <InitAreaSortSpawnList>b__68_4(int data1, int data2)
		{
			return default(int);
		}

		[Token(Token = "0x6002C8F")]
		[Address(RVA = "0x12F1914", Offset = "0x12F1914", VA = "0x12F1914")]
		internal int <InitSummonSpawnData>b__69_0(AreaSpawnInfo data1, AreaSpawnInfo data2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isSpawnInit;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool spawnStart;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private bool spawnSummonStart;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int serverTotalCount;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE79C4", Offset = "0xEE79C4")]
	private int <MaxSpawnAreaId>k__BackingField;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE79D4", Offset = "0xEE79D4")]
	private int <MinSpawnAreaId>k__BackingField;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE79E4", Offset = "0xEE79E4")]
	private int <CurSpawnAreaId>k__BackingField;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AreaInfoData mCurSpawnArea;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, List<AreaSpawnInfo>> areaSortSpawnList;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> areaSortIndexList;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<AreaInfoData> curArea;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<AreaInfoData> finArea;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<int, Dictionary<int, List<AreaSpawnInfo>>> areaSortSummonSpawnDic;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Dictionary<GameDiffculty, Dictionary<int, List<AreaSpawnInfo>>> difficultAreaSpawnData;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<GameDiffculty, List<int>> difficultAreaSpawnDataIndex;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<HostServer.MonsterSpawnInfo> tempMonsterSpawnList;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int oldTime;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int curTime;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int areaOldTime;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int areaCurTime;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Dictionary<int, int> summonDic;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int summonAreaId;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Dictionary<int, AreaInfo> areaInfoList;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<int, Dictionary<int, Transform>> areaPointList;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int areaSortListIndex;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Action<int> AreaChangeFirstWaveCallback;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int maxCount;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int clientTotalCount;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Transform monsterRoot;

	[Token(Token = "0x1700013E")]
	public int MaxSpawnAreaId
	{
		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x12EC298", Offset = "0x12EC298", VA = "0x12EC298")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0100", Offset = "0xEF0100")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x12EC2A0", Offset = "0x12EC2A0", VA = "0x12EC2A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0110", Offset = "0xEF0110")]
		private set
		{
		}
	}

	[Token(Token = "0x1700013F")]
	public int MinSpawnAreaId
	{
		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x12EC2A8", Offset = "0x12EC2A8", VA = "0x12EC2A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0120", Offset = "0xEF0120")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x12EC2B0", Offset = "0x12EC2B0", VA = "0x12EC2B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0130", Offset = "0xEF0130")]
		private set
		{
		}
	}

	[Token(Token = "0x17000140")]
	public int CurSpawnAreaId
	{
		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x12EC2B8", Offset = "0x12EC2B8", VA = "0x12EC2B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0140", Offset = "0xEF0140")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F36")]
		[Address(RVA = "0x12EC2C0", Offset = "0x12EC2C0", VA = "0x12EC2C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0150", Offset = "0xEF0150")]
		private set
		{
		}
	}

	[Token(Token = "0x17000141")]
	public int ServerTotalCount
	{
		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0x12EDF54", Offset = "0x12EDF54", VA = "0x12EDF54")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0x12EDF5C", Offset = "0x12EDF5C", VA = "0x12EDF5C")]
		set
		{
		}
	}

	[Token(Token = "0x17000142")]
	public int ClientTotalCount
	{
		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0x12EF1D0", Offset = "0x12EF1D0", VA = "0x12EF1D0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0x12EF1D8", Offset = "0x12EF1D8", VA = "0x12EF1D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000143")]
	public Transform MonsterRoot
	{
		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x12F0A34", Offset = "0x12F0A34", VA = "0x12F0A34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x12EC2C8", Offset = "0x12EC2C8", VA = "0x12EC2C8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x12ECE60", Offset = "0x12ECE60", VA = "0x12ECE60")]
	public void DoServerReset()
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x12ECF44", Offset = "0x12ECF44", VA = "0x12ECF44")]
	public void DoStart(GameDiffculty gameDiffculty)
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x12ED33C", Offset = "0x12ED33C", VA = "0x12ED33C")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x12ED3D4", Offset = "0x12ED3D4", VA = "0x12ED3D4")]
	public void DoPause()
	{
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x12ED450", Offset = "0x12ED450", VA = "0x12ED450")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x12ED4C8", Offset = "0x12ED4C8", VA = "0x12ED4C8")]
	public void DoUpdate(int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x12EDF64", Offset = "0x12EDF64", VA = "0x12EDF64")]
	public bool CheckSpawnStatus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x12EDF6C", Offset = "0x12EDF6C", VA = "0x12EDF6C")]
	private bool CheckMonsterIsClean()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x12ED5A4", Offset = "0x12ED5A4", VA = "0x12ED5A4")]
	private void DoSpawn(int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x12ED0FC", Offset = "0x12ED0FC", VA = "0x12ED0FC")]
	private void ResetTimer()
	{
	}

	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x12EE294", Offset = "0x12EE294", VA = "0x12EE294")]
	private void ResetAreaTimer()
	{
	}

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x12EE4CC", Offset = "0x12EE4CC", VA = "0x12EE4CC")]
	public void AddAreaSpawnMonsterList(int monsterID, int areaId, int spawnPointId, int spawnCount, int suicideDelayTime, int level)
	{
	}

	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x12EE030", Offset = "0x12EE030", VA = "0x12EE030")]
	public void AddAreaSpawnMonsterList(int monsterID, int areaId, Vector3 spawnPos, Quaternion spawnRot, SpawnPointInfo spawnData, int spawnCount, int suicideDelayTime, int level)
	{
	}

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x12EDDE0", Offset = "0x12EDDE0", VA = "0x12EDDE0")]
	public void ProcessorSpawnMonsterNet()
	{
	}

	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x12EED50", Offset = "0x12EED50", VA = "0x12EED50")]
	public int AreaGetMonsterSummonMaxCry(WUnit unit)
	{
		return default(int);
	}

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x12EED9C", Offset = "0x12EED9C", VA = "0x12EED9C")]
	public int AreaGetMonsterSummonMaxCry(int tableId)
	{
		return default(int);
	}

	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x12EEE54", Offset = "0x12EEE54", VA = "0x12EEE54")]
	public void AreaTriggerSummon(WUnit unit, int summonArea)
	{
	}

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x12EF1E0", Offset = "0x12EF1E0", VA = "0x12EF1E0")]
	public void DoClientReset()
	{
	}

	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x12EE1DC", Offset = "0x12EE1DC", VA = "0x12EE1DC")]
	public Transform GetAreaSpawnPoint(int areaID, int pointID)
	{
		return null;
	}

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x12EF1E8", Offset = "0x12EF1E8", VA = "0x12EF1E8")]
	public int[] GetAreaSpawnPointIds(int areaID)
	{
		return null;
	}

	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x12EF2D8", Offset = "0x12EF2D8", VA = "0x12EF2D8")]
	public void ChangeSpawnArea(int areaId)
	{
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x12EF3F4", Offset = "0x12EF3F4", VA = "0x12EF3F4")]
	private void EnterArea(AreaInfo area)
	{
	}

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x12EF030", Offset = "0x12EF030", VA = "0x12EF030")]
	private AreaInfo GetAreaInfData(int areaId)
	{
		return null;
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x12EF124", Offset = "0x12EF124", VA = "0x12EF124")]
	private void SetEnterArea(AreaInfo area, AreaInfoData areaData)
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x12EF63C", Offset = "0x12EF63C", VA = "0x12EF63C")]
	public void InitAreaSortSpawnList()
	{
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x12F0634", Offset = "0x12F0634", VA = "0x12F0634")]
	private void InitSummonSpawnData()
	{
	}

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x12EC3A8", Offset = "0x12EC3A8", VA = "0x12EC3A8")]
	private void InitAreaSpawnPoint(Transform areaRoot)
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x12F0B60", Offset = "0x12F0B60", VA = "0x12F0B60")]
	public void ServerSpawnMonserBullet(int monsterId, Vector3 pos, Quaternion rot, Transform traget, bool rightFire)
	{
	}

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x12EE7D4", Offset = "0x12EE7D4", VA = "0x12EE7D4")]
	public void ServerSpawnMonser(int objId, int monsterId, int areaId, SpawnPointInfo spawnData, Vector3 pos, Quaternion rot, int suicideDelayTime = -1, int level = 1)
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x12F11D8", Offset = "0x12F11D8", VA = "0x12F11D8")]
	public void SpawnMonster(int objId, int monsterId, Vector3 pos, Quaternion rot, int level)
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x12F1608", Offset = "0x12F1608", VA = "0x12F1608")]
	public MonsterSpawnManager()
	{
	}
}
[Token(Token = "0x2000215")]
public enum MoveTargetType
{
	[Token(Token = "0x4000E07")]
	JumpVertical,
	[Token(Token = "0x4000E08")]
	NavmeshRun,
	[Token(Token = "0x4000E09")]
	Walk,
	[Token(Token = "0x4000E0A")]
	RollRight,
	[Token(Token = "0x4000E0B")]
	RollLeft,
	[Token(Token = "0x4000E0C")]
	JumpFlat,
	[Token(Token = "0x4000E0D")]
	Over,
	[Token(Token = "0x4000E0E")]
	Up,
	[Token(Token = "0x4000E0F")]
	ClimbOver,
	[Token(Token = "0x4000E10")]
	JumpStand,
	[Token(Token = "0x4000E11")]
	FlyScrew,
	[Token(Token = "0x4000E12")]
	NavmeshWalk
}
[Serializable]
[Token(Token = "0x2000216")]
public class MoveItem
{
	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MoveTargetType moveType;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetTransf;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve curve;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float highOfDistance;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public eMonsterAttackType attackType;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public eMonsterAttackDirType attackDirType;

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x137A574", Offset = "0x137A574", VA = "0x137A574")]
	public MoveItem()
	{
	}
}
[Serializable]
[Token(Token = "0x2000217")]
public class MovingRange
{
	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Transform> RangeCubes;

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x137E67C", Offset = "0x137E67C", VA = "0x137E67C")]
	public MovingRange()
	{
	}
}
[Token(Token = "0x2000218")]
public class SpawnPointInfo : MonoBehaviour
{
	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MoveItem> moveDatas;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MovingRange moveRangeData;

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x12C3FE4", Offset = "0x12C3FE4", VA = "0x12C3FE4")]
	public MoveItem GetMoveDdata(int index)
	{
		return null;
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x12C415C", Offset = "0x12C415C", VA = "0x12C415C")]
	public MovingRange GetMoveRangeData()
	{
		return null;
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x12C4164", Offset = "0x12C4164", VA = "0x12C4164")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xEF0160", Offset = "0xEF0160")]
	private void SetDefault()
	{
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x12C4290", Offset = "0x12C4290", VA = "0x12C4290")]
	public void LogStr(GameObject target)
	{
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x12C44A4", Offset = "0x12C44A4", VA = "0x12C44A4")]
	public SpawnPointInfo()
	{
	}
}
[Token(Token = "0x2000219")]
public abstract class RoomBaseState
{
	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected Battle battle;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected ServerBattleRoom battleRoom;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected UnityCoroutineControl battleRoomCoroutine;

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x13B63D4", Offset = "0x13B63D4", VA = "0x13B63D4")]
	public RoomBaseState(Battle _battle, ServerBattleRoom _battleRoom, UnityCoroutineControl _battleRoomCoroutine)
	{
	}

	[Token(Token = "0x6000F64")]
	public abstract void DoInit();

	[Token(Token = "0x6000F65")]
	public abstract void DoUpdate(float deltaTime, int millisDeltaTime);

	[Token(Token = "0x6000F66")]
	public abstract void DoFixedUpdate(float fixedDeltaTime);

	[Token(Token = "0x6000F67")]
	public abstract void DoLateUpdate();

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x13B6438", Offset = "0x13B6438", VA = "0x13B6438", Slot = "8")]
	public virtual void DoExit()
	{
	}
}
[Token(Token = "0x200021A")]
public class RoomFightEndState : RoomBaseState
{
	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x13BA6F0", Offset = "0x13BA6F0", VA = "0x13BA6F0")]
	public RoomFightEndState(Battle _battle, ServerBattleRoom _battleRoom, UnityCoroutineControl _battleRoomCoroutine)
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x13BA6F4", Offset = "0x13BA6F4", VA = "0x13BA6F4", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x13BA958", Offset = "0x13BA958", VA = "0x13BA958", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x13BA95C", Offset = "0x13BA95C", VA = "0x13BA95C", Slot = "6")]
	public override void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x13BA960", Offset = "0x13BA960", VA = "0x13BA960", Slot = "7")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x13BA964", Offset = "0x13BA964", VA = "0x13BA964", Slot = "8")]
	public override void DoExit()
	{
	}

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x13BA8F0", Offset = "0x13BA8F0", VA = "0x13BA8F0")]
	private void ProcessingFightingEnd()
	{
	}

	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x13BA7C0", Offset = "0x13BA7C0", VA = "0x13BA7C0")]
	private void ProcessingPlayerReviveEnd()
	{
	}
}
[Token(Token = "0x200021B")]
public class RoomFightStartState : RoomBaseState
{
	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x13BA9C4", Offset = "0x13BA9C4", VA = "0x13BA9C4")]
	public RoomFightStartState(Battle _battle, ServerBattleRoom _battleRoom, UnityCoroutineControl _battleRoomCoroutine)
	{
	}

	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x13BA9C8", Offset = "0x13BA9C8", VA = "0x13BA9C8", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x13BAAC8", Offset = "0x13BAAC8", VA = "0x13BAAC8", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x13BAACC", Offset = "0x13BAACC", VA = "0x13BAACC", Slot = "6")]
	public override void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x13BAAD0", Offset = "0x13BAAD0", VA = "0x13BAAD0", Slot = "7")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x13BAAD4", Offset = "0x13BAAD4", VA = "0x13BAAD4", Slot = "8")]
	public override void DoExit()
	{
	}
}
[Token(Token = "0x200021C")]
public class RoomFightingState : RoomBaseState
{
	[Token(Token = "0x20005B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4E80", Offset = "0xEE4E80")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RoomFightingState <>4__this;

		[Token(Token = "0x6002C90")]
		[Address(RVA = "0x13BC8C4", Offset = "0x13BC8C4", VA = "0x13BC8C4")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x6002C91")]
		[Address(RVA = "0x13BD0A4", Offset = "0x13BD0A4", VA = "0x13BD0A4")]
		internal void <OnPlayerDeadCB>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4E90", Offset = "0xEE4E90")]
	private sealed class <>c
	{
		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<WUnit> <>9__21_1;

		[Token(Token = "0x6002C93")]
		[Address(RVA = "0x13BD048", Offset = "0x13BD048", VA = "0x13BD048")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C94")]
		[Address(RVA = "0x13BD050", Offset = "0x13BD050", VA = "0x13BD050")]
		internal void <OnPlayerDeadCB>b__21_1(WUnit u)
		{
		}
	}

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int updateDelayFrame;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int updateFrameTimer;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isSpawnBoss;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isPlayTimerAudio_1;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool isPlayTimerAudio_2;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool isPlayTimerAudio_3;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isPlayTimerAudio_4;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<int> reviveRoomIds;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float reviveHp;

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x13BAAD8", Offset = "0x13BAAD8", VA = "0x13BAAD8")]
	public RoomFightingState(Battle _battle, ServerBattleRoom _battleRoom, UnityCoroutineControl _battleRoomCoroutine)
	{
	}

	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x13BAB80", Offset = "0x13BAB80", VA = "0x13BAB80", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x13BB320", Offset = "0x13BB320", VA = "0x13BB320", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x13BB450", Offset = "0x13BB450", VA = "0x13BB450", Slot = "6")]
	public override void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x13BBA70", Offset = "0x13BBA70", VA = "0x13BBA70", Slot = "7")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x13BC20C", Offset = "0x13BC20C", VA = "0x13BC20C", Slot = "8")]
	public override void DoExit()
	{
	}

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x13BB474", Offset = "0x13BB474", VA = "0x13BB474")]
	private void ProcessingMonsterTransformSync()
	{
	}

	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x13BB038", Offset = "0x13BB038", VA = "0x13BB038")]
	private void ProcessingSpawnStart()
	{
	}

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x13BC248", Offset = "0x13BC248", VA = "0x13BC248")]
	private void ProcessingSpawnEnd()
	{
	}

	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x13BB3D0", Offset = "0x13BB3D0", VA = "0x13BB3D0")]
	private void ProcessingSpawn(int deltaTime)
	{
	}

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x13BBA94", Offset = "0x13BBA94", VA = "0x13BBA94")]
	private void ProcessingGameStatus()
	{
	}

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x13BB0E8", Offset = "0x13BB0E8", VA = "0x13BB0E8")]
	private void ProcessingStatisticalStart()
	{
	}

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x13BC4EC", Offset = "0x13BC4EC", VA = "0x13BC4EC")]
	private void ProcessingStatisticalEnd()
	{
	}

	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x13BAC74", Offset = "0x13BAC74", VA = "0x13BAC74")]
	private void ProcessingJoinGamePlayer()
	{
	}

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x13BC6EC", Offset = "0x13BC6EC", VA = "0x13BC6EC")]
	private void OnPlayerDeadCB(WUnit unit)
	{
	}

	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x13BC8CC", Offset = "0x13BC8CC", VA = "0x13BC8CC")]
	private bool CheckAllJoinDiePlayerDie()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x13BC35C", Offset = "0x13BC35C", VA = "0x13BC35C")]
	private void ProcessingPlayerStatueEnd()
	{
	}

	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x13BB0EC", Offset = "0x13BB0EC", VA = "0x13BB0EC")]
	private void ProcessingRoomPassStart()
	{
	}

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x13BC574", Offset = "0x13BC574", VA = "0x13BC574")]
	private void ProcessingRoomPassEnd()
	{
	}

	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x13BC9FC", Offset = "0x13BC9FC", VA = "0x13BC9FC")]
	private void OnCharRollBack()
	{
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x13BCA04", Offset = "0x13BCA04", VA = "0x13BCA04")]
	private void OnRoomPass(FlowNode node)
	{
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x13BCD64", Offset = "0x13BCD64", VA = "0x13BCD64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0198", Offset = "0xEF0198")]
	private void <ProcessingGameStatus>b__17_0()
	{
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x13BCD98", Offset = "0x13BCD98", VA = "0x13BCD98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF01A8", Offset = "0xEF01A8")]
	private void <ProcessingGameStatus>b__17_1()
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x13BCE34", Offset = "0x13BCE34", VA = "0x13BCE34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF01B8", Offset = "0xEF01B8")]
	private void <ProcessingGameStatus>b__17_2()
	{
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x13BCE64", Offset = "0x13BCE64", VA = "0x13BCE64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF01C8", Offset = "0xEF01C8")]
	private void <ProcessingRoomPassStart>b__26_0(int id, int room)
	{
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x13BCECC", Offset = "0x13BCECC", VA = "0x13BCECC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF01D8", Offset = "0xEF01D8")]
	private void <OnRoomPass>b__29_0(WUnit u)
	{
	}
}
[Token(Token = "0x200021D")]
public class RoomMovieState : RoomBaseState
{
	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x13BF9F8", Offset = "0x13BF9F8", VA = "0x13BF9F8")]
	public RoomMovieState(Battle _battle, ServerBattleRoom _battleRoom, UnityCoroutineControl _battleRoomCoroutine)
	{
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x13BF9FC", Offset = "0x13BF9FC", VA = "0x13BF9FC", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x13BFDB4", Offset = "0x13BFDB4", VA = "0x13BFDB4", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x13BFE40", Offset = "0x13BFE40", VA = "0x13BFE40", Slot = "6")]
	public override void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x13BFE44", Offset = "0x13BFE44", VA = "0x13BFE44", Slot = "7")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x13BFE48", Offset = "0x13BFE48", VA = "0x13BFE48", Slot = "8")]
	public override void DoExit()
	{
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x13C0174", Offset = "0x13C0174", VA = "0x13C0174")]
	private void OnVideoPlayerStart(VideoPlayer videoPlayer)
	{
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x13C0178", Offset = "0x13C0178", VA = "0x13C0178")]
	private void OnVideoPlayerEnd(VideoPlayer videoPlayer)
	{
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x13BFA00", Offset = "0x13BFA00", VA = "0x13BFA00")]
	private void ProcessingPlayVideoStart()
	{
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x13BFEE4", Offset = "0x13BFEE4", VA = "0x13BFEE4")]
	private void ProcessingPlayVideoEnd()
	{
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x13C0190", Offset = "0x13C0190", VA = "0x13C0190")]
	private void ProcessingPlayWwiseStart()
	{
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x13BFE6C", Offset = "0x13BFE6C", VA = "0x13BFE6C")]
	private void ProcessingPlayWwiseEnd()
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x13BFDB8", Offset = "0x13BFDB8", VA = "0x13BFDB8")]
	private void ProcessingPlayWwise(float deltaTime)
	{
	}
}
[Token(Token = "0x200021E")]
public class RoomReadyState : RoomBaseState
{
	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x13C0194", Offset = "0x13C0194", VA = "0x13C0194")]
	public RoomReadyState(Battle _battle, ServerBattleRoom _battleRoom, UnityCoroutineControl _battleRoomCoroutine)
	{
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x13C0198", Offset = "0x13C0198", VA = "0x13C0198", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x13C0200", Offset = "0x13C0200", VA = "0x13C0200", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x13C0204", Offset = "0x13C0204", VA = "0x13C0204", Slot = "6")]
	public override void DoFixedUpdate(float fixedDeltaTime)
	{
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x13C0208", Offset = "0x13C0208", VA = "0x13C0208", Slot = "7")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x13C020C", Offset = "0x13C020C", VA = "0x13C020C", Slot = "8")]
	public override void DoExit()
	{
	}
}
[Token(Token = "0x200021F")]
public class WwiseAmbientEffectManager : Singleton<WwiseAmbientEffectManager>
{
	[Token(Token = "0x20005B8")]
	private class PlayInfo
	{
		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int time;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int timer;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int monsterid;

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int point;

		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int eventID;

		[Token(Token = "0x6002C95")]
		[Address(RVA = "0x1D75D1C", Offset = "0x1D75D1C", VA = "0x1D75D1C")]
		public PlayInfo()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4EA0", Offset = "0xEE4EA0")]
	private sealed class <>c
	{
		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<PlayInfo> <>9__12_0;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Comparison<PlayInfo> <>9__13_0;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Comparison<PlayInfo> <>9__22_0;

		[Token(Token = "0x6002C97")]
		[Address(RVA = "0x1D76230", Offset = "0x1D76230", VA = "0x1D76230")]
		public <>c()
		{
		}

		[Token(Token = "0x6002C98")]
		[Address(RVA = "0x1D76238", Offset = "0x1D76238", VA = "0x1D76238")]
		internal int <DoStartVideo>b__12_0(PlayInfo data1, PlayInfo data2)
		{
			return default(int);
		}

		[Token(Token = "0x6002C99")]
		[Address(RVA = "0x1D76260", Offset = "0x1D76260", VA = "0x1D76260")]
		internal int <setMonsterId>b__13_0(PlayInfo data1, PlayInfo data2)
		{
			return default(int);
		}

		[Token(Token = "0x6002C9A")]
		[Address(RVA = "0x1D76288", Offset = "0x1D76288", VA = "0x1D76288")]
		internal int <InitSortPlayList>b__22_0(PlayInfo data1, PlayInfo data2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float timer;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int tiner_int;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int playOffset;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool spawnStart;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, List<PlayInfo>> sortPlayList;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<PlayInfo> spawnAudioList;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<GameDiffculty, Dictionary<int, List<PlayInfo>>> sortSpawnDic;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, List<PlayInfo>> sortVideoList;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<int, int> passMonsterId;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<int, Transform> playTransHash;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<GameDiffculty, int> sortBossSummonMaxIdDic;

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x1D748C4", Offset = "0x1D748C4", VA = "0x1D748C4")]
	public void DoReset()
	{
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x1D7493C", Offset = "0x1D7493C", VA = "0x1D7493C")]
	public void DoStart(GameDiffculty gameDiffculty)
	{
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x1D74C68", Offset = "0x1D74C68", VA = "0x1D74C68")]
	public void DoStartVideo(int videoIndex)
	{
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x1D749E8", Offset = "0x1D749E8", VA = "0x1D749E8")]
	public void setMonsterId(int monsterId)
	{
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x1D74EA4", Offset = "0x1D74EA4", VA = "0x1D74EA4")]
	public void DoStop()
	{
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x1D74EAC", Offset = "0x1D74EAC", VA = "0x1D74EAC")]
	public void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x1D751E8", Offset = "0x1D751E8", VA = "0x1D751E8")]
	public void Init()
	{
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x1D75B84", Offset = "0x1D75B84", VA = "0x1D75B84")]
	public string GetVarName(Expression<Func<string, int>> exp)
	{
		return null;
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x1D75254", Offset = "0x1D75254", VA = "0x1D75254")]
	private void InitPlayTransHash(Transform parentNode)
	{
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x1D75C20", Offset = "0x1D75C20", VA = "0x1D75C20")]
	public Transform GetPlayPoint(int point)
	{
		return null;
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x1D75760", Offset = "0x1D75760", VA = "0x1D75760")]
	private void InitSortPlayList()
	{
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x1D74FF8", Offset = "0x1D74FF8", VA = "0x1D74FF8")]
	public void PlayAmbientEffect_Net(int eventId, int point)
	{
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x1D75D24", Offset = "0x1D75D24", VA = "0x1D75D24")]
	public void PlayAmbientEffect(int eventId, int point)
	{
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x1D75FE8", Offset = "0x1D75FE8", VA = "0x1D75FE8")]
	public WwiseAmbientEffectManager()
	{
	}
}
[Token(Token = "0x2000220")]
public class BossAppearanceManager : Singleton<BossAppearanceManager>
{
	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isStart;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform hideDownPoint;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform bossAppearanceMoveToPoint;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform bossAppearanceText;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isFirstShowBossAppearance;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool isFirstShowBossAppearanceTmp;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action EndWaitLoadingAct;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isAppearanceFinish;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine delayMoveOut;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine delayForbidMove;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float lookAtTime;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float beginMoveForwardTime;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float beginMoveOutTime;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private AudioEvent bossEnterSound;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WwiseDefine wiseObject;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject NameHUDObj;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private UnitNormalNameHUD NameHUD;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WUnit boss;

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x13CF870", Offset = "0x13CF870", VA = "0x13CF870")]
	public void Init()
	{
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0x13CF9F8", Offset = "0x13CF9F8", VA = "0x13CF9F8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x13CFC7C", Offset = "0x13CFC7C", VA = "0x13CFC7C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0x13CFF18", Offset = "0x13CFF18", VA = "0x13CFF18")]
	public void Show()
	{
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0x13D0068", Offset = "0x13D0068", VA = "0x13D0068")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0x13D0138", Offset = "0x13D0138", VA = "0x13D0138")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0x13D0348", Offset = "0x13D0348", VA = "0x13D0348")]
	public void StartBossLookAt(WUnit unit)
	{
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0x13D02D0", Offset = "0x13D02D0", VA = "0x13D02D0")]
	public void StopBossLookAt()
	{
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x13D08A8", Offset = "0x13D08A8", VA = "0x13D08A8")]
	public void BossLookAtEnd()
	{
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x13D06DC", Offset = "0x13D06DC", VA = "0x13D06DC")]
	private void SetAllPlayerVisible(bool isVisible)
	{
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x13D0BB8", Offset = "0x13D0BB8", VA = "0x13D0BB8")]
	public bool IsShowAppearance()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x13CFA30", Offset = "0x13CFA30", VA = "0x13CFA30")]
	private void InitUIView()
	{
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x13CFBD0", Offset = "0x13CFBD0", VA = "0x13CFBD0")]
	public void SetUIView(bool isShow)
	{
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x13CFFC0", Offset = "0x13CFFC0", VA = "0x13CFFC0")]
	public void SetUIText(string name)
	{
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x13CFD30", Offset = "0x13CFD30", VA = "0x13CFD30")]
	private void SetUIViewDir()
	{
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x13D0BD8", Offset = "0x13D0BD8", VA = "0x13D0BD8")]
	public BossAppearanceManager()
	{
	}
}
[Token(Token = "0x2000221")]
public class CameraManager : Singleton<CameraManager>
{
	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Camera mMainCamera;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera mLeftCamera;

	[Token(Token = "0x17000144")]
	public Camera MainCamera
	{
		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x12BB3E4", Offset = "0x12BB3E4", VA = "0x12BB3E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x12BB3EC", Offset = "0x12BB3EC", VA = "0x12BB3EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000145")]
	public Camera LeftCamera
	{
		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x12BB490", Offset = "0x12BB490", VA = "0x12BB490")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x12BB498", Offset = "0x12BB498", VA = "0x12BB498")]
		set
		{
		}
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x12BB53C", Offset = "0x12BB53C", VA = "0x12BB53C")]
	public void SetGameEndLayer()
	{
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x12BB82C", Offset = "0x12BB82C", VA = "0x12BB82C")]
	public void SetGameStartLayer()
	{
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x12BB910", Offset = "0x12BB910", VA = "0x12BB910")]
	public void SetCameraTarget(GameObject obj)
	{
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x12BBA60", Offset = "0x12BBA60", VA = "0x12BBA60")]
	public void SetVideoLayer()
	{
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x12BB620", Offset = "0x12BB620", VA = "0x12BB620")]
	public void SetCameraMask(int cullingMask)
	{
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x12BBB44", Offset = "0x12BBB44", VA = "0x12BBB44")]
	public CameraManager()
	{
	}
}
[Token(Token = "0x2000222")]
public class DropManager : Singleton<DropManager>
{
	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, DropItem> dropTypeItems;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, DropItem> dropItems;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isInit;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isStart;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int orignalId;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private HashSet<int> lockItem;

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x122DDEC", Offset = "0x122DDEC", VA = "0x122DDEC")]
	public void Init()
	{
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x122DF9C", Offset = "0x122DF9C", VA = "0x122DF9C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x122E028", Offset = "0x122E028", VA = "0x122E028")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x122E030", Offset = "0x122E030", VA = "0x122E030")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x122DC4C", Offset = "0x122DC4C", VA = "0x122DC4C")]
	public void NetProduceDropItem(int itemType, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x122D0F8", Offset = "0x122D0F8", VA = "0x122D0F8")]
	public void NetDestroyDropItem(int id)
	{
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x122E1D4", Offset = "0x122E1D4", VA = "0x122E1D4")]
	public void NetTriggerDropItem(int id, int uid)
	{
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x122E44C", Offset = "0x122E44C", VA = "0x122E44C")]
	public bool TryLockDropItem(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x122E510", Offset = "0x122E510", VA = "0x122E510")]
	public bool IsActiveDropItem(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x122E5A4", Offset = "0x122E5A4", VA = "0x122E5A4")]
	public void ProduceDropItem(int itemType, int itemId, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x122E5AC", Offset = "0x122E5AC", VA = "0x122E5AC")]
	public void DestroyDropItem(int id)
	{
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x122E6C8", Offset = "0x122E6C8", VA = "0x122E6C8")]
	public void TriggerDropItem(int id, int uid)
	{
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x122E038", Offset = "0x122E038", VA = "0x122E038")]
	public void CleanAllDropItem()
	{
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x122E5A8", Offset = "0x122E5A8", VA = "0x122E5A8")]
	public void DoProduceDropItem(int itemType, int id, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x122E8F8", Offset = "0x122E8F8", VA = "0x122E8F8")]
	private DropItem ProduceLogic(int itemType, int id, Vector3 pos, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x122E1C0", Offset = "0x122E1C0", VA = "0x122E1C0")]
	private int GetId()
	{
		return default(int);
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x122EB48", Offset = "0x122EB48", VA = "0x122EB48")]
	public DropManager()
	{
	}
}
[Token(Token = "0x2000223")]
public static class EffectManager
{
	[Token(Token = "0x20005BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4EB0", Offset = "0xEE4EB0")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion rot;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform parent;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<EffectDefine> cb;

		[Token(Token = "0x6002C9B")]
		[Address(RVA = "0x123007C", Offset = "0x123007C", VA = "0x123007C")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6002C9C")]
		[Address(RVA = "0x1230084", Offset = "0x1230084", VA = "0x1230084")]
		internal void <CreateEffectAsync>b__0(GameObject go)
		{
		}
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x122FA30", Offset = "0x122FA30", VA = "0x122FA30")]
	public static EffectDefine CreateEffect(int iAssetID, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x122FC14", Offset = "0x122FC14", VA = "0x122FC14")]
	public static EffectDefine CreateEffect(GameObject prefab, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent)
	{
		return null;
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x122FEB4", Offset = "0x122FEB4", VA = "0x122FEB4")]
	public static void CreateEffectAsync(GameObject prefab, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Transform parent, [Optional] Action<EffectDefine> cb)
	{
	}
}
[Token(Token = "0x2000224")]
public class GameManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005BB")]
	public class WeaponGroupConfig
	{
		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_weapon_group weaponGroup;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject leftWeapon;

		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject rightWeapon;

		[Token(Token = "0x1700045E")]
		public e_weapon_type rightWeaponType
		{
			[Token(Token = "0x6002C9D")]
			[Address(RVA = "0x133665C", Offset = "0x133665C", VA = "0x133665C")]
			get
			{
				return default(e_weapon_type);
			}
		}

		[Token(Token = "0x1700045F")]
		public e_weapon_type leftWeaponType
		{
			[Token(Token = "0x6002C9E")]
			[Address(RVA = "0x13366C0", Offset = "0x13366C0", VA = "0x13366C0")]
			get
			{
				return default(e_weapon_type);
			}
		}

		[Token(Token = "0x6002C9F")]
		[Address(RVA = "0x1336724", Offset = "0x1336724", VA = "0x1336724")]
		public WeaponGroupConfig()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005BC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4EC0", Offset = "0xEE4EC0")]
	private sealed class <>c
	{
		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<WUnit> <>9__77_0;

		[Token(Token = "0x6002CA1")]
		[Address(RVA = "0x133662C", Offset = "0x133662C", VA = "0x133662C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002CA2")]
		[Address(RVA = "0x1336634", Offset = "0x1336634", VA = "0x1336634")]
		internal int <GetCameraRigGroupPoint>b__77_0(WUnit a, WUnit b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int sceneBuildIndex;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> otherSceneBuildIndexList;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject vrMgrComponent;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Camera firstPersonCameraComponent;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject[] playerObjs;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject[] otherPlayerObjs;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private WeaponGroupConfig[] weaponGroups;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private WeaponGroupConfig[] npcWeaponGroups;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	public Transform npcSpawnRoot;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	public Transform npc2SpawnRoot;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	public Transform npcTargetRoot;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	public Transform commanderSpawnRoot;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public Transform npc3SpawnPoint;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	public Transform areaSpawnRoot;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform cameraRigGroupPoints;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	public Transform ambientEffectRoot;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	public VideoPlayerController video;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	public ServerUIView ServerConsoleUI;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	public TotalStatisticalUI StatisticalUI;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	public TotalStatisticalUI StatisticalUI_Live;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public CheckpointUI CheckpointUI;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CheckpointUI CheckpointUI_Live;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	public ManualSellectView mSellectView;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	public LiveShowView mLiveView;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	public CharacterDeathUI mCharacterDeathUI;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7B54", Offset = "0xEE7B54")]
	private GameObject <timeLineRoot>k__BackingField;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject CameraEffectConfigRoot;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GuideController GuideController;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GuidTipUI GuidTipUI;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public VRDeviceSelectorUIView SelectorUIView;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject recordCamera;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Material startSkybox;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Material endSkybox;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject dissonanceObject;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject floating;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Transform floatingRoot;

	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform GameStageRoot;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject loadingUI;

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject loadingUIPC;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject dieCameraEffect;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameManager _instance;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Dictionary<int, Transform> CameraRigPointDic;

	[Token(Token = "0x17000146")]
	public GameObject VRMgrComponent
	{
		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x1332D04", Offset = "0x1332D04", VA = "0x1332D04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000147")]
	public Camera FirstPersonCameraComponent
	{
		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x1332D0C", Offset = "0x1332D0C", VA = "0x1332D0C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000148")]
	[SerializeField]
	public GameObject timeLineRoot
	{
		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x1332D14", Offset = "0x1332D14", VA = "0x1332D14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF01E8", Offset = "0xEF01E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x1332D1C", Offset = "0x1332D1C", VA = "0x1332D1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF01F8", Offset = "0xEF01F8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000149")]
	public static GameManager Instance
	{
		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x1332D24", Offset = "0x1332D24", VA = "0x1332D24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x1332D74", Offset = "0x1332D74", VA = "0x1332D74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x1332DCC", Offset = "0x1332DCC", VA = "0x1332DCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x13331AC", Offset = "0x13331AC", VA = "0x13331AC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x13332E4", Offset = "0x13332E4", VA = "0x13332E4")]
	public void Init()
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x1333E8C", Offset = "0x1333E8C", VA = "0x1333E8C")]
	public UnitAttribute GetPlayerAttribute(e_Player_Style playerStyle)
	{
		return null;
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x1333F14", Offset = "0x1333F14", VA = "0x1333F14")]
	public UnitAttribute GetMonsterAttribute(int monsterTableId)
	{
		return null;
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x1333F94", Offset = "0x1333F94", VA = "0x1333F94")]
	public UnitAttribute GetNpcAttribute(int npcTableId)
	{
		return null;
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x13339DC", Offset = "0x13339DC", VA = "0x13339DC")]
	public void LoadScene()
	{
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0x1334284", Offset = "0x1334284", VA = "0x1334284")]
	public void OnSceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
	{
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x1334384", Offset = "0x1334384", VA = "0x1334384")]
	private void SceneLoadedEnd()
	{
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x1334A14", Offset = "0x1334A14", VA = "0x1334A14")]
	public void LoadOtherScene()
	{
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x1334B70", Offset = "0x1334B70", VA = "0x1334B70")]
	public void SetSceneActive(int index)
	{
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x1334C70", Offset = "0x1334C70", VA = "0x1334C70")]
	public void SetSafeRoomActive()
	{
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x1334D74", Offset = "0x1334D74", VA = "0x1334D74")]
	private void OnClearRoom(FSMBattleRoom room)
	{
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x13350C0", Offset = "0x13350C0", VA = "0x13350C0")]
	private void OnResetRoom(List<FSMBattleRoom> rooms)
	{
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x13351B8", Offset = "0x13351B8", VA = "0x13351B8")]
	private void OnClearPreparedRoom(Transform room)
	{
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x1334F18", Offset = "0x1334F18", VA = "0x1334F18")]
	private void ClearDecal(Transform t)
	{
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x13351BC", Offset = "0x13351BC", VA = "0x13351BC")]
	private void InitCutScenes()
	{
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x13352AC", Offset = "0x13352AC", VA = "0x13352AC")]
	public void SetCutScenesActive(bool activeState)
	{
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x1335354", Offset = "0x1335354", VA = "0x1335354")]
	public bool GetCutScenesActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x13353EC", Offset = "0x13353EC", VA = "0x13353EC")]
	public GameObject GetOtherPlayerByType(e_Player_Style playerType)
	{
		return null;
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x1335660", Offset = "0x1335660", VA = "0x1335660")]
	public GameObject GetLocalPlayerByType(e_Player_Style playerType)
	{
		return null;
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x13358D4", Offset = "0x13358D4", VA = "0x13358D4")]
	public WeaponGroupConfig GetWeaponByGroup(e_weapon_group weaponGroup)
	{
		return null;
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x1335C30", Offset = "0x1335C30", VA = "0x1335C30")]
	public WeaponGroupConfig GetNpcWeaponByGroup(e_weapon_group weaponGroup)
	{
		return null;
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x1333670", Offset = "0x1333670", VA = "0x1333670")]
	public void InitCameraRigGroupPoints()
	{
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x1333BD4", Offset = "0x1333BD4", VA = "0x1333BD4")]
	public Transform GetCameraRigGroupPoint(WUnit unit)
	{
		return null;
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x1333B14", Offset = "0x1333B14", VA = "0x1333B14")]
	private void InitEvent()
	{
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x1335FCC", Offset = "0x1335FCC", VA = "0x1335FCC")]
	private void ShowVRControllerSelector()
	{
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x1336124", Offset = "0x1336124", VA = "0x1336124")]
	public void InitDissonanceVoice()
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x1336360", Offset = "0x1336360", VA = "0x1336360")]
	public GameManager()
	{
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x1336410", Offset = "0x1336410", VA = "0x1336410")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0208", Offset = "0xEF0208")]
	private void <LoadScene>b__58_0()
	{
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0x13364E4", Offset = "0x13364E4", VA = "0x13364E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0218", Offset = "0xEF0218")]
	private void <LoadScene>b__58_1()
	{
	}
}
[Token(Token = "0x2000225")]
public class GameSceneManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005BD")]
	public class GameStepSceneConfig
	{
		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int StepIndex;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int sceneBuildIndex;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int configBuildIndex;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material skyBox;

		[Token(Token = "0x6002CA3")]
		[Address(RVA = "0x1339170", Offset = "0x1339170", VA = "0x1339170")]
		public GameStepSceneConfig()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005BE")]
	public class GameSceneConfig
	{
		[Token(Token = "0x200096F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5244", Offset = "0xEE5244")]
		private sealed class <StartLoadStepScene>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400237A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400237B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400237C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameSceneConfig <>4__this;

			[Token(Token = "0x400237D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] scenes;

			[Token(Token = "0x400237E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <async0>5__2;

			[Token(Token = "0x400237F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__3;

			[Token(Token = "0x4002380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AsyncOperation <async>5__4;

			[Token(Token = "0x170004A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031B3")]
				[Address(RVA = "0x1338A2C", Offset = "0x1338A2C", VA = "0x1338A2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031B5")]
				[Address(RVA = "0x1338A94", Offset = "0x1338A94", VA = "0x1338A94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031B0")]
			[Address(RVA = "0x1337B84", Offset = "0x1337B84", VA = "0x1337B84")]
			[DebuggerHidden]
			public <StartLoadStepScene>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x60031B1")]
			[Address(RVA = "0x1338798", Offset = "0x1338798", VA = "0x1338798", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031B2")]
			[Address(RVA = "0x133879C", Offset = "0x133879C", VA = "0x133879C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031B4")]
			[Address(RVA = "0x1338A34", Offset = "0x1338A34", VA = "0x1338A34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5254", Offset = "0xEE5254")]
		private sealed class <StartUnLoadStepScene>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002381")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002382")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002383")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameSceneConfig <>4__this;

			[Token(Token = "0x4002384")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] scenes;

			[Token(Token = "0x4002385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Scene <clearObject>5__2;

			[Token(Token = "0x4002386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <async0>5__3;

			[Token(Token = "0x4002387")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__4;

			[Token(Token = "0x170004AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031B9")]
				[Address(RVA = "0x1339100", Offset = "0x1339100", VA = "0x1339100", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031BB")]
				[Address(RVA = "0x1339168", Offset = "0x1339168", VA = "0x1339168", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031B6")]
			[Address(RVA = "0x1337D5C", Offset = "0x1337D5C", VA = "0x1337D5C")]
			[DebuggerHidden]
			public <StartUnLoadStepScene>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x60031B7")]
			[Address(RVA = "0x1338DAC", Offset = "0x1338DAC", VA = "0x1338DAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031B8")]
			[Address(RVA = "0x1338DB0", Offset = "0x1338DB0", VA = "0x1338DB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031BA")]
			[Address(RVA = "0x1339108", Offset = "0x1339108", VA = "0x1339108", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000971")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5264", Offset = "0xEE5264")]
		private sealed class <>c__DisplayClass41_0
		{
			[Token(Token = "0x4002388")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameSceneConfig <>4__this;

			[Token(Token = "0x4002389")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int step;

			[Token(Token = "0x400238A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action loadEnd;

			[Token(Token = "0x400238B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isLoadEndActive;

			[Token(Token = "0x60031BC")]
			[Address(RVA = "0x1337F44", Offset = "0x1337F44", VA = "0x1337F44")]
			public <>c__DisplayClass41_0()
			{
			}

			[Token(Token = "0x60031BD")]
			[Address(RVA = "0x1338500", Offset = "0x1338500", VA = "0x1338500")]
			internal void <ChangeLoadStepScene>b__0()
			{
			}
		}

		[Token(Token = "0x2000972")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5274", Offset = "0xEE5274")]
		private sealed class <StartLoad>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400238C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400238D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400238E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool isLoadingUI;

			[Token(Token = "0x400238F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameSceneConfig <>4__this;

			[Token(Token = "0x4002390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int[] scenes;

			[Token(Token = "0x4002391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__2;

			[Token(Token = "0x4002392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private AsyncOperation <async>5__3;

			[Token(Token = "0x170004AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031C1")]
				[Address(RVA = "0x1338728", Offset = "0x1338728", VA = "0x1338728", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031C3")]
				[Address(RVA = "0x1338790", Offset = "0x1338790", VA = "0x1338790", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031BE")]
			[Address(RVA = "0x133826C", Offset = "0x133826C", VA = "0x133826C")]
			[DebuggerHidden]
			public <StartLoad>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x60031BF")]
			[Address(RVA = "0x1338528", Offset = "0x1338528", VA = "0x1338528", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031C0")]
			[Address(RVA = "0x133852C", Offset = "0x133852C", VA = "0x133852C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031C2")]
			[Address(RVA = "0x1338730", Offset = "0x1338730", VA = "0x1338730", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000973")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5284", Offset = "0xEE5284")]
		private sealed class <StartUnLoad>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameSceneConfig <>4__this;

			[Token(Token = "0x4002396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action unLoadFinish;

			[Token(Token = "0x4002397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x4002398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private AsyncOperation <async>5__3;

			[Token(Token = "0x170004AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60031C7")]
				[Address(RVA = "0x1338D3C", Offset = "0x1338D3C", VA = "0x1338D3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60031C9")]
				[Address(RVA = "0x1338DA4", Offset = "0x1338DA4", VA = "0x1338DA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60031C4")]
			[Address(RVA = "0x13383B4", Offset = "0x13383B4", VA = "0x13383B4")]
			[DebuggerHidden]
			public <StartUnLoad>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x60031C5")]
			[Address(RVA = "0x1338A9C", Offset = "0x1338A9C", VA = "0x1338A9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60031C6")]
			[Address(RVA = "0x1338AA0", Offset = "0x1338AA0", VA = "0x1338AA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60031C8")]
			[Address(RVA = "0x1338D44", Offset = "0x1338D44", VA = "0x1338D44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SafeRoomSceneIndex;

		[Token(Token = "0x40020E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int SafeRoomConfigSceneIndex;

		[Token(Token = "0x40020E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int sceneBuildIndex;

		[Token(Token = "0x40020E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int configBuildIndex;

		[Token(Token = "0x40020E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject resRoot;

		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<Transform> cameraRigPoint_A_List;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<Transform> cameraRigPoint_B_List;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform cameraRigPoint_A;

		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform cameraRigPoint_B;

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform cameraRigPoint_SafeRoom_A;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform cameraRigPoint_SafeRoom_B;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Material skyBox;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action loadSceneEndCallBack;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private List<GameStepSceneConfig> stepSceneConfigList;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameStepSceneConfig curStepSceneConfig;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Action loadGameStepSceneEndCallBack;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Action unLoadGameStepSceneEndCallBack;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int loadActiveSceneIndex;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB564", Offset = "0xEEB564")]
		private bool <IsStepSceneLoading>k__BackingField;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Coroutine Coroutine_StartLoadStepScene;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private WaitForSeconds wait;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Coroutine Coroutine_StartUnLoadStepScene;

		[Token(Token = "0x40020F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Coroutine Coroutine_StartLoad;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Coroutine Coroutine_StartUnLoad;

		[Token(Token = "0x17000460")]
		public bool IsStepSceneLoading
		{
			[Token(Token = "0x6002CA4")]
			[Address(RVA = "0x133750C", Offset = "0x133750C", VA = "0x133750C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2EA4", Offset = "0xEF2EA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002CA5")]
			[Address(RVA = "0x1337514", Offset = "0x1337514", VA = "0x1337514")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2EB4", Offset = "0xEF2EB4")]
			set
			{
			}
		}

		[Token(Token = "0x17000461")]
		public List<GameStepSceneConfig> StepSceneConfigList
		{
			[Token(Token = "0x6002CA6")]
			[Address(RVA = "0x1337520", Offset = "0x1337520", VA = "0x1337520")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CA7")]
		[Address(RVA = "0x133679C", Offset = "0x133679C", VA = "0x133679C")]
		public void Init()
		{
		}

		[Token(Token = "0x6002CA8")]
		[Address(RVA = "0x1336C30", Offset = "0x1336C30", VA = "0x1336C30")]
		public Transform GetCameraRigGroupPoint(e_group_type groupType, bool isAI, int site)
		{
			return null;
		}

		[Token(Token = "0x6002CA9")]
		[Address(RVA = "0x1337528", Offset = "0x1337528", VA = "0x1337528")]
		private Transform GetGroupPointBySite(List<Transform> list, int site)
		{
			return null;
		}

		[Token(Token = "0x6002CAA")]
		[Address(RVA = "0x1337210", Offset = "0x1337210", VA = "0x1337210")]
		public Transform GetSafeRoomCameraRigGroupPoint(e_group_type groupType, int site)
		{
			return null;
		}

		[Token(Token = "0x6002CAB")]
		[Address(RVA = "0x13375E0", Offset = "0x13375E0", VA = "0x13375E0")]
		public void SceneActive(int sceneBuildIndex)
		{
		}

		[Token(Token = "0x6002CAC")]
		[Address(RVA = "0x1336594", Offset = "0x1336594", VA = "0x1336594")]
		public void SceneActive_SafeRoom()
		{
		}

		[Token(Token = "0x6002CAD")]
		[Address(RVA = "0x13376F0", Offset = "0x13376F0", VA = "0x13376F0")]
		public void SceneActive_Step(int step)
		{
		}

		[Token(Token = "0x6002CAE")]
		[Address(RVA = "0x1337438", Offset = "0x1337438", VA = "0x1337438")]
		public GameStepSceneConfig GetStepSceneConfig(int step)
		{
			return null;
		}

		[Token(Token = "0x6002CAF")]
		[Address(RVA = "0x13377D0", Offset = "0x13377D0", VA = "0x13377D0")]
		public void LoadGameStepScene(int step, Action loadEnd, bool isLoadEndActive = false)
		{
		}

		[Token(Token = "0x6002CB0")]
		[Address(RVA = "0x1337AEC", Offset = "0x1337AEC", VA = "0x1337AEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF2EC4", Offset = "0xEF2EC4")]
		private IEnumerator StartLoadStepScene(params int[] scenes)
		{
			return null;
		}

		[Token(Token = "0x6002CB1")]
		[Address(RVA = "0x1337BB0", Offset = "0x1337BB0", VA = "0x1337BB0")]
		private void StopLoadStepScene()
		{
		}

		[Token(Token = "0x6002CB2")]
		[Address(RVA = "0x1334120", Offset = "0x1334120", VA = "0x1334120")]
		public void UnLoadGameStepScene(Action unLoadEnd)
		{
		}

		[Token(Token = "0x6002CB3")]
		[Address(RVA = "0x1337CC4", Offset = "0x1337CC4", VA = "0x1337CC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF2F28", Offset = "0xEF2F28")]
		private IEnumerator StartUnLoadStepScene(params int[] scenes)
		{
			return null;
		}

		[Token(Token = "0x6002CB4")]
		[Address(RVA = "0x1337D88", Offset = "0x1337D88", VA = "0x1337D88")]
		public void ChangeLoadStepScene(int step, Action loadEnd, bool isLoadEndActive = false)
		{
		}

		[Token(Token = "0x6002CB5")]
		[Address(RVA = "0x1337F4C", Offset = "0x1337F4C", VA = "0x1337F4C")]
		private void GameStepSceneLoadedEnd(Scene scene, LoadSceneMode loadMode)
		{
		}

		[Token(Token = "0x6002CB6")]
		[Address(RVA = "0x1336834", Offset = "0x1336834", VA = "0x1336834")]
		public void Load(Action endCallBack, bool isLoadingUI = true)
		{
		}

		[Token(Token = "0x6002CB7")]
		[Address(RVA = "0x1338198", Offset = "0x1338198", VA = "0x1338198")]
		private void SafeRoomSceneActive(Scene scene, LoadSceneMode loadMode)
		{
		}

		[Token(Token = "0x6002CB8")]
		[Address(RVA = "0x13380F4", Offset = "0x13380F4", VA = "0x13380F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF2F8C", Offset = "0xEF2F8C")]
		private IEnumerator StartLoad(bool isLoadingUI, params int[] scenes)
		{
			return null;
		}

		[Token(Token = "0x6002CB9")]
		[Address(RVA = "0x1338298", Offset = "0x1338298", VA = "0x1338298")]
		private void StopLoad()
		{
		}

		[Token(Token = "0x6002CBA")]
		[Address(RVA = "0x1334014", Offset = "0x1334014", VA = "0x1334014")]
		public void SetLoadingMask(bool isShow)
		{
		}

		[Token(Token = "0x6002CBB")]
		[Address(RVA = "0x13367A0", Offset = "0x13367A0", VA = "0x13367A0")]
		public void Unload([Optional] Action unLoadFinish)
		{
		}

		[Token(Token = "0x6002CBC")]
		[Address(RVA = "0x133831C", Offset = "0x133831C", VA = "0x133831C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF2FF0", Offset = "0xEF2FF0")]
		private IEnumerator StartUnLoad(Action unLoadFinish)
		{
			return null;
		}

		[Token(Token = "0x6002CBD")]
		[Address(RVA = "0x1337FE8", Offset = "0x1337FE8", VA = "0x1337FE8")]
		private void StopUnLoad()
		{
		}

		[Token(Token = "0x6002CBE")]
		[Address(RVA = "0x13383E0", Offset = "0x13383E0", VA = "0x13383E0")]
		public GameSceneConfig()
		{
		}
	}

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameSceneManager Instance;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameSceneConfig curSceneCofig;

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x133672C", Offset = "0x133672C", VA = "0x133672C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x13339C0", Offset = "0x13339C0", VA = "0x13339C0")]
	public void InitScene()
	{
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x13364C8", Offset = "0x13364C8", VA = "0x13364C8")]
	public void LoadScene([Optional] Action endCallBack, bool isLoadingUI = true)
	{
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x13369CC", Offset = "0x13369CC", VA = "0x13369CC")]
	public void UnLoadScene()
	{
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x13369E0", Offset = "0x13369E0", VA = "0x13369E0")]
	public Transform GetCameraRigGroupPoint(e_group_type groupType, bool isAI, int site)
	{
		return null;
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x1336FC8", Offset = "0x1336FC8", VA = "0x1336FC8")]
	public Transform GetSafeRoomCameraRigGroupPoint(e_group_type groupType, int site)
	{
		return null;
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x1337424", Offset = "0x1337424", VA = "0x1337424")]
	private void LoadSceneEnd()
	{
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x1337428", Offset = "0x1337428", VA = "0x1337428")]
	public GameStepSceneConfig GetCurConfigStepScene(int sceneStepIndex)
	{
		return null;
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x13374E0", Offset = "0x13374E0", VA = "0x13374E0")]
	public bool IsStepSceneLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x1337500", Offset = "0x1337500", VA = "0x1337500")]
	public GameSceneManager()
	{
	}
}
[Token(Token = "0x2000226")]
public class InputManager : MonoSingleton<InputManager>
{
	[Token(Token = "0x4000E7C")]
	private const string ButtonKeyName = "Fire1";

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private KeyCode TrackedObject_Left_KeyCode;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private KeyCode TrackedObject_Right_KeyCode;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool bGamePause;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action vrControllerSelector;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7BE4", Offset = "0xEE7BE4")]
	private int <button_type>k__BackingField;

	[Token(Token = "0x1700014A")]
	public int button_type
	{
		[Token(Token = "0x6001020")]
		[Address(RVA = "0x146F350", Offset = "0x146F350", VA = "0x146F350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0328", Offset = "0xEF0328")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001021")]
		[Address(RVA = "0x146F358", Offset = "0x146F358", VA = "0x146F358")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0338", Offset = "0xEF0338")]
		private set
		{
		}
	}

	[Token(Token = "0x1700014B")]
	public int vr_type
	{
		[Token(Token = "0x6001022")]
		[Address(RVA = "0x146F360", Offset = "0x146F360", VA = "0x146F360")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700014C")]
	public Vector3 mousePosition
	{
		[Token(Token = "0x6001027")]
		[Address(RVA = "0x147043C", Offset = "0x147043C", VA = "0x147043C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x14000020")]
	public event Action leftWeaponPressDown
	{
		[Token(Token = "0x6001010")]
		[Address(RVA = "0x146E910", Offset = "0x146E910", VA = "0x146E910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0228", Offset = "0xEF0228")]
		add
		{
		}
		[Token(Token = "0x6001011")]
		[Address(RVA = "0x146E9B4", Offset = "0x146E9B4", VA = "0x146E9B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0238", Offset = "0xEF0238")]
		remove
		{
		}
	}

	[Token(Token = "0x14000021")]
	public event Action leftWeaponPressUp
	{
		[Token(Token = "0x6001012")]
		[Address(RVA = "0x146EA58", Offset = "0x146EA58", VA = "0x146EA58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0248", Offset = "0xEF0248")]
		add
		{
		}
		[Token(Token = "0x6001013")]
		[Address(RVA = "0x146EAFC", Offset = "0x146EAFC", VA = "0x146EAFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0258", Offset = "0xEF0258")]
		remove
		{
		}
	}

	[Token(Token = "0x14000022")]
	public event Action rightWeaponPressDown
	{
		[Token(Token = "0x6001014")]
		[Address(RVA = "0x146EBA0", Offset = "0x146EBA0", VA = "0x146EBA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0268", Offset = "0xEF0268")]
		add
		{
		}
		[Token(Token = "0x6001015")]
		[Address(RVA = "0x146EC44", Offset = "0x146EC44", VA = "0x146EC44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0278", Offset = "0xEF0278")]
		remove
		{
		}
	}

	[Token(Token = "0x14000023")]
	public event Action rightWeaponPressUp
	{
		[Token(Token = "0x6001016")]
		[Address(RVA = "0x146ECE8", Offset = "0x146ECE8", VA = "0x146ECE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0288", Offset = "0xEF0288")]
		add
		{
		}
		[Token(Token = "0x6001017")]
		[Address(RVA = "0x146ED8C", Offset = "0x146ED8C", VA = "0x146ED8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0298", Offset = "0xEF0298")]
		remove
		{
		}
	}

	[Token(Token = "0x14000024")]
	public event Action startOrStopGame
	{
		[Token(Token = "0x6001018")]
		[Address(RVA = "0x146EE30", Offset = "0x146EE30", VA = "0x146EE30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF02A8", Offset = "0xEF02A8")]
		add
		{
		}
		[Token(Token = "0x6001019")]
		[Address(RVA = "0x146EED4", Offset = "0x146EED4", VA = "0x146EED4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF02B8", Offset = "0xEF02B8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000025")]
	public event Action allMonsterDie
	{
		[Token(Token = "0x600101A")]
		[Address(RVA = "0x146EF78", Offset = "0x146EF78", VA = "0x146EF78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF02C8", Offset = "0xEF02C8")]
		add
		{
		}
		[Token(Token = "0x600101B")]
		[Address(RVA = "0x146F01C", Offset = "0x146F01C", VA = "0x146F01C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF02D8", Offset = "0xEF02D8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000026")]
	public event Action skinCutScenes
	{
		[Token(Token = "0x600101C")]
		[Address(RVA = "0x146F0C0", Offset = "0x146F0C0", VA = "0x146F0C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF02E8", Offset = "0xEF02E8")]
		add
		{
		}
		[Token(Token = "0x600101D")]
		[Address(RVA = "0x146F164", Offset = "0x146F164", VA = "0x146F164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF02F8", Offset = "0xEF02F8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000027")]
	public event Action controlServerUI
	{
		[Token(Token = "0x600101E")]
		[Address(RVA = "0x146F208", Offset = "0x146F208", VA = "0x146F208")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0308", Offset = "0xEF0308")]
		add
		{
		}
		[Token(Token = "0x600101F")]
		[Address(RVA = "0x146F2AC", Offset = "0x146F2AC", VA = "0x146F2AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0318", Offset = "0xEF0318")]
		remove
		{
		}
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x146F3D8", Offset = "0x146F3D8", VA = "0x146F3D8")]
	public void InitVRControllerObjects()
	{
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x146F3DC", Offset = "0x146F3DC", VA = "0x146F3DC")]
	public void RefreshVRButton(int weapon_Type)
	{
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x146FD04", Offset = "0x146FD04", VA = "0x146FD04")]
	private void Update()
	{
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0x1470438", Offset = "0x1470438", VA = "0x1470438")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x1470424", Offset = "0x1470424", VA = "0x1470424")]
	private void notifyAction(Action action)
	{
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x14704C0", Offset = "0x14704C0", VA = "0x14704C0")]
	private void GameEffectDebug()
	{
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x14704E4", Offset = "0x14704E4", VA = "0x14704E4")]
	public InputManager()
	{
	}
}
[Token(Token = "0x2000227")]
public class ObjectCacheManager : Singleton<ObjectCacheManager>
{
	[Serializable]
	[Token(Token = "0x20005BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4ED0", Offset = "0xEE4ED0")]
	private sealed class <>c
	{
		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<HitResultData> <>9__5_0;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<HitResultData> <>9__5_1;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<UnitResultData> <>9__5_2;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<UnitResultData> <>9__5_3;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<FSMSystem> <>9__5_4;

		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action<FSMSystem> <>9__5_5;

		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Func<FSMState> <>9__5_6;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Action<FSMState> <>9__5_7;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Func<SkillBase> <>9__5_8;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Action<SkillBase> <>9__5_9;

		[Token(Token = "0x6002CC0")]
		[Address(RVA = "0x13898D4", Offset = "0x13898D4", VA = "0x13898D4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002CC1")]
		[Address(RVA = "0x13898DC", Offset = "0x13898DC", VA = "0x13898DC")]
		internal HitResultData <.ctor>b__5_0()
		{
			return null;
		}

		[Token(Token = "0x6002CC2")]
		[Address(RVA = "0x1389938", Offset = "0x1389938", VA = "0x1389938")]
		internal void <.ctor>b__5_1(HitResultData data)
		{
		}

		[Token(Token = "0x6002CC3")]
		[Address(RVA = "0x1389954", Offset = "0x1389954", VA = "0x1389954")]
		internal UnitResultData <.ctor>b__5_2()
		{
			return null;
		}

		[Token(Token = "0x6002CC4")]
		[Address(RVA = "0x13899B0", Offset = "0x13899B0", VA = "0x13899B0")]
		internal void <.ctor>b__5_3(UnitResultData data)
		{
		}

		[Token(Token = "0x6002CC5")]
		[Address(RVA = "0x13899CC", Offset = "0x13899CC", VA = "0x13899CC")]
		internal FSMSystem <.ctor>b__5_4()
		{
			return null;
		}

		[Token(Token = "0x6002CC6")]
		[Address(RVA = "0x1389A28", Offset = "0x1389A28", VA = "0x1389A28")]
		internal void <.ctor>b__5_5(FSMSystem fsm)
		{
		}

		[Token(Token = "0x6002CC7")]
		[Address(RVA = "0x1389A44", Offset = "0x1389A44", VA = "0x1389A44")]
		internal FSMState <.ctor>b__5_6()
		{
			return null;
		}

		[Token(Token = "0x6002CC8")]
		[Address(RVA = "0x1389AA0", Offset = "0x1389AA0", VA = "0x1389AA0")]
		internal void <.ctor>b__5_7(FSMState state)
		{
		}

		[Token(Token = "0x6002CC9")]
		[Address(RVA = "0x1389ABC", Offset = "0x1389ABC", VA = "0x1389ABC")]
		internal SkillBase <.ctor>b__5_8()
		{
			return null;
		}

		[Token(Token = "0x6002CCA")]
		[Address(RVA = "0x1389B18", Offset = "0x1389B18", VA = "0x1389B18")]
		internal void <.ctor>b__5_9(SkillBase skill)
		{
		}
	}

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CacheUtils.ObjectPool<HitResultData> HitResultDataPool;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CacheUtils.ObjectPool<UnitResultData> UnitResultDataPool;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CacheUtils.ObjectPool<FSMSystem> FSMSystemPool;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CacheUtils.ObjectPool<FSMState> FSMStatePool;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CacheUtils.ObjectPool<SkillBase> SkillPool;

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x13890FC", Offset = "0x13890FC", VA = "0x13890FC")]
	public ObjectCacheManager()
	{
	}
}
[Token(Token = "0x2000228")]
internal class RaycastJobManager : MonoSingleton<RaycastJobManager>
{
	[Token(Token = "0x20005C0")]
	public struct RayData
	{
		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ResultsDelegate cb;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public RaycastCommand raycastCommand;

		[Token(Token = "0x6002CCB")]
		[Address(RVA = "0x1002998", Offset = "0x1002998", VA = "0x1002998")]
		public RaycastCommand GetCommand()
		{
			return default(RaycastCommand);
		}
	}

	[Token(Token = "0x20005C1")]
	public delegate void ResultsDelegate(int index, int length);

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<RayData> rayDatas;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int hitTotle;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[WriteOnly]
	private NativeArray<RaycastHit> results;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[ReadOnly]
	private NativeArray<RaycastCommand> commands;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private JobHandle handle;

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x13B205C", Offset = "0x13B205C", VA = "0x13B205C")]
	public void Add(Vector3 origin, Vector3 direction, float distance, int maxHits, int layerMask, ResultsDelegate cb)
	{
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x13B21CC", Offset = "0x13B21CC", VA = "0x13B21CC")]
	public RaycastHit GetResult(int index)
	{
		return default(RaycastHit);
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x13B2210", Offset = "0x13B2210", VA = "0x13B2210")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x13B275C", Offset = "0x13B275C", VA = "0x13B275C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x13B2804", Offset = "0x13B2804", VA = "0x13B2804")]
	public RaycastJobManager()
	{
	}
}
[Token(Token = "0x2000229")]
public class SettingManager : Singleton<SettingManager>
{
	[Token(Token = "0x20005C2")]
	[SerializeField]
	public class PlayerInfo
	{
		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public IPEndPoint ipInfo;

		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public e_group_type playerGroup;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public e_Player_Style playeType;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public e_weapon_group playerWeapon;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public int site;

		[Token(Token = "0x6002CD0")]
		[Address(RVA = "0x12653BC", Offset = "0x12653BC", VA = "0x12653BC")]
		public PlayerInfo()
		{
		}
	}

	[Token(Token = "0x20005C3")]
	public class hardwareStruct
	{
		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int vr_type;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int hw_type;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int button_type;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int weapon_type;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 pos_offset_l;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 rot_offset_l;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 pos_offset_r;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 rot_offset_r;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string fire_l;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string fire_r;

		[Token(Token = "0x6002CD1")]
		[Address(RVA = "0x12655A0", Offset = "0x12655A0", VA = "0x12655A0")]
		public (Vector3, Vector3) GetDataByDir(bool isRight)
		{
			return default((Vector3, Vector3));
		}

		[Token(Token = "0x6002CD2")]
		[Address(RVA = "0x1265248", Offset = "0x1265248", VA = "0x1265248")]
		public hardwareStruct()
		{
		}
	}

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string GameVersion;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string PlatformVersion;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string GameName;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string BundleVersionCode;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool debug;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool isShowFPS;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public e_Server_Type ServerType;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MsgHandler.NetType NetType;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool useVRInput;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string ServerIP;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int ServerPort;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string ClientIP;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int ClientPort;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string[] ClientIPs;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int[] ClientPorts;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool IsServer;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool IsOffline;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Dictionary<string, PlayerInfo> initPlayerInfoDic;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 CameraRigPosOffset;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 CameraRigRotOffset;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int Port;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string platformIP;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int platformReceivePort;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int platformSendPort;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int hardware_type;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int vr_hmd_type;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool IsDemoModel;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<hardwareStruct> hardwareStructs;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private hardwareStruct def_hardwareStruct;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool isShake;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	public ushort shakeValue_min;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public ushort shakeValue_max;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public e_type_language language;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool IsEnableGroupDamage;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int CheckOpenVRRuntimeNum;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Vector3 FixEulerAngleOffset;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool isLive;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	public bool isRecordCamera;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	public bool isEnableBhaptics;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
	public bool isEnableVoice;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public GameModeType gameMode;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public bool useFloorTracking;

	[Token(Token = "0x4000EBC")]
	public const int GAME_SETTING_BACKUP0 = 1;

	[Token(Token = "0x4000EBD")]
	public const int GAME_SETTING_BACKUP1 = 2;

	[Token(Token = "0x4000EBE")]
	public const int GAME_SETTING_BACKUP2 = 4;

	[Token(Token = "0x4000EBF")]
	public const int GAME_SETTING_BACKUP3 = 8;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public int gameSetting;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public bool IsPlayLogo;

	[Token(Token = "0x1700014D")]
	public string GameTitle
	{
		[Token(Token = "0x6001031")]
		[Address(RVA = "0x1262E10", Offset = "0x1262E10", VA = "0x1262E10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700014E")]
	public bool IsStandingMode
	{
		[Token(Token = "0x6001035")]
		[Address(RVA = "0x1252368", Offset = "0x1252368", VA = "0x1252368")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x1262FC4", Offset = "0x1262FC4", VA = "0x1262FC4")]
	public hardwareStruct GetHardwareStruct(int vr_type, int hw_type, int weapon_type)
	{
		return null;
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x1263090", Offset = "0x1263090", VA = "0x1263090")]
	private bool CheckHardwareStruct(int vr_type, int hw_type, int weapon_type)
	{
		return default(bool);
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x1263164", Offset = "0x1263164", VA = "0x1263164")]
	public hardwareStruct GetCurHardwareStruct(int weapon_type)
	{
		return null;
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x1263174", Offset = "0x1263174", VA = "0x1263174")]
	public void Init()
	{
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x1265098", Offset = "0x1265098", VA = "0x1265098")]
	private string LoadSetupFile()
	{
		return null;
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x12631C0", Offset = "0x12631C0", VA = "0x12631C0")]
	private bool LoadSetup()
	{
		return default(bool);
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x1265250", Offset = "0x1265250", VA = "0x1265250")]
	public PlayerInfo GetPlayerInfoByIP(string ip)
	{
		return null;
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x1264D80", Offset = "0x1264D80", VA = "0x1264D80")]
	public static string GetPlatformIP()
	{
		return null;
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x12653C4", Offset = "0x12653C4", VA = "0x12653C4")]
	public SettingManager()
	{
	}
}
[Token(Token = "0x200022A")]
public class StatisticalManager : Singleton<StatisticalManager>
{
	[Token(Token = "0x20005C4")]
	private enum e_StatisticalType
	{
		[Token(Token = "0x4002117")]
		KillMonster,
		[Token(Token = "0x4002118")]
		KillMonsterHead,
		[Token(Token = "0x4002119")]
		PlayerDeath
	}

	[Token(Token = "0x20005C5")]
	private struct StatisticalCell
	{
		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int playerId;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public e_StatisticalType type;

		[Token(Token = "0x400211C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public object arg1;
	}

	[Serializable]
	[Token(Token = "0x20005C6")]
	public class StatisticalResultData
	{
		[Token(Token = "0x400211D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int playerId;

		[Token(Token = "0x400211E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int preLevel;

		[Token(Token = "0x400211F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int level;

		[Token(Token = "0x4002120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int preExp;

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int exp;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float score;

		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int totalKill;

		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int totalKillhead;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int totalDie;

		[Token(Token = "0x6002CD3")]
		[Address(RVA = "0x12CB358", Offset = "0x12CB358", VA = "0x12CB358")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002CD4")]
		[Address(RVA = "0x12CAFB0", Offset = "0x12CAFB0", VA = "0x12CAFB0")]
		public void ClearForCalculate()
		{
		}

		[Token(Token = "0x6002CD5")]
		[Address(RVA = "0x12CAD58", Offset = "0x12CAD58", VA = "0x12CAD58")]
		public StatisticalResultData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005C7")]
	public class StatisticalResults
	{
		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public int winGroupId;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public float gameTime;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public int curProgress;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		public int maxProgress;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public List<StatisticalResultData> Results;

		[Token(Token = "0x17000462")]
		public float GameTime
		{
			[Token(Token = "0x6002CD7")]
			[Address(RVA = "0x12CB368", Offset = "0x12CB368", VA = "0x12CB368")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000463")]
		public float TotleScore
		{
			[Token(Token = "0x6002CD8")]
			[Address(RVA = "0x12C87C4", Offset = "0x12C87C4", VA = "0x12C87C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6002CD6")]
		[Address(RVA = "0x12C99B4", Offset = "0x12C99B4", VA = "0x12C99B4")]
		public StatisticalResultData GetResultById(int playerId)
		{
			return null;
		}

		[Token(Token = "0x6002CD9")]
		[Address(RVA = "0x12CAFBC", Offset = "0x12CAFBC", VA = "0x12CAFBC")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x6002CDA")]
		[Address(RVA = "0x12C9EB8", Offset = "0x12C9EB8", VA = "0x12C9EB8")]
		public static StatisticalResults ToResults(string str)
		{
			return null;
		}

		[Token(Token = "0x6002CDB")]
		[Address(RVA = "0x12CA158", Offset = "0x12CA158", VA = "0x12CA158")]
		public StatisticalResults()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005C8")]
	public class PlatformStatistical
	{
		[Serializable]
		[Token(Token = "0x2000974")]
		public class PlayerData
		{
			[Token(Token = "0x4002399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int pos;

			[Token(Token = "0x400239A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int score;

			[Token(Token = "0x400239B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int preLevel;

			[Token(Token = "0x400239C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int level;

			[Token(Token = "0x400239D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int preExp;

			[Token(Token = "0x400239E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int exp;

			[Token(Token = "0x400239F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int kill;

			[Token(Token = "0x40023A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int headKill;

			[Token(Token = "0x40023A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int dead;

			[Token(Token = "0x40023A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int passCount;

			[Token(Token = "0x40023A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int curProgress;

			[Token(Token = "0x40023A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public int maxProgress;

			[Token(Token = "0x40023A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public InstanceData[] instanceDatas;

			[Token(Token = "0x60031CA")]
			[Address(RVA = "0x12CAB18", Offset = "0x12CAB18", VA = "0x12CAB18")]
			public PlayerData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000975")]
		public class InstanceData
		{
			[Token(Token = "0x40023A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int id;

			[Token(Token = "0x40023A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int status;

			[Token(Token = "0x60031CB")]
			[Address(RVA = "0x12CAB20", Offset = "0x12CAB20", VA = "0x12CAB20")]
			public InstanceData()
			{
			}
		}

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int result;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int gameTime;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerData[] playerDatas;

		[Token(Token = "0x6002CDC")]
		[Address(RVA = "0x12CAB10", Offset = "0x12CAB10", VA = "0x12CAB10")]
		public PlatformStatistical()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4EF0", Offset = "0xEE4EF0")]
	private sealed class <>c
	{
		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<StatisticalResultData> <>9__53_0;

		[Token(Token = "0x6002CDE")]
		[Address(RVA = "0x12CB2FC", Offset = "0x12CB2FC", VA = "0x12CB2FC")]
		public <>c()
		{
		}

		[Token(Token = "0x6002CDF")]
		[Address(RVA = "0x12CB304", Offset = "0x12CB304", VA = "0x12CB304")]
		internal int <Calculate>b__53_0(StatisticalResultData x, StatisticalResultData y)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, List<StatisticalCell>> statisticalCellDic;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, StatisticalResultData> statisticalResultsDic;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7C14", Offset = "0xEE7C14")]
	private StatisticalResults <statisticalResults>k__BackingField;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7C24", Offset = "0xEE7C24")]
	private bool <IsStart>k__BackingField;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Stopwatch gameTimer;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7C34", Offset = "0xEE7C34")]
	private float <GameTimer>k__BackingField;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7C44", Offset = "0xEE7C44")]
	private float <TotalTime>k__BackingField;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Action StatisticalUpdate;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isNeedCalculate;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlatformStatistical platformStatistical;

	[Token(Token = "0x1700014F")]
	public StatisticalResults statisticalResults
	{
		[Token(Token = "0x600103C")]
		[Address(RVA = "0x12C9B34", Offset = "0x12C9B34", VA = "0x12C9B34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0348", Offset = "0xEF0348")]
		get
		{
			return null;
		}
		[Token(Token = "0x600103D")]
		[Address(RVA = "0x12C9B3C", Offset = "0x12C9B3C", VA = "0x12C9B3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0358", Offset = "0xEF0358")]
		private set
		{
		}
	}

	[Token(Token = "0x17000150")]
	public bool IsStart
	{
		[Token(Token = "0x600103E")]
		[Address(RVA = "0x12C9B44", Offset = "0x12C9B44", VA = "0x12C9B44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0368", Offset = "0xEF0368")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600103F")]
		[Address(RVA = "0x12C9B4C", Offset = "0x12C9B4C", VA = "0x12C9B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0378", Offset = "0xEF0378")]
		private set
		{
		}
	}

	[Token(Token = "0x17000151")]
	public float GameTimer
	{
		[Token(Token = "0x6001040")]
		[Address(RVA = "0x12C9B58", Offset = "0x12C9B58", VA = "0x12C9B58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0388", Offset = "0xEF0388")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001041")]
		[Address(RVA = "0x12C9B60", Offset = "0x12C9B60", VA = "0x12C9B60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0398", Offset = "0xEF0398")]
		set
		{
		}
	}

	[Token(Token = "0x17000152")]
	private float TotalTime
	{
		[Token(Token = "0x6001042")]
		[Address(RVA = "0x12C9B68", Offset = "0x12C9B68", VA = "0x12C9B68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF03A8", Offset = "0xEF03A8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001043")]
		[Address(RVA = "0x12C9B70", Offset = "0x12C9B70", VA = "0x12C9B70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF03B8", Offset = "0xEF03B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000153")]
	public float RemainingTime
	{
		[Token(Token = "0x6001044")]
		[Address(RVA = "0x12C9B78", Offset = "0x12C9B78", VA = "0x12C9B78")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x12C9BF0", Offset = "0x12C9BF0", VA = "0x12C9BF0")]
	public void SetTotalTime(float time)
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x12C9BF8", Offset = "0x12C9BF8", VA = "0x12C9BF8")]
	public void TimerStop()
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x12C9CB4", Offset = "0x12C9CB4", VA = "0x12C9CB4")]
	public void TimerResume()
	{
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x12C9D80", Offset = "0x12C9D80", VA = "0x12C9D80")]
	public void SetStatisticalResults(string json)
	{
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x12C9F84", Offset = "0x12C9F84", VA = "0x12C9F84")]
	public void Init()
	{
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x12CA0B8", Offset = "0x12CA0B8", VA = "0x12CA0B8")]
	public void Clear()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x12CA1D4", Offset = "0x12CA1D4", VA = "0x12CA1D4")]
	public void StartStatistical()
	{
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x12CA1EC", Offset = "0x12CA1EC", VA = "0x12CA1EC")]
	public void UpdateStatistical()
	{
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x12CA330", Offset = "0x12CA330", VA = "0x12CA330")]
	public void StepStatistical()
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x12CA334", Offset = "0x12CA334", VA = "0x12CA334")]
	public void EndStatistical()
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x12CA348", Offset = "0x12CA348", VA = "0x12CA348")]
	public void DoStatistical()
	{
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x12CAB28", Offset = "0x12CAB28", VA = "0x12CAB28")]
	public string GetPlatformStatistical()
	{
		return null;
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x12CAB34", Offset = "0x12CAB34", VA = "0x12CAB34")]
	private void AddToDic(StatisticalCell cell)
	{
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x12CAC4C", Offset = "0x12CAC4C", VA = "0x12CAC4C")]
	public void InitPlayer(int playerId)
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x12CAD60", Offset = "0x12CAD60", VA = "0x12CAD60")]
	public void RecordGameStatus(int winGroupId)
	{
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x12CADA0", Offset = "0x12CADA0", VA = "0x12CADA0")]
	public void RecordPlayerFire(int playerId)
	{
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x12CADA4", Offset = "0x12CADA4", VA = "0x12CADA4")]
	public void RecordPlayerDeath(int playerId)
	{
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x12C56DC", Offset = "0x12C56DC", VA = "0x12C56DC")]
	public void RecordPlayerFail(int playerId)
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x12CADE0", Offset = "0x12CADE0", VA = "0x12CADE0")]
	public void RecordLineFail(int playerId)
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x12CADE4", Offset = "0x12CADE4", VA = "0x12CADE4")]
	public void RecordHitMonster(int playerId, bool isHead)
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0x12CADE8", Offset = "0x12CADE8", VA = "0x12CADE8")]
	public void RecordKillMonster(int playerId, bool isHead)
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0x12CAE44", Offset = "0x12CAE44", VA = "0x12CAE44")]
	private StatisticalResultData GetResultData(int playerId)
	{
		return null;
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0x12CAF2C", Offset = "0x12CAF2C", VA = "0x12CAF2C")]
	public void RecordPreResultData(WUnit unit)
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0x12CAF88", Offset = "0x12CAF88", VA = "0x12CAF88")]
	public void RecordLevel(int playerId, int level)
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x12C90AC", Offset = "0x12C90AC", VA = "0x12C90AC")]
	public void Calculate()
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x12CB054", Offset = "0x12CB054", VA = "0x12CB054")]
	private void OnHitPreMessage(e_type_role role, WUnit attacker, WUnit hurter, HitResultData hitData)
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x12CB188", Offset = "0x12CB188", VA = "0x12CB188")]
	public StatisticalManager()
	{
	}
}
[Token(Token = "0x200022B")]
public enum UnitResultDataType
{
	[Token(Token = "0x4000ECD")]
	None,
	[Token(Token = "0x4000ECE")]
	HP,
	[Token(Token = "0x4000ECF")]
	EXP
}
[Token(Token = "0x200022C")]
public enum UnitResultDataValueType
{
	[Token(Token = "0x4000ED1")]
	NONE,
	[Token(Token = "0x4000ED2")]
	INT
}
[Token(Token = "0x200022D")]
public class UnitDataSyncManager : Singleton<UnitDataSyncManager>
{
	[Token(Token = "0x20005CA")]
	public struct tempData
	{
		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int objId;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public UnitResultDataType type;

		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnitResultDataValueType valueType;

		[Token(Token = "0x6002CE0")]
		[Address(RVA = "0x1001378", Offset = "0x1001378", VA = "0x1001378")]
		public tempData(int objId, UnitResultDataType type, UnitResultDataValueType valueType)
		{
		}
	}

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<tempData> tempUnitDataList;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<UnitResultData> tempUnitDataList2;

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x11E22A4", Offset = "0x11E22A4", VA = "0x11E22A4")]
	public void AddUnitDataSync_Int(int objId, UnitResultDataType type)
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x11E2324", Offset = "0x11E2324", VA = "0x11E2324")]
	public void ProcessingUnitData_Send()
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x11E2534", Offset = "0x11E2534", VA = "0x11E2534")]
	private UnitResultData ProcessingUnitData(tempData tempData)
	{
		return null;
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x11E2664", Offset = "0x11E2664", VA = "0x11E2664")]
	public void ProcessingUnitData_Sync(UnitData unitData)
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x11E2830", Offset = "0x11E2830", VA = "0x11E2830")]
	public UnitDataSyncManager()
	{
	}
}
[Token(Token = "0x200022E")]
public class UnitManager : Singleton<UnitManager>
{
	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Action WeaponChange;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<WUnit> PlayerStyleChange;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<WUnit, int, int> LevelChange;

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x11E2BD8", Offset = "0x11E2BD8", VA = "0x11E2BD8")]
	public void ChangePlayerStyle(WUnit unit, e_Player_Style newPlayerStyle, int level)
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x11E3BBC", Offset = "0x11E3BBC", VA = "0x11E3BBC")]
	public void ChangeWeaponStyle(WUnit unit, e_weapon_group newWeaponStyle)
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x11E5338", Offset = "0x11E5338", VA = "0x11E5338")]
	public void ChangeDropWeapon(WUnit unit, e_weapon_group newWeaponStyle)
	{
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x11E56F0", Offset = "0x11E56F0", VA = "0x11E56F0")]
	public void ChangePlayerGroup(WUnit unit, e_group_type groupId)
	{
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0x11E5838", Offset = "0x11E5838", VA = "0x11E5838")]
	private void LocalSiwtchAreaStand(WUnit unit, e_group_type groupId)
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x11E5EA4", Offset = "0x11E5EA4", VA = "0x11E5EA4")]
	public void AllLocalSiwtchAreaStand()
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x11E5B04", Offset = "0x11E5B04", VA = "0x11E5B04")]
	private void OtherSiwtchAreaStand(WUnit unit, e_group_type groupId)
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x11E5FA4", Offset = "0x11E5FA4", VA = "0x11E5FA4")]
	public void AllOtherSiwtchAreaStand()
	{
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x11E5D1C", Offset = "0x11E5D1C", VA = "0x11E5D1C")]
	public static Vector3 GetCameraPosAndRotOffset(Vector3 inputPos, Quaternion inputRot, bool overrideY)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x11E60A4", Offset = "0x11E60A4", VA = "0x11E60A4")]
	public void PlayerLevelUp(WUnit unit, int level, int exp)
	{
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x11E63F4", Offset = "0x11E63F4", VA = "0x11E63F4")]
	private void SetPlayerNumeric(WUnit unit, int playerTableId, int level, int exp)
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x11E6710", Offset = "0x11E6710", VA = "0x11E6710")]
	private void SetMonsterNumeric(WUnit unit, int monsterTableId, int level)
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x11E6A00", Offset = "0x11E6A00", VA = "0x11E6A00")]
	private void SetWeaponNumeric(WUnit unit, int weaponTableId, int level)
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x11E6B2C", Offset = "0x11E6B2C", VA = "0x11E6B2C")]
	public void PlayerLevelReset(WUnit unit)
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x11E6EDC", Offset = "0x11E6EDC", VA = "0x11E6EDC")]
	public WUnit CreateLocalPlayerUnit(int id, e_group_type groupId, e_Player_Style playerStyle, e_weapon_group weaponType, int level)
	{
		return null;
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x11E303C", Offset = "0x11E303C", VA = "0x11E303C")]
	public WUnit CreateLocalPlayerUnit(WUnit unit, e_Player_Style playerStyle, e_weapon_group weaponType, int level)
	{
		return null;
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x11E3D24", Offset = "0x11E3D24", VA = "0x11E3D24")]
	public void TryCreateLocalPlayerWeapon(WUnit unit, e_weapon_group weaponType)
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x11E7188", Offset = "0x11E7188", VA = "0x11E7188")]
	public WUnit CreateOtherPlayer(int id, e_group_type groupId, e_Player_Style playerStyle, e_weapon_group weaponType, int level)
	{
		return null;
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x11E3670", Offset = "0x11E3670", VA = "0x11E3670")]
	public WUnit CreateOtherPlayer(WUnit unit, e_Player_Style playerStyle, e_weapon_group weaponType, int level)
	{
		return null;
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x11E4B7C", Offset = "0x11E4B7C", VA = "0x11E4B7C")]
	public void TryCreateOtherPlayerWeapon(WUnit unit, e_weapon_group weaponType)
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x11E7434", Offset = "0x11E7434", VA = "0x11E7434")]
	public WUnit CreateNPCUnit(int objId, int tableId, e_group_type groupType)
	{
		return null;
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x11E7C40", Offset = "0x11E7C40", VA = "0x11E7C40")]
	public void TryCreateNPCWeapon(WUnit unit, e_weapon_group weaponType)
	{
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x11E8738", Offset = "0x11E8738", VA = "0x11E8738")]
	public WUnit CreateMonsterUnit(int objId, int tableId, int level)
	{
		return null;
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x11E8DD4", Offset = "0x11E8DD4", VA = "0x11E8DD4")]
	public UnitManager()
	{
	}
}
[Token(Token = "0x200022F")]
public class WeaponManager : Singleton<WeaponManager>
{
	[Token(Token = "0x600107D")]
	[Address(RVA = "0x1D6F384", Offset = "0x1D6F384", VA = "0x1D6F384")]
	public (GameObject, e_weapon_type, GameObject, e_weapon_type) CreatePlayerWeaponByGroup(e_weapon_group weaponGroup)
	{
		return default((GameObject, e_weapon_type, GameObject, e_weapon_type));
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x1D6E720", Offset = "0x1D6E720", VA = "0x1D6E720")]
	public (GameObject, e_weapon_type, GameObject, e_weapon_type) CreateNpcWeaponByGroup(e_weapon_group weaponGroup)
	{
		return default((GameObject, e_weapon_type, GameObject, e_weapon_type));
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x1D6F61C", Offset = "0x1D6F61C", VA = "0x1D6F61C")]
	public WeaponManager()
	{
	}
}
[Token(Token = "0x2000230")]
public class DeathAnimation : MonoBehaviour, IDeathDefine
{
	[Token(Token = "0x20005CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4F00", Offset = "0xEE4F00")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action endAction;

		[Token(Token = "0x6002CE1")]
		[Address(RVA = "0x12264DC", Offset = "0x12264DC", VA = "0x12264DC")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6002CE2")]
		[Address(RVA = "0x12264EC", Offset = "0x12264EC", VA = "0x12264EC")]
		internal void <TriggerDeathDefine>b__0()
		{
		}
	}

	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public Animator animationControll;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string aniStateName;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int aniDelay;

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x122637C", Offset = "0x122637C", VA = "0x122637C", Slot = "5")]
	public virtual void TriggerDeathDefine(Action endAction)
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x12264E4", Offset = "0x12264E4", VA = "0x12264E4")]
	public DeathAnimation()
	{
	}
}
[Token(Token = "0x2000231")]
public class DieRecycleObject : IObjectRecycle
{
	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ComponentCacheTools cache;

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x1227AE8", Offset = "0x1227AE8", VA = "0x1227AE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x1227B48", Offset = "0x1227B48", VA = "0x1227B48", Slot = "4")]
	public override void Recycle()
	{
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x1228024", Offset = "0x1228024", VA = "0x1228024", Slot = "5")]
	public override void Recover()
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x1228028", Offset = "0x1228028", VA = "0x1228028")]
	public DieRecycleObject()
	{
	}
}
[Token(Token = "0x2000232")]
public class FirstPersonShootController : MonoBehaviour
{
	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform weaponNode;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform weaponNode2;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform cameraNode;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float moveSpeed;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float blendSpeed;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 moveBlend;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE7C84", Offset = "0xEE7C84")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE7C84", Offset = "0xEE7C84")]
	public float aimVerticalLimit;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE7CDC", Offset = "0xEE7CDC")]
	public float maxViewAngle;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlayerMoveRange playerMoveLimit;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 aimRandom;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 aimVel;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float aimWeight;

	[Token(Token = "0x17000154")]
	private static Vector3 inputVector
	{
		[Token(Token = "0x6001086")]
		[Address(RVA = "0x1328168", Offset = "0x1328168", VA = "0x1328168")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000155")]
	private static Vector3 inputVectorRaw
	{
		[Token(Token = "0x6001087")]
		[Address(RVA = "0x1328208", Offset = "0x1328208", VA = "0x1328208")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x13282A8", Offset = "0x13282A8", VA = "0x13282A8")]
	private void AnimationMove(Vector3 moveInput, bool isMoving)
	{
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0x1328434", Offset = "0x1328434", VA = "0x1328434")]
	private void Move()
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x132871C", Offset = "0x132871C", VA = "0x132871C")]
	private void RotateWeapon(float horAdd, float vertAdd)
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x13289F0", Offset = "0x13289F0", VA = "0x13289F0")]
	public void RotateCharacter(Vector3 forward, float maxAngle, [Optional] Transform fix)
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x1328D80", Offset = "0x1328D80", VA = "0x1328D80")]
	private void Start()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x1328D8C", Offset = "0x1328D8C", VA = "0x1328D8C")]
	private void Update()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x1328DF8", Offset = "0x1328DF8", VA = "0x1328DF8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x1328EB4", Offset = "0x1328EB4", VA = "0x1328EB4")]
	public FirstPersonShootController()
	{
	}
}
[Token(Token = "0x2000233")]
[AttributeAttribute(Name = "ComponentCacheAttribute", RVA = "0xEE1A18", Offset = "0xEE1A18")]
public class HurtDefine : MonoBehaviour
{
	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WUnit _owner;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SwitchInfoData HitSwitchInfo;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioEvent HitAudioEvent;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SwitchInfoData DieSwitchInfo;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isDieAudioPosition;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AudioEvent DieAudioEvent;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SwitchInfoData HeadHitSwitchInfo;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioEvent HeadHitAudioEvent;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SwitchInfoData HeadDieSwitchInfo;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioEvent HeadDieAudioEvent;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider partCollider;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject[] HitEffect;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject[] HitEffectAdd;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject[] DieEffect;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] DieEffectAdd;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float DieDelay;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool isHead;

	[Token(Token = "0x17000156")]
	public WUnit Owner
	{
		[Token(Token = "0x6001092")]
		[Address(RVA = "0x1280BA4", Offset = "0x1280BA4", VA = "0x1280BA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x1280AA4", Offset = "0x1280AA4", VA = "0x1280AA4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6001091")]
	[Address(RVA = "0x1280B9C", Offset = "0x1280B9C", VA = "0x1280B9C")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x1280BAC", Offset = "0x1280BAC", VA = "0x1280BAC")]
	public void SetPartColliderStatus(bool status)
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x1280C6C", Offset = "0x1280C6C", VA = "0x1280C6C")]
	public void ShowHitEffect(Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x1280EE0", Offset = "0x1280EE0", VA = "0x1280EE0")]
	public void ShowHitAduio(Vector3 hitPos, Vector3 hitNormal, Vector3 lookPoint)
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x1281094", Offset = "0x1281094", VA = "0x1281094")]
	public void ShowDieEffect(Vector3 lookPoint)
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x128138C", Offset = "0x128138C", VA = "0x128138C")]
	public void ShowDieAudio(Vector3 lookPoint)
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x12815B8", Offset = "0x12815B8", VA = "0x12815B8")]
	public void SyncPlayerHp(int currentHp)
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x12815BC", Offset = "0x12815BC", VA = "0x12815BC")]
	public void PlayReviveAudio()
	{
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x12815C0", Offset = "0x12815C0", VA = "0x12815C0")]
	public HurtDefine()
	{
	}
}
[Token(Token = "0x2000234")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE1A7C", Offset = "0xEE1A7C")]
public class OtherMonsterNetSyncController : MonoBehaviour
{
	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WUnit owner;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float LerpSpeed;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator animator;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 Pos;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion Rot;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AimIKTools aimIKTools;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isStaticMove;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool isForbidMove;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<bool> AnimatorSetBoolAction;

	[Token(Token = "0x17000157")]
	public bool IsStaticMove
	{
		[Token(Token = "0x600109B")]
		[Address(RVA = "0x138CF28", Offset = "0x138CF28", VA = "0x138CF28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600109C")]
		[Address(RVA = "0x138CF30", Offset = "0x138CF30", VA = "0x138CF30")]
		set
		{
		}
	}

	[Token(Token = "0x17000158")]
	public bool IsForbidMove
	{
		[Token(Token = "0x600109D")]
		[Address(RVA = "0x138CF3C", Offset = "0x138CF3C", VA = "0x138CF3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600109E")]
		[Address(RVA = "0x138CF44", Offset = "0x138CF44", VA = "0x138CF44")]
		set
		{
		}
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x138CF50", Offset = "0x138CF50", VA = "0x138CF50")]
	private void Start()
	{
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x13840DC", Offset = "0x13840DC", VA = "0x13840DC")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x138D030", Offset = "0x138D030", VA = "0x138D030")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x138D0F0", Offset = "0x138D0F0", VA = "0x138D0F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x138D378", Offset = "0x138D378", VA = "0x138D378")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x138D418", Offset = "0x138D418", VA = "0x138D418")]
	public void SetTransformImmediately(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x138D480", Offset = "0x138D480", VA = "0x138D480")]
	public void SyncTransform(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x138D494", Offset = "0x138D494", VA = "0x138D494")]
	public void SyncAnimator(string stateName, float transitionDuration, int layerIndex)
	{
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x138D558", Offset = "0x138D558", VA = "0x138D558")]
	public void SyncAniParameter(string b, bool c, string e, float f, string h, float i)
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x138D6BC", Offset = "0x138D6BC", VA = "0x138D6BC")]
	public void StartAim(string ainState, Vector3 targetPos)
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x138D7F8", Offset = "0x138D7F8", VA = "0x138D7F8")]
	public void StopAim()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x138D8F0", Offset = "0x138D8F0", VA = "0x138D8F0")]
	public void SyncAimPos(Vector3 targetPos)
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x138DA18", Offset = "0x138DA18", VA = "0x138DA18")]
	public OtherMonsterNetSyncController()
	{
	}
}
[Token(Token = "0x2000235")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE1AE0", Offset = "0xEE1AE0")]
public class OtherPlayerNetSyncController : MonoBehaviour
{
	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WUnit owner;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IKAgent ikAgent;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WeaponAgent weaponAgent;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Animator otherAnimator;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayerDeadRagdollTools deadTools;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool InversePlayerForword;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 gunPosition_r;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion gunRotate_r;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 gunForword_r;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 gunPosition_l;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion gunRotate_l;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 gunForword_l;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 prePosition;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float movingTimer;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float startMoveBase;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float movingTime;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float blandScale;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 currentBland;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float smoothSpeed;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float teleportDis;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Vector3 selfPosition;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Quaternion selfRotate;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float modelHight;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float playerHight;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 VRHeadPosition;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Quaternion VRHeadRotate;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector3 VRHeadPosition_raw;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Quaternion VRHeadRotate_raw;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool isStaticMove;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float staticSpeed;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Transform StaticTrn;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool isNetGlobalSync;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 realPos;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool miss;

	[Token(Token = "0x17000159")]
	public Vector3 VRHeadPos
	{
		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x138E8CC", Offset = "0x138E8CC", VA = "0x138E8CC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700015A")]
	public Quaternion VRHeadRot
	{
		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x138EA84", Offset = "0x138EA84", VA = "0x138EA84")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700015B")]
	public Vector3 VRHeadPos_Raw
	{
		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x138EA90", Offset = "0x138EA90", VA = "0x138EA90")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700015C")]
	public Quaternion VRHeadRot_Raw
	{
		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x138EAD0", Offset = "0x138EAD0", VA = "0x138EAD0")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700015D")]
	public bool IsStaticMove
	{
		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x138EAE4", Offset = "0x138EAE4", VA = "0x138EAE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x138EAEC", Offset = "0x138EAEC", VA = "0x138EAEC")]
		set
		{
		}
	}

	[Token(Token = "0x1700015E")]
	public bool IsNetGlobalSync
	{
		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x138EB04", Offset = "0x138EB04", VA = "0x138EB04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x138EAF8", Offset = "0x138EAF8", VA = "0x138EAF8")]
		set
		{
		}
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x138EB0C", Offset = "0x138EB0C", VA = "0x138EB0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x138EB94", Offset = "0x138EB94", VA = "0x138EB94")]
	public void Init(WUnit _owner)
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x138ED30", Offset = "0x138ED30", VA = "0x138ED30")]
	private void Update()
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x138F3B8", Offset = "0x138F3B8", VA = "0x138F3B8")]
	private void CheckMoving(Animator iAnimator)
	{
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x138F160", Offset = "0x138F160", VA = "0x138F160")]
	private void UpdatePlayerData()
	{
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x138F678", Offset = "0x138F678", VA = "0x138F678")]
	public void Die(int ragdollId, Vector3 dir, float hitForce, bool isSameCamp)
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x138F774", Offset = "0x138F774", VA = "0x138F774")]
	public void Alive()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x138E908", Offset = "0x138E908", VA = "0x138E908")]
	private bool CheckRealPosition(Vector3 pos, out Vector3 realPos, out bool miss)
	{
		return default(bool);
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x138F81C", Offset = "0x138F81C", VA = "0x138F81C")]
	public void SyncGun_R(Vector3 pos, Quaternion rotate, Vector3 forward)
	{
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x138F998", Offset = "0x138F998", VA = "0x138F998")]
	public void SyncGun_L(Vector3 pos, Quaternion rotate, Vector3 forward)
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x138FB48", Offset = "0x138FB48", VA = "0x138FB48")]
	public void SyncPlayer(Vector3 pos, Quaternion rotate)
	{
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x138FCD4", Offset = "0x138FCD4", VA = "0x138FCD4")]
	public void SyncVRHead(Vector3 pos, Quaternion rotate, Vector3 pos_raw, Quaternion rotate_raw)
	{
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x138FD04", Offset = "0x138FD04", VA = "0x138FD04")]
	public OtherPlayerNetSyncController()
	{
	}
}
[Token(Token = "0x2000236")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE1B44", Offset = "0xEE1B44")]
public class ServerMonsterNetSyncController : MonoBehaviour
{
	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WUnit owner;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator animator;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NavMeshAgent navAgent;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Action<bool> AnimatorSetBoolAction;

	[Token(Token = "0x1700015F")]
	public float animatorSpeed
	{
		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x125E1E4", Offset = "0x125E1E4", VA = "0x125E1E4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x125E0F8", Offset = "0x125E0F8", VA = "0x125E0F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x125E1DC", Offset = "0x125E1DC", VA = "0x125E1DC")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x125E200", Offset = "0x125E200", VA = "0x125E200")]
	public AnimatorStateInfo GetCurrentAnimatorStateInfo(int layerIndex)
	{
		return default(AnimatorStateInfo);
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x125E21C", Offset = "0x125E21C", VA = "0x125E21C")]
	public void CrossFade(string stateName, float transitionDuration, int layerIndex)
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x125E340", Offset = "0x125E340", VA = "0x125E340")]
	public void SyncAniParameter(string b, bool c, string e, float f, string h, float i)
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x125E4A4", Offset = "0x125E4A4", VA = "0x125E4A4")]
	public void GetTransformInfo(out Vector3 pos, out Quaternion rot)
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x125E510", Offset = "0x125E510", VA = "0x125E510")]
	public void FireStart()
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x125E648", Offset = "0x125E648", VA = "0x125E648")]
	public void Fire()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x125E778", Offset = "0x125E778", VA = "0x125E778")]
	public void FireEnd()
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x125E8B0", Offset = "0x125E8B0", VA = "0x125E8B0")]
	public void SetNavMeshAreaMask(int roomIndex)
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x125E274", Offset = "0x125E274", VA = "0x125E274")]
	public void SendAnimator(string stateName, float transitionDuration, int layerIndex)
	{
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x125E98C", Offset = "0x125E98C", VA = "0x125E98C")]
	public ServerMonsterNetSyncController()
	{
	}
}
[Token(Token = "0x2000237")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE1BA8", Offset = "0xEE1BA8")]
public class ServerPlayerNetSyncController : MonoBehaviour
{
	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7D14", Offset = "0xEE7D14")]
	private WUnit <owner>k__BackingField;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float modelHeight;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform colliderRoot;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator animator;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 prePosition;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float movingTimer;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float startMoveBase;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float movingTime;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float blandScale;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 currentBland;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 selfPosition;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion selfRotate;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 VRHeadPosition;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion VRHeadRotate;

	[Token(Token = "0x17000160")]
	public WUnit owner
	{
		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x125E994", Offset = "0x125E994", VA = "0x125E994")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF03C8", Offset = "0xEF03C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x125E99C", Offset = "0x125E99C", VA = "0x125E99C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF03D8", Offset = "0xEF03D8")]
		private set
		{
		}
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x125E9A4", Offset = "0x125E9A4", VA = "0x125E9A4")]
	public void Init(WUnit unit)
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x125E9AC", Offset = "0x125E9AC", VA = "0x125E9AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x125EA0C", Offset = "0x125EA0C", VA = "0x125EA0C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x125EA10", Offset = "0x125EA10", VA = "0x125EA10")]
	private void CheckMoving()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x125ECF8", Offset = "0x125ECF8", VA = "0x125ECF8")]
	public void SyncPlayer(Vector3 pos, Quaternion rotate)
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x125ED0C", Offset = "0x125ED0C", VA = "0x125ED0C")]
	public void SyncVRHead(Vector3 pos, Quaternion rotate)
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x125ED20", Offset = "0x125ED20", VA = "0x125ED20")]
	public ServerPlayerNetSyncController()
	{
	}
}
[Token(Token = "0x2000238")]
public class ShowFPS : MonoBehaviour
{
	[Token(Token = "0x4000F37")]
	private const float FrameInternal = 0.5f;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fps;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float mFramer;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lastFrame;

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x12667E0", Offset = "0x12667E0", VA = "0x12667E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x1266808", Offset = "0x1266808", VA = "0x1266808")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x1266974", Offset = "0x1266974", VA = "0x1266974")]
	private void Update()
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x12669F0", Offset = "0x12669F0", VA = "0x12669F0")]
	public ShowFPS()
	{
	}
}
[Token(Token = "0x2000239")]
public class ShowFPSHMD : MonoBehaviour
{
	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ShowFPS fpsC;

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0x12669F8", Offset = "0x12669F8", VA = "0x12669F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x1266AA0", Offset = "0x1266AA0", VA = "0x1266AA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x1266B98", Offset = "0x1266B98", VA = "0x1266B98")]
	public ShowFPSHMD()
	{
	}
}
[Token(Token = "0x200023A")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1C0C", Offset = "0xEE1C0C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1C0C", Offset = "0xEE1C0C")]
public class BossSyncBullet : ActionTask
{
	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<int> bulletAssetID;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Transform> firePos;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<Vector3> firePosOffset;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<Vector3> targetOffset;

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x13D86A0", Offset = "0x13D86A0", VA = "0x13D86A0", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x13D8944", Offset = "0x13D8944", VA = "0x13D8944")]
	public BossSyncBullet()
	{
	}
}
[Token(Token = "0x200023B")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1C70", Offset = "0xEE1C70")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1C70", Offset = "0xEE1C70")]
public class CheckDistanceFormPointToTarget : ConditionTask
{
	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> sourcePoint;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<WUnit> targetUnit;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CompareMethod checkType;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> distance;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xEE7D24", Offset = "0xEE7D24")]
	public float floatingPoint;

	[Token(Token = "0x17000161")]
	protected override string info
	{
		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x12C0644", Offset = "0x12C0644", VA = "0x12C0644", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x12C0880", Offset = "0x12C0880", VA = "0x12C0880", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x12C09A0", Offset = "0x12C09A0", VA = "0x12C09A0", Slot = "11")]
	public override void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x12C0AA0", Offset = "0x12C0AA0", VA = "0x12C0AA0")]
	public CheckDistanceFormPointToTarget()
	{
	}
}
[Token(Token = "0x200023C")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1CD4", Offset = "0xEE1CD4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1CD4", Offset = "0xEE1CD4")]
public class CheckListCount : ConditionTask
{
	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<IList> sourceList;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CompareMethod checkType;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<int> valueB;

	[Token(Token = "0x17000162")]
	protected override string info
	{
		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x12C17C4", Offset = "0x12C17C4", VA = "0x12C17C4", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x12C1940", Offset = "0x12C1940", VA = "0x12C1940", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x12C1A40", Offset = "0x12C1A40", VA = "0x12C1A40")]
	public CheckListCount()
	{
	}
}
[Token(Token = "0x200023D")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1D38", Offset = "0xEE1D38")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1D38", Offset = "0xEE1D38")]
public class GetAllPlayersUnit : ActionTask
{
	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<List<WUnit>> saveAs;

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x126CB30", Offset = "0x126CB30", VA = "0x126CB30", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x126CC20", Offset = "0x126CC20", VA = "0x126CC20")]
	public GetAllPlayersUnit()
	{
	}
}
[Token(Token = "0x200023E")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1D9C", Offset = "0xEE1D9C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1D9C", Offset = "0xEE1D9C")]
public class GetFireTargetUnit : ActionTask
{
	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	public BBParameter<WUnit> leftFireTargetUnit;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<WUnit> rightFireTargetUnit;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBParameter<List<WUnit>> targetWUnitList;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<Vector3> lookAtPosition;

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x126CDB8", Offset = "0x126CDB8", VA = "0x126CDB8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x126D14C", Offset = "0x126D14C", VA = "0x126D14C")]
	private Vector3 GetLookAtPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x126D298", Offset = "0x126D298", VA = "0x126D298")]
	public GetFireTargetUnit()
	{
	}
}
[Token(Token = "0x200023F")]
public enum e_type_transform_property
{
	[Token(Token = "0x4000F52")]
	position,
	[Token(Token = "0x4000F53")]
	localPosition,
	[Token(Token = "0x4000F54")]
	rotation,
	[Token(Token = "0x4000F55")]
	localRotation,
	[Token(Token = "0x4000F56")]
	lossyScale
}
[Token(Token = "0x2000240")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1E00", Offset = "0xEE1E00")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1E00", Offset = "0xEE1E00")]
public class GetPropertyInTransform : ActionTask
{
	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> source;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public e_type_transform_property propertyType;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBObjectParameter saveAs;

	[Token(Token = "0x17000163")]
	protected override string info
	{
		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x126DAD8", Offset = "0x126DAD8", VA = "0x126DAD8", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x126DB60", Offset = "0x126DB60", VA = "0x126DB60", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x126DD64", Offset = "0x126DD64", VA = "0x126DD64")]
	public GetPropertyInTransform()
	{
	}
}
[Token(Token = "0x2000241")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1E64", Offset = "0xEE1E64")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1E64", Offset = "0xEE1E64")]
public class MonsterJumpToPoint : ActionTask<Transform>
{
	[Token(Token = "0x20005CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4F10", Offset = "0xEE4F10")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float curTime;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MonsterJumpToPoint <>4__this;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GoSpline path;

		[Token(Token = "0x6002CE3")]
		[Address(RVA = "0x12EB0F0", Offset = "0x12EB0F0", VA = "0x12EB0F0")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6002CE4")]
		[Address(RVA = "0x12EB480", Offset = "0x12EB480", VA = "0x12EB480")]
		internal void <OnExecute>b__0()
		{
		}
	}

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Vector3> targetPos;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xEE7DA0", Offset = "0xEE7DA0")]
	public BBParameter<float> targetPercent;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<float> curPercent;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<float> upFactor;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<float> jumpSpeed;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<AnimationCurve> curve;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<float> time;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public BBParameter<bool> isRefParent;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public BBParameter<Transform> refTransf;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 beginPos;

	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Action updateAction;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private JumpMoveData jumpdata;

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x12EADDC", Offset = "0x12EADDC", VA = "0x12EADDC", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x12EB39C", Offset = "0x12EB39C", VA = "0x12EB39C", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x12EB3B0", Offset = "0x12EB3B0", VA = "0x12EB3B0", Slot = "14")]
	protected override void OnStop()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x12EB0F8", Offset = "0x12EB0F8", VA = "0x12EB0F8")]
	private GoSpline MakePath()
	{
		return null;
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x12EB3E4", Offset = "0x12EB3E4", VA = "0x12EB3E4")]
	public MonsterJumpToPoint()
	{
	}
}
[Token(Token = "0x2000242")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1EC8", Offset = "0xEE1EC8")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1EC8", Offset = "0xEE1EC8")]
public class SetMonsterDestination : ActionTask<Transform>
{
	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 Offset;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> destinationPoint;

	[Token(Token = "0x17000164")]
	protected override string info
	{
		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x1262B9C", Offset = "0x1262B9C", VA = "0x1262B9C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x1262C30", Offset = "0x1262C30", VA = "0x1262C30", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x1262CC4", Offset = "0x1262CC4", VA = "0x1262CC4")]
	public SetMonsterDestination()
	{
	}
}
[Token(Token = "0x2000243")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1F2C", Offset = "0xEE1F2C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1F2C", Offset = "0xEE1F2C")]
public class TransformPoint : ActionTask<Transform>
{
	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> relativeTarget;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 sourceVector3;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<Vector3> saveAtPos;

	[Token(Token = "0x17000165")]
	protected override string info
	{
		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x11DD45C", Offset = "0x11DD45C", VA = "0x11DD45C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x11DD3C8", Offset = "0x11DD3C8", VA = "0x11DD3C8", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x11DD4F0", Offset = "0x11DD4F0", VA = "0x11DD4F0")]
	public TransformPoint()
	{
	}
}
[Token(Token = "0x2000244")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1F90", Offset = "0xEE1F90")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1F90", Offset = "0xEE1F90")]
public class BossBarrageFirePoint : ActionTask
{
	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> firePoint;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Transform> fireBeginPoint;

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x13D0C64", Offset = "0x13D0C64", VA = "0x13D0C64", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0x13D0E90", Offset = "0x13D0E90", VA = "0x13D0E90")]
	public BossBarrageFirePoint()
	{
	}
}
[Token(Token = "0x2000245")]
public class BossBombingBullet : MonsterBullet
{
	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 prePos;

	[Token(Token = "0x4000F6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Vector3 realTargetPos;

	[Token(Token = "0x4000F70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float moveTime;

	[Token(Token = "0x4000F71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float percent;

	[Token(Token = "0x4000F72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject boomEffect;

	[Token(Token = "0x4000F73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioEvent FireAudio;

	[Token(Token = "0x4000F74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public AudioEvent FireLoopAudio;

	[Token(Token = "0x4000F75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private WwiseDefine fireSoundWwise;

	[Token(Token = "0x4000F76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private WwiseDefine fireLoopSoundWwise;

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x13D10F4", Offset = "0x13D10F4", VA = "0x13D10F4", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x13D13F8", Offset = "0x13D13F8", VA = "0x13D13F8", Slot = "23")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x13D1608", Offset = "0x13D1608", VA = "0x13D1608", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x13D1610", Offset = "0x13D1610", VA = "0x13D1610", Slot = "20")]
	protected override void UpdateLifeTime(float time)
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x13D1630", Offset = "0x13D1630", VA = "0x13D1630")]
	private void BulletEnd()
	{
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x13D1730", Offset = "0x13D1730", VA = "0x13D1730")]
	protected void ApplyBoomEffect(Vector3 hitPos)
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x13D1800", Offset = "0x13D1800", VA = "0x13D1800", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x13D1928", Offset = "0x13D1928", VA = "0x13D1928")]
	public BossBombingBullet()
	{
	}
}
[Token(Token = "0x2000246")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE1FF4", Offset = "0xEE1FF4")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE1FF4", Offset = "0xEE1FF4")]
public class BossBombingFirePoint : ActionTask<BossMainController>
{
	[Token(Token = "0x4000F77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<Transform> firePoint;

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x13D19B0", Offset = "0x13D19B0", VA = "0x13D19B0", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6001105")]
	[Address(RVA = "0x13D1B58", Offset = "0x13D1B58", VA = "0x13D1B58")]
	public BossBombingFirePoint()
	{
	}
}
[Token(Token = "0x2000247")]
public class BossRedWarningBullet : MonsterBullet
{
	[Token(Token = "0x6001106")]
	[Address(RVA = "0x13D7CE4", Offset = "0x13D7CE4", VA = "0x13D7CE4", Slot = "21")]
	protected override void RayCheck()
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x13D7CE8", Offset = "0x13D7CE8", VA = "0x13D7CE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x13D7D94", Offset = "0x13D7D94", VA = "0x13D7D94", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x13D7DD0", Offset = "0x13D7DD0", VA = "0x13D7DD0", Slot = "20")]
	protected override void UpdateLifeTime(float time)
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x13D7DF0", Offset = "0x13D7DF0", VA = "0x13D7DF0")]
	public BossRedWarningBullet()
	{
	}
}
[Token(Token = "0x2000248")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE2058", Offset = "0xEE2058")]
[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE2058", Offset = "0xEE2058")]
public class CheckIsBossAppearance : ConditionTask
{
	[Token(Token = "0x17000166")]
	protected override string info
	{
		[Token(Token = "0x600110B")]
		[Address(RVA = "0x12C166C", Offset = "0x12C166C", VA = "0x12C166C", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0x12C1744", Offset = "0x12C1744", VA = "0x12C1744", Slot = "14")]
	protected override bool OnCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0x12C17BC", Offset = "0x12C17BC", VA = "0x12C17BC")]
	public CheckIsBossAppearance()
	{
	}
}
[Token(Token = "0x2000249")]
public class MonsterBulletBarrage : MonsterBullet
{
	[Token(Token = "0x4000F78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioEvent FireAudio;

	[Token(Token = "0x4000F79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public AudioEvent FireLoopAudio;

	[Token(Token = "0x4000F7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private WwiseDefine fireSoundWwise;

	[Token(Token = "0x4000F7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private WwiseDefine fireLoopSoundWwise;

	[Token(Token = "0x600110E")]
	[Address(RVA = "0x12E6DE4", Offset = "0x12E6DE4", VA = "0x12E6DE4", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0x12E6F5C", Offset = "0x12E6F5C", VA = "0x12E6F5C", Slot = "23")]
	protected override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x12E716C", Offset = "0x12E716C", VA = "0x12E716C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x12E7218", Offset = "0x12E7218", VA = "0x12E7218", Slot = "18")]
	public override void ResetPosition()
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x12E7220", Offset = "0x12E7220", VA = "0x12E7220", Slot = "20")]
	protected override void UpdateLifeTime(float time)
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x12E7240", Offset = "0x12E7240", VA = "0x12E7240")]
	private void BulletEnd()
	{
	}

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x12E72FC", Offset = "0x12E72FC", VA = "0x12E72FC", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x12E73A8", Offset = "0x12E73A8", VA = "0x12E73A8")]
	public MonsterBulletBarrage()
	{
	}
}
[Token(Token = "0x200024A")]
public enum BossMainDone
{
	[Token(Token = "0x4000F7D")]
	Default,
	[Token(Token = "0x4000F7E")]
	Born,
	[Token(Token = "0x4000F7F")]
	Barrage,
	[Token(Token = "0x4000F80")]
	Bomb,
	[Token(Token = "0x4000F81")]
	Laser,
	[Token(Token = "0x4000F82")]
	Summon
}
[Token(Token = "0x200024B")]
public enum BossMainToDo
{
	[Token(Token = "0x4000F84")]
	Born,
	[Token(Token = "0x4000F85")]
	Barrage,
	[Token(Token = "0x4000F86")]
	Bomb,
	[Token(Token = "0x4000F87")]
	Laser,
	[Token(Token = "0x4000F88")]
	Summon
}
[Token(Token = "0x200024C")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE20B8", Offset = "0xEE20B8")]
public class BossMainController : MonoBehaviour
{
	[Token(Token = "0x4000F89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isInit;

	[Token(Token = "0x4000F8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x4000F8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform FireBeginPoint;

	[Token(Token = "0x4000F8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Transform> FirePoints;

	[Token(Token = "0x4000F8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Transform> BombingFirePoints;

	[Token(Token = "0x4000F8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform CleanBulletRoot;

	[Token(Token = "0x4000F8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject BloodHudObj;

	[Token(Token = "0x4000F90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private BossMultiBlood BloodHud;

	[Token(Token = "0x4000F91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform BloodHudRoot;

	[Token(Token = "0x4000F92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static BossMainController SingleInstance;

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x13D4930", Offset = "0x13D4930", VA = "0x13D4930")]
	public void Init()
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x13D4E98", Offset = "0x13D4E98", VA = "0x13D4E98")]
	public void SetOwner(WUnit owner)
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x13D4EA0", Offset = "0x13D4EA0", VA = "0x13D4EA0")]
	public void Die()
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x13D4F44", Offset = "0x13D4F44", VA = "0x13D4F44")]
	public void Dodestroy()
	{
	}

	[Token(Token = "0x600111A")]
	[Address(RVA = "0x13D4CA0", Offset = "0x13D4CA0", VA = "0x13D4CA0")]
	private void StartLookAt()
	{
	}

	[Token(Token = "0x600111B")]
	[Address(RVA = "0x13D5030", Offset = "0x13D5030", VA = "0x13D5030")]
	private void EndLookAt()
	{
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x13D0DF0", Offset = "0x13D0DF0", VA = "0x13D0DF0")]
	public Transform GetBarrageFirePoint()
	{
		return null;
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x13D1AB8", Offset = "0x13D1AB8", VA = "0x13D1AB8")]
	public Transform GetBombingFirePoint()
	{
		return null;
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x13D4DE4", Offset = "0x13D4DE4", VA = "0x13D4DE4")]
	private void CleanBullet()
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x13D50A4", Offset = "0x13D50A4", VA = "0x13D50A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x13D4ADC", Offset = "0x13D4ADC", VA = "0x13D4ADC")]
	private void InitBossMultiBlood()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x13D07FC", Offset = "0x13D07FC", VA = "0x13D07FC")]
	public void SetBossBloodActive(bool isActive)
	{
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x13D526C", Offset = "0x13D526C", VA = "0x13D526C")]
	public void SetBossBlood(int hp)
	{
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x13D51B4", Offset = "0x13D51B4", VA = "0x13D51B4")]
	private void UpdateBossBloodHp()
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x13D5318", Offset = "0x13D5318", VA = "0x13D5318")]
	public BossMainController()
	{
	}
}
[Token(Token = "0x200024D")]
[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE211C", Offset = "0xEE211C")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE211C", Offset = "0xEE211C")]
public class BossMainInit : ActionTask<BossMainController>
{
	[Token(Token = "0x4000F93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[BlackboardOnly]
	[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xEE7DB8", Offset = "0xEE7DB8")]
	public BBParameter<WUnit> ownerUnit;

	[Token(Token = "0x4000F94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[BlackboardOnly]
	public BBParameter<GameObject> ownerObj;

	[Token(Token = "0x4000F95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[BlackboardOnly]
	public BBParameter<List<GameObject>> patrolDownPoints;

	[Token(Token = "0x4000F96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[BlackboardOnly]
	public BBParameter<List<GameObject>> patrolUpPointsForSkill1;

	[Token(Token = "0x4000F97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[BlackboardOnly]
	public BBParameter<List<GameObject>> patrolDownPointsForSkill1;

	[Token(Token = "0x4000F98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[BlackboardOnly]
	public BBParameter<List<Transform>> bombPoints;

	[Token(Token = "0x4000F99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[BlackboardOnly]
	public BBParameter<Transform> inCombatPoint;

	[Token(Token = "0x4000F9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[BlackboardOnly]
	public BBParameter<Transform> bombingUpPoint;

	[Token(Token = "0x4000F9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[BlackboardOnly]
	public BBParameter<Transform> bombingUpPoint2;

	[Token(Token = "0x4000F9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[BlackboardOnly]
	public BBParameter<List<GameObject>> laserStayPoints;

	[Token(Token = "0x4000F9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[BlackboardOnly]
	public BBParameter<List<GameObject>> summonStayPoints;

	[Token(Token = "0x4000F9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[BlackboardOnly]
	public BBParameter<GameModeType> gameModeType;

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x13D53C4", Offset = "0x13D53C4", VA = "0x13D53C4", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x13D54B4", Offset = "0x13D54B4", VA = "0x13D54B4")]
	private void InitFromMainScene()
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x13D5FD0", Offset = "0x13D5FD0", VA = "0x13D5FD0")]
	public BossMainInit()
	{
	}
}
[Token(Token = "0x200024E")]
public class BossPointManager : MonoBehaviour
{
	[Token(Token = "0x4000F9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> patrolDownPoints;

	[Token(Token = "0x4000FA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> patrolUpPointsForSkill1;

	[Token(Token = "0x4000FA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> patrolDownPointsForSkill1;

	[Token(Token = "0x4000FA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Transform> bombPoints;

	[Token(Token = "0x4000FA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> laserStayPointList;

	[Token(Token = "0x4000FA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> summonStayPoints;

	[Token(Token = "0x4000FA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform inCombatPoint;

	[Token(Token = "0x4000FA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform barragePoint;

	[Token(Token = "0x4000FA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform bombingUpPoint;

	[Token(Token = "0x4000FA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform bombingUpPoint2;

	[Token(Token = "0x4000FA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform bossAppearanceMoveToPoint;

	[Token(Token = "0x4000FAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform appearanceText;

	[Token(Token = "0x4000FAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject Hud;

	[Token(Token = "0x4000FAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static BossPointManager _instance;

	[Token(Token = "0x17000167")]
	public static BossPointManager Instance
	{
		[Token(Token = "0x6001129")]
		[Address(RVA = "0x13D7C34", Offset = "0x13D7C34", VA = "0x13D7C34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0x13D7C84", Offset = "0x13D7C84", VA = "0x13D7C84")]
	private void Awake()
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0x13D7CDC", Offset = "0x13D7CDC", VA = "0x13D7CDC")]
	public BossPointManager()
	{
	}
}
[Token(Token = "0x200024F")]
public enum CustomEffectType
{
	[Token(Token = "0x4000FAE")]
	Transfer,
	[Token(Token = "0x4000FAF")]
	MagicCircle
}
[Token(Token = "0x2000250")]
public enum CustomEffectOpType
{
	[Token(Token = "0x4000FB1")]
	Op1,
	[Token(Token = "0x4000FB2")]
	Op2
}
[Token(Token = "0x2000251")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE2180", Offset = "0xEE2180")]
public class CustomEffect : MonoBehaviour
{
	[Token(Token = "0x4000FB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool IsInit;

	[Token(Token = "0x4000FB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x4000FB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 OffsetPos;

	[Token(Token = "0x4000FB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject EffectObj;

	[Token(Token = "0x4000FB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioEvent AppearAudio;

	[Token(Token = "0x4000FB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public AudioEvent DisappearAudio;

	[Token(Token = "0x4000FB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WwiseDefine soundWwise;

	[Token(Token = "0x4000FBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject effect;

	[Token(Token = "0x4000FBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject MagicCircleObj;

	[Token(Token = "0x4000FBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform MagicCircleRoot;

	[Token(Token = "0x4000FBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject MagicCircle;

	[Token(Token = "0x600112C")]
	[Address(RVA = "0x121DBDC", Offset = "0x121DBDC", VA = "0x121DBDC")]
	public void Init()
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0x121DFB4", Offset = "0x121DFB4", VA = "0x121DFB4")]
	public void SetOwner(WUnit owner)
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0x121DCE4", Offset = "0x121DCE4", VA = "0x121DCE4")]
	private void InitEffect()
	{
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0x121DFBC", Offset = "0x121DFBC", VA = "0x121DFBC")]
	public void Die()
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0x121E120", Offset = "0x121E120", VA = "0x121E120")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0x121E230", Offset = "0x121E230", VA = "0x121E230")]
	public void TransferShowEffect(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0x121E354", Offset = "0x121E354", VA = "0x121E354")]
	private void DoTransferShowEffect(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0x121E758", Offset = "0x121E758", VA = "0x121E758")]
	public void TransferHideEffect(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0x121E87C", Offset = "0x121E87C", VA = "0x121E87C")]
	private void DoTransferHideEffect(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0x121E630", Offset = "0x121E630", VA = "0x121E630")]
	public void SendTeleport(int efType, int opType, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0x121DE0C", Offset = "0x121DE0C", VA = "0x121DE0C")]
	private void InitMagicCircle()
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0x121DFC4", Offset = "0x121DFC4", VA = "0x121DFC4")]
	public void ShowMagicCircle(bool isShow)
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0x121EBB4", Offset = "0x121EBB4", VA = "0x121EBB4")]
	private void DoMagicCircleStatus(bool isActive)
	{
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0x1212EB8", Offset = "0x1212EB8", VA = "0x1212EB8")]
	public void SyncEffect(CustomEffectType efType, CustomEffectOpType opType, Vector3 value1, Quaternion value2)
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0x121EC5C", Offset = "0x121EC5C", VA = "0x121EC5C")]
	public CustomEffect()
	{
	}
}
[Token(Token = "0x2000252")]
public class DelayActiveEffect : MonoBehaviour
{
	[Token(Token = "0x4000FBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] ActiveObjs;

	[Token(Token = "0x4000FBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float delayTimer;

	[Token(Token = "0x4000FC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool isDoActive;

	[Token(Token = "0x600113B")]
	[Address(RVA = "0x122659C", Offset = "0x122659C", VA = "0x122659C")]
	public void Init(float time)
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0x12265AC", Offset = "0x12265AC", VA = "0x12265AC")]
	private void SetActive(bool isActive)
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0x122663C", Offset = "0x122663C", VA = "0x122663C")]
	private void Update()
	{
	}

	[Token(Token = "0x600113E")]
	[Address(RVA = "0x122669C", Offset = "0x122669C", VA = "0x122669C")]
	public DelayActiveEffect()
	{
	}
}
[Token(Token = "0x2000253")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE21E4", Offset = "0xEE21E4")]
public class MonsterHitTools : MonoBehaviour
{
	[Token(Token = "0x20005CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4F20", Offset = "0xEE4F20")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit owner;

		[Token(Token = "0x6002CE5")]
		[Address(RVA = "0x12EACF0", Offset = "0x12EACF0", VA = "0x12EACF0")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x6002CE6")]
		[Address(RVA = "0x12EAD1C", Offset = "0x12EAD1C", VA = "0x12EAD1C")]
		internal void <DoDie>b__0()
		{
		}
	}

	[Token(Token = "0x4000FC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject model_n;

	[Token(Token = "0x4000FC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject model_d;

	[Token(Token = "0x4000FC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RagdollTools rt_n;

	[Token(Token = "0x4000FC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RagdollTools rt_d;

	[Token(Token = "0x4000FC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isDie;

	[Token(Token = "0x4000FC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, Transform> childNodeDic;

	[Token(Token = "0x600113F")]
	[Address(RVA = "0x12EA4C4", Offset = "0x12EA4C4", VA = "0x12EA4C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x12EA6A8", Offset = "0x12EA6A8", VA = "0x12EA6A8")]
	private void RecursiveCloneTransform(Transform target)
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0x12EA808", Offset = "0x12EA808", VA = "0x12EA808")]
	public void DoHit(WUnit owner, HitResultData hitData)
	{
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0x12EA8C0", Offset = "0x12EA8C0", VA = "0x12EA8C0")]
	public void DoDie(WUnit owner, HitResultData hitData)
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0x12EACF8", Offset = "0x12EACF8", VA = "0x12EACF8")]
	public RagdollTools GetRagdollTools()
	{
		return null;
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x12EA628", Offset = "0x12EA628", VA = "0x12EA628")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0x12EAD14", Offset = "0x12EAD14", VA = "0x12EAD14")]
	public MonsterHitTools()
	{
	}
}
[Token(Token = "0x2000254")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE2248", Offset = "0xEE2248")]
public class MonsterMainController : MonoBehaviour
{
	[Token(Token = "0x4000FC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isInit;

	[Token(Token = "0x4000FC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x4000FC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsCheckBeHit;

	[Token(Token = "0x4000FCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int hitTimes;

	[Token(Token = "0x6001146")]
	[Address(RVA = "0x12EB8D8", Offset = "0x12EB8D8", VA = "0x12EB8D8")]
	public void Init()
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0x12EBAF4", Offset = "0x12EBAF4", VA = "0x12EBAF4")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0x12EBC08", Offset = "0x12EBC08", VA = "0x12EBC08")]
	private void HitMessage(e_type_role _typeRole, WUnit _attacker, WUnit _hurter, HitResultData _hitData)
	{
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0x12EBCF0", Offset = "0x12EBCF0", VA = "0x12EBCF0")]
	public bool IsBeHit()
	{
		return default(bool);
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0x12EA288", Offset = "0x12EA288", VA = "0x12EA288")]
	public void CleanBeHit()
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x12EBD04", Offset = "0x12EBD04", VA = "0x12EBD04")]
	public MonsterMainController()
	{
	}
}
[Token(Token = "0x2000255")]
[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE22AC", Offset = "0xEE22AC")]
public class StepLookAtWithAni : ActionTask<Transform>
{
	[Token(Token = "0x4000FCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BBParameter<float> angularSpeed;

	[Token(Token = "0x4000FCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BBParameter<Transform> targetTransf;

	[Token(Token = "0x4000FCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BBParameter<Vector3> position;

	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BBParameter<bool> isHorizontal;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public BBParameter<WUnit> owner;

	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BBParameter<string> leftAni;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BBParameter<string> rightAni;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float rotTime;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Quaternion curRot;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Quaternion tarRot;

	[Token(Token = "0x600114C")]
	[Address(RVA = "0x12CC04C", Offset = "0x12CC04C", VA = "0x12CC04C", Slot = "12")]
	protected override void OnExecute()
	{
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0x12CC434", Offset = "0x12CC434", VA = "0x12CC434", Slot = "13")]
	protected override void OnUpdate()
	{
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0x12CC574", Offset = "0x12CC574", VA = "0x12CC574")]
	public StepLookAtWithAni()
	{
	}
}
[Token(Token = "0x2000256")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE22E4", Offset = "0xEE22E4")]
public class UnitDelayTimeSuicide : MonoBehaviour
{
	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int delayTime;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isInit;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool isStart;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float runningDelayTime;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float runningTime;

	[Token(Token = "0x600114F")]
	[Address(RVA = "0x11E2914", Offset = "0x11E2914", VA = "0x11E2914")]
	public void Init()
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0x11E2A14", Offset = "0x11E2A14", VA = "0x11E2A14")]
	public void DoStart(int inputDelayTime = -1)
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0x11E2AC4", Offset = "0x11E2AC4", VA = "0x11E2AC4")]
	public void Stop()
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0x11E2ACC", Offset = "0x11E2ACC", VA = "0x11E2ACC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0x11E2AE4", Offset = "0x11E2AE4", VA = "0x11E2AE4")]
	private void DoUpdate()
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0x11E2BC8", Offset = "0x11E2BC8", VA = "0x11E2BC8")]
	public UnitDelayTimeSuicide()
	{
	}
}
[Token(Token = "0x2000257")]
public class MonsterWarning : MonoBehaviour
{
	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool IsInit;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isWarningActive;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ViewFieldRadius;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE7EA0", Offset = "0xEE7EA0")]
	public float ViewFieldAngle;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float AlertRadius;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float WarnningRadius;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool Start;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float WarningTime;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool IsShowEditor;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<int> WarningActiveAct;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioEvent warningSoundAudio;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WwiseDefine warningSoundObj;

	[Token(Token = "0x17000168")]
	public bool IsWarningActive
	{
		[Token(Token = "0x6001155")]
		[Address(RVA = "0x12F1E4C", Offset = "0x12F1E4C", VA = "0x12F1E4C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001156")]
	[Address(RVA = "0x12F1E54", Offset = "0x12F1E54", VA = "0x12F1E54")]
	public void Init()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0x12F20C8", Offset = "0x12F20C8", VA = "0x12F20C8")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x12F20BC", Offset = "0x12F20BC", VA = "0x12F20BC")]
	public void DoStart()
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x12F2260", Offset = "0x12F2260", VA = "0x12F2260")]
	private bool CaculateAlert(Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x12F240C", Offset = "0x12F240C", VA = "0x12F240C")]
	private void Update()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x12F24E8", Offset = "0x12F24E8", VA = "0x12F24E8")]
	private void CheckAlert()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0x12F20B0", Offset = "0x12F20B0", VA = "0x12F20B0")]
	public void ResetActiveAlert()
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0x12F26BC", Offset = "0x12F26BC", VA = "0x12F26BC")]
	private void ActiveAlertSelfAndOther()
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0x12F2968", Offset = "0x12F2968", VA = "0x12F2968")]
	public void ActiveAlert()
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0x12F2780", Offset = "0x12F2780", VA = "0x12F2780")]
	private void SetSound(bool isSet)
	{
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0x12F26B4", Offset = "0x12F26B4", VA = "0x12F26B4")]
	public bool CheckPlayerInRoom(WUnit Owner)
	{
		return default(bool);
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0x12F2A14", Offset = "0x12F2A14", VA = "0x12F2A14")]
	public void WeaponDoFire(WUnit Owner)
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0x12F2A24", Offset = "0x12F2A24", VA = "0x12F2A24")]
	private void HitMessage(e_type_role _typeRole, WUnit _attacker, WUnit _hurter, HitResultData _hitData)
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0x12F2B14", Offset = "0x12F2B14", VA = "0x12F2B14")]
	public MonsterWarning()
	{
	}
}
[Token(Token = "0x2000258")]
public enum TeleportNetOpType
{
	[Token(Token = "0x4000FE9")]
	OpStart,
	[Token(Token = "0x4000FEA")]
	OpUpdate,
	[Token(Token = "0x4000FEB")]
	OpEnd
}
[Token(Token = "0x2000259")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE2348", Offset = "0xEE2348")]
public class TeleportEffect : MonoBehaviour
{
	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool IsInit;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WUnit owner;

	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> EffectModels;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 OffsetPos;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject EffectObj;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isShow;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float targetDis;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float moveSpeed;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float scaleTime;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float doScale;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 beginPos;

	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 endPos;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Quaternion rot;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float scaleRunningTime;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float smoothSpeed;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float scaleDis;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float runningScaleDis;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7EBC", Offset = "0xEE7EBC")]
	private bool <IsFinish>k__BackingField;

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool nextFrameFinish;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioEvent AppearAudio;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public AudioEvent DisappearAudio;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private WwiseDefine soundWwise;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OtherMonsterNetSyncController otherCtrl;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject effect;

	[Token(Token = "0x17000169")]
	public bool IsFinish
	{
		[Token(Token = "0x6001164")]
		[Address(RVA = "0x11D0CD8", Offset = "0x11D0CD8", VA = "0x11D0CD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF03E8", Offset = "0xEF03E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001165")]
		[Address(RVA = "0x11D0CE0", Offset = "0x11D0CE0", VA = "0x11D0CE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF03F8", Offset = "0xEF03F8")]
		set
		{
		}
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0x11D0CEC", Offset = "0x11D0CEC", VA = "0x11D0CEC")]
	public void Init()
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0x11D1170", Offset = "0x11D1170", VA = "0x11D1170")]
	public void SetOwner(WUnit owner)
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0x11D0E04", Offset = "0x11D0E04", VA = "0x11D0E04")]
	private void InitEffect()
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0x11D1178", Offset = "0x11D1178", VA = "0x11D1178")]
	public void DoStop()
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0x11D1284", Offset = "0x11D1284", VA = "0x11D1284")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0x11D128C", Offset = "0x11D128C", VA = "0x11D128C")]
	private void Update()
	{
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0x11D1704", Offset = "0x11D1704", VA = "0x11D1704")]
	public void ShowEffect(Vector3 begin, Vector3 end, Quaternion rot)
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0x11D12D0", Offset = "0x11D12D0", VA = "0x11D12D0")]
	private void UpdateEffect()
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0x11D1DEC", Offset = "0x11D1DEC", VA = "0x11D1DEC")]
	public void SetEffectScale(float scale)
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0x11D14A0", Offset = "0x11D14A0", VA = "0x11D14A0")]
	public void DoUpdateEffectScale()
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0x11D1E00", Offset = "0x11D1E00", VA = "0x11D1E00")]
	public void HideEffect(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0x11D2118", Offset = "0x11D2118", VA = "0x11D2118")]
	private void ShowModel()
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0x11D1BB4", Offset = "0x11D1BB4", VA = "0x11D1BB4")]
	private void HideModel()
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0x11D1CB0", Offset = "0x11D1CB0", VA = "0x11D1CB0")]
	public void SendTeleport(int opType, int status, [Optional] Vector3 bPos, [Optional] Vector3 ePos, [Optional] Quaternion rot, float scaleTime = 0f)
	{
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0x11D1034", Offset = "0x11D1034", VA = "0x11D1034")]
	private void SetModels(bool isShow)
	{
	}

	[Token(Token = "0x6001175")]
	[Address(RVA = "0x11D2214", Offset = "0x11D2214", VA = "0x11D2214")]
	public TeleportEffect()
	{
	}
}
[Token(Token = "0x200025A")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE23AC", Offset = "0xEE23AC")]
public class WeaponDropDownTools : MonoBehaviour
{
	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float displayTime;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine coroutine;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody r1;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody r2;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject w1;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject w2;

	[Token(Token = "0x6001176")]
	[Address(RVA = "0x1D6E398", Offset = "0x1D6E398", VA = "0x1D6E398")]
	public void DoDropDown(WUnit unit)
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0x1D6E9F0", Offset = "0x1D6E9F0", VA = "0x1D6E9F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0x1D6E9F4", Offset = "0x1D6E9F4", VA = "0x1D6E9F4")]
	private void Stop()
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x1D6EB68", Offset = "0x1D6EB68", VA = "0x1D6EB68")]
	private void ClearDecal(Transform t)
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0x1D6ED10", Offset = "0x1D6ED10", VA = "0x1D6ED10")]
	public WeaponDropDownTools()
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0x1D6ED20", Offset = "0x1D6ED20", VA = "0x1D6ED20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0408", Offset = "0xEF0408")]
	private void <DoDropDown>b__6_0()
	{
	}
}
[Token(Token = "0x200025B")]
public class BattleData
{
	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool _isStart;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool _isLocalBattle;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private bool _isSingle;

	[Token(Token = "0x1700016A")]
	public bool isStart
	{
		[Token(Token = "0x600117C")]
		[Address(RVA = "0x13C7AB4", Offset = "0x13C7AB4", VA = "0x13C7AB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600117D")]
		[Address(RVA = "0x13C7ABC", Offset = "0x13C7ABC", VA = "0x13C7ABC")]
		private set
		{
		}
	}

	[Token(Token = "0x1700016B")]
	public bool isLocalBattle
	{
		[Token(Token = "0x600117E")]
		[Address(RVA = "0x13C7AC8", Offset = "0x13C7AC8", VA = "0x13C7AC8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600117F")]
		[Address(RVA = "0x13C7AD0", Offset = "0x13C7AD0", VA = "0x13C7AD0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700016C")]
	public bool isSingle
	{
		[Token(Token = "0x6001180")]
		[Address(RVA = "0x13C7ADC", Offset = "0x13C7ADC", VA = "0x13C7ADC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001181")]
		[Address(RVA = "0x13C7AE4", Offset = "0x13C7AE4", VA = "0x13C7AE4")]
		private set
		{
		}
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0x13C7AF0", Offset = "0x13C7AF0", VA = "0x13C7AF0")]
	public static BattleData CreateBattleData()
	{
		return null;
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0x13C7B64", Offset = "0x13C7B64", VA = "0x13C7B64")]
	public BattleData()
	{
	}
}
[Token(Token = "0x200025C")]
public class BattleResultData
{
	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public long roomId;

	[Token(Token = "0x6001184")]
	[Address(RVA = "0x13C7C8C", Offset = "0x13C7C8C", VA = "0x13C7C8C")]
	public BattleResultData()
	{
	}
}
[Token(Token = "0x200025D")]
public class BattleRoomData
{
	[Token(Token = "0x6001185")]
	[Address(RVA = "0x13C8070", Offset = "0x13C8070", VA = "0x13C8070")]
	public BattleRoomData()
	{
	}
}
[Token(Token = "0x200025E")]
public class HitResultData
{
	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int attackerId;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int hurterId;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int curHP;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int damage;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 hitPoint;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 hitDir;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int healValue;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public e_Attack_type atkType;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public e_HitEffect_type atkEffectType;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool hitHead;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int interruptedBodyId;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int interruptedBodyStatus;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int interruptedBodyHp;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int bodyPartId;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int hitForce;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int status;

	[Token(Token = "0x400101E")]
	private const int status_Hit = 1;

	[Token(Token = "0x400101F")]
	private const int status_Die = 2;

	[Token(Token = "0x4001020")]
	private const int status_BodyPartBreak = 4;

	[Token(Token = "0x4001021")]
	private const int status_BodyPartInterrupt = 8;

	[Token(Token = "0x1700016D")]
	public bool isHit
	{
		[Token(Token = "0x6001186")]
		[Address(RVA = "0x1275AA0", Offset = "0x1275AA0", VA = "0x1275AA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001187")]
		[Address(RVA = "0x1275B10", Offset = "0x1275B10", VA = "0x1275B10")]
		set
		{
		}
	}

	[Token(Token = "0x1700016E")]
	public bool isDie
	{
		[Token(Token = "0x6001188")]
		[Address(RVA = "0x1275B90", Offset = "0x1275B90", VA = "0x1275B90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001189")]
		[Address(RVA = "0x1275C00", Offset = "0x1275C00", VA = "0x1275C00")]
		set
		{
		}
	}

	[Token(Token = "0x1700016F")]
	public bool isBodyPartBreak
	{
		[Token(Token = "0x600118A")]
		[Address(RVA = "0x1275C80", Offset = "0x1275C80", VA = "0x1275C80")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600118B")]
		[Address(RVA = "0x1275CF0", Offset = "0x1275CF0", VA = "0x1275CF0")]
		set
		{
		}
	}

	[Token(Token = "0x17000170")]
	public bool isBodyPartInterrupt
	{
		[Token(Token = "0x600118C")]
		[Address(RVA = "0x1275D70", Offset = "0x1275D70", VA = "0x1275D70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600118D")]
		[Address(RVA = "0x1275DE0", Offset = "0x1275DE0", VA = "0x1275DE0")]
		set
		{
		}
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0x1275E60", Offset = "0x1275E60", VA = "0x1275E60")]
	public void Reset()
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0x1275F0C", Offset = "0x1275F0C", VA = "0x1275F0C")]
	public static void DestoryHitResultData(HitResultData hitData)
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0x1275F9C", Offset = "0x1275F9C", VA = "0x1275F9C")]
	public static HitResultData CreateHitResultData()
	{
		return null;
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0x1276024", Offset = "0x1276024", VA = "0x1276024")]
	public static HitResultData CreateHitResultData(S2CHitDamage data)
	{
		return null;
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0x12762A0", Offset = "0x12762A0", VA = "0x12762A0")]
	public static HitResultData CreateHitResultData(C2SHitDamage data)
	{
		return null;
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0x127654C", Offset = "0x127654C", VA = "0x127654C")]
	public HitResultData()
	{
	}
}
[Token(Token = "0x200025F")]
public class LobbyOperationResultData
{
	[Token(Token = "0x4001022")]
	public const int operation_PlayerStyle = 1;

	[Token(Token = "0x4001023")]
	public const int operation_WeaponType = 2;

	[Token(Token = "0x4001024")]
	public const int operation_JoinGame = 4;

	[Token(Token = "0x4001025")]
	public const int operation_GroupType = 8;

	[Token(Token = "0x4001026")]
	private const int operation_Controller = 16;

	[Token(Token = "0x4001027")]
	public const int operation_DropWeaponType = 32;

	[Token(Token = "0x4001028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int OperationType;

	[Token(Token = "0x4001029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int OperationValue;

	[Token(Token = "0x17000171")]
	public bool isPlayerStyle
	{
		[Token(Token = "0x6001194")]
		[Address(RVA = "0x12DE180", Offset = "0x12DE180", VA = "0x12DE180")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001195")]
		[Address(RVA = "0x12DE1F0", Offset = "0x12DE1F0", VA = "0x12DE1F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000172")]
	public bool isWeaponType
	{
		[Token(Token = "0x6001196")]
		[Address(RVA = "0x12DE270", Offset = "0x12DE270", VA = "0x12DE270")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001197")]
		[Address(RVA = "0x12DE2E0", Offset = "0x12DE2E0", VA = "0x12DE2E0")]
		set
		{
		}
	}

	[Token(Token = "0x17000173")]
	public bool isDropWeaponType
	{
		[Token(Token = "0x6001198")]
		[Address(RVA = "0x12DE360", Offset = "0x12DE360", VA = "0x12DE360")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001199")]
		[Address(RVA = "0x12DE3D0", Offset = "0x12DE3D0", VA = "0x12DE3D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000174")]
	public bool isJoinGame
	{
		[Token(Token = "0x600119A")]
		[Address(RVA = "0x12DE450", Offset = "0x12DE450", VA = "0x12DE450")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600119B")]
		[Address(RVA = "0x12DE4C0", Offset = "0x12DE4C0", VA = "0x12DE4C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000175")]
	public bool isGroupType
	{
		[Token(Token = "0x600119C")]
		[Address(RVA = "0x12DE540", Offset = "0x12DE540", VA = "0x12DE540")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600119D")]
		[Address(RVA = "0x12DE5B0", Offset = "0x12DE5B0", VA = "0x12DE5B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000176")]
	public bool isController
	{
		[Token(Token = "0x600119E")]
		[Address(RVA = "0x12DE630", Offset = "0x12DE630", VA = "0x12DE630")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600119F")]
		[Address(RVA = "0x12DE6A0", Offset = "0x12DE6A0", VA = "0x12DE6A0")]
		set
		{
		}
	}

	[Token(Token = "0x60011A0")]
	[Address(RVA = "0x12DE720", Offset = "0x12DE720", VA = "0x12DE720")]
	public e_Player_Style GetOperationPlayerStyle()
	{
		return default(e_Player_Style);
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x12DE7AC", Offset = "0x12DE7AC", VA = "0x12DE7AC")]
	public e_weapon_group GetOperationWeaponType()
	{
		return default(e_weapon_group);
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x12DE838", Offset = "0x12DE838", VA = "0x12DE838")]
	public e_weapon_group GetOperationDropWeaponType()
	{
		return default(e_weapon_group);
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x12DE8C4", Offset = "0x12DE8C4", VA = "0x12DE8C4")]
	public bool GetOperationJoinGameStatus()
	{
		return default(bool);
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x12DE980", Offset = "0x12DE980", VA = "0x12DE980")]
	public e_group_type GetOperationGroupType()
	{
		return default(e_group_type);
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x12DEA0C", Offset = "0x12DEA0C", VA = "0x12DEA0C")]
	public static LobbyOperationResultData CreateResultData(S2CLobbyOperationNotify data)
	{
		return null;
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x12DEA9C", Offset = "0x12DEA9C", VA = "0x12DEA9C")]
	public LobbyOperationResultData()
	{
	}
}
[Token(Token = "0x2000260")]
public class UnitResultData
{
	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int objId;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UnitResultDataType operationType;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int operationValue_Int;

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x130B2D4", Offset = "0x130B2D4", VA = "0x130B2D4")]
	public int GetHP()
	{
		return default(int);
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x130B39C", Offset = "0x130B39C", VA = "0x130B39C")]
	public int GetExp()
	{
		return default(int);
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x130B464", Offset = "0x130B464", VA = "0x130B464")]
	public void Reset()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x130B470", Offset = "0x130B470", VA = "0x130B470")]
	public static UnitResultData CreateResultData()
	{
		return null;
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x130B4F8", Offset = "0x130B4F8", VA = "0x130B4F8")]
	public static void DestoryResultData(UnitResultData data)
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x130B588", Offset = "0x130B588", VA = "0x130B588")]
	public static UnitResultData CreateResultData(UnitData data)
	{
		return null;
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x130B5F0", Offset = "0x130B5F0", VA = "0x130B5F0")]
	public UnitResultData()
	{
	}
}
[Token(Token = "0x2000261")]
public class MsgHandler : Singleton<MsgHandler>
{
	[Token(Token = "0x20005CE")]
	public enum NetType
	{
		[Token(Token = "0x4002139")]
		Udp,
		[Token(Token = "0x400213A")]
		UNet,
		[Token(Token = "0x400213B")]
		UTransport,
		[Token(Token = "0x400213C")]
		Tcp
	}

	[Serializable]
	[Token(Token = "0x20005CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4F30", Offset = "0xEE4F30")]
	private sealed class <>c
	{
		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<BytesPackage, BytesPackage> <>9__8_0;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<BytesPackage, BytesPackage> <>9__8_1;

		[Token(Token = "0x6002CE8")]
		[Address(RVA = "0x137F844", Offset = "0x137F844", VA = "0x137F844")]
		public <>c()
		{
		}

		[Token(Token = "0x6002CE9")]
		[Address(RVA = "0x137F84C", Offset = "0x137F84C", VA = "0x137F84C")]
		internal BytesPackage <Init>b__8_0(BytesPackage input)
		{
			return null;
		}

		[Token(Token = "0x6002CEA")]
		[Address(RVA = "0x137F85C", Offset = "0x137F85C", VA = "0x137F85C")]
		internal BytesPackage <Init>b__8_1(BytesPackage input)
		{
			return null;
		}
	}

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IMessageHandle mClientHandle;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IMessageHandle mHostHandle;

	[Token(Token = "0x400102F")]
	private const float RECONNTION_INTERVAL = 1f;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7ECC", Offset = "0xEE7ECC")]
	private bool <isInit>k__BackingField;

	[Token(Token = "0x17000177")]
	public bool isInit
	{
		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x137E920", Offset = "0x137E920", VA = "0x137E920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0418", Offset = "0xEF0418")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x137E928", Offset = "0x137E928", VA = "0x137E928")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0428", Offset = "0xEF0428")]
		set
		{
		}
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x137E934", Offset = "0x137E934", VA = "0x137E934")]
	public void Init()
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0x137F44C", Offset = "0x137F44C", VA = "0x137F44C")]
	public void UnInit()
	{
	}

	[Token(Token = "0x60011B2")]
	[Address(RVA = "0x137F628", Offset = "0x137F628", VA = "0x137F628")]
	public void Update()
	{
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x137F76C", Offset = "0x137F76C", VA = "0x137F76C")]
	public MsgHandler()
	{
	}
}
[Token(Token = "0x2000262")]
public class ClientHandleMessage : IMessageHandle
{
	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, dReceiveMessageHandle> mProtocalDic;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private byte[] iconBytes;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int iconBytesTempIndex;

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x120D864", Offset = "0x120D864", VA = "0x120D864")]
	public ClientHandleMessage()
	{
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x120E4C8", Offset = "0x120E4C8", VA = "0x120E4C8", Slot = "4")]
	public void Process(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x120E5D0", Offset = "0x120E5D0", VA = "0x120E5D0")]
	public ByteBuffer GetMessagePackageByteBuffer(VRNetLib.MessagePackage package)
	{
		return null;
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x120E628", Offset = "0x120E628", VA = "0x120E628")]
	private void HandleConnectToHost(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x120F2E4", Offset = "0x120F2E4", VA = "0x120F2E4")]
	private void HandlePlayerEnterNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x120FB6C", Offset = "0x120FB6C", VA = "0x120FB6C")]
	private void HandleDisConnectToHost(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x120FEB0", Offset = "0x120FEB0", VA = "0x120FEB0")]
	private void HandlePlayerQuitNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x12101E4", Offset = "0x12101E4", VA = "0x12101E4")]
	private void HandleSyncPlayerGlobalInfo(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x1210928", Offset = "0x1210928", VA = "0x1210928")]
	private void HandlePlayerReviveNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x1210B34", Offset = "0x1210B34", VA = "0x1210B34")]
	private void HandleUnitDataNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x1210C80", Offset = "0x1210C80", VA = "0x1210C80")]
	private void HandleFireBulletCreate(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x1210F34", Offset = "0x1210F34", VA = "0x1210F34")]
	private void HandleReloadMagazineNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x12110A8", Offset = "0x12110A8", VA = "0x12110A8")]
	private void HandleReloadBullet(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x1211244", Offset = "0x1211244", VA = "0x1211244")]
	private void HandleNpcCreateNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x121151C", Offset = "0x121151C", VA = "0x121151C")]
	private void HandleMonsterCreateNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x1211918", Offset = "0x1211918", VA = "0x1211918")]
	private void HandleMonsterAnimationSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x1211B60", Offset = "0x1211B60", VA = "0x1211B60")]
	private void HandleBossGatlinBlendRTPCSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0x1211D5C", Offset = "0x1211D5C", VA = "0x1211D5C")]
	private void HandleBossAniParameterSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x12120DC", Offset = "0x12120DC", VA = "0x12120DC")]
	private void HandleUnitInfoSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x1212560", Offset = "0x1212560", VA = "0x1212560")]
	private void HandleMonsterTeleportSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x12129FC", Offset = "0x12129FC", VA = "0x12129FC")]
	private void HandleCustomEffectSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x1212EE8", Offset = "0x1212EE8", VA = "0x1212EE8")]
	private void HandleInstanceViewStatusSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x1212F28", Offset = "0x1212F28", VA = "0x1212F28")]
	private void HandleMonsterBulletCretateNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x1213228", Offset = "0x1213228", VA = "0x1213228")]
	private void HandleMonsterInterruptStateNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x12133D8", Offset = "0x12133D8", VA = "0x12133D8")]
	private void HandleHitDamage(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x1213460", Offset = "0x1213460", VA = "0x1213460")]
	private void HandleCutScenesNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x1213604", Offset = "0x1213604", VA = "0x1213604")]
	private void HandleBattleStatisticalResultsNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x1213708", Offset = "0x1213708", VA = "0x1213708")]
	private void HandleLobbyGameStatusNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x1213CDC", Offset = "0x1213CDC", VA = "0x1213CDC")]
	private void HandleLobbyOperationNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x1215198", Offset = "0x1215198", VA = "0x1215198")]
	private void HandleLobbyPlayerNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x12154CC", Offset = "0x12154CC", VA = "0x12154CC")]
	private void HandleLobbyPlayerIconNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x1215D04", Offset = "0x1215D04", VA = "0x1215D04")]
	private void HandleLobbyTeamNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x1216048", Offset = "0x1216048", VA = "0x1216048")]
	private void HandlePlayAmbientEffectNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x1216114", Offset = "0x1216114", VA = "0x1216114")]
	private void HandleGameRoomStatusNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x12162A4", Offset = "0x12162A4", VA = "0x12162A4")]
	private void HandleSetLiveStatus(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x12163AC", Offset = "0x12163AC", VA = "0x12163AC")]
	private void HandleGearStatusInfoSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x1216640", Offset = "0x1216640", VA = "0x1216640")]
	private void HandleEffectStatusNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0x1217990", Offset = "0x1217990", VA = "0x1217990")]
	private void HandleRoomStatusNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x1217AD4", Offset = "0x1217AD4", VA = "0x1217AD4")]
	private void HandleRoleRoomStatusNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x1217B9C", Offset = "0x1217B9C", VA = "0x1217B9C")]
	private void HandleSyncAimIKInfoNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x1217DA4", Offset = "0x1217DA4", VA = "0x1217DA4")]
	private void HandleSyncUpdateAimIKInfoNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011DD")]
	[Address(RVA = "0x1217FF0", Offset = "0x1217FF0", VA = "0x1217FF0")]
	private void HandleProduceDropItemNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011DE")]
	[Address(RVA = "0x12181D0", Offset = "0x12181D0", VA = "0x12181D0")]
	private void HandleTriggerDropItem(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x121829C", Offset = "0x121829C", VA = "0x121829C")]
	private void HandleDestoryDropItemNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x1218354", Offset = "0x1218354", VA = "0x1218354")]
	private void HandleLevelupNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x1218508", Offset = "0x1218508", VA = "0x1218508")]
	private void HandleBuffNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0x1218780", Offset = "0x1218780", VA = "0x1218780")]
	private void HandleSimpleSkillStatusInfoSyncNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0x1218C50", Offset = "0x1218C50", VA = "0x1218C50")]
	private void HandleInstanceFlowNodeInfoNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0x1218ECC", Offset = "0x1218ECC", VA = "0x1218ECC")]
	private void HandleSelectInstanceStatusNotify(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x60011E5")]
	[Address(RVA = "0x121908C", Offset = "0x121908C", VA = "0x121908C")]
	private void HandlePreSelectInstanceStatusNotify(VRNetLib.MessagePackage package)
	{
	}
}
[Token(Token = "0x2000263")]
public class ClientSendMessage
{
	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static FlatBufferBuilder mBuilder;

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0x12191BC", Offset = "0x12191BC", VA = "0x12191BC")]
	private static void Send(NetMessageType.CmdCode cmdType, object data, bool isReliable = true)
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0x1219250", Offset = "0x1219250", VA = "0x1219250")]
	private static FlatBufferBuilder GetBuilder()
	{
		return null;
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0x12192D4", Offset = "0x12192D4", VA = "0x12192D4")]
	public static void SendConnectToHost()
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0x1219714", Offset = "0x1219714", VA = "0x1219714")]
	public static void SendDisConnectToHost()
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x12197E4", Offset = "0x12197E4", VA = "0x12197E4")]
	public static void SendSyncPlayerGlobalInfo(bool IsSyncLocal, bool isSyncPlayer, Vector3 playerPos, Quaternion playerRotate, bool isSyncGun_L, Vector3 GunPos_L, Quaternion GunRotate_L, Vector3 GunForward_L, bool isSyncGun_R, Vector3 GunPos_R, Quaternion GunRotate_R, Vector3 GunForward_R, bool isSyncHead, Vector3 VRHeadPos, Quaternion VRHeadRotate, Vector3 VRHeadPos_Raw, Quaternion VRHeadRotate_Raw)
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0x1219F38", Offset = "0x1219F38", VA = "0x1219F38")]
	public static void SendC2SFireBulletCreate(int objId, int weaponId, Vector3 pos, Quaternion rotate, bool isEffectBullet = false)
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x121A0C8", Offset = "0x121A0C8", VA = "0x121A0C8")]
	public static void SendC2SReloadBullet(int objId, int weaponId, bool isNeedPlayAni)
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x121A1A8", Offset = "0x121A1A8", VA = "0x121A1A8")]
	public static void SendC2SPlayerRevive(int playerObjId)
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x121A240", Offset = "0x121A240", VA = "0x121A240")]
	public static void SendC2SFireHitDamage(HitResultData hitData)
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0x121A448", Offset = "0x121A448", VA = "0x121A448")]
	public static void SendLiveState(int ownerId, bool state)
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0x121A4F0", Offset = "0x121A4F0", VA = "0x121A4F0")]
	public static void SendReqSyncGearStatusInfo(e_group_type group, int id)
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x121A5BC", Offset = "0x121A5BC", VA = "0x121A5BC")]
	public static void SendReqSelectInstanceFlowStatusInfo(int uId, int insFlowNodeId)
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0x121A824", Offset = "0x121A824", VA = "0x121A824")]
	public static void SendReqPreselectInstanceFlowStatusInfo(int uId, int insFlowNodeId)
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x121AA8C", Offset = "0x121AA8C", VA = "0x121AA8C")]
	public static void SendTriggreDropItemNotify(int itemId, int unitId)
	{
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x121AB58", Offset = "0x121AB58", VA = "0x121AB58")]
	public static void SendC2SWeaponCanReset(int unitId)
	{
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x121AC08", Offset = "0x121AC08", VA = "0x121AC08")]
	public ClientSendMessage()
	{
	}
}
[Token(Token = "0x2000264")]
public class ClientServer : Singleton<ClientServer>
{
	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, PlayerData> playerIdHash;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, TeamData> teamInfo;

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x120F0B0", Offset = "0x120F0B0", VA = "0x120F0B0")]
	public void RegisterPlayerData(PlayerData data)
	{
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x120F028", Offset = "0x120F028", VA = "0x120F028")]
	public void UnRegisterPlayerData(int playerId)
	{
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x120FE58", Offset = "0x120FE58", VA = "0x120FE58")]
	public void UnRegisterAllPlayerData()
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0x120EFC0", Offset = "0x120EFC0", VA = "0x120EFC0")]
	public bool CheckPlayerData(int playerId)
	{
		return default(bool);
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x12150F4", Offset = "0x12150F4", VA = "0x12150F4")]
	public PlayerData GetPlayerData(int playerId)
	{
		return null;
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x121AC84", Offset = "0x121AC84", VA = "0x121AC84")]
	public PlayerData GetPlayerDataBySite(int site)
	{
		return null;
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x121ADA0", Offset = "0x121ADA0", VA = "0x121ADA0")]
	public List<PlayerData> GetAllJoinData()
	{
		return null;
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x1215F68", Offset = "0x1215F68", VA = "0x1215F68")]
	public void SetTeamInfo(int teamId, string teamName)
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x121AF18", Offset = "0x121AF18", VA = "0x121AF18")]
	public string GetTeamName(e_group_type group_Type)
	{
		return null;
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x121B180", Offset = "0x121B180", VA = "0x121B180")]
	public string GetTeamName(int playerId)
	{
		return null;
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x121B070", Offset = "0x121B070", VA = "0x121B070")]
	public string GetTeamName(int teamId, e_group_type group_Type)
	{
		return null;
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x121B314", Offset = "0x121B314", VA = "0x121B314")]
	public bool HaveLoginPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x121B41C", Offset = "0x121B41C", VA = "0x121B41C")]
	public ClientServer()
	{
	}
}
[Token(Token = "0x2000265")]
public class FlatbuffersUtils : IProtocolUtils
{
	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7EDC", Offset = "0xEE7EDC")]
	private readonly ByteBuffer <ByteBuffer>k__BackingField;

	[Token(Token = "0x17000178")]
	public ByteBuffer ByteBuffer
	{
		[Token(Token = "0x6001204")]
		[Address(RVA = "0x132ACBC", Offset = "0x132ACBC", VA = "0x132ACBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0438", Offset = "0xEF0438")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x132ACC4", Offset = "0x132ACC4", VA = "0x132ACC4", Slot = "4")]
	public BytesPackage Serialize(object protoData)
	{
		return null;
	}

	[Token(Token = "0x6001206")]
	public T DeSerialize<T>(BytesPackage bytes)
	{
		return (T)null;
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x132ADB0", Offset = "0x132ADB0", VA = "0x132ADB0")]
	public FlatbuffersUtils()
	{
	}
}
[Token(Token = "0x2000266")]
public class NetMessageType
{
	[Token(Token = "0x20005D0")]
	public enum CmdCode : ushort
	{
		[Token(Token = "0x4002141")]
		ConnectToHost = 1,
		[Token(Token = "0x4002142")]
		PlayerEnterNotify = 2,
		[Token(Token = "0x4002143")]
		DisconnectToHost = 3,
		[Token(Token = "0x4002144")]
		PlayerQuitNotify = 4,
		[Token(Token = "0x4002145")]
		GameRoomStatusNotify = 5,
		[Token(Token = "0x4002146")]
		SyncPlayerGlobalInfo = 8,
		[Token(Token = "0x4002147")]
		FireBulletCreate = 11,
		[Token(Token = "0x4002148")]
		ReloadMagazine = 12,
		[Token(Token = "0x4002149")]
		ReloadBullet = 13,
		[Token(Token = "0x400214A")]
		UnitDataNotify = 19,
		[Token(Token = "0x400214B")]
		MonsterCreateNotify = 20,
		[Token(Token = "0x400214C")]
		MonsterAnimationSyncNotify = 21,
		[Token(Token = "0x400214D")]
		UnitInfoSyncNotify = 22,
		[Token(Token = "0x400214E")]
		HitDamage = 23,
		[Token(Token = "0x400214F")]
		PlayerRevive = 24,
		[Token(Token = "0x4002150")]
		CutScenesNotify = 25,
		[Token(Token = "0x4002151")]
		MonsterBulletCretateNotify = 26,
		[Token(Token = "0x4002152")]
		NpcCreateNotify = 28,
		[Token(Token = "0x4002153")]
		EffectStatusNotify = 29,
		[Token(Token = "0x4002154")]
		SyncAimIKInfoNotify = 30,
		[Token(Token = "0x4002155")]
		SyncUpdateAimIKInfoNotify = 31,
		[Token(Token = "0x4002156")]
		MonsterInterruptedStateNotify = 32,
		[Token(Token = "0x4002157")]
		BossAniParameterNotify = 33,
		[Token(Token = "0x4002158")]
		BosssGatlinBlendRTPCNotify = 34,
		[Token(Token = "0x4002159")]
		RoomStatusNotify = 35,
		[Token(Token = "0x400215A")]
		RoleRoomStatusNotify = 36,
		[Token(Token = "0x400215B")]
		ProduceDropItemNotify = 37,
		[Token(Token = "0x400215C")]
		LevelupNotify = 38,
		[Token(Token = "0x400215D")]
		BuffNotify = 39,
		[Token(Token = "0x400215E")]
		TriggerDropItem = 40,
		[Token(Token = "0x400215F")]
		DestoryDropItemNotify = 41,
		[Token(Token = "0x4002160")]
		C2SWeaponReset = 42,
		[Token(Token = "0x4002161")]
		BattleStatisticalResultsNotify = 100,
		[Token(Token = "0x4002162")]
		PlayAmbientEffectNotify = 101,
		[Token(Token = "0x4002163")]
		LobbyOperationNotify = 1000,
		[Token(Token = "0x4002164")]
		LobbyGameStatusNotify = 1001,
		[Token(Token = "0x4002165")]
		LobbyPlayerNotify = 1002,
		[Token(Token = "0x4002166")]
		LobbyPlayerIconNotify = 1004,
		[Token(Token = "0x4002167")]
		LobbyTeamNotify = 1003,
		[Token(Token = "0x4002168")]
		SetLiveStatus = 2000,
		[Token(Token = "0x4002169")]
		GearStatusInfo = 2050,
		[Token(Token = "0x400216A")]
		ReqSyncGearStatusInfo = 2051,
		[Token(Token = "0x400216B")]
		PlayerTeleport = 3000,
		[Token(Token = "0x400216C")]
		LoadBattleRoom = 3001,
		[Token(Token = "0x400216D")]
		MonsterTeleportSyncNotify = 3100,
		[Token(Token = "0x400216E")]
		CustomSyncNotify = 3101,
		[Token(Token = "0x400216F")]
		SimpleSkillStatusInfoNotify = 3200,
		[Token(Token = "0x4002170")]
		ReqSelectInstanceStatusInfo = 3210,
		[Token(Token = "0x4002171")]
		InstanceFlowNodeInfoNotify = 3211,
		[Token(Token = "0x4002172")]
		ReqPreSelectInstanceStatusInfo = 3212,
		[Token(Token = "0x4002173")]
		InstanceViewStatus = 3213
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0x1385748", Offset = "0x1385748", VA = "0x1385748")]
	public NetMessageType()
	{
	}
}
[Token(Token = "0x2000267")]
public class NetworkStatusHandle
{
	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float reconnectHostInterval;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float reconnectTimer;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _isConnectHost;

	[Token(Token = "0x17000179")]
	public bool isConnectHost
	{
		[Token(Token = "0x6001209")]
		[Address(RVA = "0x1385750", Offset = "0x1385750", VA = "0x1385750")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600120A")]
		[Address(RVA = "0x1385758", Offset = "0x1385758", VA = "0x1385758")]
		set
		{
		}
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x137F43C", Offset = "0x137F43C", VA = "0x137F43C")]
	public void Init(float _interval)
	{
	}

	[Token(Token = "0x600120C")]
	[Address(RVA = "0x1385768", Offset = "0x1385768", VA = "0x1385768")]
	private void ReconnectProcessor(float deltaTime)
	{
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x137F768", Offset = "0x137F768", VA = "0x137F768")]
	public void Update(float deltaTime)
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x137F42C", Offset = "0x137F42C", VA = "0x137F42C")]
	public NetworkStatusHandle()
	{
	}
}
[Token(Token = "0x2000268")]
public class PlayerData
{
	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7EEC", Offset = "0xEE7EEC")]
	private int <SessionId>k__BackingField;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7EFC", Offset = "0xEE7EFC")]
	private int <PlayerId>k__BackingField;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7F0C", Offset = "0xEE7F0C")]
	private string <MechineName>k__BackingField;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7F1C", Offset = "0xEE7F1C")]
	private string <MechineId>k__BackingField;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7F2C", Offset = "0xEE7F2C")]
	private bool <JoinGameStatus>k__BackingField;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7F3C", Offset = "0xEE7F3C")]
	private e_group_type <GroupId>k__BackingField;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7F4C", Offset = "0xEE7F4C")]
	private e_Player_Style <PlayerStyle>k__BackingField;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7F5C", Offset = "0xEE7F5C")]
	private e_weapon_group <WeaponType>k__BackingField;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7F6C", Offset = "0xEE7F6C")]
	private int <Site>k__BackingField;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7F7C", Offset = "0xEE7F7C")]
	private bool <IsAI>k__BackingField;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7F8C", Offset = "0xEE7F8C")]
	private bool <IsOnlyServer>k__BackingField;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7F9C", Offset = "0xEE7F9C")]
	private bool <IsLive>k__BackingField;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7FAC", Offset = "0xEE7FAC")]
	private string <LoginName>k__BackingField;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7FBC", Offset = "0xEE7FBC")]
	private string <LoginIcon>k__BackingField;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7FCC", Offset = "0xEE7FCC")]
	private bool <IsLoginSuccess>k__BackingField;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7FDC", Offset = "0xEE7FDC")]
	private int <TeamId>k__BackingField;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7FEC", Offset = "0xEE7FEC")]
	private int <Level>k__BackingField;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE7FFC", Offset = "0xEE7FFC")]
	private int <LevelExp>k__BackingField;

	[Token(Token = "0x1700017A")]
	public int SessionId
	{
		[Token(Token = "0x600120F")]
		[Address(RVA = "0x152ED9C", Offset = "0x152ED9C", VA = "0x152ED9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0448", Offset = "0xEF0448")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001210")]
		[Address(RVA = "0x152EDA4", Offset = "0x152EDA4", VA = "0x152EDA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0458", Offset = "0xEF0458")]
		private set
		{
		}
	}

	[Token(Token = "0x1700017B")]
	public int PlayerId
	{
		[Token(Token = "0x6001211")]
		[Address(RVA = "0x152EDAC", Offset = "0x152EDAC", VA = "0x152EDAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0468", Offset = "0xEF0468")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001212")]
		[Address(RVA = "0x152EDB4", Offset = "0x152EDB4", VA = "0x152EDB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0478", Offset = "0xEF0478")]
		private set
		{
		}
	}

	[Token(Token = "0x1700017C")]
	public string MechineName
	{
		[Token(Token = "0x6001213")]
		[Address(RVA = "0x152EDBC", Offset = "0x152EDBC", VA = "0x152EDBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0488", Offset = "0xEF0488")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001214")]
		[Address(RVA = "0x152EDC4", Offset = "0x152EDC4", VA = "0x152EDC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0498", Offset = "0xEF0498")]
		private set
		{
		}
	}

	[Token(Token = "0x1700017D")]
	public string MechineId
	{
		[Token(Token = "0x6001215")]
		[Address(RVA = "0x152EDCC", Offset = "0x152EDCC", VA = "0x152EDCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF04A8", Offset = "0xEF04A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001216")]
		[Address(RVA = "0x152EDD4", Offset = "0x152EDD4", VA = "0x152EDD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF04B8", Offset = "0xEF04B8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700017E")]
	public bool JoinGameStatus
	{
		[Token(Token = "0x6001217")]
		[Address(RVA = "0x152EDDC", Offset = "0x152EDDC", VA = "0x152EDDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF04C8", Offset = "0xEF04C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001218")]
		[Address(RVA = "0x152EDE4", Offset = "0x152EDE4", VA = "0x152EDE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF04D8", Offset = "0xEF04D8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700017F")]
	public e_group_type GroupId
	{
		[Token(Token = "0x6001219")]
		[Address(RVA = "0x152EDF0", Offset = "0x152EDF0", VA = "0x152EDF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF04E8", Offset = "0xEF04E8")]
		get
		{
			return default(e_group_type);
		}
		[Token(Token = "0x600121A")]
		[Address(RVA = "0x152EDF8", Offset = "0x152EDF8", VA = "0x152EDF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF04F8", Offset = "0xEF04F8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000180")]
	public e_Player_Style PlayerStyle
	{
		[Token(Token = "0x600121B")]
		[Address(RVA = "0x152EE00", Offset = "0x152EE00", VA = "0x152EE00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0508", Offset = "0xEF0508")]
		get
		{
			return default(e_Player_Style);
		}
		[Token(Token = "0x600121C")]
		[Address(RVA = "0x152EE08", Offset = "0x152EE08", VA = "0x152EE08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0518", Offset = "0xEF0518")]
		private set
		{
		}
	}

	[Token(Token = "0x17000181")]
	public e_weapon_group WeaponType
	{
		[Token(Token = "0x600121D")]
		[Address(RVA = "0x152EE10", Offset = "0x152EE10", VA = "0x152EE10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0528", Offset = "0xEF0528")]
		get
		{
			return default(e_weapon_group);
		}
		[Token(Token = "0x600121E")]
		[Address(RVA = "0x152EE18", Offset = "0x152EE18", VA = "0x152EE18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0538", Offset = "0xEF0538")]
		private set
		{
		}
	}

	[Token(Token = "0x17000182")]
	public int Site
	{
		[Token(Token = "0x600121F")]
		[Address(RVA = "0x152EE20", Offset = "0x152EE20", VA = "0x152EE20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0548", Offset = "0xEF0548")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001220")]
		[Address(RVA = "0x152EE28", Offset = "0x152EE28", VA = "0x152EE28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0558", Offset = "0xEF0558")]
		private set
		{
		}
	}

	[Token(Token = "0x17000183")]
	public bool IsAI
	{
		[Token(Token = "0x6001221")]
		[Address(RVA = "0x152EE30", Offset = "0x152EE30", VA = "0x152EE30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0568", Offset = "0xEF0568")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001222")]
		[Address(RVA = "0x152EE38", Offset = "0x152EE38", VA = "0x152EE38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0578", Offset = "0xEF0578")]
		private set
		{
		}
	}

	[Token(Token = "0x17000184")]
	public bool IsOnlyServer
	{
		[Token(Token = "0x6001223")]
		[Address(RVA = "0x152EE44", Offset = "0x152EE44", VA = "0x152EE44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0588", Offset = "0xEF0588")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001224")]
		[Address(RVA = "0x152EE4C", Offset = "0x152EE4C", VA = "0x152EE4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0598", Offset = "0xEF0598")]
		private set
		{
		}
	}

	[Token(Token = "0x17000185")]
	public bool IsLive
	{
		[Token(Token = "0x6001225")]
		[Address(RVA = "0x152EE58", Offset = "0x152EE58", VA = "0x152EE58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF05A8", Offset = "0xEF05A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001226")]
		[Address(RVA = "0x152EE60", Offset = "0x152EE60", VA = "0x152EE60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF05B8", Offset = "0xEF05B8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000186")]
	public string LoginName
	{
		[Token(Token = "0x6001227")]
		[Address(RVA = "0x152EE6C", Offset = "0x152EE6C", VA = "0x152EE6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF05C8", Offset = "0xEF05C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001228")]
		[Address(RVA = "0x152EE74", Offset = "0x152EE74", VA = "0x152EE74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF05D8", Offset = "0xEF05D8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000187")]
	public string LoginIcon
	{
		[Token(Token = "0x6001229")]
		[Address(RVA = "0x152EE7C", Offset = "0x152EE7C", VA = "0x152EE7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF05E8", Offset = "0xEF05E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600122A")]
		[Address(RVA = "0x152EE84", Offset = "0x152EE84", VA = "0x152EE84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF05F8", Offset = "0xEF05F8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000188")]
	public bool IsLoginSuccess
	{
		[Token(Token = "0x600122B")]
		[Address(RVA = "0x152EE8C", Offset = "0x152EE8C", VA = "0x152EE8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0608", Offset = "0xEF0608")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600122C")]
		[Address(RVA = "0x152EE94", Offset = "0x152EE94", VA = "0x152EE94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0618", Offset = "0xEF0618")]
		private set
		{
		}
	}

	[Token(Token = "0x17000189")]
	public string PlayerName
	{
		[Token(Token = "0x600122D")]
		[Address(RVA = "0x152EEA0", Offset = "0x152EEA0", VA = "0x152EEA0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018A")]
	public Sprite GetIcon
	{
		[Token(Token = "0x600122E")]
		[Address(RVA = "0x152EF74", Offset = "0x152EF74", VA = "0x152EF74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700018B")]
	public int TeamId
	{
		[Token(Token = "0x600122F")]
		[Address(RVA = "0x152F09C", Offset = "0x152F09C", VA = "0x152F09C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0628", Offset = "0xEF0628")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001230")]
		[Address(RVA = "0x152F0A4", Offset = "0x152F0A4", VA = "0x152F0A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0638", Offset = "0xEF0638")]
		private set
		{
		}
	}

	[Token(Token = "0x1700018C")]
	public int Level
	{
		[Token(Token = "0x6001231")]
		[Address(RVA = "0x152F0AC", Offset = "0x152F0AC", VA = "0x152F0AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0648", Offset = "0xEF0648")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001232")]
		[Address(RVA = "0x152F0B4", Offset = "0x152F0B4", VA = "0x152F0B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0658", Offset = "0xEF0658")]
		private set
		{
		}
	}

	[Token(Token = "0x1700018D")]
	public int LevelExp
	{
		[Token(Token = "0x6001233")]
		[Address(RVA = "0x152F0BC", Offset = "0x152F0BC", VA = "0x152F0BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0668", Offset = "0xEF0668")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001234")]
		[Address(RVA = "0x152F0C4", Offset = "0x152F0C4", VA = "0x152F0C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0678", Offset = "0xEF0678")]
		private set
		{
		}
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0x152F0CC", Offset = "0x152F0CC", VA = "0x152F0CC")]
	public PlayerData(int sessionid, int playerid, string mechinename, string mechineid, bool isJoinGame, e_group_type groupId, e_Player_Style style, e_weapon_group weapon, int site, bool isAI, bool isOnlyServer, bool isLive)
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x152F1AC", Offset = "0x152F1AC", VA = "0x152F1AC")]
	public void SetJoinStatus(bool status)
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x152F1B8", Offset = "0x152F1B8", VA = "0x152F1B8")]
	public void SetGroupId(e_group_type groupId)
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x152F1C0", Offset = "0x152F1C0", VA = "0x152F1C0")]
	public void SetPlayerStyle(e_Player_Style style)
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x152F1C8", Offset = "0x152F1C8", VA = "0x152F1C8")]
	public void SetWeaponType(e_weapon_group weaponType)
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0x152F1D0", Offset = "0x152F1D0", VA = "0x152F1D0")]
	public void SetLoginInfo(string name, string icon)
	{
	}

	[Token(Token = "0x600123B")]
	[Address(RVA = "0x152F22C", Offset = "0x152F22C", VA = "0x152F22C")]
	public void SetLoginInfo_Name(string name)
	{
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0x152F270", Offset = "0x152F270", VA = "0x152F270")]
	public void SetLoginInfo_Icon(string icon)
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0x152F278", Offset = "0x152F278", VA = "0x152F278")]
	public void SetTeamId(int teamId)
	{
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0x152F280", Offset = "0x152F280", VA = "0x152F280")]
	public void SetNullLoginInfo()
	{
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0x152F2B0", Offset = "0x152F2B0", VA = "0x152F2B0")]
	public void SetLevel(int level)
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0x152F2B8", Offset = "0x152F2B8", VA = "0x152F2B8")]
	public void SetLevelExp(int exp)
	{
	}
}
[Token(Token = "0x2000269")]
public class TeamData
{
	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE800C", Offset = "0xEE800C")]
	private int <TeamId>k__BackingField;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE801C", Offset = "0xEE801C")]
	private string <Name>k__BackingField;

	[Token(Token = "0x1700018E")]
	public int TeamId
	{
		[Token(Token = "0x6001241")]
		[Address(RVA = "0x11D0CB0", Offset = "0x11D0CB0", VA = "0x11D0CB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0688", Offset = "0xEF0688")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001242")]
		[Address(RVA = "0x11D0CB8", Offset = "0x11D0CB8", VA = "0x11D0CB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0698", Offset = "0xEF0698")]
		set
		{
		}
	}

	[Token(Token = "0x1700018F")]
	public string Name
	{
		[Token(Token = "0x6001243")]
		[Address(RVA = "0x11D0CC0", Offset = "0x11D0CC0", VA = "0x11D0CC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF06A8", Offset = "0xEF06A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001244")]
		[Address(RVA = "0x11D0CC8", Offset = "0x11D0CC8", VA = "0x11D0CC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF06B8", Offset = "0xEF06B8")]
		set
		{
		}
	}

	[Token(Token = "0x6001245")]
	[Address(RVA = "0x11D0CD0", Offset = "0x11D0CD0", VA = "0x11D0CD0")]
	public TeamData()
	{
	}
}
[Token(Token = "0x200026A")]
public class HostHandleMessage : IMessageHandle
{
	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int[] cullSessions;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FlatBufferBuilder mBuilder;

	[Token(Token = "0x6001246")]
	[Address(RVA = "0x127663C", Offset = "0x127663C", VA = "0x127663C", Slot = "4")]
	public void Process(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001247")]
	[Address(RVA = "0x1278F48", Offset = "0x1278F48", VA = "0x1278F48")]
	private void SendTo(NetMessageType.CmdCode cmdType, int sessionId, object data, bool isReliable = false)
	{
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0x1278FF0", Offset = "0x1278FF0", VA = "0x1278FF0")]
	private void SendToPlayer(NetMessageType.CmdCode cmdType, int playerId, object data, bool isReliable = false)
	{
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0x1279104", Offset = "0x1279104", VA = "0x1279104")]
	private void Broadcast(NetMessageType.CmdCode cmdType, object data, int cullSessionId = 0, bool isReliable = false)
	{
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0x12792A4", Offset = "0x12792A4", VA = "0x12792A4")]
	private void BroadcastAll(NetMessageType.CmdCode cmdType, object data, bool isReliable = false)
	{
	}

	[Token(Token = "0x600124B")]
	[Address(RVA = "0x12792B0", Offset = "0x12792B0", VA = "0x12792B0")]
	private void BroadcastCullHost(NetMessageType.CmdCode cmdType, object data, bool isReliable = false)
	{
	}

	[Token(Token = "0x600124C")]
	[Address(RVA = "0x12792BC", Offset = "0x12792BC", VA = "0x12792BC")]
	public FlatBufferBuilder GetBuilder()
	{
		return null;
	}

	[Token(Token = "0x600124D")]
	[Address(RVA = "0x12792F0", Offset = "0x12792F0", VA = "0x12792F0")]
	public ByteBuffer GetMessagePackageByteBuffer(VRNetLib.MessagePackage package)
	{
		return null;
	}

	[Token(Token = "0x600124E")]
	[Address(RVA = "0x12768D0", Offset = "0x12768D0", VA = "0x12768D0")]
	private void ProcessConnectToHost(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600124F")]
	[Address(RVA = "0x12776CC", Offset = "0x12776CC", VA = "0x12776CC")]
	private void ProcessDisConnectToHost(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0x12778C8", Offset = "0x12778C8", VA = "0x12778C8")]
	private void ProcessSyncPlayerGlobalInfo(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0x1277EE8", Offset = "0x1277EE8", VA = "0x1277EE8")]
	private void ProcessFireBulletCreate(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0x1278154", Offset = "0x1278154", VA = "0x1278154")]
	private void ProcessReloadBullet(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0x12782F0", Offset = "0x12782F0", VA = "0x12782F0")]
	private void ProcessHitDamage(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0x1278460", Offset = "0x1278460", VA = "0x1278460")]
	private void ProcessPlayerRevive(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0x1278598", Offset = "0x1278598", VA = "0x1278598")]
	private void ProcessSetLiveStatus(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0x127871C", Offset = "0x127871C", VA = "0x127871C")]
	private void ProcessReqSyncGearStatusInfo(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001257")]
	[Address(RVA = "0x12787F8", Offset = "0x12787F8", VA = "0x12787F8")]
	private void ProcessReqSyncSelectInstanceStatusInfo(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001258")]
	[Address(RVA = "0x1278A7C", Offset = "0x1278A7C", VA = "0x1278A7C")]
	private void ProcessReqSyncPreSelectInstanceStatusInfo(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x6001259")]
	[Address(RVA = "0x1278D00", Offset = "0x1278D00", VA = "0x1278D00")]
	private void ProcessTriggerDropItem(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600125A")]
	[Address(RVA = "0x1278E94", Offset = "0x1278E94", VA = "0x1278E94")]
	private void ProcessWeaponReset(VRNetLib.MessagePackage package)
	{
	}

	[Token(Token = "0x600125B")]
	[Address(RVA = "0x127A33C", Offset = "0x127A33C", VA = "0x127A33C")]
	public HostHandleMessage()
	{
	}
}
[Token(Token = "0x200026B")]
public class HostSendMessage
{
	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int splitStep;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Dictionary<int, Offset<MonsterSpawnInfo>[]> tempMonsterCreateDic;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Dictionary<int, Offset<UnitTransform>[]> tempMonstersDic;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Dictionary<int, Offset<UnitData>[]> tempDatasDic;

	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Dictionary<int, Offset<UpdateAimIKInfoCell>[]> tempAimIKInfoCellsDic;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int[] cullSessions;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static FlatBufferBuilder mBuilder;

	[Token(Token = "0x600125C")]
	[Address(RVA = "0x127A3D8", Offset = "0x127A3D8", VA = "0x127A3D8")]
	private static void SendTo(NetMessageType.CmdCode cmdType, int sessionId, object data, bool isSync = false)
	{
	}

	[Token(Token = "0x600125D")]
	[Address(RVA = "0x127A480", Offset = "0x127A480", VA = "0x127A480")]
	private static void Broadcast(NetMessageType.CmdCode cmdType, object data, int cullSessionId = 0, bool isReliable = false)
	{
	}

	[Token(Token = "0x600125E")]
	[Address(RVA = "0x127A64C", Offset = "0x127A64C", VA = "0x127A64C")]
	private static void BroadcastAll(NetMessageType.CmdCode cmdType, object data, bool isReliable = false)
	{
	}

	[Token(Token = "0x600125F")]
	[Address(RVA = "0x127A6CC", Offset = "0x127A6CC", VA = "0x127A6CC")]
	private static void BroadcastCullHost(NetMessageType.CmdCode cmdType, object data, bool isReliable = false)
	{
	}

	[Token(Token = "0x6001260")]
	[Address(RVA = "0x127A74C", Offset = "0x127A74C", VA = "0x127A74C")]
	private static FlatBufferBuilder GetBuilder()
	{
		return null;
	}

	[Token(Token = "0x6001261")]
	[Address(RVA = "0x127A7D0", Offset = "0x127A7D0", VA = "0x127A7D0")]
	private static ByteBuffer GetMessagePackageByteBuffer(VRNetLib.MessagePackage package)
	{
		return null;
	}

	[Token(Token = "0x6001262")]
	[Address(RVA = "0x127A828", Offset = "0x127A828", VA = "0x127A828")]
	public static void BroadcastDisconnectToHost()
	{
	}

	[Token(Token = "0x6001263")]
	[Address(RVA = "0x127A8D8", Offset = "0x127A8D8", VA = "0x127A8D8")]
	public static void BroadcastGameRoomStatusNotify(RoomStateAgent.eRoomState state)
	{
	}

	[Token(Token = "0x6001264")]
	[Address(RVA = "0x127AAA4", Offset = "0x127AAA4", VA = "0x127AAA4")]
	public static void BroadcastMonsterCreateNotify(List<HostServer.MonsterSpawnInfo> monsterDatas)
	{
	}

	[Token(Token = "0x6001265")]
	[Address(RVA = "0x127AED8", Offset = "0x127AED8", VA = "0x127AED8")]
	public static void BroadcastUnitInfoSyncNotify(List<HostServer.UnitTransform> list)
	{
	}

	[Token(Token = "0x6001266")]
	[Address(RVA = "0x127B2C4", Offset = "0x127B2C4", VA = "0x127B2C4")]
	public static void BroadcastMonsterAnimationSyncNotify(int objId, string stateName, float transitionDuration, int layerIndex)
	{
	}

	[Token(Token = "0x6001267")]
	[Address(RVA = "0x127B394", Offset = "0x127B394", VA = "0x127B394")]
	public static void BroadcastMonsterTeleportSyncNotify(int objId, int opType, int status, Vector3 bPos, Vector3 ePos, Quaternion rot, float scaleTime)
	{
	}

	[Token(Token = "0x6001268")]
	[Address(RVA = "0x127B578", Offset = "0x127B578", VA = "0x127B578")]
	public static void BroadcastCustomEffectSyncNotify(int objId, int efType, int opType, Vector3 bPos, Quaternion bRot)
	{
	}

	[Token(Token = "0x6001269")]
	[Address(RVA = "0x127B938", Offset = "0x127B938", VA = "0x127B938")]
	public static void BroadcastInstanceViewSyncNotify(int status, int captainId)
	{
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0x127BBA0", Offset = "0x127BBA0", VA = "0x127BBA0")]
	public static void BroadcastBossAniParameterSyncNotify(int objId, bool isoving, float xValue, float yValue)
	{
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0x127BC60", Offset = "0x127BC60", VA = "0x127BC60")]
	public static void BroadcastMonsterBulletCretateNotify(int ownerID, Vector3 firePos, Quaternion fireRot, int bulletAssetID, int targetID, Vector3 targetPos, int randomSeed)
	{
	}

	[Token(Token = "0x600126C")]
	[Address(RVA = "0x127BE40", Offset = "0x127BE40", VA = "0x127BE40")]
	public static void BroadcastBulletMonsterCreateNotify(HostServer.MonsterSpawnInfo monsterData)
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0x127C038", Offset = "0x127C038", VA = "0x127C038")]
	public static void BroadcastMonsterInterruptStateNotify(int _unitId, int _interrtuptId, int _interrtuptState, Vector3 point, Vector3 dir, float force)
	{
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0x127C1D4", Offset = "0x127C1D4", VA = "0x127C1D4")]
	public static void BroadcastBossGatlinBlendRTPCNotify(int _unitId, bool state)
	{
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x127C2A0", Offset = "0x127C2A0", VA = "0x127C2A0")]
	public static void BroadcastHitDamageNotify(HitResultData hitData)
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0x127A254", Offset = "0x127A254", VA = "0x127A254")]
	public static void BroadcastPlayerReviveNotify(int playerObjId)
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x127C478", Offset = "0x127C478", VA = "0x127C478")]
	public static void BroadcastReloadMagazineNotify(int playerObjId)
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0x127C514", Offset = "0x127C514", VA = "0x127C514")]
	public static void BroadcastUnitDataNotify(List<UnitResultData> list)
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0x127C85C", Offset = "0x127C85C", VA = "0x127C85C")]
	public static void BroadcastCutScenesNotify(e_CutScenesType type, bool isPlay)
	{
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0x127C93C", Offset = "0x127C93C", VA = "0x127C93C")]
	public static void BroadcastBattleStatisticalResults(string json)
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0x127C9E4", Offset = "0x127C9E4", VA = "0x127C9E4")]
	public static void BroadcastGameStatusNotify(e_GameStatusType gameStatus, bool status = false)
	{
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0x127CB1C", Offset = "0x127CB1C", VA = "0x127CB1C")]
	public static void BroadcastLobbyOperationNotify(int playerObjId, LobbyOperationResultData operationData)
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0x127CBC8", Offset = "0x127CBC8", VA = "0x127CBC8")]
	public static void BroadcastLobbyPlayerNotify(int playerId, int teamId, string name, string icon)
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0x127CF9C", Offset = "0x127CF9C", VA = "0x127CF9C")]
	public static void BroadcastLobbyTeamNotify(int teamId, string teamName)
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0x127D054", Offset = "0x127D054", VA = "0x127D054")]
	public static void BroadcastPlayAmbientEffectNotify(int eventId, int pointName)
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0x127D100", Offset = "0x127D100", VA = "0x127D100")]
	public static void BroadcastNPCCreateNotify(List<HostServer.NpcSpawnInfo> npcDatas)
	{
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0x127D374", Offset = "0x127D374", VA = "0x127D374")]
	public static void BroadcastGearStatusInfoSyncNotify(e_group_type group, int id, e_GearHandleStatus_type hStatusType, int prm1, int prm2, [Optional] Vector3 prmV1, [Optional] Quaternion rot)
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0x126C8C8", Offset = "0x126C8C8", VA = "0x126C8C8")]
	public static void SendToGearStatusInfoSync(int sessionId, e_group_type group, int id, e_GearHandleStatus_type hStatusType, int prm1, int prm2, [Optional] Vector3 prmV1)
	{
	}

	[Token(Token = "0x600127D")]
	[Address(RVA = "0x12700D4", Offset = "0x12700D4", VA = "0x12700D4")]
	public static void BroadcastEffectStatusNotify(EffectStatus type, int playerId = -1, int value_i = 0, float value_f = 0f, float value_f1 = 0f)
	{
	}

	[Token(Token = "0x600127E")]
	[Address(RVA = "0x12709A4", Offset = "0x12709A4", VA = "0x12709A4")]
	public static void BroadcastEffectStatusNotifyCullHost(EffectStatus type, int playerId = -1, int value_i = 0, float value_f = 0f, float value_f1 = 0f)
	{
	}

	[Token(Token = "0x600127F")]
	[Address(RVA = "0x127D534", Offset = "0x127D534", VA = "0x127D534")]
	public static void BroadcastEffectStatusNotify(EffectStatus type, int playerId = -1, bool value_i = false, float value_f = 0f, float value_f1 = 0f)
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0x127D5C8", Offset = "0x127D5C8", VA = "0x127D5C8")]
	public static void BroadcastEffectStatusNotify_BackType(EffectStatus type, int playerId = -1, e_RoomCharacterDeath_Type backType = e_RoomCharacterDeath_Type.Nomal, float value_f = 0f, float value_f1 = 0f)
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0x127D65C", Offset = "0x127D65C", VA = "0x127D65C")]
	public static void BroadcastSyncAimIKInfoNotify(int objId, bool isStart, string aniState, Vector3 targetPos)
	{
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0x127D800", Offset = "0x127D800", VA = "0x127D800")]
	public static void BroadcastUpdateAimIKInfoNotify(List<HostServer.UpdateAimIKInfoCell> list)
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0x1279FD0", Offset = "0x1279FD0", VA = "0x1279FD0")]
	public static void BroadcastFireBulletCreate(int objId, int weaponId, Vector3 pos, Quaternion rotate, bool isEffectBullet = false, int cullSession = -1)
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0x127DB48", Offset = "0x127DB48", VA = "0x127DB48")]
	public static void BroadcastRoomStatusNotify(RoomType roomType, int valueI_1, int valueI_2, int valueI_3, int valueI_4, int valueI_5, int valueI_6, bool isCullHost = false)
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x127E1C4", Offset = "0x127E1C4", VA = "0x127E1C4")]
	public static void BroadcastRoleRoomStatusNotify(int uId, int roomId, bool isCullHost = false)
	{
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0x127E508", Offset = "0x127E508", VA = "0x127E508")]
	public static void BroadcastProduceDropItemNotify(int itemType, int itemId, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x127E684", Offset = "0x127E684", VA = "0x127E684")]
	public static void BroadcastDestoryDropItemNotify(int itemId)
	{
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0x127E734", Offset = "0x127E734", VA = "0x127E734")]
	public static void BroadcastLevelUpNotify(int unitId, int level, int exp, bool isReset = false)
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0x127E848", Offset = "0x127E848", VA = "0x127E848")]
	public static void BroadcastBuffNotify(sbyte buffState, int buffId, int attachId, BuffTypeEnum buffTypeEnum = BuffTypeEnum.BUFF_NONE, int attackerId = 0, [Optional] string buffdata)
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0x127EA18", Offset = "0x127EA18", VA = "0x127EA18")]
	public static void BroadcastSimpleSkillInfoSyncNotify(int objId, int skillType, int opType, int status, [Optional] Vector3 pos, [Optional] Quaternion rot, [Optional] Vector3 tPos)
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0x127EBF8", Offset = "0x127EBF8", VA = "0x127EBF8")]
	public static void BroadcastInstanceInfoNotify(List<InstanceFlowNode> list)
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0x127F0B4", Offset = "0x127F0B4", VA = "0x127F0B4")]
	public static void BroadcastSelectInstanceStatusNotify(int useSelectInsId, int useSelectInsFlowId, int runSelectInsId, int runSelectInsFlowId, int runningInsId, int runningInsFlowId, bool isUIOp)
	{
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0x127F1F4", Offset = "0x127F1F4", VA = "0x127F1F4")]
	public static void BroadcastPreSelectInstanceStatusNotify(int runningInsId)
	{
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x127F2A4", Offset = "0x127F2A4", VA = "0x127F2A4")]
	public HostSendMessage()
	{
	}
}
[Token(Token = "0x200026C")]
public class HostServer : Singleton<HostServer>
{
	[Token(Token = "0x20005D1")]
	public struct MonsterSpawnInfo
	{
		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int id;

		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int databaseId;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int areaId;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int suicideDelayTime;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int spawnPoint;

		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int spawnLevel;

		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 spawnPos;

		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Quaternion spawnRot;

		[Token(Token = "0x400217C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SpawnPointInfo spawnInfo;
	}

	[Token(Token = "0x20005D2")]
	public struct NpcSpawnInfo
	{
		[Token(Token = "0x400217D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int objId;

		[Token(Token = "0x400217E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int npcId;

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int spawnPointId;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int groupId;
	}

	[Token(Token = "0x20005D3")]
	public struct UnitTransform
	{
		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int objId;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 pos;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Quaternion rot;
	}

	[Token(Token = "0x20005D4")]
	public struct UpdateAimIKInfoCell
	{
		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int objId;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 aimPos;
	}

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<int, PlayerData> playerSessionHash;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, PlayerData> playerIdHash;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, TeamData> teamInfo;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, int> sessionIdToPlayerIdHash;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private HashSet<int> sessionHash;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, int> siteToPlayerIdHash;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE802C", Offset = "0xEE802C")]
	private int[] <sessionArray>k__BackingField;

	[Token(Token = "0x17000190")]
	public int[] sessionArray
	{
		[Token(Token = "0x6001290")]
		[Address(RVA = "0x127F43C", Offset = "0x127F43C", VA = "0x127F43C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF06C8", Offset = "0xEF06C8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001291")]
		[Address(RVA = "0x127F444", Offset = "0x127F444", VA = "0x127F444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF06D8", Offset = "0xEF06D8")]
		private set
		{
		}
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x127F44C", Offset = "0x127F44C", VA = "0x127F44C")]
	public PlayerData[] GetPlayerDatas()
	{
		return null;
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x1279348", Offset = "0x1279348", VA = "0x1279348")]
	public PlayerData GetPlayerDataBySessionId(int session, bool isLogError = true)
	{
		return null;
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x1279B78", Offset = "0x1279B78", VA = "0x1279B78")]
	public PlayerData GetPlayerDataById(int id, bool isLogError = true)
	{
		return null;
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0x1279444", Offset = "0x1279444", VA = "0x1279444")]
	public int SpawnPlayerID(int sessionId)
	{
		return default(int);
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x1279654", Offset = "0x1279654", VA = "0x1279654")]
	public void RegisterPlayerSession(PlayerData data)
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0x1279CDC", Offset = "0x1279CDC", VA = "0x1279CDC")]
	public void UnRegisterPlayerSession(int session)
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0x127F4B4", Offset = "0x127F4B4", VA = "0x127F4B4")]
	private void AddPlayerSessionList(int session)
	{
	}

	[Token(Token = "0x6001299")]
	[Address(RVA = "0x127F570", Offset = "0x127F570", VA = "0x127F570")]
	private void RemovePlayerSessionList(int session)
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x127F62C", Offset = "0x127F62C", VA = "0x127F62C")]
	private bool CheckPlayer(int playerid)
	{
		return default(bool);
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0x127F694", Offset = "0x127F694", VA = "0x127F694")]
	private PlayerData GetPlayerDataByPlayerId(int playerid, bool isLogError = true)
	{
		return null;
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0x1279C74", Offset = "0x1279C74", VA = "0x1279C74")]
	public bool GetPlayerInfoByID(int id, out SettingManager.PlayerInfo playerInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0x127F790", Offset = "0x127F790", VA = "0x127F790")]
	public bool GetPlayerInfoBySID(int sid, out SettingManager.PlayerInfo playerInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x600129E")]
	[Address(RVA = "0x1279520", Offset = "0x1279520", VA = "0x1279520")]
	public bool GetCanjoinGame()
	{
		return default(bool);
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0x127F8B4", Offset = "0x127F8B4", VA = "0x127F8B4")]
	public e_group_type GetCanJoinGroup()
	{
		return default(e_group_type);
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0x127F8BC", Offset = "0x127F8BC", VA = "0x127F8BC")]
	public int GetJoinPlayerCount()
	{
		return default(int);
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x127F9C0", Offset = "0x127F9C0", VA = "0x127F9C0")]
	public string[] GetAllRegisterMechineId(bool isFilterClosed = false)
	{
		return null;
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x127FB64", Offset = "0x127FB64", VA = "0x127FB64")]
	public void SetJoinStatusByID(int playerId, bool status)
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x127A2EC", Offset = "0x127A2EC", VA = "0x127A2EC")]
	public void SetWeaponType(int playerId, e_weapon_group type)
	{
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x127FCD4", Offset = "0x127FCD4", VA = "0x127FCD4")]
	public void SetPlayerStyle(int playerId, e_Player_Style type)
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x127FD24", Offset = "0x127FD24", VA = "0x127FD24")]
	public void SetGroupType(int playerId, e_group_type type)
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x127FD74", Offset = "0x127FD74", VA = "0x127FD74")]
	public void SetTeamInfo(int teamId, string teamName)
	{
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x127FEC8", Offset = "0x127FEC8", VA = "0x127FEC8")]
	public string GetTeamName(int playerId)
	{
		return null;
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x1280060", Offset = "0x1280060", VA = "0x1280060")]
	public void SetLoginInfo(int playerId, int teamId, string name, string iconUrl)
	{
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x1280180", Offset = "0x1280180", VA = "0x1280180")]
	public void SetAllLoginInfo()
	{
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x127FC34", Offset = "0x127FC34", VA = "0x127FC34")]
	public void LobbyOperationServer(int playerId, int OperationType, int OperationValue)
	{
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x1280340", Offset = "0x1280340", VA = "0x1280340")]
	public int GetSessionByIp(IPEndPoint ip)
	{
		return default(int);
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x12795AC", Offset = "0x12795AC", VA = "0x12795AC")]
	public bool IsCanFilterLocalServer(int sessionId)
	{
		return default(bool);
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x12799B8", Offset = "0x12799B8", VA = "0x12799B8")]
	public PlayerData[] GetPlayerDatas(bool filterLocalServer = false, bool filterlive = false)
	{
		return null;
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x12803C8", Offset = "0x12803C8", VA = "0x12803C8")]
	public bool HaveLoginPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x60012AF")]
	[Address(RVA = "0x12804D0", Offset = "0x12804D0", VA = "0x12804D0")]
	public int GetPlayerIdBySite(int site, bool isLogError = true)
	{
		return default(int);
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x12790E0", Offset = "0x12790E0", VA = "0x12790E0")]
	public int GetSessionByPlayer(int playerId)
	{
		return default(int);
	}

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x12805CC", Offset = "0x12805CC", VA = "0x12805CC")]
	public void SetDropWeaponType(int playerId, e_weapon_group type)
	{
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0x128061C", Offset = "0x128061C", VA = "0x128061C")]
	public HostServer()
	{
	}
}
[Token(Token = "0x200026D")]
public class PlayerMoveRange : MonoBehaviour
{
	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlayerMoveRange pmr;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float offset;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float offsetMinX;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float offsetMaxX;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform moveArea;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float minX;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float maxX;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float minZ;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public float maxZ;

	[Token(Token = "0x17000191")]
	public static PlayerMoveRange Instance
	{
		[Token(Token = "0x60012B3")]
		[Address(RVA = "0x1530C80", Offset = "0x1530C80", VA = "0x1530C80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000192")]
	public float Offset
	{
		[Token(Token = "0x60012B4")]
		[Address(RVA = "0x1530CD0", Offset = "0x1530CD0", VA = "0x1530CD0")]
		set
		{
		}
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x1530CE8", Offset = "0x1530CE8", VA = "0x1530CE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x1530DB4", Offset = "0x1530DB4", VA = "0x1530DB4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x1530F88", Offset = "0x1530F88", VA = "0x1530F88")]
	public Vector3 LimitPos(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x1530FB4", Offset = "0x1530FB4", VA = "0x1530FB4")]
	public PlayerMoveRange()
	{
	}
}
[Serializable]
[Token(Token = "0x200026E")]
public class PlayerProtectDataItem
{
	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float minTime;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int minPlayer;

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int minBlood;

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x15319CC", Offset = "0x15319CC", VA = "0x15319CC")]
	public PlayerProtectDataItem()
	{
	}
}
[Token(Token = "0x200026F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xEE2410", Offset = "0xEE2410")]
public class PlayerProtectData : ScriptableObject
{
	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerProtectDataItem OnePlayer;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerProtectDataItem TwoPlayer;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerProtectDataItem ThreePlayer;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayerProtectDataItem FourPlayer;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayerProtectDataItem FivePlayer;

	[Token(Token = "0x17000193")]
	public PlayerProtectDataItem[] items
	{
		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x153182C", Offset = "0x153182C", VA = "0x153182C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x15319C4", Offset = "0x15319C4", VA = "0x15319C4")]
	public PlayerProtectData()
	{
	}
}
[Token(Token = "0x2000270")]
public class BaseHUDView : MonoBehaviour
{
	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Root;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected bool isShow;

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x1562D90", Offset = "0x1562D90", VA = "0x1562D90", Slot = "4")]
	public virtual void SetShow(bool isShow)
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x1562DD8", Offset = "0x1562DD8", VA = "0x1562DD8", Slot = "5")]
	public virtual bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x1562DE0", Offset = "0x1562DE0", VA = "0x1562DE0")]
	public void SetLook(Transform point)
	{
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x1562EBC", Offset = "0x1562EBC", VA = "0x1562EBC", Slot = "6")]
	public virtual void DoUpdate()
	{
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x1562EC0", Offset = "0x1562EC0", VA = "0x1562EC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x1562ECC", Offset = "0x1562ECC", VA = "0x1562ECC")]
	public BaseHUDView()
	{
	}
}
[Token(Token = "0x2000271")]
public class BaseUI : MonoBehaviour
{
	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected GameObject mGo;

	[Token(Token = "0x17000194")]
	public Transform CacheTransform
	{
		[Token(Token = "0x60012C2")]
		[Address(RVA = "0x156316C", Offset = "0x156316C", VA = "0x156316C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000195")]
	public GameObject CacheGameObject
	{
		[Token(Token = "0x60012C3")]
		[Address(RVA = "0x156318C", Offset = "0x156318C", VA = "0x156318C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x1563230", Offset = "0x1563230", VA = "0x1563230")]
	private void Start()
	{
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x156323C", Offset = "0x156323C", VA = "0x156323C", Slot = "4")]
	protected virtual void OnInit()
	{
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x1563240", Offset = "0x1563240", VA = "0x1563240", Slot = "5")]
	protected virtual void OnShow(object[] param)
	{
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0x1563244", Offset = "0x1563244", VA = "0x1563244", Slot = "6")]
	protected virtual void OnHide(object[] param)
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x1563248", Offset = "0x1563248", VA = "0x1563248", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x156324C", Offset = "0x156324C", VA = "0x156324C", Slot = "8")]
	public virtual void Show(params object[] param)
	{
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x1563294", Offset = "0x1563294", VA = "0x1563294", Slot = "9")]
	public virtual void Hide(params object[] param)
	{
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x15632DC", Offset = "0x15632DC", VA = "0x15632DC")]
	public void Destroy()
	{
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x15632E8", Offset = "0x15632E8", VA = "0x15632E8", Slot = "10")]
	public virtual bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0x155A588", Offset = "0x155A588", VA = "0x155A588")]
	public BaseUI()
	{
	}
}
[Token(Token = "0x2000272")]
public class BattleProgress : MonoBehaviour
{
	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text title;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text m;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text s;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int curProgress;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int maxProgress;

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0x13C7B8C", Offset = "0x13C7B8C", VA = "0x13C7B8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0x13C7C84", Offset = "0x13C7C84", VA = "0x13C7C84")]
	public BattleProgress()
	{
	}
}
[Token(Token = "0x2000273")]
public class BattleTimer : MonoBehaviour
{
	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text title;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text min;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text second;

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0x13CC21C", Offset = "0x13CC21C", VA = "0x13CC21C")]
	private void Start()
	{
	}

	[Token(Token = "0x60012D1")]
	[Address(RVA = "0x13CC2BC", Offset = "0x13CC2BC", VA = "0x13CC2BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0x13CC4E8", Offset = "0x13CC4E8", VA = "0x13CC4E8")]
	public BattleTimer()
	{
	}
}
[Token(Token = "0x2000274")]
public class BloodSliderBase : BaseHUDView
{
	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected float sliderValue;

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0x13CF12C", Offset = "0x13CF12C", VA = "0x13CF12C", Slot = "7")]
	public virtual void Init(int maxValue)
	{
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0x13CF130", Offset = "0x13CF130", VA = "0x13CF130", Slot = "8")]
	public virtual void SetValue(int value)
	{
	}

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0x13CF134", Offset = "0x13CF134", VA = "0x13CF134", Slot = "9")]
	public virtual void Recover()
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0x13CF138", Offset = "0x13CF138", VA = "0x13CF138")]
	public BloodSliderBase()
	{
	}
}
[Token(Token = "0x2000275")]
public class BossMultiBlood : BloodSliderBase
{
	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image Slider;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image SliderSlow;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Speed;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite[] Sps;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float runningValue;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int maxHpValue;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int curHpValue;

	[Token(Token = "0x60012D7")]
	[Address(RVA = "0x13D7A2C", Offset = "0x13D7A2C", VA = "0x13D7A2C", Slot = "7")]
	public override void Init(int maxValue)
	{
	}

	[Token(Token = "0x60012D8")]
	[Address(RVA = "0x13D7A60", Offset = "0x13D7A60", VA = "0x13D7A60", Slot = "8")]
	public override void SetValue(int value)
	{
	}

	[Token(Token = "0x60012D9")]
	[Address(RVA = "0x13D7BBC", Offset = "0x13D7BBC", VA = "0x13D7BBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60012DA")]
	[Address(RVA = "0x13D7C1C", Offset = "0x13D7C1C", VA = "0x13D7C1C", Slot = "9")]
	public override void Recover()
	{
	}

	[Token(Token = "0x60012DB")]
	[Address(RVA = "0x13D7BC0", Offset = "0x13D7BC0", VA = "0x13D7BC0")]
	private void SlideUpdate()
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x13D7C20", Offset = "0x13D7C20", VA = "0x13D7C20")]
	public BossMultiBlood()
	{
	}
}
[Token(Token = "0x2000276")]
public class CharacterDeathUI : BaseUI
{
	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float followDis;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float followSpeed;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image BgImg;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text SayTxt;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite[] BgSps;

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x12BDCDC", Offset = "0x12BDCDC", VA = "0x12BDCDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x12BDCF0", Offset = "0x12BDCF0", VA = "0x12BDCF0", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x12BDCF8", Offset = "0x12BDCF8", VA = "0x12BDCF8", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x12BE000", Offset = "0x12BE000", VA = "0x12BE000", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0x12BE008", Offset = "0x12BE008", VA = "0x12BE008")]
	public void SetInfo(RoomCharacterDeathBase data)
	{
	}

	[Token(Token = "0x60012E2")]
	[Address(RVA = "0x12BE0D8", Offset = "0x12BE0D8", VA = "0x12BE0D8")]
	private Sprite GetBgSp(e_RoomCharacterDeath_Type deathType)
	{
		return null;
	}

	[Token(Token = "0x60012E3")]
	[Address(RVA = "0x12BE18C", Offset = "0x12BE18C", VA = "0x12BE18C")]
	private void Update()
	{
	}

	[Token(Token = "0x60012E4")]
	[Address(RVA = "0x12BDD20", Offset = "0x12BDD20", VA = "0x12BDD20")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x60012E5")]
	[Address(RVA = "0x12BE190", Offset = "0x12BE190", VA = "0x12BE190")]
	public CharacterDeathUI()
	{
	}
}
[Token(Token = "0x2000277")]
public class CheckpointUI : BaseUI
{
	[Token(Token = "0x20005D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4F40", Offset = "0xEE4F40")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsCaptain;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WUnit unit;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CheckpointUI <>4__this;

		[Token(Token = "0x6002CEB")]
		[Address(RVA = "0x120C0BC", Offset = "0x120C0BC", VA = "0x120C0BC")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6002CEC")]
		[Address(RVA = "0x120C364", Offset = "0x120C364", VA = "0x120C364")]
		internal void <ShowProcess>b__1()
		{
		}
	}

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SelectInstanceUI selectUI;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LevelViewManager LevelViewManager;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Coroutine coroutine;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WwiseDefine WwiseDefine;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioEvent Remind;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float forwardOffset;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float FollowViewtime;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float time;

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0x120AE4C", Offset = "0x120AE4C", VA = "0x120AE4C", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0x120B144", Offset = "0x120B144", VA = "0x120B144", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0x120B680", Offset = "0x120B680", VA = "0x120B680", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0x120B8BC", Offset = "0x120B8BC", VA = "0x120B8BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x120B9A4", Offset = "0x120B9A4", VA = "0x120B9A4")]
	public void ShowProcess(SelectInstanceManager.e_ProcessType e_ProcessType)
	{
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0x120B388", Offset = "0x120B388", VA = "0x120B388")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0x120C0C4", Offset = "0x120C0C4", VA = "0x120C0C4")]
	public void HideProcess()
	{
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x120C194", Offset = "0x120C194", VA = "0x120C194")]
	public CheckpointUI()
	{
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x120C1A4", Offset = "0x120C1A4", VA = "0x120C1A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF06E8", Offset = "0xEF06E8")]
	private void <ShowProcess>b__12_0()
	{
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x120C284", Offset = "0x120C284", VA = "0x120C284")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF06F8", Offset = "0xEF06F8")]
	private void <HideProcess>b__14_0()
	{
	}
}
[Token(Token = "0x2000278")]
public class LevelUIView : BaseUI
{
	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int Id;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int InstanceId;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int FlowId;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public int Status;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool IsInstanceFlowPass;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public InstanceFlowNode[] ChildNodes;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private e_FlowType flowType;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image Explored;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image Exploring;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image Explore;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite MonsterExplored;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite MonsterExploring;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite MonsterExplore;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite GearExplored;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite GearExploring;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sprite GearExplore;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sprite BoosExplore;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Sprite BoosExplored;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Sprite SafeRoom;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject NotExplored;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image LeftLine;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image RightLine;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Image LeftDottedLine;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Image RightDottedLine;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject[] Levelstatus;

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0x147A404", Offset = "0x147A404", VA = "0x147A404", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x147A40C", Offset = "0x147A40C", VA = "0x147A40C", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x147ABD4", Offset = "0x147ABD4", VA = "0x147ABD4", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x147A444", Offset = "0x147A444", VA = "0x147A444")]
	public void DoInit()
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0x147A93C", Offset = "0x147A93C", VA = "0x147A93C")]
	private void selecteCofig()
	{
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0x147A7EC", Offset = "0x147A7EC", VA = "0x147A7EC")]
	private void LevelConnection()
	{
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x147ABDC", Offset = "0x147ABDC", VA = "0x147ABDC")]
	public LevelUIView()
	{
	}
}
[Token(Token = "0x2000279")]
public class LevelViewManager : BaseUI
{
	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LevelUIView[] levelUIViews;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine coroutine;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<InstanceFlowNode> NextInstanceFlowNodes;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Image LeftLine;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Image RightLine;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image LeftDottedLine;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Image RightDottedLine;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Image leftExploring;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Image rightExploring;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Image leftExplore;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Image rightExplore;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool IsFade;

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x147ABE4", Offset = "0x147ABE4", VA = "0x147ABE4", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x147ABEC", Offset = "0x147ABEC", VA = "0x147ABEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012F9")]
	[Address(RVA = "0x147ABF0", Offset = "0x147ABF0", VA = "0x147ABF0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012FA")]
	[Address(RVA = "0x147ABF4", Offset = "0x147ABF4", VA = "0x147ABF4")]
	public void InitShowData()
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x147ACF8", Offset = "0x147ACF8", VA = "0x147ACF8")]
	private void DoInit()
	{
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x147AFC0", Offset = "0x147AFC0", VA = "0x147AFC0", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x147B170", Offset = "0x147B170", VA = "0x147B170")]
	private void getSelectdata()
	{
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x147B760", Offset = "0x147B760", VA = "0x147B760")]
	private void DOFade()
	{
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x147BA10", Offset = "0x147BA10", VA = "0x147BA10", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x147BB5C", Offset = "0x147BB5C", VA = "0x147BB5C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0x147BB60", Offset = "0x147BB60", VA = "0x147BB60")]
	private void Fresh()
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0x147BBD8", Offset = "0x147BBD8", VA = "0x147BBD8")]
	private void OnUpdateView()
	{
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0x147C880", Offset = "0x147C880", VA = "0x147C880")]
	public LevelViewManager()
	{
	}
}
[Token(Token = "0x200027A")]
public class ClientUIGameStatusView : MonoBehaviour
{
	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject successfulObj;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject unsuccessfulObj;

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x121B500", Offset = "0x121B500", VA = "0x121B500")]
	public void SetGameStatus(StatisticalManager.StatisticalResults results)
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x121B6E4", Offset = "0x121B6E4", VA = "0x121B6E4")]
	public ClientUIGameStatusView()
	{
	}
}
[Token(Token = "0x200027B")]
public class ClientUIMyScoreView : MonoBehaviour
{
	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text scoreText;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image levelImage;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite[] levelSprites;

	[Token(Token = "0x6001306")]
	[Address(RVA = "0x121B6EC", Offset = "0x121B6EC", VA = "0x121B6EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001307")]
	[Address(RVA = "0x121B804", Offset = "0x121B804", VA = "0x121B804")]
	public void SetMyScore(StatisticalManager.StatisticalResultData resultsData)
	{
	}

	[Token(Token = "0x6001308")]
	[Address(RVA = "0x121B9F8", Offset = "0x121B9F8", VA = "0x121B9F8")]
	public ClientUIMyScoreView()
	{
	}
}
[Token(Token = "0x200027C")]
public class ClientUITeamGridScoreItem : MonoBehaviour
{
	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text scoreText;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text maxKillText;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text hitRateText;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text maxTimeText;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text maxDieText;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject myFrame;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color color1;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color color2;

	[Token(Token = "0x6001309")]
	[Address(RVA = "0x121BA00", Offset = "0x121BA00", VA = "0x121BA00")]
	private void Awake()
	{
	}

	[Token(Token = "0x600130A")]
	[Address(RVA = "0x121BBD0", Offset = "0x121BBD0", VA = "0x121BBD0")]
	public void Setinfo(StatisticalManager.StatisticalResultData data, bool isDisplayFrame = true)
	{
	}

	[Token(Token = "0x600130B")]
	[Address(RVA = "0x121BE5C", Offset = "0x121BE5C", VA = "0x121BE5C")]
	public ClientUITeamGridScoreItem()
	{
	}
}
[Token(Token = "0x200027D")]
public class ClientUITeamGridScoreView : MonoBehaviour
{
	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClientUITeamGridScoreItem[] items;

	[Token(Token = "0x600130C")]
	[Address(RVA = "0x121BE64", Offset = "0x121BE64", VA = "0x121BE64")]
	private void Awake()
	{
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0x121BF08", Offset = "0x121BF08", VA = "0x121BF08")]
	public void SetTeamListInfo(StatisticalManager.StatisticalResults results, bool isDisplayFrame = true)
	{
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0x121C02C", Offset = "0x121C02C", VA = "0x121C02C")]
	public ClientUITeamGridScoreView()
	{
	}
}
[Token(Token = "0x200027E")]
public class ClientUIView : BaseUI
{
	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject _root;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ClientUIGameStatusView _GameStatusView_A;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ClientUIGameStatusView _GameStatusView_B;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioEvent winAudioEvent;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AudioEvent failAudioEvent;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private StatisticalManager.StatisticalResults results;

	[Token(Token = "0x17000196")]
	public StatisticalManager.StatisticalResults Results
	{
		[Token(Token = "0x600130F")]
		[Address(RVA = "0x121C034", Offset = "0x121C034", VA = "0x121C034")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001310")]
		[Address(RVA = "0x121C03C", Offset = "0x121C03C", VA = "0x121C03C")]
		private set
		{
		}
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0x121C044", Offset = "0x121C044", VA = "0x121C044", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0x121C04C", Offset = "0x121C04C", VA = "0x121C04C", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0x121C250", Offset = "0x121C250", VA = "0x121C250", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0x121C348", Offset = "0x121C348", VA = "0x121C348", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6001315")]
	[Address(RVA = "0x121C364", Offset = "0x121C364", VA = "0x121C364")]
	public void SetStatisticalResults(StatisticalManager.StatisticalResults _results)
	{
	}

	[Token(Token = "0x6001316")]
	[Address(RVA = "0x121C09C", Offset = "0x121C09C", VA = "0x121C09C")]
	private void RefreshUI()
	{
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0x121C444", Offset = "0x121C444", VA = "0x121C444")]
	private void Fade(GameObject go, float alpha, float duration)
	{
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0x121C344", Offset = "0x121C344", VA = "0x121C344")]
	private void PlayAudio(bool isPlay, bool isWin)
	{
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0x121C5A0", Offset = "0x121C5A0", VA = "0x121C5A0")]
	public void OnCloseBtnClick()
	{
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x121C680", Offset = "0x121C680", VA = "0x121C680")]
	public ClientUIView()
	{
	}
}
[Token(Token = "0x200027F")]
public class FollowCamera : MonoBehaviour
{
	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float displayDis;

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x132CCBC", Offset = "0x132CCBC", VA = "0x132CCBC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x132CCC0", Offset = "0x132CCC0", VA = "0x132CCC0")]
	private void Follow()
	{
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0x132CF34", Offset = "0x132CF34", VA = "0x132CF34")]
	public FollowCamera()
	{
	}
}
[Token(Token = "0x2000280")]
public class GuidTipUI : BaseUI
{
	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float followDis;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float followSpeed;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image BgImg;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text SayTxt;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Image BgImg1;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text SayTxt1;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform Contains;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text UseSayTxt;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Image UseBgImg;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool isShow;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	private bool doFadeing;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	private bool isFadeIn;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float fadeTime;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float fadeRunningTime;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Color tmpCl;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE817C", Offset = "0xEE817C")]
	private int <CallCount>k__BackingField;

	[Token(Token = "0x17000197")]
	public int CallCount
	{
		[Token(Token = "0x6001323")]
		[Address(RVA = "0x126F488", Offset = "0x126F488", VA = "0x126F488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0708", Offset = "0xEF0708")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001324")]
		[Address(RVA = "0x126F490", Offset = "0x126F490", VA = "0x126F490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0718", Offset = "0xEF0718")]
		private set
		{
		}
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0x126EDD4", Offset = "0x126EDD4", VA = "0x126EDD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x126EDE8", Offset = "0x126EDE8", VA = "0x126EDE8", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0x126EDF0", Offset = "0x126EDF0", VA = "0x126EDF0", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0x126F434", Offset = "0x126F434", VA = "0x126F434", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0x126F440", Offset = "0x126F440", VA = "0x126F440", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0x126EFDC", Offset = "0x126EFDC", VA = "0x126EFDC")]
	public void SetHighPosition(float posH = 0f)
	{
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0x126F498", Offset = "0x126F498", VA = "0x126F498")]
	public void SetInfo(string say)
	{
	}

	[Token(Token = "0x6001327")]
	[Address(RVA = "0x126F060", Offset = "0x126F060", VA = "0x126F060")]
	private void SetFadeIn()
	{
	}

	[Token(Token = "0x6001328")]
	[Address(RVA = "0x126F474", Offset = "0x126F474", VA = "0x126F474")]
	private void SetFadeOut()
	{
	}

	[Token(Token = "0x6001329")]
	[Address(RVA = "0x126F4DC", Offset = "0x126F4DC", VA = "0x126F4DC")]
	private void FadeOutEnd()
	{
	}

	[Token(Token = "0x600132A")]
	[Address(RVA = "0x126F508", Offset = "0x126F508", VA = "0x126F508")]
	private void DoFading()
	{
	}

	[Token(Token = "0x600132B")]
	[Address(RVA = "0x126F070", Offset = "0x126F070", VA = "0x126F070")]
	private void SetFadeValue(float v)
	{
	}

	[Token(Token = "0x600132C")]
	[Address(RVA = "0x126F610", Offset = "0x126F610", VA = "0x126F610")]
	private void Update()
	{
	}

	[Token(Token = "0x600132D")]
	[Address(RVA = "0x126F154", Offset = "0x126F154", VA = "0x126F154")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x600132E")]
	[Address(RVA = "0x126F648", Offset = "0x126F648", VA = "0x126F648")]
	public GuidTipUI()
	{
	}
}
[Token(Token = "0x2000281")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE2470", Offset = "0xEE2470")]
public class InfoUICell : MonoBehaviour
{
	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform text_root;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform text_root2;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI text;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float y_offset;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WUnit owner;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<int, string> lvStrDic;

	[Token(Token = "0x600132F")]
	[Address(RVA = "0x1282450", Offset = "0x1282450", VA = "0x1282450")]
	public static string GetLvStr(int num)
	{
		return null;
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0x1282564", Offset = "0x1282564", VA = "0x1282564")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x12826A4", Offset = "0x12826A4", VA = "0x12826A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0x1282760", Offset = "0x1282760", VA = "0x1282760")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x1282768", Offset = "0x1282768", VA = "0x1282768")]
	public void SetInfo(WUnit _owner)
	{
	}

	[Token(Token = "0x6001334")]
	[Address(RVA = "0x12828EC", Offset = "0x12828EC", VA = "0x12828EC")]
	public void DoInit()
	{
	}

	[Token(Token = "0x6001335")]
	[Address(RVA = "0x1282A7C", Offset = "0x1282A7C", VA = "0x1282A7C")]
	public void DoUninit()
	{
	}

	[Token(Token = "0x6001336")]
	[Address(RVA = "0x12826AC", Offset = "0x12826AC", VA = "0x12826AC")]
	public void SetUIActive(bool isActive)
	{
	}

	[Token(Token = "0x6001337")]
	[Address(RVA = "0x1282BCC", Offset = "0x1282BCC", VA = "0x1282BCC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001338")]
	[Address(RVA = "0x1282790", Offset = "0x1282790", VA = "0x1282790")]
	public void InfoUI_Update()
	{
	}

	[Token(Token = "0x6001339")]
	[Address(RVA = "0x1282BD0", Offset = "0x1282BD0", VA = "0x1282BD0")]
	public InfoUICell()
	{
	}
}
[Token(Token = "0x2000282")]
public class InfoUIManager : MonoBehaviour
{
	[Token(Token = "0x20005D6")]
	public class InfoUIRootCell
	{
		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InfoUICell ui;

		[Token(Token = "0x400218A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform t;

		[Token(Token = "0x400218B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float dis;

		[Token(Token = "0x6002CED")]
		[Address(RVA = "0x146D3FC", Offset = "0x146D3FC", VA = "0x146D3FC")]
		public InfoUIRootCell()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4F50", Offset = "0xEE4F50")]
	private sealed class <>c
	{
		[Token(Token = "0x400218C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400218D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<InfoUIRootCell> <>9__13_0;

		[Token(Token = "0x6002CEF")]
		[Address(RVA = "0x146D3C4", Offset = "0x146D3C4", VA = "0x146D3C4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002CF0")]
		[Address(RVA = "0x146D3CC", Offset = "0x146D3CC", VA = "0x146D3CC")]
		internal int <SortCells>b__13_0(InfoUIRootCell a, InfoUIRootCell b)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform text_root;

	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InfoUIManager Instance;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Transform> cells;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<InfoUIRootCell> cells2;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<InfoUIRootCell> cellTemp;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float sortTime;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float sortTimer;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isSort;

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x1282C58", Offset = "0x1282C58", VA = "0x1282C58")]
	private void Awake()
	{
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x1282978", Offset = "0x1282978", VA = "0x1282978")]
	public void Add(InfoUICell t)
	{
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x1282AF0", Offset = "0x1282AF0", VA = "0x1282AF0")]
	public void Remove(InfoUICell t)
	{
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x1282CB0", Offset = "0x1282CB0", VA = "0x1282CB0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x1282D0C", Offset = "0x1282D0C", VA = "0x1282D0C")]
	public void SortCells()
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x1282FCC", Offset = "0x1282FCC", VA = "0x1282FCC")]
	public InfoUIManager()
	{
	}
}
[Token(Token = "0x2000283")]
public class LoadingTextures : MonoBehaviour
{
	[Token(Token = "0x20005D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4F60", Offset = "0xEE4F60")]
	private sealed class <GetResources>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400218E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400218F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LoadingTextures <>4__this;

		[Token(Token = "0x4002191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string path;

		[Token(Token = "0x4002192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Stopwatch <stopwatch>5__2;

		[Token(Token = "0x4002193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__3;

		[Token(Token = "0x4002194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UnityWebRequest <request>5__4;

		[Token(Token = "0x4002195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private DownloadHandlerTexture <downloadTexture>5__5;

		[Token(Token = "0x17000464")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CF4")]
			[Address(RVA = "0x12DE110", Offset = "0x12DE110", VA = "0x12DE110", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000465")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CF6")]
			[Address(RVA = "0x12DE178", Offset = "0x12DE178", VA = "0x12DE178", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CF1")]
		[Address(RVA = "0x12DDD7C", Offset = "0x12DDD7C", VA = "0x12DDD7C")]
		[DebuggerHidden]
		public <GetResources>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002CF2")]
		[Address(RVA = "0x12DDDB8", Offset = "0x12DDDB8", VA = "0x12DDDB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CF3")]
		[Address(RVA = "0x12DDDBC", Offset = "0x12DDDBC", VA = "0x12DDDBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CF5")]
		[Address(RVA = "0x12DE118", Offset = "0x12DE118", VA = "0x12DE118", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private e_type_language language;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Texture> textures;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string loadImagePath;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE818C", Offset = "0xEE818C")]
	private static LoadingTextures <Instance>k__BackingField;

	[Token(Token = "0x17000198")]
	public static LoadingTextures Instance
	{
		[Token(Token = "0x6001341")]
		[Address(RVA = "0x12DD768", Offset = "0x12DD768", VA = "0x12DD768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0728", Offset = "0xEF0728")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001342")]
		[Address(RVA = "0x12DD7B8", Offset = "0x12DD7B8", VA = "0x12DD7B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0738", Offset = "0xEF0738")]
		private set
		{
		}
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x12DD810", Offset = "0x12DD810", VA = "0x12DD810")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x12DD868", Offset = "0x12DD868", VA = "0x12DD868")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x12DDBE0", Offset = "0x12DDBE0", VA = "0x12DDBE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001346")]
	[Address(RVA = "0x12DDCE0", Offset = "0x12DDCE0", VA = "0x12DDCE0")]
	private void OnLanguageChange(e_type_language type)
	{
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x12DD9A8", Offset = "0x12DD9A8", VA = "0x12DD9A8")]
	private void HotSwitch(e_type_language type_Language)
	{
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x12DDCE4", Offset = "0x12DDCE4", VA = "0x12DDCE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF0748", Offset = "0xEF0748")]
	private IEnumerator GetResources(string path)
	{
		return null;
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0x12DDDA8", Offset = "0x12DDDA8", VA = "0x12DDDA8")]
	public LoadingTextures()
	{
	}
}
[Token(Token = "0x2000284")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE24D4", Offset = "0xEE24D4")]
public class RandomLoadingTexture : MonoBehaviour
{
	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture texture_o;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RawImage image;

	[Token(Token = "0x600134A")]
	[Address(RVA = "0x13B1864", Offset = "0x13B1864", VA = "0x13B1864")]
	private void Awake()
	{
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x13B18E0", Offset = "0x13B18E0", VA = "0x13B18E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0x13B18E4", Offset = "0x13B18E4", VA = "0x13B18E4")]
	private void SetImage()
	{
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x13B19D4", Offset = "0x13B19D4", VA = "0x13B19D4")]
	public RandomLoadingTexture()
	{
	}
}
[Token(Token = "0x2000285")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE2538", Offset = "0xEE2538")]
public class RandomLoadingTexture2 : MonoBehaviour
{
	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture texture_o;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Pvr_UnitySDKEyeOverlay image;

	[Token(Token = "0x600134E")]
	[Address(RVA = "0x13B19DC", Offset = "0x13B19DC", VA = "0x13B19DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600134F")]
	[Address(RVA = "0x13B1A74", Offset = "0x13B1A74", VA = "0x13B1A74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0x13B1A78", Offset = "0x13B1A78", VA = "0x13B1A78")]
	private void SetImage()
	{
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0x13B1C70", Offset = "0x13B1C70", VA = "0x13B1C70")]
	public RandomLoadingTexture2()
	{
	}
}
[Token(Token = "0x2000286")]
public class ReloadUI : BaseUI
{
	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image ProgressBar;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Weapon weapon;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float reloadTime;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float time;

	[Token(Token = "0x6001352")]
	[Address(RVA = "0x13B51EC", Offset = "0x13B51EC", VA = "0x13B51EC", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0x13B52D8", Offset = "0x13B52D8", VA = "0x13B52D8", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0x13B5394", Offset = "0x13B5394", VA = "0x13B5394", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0x13B5414", Offset = "0x13B5414", VA = "0x13B5414")]
	private void Update()
	{
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0x13B5490", Offset = "0x13B5490", VA = "0x13B5490")]
	private void Reloading()
	{
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0x13B5848", Offset = "0x13B5848", VA = "0x13B5848")]
	public ReloadUI()
	{
	}
}
[Token(Token = "0x2000287")]
public class SelectInstanceUI : BaseUI
{
	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject LeftBall;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject RightBall;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI LeftText;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI RightText;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI LeftFlowName;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI RightFlowName;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image LeftIcon;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image RightIcon;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI Minute;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI Seconds;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshProUGUI Countdown;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshProUGUI WaitTitle;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI CurScheduleText;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<InstanceFlowNode> flowNodes;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Button button;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float nextClickTime;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 pos;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 forward;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private WUnit unit;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Action PreSelect;

	[Token(Token = "0x17000199")]
	public Button Button
	{
		[Token(Token = "0x6001358")]
		[Address(RVA = "0x1256FBC", Offset = "0x1256FBC", VA = "0x1256FBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0x1256FC4", Offset = "0x1256FC4", VA = "0x1256FC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0x1256FC8", Offset = "0x1256FC8", VA = "0x1256FC8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x1256FCC", Offset = "0x1256FCC", VA = "0x1256FCC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x1256FD0", Offset = "0x1256FD0", VA = "0x1256FD0", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0x1256FF8", Offset = "0x1256FF8", VA = "0x1256FF8")]
	public void UnChangeInit()
	{
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0x1257418", Offset = "0x1257418", VA = "0x1257418", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0x1258588", Offset = "0x1258588", VA = "0x1258588")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0x1258024", Offset = "0x1258024", VA = "0x1258024")]
	private void RegisterInput()
	{
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0x1257118", Offset = "0x1257118", VA = "0x1257118")]
	private void UnRegisterInput()
	{
	}

	[Token(Token = "0x6001362")]
	[Address(RVA = "0x1258D00", Offset = "0x1258D00", VA = "0x1258D00")]
	private void OnWeaponPressDown()
	{
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0x125900C", Offset = "0x125900C", VA = "0x125900C")]
	private void OnWeaponPressUp()
	{
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0x1258D8C", Offset = "0x1258D8C", VA = "0x1258D8C")]
	private void selected(bool isTraget)
	{
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0x125813C", Offset = "0x125813C", VA = "0x125813C")]
	private void ChangeWeaponStyle()
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0x1257228", Offset = "0x1257228", VA = "0x1257228")]
	private void UnChangeWeaponStyle()
	{
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0x1259048", Offset = "0x1259048", VA = "0x1259048")]
	private void OnWeaponChange()
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0x125823C", Offset = "0x125823C", VA = "0x125823C")]
	private void InitLine()
	{
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0x12584C0", Offset = "0x12584C0", VA = "0x12584C0")]
	private void PreSelectBtn()
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0x125904C", Offset = "0x125904C", VA = "0x125904C")]
	private void UnPreSelectBtn()
	{
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0x125910C", Offset = "0x125910C", VA = "0x125910C")]
	private void OnPreSelectleftUpdate()
	{
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0x12586F0", Offset = "0x12586F0", VA = "0x12586F0")]
	private void InputWidgetControl()
	{
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0x1257F24", Offset = "0x1257F24", VA = "0x1257F24")]
	private void otherPreSelect()
	{
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0x1257320", Offset = "0x1257320", VA = "0x1257320")]
	private void UnotherPreSelect()
	{
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0x1259380", Offset = "0x1259380", VA = "0x1259380")]
	private void OnOtherPreSelect()
	{
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0x1257784", Offset = "0x1257784", VA = "0x1257784")]
	private void ViewUpdate()
	{
	}

	[Token(Token = "0x6001371")]
	[Address(RVA = "0x1258BE8", Offset = "0x1258BE8", VA = "0x1258BE8")]
	private void curTime()
	{
	}

	[Token(Token = "0x6001372")]
	[Address(RVA = "0x1259500", Offset = "0x1259500", VA = "0x1259500")]
	public SelectInstanceUI()
	{
	}
}
[Token(Token = "0x2000288")]
public class QRCodeVerifyDTO : Singleton<QRCodeVerifyDTO>
{
	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool VerifyQRFlag;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int mPlayerNumbers;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> qrcodes;

	[Token(Token = "0x1700019A")]
	public int PlayerNumbers
	{
		[Token(Token = "0x6001373")]
		[Address(RVA = "0x1A41F10", Offset = "0x1A41F10", VA = "0x1A41F10")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001374")]
		[Address(RVA = "0x1A41F18", Offset = "0x1A41F18", VA = "0x1A41F18")]
		private set
		{
		}
	}

	[Token(Token = "0x1700019B")]
	public int SelectPlayerNumbers
	{
		[Token(Token = "0x6001375")]
		[Address(RVA = "0x1A41F20", Offset = "0x1A41F20", VA = "0x1A41F20")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001376")]
	[Address(RVA = "0x1A41F98", Offset = "0x1A41F98", VA = "0x1A41F98")]
	public string[] GetAllQRCode()
	{
		return null;
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0x1A42004", Offset = "0x1A42004", VA = "0x1A42004")]
	public void StartGame(Action<bool, string> cb)
	{
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0x1A4206C", Offset = "0x1A4206C", VA = "0x1A4206C")]
	public void VerifyQRCode(Action<bool, string> cb)
	{
	}

	[Token(Token = "0x6001379")]
	public static bool CompareArray<T>(T[] arr1, T[] arr2)
	{
		return default(bool);
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0x1A420D4", Offset = "0x1A420D4", VA = "0x1A420D4")]
	public QRCodeVerifyDTO()
	{
	}
}
[Token(Token = "0x2000289")]
public class ServerUIMessageView : BaseUI
{
	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image bg;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text text;

	[Token(Token = "0x600137B")]
	[Address(RVA = "0x125EDB4", Offset = "0x125EDB4", VA = "0x125EDB4", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600137C")]
	[Address(RVA = "0x125EEE0", Offset = "0x125EEE0", VA = "0x125EEE0", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x600137D")]
	[Address(RVA = "0x125EEFC", Offset = "0x125EEFC", VA = "0x125EEFC", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x600137E")]
	[Address(RVA = "0x125EF58", Offset = "0x125EF58", VA = "0x125EF58", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x600137F")]
	[Address(RVA = "0x125EFA4", Offset = "0x125EFA4", VA = "0x125EFA4")]
	public void Close()
	{
	}

	[Token(Token = "0x6001380")]
	[Address(RVA = "0x125F084", Offset = "0x125F084", VA = "0x125F084")]
	private void Fade(float alpha, float duration)
	{
	}

	[Token(Token = "0x6001381")]
	[Address(RVA = "0x125F1E0", Offset = "0x125F1E0", VA = "0x125F1E0")]
	public void ShowMessage(string info)
	{
	}

	[Token(Token = "0x6001382")]
	[Address(RVA = "0x125F2E4", Offset = "0x125F2E4", VA = "0x125F2E4")]
	public ServerUIMessageView()
	{
	}
}
[Token(Token = "0x200028A")]
public class ServerUIQRCodeItemView : BaseUI
{
	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text info_text;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ServerUIQRCodeView parentView;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string qrcode;

	[Token(Token = "0x6001383")]
	[Address(RVA = "0x125F2EC", Offset = "0x125F2EC", VA = "0x125F2EC", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x6001384")]
	[Address(RVA = "0x125F40C", Offset = "0x125F40C", VA = "0x125F40C")]
	public void RefreshUI()
	{
	}

	[Token(Token = "0x6001385")]
	[Address(RVA = "0x125F438", Offset = "0x125F438", VA = "0x125F438")]
	public void RemoveBtn()
	{
	}

	[Token(Token = "0x6001386")]
	[Address(RVA = "0x125F4FC", Offset = "0x125F4FC", VA = "0x125F4FC")]
	public ServerUIQRCodeItemView()
	{
	}
}
[Token(Token = "0x200028B")]
public class ServerUIQRCodeView : BaseUI
{
	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button Close_Btn;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button Clear_Btn;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Button verify_Btn;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private InputField QRCode_Input;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject QRCodeItemPrefab;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GridLayoutGroup QRCodeGrid;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<ServerUIQRCodeItemView> qrcodeItems;

	[Token(Token = "0x6001387")]
	[Address(RVA = "0x125F504", Offset = "0x125F504", VA = "0x125F504", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6001388")]
	[Address(RVA = "0x125F50C", Offset = "0x125F50C", VA = "0x125F50C", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x6001389")]
	[Address(RVA = "0x125F528", Offset = "0x125F528", VA = "0x125F528", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x600138A")]
	[Address(RVA = "0x125F584", Offset = "0x125F584", VA = "0x125F584", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x600138B")]
	[Address(RVA = "0x125F5E0", Offset = "0x125F5E0", VA = "0x125F5E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600138C")]
	[Address(RVA = "0x125F660", Offset = "0x125F660", VA = "0x125F660")]
	public void CloseBtn()
	{
	}

	[Token(Token = "0x600138D")]
	[Address(RVA = "0x125F740", Offset = "0x125F740", VA = "0x125F740")]
	public void ClearBtn()
	{
	}

	[Token(Token = "0x600138E")]
	[Address(RVA = "0x125F89C", Offset = "0x125F89C", VA = "0x125F89C")]
	public void VerifyBtn()
	{
	}

	[Token(Token = "0x600138F")]
	[Address(RVA = "0x125F5E4", Offset = "0x125F5E4", VA = "0x125F5E4")]
	private void MonitorQRCode()
	{
	}

	[Token(Token = "0x6001390")]
	[Address(RVA = "0x125F8A0", Offset = "0x125F8A0", VA = "0x125F8A0")]
	private void AddItem(string qrcode)
	{
	}

	[Token(Token = "0x6001391")]
	[Address(RVA = "0x125F454", Offset = "0x125F454", VA = "0x125F454")]
	public void RemoveItem(ServerUIQRCodeItemView item)
	{
	}

	[Token(Token = "0x6001392")]
	[Address(RVA = "0x125F744", Offset = "0x125F744", VA = "0x125F744")]
	public void RemoveAllItem()
	{
	}

	[Token(Token = "0x6001393")]
	[Address(RVA = "0x125FB64", Offset = "0x125FB64", VA = "0x125FB64")]
	public ServerUIQRCodeView()
	{
	}
}
[Token(Token = "0x200028C")]
public class ServerUIView : BaseUI
{
	[Token(Token = "0x20005D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4F70", Offset = "0xEE4F70")]
	private sealed class <DoRefresh>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ServerUIView <>4__this;

		[Token(Token = "0x17000466")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002CFA")]
			[Address(RVA = "0x1261474", Offset = "0x1261474", VA = "0x1261474", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000467")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002CFC")]
			[Address(RVA = "0x12614DC", Offset = "0x12614DC", VA = "0x12614DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002CF7")]
		[Address(RVA = "0x1260708", Offset = "0x1260708", VA = "0x1260708")]
		[DebuggerHidden]
		public <DoRefresh>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x6002CF8")]
		[Address(RVA = "0x12613BC", Offset = "0x12613BC", VA = "0x12613BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002CF9")]
		[Address(RVA = "0x12613C0", Offset = "0x12613C0", VA = "0x12613C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002CFB")]
		[Address(RVA = "0x126147C", Offset = "0x126147C", VA = "0x126147C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4F80", Offset = "0xEE4F80")]
	private sealed class <>c
	{
		[Token(Token = "0x4002199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400219A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<bool> <>9__43_0;

		[Token(Token = "0x6002CFE")]
		[Address(RVA = "0x12613B0", Offset = "0x12613B0", VA = "0x12613B0")]
		public <>c()
		{
		}

		[Token(Token = "0x6002CFF")]
		[Address(RVA = "0x12613B8", Offset = "0x12613B8", VA = "0x12613B8")]
		internal void <.ctor>b__43_0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text Time_Text;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button Game_Btn;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text Game_Btn_Text;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Button Video_Btn;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text Video_Btn_Text;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GridLayoutGroup Role_Item_Grid;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject RoleItemPrefab;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Button StartQRCode_Btn;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Text AvailablePlayer_Text;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private BaseUI QRCodeView;

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	public ServerUIMessageView MessageView;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Text Version_Text;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action<bool> GameStatusEvent;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool GameVideoStatus;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<PlayerData, ServerUIViewRoleCell> roleToUIItemDic;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<int, string> timerStrDic;

	[Token(Token = "0x1700019C")]
	private bool GameStatus
	{
		[Token(Token = "0x6001394")]
		[Address(RVA = "0x125FBE0", Offset = "0x125FBE0", VA = "0x125FBE0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700019D")]
	public double GameTime
	{
		[Token(Token = "0x6001395")]
		[Address(RVA = "0x125FCA8", Offset = "0x125FCA8", VA = "0x125FCA8")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x6001396")]
	[Address(RVA = "0x125FD24", Offset = "0x125FD24", VA = "0x125FD24", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6001397")]
	[Address(RVA = "0x125FE70", Offset = "0x125FE70", VA = "0x125FE70", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001398")]
	[Address(RVA = "0x125FFB0", Offset = "0x125FFB0", VA = "0x125FFB0")]
	private void LockUI()
	{
	}

	[Token(Token = "0x6001399")]
	[Address(RVA = "0x126012C", Offset = "0x126012C", VA = "0x126012C")]
	private void UnLockUI()
	{
	}

	[Token(Token = "0x600139A")]
	[Address(RVA = "0x12602A8", Offset = "0x12602A8", VA = "0x12602A8", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x600139B")]
	[Address(RVA = "0x12602C4", Offset = "0x12602C4", VA = "0x12602C4", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x600139C")]
	[Address(RVA = "0x1260520", Offset = "0x1260520", VA = "0x1260520", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x600139D")]
	[Address(RVA = "0x1260568", Offset = "0x1260568", VA = "0x1260568")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600139E")]
	[Address(RVA = "0x125FF40", Offset = "0x125FF40", VA = "0x125FF40")]
	public void Refresh()
	{
	}

	[Token(Token = "0x600139F")]
	[Address(RVA = "0x126068C", Offset = "0x126068C", VA = "0x126068C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF07AC", Offset = "0xEF07AC")]
	private IEnumerator DoRefresh()
	{
		return null;
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0x1260734", Offset = "0x1260734", VA = "0x1260734")]
	private void DoRefresh1()
	{
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0x1260A1C", Offset = "0x1260A1C", VA = "0x1260A1C")]
	private void ChangePlatfromVerifyView()
	{
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x1260ADC", Offset = "0x1260ADC", VA = "0x1260ADC")]
	private void ChangeAvailablePlayerText()
	{
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x1260768", Offset = "0x1260768", VA = "0x1260768")]
	private void ChangeVideoBtnText()
	{
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x12607E4", Offset = "0x12607E4", VA = "0x12607E4")]
	private void ChangeGameBtnText()
	{
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0x1260864", Offset = "0x1260864", VA = "0x1260864")]
	private void ChangeRoleItems()
	{
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0x1260BA4", Offset = "0x1260BA4", VA = "0x1260BA4")]
	public void AddAndChangeRoleItem(PlayerData data)
	{
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0x1260AE0", Offset = "0x1260AE0", VA = "0x1260AE0")]
	public void RemoveRoleItem(PlayerData data)
	{
	}

	[Token(Token = "0x60013A8")]
	[Address(RVA = "0x126056C", Offset = "0x126056C", VA = "0x126056C")]
	public void UpdateGameTimer()
	{
	}

	[Token(Token = "0x60013A9")]
	[Address(RVA = "0x1260DCC", Offset = "0x1260DCC", VA = "0x1260DCC")]
	private string GetTimeStr(int num)
	{
		return null;
	}

	[Token(Token = "0x60013AA")]
	[Address(RVA = "0x1260E94", Offset = "0x1260E94", VA = "0x1260E94")]
	public void OnStartGame()
	{
	}

	[Token(Token = "0x60013AB")]
	[Address(RVA = "0x1260F2C", Offset = "0x1260F2C", VA = "0x1260F2C")]
	public void OnStopGame()
	{
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0x1260FC4", Offset = "0x1260FC4", VA = "0x1260FC4")]
	public ServerUIView()
	{
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0x126112C", Offset = "0x126112C", VA = "0x126112C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0810", Offset = "0xEF0810")]
	private void <OnInit>b__20_0()
	{
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0x12611E4", Offset = "0x12611E4", VA = "0x12611E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0820", Offset = "0xEF0820")]
	private void <OnInit>b__20_3()
	{
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0x1261204", Offset = "0x1261204", VA = "0x1261204")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0830", Offset = "0xEF0830")]
	private void <OnInit>b__20_1()
	{
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0x1261234", Offset = "0x1261234", VA = "0x1261234")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0840", Offset = "0xEF0840")]
	private void <OnInit>b__20_2()
	{
	}
}
[Token(Token = "0x200028D")]
public class ServerUIViewRoleCell : BaseUI
{
	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerData playerData;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image enableStatus_Image;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EventTrigger enableStatus_Trigger;

	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text playerInfo_ip_Text;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text playerInfo_roleType_Image;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EventTrigger playerInfo_roleType_Trigger;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text playerInfo_weaponType_Image;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EventTrigger playerInfo_weaponType_Trigger;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text playerInfo_groupType_Image;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public EventTrigger playerInfo_groupType_Trigger;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private e_Player_Style player_stype;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private e_weapon_group weapon_stype;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private e_group_type group_stype;

	[Token(Token = "0x60013B1")]
	[Address(RVA = "0x12614E4", Offset = "0x12614E4", VA = "0x12614E4", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60013B2")]
	[Address(RVA = "0x12615D8", Offset = "0x12615D8", VA = "0x12615D8", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x60013B3")]
	[Address(RVA = "0x1261600", Offset = "0x1261600", VA = "0x1261600")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60013B4")]
	[Address(RVA = "0x126179C", Offset = "0x126179C", VA = "0x126179C")]
	private void ChangeEnableStatus()
	{
	}

	[Token(Token = "0x60013B5")]
	[Address(RVA = "0x126164C", Offset = "0x126164C", VA = "0x126164C")]
	private void SwitchEnableStatus()
	{
	}

	[Token(Token = "0x60013B6")]
	[Address(RVA = "0x12616A0", Offset = "0x12616A0", VA = "0x12616A0")]
	public void ChangePlayerInfo()
	{
	}

	[Token(Token = "0x60013B7")]
	[Address(RVA = "0x1261A44", Offset = "0x1261A44", VA = "0x1261A44")]
	public void ChangePlayerType(e_Player_Style curType)
	{
	}

	[Token(Token = "0x60013B8")]
	[Address(RVA = "0x1261838", Offset = "0x1261838", VA = "0x1261838")]
	public void SwitchPlayerImage(e_Player_Style curType)
	{
	}

	[Token(Token = "0x60013B9")]
	[Address(RVA = "0x1261B94", Offset = "0x1261B94", VA = "0x1261B94")]
	public void ChangeWeaponType(e_weapon_group curType)
	{
	}

	[Token(Token = "0x60013BA")]
	[Address(RVA = "0x12618E4", Offset = "0x12618E4", VA = "0x12618E4")]
	public void SwitchWeaponImage(e_weapon_group curType)
	{
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0x1261CE4", Offset = "0x1261CE4", VA = "0x1261CE4")]
	public void ChangeGroupType(e_group_type curType)
	{
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0x1261990", Offset = "0x1261990", VA = "0x1261990")]
	public void SwitchGroupImage(e_group_type curType)
	{
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0x1261D9C", Offset = "0x1261D9C", VA = "0x1261D9C")]
	public void OnEnableBtnClick()
	{
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0x1261DA0", Offset = "0x1261DA0", VA = "0x1261DA0")]
	public void OnPlayerBtnClick()
	{
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0x1261DA8", Offset = "0x1261DA8", VA = "0x1261DA8")]
	public void OnWeaponBtnClick()
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0x1261DB0", Offset = "0x1261DB0", VA = "0x1261DB0")]
	public void OnGroupBtnClick()
	{
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x12600C0", Offset = "0x12600C0", VA = "0x12600C0")]
	public void LockUI()
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x126023C", Offset = "0x126023C", VA = "0x126023C")]
	public void UnLockUI()
	{
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x1261DB8", Offset = "0x1261DB8", VA = "0x1261DB8")]
	public ServerUIViewRoleCell()
	{
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0x1261DC0", Offset = "0x1261DC0", VA = "0x1261DC0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0850", Offset = "0xEF0850")]
	private void <OnInit>b__13_0(BaseEventData data)
	{
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0x1261E60", Offset = "0x1261E60", VA = "0x1261E60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0860", Offset = "0xEF0860")]
	private void <OnInit>b__13_1()
	{
	}
}
[Token(Token = "0x200028E")]
public class StatiscalUI : BaseUI
{
	[Token(Token = "0x20005DB")]
	private struct ScoreRange
	{
		[Token(Token = "0x400219B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int min;

		[Token(Token = "0x400219C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int max;
	}

	[Token(Token = "0x20005DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4F90", Offset = "0xEE4F90")]
	private sealed class <UpdateView>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400219D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400219E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400219F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StatiscalUI <>4__this;

		[Token(Token = "0x40021A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaitForEndOfFrame <wait>5__2;

		[Token(Token = "0x17000468")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D03")]
			[Address(RVA = "0x12C8924", Offset = "0x12C8924", VA = "0x12C8924", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000469")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D05")]
			[Address(RVA = "0x12C898C", Offset = "0x12C898C", VA = "0x12C898C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D00")]
		[Address(RVA = "0x12C7354", Offset = "0x12C7354", VA = "0x12C7354")]
		[DebuggerHidden]
		public <UpdateView>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002D01")]
		[Address(RVA = "0x12C790C", Offset = "0x12C790C", VA = "0x12C790C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D02")]
		[Address(RVA = "0x12C7910", Offset = "0x12C7910", VA = "0x12C7910", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D04")]
		[Address(RVA = "0x12C892C", Offset = "0x12C892C", VA = "0x12C892C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] itemCells;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject infoRoot;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject imageRoot;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RawImage rawImage;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Sprite[] sprites;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color selfNameColor;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color selfInfoColor;

	[Token(Token = "0x4001142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color otherNameColor;

	[Token(Token = "0x4001143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color otherInfoColor;

	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture2D winTexture;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Texture2D failTexture;

	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int winTextId;

	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int failTextId;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Text stateText;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Texture2D icon_d;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float speed;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float holdTime;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float displayDis;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public AudioEvent audioEvent_win;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public AudioEvent audioEvent_lost;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public StateInfoData bgmState;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioEvent audioEvent;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Coroutine coroutine;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private WwiseDefine sObj;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private WwiseDefine sObj2;

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0x12C6C54", Offset = "0x12C6C54", VA = "0x12C6C54", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60013C7")]
	[Address(RVA = "0x12C6C84", Offset = "0x12C6C84", VA = "0x12C6C84", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x60013C8")]
	[Address(RVA = "0x12C707C", Offset = "0x12C707C", VA = "0x12C707C", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x60013C9")]
	[Address(RVA = "0x12C7014", Offset = "0x12C7014", VA = "0x12C7014")]
	private void OnUpdateView()
	{
	}

	[Token(Token = "0x60013CA")]
	[Address(RVA = "0x12C6DA0", Offset = "0x12C6DA0", VA = "0x12C6DA0")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x60013CB")]
	[Address(RVA = "0x12C72D8", Offset = "0x12C72D8", VA = "0x12C72D8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF0870", Offset = "0xEF0870")]
	private IEnumerator UpdateView()
	{
		return null;
	}

	[Token(Token = "0x60013CC")]
	[Address(RVA = "0x12C7380", Offset = "0x12C7380", VA = "0x12C7380")]
	private void UpdateItem(Transform item, bool isSelf, StatisticalManager.StatisticalResultData data, PlayerData playerData)
	{
	}

	[Token(Token = "0x60013CD")]
	[Address(RVA = "0x12C78F0", Offset = "0x12C78F0", VA = "0x12C78F0")]
	public StatiscalUI()
	{
	}
}
[Token(Token = "0x200028F")]
public class StatisticalUI_PlayerInfo_View : BaseUI
{
	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Text nameText;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private TextMeshProUGUI InitLv;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TextMeshProUGUI CurLv;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI KillTotal;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI HeadKill;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshProUGUI Death;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshProUGUI Score;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private RawImage icon;

	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Image winIcon;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Image failIcon;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Image winPromote;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Image failPromote;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Color defaultColor;

	[Token(Token = "0x60013CE")]
	[Address(RVA = "0x12CB370", Offset = "0x12CB370", VA = "0x12CB370")]
	public void RefreshUI(bool isCurPlayer, bool isWin, string name, int initLv, int curLv, int killTotal, int headKill, int death, float score, Texture iconTexture, Color winColor, Color failColor)
	{
	}

	[Token(Token = "0x60013CF")]
	[Address(RVA = "0x12CBE28", Offset = "0x12CBE28", VA = "0x12CBE28")]
	public StatisticalUI_PlayerInfo_View()
	{
	}
}
[Token(Token = "0x2000290")]
public class TotalStatisticalUI : BaseUI
{
	[Token(Token = "0x20005DD")]
	private struct ScoreRange
	{
		[Token(Token = "0x40021A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int min;

		[Token(Token = "0x40021A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int max;
	}

	[Token(Token = "0x20005DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4FA0", Offset = "0xEE4FA0")]
	private sealed class <InfoView0>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TotalStatisticalUI <>4__this;

		[Token(Token = "0x1700046A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D09")]
			[Address(RVA = "0x11DBD70", Offset = "0x11DBD70", VA = "0x11DBD70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D0B")]
			[Address(RVA = "0x11DBDD8", Offset = "0x11DBDD8", VA = "0x11DBDD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D06")]
		[Address(RVA = "0x11DBB04", Offset = "0x11DBB04", VA = "0x11DBB04")]
		[DebuggerHidden]
		public <InfoView0>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6002D07")]
		[Address(RVA = "0x11DBB40", Offset = "0x11DBB40", VA = "0x11DBB40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D08")]
		[Address(RVA = "0x11DBB44", Offset = "0x11DBB44", VA = "0x11DBB44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D0A")]
		[Address(RVA = "0x11DBD78", Offset = "0x11DBD78", VA = "0x11DBD78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine coroutine;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI Progress;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI Time;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI ScoreText;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI Result;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color winColor;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color failBColor;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public StatisticalUI_PlayerInfo_View[] playerCells;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float posOffset;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D icon_d;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject view1;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject view2;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshProUGUI info;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float infoTime;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public AudioEvent winEvent;

	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioEvent failureEvent;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public AudioEvent bgmEvent;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isWin;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private WwiseDefine bgm;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private WwiseDefine audio;

	[Token(Token = "0x60013D0")]
	[Address(RVA = "0x11DAC04", Offset = "0x11DAC04", VA = "0x11DAC04", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60013D1")]
	[Address(RVA = "0x11DAC08", Offset = "0x11DAC08", VA = "0x11DAC08", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x60013D2")]
	[Address(RVA = "0x11DB74C", Offset = "0x11DB74C", VA = "0x11DB74C", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x60013D3")]
	[Address(RVA = "0x11DB95C", Offset = "0x11DB95C", VA = "0x11DB95C")]
	private void OnUpdateView()
	{
	}

	[Token(Token = "0x60013D4")]
	[Address(RVA = "0x11DB6D0", Offset = "0x11DB6D0", VA = "0x11DB6D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF08D4", Offset = "0xEF08D4")]
	private IEnumerator InfoView0()
	{
		return null;
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0x11DAD74", Offset = "0x11DAD74", VA = "0x11DAD74")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0x11DB06C", Offset = "0x11DB06C", VA = "0x11DB06C")]
	private void UpdateView()
	{
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0x11DBB30", Offset = "0x11DBB30", VA = "0x11DBB30")]
	public TotalStatisticalUI()
	{
	}
}
[Token(Token = "0x2000291")]
public class UnitNormalNameHUD : BaseHUDView
{
	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text nameText;

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0x130AFE8", Offset = "0x130AFE8", VA = "0x130AFE8")]
	public void SetNameText(string name)
	{
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0x130B098", Offset = "0x130B098", VA = "0x130B098")]
	public void SetNameColor(Color cl)
	{
	}

	[Token(Token = "0x60013DA")]
	[Address(RVA = "0x130B16C", Offset = "0x130B16C", VA = "0x130B16C")]
	public void ShowNameTextActive(bool isActive)
	{
	}

	[Token(Token = "0x60013DB")]
	[Address(RVA = "0x130B220", Offset = "0x130B220", VA = "0x130B220")]
	public void ShowNameTextFontSize(int size)
	{
	}

	[Token(Token = "0x60013DC")]
	[Address(RVA = "0x130B2C8", Offset = "0x130B2C8", VA = "0x130B2C8", Slot = "6")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x60013DD")]
	[Address(RVA = "0x130B2CC", Offset = "0x130B2CC", VA = "0x130B2CC")]
	public UnitNormalNameHUD()
	{
	}
}
[Token(Token = "0x2000292")]
public class VRDeviceSelectorCell : BaseUI
{
	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerData playerData;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image ConnectImg;

	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text playerInfo_ip_Text;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text playerInfo_roleType_Image;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EventTrigger playerInfo_roleType_Trigger;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_ControllerSelector.ControllerData data;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SteamVR_ControllerSelector selector;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int cotrollerIndex;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private string cotroller;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int deviceIndex;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string device;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isConnect;

	[Token(Token = "0x60013DE")]
	[Address(RVA = "0x1314CE0", Offset = "0x1314CE0", VA = "0x1314CE0", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60013DF")]
	[Address(RVA = "0x1314D58", Offset = "0x1314D58", VA = "0x1314D58", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x60013E0")]
	[Address(RVA = "0x13151C0", Offset = "0x13151C0", VA = "0x13151C0")]
	public void SetData(int index, SteamVR_ControllerSelector sellect, SteamVR_ControllerSelector.ControllerData data)
	{
	}

	[Token(Token = "0x60013E1")]
	[Address(RVA = "0x1314D80", Offset = "0x1314D80", VA = "0x1314D80")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60013E2")]
	[Address(RVA = "0x1315468", Offset = "0x1315468", VA = "0x1315468")]
	public void ChangePlayerType(int curIndex)
	{
	}

	[Token(Token = "0x60013E3")]
	[Address(RVA = "0x13152B4", Offset = "0x13152B4", VA = "0x13152B4")]
	private Dictionary<string, SteamVR_ControllerSelector.DeviceCodeInfo> GetRealCtrDic()
	{
		return null;
	}

	[Token(Token = "0x60013E4")]
	[Address(RVA = "0x1315730", Offset = "0x1315730", VA = "0x1315730")]
	public void OnPlayerBtnClick()
	{
	}

	[Token(Token = "0x60013E5")]
	[Address(RVA = "0x13157AC", Offset = "0x13157AC", VA = "0x13157AC")]
	public void LockUI()
	{
	}

	[Token(Token = "0x60013E6")]
	[Address(RVA = "0x13157CC", Offset = "0x13157CC", VA = "0x13157CC")]
	public void UnLockUI()
	{
	}

	[Token(Token = "0x60013E7")]
	[Address(RVA = "0x13157EC", Offset = "0x13157EC", VA = "0x13157EC")]
	public VRDeviceSelectorCell()
	{
	}
}
[Token(Token = "0x2000293")]
public class VRDeviceSelectorUIView : BaseUI
{
	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button Game_Btn;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button Save_Btn;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GridLayoutGroup Role_Item_Grid;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<VRDeviceSelectorCell> deviceUIItemDic;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private SteamVR_ControllerSelector m_controllerSelector;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float delayTime;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float updateDelayTime;

	[Token(Token = "0x1700019E")]
	private SteamVR_ControllerSelector Selector
	{
		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x1315870", Offset = "0x1315870", VA = "0x1315870")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60013E9")]
	[Address(RVA = "0x131592C", Offset = "0x131592C", VA = "0x131592C", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x60013EA")]
	[Address(RVA = "0x1315A10", Offset = "0x1315A10", VA = "0x1315A10")]
	private void LockUI()
	{
	}

	[Token(Token = "0x60013EB")]
	[Address(RVA = "0x1315A14", Offset = "0x1315A14", VA = "0x1315A14")]
	private void UnLockUI()
	{
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0x1315A18", Offset = "0x1315A18", VA = "0x1315A18", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0x1315A34", Offset = "0x1315A34", VA = "0x1315A34", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0x1315A6C", Offset = "0x1315A6C", VA = "0x1315A6C", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0x1315AB0", Offset = "0x1315AB0", VA = "0x1315AB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0x1315AAC", Offset = "0x1315AAC", VA = "0x1315AAC")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0x1315BB0", Offset = "0x1315BB0", VA = "0x1315BB0")]
	private void ChangeRoleItems()
	{
	}

	[Token(Token = "0x60013F2")]
	[Address(RVA = "0x1315D18", Offset = "0x1315D18", VA = "0x1315D18")]
	public void DoSaveConfig()
	{
	}

	[Token(Token = "0x60013F3")]
	[Address(RVA = "0x1315DBC", Offset = "0x1315DBC", VA = "0x1315DBC")]
	public void OnStartGame()
	{
	}

	[Token(Token = "0x60013F4")]
	[Address(RVA = "0x1315E4C", Offset = "0x1315E4C", VA = "0x1315E4C")]
	public void OnStopGame()
	{
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0x1315EDC", Offset = "0x1315EDC", VA = "0x1315EDC")]
	public VRDeviceSelectorUIView()
	{
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0x1315F60", Offset = "0x1315F60", VA = "0x1315F60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0938", Offset = "0xEF0938")]
	private void <OnInit>b__10_0()
	{
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0x1316008", Offset = "0x1316008", VA = "0x1316008")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0948", Offset = "0xEF0948")]
	private void <OnInit>b__10_2()
	{
	}

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0x1316028", Offset = "0x1316028", VA = "0x1316028")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0958", Offset = "0xEF0958")]
	private void <OnInit>b__10_1()
	{
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0x13160D0", Offset = "0x13160D0", VA = "0x13160D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0968", Offset = "0xEF0968")]
	private void <OnInit>b__10_3()
	{
	}
}
[Token(Token = "0x2000294")]
public class WeaponInfoUI : BaseUI
{
	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject root;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text hpTitle;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text ammoTitle;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text hpText;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text ammoText;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text ammoText2;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text lvText;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color hpColor1;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color hpColor2;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color ammoColor1;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color ammoColor2;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE842C", Offset = "0xEE842C")]
	public float hpThreshold;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE8444", Offset = "0xEE8444")]
	public float ammoThreshold;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private WUnit owner;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Weapon weapon;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image lvProgress;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image hpProgress;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Image ammoProgress;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int maxValue;

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0x1D6ED24", Offset = "0x1D6ED24", VA = "0x1D6ED24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60013FB")]
	[Address(RVA = "0x1D6ED38", Offset = "0x1D6ED38", VA = "0x1D6ED38", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x60013FC")]
	[Address(RVA = "0x1D6EE58", Offset = "0x1D6EE58", VA = "0x1D6EE58", Slot = "6")]
	protected override void OnHide(object[] param)
	{
	}

	[Token(Token = "0x60013FD")]
	[Address(RVA = "0x1D6EE98", Offset = "0x1D6EE98", VA = "0x1D6EE98")]
	private void Update()
	{
	}

	[Token(Token = "0x60013FE")]
	[Address(RVA = "0x1D6F36C", Offset = "0x1D6F36C", VA = "0x1D6F36C")]
	public WeaponInfoUI()
	{
	}
}
[Token(Token = "0x2000295")]
public class AIAgent : WAgent
{
	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BehaviourTreeOwner behaviourTree;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Blackboard blackboard;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NavMeshAgent navAgent;

	[Token(Token = "0x60013FF")]
	[Address(RVA = "0x17F349C", Offset = "0x17F349C", VA = "0x17F349C", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001400")]
	[Address(RVA = "0x17F34A4", Offset = "0x17F34A4", VA = "0x17F34A4")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x6001401")]
	[Address(RVA = "0x17F36F0", Offset = "0x17F36F0", VA = "0x17F36F0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0x17F34A8", Offset = "0x17F34A8", VA = "0x17F34A8")]
	private void InitBehaviourTree()
	{
	}

	[Token(Token = "0x6001403")]
	[Address(RVA = "0x17F36F8", Offset = "0x17F36F8", VA = "0x17F36F8")]
	public void SetAIEnable(bool isEnable)
	{
	}

	[Token(Token = "0x6001404")]
	[Address(RVA = "0x17F381C", Offset = "0x17F381C", VA = "0x17F381C")]
	public AIAgent()
	{
	}
}
[Token(Token = "0x2000296")]
public class AnimationAgent : WAgent
{
	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AnimationDefine define;

	[Token(Token = "0x6001405")]
	[Address(RVA = "0x15567C8", Offset = "0x15567C8", VA = "0x15567C8")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x6001406")]
	[Address(RVA = "0x1556A88", Offset = "0x1556A88", VA = "0x1556A88", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001407")]
	[Address(RVA = "0x1556A90", Offset = "0x1556A90", VA = "0x1556A90")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0x1556BB0", Offset = "0x1556BB0", VA = "0x1556BB0")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0x1556BB4", Offset = "0x1556BB4", VA = "0x1556BB4")]
	public AnimationAgent()
	{
	}
}
[Token(Token = "0x2000297")]
public class BodyPartAgent : WAgent
{
	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Component> hurtDefines;

	[Token(Token = "0x600140A")]
	[Address(RVA = "0x13CF140", Offset = "0x13CF140", VA = "0x13CF140", Slot = "4")]
	public void Init(WUnit _owner)
	{
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0x13CF148", Offset = "0x13CF148", VA = "0x13CF148")]
	public void Destroy()
	{
	}

	[Token(Token = "0x600140C")]
	[Address(RVA = "0x13CF14C", Offset = "0x13CF14C", VA = "0x13CF14C")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x600140D")]
	[Address(RVA = "0x13CF2E8", Offset = "0x13CF2E8", VA = "0x13CF2E8")]
	public HurtDefine GetFirstDefine()
	{
		return null;
	}

	[Token(Token = "0x600140E")]
	[Address(RVA = "0x13CF384", Offset = "0x13CF384", VA = "0x13CF384")]
	public void SetAllBodyPartStatus(bool status)
	{
	}

	[Token(Token = "0x600140F")]
	[Address(RVA = "0x13CF4D0", Offset = "0x13CF4D0", VA = "0x13CF4D0")]
	public BodyPartAgent()
	{
	}
}
[Token(Token = "0x2000298")]
public class BuffAgent : WAgent
{
	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<int, IBuff> buffDic;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MultiMap<short, int, IBuff> buffTypeDic;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<int> delList;

	[Token(Token = "0x6001410")]
	[Address(RVA = "0x13DB91C", Offset = "0x13DB91C", VA = "0x13DB91C", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001411")]
	[Address(RVA = "0x13DB924", Offset = "0x13DB924", VA = "0x13DB924")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001412")]
	[Address(RVA = "0x13DBB68", Offset = "0x13DBB68", VA = "0x13DBB68")]
	private void ClearDel()
	{
	}

	[Token(Token = "0x6001413")]
	[Address(RVA = "0x13DBE24", Offset = "0x13DBE24", VA = "0x13DBE24")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001414")]
	[Address(RVA = "0x13DBFC0", Offset = "0x13DBFC0", VA = "0x13DBFC0")]
	public void AddBuff(IBuff buffBase)
	{
	}

	[Token(Token = "0x6001415")]
	[Address(RVA = "0x13DC4DC", Offset = "0x13DC4DC", VA = "0x13DC4DC")]
	public void UpdateBuff(int id, string dataJson)
	{
	}

	[Token(Token = "0x6001416")]
	[Address(RVA = "0x13DBC84", Offset = "0x13DBC84", VA = "0x13DBC84")]
	public void RemoveBuff(int id)
	{
	}

	[Token(Token = "0x6001417")]
	[Address(RVA = "0x13DC5D8", Offset = "0x13DC5D8", VA = "0x13DC5D8")]
	public BuffAgent()
	{
	}
}
[Token(Token = "0x2000299")]
public class DataAgent : WAgent
{
	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_Player_Style playerStyle;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnitAttribute attributeTable;

	[Token(Token = "0x1700019F")]
	public int CurHP
	{
		[Token(Token = "0x6001418")]
		[Address(RVA = "0x120A77C", Offset = "0x120A77C", VA = "0x120A77C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001419")]
		[Address(RVA = "0x121F5A0", Offset = "0x121F5A0", VA = "0x121F5A0")]
		set
		{
		}
	}

	[Token(Token = "0x170001A0")]
	public int MaxHP
	{
		[Token(Token = "0x600141A")]
		[Address(RVA = "0x120A7A8", Offset = "0x120A7A8", VA = "0x120A7A8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001A1")]
	public e_weapon_group Weapon_Group
	{
		[Token(Token = "0x600141B")]
		[Address(RVA = "0x121F660", Offset = "0x121F660", VA = "0x121F660")]
		get
		{
			return default(e_weapon_group);
		}
	}

	[Token(Token = "0x170001A2")]
	public int Atk
	{
		[Token(Token = "0x600141C")]
		[Address(RVA = "0x121F678", Offset = "0x121F678", VA = "0x121F678")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001A3")]
	public int Lv
	{
		[Token(Token = "0x600141D")]
		[Address(RVA = "0x121516C", Offset = "0x121516C", VA = "0x121516C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001A4")]
	public int WeaponLv
	{
		[Token(Token = "0x600141E")]
		[Address(RVA = "0x121F6F0", Offset = "0x121F6F0", VA = "0x121F6F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001A5")]
	public string LvStr
	{
		[Token(Token = "0x600141F")]
		[Address(RVA = "0x121F71C", Offset = "0x121F71C", VA = "0x121F71C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A6")]
	public bool IsMaxLv
	{
		[Token(Token = "0x6001420")]
		[Address(RVA = "0x121F7C8", Offset = "0x121F7C8", VA = "0x121F7C8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001A7")]
	public int MinLv
	{
		[Token(Token = "0x6001421")]
		[Address(RVA = "0x121F8E0", Offset = "0x121F8E0", VA = "0x121F8E0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001A8")]
	public int MaxLv
	{
		[Token(Token = "0x6001422")]
		[Address(RVA = "0x121F7FC", Offset = "0x121F7FC", VA = "0x121F7FC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001A9")]
	public int Exp
	{
		[Token(Token = "0x6001424")]
		[Address(RVA = "0x121FE60", Offset = "0x121FE60", VA = "0x121FE60")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001423")]
		[Address(RVA = "0x121FDEC", Offset = "0x121FDEC", VA = "0x121FDEC")]
		set
		{
		}
	}

	[Token(Token = "0x170001AA")]
	public string ExpStr
	{
		[Token(Token = "0x6001425")]
		[Address(RVA = "0x121FE8C", Offset = "0x121FE8C", VA = "0x121FE8C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AB")]
	public int Exp_Current
	{
		[Token(Token = "0x6001426")]
		[Address(RVA = "0x121FF5C", Offset = "0x121FF5C", VA = "0x121FF5C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AC")]
	public int Exp_Next
	{
		[Token(Token = "0x6001427")]
		[Address(RVA = "0x1220304", Offset = "0x1220304", VA = "0x1220304")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AD")]
	public string Exp_NextStr
	{
		[Token(Token = "0x6001428")]
		[Address(RVA = "0x12203E4", Offset = "0x12203E4", VA = "0x12203E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001AE")]
	public int ExpDrop
	{
		[Token(Token = "0x6001429")]
		[Address(RVA = "0x1220510", Offset = "0x1220510", VA = "0x1220510")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AF")]
	public int WeaponMaxBulletCount
	{
		[Token(Token = "0x600142A")]
		[Address(RVA = "0x122053C", Offset = "0x122053C", VA = "0x122053C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001B0")]
	public int WeaponMaxMagazineCount
	{
		[Token(Token = "0x600142B")]
		[Address(RVA = "0x1220568", Offset = "0x1220568", VA = "0x1220568")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001B1")]
	public int WeaponAtk
	{
		[Token(Token = "0x600142C")]
		[Address(RVA = "0x1220594", Offset = "0x1220594", VA = "0x1220594")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001B2")]
	public e_type_monster monsterType
	{
		[Token(Token = "0x600142D")]
		[Address(RVA = "0x121F9C4", Offset = "0x121F9C4", VA = "0x121F9C4")]
		get
		{
			return default(e_type_monster);
		}
	}

	[Token(Token = "0x170001B3")]
	public e_type_npc npcType
	{
		[Token(Token = "0x600142E")]
		[Address(RVA = "0x12205C0", Offset = "0x12205C0", VA = "0x12205C0")]
		get
		{
			return default(e_type_npc);
		}
	}

	[Token(Token = "0x170001B4")]
	public string name
	{
		[Token(Token = "0x600142F")]
		[Address(RVA = "0x12205D8", Offset = "0x12205D8", VA = "0x12205D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B5")]
	public int tableId
	{
		[Token(Token = "0x6001430")]
		[Address(RVA = "0x122063C", Offset = "0x122063C", VA = "0x122063C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001B6")]
	public int modelId
	{
		[Token(Token = "0x6001431")]
		[Address(RVA = "0x1220654", Offset = "0x1220654", VA = "0x1220654")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001B7")]
	public int score
	{
		[Token(Token = "0x6001432")]
		[Address(RVA = "0x122066C", Offset = "0x122066C", VA = "0x122066C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001B8")]
	public int hpRecoverInterval
	{
		[Token(Token = "0x6001433")]
		[Address(RVA = "0x1220684", Offset = "0x1220684", VA = "0x1220684")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001B9")]
	public int hpRecoverValue
	{
		[Token(Token = "0x6001434")]
		[Address(RVA = "0x122069C", Offset = "0x122069C", VA = "0x122069C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001BA")]
	public List<int> dropList
	{
		[Token(Token = "0x6001435")]
		[Address(RVA = "0x12206B4", Offset = "0x12206B4", VA = "0x12206B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001BB")]
	public int dropRatio
	{
		[Token(Token = "0x6001436")]
		[Address(RVA = "0x12206CC", Offset = "0x12206CC", VA = "0x12206CC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0x12206E4", Offset = "0x12206E4", VA = "0x12206E4", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0x12206EC", Offset = "0x12206EC", VA = "0x12206EC")]
	public void SetAttributeTable(UnitAttribute _attributeTable)
	{
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0x12206F4", Offset = "0x12206F4", VA = "0x12206F4")]
	public void Update(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0x12206F8", Offset = "0x12206F8", VA = "0x12206F8")]
	public void FixedUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x600143B")]
	[Address(RVA = "0x12206FC", Offset = "0x12206FC", VA = "0x12206FC")]
	public void Revive()
	{
	}

	[Token(Token = "0x600143C")]
	[Address(RVA = "0x122073C", Offset = "0x122073C", VA = "0x122073C")]
	public void Restore(int value)
	{
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0x122079C", Offset = "0x122079C", VA = "0x122079C")]
	public DataAgent()
	{
	}
}
[Token(Token = "0x200029A")]
public class HPRestoreAgent : WAgent
{
	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isRestore;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int restoreValue;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int restoreTime;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int restoreTimer;

	[Token(Token = "0x600143E")]
	[Address(RVA = "0x1273FDC", Offset = "0x1273FDC", VA = "0x1273FDC", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0x12740A8", Offset = "0x12740A8", VA = "0x12740A8")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001440")]
	[Address(RVA = "0x1274178", Offset = "0x1274178", VA = "0x1274178")]
	public void SetRestoreInfo(int _restoreTime, int _restoreValue)
	{
	}

	[Token(Token = "0x6001441")]
	[Address(RVA = "0x1274180", Offset = "0x1274180", VA = "0x1274180")]
	public void Activa()
	{
	}

	[Token(Token = "0x6001442")]
	[Address(RVA = "0x1274190", Offset = "0x1274190", VA = "0x1274190")]
	public void Deactiva()
	{
	}

	[Token(Token = "0x6001443")]
	[Address(RVA = "0x1274198", Offset = "0x1274198", VA = "0x1274198")]
	public HPRestoreAgent()
	{
	}
}
[Token(Token = "0x200029B")]
public class IKAgent : WAgent
{
	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IKConfigMono ikConfigMono;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Weapon weapon_l;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Weapon weapon_r;

	[Token(Token = "0x6001444")]
	[Address(RVA = "0x12815D0", Offset = "0x12815D0", VA = "0x12815D0")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x6001445")]
	[Address(RVA = "0x128164C", Offset = "0x128164C", VA = "0x128164C", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001446")]
	[Address(RVA = "0x1281654", Offset = "0x1281654", VA = "0x1281654")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001447")]
	[Address(RVA = "0x1281658", Offset = "0x1281658", VA = "0x1281658")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0x1281698", Offset = "0x1281698", VA = "0x1281698")]
	public void SetAimActive(bool isActive)
	{
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0x1281784", Offset = "0x1281784", VA = "0x1281784")]
	public void UpdateHeadIK(Vector3 vrCameraPos)
	{
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0x1281914", Offset = "0x1281914", VA = "0x1281914")]
	public void UpdateWeaponIK()
	{
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0x128169C", Offset = "0x128169C", VA = "0x128169C")]
	public void SetIKEnable(bool flag)
	{
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0x1281EE4", Offset = "0x1281EE4", VA = "0x1281EE4")]
	public void BindHandIKToWeapon()
	{
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0x1282068", Offset = "0x1282068", VA = "0x1282068")]
	public IKAgent()
	{
	}
}
[Token(Token = "0x200029C")]
public class InterruptAgent : WAgent
{
	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isCanInterrupt;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InterruptData[] interruptDatas;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InterruptDefine mInterruptDefine;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<List<HurtDefine>, int> HurtDefineListTointerruptedId;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, InterruptData> interruptedIdToInterruptData;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<int, GameObject> interruptedIdSignObjectHash;

	[Token(Token = "0x170001BC")]
	public bool IsInterrupt
	{
		[Token(Token = "0x6001451")]
		[Address(RVA = "0x1471078", Offset = "0x1471078", VA = "0x1471078")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600144E")]
	[Address(RVA = "0x147063C", Offset = "0x147063C", VA = "0x147063C", Slot = "4")]
	public void Init(WUnit _owner)
	{
	}

	[Token(Token = "0x600144F")]
	[Address(RVA = "0x1470668", Offset = "0x1470668", VA = "0x1470668")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0x14709AC", Offset = "0x14709AC", VA = "0x14709AC")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x6001452")]
	[Address(RVA = "0x1471080", Offset = "0x1471080", VA = "0x1471080")]
	public bool GetCanBodyPartInterrupt(HurtDefine hurtDefine)
	{
		return default(bool);
	}

	[Token(Token = "0x6001453")]
	[Address(RVA = "0x14710E4", Offset = "0x14710E4", VA = "0x14710E4")]
	public bool GetBodyPartHasInterrupt(HurtDefine hurtDefine)
	{
		return default(bool);
	}

	[Token(Token = "0x6001454")]
	[Address(RVA = "0x1471120", Offset = "0x1471120", VA = "0x1471120")]
	public int GetInterrtptIDByHurtDefine(HurtDefine hurtDefine)
	{
		return default(int);
	}

	[Token(Token = "0x6001455")]
	[Address(RVA = "0x14710BC", Offset = "0x14710BC", VA = "0x14710BC")]
	public InterruptData GetInterrtptDataByHurtDefine(HurtDefine hurtDefine)
	{
		return null;
	}

	[Token(Token = "0x6001456")]
	[Address(RVA = "0x1471290", Offset = "0x1471290", VA = "0x1471290")]
	public InterruptData GetInterrtptDataByID(int interrtupID)
	{
		return null;
	}

	[Token(Token = "0x6001457")]
	[Address(RVA = "0x1471308", Offset = "0x1471308", VA = "0x1471308")]
	public void Damage(int _interruptedId, int atk, Vector3 point, Vector3 dir, float force)
	{
	}

	[Token(Token = "0x6001458")]
	[Address(RVA = "0x14714D0", Offset = "0x14714D0", VA = "0x14714D0")]
	public void SetInterruptStatus(int _interruptedId, e_InterruptState _statue, [Optional] Vector3 point, [Optional] Vector3 dir, float force = 0f)
	{
	}

	[Token(Token = "0x6001459")]
	[Address(RVA = "0x14714EC", Offset = "0x14714EC", VA = "0x14714EC")]
	public void SendS2CInterruptNotify(int _interruptedId, e_InterruptState _interruptedState, Vector3 point, Vector3 dir, float force)
	{
	}

	[Token(Token = "0x600145A")]
	[Address(RVA = "0x1470808", Offset = "0x1470808", VA = "0x1470808")]
	public void HandleS2CInterruptNotify(int _interruptedId, int _interruptedState, [Optional] Vector3 point, [Optional] Vector3 dir, float force = 0f)
	{
	}

	[Token(Token = "0x600145B")]
	[Address(RVA = "0x1471828", Offset = "0x1471828", VA = "0x1471828")]
	public void ToActive(int _interruptedId)
	{
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0x14716F4", Offset = "0x14716F4", VA = "0x14716F4")]
	public void ToInterrupt(int _interruptedId, Vector3 point, Vector3 dir, float force)
	{
	}

	[Token(Token = "0x600145D")]
	[Address(RVA = "0x14715D4", Offset = "0x14715D4", VA = "0x14715D4")]
	public void ToRecover(int _interruptedId)
	{
	}

	[Token(Token = "0x600145E")]
	[Address(RVA = "0x1471854", Offset = "0x1471854", VA = "0x1471854")]
	private void DestroyAllInterruptedSignEffect()
	{
	}

	[Token(Token = "0x600145F")]
	[Address(RVA = "0x14719F8", Offset = "0x14719F8", VA = "0x14719F8")]
	public InterruptAgent()
	{
	}
}
[Token(Token = "0x200029D")]
public enum e_InterruptState
{
	[Token(Token = "0x40011BE")]
	Default,
	[Token(Token = "0x40011BF")]
	Active,
	[Token(Token = "0x40011C0")]
	interrupted
}
[Serializable]
[Token(Token = "0x200029E")]
public class InterruptData
{
	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int interruptedId;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public e_InterruptState state;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int interruptHP;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<HurtDefine> hurtDefineList;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExploderConfig exploderConfig;

	[Token(Token = "0x6001460")]
	[Address(RVA = "0x1471070", Offset = "0x1471070", VA = "0x1471070")]
	public InterruptData()
	{
	}
}
[Token(Token = "0x200029F")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE259C", Offset = "0xEE259C")]
public class InterruptDefine : MonoBehaviour
{
	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fadeOutTime;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public DeactivateOptions deactivateOptions;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FadeoutOptions FadeoutOptions;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "ReorderableAttribute", RVA = "0xEE845C", Offset = "0xEE845C")]
	public List<InterruptData> defines;

	[Token(Token = "0x6001461")]
	[Address(RVA = "0x1470D9C", Offset = "0x1470D9C", VA = "0x1470D9C")]
	public void Init()
	{
	}

	[Token(Token = "0x6001462")]
	[Address(RVA = "0x147182C", Offset = "0x147182C", VA = "0x147182C")]
	public void Exploder(ExploderConfig exploderConfig, Vector3 point, Vector3 dir, float force)
	{
	}

	[Token(Token = "0x6001463")]
	[Address(RVA = "0x1471ADC", Offset = "0x1471ADC", VA = "0x1471ADC")]
	public InterruptDefine()
	{
	}
}
[Token(Token = "0x20002A0")]
public class InterruptManager : MonoBehaviour
{
	[Token(Token = "0x6001464")]
	[Address(RVA = "0x1471AF8", Offset = "0x1471AF8", VA = "0x1471AF8")]
	public static void HandleS2CMonsterInterruptStateNotify(int _unitId, int _interrtuptId, int _interrtuptState, [Optional] Vector3 point, [Optional] Vector3 dir, float force = 0f)
	{
	}

	[Token(Token = "0x6001465")]
	[Address(RVA = "0x1471C54", Offset = "0x1471C54", VA = "0x1471C54")]
	public InterruptManager()
	{
	}
}
[Token(Token = "0x20002A1")]
public class MoveAgent : WAgent
{
	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x6001466")]
	[Address(RVA = "0x12F30B0", Offset = "0x12F30B0", VA = "0x12F30B0", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0x12F30B8", Offset = "0x12F30B8", VA = "0x12F30B8")]
	public void Update(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001468")]
	[Address(RVA = "0x12F30BC", Offset = "0x12F30BC", VA = "0x12F30BC")]
	public void FixedUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0x12F30C0", Offset = "0x12F30C0", VA = "0x12F30C0")]
	public MoveAgent()
	{
	}
}
[Token(Token = "0x20002A2")]
public enum NumericType
{
	[Token(Token = "0x40011CC")]
	FieldBase = 100,
	[Token(Token = "0x40011CD")]
	Max = 100000,
	[Token(Token = "0x40011CE")]
	Lv = 1000,
	[Token(Token = "0x40011CF")]
	Hp = 1001,
	[Token(Token = "0x40011D0")]
	HpBase = 100100,
	[Token(Token = "0x40011D1")]
	MaxHp = 1002,
	[Token(Token = "0x40011D2")]
	MaxHpBase = 100200,
	[Token(Token = "0x40011D3")]
	Atk = 1003,
	[Token(Token = "0x40011D4")]
	AtkBase = 100300,
	[Token(Token = "0x40011D5")]
	Exp = 1004,
	[Token(Token = "0x40011D6")]
	ExpBase = 100400,
	[Token(Token = "0x40011D7")]
	MaxBulletCount = 1005,
	[Token(Token = "0x40011D8")]
	MaxBulletCountBase = 100500,
	[Token(Token = "0x40011D9")]
	MaxMagazineCount = 1006,
	[Token(Token = "0x40011DA")]
	MaxMagazineCountBase = 100600,
	[Token(Token = "0x40011DB")]
	ExpDrop = 1007,
	[Token(Token = "0x40011DC")]
	ExpDropBase = 100700
}
[Token(Token = "0x20002A3")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xEE2600", Offset = "0xEE2600")]
public class NumericAgent : WAgent
{
	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected WUnit owner;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected readonly Dictionary<int, int> numericDic;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Action<NumericType> OnChange;

	[Token(Token = "0x170001BD")]
	public int Item
	{
		[Token(Token = "0x6001472")]
		[Address(RVA = "0x13883FC", Offset = "0x13883FC", VA = "0x13883FC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001473")]
		[Address(RVA = "0x1388324", Offset = "0x1388324", VA = "0x1388324")]
		set
		{
		}
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0x1388084", Offset = "0x1388084", VA = "0x1388084", Slot = "5")]
	public virtual void Init(WUnit owner)
	{
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0x138808C", Offset = "0x138808C", VA = "0x138808C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0x1388090", Offset = "0x1388090", VA = "0x1388090")]
	public int GetAsInt(NumericType numericType)
	{
		return default(int);
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0x1388094", Offset = "0x1388094", VA = "0x1388094")]
	public int GetAsInt(int numericType)
	{
		return default(int);
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0x13882C0", Offset = "0x13882C0", VA = "0x13882C0")]
	public float GetAsFloat(NumericType numericType)
	{
		return default(float);
	}

	[Token(Token = "0x600146F")]
	[Address(RVA = "0x13882F0", Offset = "0x13882F0", VA = "0x13882F0")]
	public float GetAsFloat(int numericType)
	{
		return default(float);
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0x1388320", Offset = "0x1388320", VA = "0x1388320")]
	public void Set(NumericType nt, int value)
	{
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0x13883E8", Offset = "0x13883E8", VA = "0x13883E8")]
	public void Set(NumericType nt, float value)
	{
	}

	[Token(Token = "0x6001474")]
	[Address(RVA = "0x138842C", Offset = "0x138842C", VA = "0x138842C")]
	public bool CheckKey(int key)
	{
		return default(bool);
	}

	[Token(Token = "0x6001475")]
	[Address(RVA = "0x13884A4", Offset = "0x13884A4", VA = "0x13884A4")]
	private int GetByKey(NumericType key)
	{
		return default(int);
	}

	[Token(Token = "0x6001476")]
	[Address(RVA = "0x1388098", Offset = "0x1388098", VA = "0x1388098")]
	private int GetByKey(int key)
	{
		return default(int);
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0x1388400", Offset = "0x1388400", VA = "0x1388400")]
	protected void Update(NumericType numericType)
	{
	}

	[Token(Token = "0x6001478")]
	[Address(RVA = "0x13884A8", Offset = "0x13884A8", VA = "0x13884A8")]
	protected void UpdateLogic(NumericType numericType)
	{
	}

	[Token(Token = "0x6001479")]
	[Address(RVA = "0x1388694", Offset = "0x1388694", VA = "0x1388694")]
	public NumericAgent()
	{
	}
}
[Token(Token = "0x20002A4")]
public class MonsterNumericAgent : NumericAgent
{
	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isSyncHp;

	[Token(Token = "0x600147A")]
	[Address(RVA = "0x12EBD0C", Offset = "0x12EBD0C", VA = "0x12EBD0C", Slot = "5")]
	public override void Init(WUnit owner)
	{
	}

	[Token(Token = "0x600147B")]
	[Address(RVA = "0x12EBF34", Offset = "0x12EBF34", VA = "0x12EBF34")]
	public void SetData(MonsterLevelData levelData)
	{
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0x12EC060", Offset = "0x12EC060", VA = "0x12EC060")]
	public void OnServerNumericChange(NumericType numericType)
	{
	}

	[Token(Token = "0x600147D")]
	[Address(RVA = "0x12EC118", Offset = "0x12EC118", VA = "0x12EC118")]
	public MonsterNumericAgent()
	{
	}
}
[Token(Token = "0x20002A5")]
public class PlayerNumericAgent : NumericAgent
{
	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerLevelData data;

	[Token(Token = "0x600147E")]
	[Address(RVA = "0x1530FBC", Offset = "0x1530FBC", VA = "0x1530FBC", Slot = "5")]
	public override void Init(WUnit owner)
	{
	}

	[Token(Token = "0x600147F")]
	[Address(RVA = "0x15311B4", Offset = "0x15311B4", VA = "0x15311B4")]
	public void SetData(PlayerLevelData levelData, int currentExp)
	{
	}

	[Token(Token = "0x6001480")]
	[Address(RVA = "0x15312C8", Offset = "0x15312C8", VA = "0x15312C8")]
	public void UpdateData(PlayerLevelData levelData, int currentExp)
	{
	}

	[Token(Token = "0x6001481")]
	[Address(RVA = "0x1531428", Offset = "0x1531428", VA = "0x1531428")]
	public void OnServerNumericChange(NumericType numericType)
	{
	}

	[Token(Token = "0x6001482")]
	[Address(RVA = "0x1531824", Offset = "0x1531824", VA = "0x1531824")]
	public PlayerNumericAgent()
	{
	}
}
[Token(Token = "0x20002A6")]
public class WeaponNumericAgent : NumericAgent
{
	[Token(Token = "0x6001483")]
	[Address(RVA = "0x1D706B4", Offset = "0x1D706B4", VA = "0x1D706B4", Slot = "5")]
	public override void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001484")]
	[Address(RVA = "0x1D707E8", Offset = "0x1D707E8", VA = "0x1D707E8")]
	public void SetData(WeaponLevelData levelData)
	{
	}

	[Token(Token = "0x6001485")]
	[Address(RVA = "0x1D708E8", Offset = "0x1D708E8", VA = "0x1D708E8")]
	public void UpdateData(WeaponLevelData levelData)
	{
	}

	[Token(Token = "0x6001486")]
	[Address(RVA = "0x1D709E8", Offset = "0x1D709E8", VA = "0x1D709E8")]
	public WeaponNumericAgent()
	{
	}
}
[Token(Token = "0x20002A7")]
public class PickupDropItemAgent : WAgent
{
	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RaycastHit hitInfo;

	[Token(Token = "0x6001487")]
	[Address(RVA = "0x152D5D0", Offset = "0x152D5D0", VA = "0x152D5D0", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x6001488")]
	[Address(RVA = "0x152D5D8", Offset = "0x152D5D8", VA = "0x152D5D8")]
	public void RegisterInput()
	{
	}

	[Token(Token = "0x6001489")]
	[Address(RVA = "0x152D6A0", Offset = "0x152D6A0", VA = "0x152D6A0")]
	public void UnRegisterInput()
	{
	}

	[Token(Token = "0x600148A")]
	[Address(RVA = "0x152D760", Offset = "0x152D760", VA = "0x152D760")]
	private void OnRightWeaponPressDown()
	{
	}

	[Token(Token = "0x600148B")]
	[Address(RVA = "0x152D908", Offset = "0x152D908", VA = "0x152D908")]
	private void OnHitJob(int index, int length)
	{
	}

	[Token(Token = "0x600148C")]
	[Address(RVA = "0x152DB48", Offset = "0x152DB48", VA = "0x152DB48")]
	public PickupDropItemAgent()
	{
	}
}
[Token(Token = "0x20002A8")]
public class StateAgent : WAgent
{
	[Token(Token = "0x20005DF")]
	public enum STATE
	{
		[Token(Token = "0x40021A7")]
		NONE,
		[Token(Token = "0x40021A8")]
		NORMAL,
		[Token(Token = "0x40021A9")]
		DIE,
		[Token(Token = "0x40021AA")]
		HURT
	}

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnitBaseState activeState;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private STATE activeStateType;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<STATE, UnitBaseState> stateList;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private STATE preStateType;

	[Token(Token = "0x600148D")]
	[Address(RVA = "0x12C5A40", Offset = "0x12C5A40", VA = "0x12C5A40")]
	public STATE STPreStateType()
	{
		return default(STATE);
	}

	[Token(Token = "0x600148E")]
	[Address(RVA = "0x12C5A48", Offset = "0x12C5A48", VA = "0x12C5A48", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0x12C5C4C", Offset = "0x12C5C4C", VA = "0x12C5C4C")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0x12C5C64", Offset = "0x12C5C64", VA = "0x12C5C64")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6001491")]
	[Address(RVA = "0x12C5C7C", Offset = "0x12C5C7C", VA = "0x12C5C7C")]
	private void DoStateExit()
	{
	}

	[Token(Token = "0x6001492")]
	[Address(RVA = "0x12C5CBC", Offset = "0x12C5CBC", VA = "0x12C5CBC")]
	private void DoInit()
	{
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0x12C5B48", Offset = "0x12C5B48", VA = "0x12C5B48")]
	private void Register(STATE type, UnitBaseState st)
	{
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0x12C5CD4", Offset = "0x12C5CD4", VA = "0x12C5CD4")]
	private void UnRegister(STATE type)
	{
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0x12C5CA4", Offset = "0x12C5CA4", VA = "0x12C5CA4")]
	public STATE GetStateType()
	{
		return default(STATE);
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0x12C5DCC", Offset = "0x12C5DCC", VA = "0x12C5DCC")]
	private UnitBaseState GetState()
	{
		return null;
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0x12C5DD4", Offset = "0x12C5DD4", VA = "0x12C5DD4")]
	private UnitBaseState GetStateByType(STATE type)
	{
		return null;
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0x12C5E58", Offset = "0x12C5E58", VA = "0x12C5E58")]
	private void SetActiveState(STATE nextType)
	{
	}

	[Token(Token = "0x6001499")]
	[Address(RVA = "0x12C5D64", Offset = "0x12C5D64", VA = "0x12C5D64")]
	private bool IsHasState(STATE nextType)
	{
		return default(bool);
	}

	[Token(Token = "0x600149A")]
	[Address(RVA = "0x12C5BE0", Offset = "0x12C5BE0", VA = "0x12C5BE0")]
	public void ChangeUnitState(STATE _nextState)
	{
	}

	[Token(Token = "0x600149B")]
	[Address(RVA = "0x12C5EE8", Offset = "0x12C5EE8", VA = "0x12C5EE8")]
	public StateAgent()
	{
	}
}
[Token(Token = "0x20002A9")]
public class TransformSyncAgent : WAgent
{
	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool IsEnableSync;

	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ServerPlayerNetSyncController syncController;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsSyncLocal;

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform LocalOffsetTrn;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 LocalOffset;

	[Token(Token = "0x600149C")]
	[Address(RVA = "0x11DD540", Offset = "0x11DD540", VA = "0x11DD540", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x600149D")]
	[Address(RVA = "0x11DD548", Offset = "0x11DD548", VA = "0x11DD548")]
	public void OnGameObjectLoad()
	{
	}

	[Token(Token = "0x600149E")]
	[Address(RVA = "0x11DD5B8", Offset = "0x11DD5B8", VA = "0x11DD5B8")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x600149F")]
	[Address(RVA = "0x11DD5BC", Offset = "0x11DD5BC", VA = "0x11DD5BC")]
	public void DoFixedUpdate()
	{
	}

	[Token(Token = "0x60014A0")]
	[Address(RVA = "0x11DD5CC", Offset = "0x11DD5CC", VA = "0x11DD5CC")]
	private void PlayerInfo()
	{
	}

	[Token(Token = "0x60014A1")]
	[Address(RVA = "0x11DDEC0", Offset = "0x11DDEC0", VA = "0x11DDEC0")]
	public void SetIsEnableSync(bool _IsEnableSync)
	{
	}

	[Token(Token = "0x60014A2")]
	[Address(RVA = "0x11DDECC", Offset = "0x11DDECC", VA = "0x11DDECC")]
	public TransformSyncAgent()
	{
	}
}
[Token(Token = "0x20002AA")]
public interface WAgent
{
	[Token(Token = "0x60014A3")]
	void Init(WUnit owner);
}
[Token(Token = "0x20002AB")]
public class WeaponAgent : WAgent
{
	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x40011F0")]
	private const int WEAPON_ID_RIGHT = 0;

	[Token(Token = "0x40011F1")]
	private const int WEAPON_ID_LEFT = 1;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE849C", Offset = "0xEE849C")]
	private GameObject <weaponObject_right>k__BackingField;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE84AC", Offset = "0xEE84AC")]
	private GameObject <weaponObject_left>k__BackingField;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE84BC", Offset = "0xEE84BC")]
	private e_weapon_group <weaponGroup>k__BackingField;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected bool _isVisible;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Weapon weapon_right;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Weapon weapon_left;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isFireEnable;

	[Token(Token = "0x170001BE")]
	public GameObject weaponObject_right
	{
		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x1D6B6F0", Offset = "0x1D6B6F0", VA = "0x1D6B6F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0978", Offset = "0xEF0978")]
		get
		{
			return null;
		}
		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x1D6B6F8", Offset = "0x1D6B6F8", VA = "0x1D6B6F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0988", Offset = "0xEF0988")]
		private set
		{
		}
	}

	[Token(Token = "0x170001BF")]
	public GameObject weaponObject_left
	{
		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x1D6B700", Offset = "0x1D6B700", VA = "0x1D6B700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0998", Offset = "0xEF0998")]
		get
		{
			return null;
		}
		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x1D6B708", Offset = "0x1D6B708", VA = "0x1D6B708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF09A8", Offset = "0xEF09A8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C0")]
	public e_weapon_group weaponGroup
	{
		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x1D6BA08", Offset = "0x1D6BA08", VA = "0x1D6BA08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF09B8", Offset = "0xEF09B8")]
		get
		{
			return default(e_weapon_group);
		}
		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x1D6BA10", Offset = "0x1D6BA10", VA = "0x1D6BA10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF09C8", Offset = "0xEF09C8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001C1")]
	public virtual bool IsVisible
	{
		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x1D6BB14", Offset = "0x1D6BB14", VA = "0x1D6BB14", Slot = "6")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x1D6BA20", Offset = "0x1D6BA20", VA = "0x1D6BA20", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x170001C2")]
	public Vector3 Position_right
	{
		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x1D6BB1C", Offset = "0x1D6BB1C", VA = "0x1D6BB1C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60014B0")]
		[Address(RVA = "0x1D6BBE0", Offset = "0x1D6BBE0", VA = "0x1D6BBE0")]
		set
		{
		}
	}

	[Token(Token = "0x170001C3")]
	public Quaternion Rotation_right
	{
		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x1D6BCB0", Offset = "0x1D6BCB0", VA = "0x1D6BCB0")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x1D6BD74", Offset = "0x1D6BD74", VA = "0x1D6BD74")]
		set
		{
		}
	}

	[Token(Token = "0x170001C4")]
	public Vector3 Forward_right
	{
		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x1D6BE4C", Offset = "0x1D6BE4C", VA = "0x1D6BE4C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x1D6BF10", Offset = "0x1D6BF10", VA = "0x1D6BF10")]
		set
		{
		}
	}

	[Token(Token = "0x170001C5")]
	public e_weapon_type weaponType_right
	{
		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x1D6BFE0", Offset = "0x1D6BFE0", VA = "0x1D6BFE0")]
		get
		{
			return default(e_weapon_type);
		}
	}

	[Token(Token = "0x170001C6")]
	public Vector3 Position_left
	{
		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x1D6C070", Offset = "0x1D6C070", VA = "0x1D6C070")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x1D6C134", Offset = "0x1D6C134", VA = "0x1D6C134")]
		set
		{
		}
	}

	[Token(Token = "0x170001C7")]
	public Quaternion Rotation_left
	{
		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x1D6C204", Offset = "0x1D6C204", VA = "0x1D6C204")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x1D6C2C8", Offset = "0x1D6C2C8", VA = "0x1D6C2C8")]
		set
		{
		}
	}

	[Token(Token = "0x170001C8")]
	public Vector3 Forward_left
	{
		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x1D6C3A0", Offset = "0x1D6C3A0", VA = "0x1D6C3A0")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x1D6C464", Offset = "0x1D6C464", VA = "0x1D6C464")]
		set
		{
		}
	}

	[Token(Token = "0x170001C9")]
	public e_weapon_type weaponType_left
	{
		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x1D6C534", Offset = "0x1D6C534", VA = "0x1D6C534")]
		get
		{
			return default(e_weapon_type);
		}
	}

	[Token(Token = "0x60014A8")]
	[Address(RVA = "0x1D6B710", Offset = "0x1D6B710", VA = "0x1D6B710")]
	public void SetWeaponObject_Right(GameObject rightObject, string rightName, WeaponAttribute weaponAttribute, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x60014A9")]
	[Address(RVA = "0x1D6B88C", Offset = "0x1D6B88C", VA = "0x1D6B88C")]
	public void SetWeaponObject_Left(GameObject leftObject, string leftName, WeaponAttribute weaponAttribute, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x60014AC")]
	[Address(RVA = "0x1D6BA18", Offset = "0x1D6BA18", VA = "0x1D6BA18")]
	public void SetWeaponGroup(e_weapon_group _weaponGroup)
	{
	}

	[Token(Token = "0x60014BD")]
	[Address(RVA = "0x1D6C5C4", Offset = "0x1D6C5C4", VA = "0x1D6C5C4")]
	public void RegisterInput()
	{
	}

	[Token(Token = "0x60014BE")]
	[Address(RVA = "0x1D6C76C", Offset = "0x1D6C76C", VA = "0x1D6C76C")]
	public void UnRegisterInput()
	{
	}

	[Token(Token = "0x60014BF")]
	[Address(RVA = "0x1D6C90C", Offset = "0x1D6C90C", VA = "0x1D6C90C", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60014C0")]
	[Address(RVA = "0x1D6C914", Offset = "0x1D6C914", VA = "0x1D6C914")]
	public void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x60014C1")]
	[Address(RVA = "0x1D6CA08", Offset = "0x1D6CA08", VA = "0x1D6CA08")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60014C2")]
	[Address(RVA = "0x1D6D024", Offset = "0x1D6D024", VA = "0x1D6D024")]
	public void SetFireEnable(bool flag)
	{
	}

	[Token(Token = "0x60014C3")]
	[Address(RVA = "0x1D6CD3C", Offset = "0x1D6CD3C", VA = "0x1D6CD3C")]
	public void SetAimLineStatus(bool _status)
	{
	}

	[Token(Token = "0x60014C4")]
	[Address(RVA = "0x1D6CE28", Offset = "0x1D6CE28", VA = "0x1D6CE28")]
	public void SetShootLightStatus(bool _status)
	{
	}

	[Token(Token = "0x60014C5")]
	[Address(RVA = "0x1D6CF14", Offset = "0x1D6CF14", VA = "0x1D6CF14")]
	public void SetBulletInfiniteState(bool _status)
	{
	}

	[Token(Token = "0x60014C6")]
	[Address(RVA = "0x1D6CA04", Offset = "0x1D6CA04", VA = "0x1D6CA04")]
	public void DropWeaponUpdate()
	{
	}

	[Token(Token = "0x60014C7")]
	[Address(RVA = "0x1D6D140", Offset = "0x1D6D140", VA = "0x1D6D140")]
	public void WeaponReset()
	{
	}

	[Token(Token = "0x60014C8")]
	[Address(RVA = "0x1D6D2FC", Offset = "0x1D6D2FC", VA = "0x1D6D2FC")]
	public void SetDropWeaponAddBullet()
	{
	}

	[Token(Token = "0x60014C9")]
	[Address(RVA = "0x1D6D40C", Offset = "0x1D6D40C", VA = "0x1D6D40C")]
	private void OnRightWeaponPressDown()
	{
	}

	[Token(Token = "0x60014CA")]
	[Address(RVA = "0x1D6D4AC", Offset = "0x1D6D4AC", VA = "0x1D6D4AC")]
	private void OnRightWeaponPressUp()
	{
	}

	[Token(Token = "0x60014CB")]
	[Address(RVA = "0x1D6D54C", Offset = "0x1D6D54C", VA = "0x1D6D54C")]
	private void OnLeftWeaponPressDown()
	{
	}

	[Token(Token = "0x60014CC")]
	[Address(RVA = "0x1D6D5EC", Offset = "0x1D6D5EC", VA = "0x1D6D5EC")]
	private void OnLeftWeaponPressUp()
	{
	}

	[Token(Token = "0x60014CD")]
	[Address(RVA = "0x1D6D68C", Offset = "0x1D6D68C", VA = "0x1D6D68C")]
	public void SetAllAniCloseObjActive(bool isActive)
	{
	}

	[Token(Token = "0x60014CE")]
	[Address(RVA = "0x1D6D778", Offset = "0x1D6D778", VA = "0x1D6D778")]
	public void SyncCreateBullte(int id, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60014CF")]
	[Address(RVA = "0x1D6DC78", Offset = "0x1D6DC78", VA = "0x1D6DC78")]
	public void SyncCreateEffectBullte(int id, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60014D0")]
	[Address(RVA = "0x1D6DF70", Offset = "0x1D6DF70", VA = "0x1D6DF70")]
	public void SyncReload(int id, bool isNeedAni)
	{
	}

	[Token(Token = "0x60014D1")]
	[Address(RVA = "0x1D6E214", Offset = "0x1D6E214", VA = "0x1D6E214")]
	public void SyncReloadMagazine()
	{
	}

	[Token(Token = "0x60014D2")]
	[Address(RVA = "0x1D6E31C", Offset = "0x1D6E31C", VA = "0x1D6E31C")]
	public WeaponAgent()
	{
	}
}
[Token(Token = "0x20002AC")]
public interface IDeathDefine
{
	[Token(Token = "0x60014D3")]
	void TriggerDeathDefine(Action endAction);
}
[Token(Token = "0x20002AD")]
public class NoHurtAgent : WAgent
{
	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WUnit owner;

	[Token(Token = "0x60014D4")]
	[Address(RVA = "0x13857FC", Offset = "0x13857FC", VA = "0x13857FC", Slot = "4")]
	public void Init(WUnit owner)
	{
	}

	[Token(Token = "0x60014D5")]
	[Address(RVA = "0x1385804", Offset = "0x1385804", VA = "0x1385804")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0x1385820", Offset = "0x1385820", VA = "0x1385820")]
	public void Hurt()
	{
	}

	[Token(Token = "0x60014D7")]
	[Address(RVA = "0x138583C", Offset = "0x138583C", VA = "0x138583C")]
	public void NoHurt()
	{
	}

	[Token(Token = "0x60014D8")]
	[Address(RVA = "0x138585C", Offset = "0x138585C", VA = "0x138585C")]
	public NoHurtAgent()
	{
	}
}
[Token(Token = "0x20002AE")]
public class UDieState : UnitBaseState
{
	[Token(Token = "0x60014D9")]
	[Address(RVA = "0x11DEEE4", Offset = "0x11DEEE4", VA = "0x11DEEE4")]
	public UDieState(WUnit _owner, StateAgent _stateOwner)
	{
	}

	[Token(Token = "0x60014DA")]
	[Address(RVA = "0x11DEF38", Offset = "0x11DEF38", VA = "0x11DEF38", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x60014DB")]
	[Address(RVA = "0x11DEF3C", Offset = "0x11DEF3C", VA = "0x11DEF3C", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x60014DC")]
	[Address(RVA = "0x11DEF40", Offset = "0x11DEF40", VA = "0x11DEF40", Slot = "6")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x60014DD")]
	[Address(RVA = "0x11DEF44", Offset = "0x11DEF44", VA = "0x11DEF44", Slot = "7")]
	public override void DoExit()
	{
	}
}
[Token(Token = "0x20002AF")]
public class UHurtState : UnitBaseState
{
	[Token(Token = "0x60014DE")]
	[Address(RVA = "0x11DEF48", Offset = "0x11DEF48", VA = "0x11DEF48")]
	public UHurtState(WUnit _owner, StateAgent _stateOwner)
	{
	}

	[Token(Token = "0x60014DF")]
	[Address(RVA = "0x11DEF4C", Offset = "0x11DEF4C", VA = "0x11DEF4C", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x60014E0")]
	[Address(RVA = "0x11DEF50", Offset = "0x11DEF50", VA = "0x11DEF50", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x60014E1")]
	[Address(RVA = "0x11DEF54", Offset = "0x11DEF54", VA = "0x11DEF54", Slot = "6")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x60014E2")]
	[Address(RVA = "0x11DEF58", Offset = "0x11DEF58", VA = "0x11DEF58", Slot = "7")]
	public override void DoExit()
	{
	}
}
[Token(Token = "0x20002B0")]
public class UNormalState : UnitBaseState
{
	[Token(Token = "0x60014E3")]
	[Address(RVA = "0x11E102C", Offset = "0x11E102C", VA = "0x11E102C")]
	public UNormalState(WUnit _owner, StateAgent _stateOwner)
	{
	}

	[Token(Token = "0x60014E4")]
	[Address(RVA = "0x11E1030", Offset = "0x11E1030", VA = "0x11E1030", Slot = "4")]
	public override void DoInit()
	{
	}

	[Token(Token = "0x60014E5")]
	[Address(RVA = "0x11E1034", Offset = "0x11E1034", VA = "0x11E1034", Slot = "5")]
	public override void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x60014E6")]
	[Address(RVA = "0x11E1038", Offset = "0x11E1038", VA = "0x11E1038", Slot = "6")]
	public override void DoLateUpdate()
	{
	}

	[Token(Token = "0x60014E7")]
	[Address(RVA = "0x11E103C", Offset = "0x11E103C", VA = "0x11E103C", Slot = "7")]
	public override void DoExit()
	{
	}
}
[Token(Token = "0x20002B1")]
public abstract class UnitBaseState
{
	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected StateAgent stateOwner;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected WUnit owner;

	[Token(Token = "0x60014E8")]
	[Address(RVA = "0x11DEEE8", Offset = "0x11DEEE8", VA = "0x11DEEE8")]
	public UnitBaseState(WUnit _owner, StateAgent _stateOwner)
	{
	}

	[Token(Token = "0x60014E9")]
	public abstract void DoInit();

	[Token(Token = "0x60014EA")]
	public abstract void DoUpdate(float deltaTime, int millisDeltaTime);

	[Token(Token = "0x60014EB")]
	public abstract void DoLateUpdate();

	[Token(Token = "0x60014EC")]
	public abstract void DoExit();
}
[Token(Token = "0x20002B2")]
public class WUnit
{
	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject mGameObject;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject mModelObject;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE84CC", Offset = "0xEE84CC")]
	private UnitConfigMono <playerConfigMono>k__BackingField;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE84DC", Offset = "0xEE84DC")]
	private ComponentCacheTools <componentCacheTools>k__BackingField;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public DataAgent dataAgent;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationAgent animatonAgent;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BodyPartAgent bodyPartAgent;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AIAgent aiAgent;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public WeaponAgent weaponAgent;

	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public IKAgent ikAgent;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TransformSyncAgent transformSyncAgent;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public InterruptAgent InterruptAgent;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public NumericAgent characterNumericAgent;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public NumericAgent weaponNumericAgent;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BuffAgent buffAgent;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public PickupDropItemAgent pickupDropItemAgent;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public NoHurtAgent noHurtAgent;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public SimpleSkillAgent simpleSkillAgent;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected bool _isVisible;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	protected bool mIsDestory;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE84EC", Offset = "0xEE84EC")]
	private bool <isLocalPlayer>k__BackingField;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE84FC", Offset = "0xEE84FC")]
	private bool <isLiveing>k__BackingField;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected bool mIsDie;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Action<WUnit> OnDeadCB;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Action<WUnit> OnReviveCB;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int IsLastUpdatePosCount;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int id;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private e_group_type groupId;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private e_type_role _roleType;

	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool IsNoHurt;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private ReactiveProperty<int> CurrentRoomID;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool joinStatus;

	[Token(Token = "0x170001CA")]
	public GameObject gameObject
	{
		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x131F224", Offset = "0x131F224", VA = "0x131F224")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CB")]
	public GameObject modelObject
	{
		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x131F22C", Offset = "0x131F22C", VA = "0x131F22C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x131F234", Offset = "0x131F234", VA = "0x131F234")]
		set
		{
		}
	}

	[Token(Token = "0x170001CC")]
	public UnitConfigMono playerConfigMono
	{
		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x131F23C", Offset = "0x131F23C", VA = "0x131F23C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF09D8", Offset = "0xEF09D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x131F244", Offset = "0x131F244", VA = "0x131F244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF09E8", Offset = "0xEF09E8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001CD")]
	public ComponentCacheTools componentCacheTools
	{
		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x131F24C", Offset = "0x131F24C", VA = "0x131F24C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF09F8", Offset = "0xEF09F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x131F254", Offset = "0x131F254", VA = "0x131F254")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0A08", Offset = "0xEF0A08")]
		private set
		{
		}
	}

	[Token(Token = "0x170001CE")]
	public string name
	{
		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x131F25C", Offset = "0x131F25C", VA = "0x131F25C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CF")]
	public Vector3 Position
	{
		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x131F2FC", Offset = "0x131F2FC", VA = "0x131F2FC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x131F3C0", Offset = "0x131F3C0", VA = "0x131F3C0")]
		set
		{
		}
	}

	[Token(Token = "0x170001D0")]
	public Quaternion Rotation
	{
		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x131F490", Offset = "0x131F490", VA = "0x131F490")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x131F554", Offset = "0x131F554", VA = "0x131F554")]
		set
		{
		}
	}

	[Token(Token = "0x170001D1")]
	public Vector3 Forward
	{
		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x131F62C", Offset = "0x131F62C", VA = "0x131F62C")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x131F6F0", Offset = "0x131F6F0", VA = "0x131F6F0")]
		set
		{
		}
	}

	[Token(Token = "0x170001D2")]
	public virtual bool IsVisible
	{
		[Token(Token = "0x60014FC")]
		[Address(RVA = "0x131F888", Offset = "0x131F888", VA = "0x131F888", Slot = "5")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60014FB")]
		[Address(RVA = "0x131F7C0", Offset = "0x131F7C0", VA = "0x131F7C0", Slot = "4")]
		set
		{
		}
	}

	[Token(Token = "0x170001D3")]
	public bool isDestory
	{
		[Token(Token = "0x60014FD")]
		[Address(RVA = "0x131F890", Offset = "0x131F890", VA = "0x131F890")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D4")]
	public bool isLocalPlayer
	{
		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x131F898", Offset = "0x131F898", VA = "0x131F898")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0A18", Offset = "0xEF0A18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60014FF")]
		[Address(RVA = "0x131F8A0", Offset = "0x131F8A0", VA = "0x131F8A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0A28", Offset = "0xEF0A28")]
		private set
		{
		}
	}

	[Token(Token = "0x170001D5")]
	public bool isLiveing
	{
		[Token(Token = "0x6001500")]
		[Address(RVA = "0x131F8AC", Offset = "0x131F8AC", VA = "0x131F8AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0A38", Offset = "0xEF0A38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001501")]
		[Address(RVA = "0x131F8B4", Offset = "0x131F8B4", VA = "0x131F8B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0A48", Offset = "0xEF0A48")]
		set
		{
		}
	}

	[Token(Token = "0x170001D6")]
	public bool IsDie
	{
		[Token(Token = "0x6001502")]
		[Address(RVA = "0x131F8C0", Offset = "0x131F8C0", VA = "0x131F8C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001D7")]
	public int Id
	{
		[Token(Token = "0x6001506")]
		[Address(RVA = "0x131FA08", Offset = "0x131FA08", VA = "0x131FA08")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001D8")]
	public e_group_type GroupId
	{
		[Token(Token = "0x6001507")]
		[Address(RVA = "0x131FA10", Offset = "0x131FA10", VA = "0x131FA10")]
		get
		{
			return default(e_group_type);
		}
	}

	[Token(Token = "0x170001D9")]
	public e_type_role roleType
	{
		[Token(Token = "0x6001508")]
		[Address(RVA = "0x131FA18", Offset = "0x131FA18", VA = "0x131FA18")]
		get
		{
			return default(e_type_role);
		}
	}

	[Token(Token = "0x170001DA")]
	public bool JoinStatus
	{
		[Token(Token = "0x6001516")]
		[Address(RVA = "0x1320814", Offset = "0x1320814", VA = "0x1320814")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001503")]
	[Address(RVA = "0x131F8C8", Offset = "0x131F8C8", VA = "0x131F8C8")]
	public void SetDie(bool dead)
	{
	}

	[Token(Token = "0x6001504")]
	[Address(RVA = "0x131F8F4", Offset = "0x131F8F4", VA = "0x131F8F4")]
	protected void OnDead()
	{
	}

	[Token(Token = "0x6001505")]
	[Address(RVA = "0x131F9A4", Offset = "0x131F9A4", VA = "0x131F9A4")]
	protected void OnRevive()
	{
	}

	[Token(Token = "0x6001509")]
	[Address(RVA = "0x131FA20", Offset = "0x131FA20", VA = "0x131FA20")]
	public void SetCurrentRoomID(int roomId)
	{
	}

	[Token(Token = "0x600150A")]
	[Address(RVA = "0x131FA88", Offset = "0x131FA88", VA = "0x131FA88")]
	public int GetCurrentRoomID()
	{
		return default(int);
	}

	[Token(Token = "0x600150B")]
	[Address(RVA = "0x131FAD8", Offset = "0x131FAD8", VA = "0x131FAD8")]
	private WUnit(int _id, e_group_type _groupId)
	{
	}

	[Token(Token = "0x600150C")]
	[Address(RVA = "0x131FB80", Offset = "0x131FB80", VA = "0x131FB80")]
	public void ChangePlayerGroup(e_group_type _groupId)
	{
	}

	[Token(Token = "0x600150D")]
	[Address(RVA = "0x131FC74", Offset = "0x131FC74", VA = "0x131FC74")]
	public static WUnit CreatePlayerUnit(int _id, e_group_type _groupId)
	{
		return null;
	}

	[Token(Token = "0x600150E")]
	[Address(RVA = "0x131FCF4", Offset = "0x131FCF4", VA = "0x131FCF4")]
	public static WUnit CreateNPCUnit(int _id, e_group_type _groupId)
	{
		return null;
	}

	[Token(Token = "0x600150F")]
	[Address(RVA = "0x131FD74", Offset = "0x131FD74", VA = "0x131FD74")]
	public static WUnit CreateMonsterUnit(int _id)
	{
		return null;
	}

	[Token(Token = "0x6001510")]
	[Address(RVA = "0x131FDE8", Offset = "0x131FDE8", VA = "0x131FDE8")]
	public void Init(UnitAttribute attribute)
	{
	}

	[Token(Token = "0x6001511")]
	[Address(RVA = "0x13201CC", Offset = "0x13201CC", VA = "0x13201CC")]
	public void Destroy()
	{
	}

	[Token(Token = "0x6001512")]
	[Address(RVA = "0x13203F4", Offset = "0x13203F4", VA = "0x13203F4", Slot = "6")]
	public virtual void DoUpdate(float deltaTime, int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001513")]
	[Address(RVA = "0x13204BC", Offset = "0x13204BC", VA = "0x13204BC")]
	public void DoFixedUpdate()
	{
	}

	[Token(Token = "0x6001514")]
	[Address(RVA = "0x13204D0", Offset = "0x13204D0", VA = "0x13204D0")]
	public void DoLateUpdate()
	{
	}

	[Token(Token = "0x6001515")]
	[Address(RVA = "0x13204E4", Offset = "0x13204E4", VA = "0x13204E4")]
	public void SetGameObject(GameObject obj, string name, bool _isVisible = true, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x6001517")]
	[Address(RVA = "0x132081C", Offset = "0x132081C", VA = "0x132081C")]
	public void JoinGame()
	{
	}

	[Token(Token = "0x6001518")]
	[Address(RVA = "0x13208CC", Offset = "0x13208CC", VA = "0x13208CC")]
	public void JoinGame(bool _joinStatus)
	{
	}

	[Token(Token = "0x6001519")]
	[Address(RVA = "0x13208F0", Offset = "0x13208F0", VA = "0x13208F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0A58", Offset = "0xEF0A58")]
	private void <Init>b__82_0(int i)
	{
	}

	[Token(Token = "0x600151A")]
	[Address(RVA = "0x13209C0", Offset = "0x13209C0", VA = "0x13209C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0A68", Offset = "0xEF0A68")]
	private void <Destroy>b__83_0()
	{
	}
}
[Token(Token = "0x20002B3")]
[AttributeAttribute(Name = "ComponentCacheAttribute", RVA = "0xEE2638", Offset = "0xEE2638")]
public abstract class BaseWeaponHitEffect : MonoBehaviour
{
	[Token(Token = "0x600151B")]
	public abstract void HitEffect(WUnit unit, Vector3 _hitPos, Vector3 _hitNormal);

	[Token(Token = "0x600151C")]
	[Address(RVA = "0x1563308", Offset = "0x1563308", VA = "0x1563308")]
	protected BaseWeaponHitEffect()
	{
	}
}
[Token(Token = "0x20002B4")]
public class WeaponMotion : MonoBehaviour
{
	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE850C", Offset = "0xEE850C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE850C", Offset = "0xEE850C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE850C", Offset = "0xEE850C")]
	public float PositionSpring2Stiffness;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE8584", Offset = "0xEE8584")]
	public float PositionSpring2Damping;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected vp_Spring m_PositionSpring2;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Vector3 m_PositionSpring2DefaultRotation;

	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE859C", Offset = "0xEE859C")]
	protected Vector3 RotationOffset;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE85D4", Offset = "0xEE85D4")]
	public float RotationSpring2Stiffness;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE85EC", Offset = "0xEE85EC")]
	public float RotationSpring2Damping;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected vp_Spring m_RotationSpring2;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Vector3 m_RotationSpring2DefaultRotation;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8604", Offset = "0xEE8604")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE8604", Offset = "0xEE8604")]
	public float PositionPivotSpringStiffness;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE8658", Offset = "0xEE8658")]
	public float PositionPivotSpringDamping;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected Vector3 PositionPivot;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected vp_Spring m_PositionPivotSpring;

	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8670", Offset = "0xEE8670")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE8670", Offset = "0xEE8670")]
	public float RotationSpringStiffness;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE86C4", Offset = "0xEE86C4")]
	public float RotationSpringDamping;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected vp_Spring m_RotationSpring;

	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE86DC", Offset = "0xEE86DC")]
	public Transform WeaponMotionPoint;

	[Token(Token = "0x600151D")]
	[Address(RVA = "0x1D6F68C", Offset = "0x1D6F68C", VA = "0x1D6F68C", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x600151E")]
	[Address(RVA = "0x1D6FA74", Offset = "0x1D6FA74", VA = "0x1D6FA74", Slot = "5")]
	public virtual void UnInit()
	{
	}

	[Token(Token = "0x600151F")]
	[Address(RVA = "0x1D6FA80", Offset = "0x1D6FA80", VA = "0x1D6FA80", Slot = "6")]
	public virtual void DoUpdate()
	{
	}

	[Token(Token = "0x6001520")]
	[Address(RVA = "0x1D6FD9C", Offset = "0x1D6FD9C", VA = "0x1D6FD9C", Slot = "7")]
	public virtual void AddForce2(Vector3 positional, Vector3 angular)
	{
	}

	[Token(Token = "0x6001521")]
	[Address(RVA = "0x1D6FE8C", Offset = "0x1D6FE8C", VA = "0x1D6FE8C", Slot = "8")]
	public virtual void ResetSprings(float positionReset, float rotationReset, float positionPauseTime = 0f, float rotationPauseTime = 0f)
	{
	}

	[Token(Token = "0x6001522")]
	[Address(RVA = "0x1D70028", Offset = "0x1D70028", VA = "0x1D70028", Slot = "9")]
	protected virtual void SnapSprings()
	{
	}

	[Token(Token = "0x6001523")]
	[Address(RVA = "0x1D701E4", Offset = "0x1D701E4", VA = "0x1D701E4", Slot = "10")]
	protected virtual void StopSprings()
	{
	}

	[Token(Token = "0x6001524")]
	[Address(RVA = "0x1D70248", Offset = "0x1D70248", VA = "0x1D70248", Slot = "11")]
	protected virtual void Refresh()
	{
	}

	[Token(Token = "0x6001525")]
	[Address(RVA = "0x1D705E4", Offset = "0x1D705E4", VA = "0x1D705E4")]
	public WeaponMotion()
	{
	}
}
[Token(Token = "0x20002B5")]
public class vp_Spring
{
	[Token(Token = "0x20005E0")]
	public enum UpdateMode
	{
		[Token(Token = "0x40021AC")]
		Position,
		[Token(Token = "0x40021AD")]
		PositionAdditiveLocal,
		[Token(Token = "0x40021AE")]
		PositionAdditiveGlobal,
		[Token(Token = "0x40021AF")]
		PositionAdditiveSelf,
		[Token(Token = "0x40021B0")]
		Rotation,
		[Token(Token = "0x40021B1")]
		RotationAdditiveLocal,
		[Token(Token = "0x40021B2")]
		RotationAdditiveGlobal,
		[Token(Token = "0x40021B3")]
		Scale,
		[Token(Token = "0x40021B4")]
		ScaleAdditiveLocal
	}

	[Token(Token = "0x20005E1")]
	protected delegate void UpdateDelegate();

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected UpdateMode Mode;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected bool m_AutoUpdate;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected UpdateDelegate m_UpdateFunc;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 State;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected Vector3 m_Velocity;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 RestState;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 Stiffness;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 Damping;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected float m_VelocityFadeInCap;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected float m_VelocityFadeInEndTime;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected float m_VelocityFadeInLength;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Vector3[] m_SoftForceFrame;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float MaxVelocity;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float MinVelocity;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 MaxState;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 MinState;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Transform m_Transform;

	[Token(Token = "0x170001DB")]
	public Transform Transform
	{
		[Token(Token = "0x6001526")]
		[Address(RVA = "0x1D7ADBC", Offset = "0x1D7ADBC", VA = "0x1D7ADBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001527")]
		[Address(RVA = "0x1D7ADC4", Offset = "0x1D7ADC4", VA = "0x1D7ADC4")]
		set
		{
		}
	}

	[Token(Token = "0x6001528")]
	[Address(RVA = "0x1D6F88C", Offset = "0x1D6F88C", VA = "0x1D6F88C")]
	public vp_Spring(Transform transform, UpdateMode mode, bool autoUpdate = true)
	{
	}

	[Token(Token = "0x6001529")]
	[Address(RVA = "0x1D6FB40", Offset = "0x1D6FB40", VA = "0x1D6FB40")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x600152A")]
	[Address(RVA = "0x1D7B624", Offset = "0x1D7B624", VA = "0x1D7B624")]
	private void Position()
	{
	}

	[Token(Token = "0x600152B")]
	[Address(RVA = "0x1D7B64C", Offset = "0x1D7B64C", VA = "0x1D7B64C")]
	private void Rotation()
	{
	}

	[Token(Token = "0x600152C")]
	[Address(RVA = "0x1D7B674", Offset = "0x1D7B674", VA = "0x1D7B674")]
	private void Scale()
	{
	}

	[Token(Token = "0x600152D")]
	[Address(RVA = "0x1D7B69C", Offset = "0x1D7B69C", VA = "0x1D7B69C")]
	private void PositionAdditiveLocal()
	{
	}

	[Token(Token = "0x600152E")]
	[Address(RVA = "0x1D7B768", Offset = "0x1D7B768", VA = "0x1D7B768")]
	private void PositionAdditiveGlobal()
	{
	}

	[Token(Token = "0x600152F")]
	[Address(RVA = "0x1D7B834", Offset = "0x1D7B834", VA = "0x1D7B834")]
	private void PositionAdditiveSelf()
	{
	}

	[Token(Token = "0x6001530")]
	[Address(RVA = "0x1D7B860", Offset = "0x1D7B860", VA = "0x1D7B860")]
	private void RotationAdditiveLocal()
	{
	}

	[Token(Token = "0x6001531")]
	[Address(RVA = "0x1D7B92C", Offset = "0x1D7B92C", VA = "0x1D7B92C")]
	private void RotationAdditiveGlobal()
	{
	}

	[Token(Token = "0x6001532")]
	[Address(RVA = "0x1D7B9F8", Offset = "0x1D7B9F8", VA = "0x1D7B9F8")]
	private void ScaleAdditiveLocal()
	{
	}

	[Token(Token = "0x6001533")]
	[Address(RVA = "0x1D7BAC4", Offset = "0x1D7BAC4", VA = "0x1D7BAC4")]
	private void None()
	{
	}

	[Token(Token = "0x6001534")]
	[Address(RVA = "0x1D7ADEC", Offset = "0x1D7ADEC", VA = "0x1D7ADEC")]
	protected void RefreshUpdateMode()
	{
	}

	[Token(Token = "0x6001535")]
	[Address(RVA = "0x1D7B244", Offset = "0x1D7B244", VA = "0x1D7B244")]
	protected void Calculate()
	{
	}

	[Token(Token = "0x6001536")]
	[Address(RVA = "0x1D7B168", Offset = "0x1D7B168", VA = "0x1D7B168")]
	private void AddForceInternal(Vector3 force)
	{
	}

	[Token(Token = "0x6001537")]
	[Address(RVA = "0x1D6FE08", Offset = "0x1D6FE08", VA = "0x1D6FE08")]
	public void AddForce(Vector3 force)
	{
	}

	[Token(Token = "0x6001538")]
	[Address(RVA = "0x1D7BCB0", Offset = "0x1D7BCB0", VA = "0x1D7BCB0")]
	public void AddSoftForce(Vector3 force, float frames)
	{
	}

	[Token(Token = "0x6001539")]
	[Address(RVA = "0x1D7BADC", Offset = "0x1D7BADC", VA = "0x1D7BADC")]
	protected void Move()
	{
	}

	[Token(Token = "0x600153A")]
	[Address(RVA = "0x1D7BC30", Offset = "0x1D7BC30", VA = "0x1D7BC30")]
	public void Reset()
	{
	}

	[Token(Token = "0x600153B")]
	[Address(RVA = "0x1D70150", Offset = "0x1D70150", VA = "0x1D70150")]
	public void Stop(bool includeSoftForce = false)
	{
	}

	[Token(Token = "0x600153C")]
	[Address(RVA = "0x1D7BEA8", Offset = "0x1D7BEA8", VA = "0x1D7BEA8")]
	public void StopSoftForce()
	{
	}

	[Token(Token = "0x600153D")]
	[Address(RVA = "0x1D6FFE8", Offset = "0x1D6FFE8", VA = "0x1D6FFE8")]
	public void ForceVelocityFadeIn(float seconds)
	{
	}
}
[Token(Token = "0x20002B6")]
public class ShieldHitEffects : BaseWeaponHitEffect
{
	[Token(Token = "0x20005E2")]
	public enum dir
	{
		[Token(Token = "0x40021B6")]
		none,
		[Token(Token = "0x40021B7")]
		left,
		[Token(Token = "0x40021B8")]
		right,
		[Token(Token = "0x40021B9")]
		up,
		[Token(Token = "0x40021BA")]
		down
	}

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform centerPoint;

	[Token(Token = "0x400123F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 rect;

	[Token(Token = "0x4001240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float x_borderValue;

	[Token(Token = "0x4001241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float y_borderValue;

	[Token(Token = "0x4001242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject effect;

	[Token(Token = "0x600153E")]
	[Address(RVA = "0x12662E4", Offset = "0x12662E4", VA = "0x12662E4", Slot = "4")]
	public override void HitEffect(WUnit unit, Vector3 _hitPos, Vector3 _hitNormal)
	{
	}

	[Token(Token = "0x600153F")]
	[Address(RVA = "0x1266414", Offset = "0x1266414", VA = "0x1266414")]
	public dir GetDir(Vector3 _hitPos)
	{
		return default(dir);
	}

	[Token(Token = "0x6001540")]
	[Address(RVA = "0x1266604", Offset = "0x1266604", VA = "0x1266604")]
	public ShieldHitEffects()
	{
	}
}
[Token(Token = "0x20002B7")]
public class ShieldHitHaptics : BaseWeaponHitEffect
{
	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticsTools.VirtualPart VirtualPart;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE8714", Offset = "0xEE8714")]
	public byte level;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int time;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FollowVRController followVRController;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float hapticPulseDuration;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve hapticPulseCurve;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ushort hapticPulseVlaue;

	[Token(Token = "0x6001541")]
	[Address(RVA = "0x1266618", Offset = "0x1266618", VA = "0x1266618", Slot = "4")]
	public override void HitEffect(WUnit unit, Vector3 _hitPos, Vector3 _hitNormal)
	{
	}

	[Token(Token = "0x6001542")]
	[Address(RVA = "0x12667AC", Offset = "0x12667AC", VA = "0x12667AC")]
	public ShieldHitHaptics()
	{
	}
}
[Token(Token = "0x20002B8")]
public abstract class Weapon : MonoBehaviour
{
	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE8730", Offset = "0xEE8730")]
	private WUnit <Owner>k__BackingField;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WeaponAttribute attributeTable;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<WUnit> weaponFireAct;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<WUnit> WeaponInitAct;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE8740", Offset = "0xEE8740")]
	private int <WeaponId>k__BackingField;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8750", Offset = "0xEE8750")]
	public e_weapon_type WeaponType;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool IsCheckBulletCount;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool IsCheckMagazin;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8788", Offset = "0xEE8788")]
	public Transform FirePoint;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float FireForwardOffset;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject AimLine;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE87C0", Offset = "0xEE87C0")]
	public Light ShootLight;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int ShootLightCloseFrame;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool IsLocalReloadBullet;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool IsAutoReloadBullet;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE87F8", Offset = "0xEE87F8")]
	public float DownReloadEndAngle;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8830", Offset = "0xEE8830")]
	public Transform LeftHandTarget;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform RightHandTarget;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8868", Offset = "0xEE8868")]
	public bool IsBelongToLocalPlayer;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	[SerializeField]
	private bool IsUseRecoil;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected WeaponMotion mWeaponMotion;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool mIsRecoiling;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int mFirBulletNum;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float mNotFirTime;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE88B0", Offset = "0xEE88B0")]
	[SerializeField]
	private int mBeginSpreadBulletMinNum;

	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE88FC", Offset = "0xEE88FC")]
	[SerializeField]
	private int mBeginSpreadBulletMaxNum;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8948", Offset = "0xEE8948")]
	[SerializeField]
	private float mRecoilMinOffsetX;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8994", Offset = "0xEE8994")]
	[SerializeField]
	private float mRecoilMaxOffsetX;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE89E0", Offset = "0xEE89E0")]
	[SerializeField]
	private float mRecoilAddMinOffsetY;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8A2C", Offset = "0xEE8A2C")]
	[SerializeField]
	private float mRecoilAddMaxOffsetY;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8A78", Offset = "0xEE8A78")]
	[SerializeField]
	private float mRecoilTotalMaxOffsetY;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float mCurTotalOffsetY;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float mCurSpreadBulletNum;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8AC4", Offset = "0xEE8AC4")]
	public Vector3 MotionPositionRecoil;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public Vector3 MotionRotationRecoil;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float MotionRotationRecoilDeadZone;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8AFC", Offset = "0xEE8AFC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE8AFC", Offset = "0xEE8AFC")]
	public float MotionPositionReset;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE8B50", Offset = "0xEE8B50")]
	public float MotionRotationReset;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float MotionPositionPause;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float MotionRotationPause;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8B68", Offset = "0xEE8B68")]
	public SwitchInfoData audioSwitch;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public SwitchInfoData audioSwitch_local;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public SwitchInfoData audioSwitch_other;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioEvent ShootAudio;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public bool ShootAudio_UseAudioSwitchGroup;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameObject ShootObject;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioEvent ShellAudio;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public bool ShellAudio_UseAudioSwitchGroup;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject ShellObject;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioEvent NoBulletAudio;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public bool NoBulletAudio_UseAudioSwitchGroup;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject NoBulletObject;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public AudioEvent ReloadBulletAudio;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public bool ReloadBulletAudio_UseAudioSwitchGroup;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject ReloadObject;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public AudioEvent ReloadMagazineAudio;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public bool ReloadMagazineAudio_UseAudioSwitchGroup;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject ReloadMagazineObject;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AudioEvent EmptyMagazineAudio;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public bool EmptyMagazineAudio_UseAudioSwitchGroup;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject EmptyMagazineObject;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public AudioEvent Gun_TransitionAudio;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public bool Gun_TransitionAudio_UseAudioSwitchGroup;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8BA0", Offset = "0xEE8BA0")]
	public GameObject ChildNode;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Vector3 ChildRot;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private bool isShowShootLight;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
	private bool isFire;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float fireIntervalTimer;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE8BD8", Offset = "0xEE8BD8")]
	private int <CurBulletCount>k__BackingField;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8BE8", Offset = "0xEE8BE8")]
	public int SingleShots;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE8C20", Offset = "0xEE8C20")]
	private int <CurrentMagazineValue>k__BackingField;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int ShootLightTimer;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private float lastAngle;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8C30", Offset = "0xEE8C30")]
	public bool IsCheckObstacle;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public float CheckObstacleTime;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Collider CheckObstacleCollider;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private RendererConfigMono rendererConfigMono;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private MaterialPropertyBlock prop;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private int colorId;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private int colorId2;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	protected bool isEnterObstacle;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private float enterObstacleTimer;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public BaseUI banUI;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8C68", Offset = "0xEE8C68")]
	public HapticsTools.VirtualPart hapticsVirtualPart;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE8CA0", Offset = "0xEE8CA0")]
	public byte hapticsLevel;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public int hapticsTime;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8CBC", Offset = "0xEE8CBC")]
	public bool isNeedPlayAni;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Animator animator;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public string Ani_IdleState;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public string Ani_ReloadState;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public string Ani_FireState;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public float reloadTime;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public float reloadPreTime;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public float gun_clip_destory_Time;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject[] AniObj_Close;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public GameObject gun_clip_obj;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	protected bool isReloading;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Coroutine reloadCoroutine;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	private GameObject gun_clip_obj_exploed;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private Coroutine reloadPreCoroutine;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8CF4", Offset = "0xEE8CF4")]
	public WeaponInfoUI infoUI;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8D2C", Offset = "0xEE8D2C")]
	public FollowVRController followVRController;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public float hapticPulseDuration;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public AnimationCurve hapticPulseCurve;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public float hapticPulseVlaue;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE8D64", Offset = "0xEE8D64")]
	private ComponentCacheTools <cacheTools>k__BackingField;

	[Token(Token = "0x170001DC")]
	public WUnit Owner
	{
		[Token(Token = "0x6001543")]
		[Address(RVA = "0x1320D90", Offset = "0x1320D90", VA = "0x1320D90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0A78", Offset = "0xEF0A78")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001544")]
		[Address(RVA = "0x1320D98", Offset = "0x1320D98", VA = "0x1320D98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0A88", Offset = "0xEF0A88")]
		private set
		{
		}
	}

	[Token(Token = "0x170001DD")]
	public int WeaponId
	{
		[Token(Token = "0x6001545")]
		[Address(RVA = "0x1320DA0", Offset = "0x1320DA0", VA = "0x1320DA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0A98", Offset = "0xEF0A98")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001546")]
		[Address(RVA = "0x1320DA8", Offset = "0x1320DA8", VA = "0x1320DA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0AA8", Offset = "0xEF0AA8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001DE")]
	public string weaponName
	{
		[Token(Token = "0x6001547")]
		[Address(RVA = "0x1320DB0", Offset = "0x1320DB0", VA = "0x1320DB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001DF")]
	public int Atk
	{
		[Token(Token = "0x6001548")]
		[Address(RVA = "0x1320E14", Offset = "0x1320E14", VA = "0x1320E14")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001E0")]
	public int HeadPer
	{
		[Token(Token = "0x6001549")]
		[Address(RVA = "0x1320E3C", Offset = "0x1320E3C", VA = "0x1320E3C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001E1")]
	public float fireInterval
	{
		[Token(Token = "0x600154A")]
		[Address(RVA = "0x1320E54", Offset = "0x1320E54", VA = "0x1320E54")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001E2")]
	public int bulletForce
	{
		[Token(Token = "0x600154B")]
		[Address(RVA = "0x1320E7C", Offset = "0x1320E7C", VA = "0x1320E7C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001E3")]
	public int MaxBulletCount
	{
		[Token(Token = "0x600154C")]
		[Address(RVA = "0x1320E94", Offset = "0x1320E94", VA = "0x1320E94")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001E4")]
	public int MaximumMagazineValue
	{
		[Token(Token = "0x600154D")]
		[Address(RVA = "0x1320EBC", Offset = "0x1320EBC", VA = "0x1320EBC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001E5")]
	protected bool IsFire
	{
		[Token(Token = "0x600154E")]
		[Address(RVA = "0x1320EE4", Offset = "0x1320EE4", VA = "0x1320EE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600154F")]
		[Address(RVA = "0x1320EEC", Offset = "0x1320EEC", VA = "0x1320EEC")]
		set
		{
		}
	}

	[Token(Token = "0x170001E6")]
	[HideInInspector]
	public int CurBulletCount
	{
		[Token(Token = "0x6001550")]
		[Address(RVA = "0x1320EF8", Offset = "0x1320EF8", VA = "0x1320EF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0AB8", Offset = "0xEF0AB8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001551")]
		[Address(RVA = "0x1320F00", Offset = "0x1320F00", VA = "0x1320F00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0AC8", Offset = "0xEF0AC8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E7")]
	[HideInInspector]
	public int CurrentMagazineValue
	{
		[Token(Token = "0x6001552")]
		[Address(RVA = "0x1320F08", Offset = "0x1320F08", VA = "0x1320F08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0AD8", Offset = "0xEF0AD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001553")]
		[Address(RVA = "0x1320F10", Offset = "0x1320F10", VA = "0x1320F10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0AE8", Offset = "0xEF0AE8")]
		private set
		{
		}
	}

	[Token(Token = "0x170001E8")]
	public bool IsReloading
	{
		[Token(Token = "0x6001554")]
		[Address(RVA = "0x1320F18", Offset = "0x1320F18", VA = "0x1320F18")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001E9")]
	public ComponentCacheTools cacheTools
	{
		[Token(Token = "0x6001555")]
		[Address(RVA = "0x1320F20", Offset = "0x1320F20", VA = "0x1320F20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0AF8", Offset = "0xEF0AF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001556")]
		[Address(RVA = "0x1320F28", Offset = "0x1320F28", VA = "0x1320F28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0B08", Offset = "0xEF0B08")]
		private set
		{
		}
	}

	[Token(Token = "0x6001557")]
	[Address(RVA = "0x1320F38", Offset = "0x1320F38", VA = "0x1320F38", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001558")]
	[Address(RVA = "0x1321018", Offset = "0x1321018", VA = "0x1321018", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6001559")]
	[Address(RVA = "0x1321214", Offset = "0x1321214", VA = "0x1321214", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600155A")]
	[Address(RVA = "0x132141C", Offset = "0x132141C", VA = "0x132141C", Slot = "7")]
	protected virtual void OnCheckObstacleEnter(Collider c1, Collider c2)
	{
	}

	[Token(Token = "0x600155B")]
	[Address(RVA = "0x13215A0", Offset = "0x13215A0", VA = "0x13215A0", Slot = "8")]
	protected virtual void EnterObstacle()
	{
	}

	[Token(Token = "0x600155C")]
	[Address(RVA = "0x1321850", Offset = "0x1321850", VA = "0x1321850", Slot = "9")]
	protected virtual void ExitObstacle()
	{
	}

	[Token(Token = "0x600155D")]
	[Address(RVA = "0x1321AF0", Offset = "0x1321AF0", VA = "0x1321AF0", Slot = "10")]
	public virtual void Init(WUnit owner, int id, WeaponAttribute weaponAttribute, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x600155E")]
	[Address(RVA = "0x1322040", Offset = "0x1322040", VA = "0x1322040", Slot = "11")]
	public virtual void InitAudioSwitch()
	{
	}

	[Token(Token = "0x600155F")]
	[Address(RVA = "0x1322044", Offset = "0x1322044", VA = "0x1322044", Slot = "12")]
	public virtual void DoUpdate()
	{
	}

	[Token(Token = "0x6001560")]
	[Address(RVA = "0x1322490", Offset = "0x1322490", VA = "0x1322490", Slot = "13")]
	public virtual void PreFireLogic()
	{
	}

	[Token(Token = "0x6001561")]
	[Address(RVA = "0x1322A4C", Offset = "0x1322A4C", VA = "0x1322A4C")]
	public void SyncFireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001562")]
	[Address(RVA = "0x1322A50", Offset = "0x1322A50", VA = "0x1322A50")]
	public void SyncReloadLogic(bool isNeedAni)
	{
	}

	[Token(Token = "0x6001563")]
	[Address(RVA = "0x1322A64", Offset = "0x1322A64", VA = "0x1322A64")]
	public void SyncFireEffectLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001564")]
	[Address(RVA = "0x1322730", Offset = "0x1322730", VA = "0x1322730")]
	protected void Fire(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001565")]
	[Address(RVA = "0x1322F34", Offset = "0x1322F34", VA = "0x1322F34", Slot = "14")]
	protected virtual void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001566")]
	[Address(RVA = "0x1322F38", Offset = "0x1322F38", VA = "0x1322F38", Slot = "15")]
	protected virtual void FireEffectLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001567")]
	[Address(RVA = "0x1322F3C", Offset = "0x1322F3C", VA = "0x1322F3C", Slot = "16")]
	protected virtual Vector3 GetFirePointPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001568")]
	[Address(RVA = "0x1323014", Offset = "0x1323014", VA = "0x1323014", Slot = "17")]
	public virtual void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x6001569")]
	[Address(RVA = "0x1323028", Offset = "0x1323028", VA = "0x1323028", Slot = "18")]
	protected virtual bool CheckFireInterval(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x600156A")]
	[Address(RVA = "0x1323078", Offset = "0x1323078", VA = "0x1323078", Slot = "19")]
	public virtual bool CheckBulletCount()
	{
		return default(bool);
	}

	[Token(Token = "0x600156B")]
	[Address(RVA = "0x1322A74", Offset = "0x1322A74", VA = "0x1322A74")]
	private void ReduceBulletCount()
	{
	}

	[Token(Token = "0x600156C")]
	[Address(RVA = "0x1322374", Offset = "0x1322374", VA = "0x1322374")]
	private void PreReloadBullet(bool isNeedAni)
	{
	}

	[Token(Token = "0x600156D")]
	[Address(RVA = "0x1323088", Offset = "0x1323088", VA = "0x1323088", Slot = "20")]
	public virtual void ReloadBullet(bool isNeedPlayAni)
	{
	}

	[Token(Token = "0x600156E")]
	[Address(RVA = "0x13234E0", Offset = "0x13234E0", VA = "0x13234E0")]
	public void ReloadMagazine(int value)
	{
	}

	[Token(Token = "0x600156F")]
	[Address(RVA = "0x13235B4", Offset = "0x13235B4", VA = "0x13235B4")]
	private float GetModifiedAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x6001570")]
	[Address(RVA = "0x13235EC", Offset = "0x13235EC", VA = "0x13235EC", Slot = "21")]
	public virtual bool CheckReloadAction()
	{
		return default(bool);
	}

	[Token(Token = "0x6001571")]
	[Address(RVA = "0x1321EBC", Offset = "0x1321EBC", VA = "0x1321EBC")]
	protected void InitShootLight()
	{
	}

	[Token(Token = "0x6001572")]
	[Address(RVA = "0x1322B0C", Offset = "0x1322B0C", VA = "0x1322B0C")]
	protected void EnableShootLight()
	{
	}

	[Token(Token = "0x6001573")]
	[Address(RVA = "0x1322420", Offset = "0x1322420", VA = "0x1322420")]
	protected void UpdateShootLight()
	{
	}

	[Token(Token = "0x6001574")]
	[Address(RVA = "0x13236F8", Offset = "0x13236F8", VA = "0x13236F8")]
	protected bool IsLocalPlayer()
	{
		return default(bool);
	}

	[Token(Token = "0x6001575")]
	[Address(RVA = "0x13237B8", Offset = "0x13237B8", VA = "0x13237B8")]
	public void SetAimLineStatus(bool status)
	{
	}

	[Token(Token = "0x6001576")]
	[Address(RVA = "0x1323860", Offset = "0x1323860", VA = "0x1323860")]
	public void SetShootLightStatus(bool status)
	{
	}

	[Token(Token = "0x6001577")]
	[Address(RVA = "0x1321F54", Offset = "0x1321F54", VA = "0x1321F54")]
	public void SetAniCloseObjActive(bool isActive)
	{
	}

	[Token(Token = "0x6001578")]
	[Address(RVA = "0x1323868", Offset = "0x1323868", VA = "0x1323868")]
	private int GetBeginSpreadNum()
	{
		return default(int);
	}

	[Token(Token = "0x6001579")]
	[Address(RVA = "0x1323878", Offset = "0x1323878", VA = "0x1323878")]
	private float GetOffsetX()
	{
		return default(float);
	}

	[Token(Token = "0x600157A")]
	[Address(RVA = "0x1323884", Offset = "0x1323884", VA = "0x1323884")]
	private float GetOffsetY()
	{
		return default(float);
	}

	[Token(Token = "0x600157B")]
	[Address(RVA = "0x1322BC4", Offset = "0x1322BC4", VA = "0x1322BC4")]
	private void SetRecoilSpread()
	{
	}

	[Token(Token = "0x600157C")]
	[Address(RVA = "0x132231C", Offset = "0x132231C", VA = "0x132231C")]
	private void CheckNotFirUpdate(float dt)
	{
	}

	[Token(Token = "0x600157D")]
	[Address(RVA = "0x1323890", Offset = "0x1323890", VA = "0x1323890")]
	private void ResetNoFirStatus()
	{
	}

	[Token(Token = "0x600157E")]
	[Address(RVA = "0x1322BAC", Offset = "0x1322BAC", VA = "0x1322BAC")]
	private bool CheckCanRecoilAngleOffset()
	{
		return default(bool);
	}

	[Token(Token = "0x600157F")]
	[Address(RVA = "0x1322C9C", Offset = "0x1322C9C", VA = "0x1322C9C")]
	protected void ApplyRecoil()
	{
	}

	[Token(Token = "0x6001580")]
	[Address(RVA = "0x1323920", Offset = "0x1323920", VA = "0x1323920")]
	protected Weapon()
	{
	}

	[Token(Token = "0x6001581")]
	[Address(RVA = "0x1323AA8", Offset = "0x1323AA8", VA = "0x1323AA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0B18", Offset = "0xEF0B18")]
	private void <ReloadBullet>b__162_0()
	{
	}

	[Token(Token = "0x6001582")]
	[Address(RVA = "0x1323C08", Offset = "0x1323C08", VA = "0x1323C08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0B28", Offset = "0xEF0B28")]
	private void <ReloadBullet>b__162_2()
	{
	}

	[Token(Token = "0x6001583")]
	[Address(RVA = "0x1323C9C", Offset = "0x1323C9C", VA = "0x1323C9C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0B38", Offset = "0xEF0B38")]
	private void <ReloadBullet>b__162_1()
	{
	}

	[Token(Token = "0x6001584")]
	[Address(RVA = "0x1323DC8", Offset = "0x1323DC8", VA = "0x1323DC8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0B48", Offset = "0xEF0B48")]
	private void <ReloadBullet>b__162_3()
	{
	}
}
[Token(Token = "0x20002B9")]
public class Weapon_Gatling : Weapon
{
	[Token(Token = "0x20005E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4FB0", Offset = "0xEE4FB0")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x40021BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon_Gatling <>4__this;

		[Token(Token = "0x40021BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float effectDistance;

		[Token(Token = "0x6002D10")]
		[Address(RVA = "0x1D723E0", Offset = "0x1D723E0", VA = "0x1D723E0")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x6002D11")]
		[Address(RVA = "0x1D726A4", Offset = "0x1D726A4", VA = "0x1D726A4")]
		internal void <SpawnEffectBullet>b__0(Bullet go)
		{
		}
	}

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8D74", Offset = "0xEE8D74")]
	public Transform ShellPoint;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE8DAC", Offset = "0xEE8DAC")]
	public float ScatterCoefficient;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject ShellEffectPrefab;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public GameObject BulletPrefab;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public GameObject BulletParticlePrefab;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private GameObject BulletParticleObj;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private ParticleSystem BulletParticleSystem;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	private List<Transform> addFirePointList;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8DC4", Offset = "0xEE8DC4")]
	public GameObject BulletEffectPrefab_Local;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8DFC", Offset = "0xEE8DFC")]
	public GameObject BulletEffectPrefab_Other;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8E34", Offset = "0xEE8E34")]
	public float bulletEffectInterval;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	public float moveSpeed;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public float bulletOffset;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	public Vector2 randOffset;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	public float minShowDistance;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public float delayDestroy;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private float fireEffectCoolDown;

	[Token(Token = "0x6001585")]
	[Address(RVA = "0x1D71A3C", Offset = "0x1D71A3C", VA = "0x1D71A3C", Slot = "10")]
	public override void Init(WUnit owner, int id, WeaponAttribute weaponAttribute, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x6001586")]
	[Address(RVA = "0x1D71B38", Offset = "0x1D71B38", VA = "0x1D71B38", Slot = "16")]
	protected override Vector3 GetFirePointPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001587")]
	[Address(RVA = "0x1D71C94", Offset = "0x1D71C94", VA = "0x1D71C94", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001588")]
	[Address(RVA = "0x1D71EA8", Offset = "0x1D71EA8", VA = "0x1D71EA8", Slot = "15")]
	protected override void FireEffectLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001589")]
	[Address(RVA = "0x1D721B8", Offset = "0x1D721B8", VA = "0x1D721B8")]
	private void SpawnEffectBullet(GameObject prefab, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600158A")]
	[Address(RVA = "0x1D723E8", Offset = "0x1D723E8", VA = "0x1D723E8", Slot = "12")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x600158B")]
	[Address(RVA = "0x1D72630", Offset = "0x1D72630", VA = "0x1D72630")]
	protected bool CheckFireEffectInterval(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x600158C")]
	[Address(RVA = "0x1D72668", Offset = "0x1D72668", VA = "0x1D72668", Slot = "17")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x600158D")]
	[Address(RVA = "0x1D7269C", Offset = "0x1D7269C", VA = "0x1D7269C")]
	public Weapon_Gatling()
	{
	}
}
[Token(Token = "0x20002BA")]
public class Weapon_Magic : Weapon
{
	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public GameObject BulletPrefab;

	[Token(Token = "0x600158E")]
	[Address(RVA = "0x1D72858", Offset = "0x1D72858", VA = "0x1D72858", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600158F")]
	[Address(RVA = "0x1D72A44", Offset = "0x1D72A44", VA = "0x1D72A44", Slot = "17")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x6001590")]
	[Address(RVA = "0x1D72A54", Offset = "0x1D72A54", VA = "0x1D72A54")]
	public Weapon_Magic()
	{
	}
}
[Token(Token = "0x20002BB")]
public class Weapon_PlaneScattering : Weapon
{
	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public float fireRangeDistance;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public int bulletNumber;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject BulletPrefab;

	[Token(Token = "0x6001591")]
	[Address(RVA = "0x1D72A5C", Offset = "0x1D72A5C", VA = "0x1D72A5C", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001592")]
	[Address(RVA = "0x1D72E18", Offset = "0x1D72E18", VA = "0x1D72E18")]
	public Weapon_PlaneScattering()
	{
	}
}
[Token(Token = "0x20002BC")]
public class Weapon_PlaneScattering2 : Weapon
{
	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public float fireRangeDistance;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public int bulletNumber;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject BulletPrefab;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public List<Transform> ShootList;

	[Token(Token = "0x6001593")]
	[Address(RVA = "0x1D72E2C", Offset = "0x1D72E2C", VA = "0x1D72E2C", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001594")]
	[Address(RVA = "0x1D730D0", Offset = "0x1D730D0", VA = "0x1D730D0")]
	public Weapon_PlaneScattering2()
	{
	}
}
[Token(Token = "0x20002BD")]
public class Weapon_Rifle : Weapon
{
	[Token(Token = "0x20005E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4FC0", Offset = "0xEE4FC0")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x40021BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Weapon_Rifle <>4__this;

		[Token(Token = "0x40021BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float effectDistance;

		[Token(Token = "0x6002D12")]
		[Address(RVA = "0x1D73580", Offset = "0x1D73580", VA = "0x1D73580")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6002D13")]
		[Address(RVA = "0x1D735C0", Offset = "0x1D735C0", VA = "0x1D735C0")]
		internal void <FireEffectLogic>b__0(Bullet go)
		{
		}
	}

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8E6C", Offset = "0xEE8E6C")]
	public Transform ShellPoint;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE8EA4", Offset = "0xEE8EA4")]
	public float ScatterCoefficient;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject ShellEffectPrefab;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public GameObject BulletPrefab;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public GameObject BulletParticlePrefab;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private GameObject BulletParticleObj;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	private ParticleSystem BulletParticleSystem;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8EBC", Offset = "0xEE8EBC")]
	public GameObject BulletEffectPrefab_Local;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8EF4", Offset = "0xEE8EF4")]
	public GameObject BulletEffectPrefab_Other;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE8F2C", Offset = "0xEE8F2C")]
	public float bulletEffectInterval;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	public float moveSpeed;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public float bulletOffset;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	public Vector2 randOffset;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	public float minShowDistance;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public float delayDestroy;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	private float fireEffectCoolDown;

	[Token(Token = "0x6001595")]
	[Address(RVA = "0x1D70D68", Offset = "0x1D70D68", VA = "0x1D70D68", Slot = "10")]
	public override void Init(WUnit owner, int id, WeaponAttribute weaponAttribute, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x6001596")]
	[Address(RVA = "0x1D70D78", Offset = "0x1D70D78", VA = "0x1D70D78", Slot = "16")]
	protected override Vector3 GetFirePointPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001597")]
	[Address(RVA = "0x1D730E4", Offset = "0x1D730E4", VA = "0x1D730E4", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001598")]
	[Address(RVA = "0x1D732DC", Offset = "0x1D732DC", VA = "0x1D732DC", Slot = "15")]
	protected override void FireEffectLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001599")]
	[Address(RVA = "0x1D71118", Offset = "0x1D71118", VA = "0x1D71118", Slot = "12")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x600159A")]
	[Address(RVA = "0x1D73588", Offset = "0x1D73588", VA = "0x1D73588")]
	protected bool CheckFireEffectInterval(float deltaTime)
	{
		return default(bool);
	}

	[Token(Token = "0x600159B")]
	[Address(RVA = "0x1D713B8", Offset = "0x1D713B8", VA = "0x1D713B8", Slot = "17")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x600159C")]
	[Address(RVA = "0x1D713F4", Offset = "0x1D713F4", VA = "0x1D713F4")]
	public Weapon_Rifle()
	{
	}
}
[Token(Token = "0x20002BE")]
public class Weapon_RocketLauncher : Weapon
{
	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public GameObject BulletObj;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject BulletPrefab;

	[Token(Token = "0x600159D")]
	[Address(RVA = "0x1D73774", Offset = "0x1D73774", VA = "0x1D73774", Slot = "10")]
	public override void Init(WUnit owner, int id, WeaponAttribute weaponAttribute, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x600159E")]
	[Address(RVA = "0x1D737B0", Offset = "0x1D737B0", VA = "0x1D737B0", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600159F")]
	[Address(RVA = "0x1D73914", Offset = "0x1D73914", VA = "0x1D73914", Slot = "12")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x60015A0")]
	[Address(RVA = "0x1D73A64", Offset = "0x1D73A64", VA = "0x1D73A64")]
	public Weapon_RocketLauncher()
	{
	}
}
[Token(Token = "0x20002BF")]
public class Weapon_Shield : Weapon
{
	[Token(Token = "0x60015A1")]
	[Address(RVA = "0x1D73A6C", Offset = "0x1D73A6C", VA = "0x1D73A6C", Slot = "12")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x60015A2")]
	[Address(RVA = "0x1D73A70", Offset = "0x1D73A70", VA = "0x1D73A70", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60015A3")]
	[Address(RVA = "0x1D73A74", Offset = "0x1D73A74", VA = "0x1D73A74", Slot = "13")]
	public override void PreFireLogic()
	{
	}

	[Token(Token = "0x60015A4")]
	[Address(RVA = "0x1D73A78", Offset = "0x1D73A78", VA = "0x1D73A78", Slot = "17")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x60015A5")]
	[Address(RVA = "0x1D73A7C", Offset = "0x1D73A7C", VA = "0x1D73A7C", Slot = "20")]
	public override void ReloadBullet(bool isNeedPlayAni)
	{
	}

	[Token(Token = "0x60015A6")]
	[Address(RVA = "0x1D73A80", Offset = "0x1D73A80", VA = "0x1D73A80")]
	public Weapon_Shield()
	{
	}
}
[Token(Token = "0x20002C0")]
public class Weapon_ShotGun : Weapon
{
	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public float fireRange;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public float fireRangeDistance;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public int bulletNumber;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Transform ShellPoint;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public GameObject ShellEffectPrefab;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public GameObject BulletPrefab;

	[Token(Token = "0x60015A7")]
	[Address(RVA = "0x1D73A88", Offset = "0x1D73A88", VA = "0x1D73A88", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60015A8")]
	[Address(RVA = "0x1D73E4C", Offset = "0x1D73E4C", VA = "0x1D73E4C", Slot = "17")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x60015A9")]
	[Address(RVA = "0x1D73E5C", Offset = "0x1D73E5C", VA = "0x1D73E5C")]
	public Weapon_ShotGun()
	{
	}
}
[Token(Token = "0x20002C1")]
public class Weapon_Throw : Weapon
{
	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject BulletPrefab;

	[Token(Token = "0x60015AA")]
	[Address(RVA = "0x1D73E78", Offset = "0x1D73E78", VA = "0x1D73E78", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60015AB")]
	[Address(RVA = "0x1D7411C", Offset = "0x1D7411C", VA = "0x1D7411C")]
	public Weapon_Throw()
	{
	}
}
[Token(Token = "0x20002C2")]
public class HapticsConfig : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005E5")]
	public class PointCell
	{
		[Token(Token = "0x40021BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x40021C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Pos pos;

		[Token(Token = "0x40021C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Pos penetration_Pos;

		[Token(Token = "0x6002D14")]
		[Address(RVA = "0x1274AFC", Offset = "0x1274AFC", VA = "0x1274AFC")]
		public PointCell()
		{
		}
	}

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public PointCell pointCell;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public PointCell[] pointCells;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HapticsTools.VirtualPart hapticsPart;

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public HapticsTools.TriggerType triggerType;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 size;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool IsPenetration;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int grid_count_x;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int grid_count_y;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HapticsTools tools;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<int> templist;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<TactSource> tempSources;

	[Token(Token = "0x60015AC")]
	[Address(RVA = "0x12741A0", Offset = "0x12741A0", VA = "0x12741A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015AD")]
	[Address(RVA = "0x1274314", Offset = "0x1274314", VA = "0x1274314")]
	public void Play(byte level, int timeMillis)
	{
	}

	[Token(Token = "0x60015AE")]
	[Address(RVA = "0x12747EC", Offset = "0x12747EC", VA = "0x12747EC")]
	public void GetScopePoints(int id, ref List<int> scopePoints)
	{
	}

	[Token(Token = "0x60015AF")]
	[Address(RVA = "0x1274A44", Offset = "0x1274A44", VA = "0x1274A44")]
	public HapticsConfig()
	{
	}
}
[Token(Token = "0x20002C3")]
[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE269C", Offset = "0xEE269C")]
public class HapticsTools : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005E6")]
	public class Part2VirtualPartCell
	{
		[Token(Token = "0x40021C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject partType;

		[Token(Token = "0x40021C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VirtualPart virtualPartType;

		[Token(Token = "0x6002D15")]
		[Address(RVA = "0x1275564", Offset = "0x1275564", VA = "0x1275564")]
		public Part2VirtualPartCell()
		{
		}
	}

	[Token(Token = "0x20005E7")]
	public enum VirtualPart
	{
		[Token(Token = "0x40021C5")]
		None = 0,
		[Token(Token = "0x40021C6")]
		Body = 1,
		[Token(Token = "0x40021C7")]
		Head = 5,
		[Token(Token = "0x40021C8")]
		Hand_Left = 6,
		[Token(Token = "0x40021C9")]
		Hand_Right = 7,
		[Token(Token = "0x40021CA")]
		Arm_Left = 8,
		[Token(Token = "0x40021CB")]
		Arm_Right = 9,
		[Token(Token = "0x40021CC")]
		Leg_Left = 10,
		[Token(Token = "0x40021CD")]
		Leg_Right = 11
	}

	[Token(Token = "0x20005E8")]
	public enum TriggerType
	{
		[Token(Token = "0x40021CF")]
		Point2Point,
		[Token(Token = "0x40021D0")]
		Point2Multipoint
	}

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<GameObject, VirtualPart> Part2VirtualPartDic;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<VirtualPart, List<HapticsConfig>> pointsDic;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<Pos, TactSource> realityPartDic;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<Part2VirtualPartCell> part2VirtualPartCells;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isRun;

	[Token(Token = "0x60015B1")]
	[Address(RVA = "0x1274B04", Offset = "0x1274B04", VA = "0x1274B04")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015B2")]
	[Address(RVA = "0x1274CB0", Offset = "0x1274CB0", VA = "0x1274CB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60015B3")]
	[Address(RVA = "0x1274214", Offset = "0x1274214", VA = "0x1274214")]
	public void Register(HapticsConfig hapticsConfig)
	{
	}

	[Token(Token = "0x60015B4")]
	[Address(RVA = "0x1274EAC", Offset = "0x1274EAC", VA = "0x1274EAC")]
	public void PlayPart(GameObject part, Vector3 hitPoint, byte level, int timeMillis)
	{
	}

	[Token(Token = "0x60015B5")]
	[Address(RVA = "0x12752D8", Offset = "0x12752D8", VA = "0x12752D8")]
	public void PlayAll(byte level, int timeMillis)
	{
	}

	[Token(Token = "0x60015B6")]
	[Address(RVA = "0x1274F80", Offset = "0x1274F80", VA = "0x1274F80")]
	public void PlayPoint(VirtualPart part, Vector3 hitPoint, byte level, int timeMillis)
	{
	}

	[Token(Token = "0x60015B7")]
	[Address(RVA = "0x127495C", Offset = "0x127495C", VA = "0x127495C")]
	public TactSource GetTactSource(Pos pos)
	{
		return null;
	}

	[Token(Token = "0x60015B8")]
	[Address(RVA = "0x1275480", Offset = "0x1275480", VA = "0x1275480")]
	public HapticsTools()
	{
	}
}
[Token(Token = "0x20002C4")]
public class AnimationGear : BaseHurtGear
{
	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Collider collisionCom;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float closeDelay;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Animator animatorCom;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private string animationStateName;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private GameObject[] closeObjs;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float timer;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool isCloseDelay;

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0x15591F4", Offset = "0x15591F4", VA = "0x15591F4", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60015BA")]
	[Address(RVA = "0x1559428", Offset = "0x1559428", VA = "0x1559428", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60015BB")]
	[Address(RVA = "0x15594E0", Offset = "0x15594E0", VA = "0x15594E0", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60015BC")]
	[Address(RVA = "0x15596BC", Offset = "0x15596BC", VA = "0x15596BC", Slot = "26")]
	public override void DoGearBrokenEffect()
	{
	}

	[Token(Token = "0x60015BD")]
	[Address(RVA = "0x1559798", Offset = "0x1559798", VA = "0x1559798")]
	private void CloseDecal()
	{
	}

	[Token(Token = "0x60015BE")]
	[Address(RVA = "0x155988C", Offset = "0x155988C", VA = "0x155988C")]
	private void Update()
	{
	}

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0x1559A1C", Offset = "0x1559A1C", VA = "0x1559A1C")]
	public AnimationGear()
	{
	}
}
[Token(Token = "0x20002C5")]
public class AxeGear : BaseGear
{
	[Token(Token = "0x20005E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4FD0", Offset = "0xEE4FD0")]
	private sealed class <PlayAni>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AxeGear <>4__this;

		[Token(Token = "0x1700046C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D19")]
			[Address(RVA = "0x1561E80", Offset = "0x1561E80", VA = "0x1561E80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D1B")]
			[Address(RVA = "0x1561EE8", Offset = "0x1561EE8", VA = "0x1561EE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D16")]
		[Address(RVA = "0x1561868", Offset = "0x1561868", VA = "0x1561868")]
		[DebuggerHidden]
		public <PlayAni>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002D17")]
		[Address(RVA = "0x1561DB0", Offset = "0x1561DB0", VA = "0x1561DB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D18")]
		[Address(RVA = "0x1561DB4", Offset = "0x1561DB4", VA = "0x1561DB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D1A")]
		[Address(RVA = "0x1561E88", Offset = "0x1561E88", VA = "0x1561E88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider collider;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Animation animation;

	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float time;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine coroutine;

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0x1561588", Offset = "0x1561588", VA = "0x1561588", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0x15616E8", Offset = "0x15616E8", VA = "0x15616E8", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60015C2")]
	[Address(RVA = "0x15617EC", Offset = "0x15617EC", VA = "0x15617EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF0B58", Offset = "0xEF0B58")]
	private IEnumerator PlayAni()
	{
		return null;
	}

	[Token(Token = "0x60015C3")]
	[Address(RVA = "0x1561894", Offset = "0x1561894", VA = "0x1561894", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60015C4")]
	[Address(RVA = "0x15619DC", Offset = "0x15619DC", VA = "0x15619DC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60015C5")]
	[Address(RVA = "0x1561D20", Offset = "0x1561D20", VA = "0x1561D20")]
	public AxeGear()
	{
	}
}
[Token(Token = "0x20002C6")]
public class DeadAreasGear : BaseGear
{
	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Collider[] deadColliders;

	[Token(Token = "0x60015C6")]
	[Address(RVA = "0x1225F30", Offset = "0x1225F30", VA = "0x1225F30", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60015C7")]
	[Address(RVA = "0x1226024", Offset = "0x1226024", VA = "0x1226024", Slot = "17")]
	public override void GearUnInit()
	{
	}

	[Token(Token = "0x60015C8")]
	[Address(RVA = "0x1226118", Offset = "0x1226118", VA = "0x1226118")]
	private void DoTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60015C9")]
	[Address(RVA = "0x1226374", Offset = "0x1226374", VA = "0x1226374")]
	public DeadAreasGear()
	{
	}
}
[Token(Token = "0x20002C7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE2700", Offset = "0xEE2700")]
public class ElevatorGear : BaseGear
{
	[Token(Token = "0x20005EA")]
	private enum ElevatorState
	{
		[Token(Token = "0x40021D5")]
		Ready,
		[Token(Token = "0x40021D6")]
		PreRun,
		[Token(Token = "0x40021D7")]
		Run,
		[Token(Token = "0x40021D8")]
		RunEnd
	}

	[Token(Token = "0x20005EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4FE0", Offset = "0xEE4FE0")]
	private sealed class <ElevatorStart>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ElevatorGear <>4__this;

		[Token(Token = "0x1700046E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D1F")]
			[Address(RVA = "0x123176C", Offset = "0x123176C", VA = "0x123176C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700046F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D21")]
			[Address(RVA = "0x12317D4", Offset = "0x12317D4", VA = "0x12317D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D1C")]
		[Address(RVA = "0x1231238", Offset = "0x1231238", VA = "0x1231238")]
		[DebuggerHidden]
		public <ElevatorStart>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002D1D")]
		[Address(RVA = "0x1231628", Offset = "0x1231628", VA = "0x1231628", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D1E")]
		[Address(RVA = "0x123162C", Offset = "0x123162C", VA = "0x123162C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D20")]
		[Address(RVA = "0x1231774", Offset = "0x1231774", VA = "0x1231774", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Collider collisionCom;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Animator animatorCom;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private string animationStateName;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float elevatorRunDelay;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private HashSet<int> entryList;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ElevatorState elevatorState;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine coroutine;

	[Token(Token = "0x60015CA")]
	[Address(RVA = "0x1230810", Offset = "0x1230810", VA = "0x1230810", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0x1230A40", Offset = "0x1230A40", VA = "0x1230A40", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0x1230AE8", Offset = "0x1230AE8", VA = "0x1230AE8", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0x1230B90", Offset = "0x1230B90", VA = "0x1230B90")]
	private void Update()
	{
	}

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0x1230F00", Offset = "0x1230F00", VA = "0x1230F00")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60015CF")]
	[Address(RVA = "0x1230FBC", Offset = "0x1230FBC", VA = "0x1230FBC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0x12310B8", Offset = "0x12310B8", VA = "0x12310B8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60015D1")]
	[Address(RVA = "0x12311E4", Offset = "0x12311E4", VA = "0x12311E4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0x12308D4", Offset = "0x12308D4", VA = "0x12308D4")]
	private void ElevatorRestore()
	{
	}

	[Token(Token = "0x60015D3")]
	[Address(RVA = "0x1230E84", Offset = "0x1230E84", VA = "0x1230E84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF0BBC", Offset = "0xEF0BBC")]
	private IEnumerator ElevatorStart()
	{
		return null;
	}

	[Token(Token = "0x60015D4")]
	[Address(RVA = "0x1230F1C", Offset = "0x1230F1C", VA = "0x1230F1C")]
	private void ElevatorUpdate()
	{
	}

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0x1231264", Offset = "0x1231264", VA = "0x1231264")]
	private void UpdatePlayerPos(float height)
	{
	}

	[Token(Token = "0x60015D6")]
	[Address(RVA = "0x1230C00", Offset = "0x1230C00", VA = "0x1230C00")]
	private bool CheckIsCanElevatorRun()
	{
		return default(bool);
	}

	[Token(Token = "0x60015D7")]
	[Address(RVA = "0x12314A4", Offset = "0x12314A4", VA = "0x12314A4")]
	private WUnit GetUnit(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0x1231010", Offset = "0x1231010", VA = "0x1231010")]
	private void EntryElevator(GameObject obj)
	{
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0x1231104", Offset = "0x1231104", VA = "0x1231104")]
	private void ExitElevator(GameObject obj)
	{
	}

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0x12315AC", Offset = "0x12315AC", VA = "0x12315AC")]
	public ElevatorGear()
	{
	}
}
[Token(Token = "0x20002C8")]
public class FlashLight : MonoBehaviour
{
	[Token(Token = "0x20005EC")]
	public enum LightEventType
	{
		[Token(Token = "0x40021DD")]
		Enter,
		[Token(Token = "0x40021DE")]
		Stay,
		[Token(Token = "0x40021DF")]
		Exit
	}

	[Token(Token = "0x20005ED")]
	public struct RayData
	{
		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 position;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 direction;

		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float distance;

		[Token(Token = "0x6002D22")]
		[Address(RVA = "0x1002800", Offset = "0x1002800", VA = "0x1002800")]
		public RayData(Vector3 dir, float range, Vector3 pos)
		{
		}

		[Token(Token = "0x6002D23")]
		[Address(RVA = "0x1002808", Offset = "0x1002808", VA = "0x1002808")]
		public RayData(float x, float y, float spotAngle, float range, Vector3 pos, Quaternion rot, Vector3 forward)
		{
		}
	}

	[Token(Token = "0x20005EE")]
	public class HitInfoList : List<RaycastHit>
	{
		[Token(Token = "0x6002D24")]
		[Address(RVA = "0x132A908", Offset = "0x132A908", VA = "0x132A908")]
		public HitInfoList()
		{
		}

		[Token(Token = "0x6002D25")]
		[Address(RVA = "0x132A978", Offset = "0x132A978", VA = "0x132A978")]
		public HitInfoList(HitInfoList copy)
		{
		}

		[Token(Token = "0x6002D26")]
		[Address(RVA = "0x1329974", Offset = "0x1329974", VA = "0x1329974")]
		public bool AddElement(RaycastHit info)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D27")]
		[Address(RVA = "0x132A0E0", Offset = "0x132A0E0", VA = "0x132A0E0")]
		public bool RemoveElement(RaycastHit info)
		{
			return default(bool);
		}

		[Token(Token = "0x6002D28")]
		[Address(RVA = "0x132AB0C", Offset = "0x132AB0C", VA = "0x132AB0C")]
		public HitInfoList GetSubList(HitInfoList another)
		{
			return null;
		}

		[Token(Token = "0x6002D29")]
		[Address(RVA = "0x1329E64", Offset = "0x1329E64", VA = "0x1329E64")]
		public bool ExistElement(RaycastHit info, out RaycastHit result)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dampSpeed;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rangeOffset;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useMultipleRay;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE9044", Offset = "0xEE9044")]
	public float sectionOfMultipleRay;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Light light;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float dampTmp;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float maxLightDistance;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HitInfoList InfoList;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<RayData> rayDatas;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] xP;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int[] yP;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HitInfoList Infolist2;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<FlashLight, RaycastHit, LightEventType> EventHandler;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float distance;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[WriteOnly]
	private NativeArray<RaycastHit> results;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[ReadOnly]
	private NativeArray<RaycastCommand> commands;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private JobHandle handle;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool isDrawLine;

	[Token(Token = "0x60015DB")]
	[Address(RVA = "0x1329078", Offset = "0x1329078", VA = "0x1329078")]
	private void Start()
	{
	}

	[Token(Token = "0x60015DC")]
	[Address(RVA = "0x13290F4", Offset = "0x13290F4", VA = "0x13290F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60015DD")]
	[Address(RVA = "0x1329768", Offset = "0x1329768", VA = "0x1329768")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60015DE")]
	[Address(RVA = "0x1329800", Offset = "0x1329800", VA = "0x1329800")]
	public void Switch(bool switchOn)
	{
	}

	[Token(Token = "0x60015DF")]
	[Address(RVA = "0x1329118", Offset = "0x1329118", VA = "0x1329118")]
	private void ControlLightRange()
	{
	}

	[Token(Token = "0x60015E0")]
	[Address(RVA = "0x1329350", Offset = "0x1329350", VA = "0x1329350")]
	private void DetectObject()
	{
	}

	[Token(Token = "0x60015E1")]
	[Address(RVA = "0x1329A40", Offset = "0x1329A40", VA = "0x1329A40")]
	private void HandleEvent(HitInfoList current, int operate)
	{
	}

	[Token(Token = "0x60015E2")]
	[Address(RVA = "0x1329820", Offset = "0x1329820", VA = "0x1329820")]
	private void UpdateRayDatas(float spotAngle, float range, Vector3 pos, Quaternion rot, Vector3 forward)
	{
	}

	[Token(Token = "0x60015E3")]
	[Address(RVA = "0x132A19C", Offset = "0x132A19C", VA = "0x132A19C")]
	private void GetFullCircleRay(ref List<RayData> list, int[] xParams, int[] yParams, float section, float spotAngle, float range, Vector3 pos, Quaternion rot, Vector3 forward)
	{
	}

	[Token(Token = "0x60015E4")]
	[Address(RVA = "0x132A3B0", Offset = "0x132A3B0", VA = "0x132A3B0")]
	private void GetQuarterCircleRay(ref List<RayData> list, int xParam, int yParam, float section, float spotAngle, float range, Vector3 pos, Quaternion rot, Vector3 forward)
	{
	}

	[Token(Token = "0x60015E5")]
	[Address(RVA = "0x132A780", Offset = "0x132A780", VA = "0x132A780")]
	public FlashLight()
	{
	}
}
[Token(Token = "0x20002C9")]
public class HurtBox : BaseHurtGear
{
	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Collider collisionCom;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject box;

	[Token(Token = "0x60015E6")]
	[Address(RVA = "0x12807B8", Offset = "0x12807B8", VA = "0x12807B8", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60015E7")]
	[Address(RVA = "0x12808D4", Offset = "0x12808D4", VA = "0x12808D4", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60015E8")]
	[Address(RVA = "0x1280994", Offset = "0x1280994", VA = "0x1280994", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60015E9")]
	[Address(RVA = "0x1280A50", Offset = "0x1280A50", VA = "0x1280A50", Slot = "26")]
	public override void DoGearBrokenEffect()
	{
	}

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0x1280A9C", Offset = "0x1280A9C", VA = "0x1280A9C")]
	public HurtBox()
	{
	}
}
[Token(Token = "0x20002CA")]
public class InfraredGear : BaseGear
{
	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private splineMove splinemove;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE90B0", Offset = "0xEE90B0")]
	[SerializeField]
	private float maxHitDistance;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE90FC", Offset = "0xEE90FC")]
	[SerializeField]
	private float maxDistance;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE9148", Offset = "0xEE9148")]
	[SerializeField]
	private float topOffset;

	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private RaycastHit hit_forward;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private RaycastHit hit_back;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private LayerMask activeLayer;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	private AudioEvent audioEvent;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private WwiseDefine audio;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private InfraredGearManager infraredGearManager;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int closeCount;

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0x146D404", Offset = "0x146D404", VA = "0x146D404", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0x146D5D8", Offset = "0x146D5D8", VA = "0x146D5D8", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0x146D5E0", Offset = "0x146D5E0", VA = "0x146D5E0", Slot = "22")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0x146D9D0", Offset = "0x146D9D0", VA = "0x146D9D0")]
	private void FindObjects(GameObject obj, bool state)
	{
	}

	[Token(Token = "0x60015EF")]
	[Address(RVA = "0x146DA74", Offset = "0x146DA74", VA = "0x146DA74", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60015F0")]
	[Address(RVA = "0x146DD2C", Offset = "0x146DD2C", VA = "0x146DD2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0x146E5E4", Offset = "0x146E5E4", VA = "0x146E5E4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0x146E29C", Offset = "0x146E29C", VA = "0x146E29C")]
	private void OnTriggerCollider(Collider other)
	{
	}

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0x146E74C", Offset = "0x146E74C", VA = "0x146E74C")]
	public InfraredGear()
	{
	}
}
[Token(Token = "0x20002CB")]
public class InfraredGearManager : MonoBehaviour
{
	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InfraredGear[] infraredGears;

	[Token(Token = "0x60015F4")]
	[Address(RVA = "0x146E770", Offset = "0x146E770", VA = "0x146E770")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015F5")]
	[Address(RVA = "0x146D940", Offset = "0x146D940", VA = "0x146D940")]
	public void SetCheckTargetState(bool state)
	{
	}

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0x146E7D0", Offset = "0x146E7D0", VA = "0x146E7D0")]
	public InfraredGearManager()
	{
	}
}
[Token(Token = "0x20002CC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE2764", Offset = "0xEE2764")]
public class MagmaGear : BaseGear
{
	[Token(Token = "0x20005EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE4FF0", Offset = "0xEE4FF0")]
	private sealed class <PlayAni>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MagmaGear <>4__this;

		[Token(Token = "0x17000470")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D2D")]
			[Address(RVA = "0x12E10DC", Offset = "0x12E10DC", VA = "0x12E10DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000471")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D2F")]
			[Address(RVA = "0x12E1144", Offset = "0x12E1144", VA = "0x12E1144", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D2A")]
		[Address(RVA = "0x12E0AB4", Offset = "0x12E0AB4", VA = "0x12E0AB4")]
		[DebuggerHidden]
		public <PlayAni>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002D2B")]
		[Address(RVA = "0x12E100C", Offset = "0x12E100C", VA = "0x12E100C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D2C")]
		[Address(RVA = "0x12E1010", Offset = "0x12E1010", VA = "0x12E1010", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D2E")]
		[Address(RVA = "0x12E10E4", Offset = "0x12E10E4", VA = "0x12E10E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider collider;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Animation animation;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float time;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine coroutine;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private e_setting_type GearDamageType;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private e_setting_type GearDamageFrequency;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public float GearFrequency;

	[Token(Token = "0x60015F7")]
	[Address(RVA = "0x12E0574", Offset = "0x12E0574", VA = "0x12E0574", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0x12E0768", Offset = "0x12E0768", VA = "0x12E0768", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x60015F9")]
	[Address(RVA = "0x12E097C", Offset = "0x12E097C", VA = "0x12E097C", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x60015FA")]
	[Address(RVA = "0x12E0900", Offset = "0x12E0900", VA = "0x12E0900")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF0C20", Offset = "0xEF0C20")]
	private IEnumerator PlayAni()
	{
		return null;
	}

	[Token(Token = "0x60015FB")]
	[Address(RVA = "0x12E0AE0", Offset = "0x12E0AE0", VA = "0x12E0AE0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60015FC")]
	[Address(RVA = "0x12E0BE4", Offset = "0x12E0BE4", VA = "0x12E0BE4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0x12E0AE4", Offset = "0x12E0AE4", VA = "0x12E0AE4")]
	private void DoTrigger(Collider other)
	{
	}

	[Token(Token = "0x60015FE")]
	[Address(RVA = "0x12E0DA8", Offset = "0x12E0DA8", VA = "0x12E0DA8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60015FF")]
	[Address(RVA = "0x12E1004", Offset = "0x12E1004", VA = "0x12E1004")]
	public MagmaGear()
	{
	}
}
[Token(Token = "0x20002CD")]
public class MagmaGearManager : MonoSingleton<MagmaGearManager>
{
	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_setting_type GearDamageType;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public e_setting_type GearDamageFrequency;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GearFrequency;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<WUnit> hurtList;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isTime;

	[Token(Token = "0x6001600")]
	[Address(RVA = "0x12E0BE8", Offset = "0x12E0BE8", VA = "0x12E0BE8")]
	public void Enter(GameObject other, e_group_type groupType)
	{
	}

	[Token(Token = "0x6001601")]
	[Address(RVA = "0x12E0EA4", Offset = "0x12E0EA4", VA = "0x12E0EA4")]
	public void Exit(GameObject other, e_group_type groupType)
	{
	}

	[Token(Token = "0x6001602")]
	[Address(RVA = "0x12E114C", Offset = "0x12E114C", VA = "0x12E114C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001603")]
	[Address(RVA = "0x12E14C0", Offset = "0x12E14C0", VA = "0x12E14C0")]
	public MagmaGearManager()
	{
	}
}
[Token(Token = "0x20002CE")]
public class MovePlatformGear : BaseGear
{
	[Token(Token = "0x20005F0")]
	private enum MovePlatformState
	{
		[Token(Token = "0x40021E7")]
		Idle,
		[Token(Token = "0x40021E8")]
		Run,
		[Token(Token = "0x40021E9")]
		Finish
	}

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Collider collisionCom;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform MovePlatform;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<Transform> RoomRefPoint;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform MoveEndPoint;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MovePlatformGearRoom GearRoom;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform GearRoomPoint;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float MoveSpeed;

	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float MoveSpeedGUp;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float MoveSpeedGDown;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float MoveSpeedDownDis;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float DelayTimeMove;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private HashSet<int> entryList;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float DelayRunningTimeMove;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float RunningMoveSpeed;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 OrignalPosition;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float smoothSpeed;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 selfPosition;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float SyncFrameTime;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float SyncFrameRunningTime;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public AudioEvent movingSoundAudio;

	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private WwiseDefine moveSoundObj;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Coroutine movingCor;

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 OrignalOffset;

	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private MovePlatformState moveState;

	[Token(Token = "0x6001604")]
	[Address(RVA = "0x137A5BC", Offset = "0x137A5BC", VA = "0x137A5BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001605")]
	[Address(RVA = "0x137A6F8", Offset = "0x137A6F8", VA = "0x137A6F8", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001606")]
	[Address(RVA = "0x137A99C", Offset = "0x137A99C", VA = "0x137A99C", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001607")]
	[Address(RVA = "0x137AF7C", Offset = "0x137AF7C", VA = "0x137AF7C", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001608")]
	[Address(RVA = "0x137B4F4", Offset = "0x137B4F4", VA = "0x137B4F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001609")]
	[Address(RVA = "0x137C0F0", Offset = "0x137C0F0", VA = "0x137C0F0")]
	private void DoTriggerEnter(Collider self, Collider other)
	{
	}

	[Token(Token = "0x600160A")]
	[Address(RVA = "0x137C1EC", Offset = "0x137C1EC", VA = "0x137C1EC")]
	private void DoTriggerExit(Collider self, Collider other)
	{
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0x137C2E8", Offset = "0x137C2E8", VA = "0x137C2E8")]
	private void DoTriggerStay(Collider self, Collider other)
	{
	}

	[Token(Token = "0x600160C")]
	[Address(RVA = "0x137A8F0", Offset = "0x137A8F0", VA = "0x137A8F0")]
	private void MovePlatformRestore()
	{
	}

	[Token(Token = "0x600160D")]
	[Address(RVA = "0x137C33C", Offset = "0x137C33C", VA = "0x137C33C")]
	private bool CheckMoveDis(float dis)
	{
		return default(bool);
	}

	[Token(Token = "0x600160E")]
	[Address(RVA = "0x137C434", Offset = "0x137C434", VA = "0x137C434")]
	private void MoveEnd()
	{
	}

	[Token(Token = "0x600160F")]
	[Address(RVA = "0x137BB28", Offset = "0x137BB28", VA = "0x137BB28")]
	private void PlayDelayMovingSound()
	{
	}

	[Token(Token = "0x6001610")]
	[Address(RVA = "0x137B408", Offset = "0x137B408", VA = "0x137B408")]
	private void StopMovingSound()
	{
	}

	[Token(Token = "0x6001611")]
	[Address(RVA = "0x137ABD8", Offset = "0x137ABD8", VA = "0x137ABD8")]
	private void SetPlayerMoveAniActive(bool isActive)
	{
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0x137BBB8", Offset = "0x137BBB8", VA = "0x137BBB8")]
	private void MovePlatformUpdate(bool isMove = true)
	{
	}

	[Token(Token = "0x6001613")]
	[Address(RVA = "0x137C638", Offset = "0x137C638", VA = "0x137C638")]
	private void UpdatePlayerPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6001614")]
	[Address(RVA = "0x137C8DC", Offset = "0x137C8DC", VA = "0x137C8DC")]
	private Vector3 GetPlayerPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001615")]
	[Address(RVA = "0x137B7AC", Offset = "0x137B7AC", VA = "0x137B7AC")]
	private bool CheckIsCanMovePlatformRun()
	{
		return default(bool);
	}

	[Token(Token = "0x6001616")]
	[Address(RVA = "0x137CB74", Offset = "0x137CB74", VA = "0x137CB74")]
	private WUnit GetUnit(GameObject obj)
	{
		return null;
	}

	[Token(Token = "0x6001617")]
	[Address(RVA = "0x137C144", Offset = "0x137C144", VA = "0x137C144")]
	private void EntryMovePlatform(GameObject obj)
	{
	}

	[Token(Token = "0x6001618")]
	[Address(RVA = "0x137C240", Offset = "0x137C240", VA = "0x137C240")]
	private void ExitMovePlatform(GameObject obj)
	{
	}

	[Token(Token = "0x6001619")]
	[Address(RVA = "0x137BA30", Offset = "0x137BA30", VA = "0x137BA30")]
	private void PreSetOrignalOffset(Vector3 pos)
	{
	}

	[Token(Token = "0x600161A")]
	[Address(RVA = "0x137B1D0", Offset = "0x137B1D0", VA = "0x137B1D0")]
	private void SetPlatformPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x600161B")]
	[Address(RVA = "0x137CC7C", Offset = "0x137CC7C", VA = "0x137CC7C", Slot = "22")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x600161C")]
	[Address(RVA = "0x137CFC8", Offset = "0x137CFC8", VA = "0x137CFC8", Slot = "23")]
	public override void GetStatus(out e_GearHandleStatus_type status, out int prm1, out int prm2)
	{
	}

	[Token(Token = "0x600161D")]
	[Address(RVA = "0x137CFDC", Offset = "0x137CFDC", VA = "0x137CFDC", Slot = "24")]
	public override void SetRoomStatus(int roomId)
	{
	}

	[Token(Token = "0x600161E")]
	[Address(RVA = "0x137D19C", Offset = "0x137D19C", VA = "0x137D19C")]
	public MovePlatformGear()
	{
	}

	[Token(Token = "0x600161F")]
	[Address(RVA = "0x137D2D0", Offset = "0x137D2D0", VA = "0x137D2D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0C84", Offset = "0xEF0C84")]
	private void <PlayDelayMovingSound>b__36_0()
	{
	}
}
[Token(Token = "0x20002CF")]
public class MovePlatformGearRoom : MonoBehaviour
{
	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animation ani;

	[Token(Token = "0x4001355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Room;

	[Token(Token = "0x4001356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform RoomActiveRoot;

	[Token(Token = "0x4001357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform MotionFloorFollowRoot;

	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioEvent OpenDoorAudio;

	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AudioEvent CloseDoorAudio;

	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WwiseDefine OpenDoorObj;

	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WwiseDefine CloseDoorObj;

	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<string> aniClipNameList;

	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 OrignalPosition;

	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<Vector3> MotionFloorMoveSyncAction;

	[Token(Token = "0x6001620")]
	[Address(RVA = "0x137D394", Offset = "0x137D394", VA = "0x137D394")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001621")]
	[Address(RVA = "0x137A994", Offset = "0x137A994", VA = "0x137A994")]
	public void GearInit()
	{
	}

	[Token(Token = "0x6001622")]
	[Address(RVA = "0x137AED8", Offset = "0x137AED8", VA = "0x137AED8")]
	public void GearStart()
	{
	}

	[Token(Token = "0x6001623")]
	[Address(RVA = "0x137B334", Offset = "0x137B334", VA = "0x137B334")]
	public void GearStop()
	{
	}

	[Token(Token = "0x6001624")]
	[Address(RVA = "0x137D698", Offset = "0x137D698", VA = "0x137D698")]
	private void Update()
	{
	}

	[Token(Token = "0x6001625")]
	[Address(RVA = "0x137C02C", Offset = "0x137C02C", VA = "0x137C02C")]
	public void UpdatePosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6001626")]
	[Address(RVA = "0x137BF1C", Offset = "0x137BF1C", VA = "0x137BF1C")]
	public void SetPosition(Vector3 pos)
	{
	}

	[Token(Token = "0x6001627")]
	[Address(RVA = "0x137C4E0", Offset = "0x137C4E0", VA = "0x137C4E0")]
	public void DoorAniPlay(bool open)
	{
	}

	[Token(Token = "0x6001628")]
	[Address(RVA = "0x137D8A8", Offset = "0x137D8A8", VA = "0x137D8A8")]
	private void SetSound(bool Open, bool isSet)
	{
	}

	[Token(Token = "0x6001629")]
	[Address(RVA = "0x137D664", Offset = "0x137D664", VA = "0x137D664")]
	private void StopSound()
	{
	}

	[Token(Token = "0x600162A")]
	[Address(RVA = "0x137D7B8", Offset = "0x137D7B8", VA = "0x137D7B8")]
	private void DoorAniPlay(string aniName)
	{
	}

	[Token(Token = "0x600162B")]
	[Address(RVA = "0x137DA9C", Offset = "0x137DA9C", VA = "0x137DA9C")]
	public MovePlatformGearRoom()
	{
	}
}
[Token(Token = "0x20002D0")]
public class MovingWallGear : BaseGear
{
	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private SingleInjuryGear[] MovingWall;

	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<int> list;

	[Token(Token = "0x600162D")]
	[Address(RVA = "0x137E684", Offset = "0x137E684", VA = "0x137E684", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x600162E")]
	[Address(RVA = "0x137E754", Offset = "0x137E754", VA = "0x137E754", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x600162F")]
	[Address(RVA = "0x137E910", Offset = "0x137E910", VA = "0x137E910", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001630")]
	[Address(RVA = "0x137E918", Offset = "0x137E918", VA = "0x137E918")]
	public MovingWallGear()
	{
	}
}
[Token(Token = "0x20002D1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE27C8", Offset = "0xEE27C8")]
public class OffLimitsAreasGear : BaseGear
{
	[Token(Token = "0x20005F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5000", Offset = "0xEE5000")]
	private sealed class <PlayAni>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OffLimitsAreasGear <>4__this;

		[Token(Token = "0x17000472")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D33")]
			[Address(RVA = "0x138B90C", Offset = "0x138B90C", VA = "0x138B90C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000473")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D35")]
			[Address(RVA = "0x138B974", Offset = "0x138B974", VA = "0x138B974", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D30")]
		[Address(RVA = "0x138B38C", Offset = "0x138B38C", VA = "0x138B38C")]
		[DebuggerHidden]
		public <PlayAni>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002D31")]
		[Address(RVA = "0x138B800", Offset = "0x138B800", VA = "0x138B800", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D32")]
		[Address(RVA = "0x138B804", Offset = "0x138B804", VA = "0x138B804", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D34")]
		[Address(RVA = "0x138B914", Offset = "0x138B914", VA = "0x138B914", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider collider;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Animator Animator;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float time;

	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Coroutine coroutine;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private e_setting_type GearDamageType;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private e_setting_type GearDamageFrequency;

	[Token(Token = "0x6001631")]
	[Address(RVA = "0x138AF24", Offset = "0x138AF24", VA = "0x138AF24", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001632")]
	[Address(RVA = "0x138B0F4", Offset = "0x138B0F4", VA = "0x138B0F4", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001633")]
	[Address(RVA = "0x138B280", Offset = "0x138B280", VA = "0x138B280", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001634")]
	[Address(RVA = "0x138B204", Offset = "0x138B204", VA = "0x138B204")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF0C94", Offset = "0xEF0C94")]
	private IEnumerator PlayAni()
	{
		return null;
	}

	[Token(Token = "0x6001635")]
	[Address(RVA = "0x138B3B8", Offset = "0x138B3B8", VA = "0x138B3B8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001636")]
	[Address(RVA = "0x138B4BC", Offset = "0x138B4BC", VA = "0x138B4BC")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6001637")]
	[Address(RVA = "0x138B3BC", Offset = "0x138B3BC", VA = "0x138B3BC")]
	private void DoTrigger(Collider other)
	{
	}

	[Token(Token = "0x6001638")]
	[Address(RVA = "0x138B710", Offset = "0x138B710", VA = "0x138B710")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001639")]
	[Address(RVA = "0x138B7F8", Offset = "0x138B7F8", VA = "0x138B7F8")]
	public OffLimitsAreasGear()
	{
	}
}
[Token(Token = "0x20002D2")]
public class OffLimitsAreasGearManager : MonoSingleton<OffLimitsAreasGearManager>
{
	[Token(Token = "0x20005F2")]
	public class hurtTimer
	{
		[Token(Token = "0x40021ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x40021EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timer;

		[Token(Token = "0x6002D36")]
		[Address(RVA = "0x138B97C", Offset = "0x138B97C", VA = "0x138B97C")]
		public hurtTimer()
		{
		}
	}

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<WUnit, hurtTimer> hurtTimerDic;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<hurtTimer> RemoveList;

	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public e_setting_type GearDamageType;

	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[HideInInspector]
	public e_setting_type GearDamageFrequency;

	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isTime;

	[Token(Token = "0x600163A")]
	[Address(RVA = "0x138B4C0", Offset = "0x138B4C0", VA = "0x138B4C0")]
	public void Enter(GameObject other, e_group_type groupType)
	{
	}

	[Token(Token = "0x600163B")]
	[Address(RVA = "0x138B7F4", Offset = "0x138B7F4", VA = "0x138B7F4")]
	public void Exit(GameObject other, e_group_type groupType)
	{
	}

	[Token(Token = "0x600163C")]
	[Address(RVA = "0x138B984", Offset = "0x138B984", VA = "0x138B984")]
	private void Update()
	{
	}

	[Token(Token = "0x600163D")]
	[Address(RVA = "0x138BE88", Offset = "0x138BE88", VA = "0x138BE88")]
	public OffLimitsAreasGearManager()
	{
	}
}
[Token(Token = "0x20002D3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE282C", Offset = "0xEE282C")]
public class PhysicalItemGear : BaseHurtGear
{
	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 initPos;

	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion initRot;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Rigidbody rigidbody;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float force;

	[Token(Token = "0x600163E")]
	[Address(RVA = "0x11544D8", Offset = "0x11544D8", VA = "0x11544D8", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x600163F")]
	[Address(RVA = "0x1154594", Offset = "0x1154594", VA = "0x1154594", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001640")]
	[Address(RVA = "0x1154620", Offset = "0x1154620", VA = "0x1154620", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001641")]
	[Address(RVA = "0x115466C", Offset = "0x115466C", VA = "0x115466C", Slot = "25")]
	public override void GearHurt(e_group_type ackGroupType, int damage, Vector3 atkDir)
	{
	}

	[Token(Token = "0x6001642")]
	[Address(RVA = "0x1154768", Offset = "0x1154768", VA = "0x1154768")]
	public PhysicalItemGear()
	{
	}
}
[Token(Token = "0x20002D4")]
public class RebirtGear : BaseGear
{
	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Collider rebirtCollider;

	[Token(Token = "0x6001643")]
	[Address(RVA = "0x13B35EC", Offset = "0x13B35EC", VA = "0x13B35EC", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0x13B362C", Offset = "0x13B362C", VA = "0x13B362C", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001645")]
	[Address(RVA = "0x13B36D0", Offset = "0x13B36D0", VA = "0x13B36D0", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001646")]
	[Address(RVA = "0x13B377C", Offset = "0x13B377C", VA = "0x13B377C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001647")]
	[Address(RVA = "0x13B38F0", Offset = "0x13B38F0", VA = "0x13B38F0")]
	public RebirtGear()
	{
	}
}
[Token(Token = "0x20002D5")]
public class SingleInjuryGear : BaseGear
{
	[Token(Token = "0x20005F3")]
	public class hurtTimer
	{
		[Token(Token = "0x40021EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timer;

		[Token(Token = "0x6002D37")]
		[Address(RVA = "0x12672C8", Offset = "0x12672C8", VA = "0x12672C8")]
		public hurtTimer()
		{
		}
	}

	[Token(Token = "0x20005F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5010", Offset = "0xEE5010")]
	private sealed class <PlayAni>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SingleInjuryGear <>4__this;

		[Token(Token = "0x17000474")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D3B")]
			[Address(RVA = "0x1267D2C", Offset = "0x1267D2C", VA = "0x1267D2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000475")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D3D")]
			[Address(RVA = "0x1267D94", Offset = "0x1267D94", VA = "0x1267D94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D38")]
		[Address(RVA = "0x1266FE0", Offset = "0x1266FE0", VA = "0x1266FE0")]
		[DebuggerHidden]
		public <PlayAni>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002D39")]
		[Address(RVA = "0x1267BA4", Offset = "0x1267BA4", VA = "0x1267BA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D3A")]
		[Address(RVA = "0x1267BA8", Offset = "0x1267BA8", VA = "0x1267BA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D3C")]
		[Address(RVA = "0x1267D34", Offset = "0x1267D34", VA = "0x1267D34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider collider;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Animation animation;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float aniIntervals;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float time;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private float aniStartTime;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Coroutine coroutine;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isPlayed;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private e_setting_type GearDamageType;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private e_setting_type GearDamageFrequency;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Dictionary<WUnit, hurtTimer> hurtTimerDic;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<WUnit> hurtList;

	[Token(Token = "0x6001648")]
	[Address(RVA = "0x1266BA0", Offset = "0x1266BA0", VA = "0x1266BA0", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001649")]
	[Address(RVA = "0x1266D70", Offset = "0x1266D70", VA = "0x1266D70", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x600164A")]
	[Address(RVA = "0x1266EC8", Offset = "0x1266EC8", VA = "0x1266EC8", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x600164B")]
	[Address(RVA = "0x1266E4C", Offset = "0x1266E4C", VA = "0x1266E4C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF0CF8", Offset = "0xEF0CF8")]
	private IEnumerator PlayAni()
	{
		return null;
	}

	[Token(Token = "0x600164C")]
	[Address(RVA = "0x126700C", Offset = "0x126700C", VA = "0x126700C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600164D")]
	[Address(RVA = "0x12672D0", Offset = "0x12672D0", VA = "0x12672D0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600164E")]
	[Address(RVA = "0x126753C", Offset = "0x126753C", VA = "0x126753C")]
	private void Update()
	{
	}

	[Token(Token = "0x600164F")]
	[Address(RVA = "0x1267AF4", Offset = "0x1267AF4", VA = "0x1267AF4")]
	public SingleInjuryGear()
	{
	}
}
[Token(Token = "0x20002D6")]
public class SinglePlankBridgeGear : BaseGear
{
	[Token(Token = "0x20005F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5020", Offset = "0xEE5020")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x6002D3E")]
		[Address(RVA = "0x1268F60", Offset = "0x1268F60", VA = "0x1268F60")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6002D3F")]
		[Address(RVA = "0x12691A4", Offset = "0x12691A4", VA = "0x12691A4")]
		internal bool <DoFXTriggerEnter>b__0(int a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Collider[] colliders;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<Transform> ItemList;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Collider[] FXCollidersTrigger;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int PlayerMaxNum;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int RandPlayerIndex;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int RandPlayerRunningIndex;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<int> playerIdList;

	[Token(Token = "0x6001650")]
	[Address(RVA = "0x1267D9C", Offset = "0x1267D9C", VA = "0x1267D9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001651")]
	[Address(RVA = "0x1267FF4", Offset = "0x1267FF4", VA = "0x1267FF4", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001652")]
	[Address(RVA = "0x12682E8", Offset = "0x12682E8", VA = "0x12682E8", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001653")]
	[Address(RVA = "0x1268640", Offset = "0x1268640", VA = "0x1268640", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001654")]
	[Address(RVA = "0x126892C", Offset = "0x126892C", VA = "0x126892C")]
	private void DoTriggerEnter(Collider self, Collider other)
	{
	}

	[Token(Token = "0x6001655")]
	[Address(RVA = "0x1268D24", Offset = "0x1268D24", VA = "0x1268D24")]
	private void DoTriggerExit(Collider self, Collider other)
	{
	}

	[Token(Token = "0x6001656")]
	[Address(RVA = "0x1268ADC", Offset = "0x1268ADC", VA = "0x1268ADC")]
	private void TriggerToAction(Vector3 dir, WUnit unit)
	{
	}

	[Token(Token = "0x6001657")]
	[Address(RVA = "0x1268D28", Offset = "0x1268D28", VA = "0x1268D28")]
	private void DoFXTriggerEnter(Collider self, Collider other)
	{
	}

	[Token(Token = "0x6001658")]
	[Address(RVA = "0x1268F6C", Offset = "0x1268F6C", VA = "0x1268F6C")]
	private void DoFXTriggerExit(Collider self, Collider other)
	{
	}

	[Token(Token = "0x6001659")]
	[Address(RVA = "0x1268F68", Offset = "0x1268F68", VA = "0x1268F68")]
	private void DoFxPlay()
	{
	}

	[Token(Token = "0x600165A")]
	[Address(RVA = "0x12690F0", Offset = "0x12690F0", VA = "0x12690F0", Slot = "22")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x600165B")]
	[Address(RVA = "0x12690F4", Offset = "0x12690F4", VA = "0x12690F4")]
	public SinglePlankBridgeGear()
	{
	}
}
[Token(Token = "0x20002D7")]
public class SpotGear : BaseGear
{
	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int CheckRoomId;

	[Token(Token = "0x600165C")]
	[Address(RVA = "0x12C49A8", Offset = "0x12C49A8", VA = "0x12C49A8", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x600165D")]
	[Address(RVA = "0x12C4B74", Offset = "0x12C4B74", VA = "0x12C4B74", Slot = "17")]
	public override void GearUnInit()
	{
	}

	[Token(Token = "0x600165E")]
	[Address(RVA = "0x12C4C9C", Offset = "0x12C4C9C", VA = "0x12C4C9C", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x600165F")]
	[Address(RVA = "0x12C4D78", Offset = "0x12C4D78", VA = "0x12C4D78", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001660")]
	[Address(RVA = "0x12C4DB0", Offset = "0x12C4DB0", VA = "0x12C4DB0", Slot = "22")]
	public override void GearStatus(e_GearHandleStatus_type statusType, int prm1, int prm2, Vector3 prmV1, Quaternion rot, params object[] prms)
	{
	}

	[Token(Token = "0x6001661")]
	[Address(RVA = "0x12C50F4", Offset = "0x12C50F4", VA = "0x12C50F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001662")]
	[Address(RVA = "0x12C4CD4", Offset = "0x12C4CD4", VA = "0x12C4CD4")]
	private void FindObjects(GameObject obj, bool state)
	{
	}

	[Token(Token = "0x6001663")]
	[Address(RVA = "0x12C5288", Offset = "0x12C5288", VA = "0x12C5288")]
	private void OnEventHandler(FlashLight flashLight, RaycastHit raycastHit, FlashLight.LightEventType lightEventType)
	{
	}

	[Token(Token = "0x6001664")]
	[Address(RVA = "0x12C5300", Offset = "0x12C5300", VA = "0x12C5300")]
	protected void OnLightEnter(RaycastHit info)
	{
	}

	[Token(Token = "0x6001665")]
	[Address(RVA = "0x12C5338", Offset = "0x12C5338", VA = "0x12C5338")]
	protected void OnLightStay(RaycastHit info)
	{
	}

	[Token(Token = "0x6001666")]
	[Address(RVA = "0x12C5370", Offset = "0x12C5370", VA = "0x12C5370")]
	private void TriggerHit(RaycastHit info)
	{
	}

	[Token(Token = "0x6001667")]
	[Address(RVA = "0x12C56E0", Offset = "0x12C56E0", VA = "0x12C56E0")]
	public SpotGear()
	{
	}
}
[Token(Token = "0x20002D8")]
public class SupplyGear : BaseGear
{
	[Token(Token = "0x20005F6")]
	public class DoInfoTimer
	{
		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timer;

		[Token(Token = "0x6002D40")]
		[Address(RVA = "0x12CD300", Offset = "0x12CD300", VA = "0x12CD300")]
		public DoInfoTimer()
		{
		}
	}

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Collider rebirtCollider;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<DoInfoTimer> doList;

	[Token(Token = "0x6001668")]
	[Address(RVA = "0x12CCC14", Offset = "0x12CCC14", VA = "0x12CCC14", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001669")]
	[Address(RVA = "0x12CCC54", Offset = "0x12CCC54", VA = "0x12CCC54", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x600166A")]
	[Address(RVA = "0x12CCD50", Offset = "0x12CCD50", VA = "0x12CCD50", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x600166B")]
	[Address(RVA = "0x12CCE38", Offset = "0x12CCE38", VA = "0x12CCE38")]
	private bool CheckUnit(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x600166C")]
	[Address(RVA = "0x12CCF48", Offset = "0x12CCF48", VA = "0x12CCF48")]
	private void Update()
	{
	}

	[Token(Token = "0x600166D")]
	[Address(RVA = "0x12CD0A4", Offset = "0x12CD0A4", VA = "0x12CD0A4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600166E")]
	[Address(RVA = "0x12CD308", Offset = "0x12CD308", VA = "0x12CD308")]
	public SupplyGear()
	{
	}
}
[Token(Token = "0x20002D9")]
public class ToStabGear : BaseGear
{
	[Token(Token = "0x20005F7")]
	public class hurtTimer
	{
		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WUnit unit;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timer;

		[Token(Token = "0x6002D41")]
		[Address(RVA = "0x11DA3FC", Offset = "0x11DA3FC", VA = "0x11DA3FC")]
		public hurtTimer()
		{
		}
	}

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider collider;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Animation animation;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float Time;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float time;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Dictionary<WUnit, hurtTimer> hurtTimerDic;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<WUnit> hurtList;

	[Token(Token = "0x600166F")]
	[Address(RVA = "0x11D9DB4", Offset = "0x11D9DB4", VA = "0x11D9DB4", Slot = "16")]
	public override void GearInit()
	{
	}

	[Token(Token = "0x6001670")]
	[Address(RVA = "0x11D9FF4", Offset = "0x11D9FF4", VA = "0x11D9FF4", Slot = "18")]
	public override void GearStart()
	{
	}

	[Token(Token = "0x6001671")]
	[Address(RVA = "0x11DA098", Offset = "0x11DA098", VA = "0x11DA098", Slot = "19")]
	public override void GearStop()
	{
	}

	[Token(Token = "0x6001672")]
	[Address(RVA = "0x11D9F4C", Offset = "0x11D9F4C", VA = "0x11D9F4C")]
	private void InitClear()
	{
	}

	[Token(Token = "0x6001673")]
	[Address(RVA = "0x11DA140", Offset = "0x11DA140", VA = "0x11DA140")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001674")]
	[Address(RVA = "0x11DA404", Offset = "0x11DA404", VA = "0x11DA404")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001675")]
	[Address(RVA = "0x11DA670", Offset = "0x11DA670", VA = "0x11DA670")]
	private void Update()
	{
	}

	[Token(Token = "0x6001676")]
	[Address(RVA = "0x11DAB54", Offset = "0x11DAB54", VA = "0x11DAB54")]
	public ToStabGear()
	{
	}
}
[Token(Token = "0x20002DA")]
public class TriggerListening : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5030", Offset = "0xEE5030")]
	private sealed class <>c
	{
		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<Collider, Collider> <>9__8_0;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<Collider, Collider> <>9__8_1;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<Collider, Collider> <>9__8_2;

		[Token(Token = "0x6002D43")]
		[Address(RVA = "0x11DED9C", Offset = "0x11DED9C", VA = "0x11DED9C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002D44")]
		[Address(RVA = "0x11DEDA4", Offset = "0x11DEDA4", VA = "0x11DEDA4")]
		internal void <.ctor>b__8_0(Collider <p0>, Collider <p1>)
		{
		}

		[Token(Token = "0x6002D45")]
		[Address(RVA = "0x11DEDA8", Offset = "0x11DEDA8", VA = "0x11DEDA8")]
		internal void <.ctor>b__8_1(Collider <p0>, Collider <p1>)
		{
		}

		[Token(Token = "0x6002D46")]
		[Address(RVA = "0x11DEDAC", Offset = "0x11DEDAC", VA = "0x11DEDAC")]
		internal void <.ctor>b__8_2(Collider <p0>, Collider <p1>)
		{
		}
	}

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<Collider, Collider> OnTriggerEnterCB;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<Collider, Collider> OnTriggerExitCB;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Action<Collider, Collider> OnTriggerStayCB;

	[Token(Token = "0x6001677")]
	[Address(RVA = "0x11DE7DC", Offset = "0x11DE7DC", VA = "0x11DE7DC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6001678")]
	[Address(RVA = "0x11DE860", Offset = "0x11DE860", VA = "0x11DE860")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6001679")]
	[Address(RVA = "0x11DE8E4", Offset = "0x11DE8E4", VA = "0x11DE8E4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600167A")]
	[Address(RVA = "0x11DE968", Offset = "0x11DE968", VA = "0x11DE968")]
	public static TriggerListening Add(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x600167B")]
	[Address(RVA = "0x11DEA18", Offset = "0x11DEA18", VA = "0x11DEA18")]
	public static void Remove(GameObject go)
	{
	}

	[Token(Token = "0x600167C")]
	[Address(RVA = "0x11DEAF4", Offset = "0x11DEAF4", VA = "0x11DEAF4")]
	public TriggerListening()
	{
	}
}
[Token(Token = "0x20002DB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE2890", Offset = "0xEE2890")]
public class TriggerSuppressGear : BaseGear
{
	[Token(Token = "0x600167D")]
	[Address(RVA = "0x11DEDB0", Offset = "0x11DEDB0", VA = "0x11DEDB0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600167E")]
	[Address(RVA = "0x11DEEDC", Offset = "0x11DEEDC", VA = "0x11DEEDC")]
	public TriggerSuppressGear()
	{
	}
}
[Token(Token = "0x20002DC")]
public class InitBugly : MonoBehaviour
{
	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string appid;

	[Token(Token = "0x600167F")]
	[Address(RVA = "0x146E7D8", Offset = "0x146E7D8", VA = "0x146E7D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001680")]
	[Address(RVA = "0x146E908", Offset = "0x146E908", VA = "0x146E908")]
	public InitBugly()
	{
	}
}
[Token(Token = "0x20002DD")]
public class Main : MonoBehaviour
{
	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Main _instance;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ulong GCTimeSlice;

	[Token(Token = "0x170001EA")]
	public static Main Instance
	{
		[Token(Token = "0x6001681")]
		[Address(RVA = "0x12E1564", Offset = "0x12E1564", VA = "0x12E1564")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001682")]
	[Address(RVA = "0x12E15B4", Offset = "0x12E15B4", VA = "0x12E15B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001683")]
	[Address(RVA = "0x12E16CC", Offset = "0x12E16CC", VA = "0x12E16CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001684")]
	[Address(RVA = "0x12E1ABC", Offset = "0x12E1ABC", VA = "0x12E1ABC")]
	private void Update()
	{
	}

	[Token(Token = "0x6001685")]
	[Address(RVA = "0x12E1D2C", Offset = "0x12E1D2C", VA = "0x12E1D2C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001686")]
	[Address(RVA = "0x12E1E3C", Offset = "0x12E1E3C", VA = "0x12E1E3C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001687")]
	[Address(RVA = "0x12E1F4C", Offset = "0x12E1F4C", VA = "0x12E1F4C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001688")]
	[Address(RVA = "0x12E2014", Offset = "0x12E2014", VA = "0x12E2014")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6001689")]
	[Address(RVA = "0x12E2018", Offset = "0x12E2018", VA = "0x12E2018")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600168A")]
	[Address(RVA = "0x12E210C", Offset = "0x12E210C", VA = "0x12E210C")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600168B")]
	[Address(RVA = "0x12E23B4", Offset = "0x12E23B4", VA = "0x12E23B4")]
	public Main()
	{
	}
}
[Token(Token = "0x20002DE")]
public static class MainController
{
	[Serializable]
	[Token(Token = "0x20005F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5040", Offset = "0xEE5040")]
	private sealed class <>c
	{
		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__1_0;

		[Token(Token = "0x6002D48")]
		[Address(RVA = "0x12E24A8", Offset = "0x12E24A8", VA = "0x12E24A8")]
		public <>c()
		{
		}

		[Token(Token = "0x6002D49")]
		[Address(RVA = "0x12E24B0", Offset = "0x12E24B0", VA = "0x12E24B0")]
		internal void <Start>b__1_0()
		{
		}
	}

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsUseOBB;

	[Token(Token = "0x600168C")]
	[Address(RVA = "0x12E1728", Offset = "0x12E1728", VA = "0x12E1728")]
	public static void Start()
	{
	}

	[Token(Token = "0x600168D")]
	[Address(RVA = "0x12E1E98", Offset = "0x12E1E98", VA = "0x12E1E98")]
	public static void FixedUpdate()
	{
	}

	[Token(Token = "0x600168E")]
	[Address(RVA = "0x12E1B18", Offset = "0x12E1B18", VA = "0x12E1B18")]
	public static void Update()
	{
	}

	[Token(Token = "0x600168F")]
	[Address(RVA = "0x12E1D88", Offset = "0x12E1D88", VA = "0x12E1D88")]
	public static void LateUpdate()
	{
	}

	[Token(Token = "0x6001690")]
	[Address(RVA = "0x12E207C", Offset = "0x12E207C", VA = "0x12E207C")]
	public static void OnPause(bool pause)
	{
	}

	[Token(Token = "0x6001691")]
	[Address(RVA = "0x12E1FA8", Offset = "0x12E1FA8", VA = "0x12E1FA8")]
	public static void OnDestroy()
	{
	}

	[Token(Token = "0x6001692")]
	[Address(RVA = "0x12E21D0", Offset = "0x12E21D0", VA = "0x12E21D0")]
	public static void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001693")]
	[Address(RVA = "0x12E23C4", Offset = "0x12E23C4", VA = "0x12E23C4")]
	public static void OnGUI()
	{
	}
}
[Token(Token = "0x20002DF")]
public interface IState
{
	[Token(Token = "0x6001695")]
	void DoInit(object param);

	[Token(Token = "0x6001696")]
	void DoUpdate();

	[Token(Token = "0x6001697")]
	void DoLateUpdate();

	[Token(Token = "0x6001698")]
	void DoFixedUpdate();

	[Token(Token = "0x6001699")]
	void DoGUI();

	[Token(Token = "0x600169A")]
	void DoLoad();

	[Token(Token = "0x600169B")]
	void DoStart(StateManager.StateDefine preType);

	[Token(Token = "0x600169C")]
	void DoTransformStartOver(StateManager.StateDefine preType);

	[Token(Token = "0x600169D")]
	bool DoExit(StateManager.StateDefine nextType);

	[Token(Token = "0x600169E")]
	void DoUpdateLoad();

	[Token(Token = "0x600169F")]
	void DoUpdateInTransEnd();
}
[Token(Token = "0x20002E0")]
public class StateManager : Singleton<StateManager>
{
	[Token(Token = "0x20005FA")]
	public enum StateDefine
	{
		[Token(Token = "0x4002200")]
		STATE_NONE = 0,
		[Token(Token = "0x4002201")]
		STATE_DEBUG_CONFIG = 1,
		[Token(Token = "0x4002202")]
		STATE_LOGO = 2,
		[Token(Token = "0x4002203")]
		STATE_CHECK = 3,
		[Token(Token = "0x4002204")]
		STATE_SCENE = 9,
		[Token(Token = "0x4002205")]
		STATE_BATTLE = 10
	}

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IState activeState;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private StateDefine activeStateType;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<StateDefine, IState> stateList;

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private StateDefine preStateType;

	[Token(Token = "0x60016A0")]
	[Address(RVA = "0x12C5F6C", Offset = "0x12C5F6C", VA = "0x12C5F6C")]
	public StateDefine STPreStateType()
	{
		return default(StateDefine);
	}

	[Token(Token = "0x60016A1")]
	[Address(RVA = "0x12C5F74", Offset = "0x12C5F74", VA = "0x12C5F74")]
	public void Init()
	{
	}

	[Token(Token = "0x60016A2")]
	[Address(RVA = "0x12C5FDC", Offset = "0x12C5FDC", VA = "0x12C5FDC")]
	private void Register(StateDefine type, IState st)
	{
	}

	[Token(Token = "0x60016A3")]
	[Address(RVA = "0x12C6074", Offset = "0x12C6074", VA = "0x12C6074")]
	private void UnRegister(StateDefine type)
	{
	}

	[Token(Token = "0x60016A4")]
	[Address(RVA = "0x12C616C", Offset = "0x12C616C", VA = "0x12C616C")]
	public StateDefine GetStateType()
	{
		return default(StateDefine);
	}

	[Token(Token = "0x60016A5")]
	[Address(RVA = "0x12C6184", Offset = "0x12C6184", VA = "0x12C6184")]
	public IState GetState()
	{
		return null;
	}

	[Token(Token = "0x60016A6")]
	[Address(RVA = "0x12C618C", Offset = "0x12C618C", VA = "0x12C618C")]
	public IState GetStateByType(StateDefine type)
	{
		return null;
	}

	[Token(Token = "0x60016A7")]
	[Address(RVA = "0x12C6218", Offset = "0x12C6218", VA = "0x12C6218")]
	public void SetActiveState(StateDefine nextType)
	{
	}

	[Token(Token = "0x60016A8")]
	[Address(RVA = "0x12C6104", Offset = "0x12C6104", VA = "0x12C6104")]
	public bool IsHasState(StateDefine nextType)
	{
		return default(bool);
	}

	[Token(Token = "0x60016A9")]
	[Address(RVA = "0x12C62A8", Offset = "0x12C62A8", VA = "0x12C62A8")]
	public void Clear()
	{
	}

	[Token(Token = "0x60016AA")]
	[Address(RVA = "0x12C6318", Offset = "0x12C6318", VA = "0x12C6318")]
	public void DoStateExit(StateDefine nextType)
	{
	}

	[Token(Token = "0x60016AB")]
	[Address(RVA = "0x12C63F4", Offset = "0x12C63F4", VA = "0x12C63F4")]
	public void DoTransformStartOver()
	{
	}

	[Token(Token = "0x60016AC")]
	[Address(RVA = "0x12C64B8", Offset = "0x12C64B8", VA = "0x12C64B8")]
	public void DoInit(object param)
	{
	}

	[Token(Token = "0x60016AD")]
	[Address(RVA = "0x12C6584", Offset = "0x12C6584", VA = "0x12C6584")]
	public void DoStateLoad()
	{
	}

	[Token(Token = "0x60016AE")]
	[Address(RVA = "0x12C6640", Offset = "0x12C6640", VA = "0x12C6640")]
	public void DoStateUpdateLoad()
	{
	}

	[Token(Token = "0x60016AF")]
	[Address(RVA = "0x12C66FC", Offset = "0x12C66FC", VA = "0x12C66FC")]
	public void DoUpdateInTransEnd()
	{
	}

	[Token(Token = "0x60016B0")]
	[Address(RVA = "0x12C67B8", Offset = "0x12C67B8", VA = "0x12C67B8")]
	public void DoStateStart()
	{
	}

	[Token(Token = "0x60016B1")]
	[Address(RVA = "0x12C687C", Offset = "0x12C687C", VA = "0x12C687C")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x60016B2")]
	[Address(RVA = "0x12C6938", Offset = "0x12C6938", VA = "0x12C6938")]
	public void Update()
	{
	}

	[Token(Token = "0x60016B3")]
	[Address(RVA = "0x12C69F4", Offset = "0x12C69F4", VA = "0x12C69F4")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60016B4")]
	[Address(RVA = "0x12C6AB0", Offset = "0x12C6AB0", VA = "0x12C6AB0")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60016B5")]
	[Address(RVA = "0x12C6B6C", Offset = "0x12C6B6C", VA = "0x12C6B6C")]
	public void ChangeGameState(StateDefine _nextState, [Optional] object _param)
	{
	}

	[Token(Token = "0x60016B6")]
	[Address(RVA = "0x12C6BB0", Offset = "0x12C6BB0", VA = "0x12C6BB0")]
	public StateManager()
	{
	}
}
[Token(Token = "0x20002E1")]
public class CSVBoss_Setting
{
	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVBoss_Setting> data_list;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string settingKey;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int intValue;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string strValue;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float floatValue;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string Info;

	[Token(Token = "0x60016B7")]
	[Address(RVA = "0x12ACF9C", Offset = "0x12ACF9C", VA = "0x12ACF9C")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x60016B8")]
	[Address(RVA = "0x12ACFE4", Offset = "0x12ACFE4", VA = "0x12ACFE4")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x60016B9")]
	[Address(RVA = "0x12AD144", Offset = "0x12AD144", VA = "0x12AD144")]
	private static CSVBoss_Setting Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x60016BA")]
	[Address(RVA = "0x12AD344", Offset = "0x12AD344", VA = "0x12AD344")]
	public static CSVBoss_Setting GetBoss_Setting(int id)
	{
		return null;
	}

	[Token(Token = "0x60016BB")]
	[Address(RVA = "0x12AD228", Offset = "0x12AD228", VA = "0x12AD228")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x60016BC")]
	[Address(RVA = "0x12AD594", Offset = "0x12AD594", VA = "0x12AD594")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x60016BD")]
	[Address(RVA = "0x12ADBE0", Offset = "0x12ADBE0", VA = "0x12ADBE0")]
	public CSVBoss_Setting()
	{
	}
}
[Token(Token = "0x20002E2")]
public class CSVExp_share
{
	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVExp_share> data_list;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int level_diff;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float killer_ratio;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float other_ratio;

	[Token(Token = "0x60016BF")]
	[Address(RVA = "0x12ADC70", Offset = "0x12ADC70", VA = "0x12ADC70")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x60016C0")]
	[Address(RVA = "0x12ADCB8", Offset = "0x12ADCB8", VA = "0x12ADCB8")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x60016C1")]
	[Address(RVA = "0x12ADD68", Offset = "0x12ADD68", VA = "0x12ADD68")]
	private static CSVExp_share Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x60016C2")]
	[Address(RVA = "0x12ADF68", Offset = "0x12ADF68", VA = "0x12ADF68")]
	public static CSVExp_share GetExp_share(int id)
	{
		return null;
	}

	[Token(Token = "0x60016C3")]
	[Address(RVA = "0x12ADE4C", Offset = "0x12ADE4C", VA = "0x12ADE4C")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x60016C4")]
	[Address(RVA = "0x12AE028", Offset = "0x12AE028", VA = "0x12AE028")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x60016C5")]
	[Address(RVA = "0x12AE5A8", Offset = "0x12AE5A8", VA = "0x12AE5A8")]
	public CSVExp_share()
	{
	}
}
[Token(Token = "0x20002E3")]
public class CSVInstance_flow
{
	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVInstance_flow> data_list;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int instanceId;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int flowId;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string childs;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int levelCap;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int levelOffset;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string name;

	[Token(Token = "0x60016C7")]
	[Address(RVA = "0x12AED7C", Offset = "0x12AED7C", VA = "0x12AED7C")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x60016C8")]
	[Address(RVA = "0x12AEDC4", Offset = "0x12AEDC4", VA = "0x12AEDC4")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x60016C9")]
	[Address(RVA = "0x12AEE74", Offset = "0x12AEE74", VA = "0x12AEE74")]
	private static CSVInstance_flow Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x60016CA")]
	[Address(RVA = "0x12AF074", Offset = "0x12AF074", VA = "0x12AF074")]
	public static CSVInstance_flow GetInstance_flow(int id)
	{
		return null;
	}

	[Token(Token = "0x60016CB")]
	[Address(RVA = "0x12AEF58", Offset = "0x12AEF58", VA = "0x12AEF58")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x60016CC")]
	[Address(RVA = "0x12AF134", Offset = "0x12AF134", VA = "0x12AF134")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x60016CD")]
	[Address(RVA = "0x12AF728", Offset = "0x12AF728", VA = "0x12AF728")]
	public CSVInstance_flow()
	{
	}
}
[Token(Token = "0x20002E4")]
public class CSVLanguage
{
	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVLanguage> data_list;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Chinese;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string English_US;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Korean;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string Japanese;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string Chinese_TW;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string Vietnamese;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string Thai;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string Indonesian;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string German;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string French;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string Russian;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string Portuguese;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string Spanish;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string Italian;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string Polish;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string Turkish;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string Dutch;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string Arabic;

	[Token(Token = "0x60016CF")]
	[Address(RVA = "0x12AF7B8", Offset = "0x12AF7B8", VA = "0x12AF7B8")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x60016D0")]
	[Address(RVA = "0x12AF800", Offset = "0x12AF800", VA = "0x12AF800")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x60016D1")]
	[Address(RVA = "0x12AF8B0", Offset = "0x12AF8B0", VA = "0x12AF8B0")]
	private static CSVLanguage Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x60016D2")]
	[Address(RVA = "0x12AFAB0", Offset = "0x12AFAB0", VA = "0x12AFAB0")]
	public static CSVLanguage GetLanguage(int id)
	{
		return null;
	}

	[Token(Token = "0x60016D3")]
	[Address(RVA = "0x12AF994", Offset = "0x12AF994", VA = "0x12AF994")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x60016D4")]
	[Address(RVA = "0x12AFB70", Offset = "0x12AFB70", VA = "0x12AFB70")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x60016D5")]
	[Address(RVA = "0x12B06E4", Offset = "0x12B06E4", VA = "0x12B06E4")]
	public CSVLanguage()
	{
	}
}
[Token(Token = "0x20002E5")]
public class CSVLive_camera_config_data
{
	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVLive_camera_config_data> data_list;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int camId;

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int step;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int model;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int site;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int siteType;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int priority;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int swithTime;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int minTime;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string aside;

	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string info;

	[Token(Token = "0x60016D7")]
	[Address(RVA = "0x12B0774", Offset = "0x12B0774", VA = "0x12B0774")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x60016D8")]
	[Address(RVA = "0x12B07BC", Offset = "0x12B07BC", VA = "0x12B07BC")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x60016D9")]
	[Address(RVA = "0x12B086C", Offset = "0x12B086C", VA = "0x12B086C")]
	private static CSVLive_camera_config_data Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x60016DA")]
	[Address(RVA = "0x12B0A6C", Offset = "0x12B0A6C", VA = "0x12B0A6C")]
	public static CSVLive_camera_config_data GetLive_camera_config_data(int id)
	{
		return null;
	}

	[Token(Token = "0x60016DB")]
	[Address(RVA = "0x12B0950", Offset = "0x12B0950", VA = "0x12B0950")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x60016DC")]
	[Address(RVA = "0x12B0B2C", Offset = "0x12B0B2C", VA = "0x12B0B2C")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x60016DD")]
	[Address(RVA = "0x12B11E0", Offset = "0x12B11E0", VA = "0x12B11E0")]
	public CSVLive_camera_config_data()
	{
	}
}
[Token(Token = "0x20002E6")]
public class CSVMonster
{
	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVMonster> data_list;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int modelID;

	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int type;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hp;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int atk;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool IsCreateWeapon;

	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int weaponType;

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int headPer;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int frequency;

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string dropList;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int dropRatio;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string name;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string info;

	[Token(Token = "0x60016DF")]
	[Address(RVA = "0x12B1270", Offset = "0x12B1270", VA = "0x12B1270")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x60016E0")]
	[Address(RVA = "0x12B12B8", Offset = "0x12B12B8", VA = "0x12B12B8")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x60016E1")]
	[Address(RVA = "0x12B1368", Offset = "0x12B1368", VA = "0x12B1368")]
	private static CSVMonster Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x60016E2")]
	[Address(RVA = "0x12B1568", Offset = "0x12B1568", VA = "0x12B1568")]
	public static CSVMonster GetMonster(int id)
	{
		return null;
	}

	[Token(Token = "0x60016E3")]
	[Address(RVA = "0x12B144C", Offset = "0x12B144C", VA = "0x12B144C")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x60016E4")]
	[Address(RVA = "0x12B1628", Offset = "0x12B1628", VA = "0x12B1628")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x60016E5")]
	[Address(RVA = "0x12B1D74", Offset = "0x12B1D74", VA = "0x12B1D74")]
	public CSVMonster()
	{
	}
}
[Token(Token = "0x20002E7")]
public class CSVMonster_level
{
	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVMonster_level> data_list;

	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int monster_id;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int lv;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hp;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int atk;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int exp_drop;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string name;

	[Token(Token = "0x60016E7")]
	[Address(RVA = "0x12B1E04", Offset = "0x12B1E04", VA = "0x12B1E04")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x60016E8")]
	[Address(RVA = "0x12B1E4C", Offset = "0x12B1E4C", VA = "0x12B1E4C")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x60016E9")]
	[Address(RVA = "0x12B1EFC", Offset = "0x12B1EFC", VA = "0x12B1EFC")]
	private static CSVMonster_level Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x60016EA")]
	[Address(RVA = "0x12B20FC", Offset = "0x12B20FC", VA = "0x12B20FC")]
	public static CSVMonster_level GetMonster_level(int id)
	{
		return null;
	}

	[Token(Token = "0x60016EB")]
	[Address(RVA = "0x12B1FE0", Offset = "0x12B1FE0", VA = "0x12B1FE0")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x60016EC")]
	[Address(RVA = "0x12B21BC", Offset = "0x12B21BC", VA = "0x12B21BC")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x60016ED")]
	[Address(RVA = "0x12B2778", Offset = "0x12B2778", VA = "0x12B2778")]
	public CSVMonster_level()
	{
	}
}
[Token(Token = "0x20002E8")]
public class CSVMonster_spawn_one
{
	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVMonster_spawn_one> data_list;

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int areaId;

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int wave;

	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int time;

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int pointId;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int monsterId;

	[Token(Token = "0x40013F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int spawnCount;

	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int spawnDelay;

	[Token(Token = "0x40013F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int suicideDelayTime;

	[Token(Token = "0x60016EF")]
	[Address(RVA = "0x12B2808", Offset = "0x12B2808", VA = "0x12B2808")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x60016F0")]
	[Address(RVA = "0x12B2850", Offset = "0x12B2850", VA = "0x12B2850")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x60016F1")]
	[Address(RVA = "0x12B2900", Offset = "0x12B2900", VA = "0x12B2900")]
	private static CSVMonster_spawn_one Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x60016F2")]
	[Address(RVA = "0x12B2B00", Offset = "0x12B2B00", VA = "0x12B2B00")]
	public static CSVMonster_spawn_one GetMonster_spawn_one(int id)
	{
		return null;
	}

	[Token(Token = "0x60016F3")]
	[Address(RVA = "0x12B29E4", Offset = "0x12B29E4", VA = "0x12B29E4")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x60016F4")]
	[Address(RVA = "0x12B2BC0", Offset = "0x12B2BC0", VA = "0x12B2BC0")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x60016F5")]
	[Address(RVA = "0x12B3198", Offset = "0x12B3198", VA = "0x12B3198")]
	public CSVMonster_spawn_one()
	{
	}
}
[Token(Token = "0x20002E9")]
public class CSVMonster_spawn_three
{
	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVMonster_spawn_three> data_list;

	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int areaId;

	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int wave;

	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int time;

	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int pointId;

	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int monsterId;

	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int spawnCount;

	[Token(Token = "0x40013FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int spawnDelay;

	[Token(Token = "0x40013FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int suicideDelayTime;

	[Token(Token = "0x60016F7")]
	[Address(RVA = "0x12B3228", Offset = "0x12B3228", VA = "0x12B3228")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x60016F8")]
	[Address(RVA = "0x12B3270", Offset = "0x12B3270", VA = "0x12B3270")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x60016F9")]
	[Address(RVA = "0x12B3320", Offset = "0x12B3320", VA = "0x12B3320")]
	private static CSVMonster_spawn_three Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x60016FA")]
	[Address(RVA = "0x12B3520", Offset = "0x12B3520", VA = "0x12B3520")]
	public static CSVMonster_spawn_three GetMonster_spawn_three(int id)
	{
		return null;
	}

	[Token(Token = "0x60016FB")]
	[Address(RVA = "0x12B3404", Offset = "0x12B3404", VA = "0x12B3404")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x60016FC")]
	[Address(RVA = "0x12B35E0", Offset = "0x12B35E0", VA = "0x12B35E0")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x60016FD")]
	[Address(RVA = "0x12B3BB8", Offset = "0x12B3BB8", VA = "0x12B3BB8")]
	public CSVMonster_spawn_three()
	{
	}
}
[Token(Token = "0x20002EA")]
public class CSVMonster_spawn_two
{
	[Token(Token = "0x40013FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVMonster_spawn_two> data_list;

	[Token(Token = "0x40013FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int areaId;

	[Token(Token = "0x4001402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int wave;

	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int time;

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int pointId;

	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int monsterId;

	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int spawnCount;

	[Token(Token = "0x4001407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int spawnDelay;

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int suicideDelayTime;

	[Token(Token = "0x60016FF")]
	[Address(RVA = "0x12B3C48", Offset = "0x12B3C48", VA = "0x12B3C48")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001700")]
	[Address(RVA = "0x12B3C90", Offset = "0x12B3C90", VA = "0x12B3C90")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001701")]
	[Address(RVA = "0x12B3D40", Offset = "0x12B3D40", VA = "0x12B3D40")]
	private static CSVMonster_spawn_two Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001702")]
	[Address(RVA = "0x12B3F40", Offset = "0x12B3F40", VA = "0x12B3F40")]
	public static CSVMonster_spawn_two GetMonster_spawn_two(int id)
	{
		return null;
	}

	[Token(Token = "0x6001703")]
	[Address(RVA = "0x12B3E24", Offset = "0x12B3E24", VA = "0x12B3E24")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001704")]
	[Address(RVA = "0x12B4000", Offset = "0x12B4000", VA = "0x12B4000")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001705")]
	[Address(RVA = "0x12B45D8", Offset = "0x12B45D8", VA = "0x12B45D8")]
	public CSVMonster_spawn_two()
	{
	}
}
[Token(Token = "0x20002EB")]
public class CSVMonster_summon
{
	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVMonster_summon> data_list;

	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x400140C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int monster;

	[Token(Token = "0x400140D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int areaId;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int wave;

	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int time;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int pointId;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int monsterId;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int spawnCount;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int spawnDelay;

	[Token(Token = "0x6001707")]
	[Address(RVA = "0x12B4668", Offset = "0x12B4668", VA = "0x12B4668")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001708")]
	[Address(RVA = "0x12B46B0", Offset = "0x12B46B0", VA = "0x12B46B0")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001709")]
	[Address(RVA = "0x12B4760", Offset = "0x12B4760", VA = "0x12B4760")]
	private static CSVMonster_summon Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x600170A")]
	[Address(RVA = "0x12B4960", Offset = "0x12B4960", VA = "0x12B4960")]
	public static CSVMonster_summon GetMonster_summon(int id)
	{
		return null;
	}

	[Token(Token = "0x600170B")]
	[Address(RVA = "0x12B4844", Offset = "0x12B4844", VA = "0x12B4844")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x600170C")]
	[Address(RVA = "0x12B4A20", Offset = "0x12B4A20", VA = "0x12B4A20")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x600170D")]
	[Address(RVA = "0x12B4FF8", Offset = "0x12B4FF8", VA = "0x12B4FF8")]
	public CSVMonster_summon()
	{
	}
}
[Token(Token = "0x20002EC")]
public class CSVPlayer
{
	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVPlayer> data_list;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int modelID;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int type;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hp;

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int hpRecoverInterval;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int hpRecoverValue;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int score;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string name;

	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string info;

	[Token(Token = "0x600170F")]
	[Address(RVA = "0x12B5088", Offset = "0x12B5088", VA = "0x12B5088")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001710")]
	[Address(RVA = "0x12B50D0", Offset = "0x12B50D0", VA = "0x12B50D0")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001711")]
	[Address(RVA = "0x12B5180", Offset = "0x12B5180", VA = "0x12B5180")]
	private static CSVPlayer Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001712")]
	[Address(RVA = "0x12B5380", Offset = "0x12B5380", VA = "0x12B5380")]
	public static CSVPlayer GetPlayer(int id)
	{
		return null;
	}

	[Token(Token = "0x6001713")]
	[Address(RVA = "0x12B5264", Offset = "0x12B5264", VA = "0x12B5264")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001714")]
	[Address(RVA = "0x12B5440", Offset = "0x12B5440", VA = "0x12B5440")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001715")]
	[Address(RVA = "0x12B5A94", Offset = "0x12B5A94", VA = "0x12B5A94")]
	public CSVPlayer()
	{
	}
}
[Token(Token = "0x20002ED")]
public class CSVPlayer_level
{
	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVPlayer_level> data_list;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int player_id;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int lv;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int hp;

	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int exp;

	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string name;

	[Token(Token = "0x6001717")]
	[Address(RVA = "0x12B5B24", Offset = "0x12B5B24", VA = "0x12B5B24")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001718")]
	[Address(RVA = "0x12B5B6C", Offset = "0x12B5B6C", VA = "0x12B5B6C")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001719")]
	[Address(RVA = "0x12B5C1C", Offset = "0x12B5C1C", VA = "0x12B5C1C")]
	private static CSVPlayer_level Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x600171A")]
	[Address(RVA = "0x12B5E1C", Offset = "0x12B5E1C", VA = "0x12B5E1C")]
	public static CSVPlayer_level GetPlayer_level(int id)
	{
		return null;
	}

	[Token(Token = "0x600171B")]
	[Address(RVA = "0x12B5D00", Offset = "0x12B5D00", VA = "0x12B5D00")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x600171C")]
	[Address(RVA = "0x12B5EDC", Offset = "0x12B5EDC", VA = "0x12B5EDC")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x600171D")]
	[Address(RVA = "0x12B6468", Offset = "0x12B6468", VA = "0x12B6468")]
	public CSVPlayer_level()
	{
	}
}
[Token(Token = "0x20002EE")]
public class CSVSetting
{
	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVSetting> data_list;

	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string value;

	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Info;

	[Token(Token = "0x600171F")]
	[Address(RVA = "0x12B64F8", Offset = "0x12B64F8", VA = "0x12B64F8")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001720")]
	[Address(RVA = "0x12B6540", Offset = "0x12B6540", VA = "0x12B6540")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001721")]
	[Address(RVA = "0x12B65F0", Offset = "0x12B65F0", VA = "0x12B65F0")]
	private static CSVSetting Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001722")]
	[Address(RVA = "0x12B67F0", Offset = "0x12B67F0", VA = "0x12B67F0")]
	public static CSVSetting GetSetting(int id)
	{
		return null;
	}

	[Token(Token = "0x6001723")]
	[Address(RVA = "0x12B66D4", Offset = "0x12B66D4", VA = "0x12B66D4")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001724")]
	[Address(RVA = "0x12B68B0", Offset = "0x12B68B0", VA = "0x12B68B0")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001725")]
	[Address(RVA = "0x12B6DE0", Offset = "0x12B6DE0", VA = "0x12B6DE0")]
	public CSVSetting()
	{
	}
}
[Token(Token = "0x20002EF")]
public class CSVWeapon
{
	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVWeapon> data_list;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int modelID;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int bulletCount;

	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int MagazineCount;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int atk;

	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int headPer;

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int fireInterval;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int scatterRadius;

	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int recoil;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int bulletForce;

	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string info;

	[Token(Token = "0x6001727")]
	[Address(RVA = "0x12B6E70", Offset = "0x12B6E70", VA = "0x12B6E70")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001728")]
	[Address(RVA = "0x12B6EB8", Offset = "0x12B6EB8", VA = "0x12B6EB8")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001729")]
	[Address(RVA = "0x12B6F68", Offset = "0x12B6F68", VA = "0x12B6F68")]
	private static CSVWeapon Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x600172A")]
	[Address(RVA = "0x12B7168", Offset = "0x12B7168", VA = "0x12B7168")]
	public static CSVWeapon GetWeapon(int id)
	{
		return null;
	}

	[Token(Token = "0x600172B")]
	[Address(RVA = "0x12B704C", Offset = "0x12B704C", VA = "0x12B704C")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x600172C")]
	[Address(RVA = "0x12B7228", Offset = "0x12B7228", VA = "0x12B7228")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x600172D")]
	[Address(RVA = "0x12B790C", Offset = "0x12B790C", VA = "0x12B790C")]
	public CSVWeapon()
	{
	}
}
[Token(Token = "0x20002F0")]
public class CSVWeapon_level
{
	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVWeapon_level> data_list;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int weapon_id;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int lv;

	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int bulletCount;

	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int magazineCount;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int atk;

	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string name;

	[Token(Token = "0x600172F")]
	[Address(RVA = "0x12B799C", Offset = "0x12B799C", VA = "0x12B799C")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001730")]
	[Address(RVA = "0x12B79E4", Offset = "0x12B79E4", VA = "0x12B79E4")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001731")]
	[Address(RVA = "0x12B7A94", Offset = "0x12B7A94", VA = "0x12B7A94")]
	private static CSVWeapon_level Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001732")]
	[Address(RVA = "0x12B7C94", Offset = "0x12B7C94", VA = "0x12B7C94")]
	public static CSVWeapon_level GetWeapon_level(int id)
	{
		return null;
	}

	[Token(Token = "0x6001733")]
	[Address(RVA = "0x12B7B78", Offset = "0x12B7B78", VA = "0x12B7B78")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001734")]
	[Address(RVA = "0x12B7D54", Offset = "0x12B7D54", VA = "0x12B7D54")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001735")]
	[Address(RVA = "0x12B8310", Offset = "0x12B8310", VA = "0x12B8310")]
	public CSVWeapon_level()
	{
	}
}
[Token(Token = "0x20002F1")]
public class CSVWwise_ambient_video
{
	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVWwise_ambient_video> data_list;

	[Token(Token = "0x4001444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x4001445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x4001446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int videoID;

	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int time;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int point;

	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int eventID;

	[Token(Token = "0x6001737")]
	[Address(RVA = "0x12B83A0", Offset = "0x12B83A0", VA = "0x12B83A0")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001738")]
	[Address(RVA = "0x12B83E8", Offset = "0x12B83E8", VA = "0x12B83E8")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001739")]
	[Address(RVA = "0x12B8498", Offset = "0x12B8498", VA = "0x12B8498")]
	private static CSVWwise_ambient_video Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x600173A")]
	[Address(RVA = "0x12B8698", Offset = "0x12B8698", VA = "0x12B8698")]
	public static CSVWwise_ambient_video GetWwise_ambient_video(int id)
	{
		return null;
	}

	[Token(Token = "0x600173B")]
	[Address(RVA = "0x12B857C", Offset = "0x12B857C", VA = "0x12B857C")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x600173C")]
	[Address(RVA = "0x12B8758", Offset = "0x12B8758", VA = "0x12B8758")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x600173D")]
	[Address(RVA = "0x12B8C70", Offset = "0x12B8C70", VA = "0x12B8C70")]
	public CSVWwise_ambient_video()
	{
	}
}
[Token(Token = "0x20002F2")]
public class CSVWwise_animation_define_setting
{
	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<ulong, CSVWwise_animation_define_setting> data_list;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isLoad;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int modelId;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string animationName;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isLoop;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int frame;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<int> region;

	[Token(Token = "0x4001452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int audioEventID;

	[Token(Token = "0x600173F")]
	[Address(RVA = "0x12B8D00", Offset = "0x12B8D00", VA = "0x12B8D00")]
	public static string Name()
	{
		return null;
	}

	[Token(Token = "0x6001740")]
	[Address(RVA = "0x12B8D48", Offset = "0x12B8D48", VA = "0x12B8D48")]
	public static string Path()
	{
		return null;
	}

	[Token(Token = "0x6001741")]
	[Address(RVA = "0x12B8DF8", Offset = "0x12B8DF8", VA = "0x12B8DF8")]
	private static CSVWwise_animation_define_setting Get(ulong key)
	{
		return null;
	}

	[Token(Token = "0x6001742")]
	[Address(RVA = "0x12B8FF8", Offset = "0x12B8FF8", VA = "0x12B8FF8")]
	public static CSVWwise_animation_define_setting GetWwise_animation_define_setting(int id)
	{
		return null;
	}

	[Token(Token = "0x6001743")]
	[Address(RVA = "0x12B8EDC", Offset = "0x12B8EDC", VA = "0x12B8EDC")]
	public static bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x6001744")]
	[Address(RVA = "0x12B90B8", Offset = "0x12B90B8", VA = "0x12B90B8")]
	private static bool Load(byte[] data)
	{
		return default(bool);
	}

	[Token(Token = "0x6001745")]
	[Address(RVA = "0x12B97DC", Offset = "0x12B97DC", VA = "0x12B97DC")]
	public CSVWwise_animation_define_setting()
	{
	}
}
[Token(Token = "0x20002F3")]
public enum e_LiveCamera_Cell_Type
{
	[Token(Token = "0x4001454")]
	None,
	[Token(Token = "0x4001455")]
	PlayerPoint,
	[Token(Token = "0x4001456")]
	FixPoint
}
[Token(Token = "0x20002F4")]
public enum e_LiveCamera_Model_Type
{
	[Token(Token = "0x4001458")]
	None,
	[Token(Token = "0x4001459")]
	AutoSwith,
	[Token(Token = "0x400145A")]
	ManualSwith,
	[Token(Token = "0x400145B")]
	Event,
	[Token(Token = "0x400145C")]
	HighEvent
}
[Token(Token = "0x20002F5")]
public enum e_LiveCamera_Event_Type
{
	[Token(Token = "0x400145E")]
	Default = -1,
	[Token(Token = "0x400145F")]
	NormaRollBack = 10001,
	[Token(Token = "0x4001460")]
	DropRollBack = 10002,
	[Token(Token = "0x4001461")]
	LookDoorSign = 10003
}
[Token(Token = "0x20002F6")]
public enum e_LiveCamera_HighEvent_Type
{
	[Token(Token = "0x4001463")]
	Default = -1,
	[Token(Token = "0x4001464")]
	Win_A = 6000,
	[Token(Token = "0x4001465")]
	Win_B = 6001,
	[Token(Token = "0x4001466")]
	Start_look_player1 = 6010,
	[Token(Token = "0x4001467")]
	Start_look_player2 = 6011,
	[Token(Token = "0x4001468")]
	Start_look_player3 = 6012
}
[Token(Token = "0x20002F7")]
public enum e_LiveCamera_Step_Type
{
	[Token(Token = "0x400146A")]
	CombatRoom = 990,
	[Token(Token = "0x400146B")]
	Room = 10
}
[Token(Token = "0x20002F8")]
public class LiveCameraConfigData
{
	[Token(Token = "0x400146C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x400146D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int camId;

	[Token(Token = "0x400146E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int step;

	[Token(Token = "0x400146F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int model;

	[Token(Token = "0x4001470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int site;

	[Token(Token = "0x4001471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int siteType;

	[Token(Token = "0x4001472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int priority;

	[Token(Token = "0x4001473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int swithTime;

	[Token(Token = "0x4001474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int minTime;

	[Token(Token = "0x4001475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string aside;

	[Token(Token = "0x6001747")]
	[Address(RVA = "0x147D8CC", Offset = "0x147D8CC", VA = "0x147D8CC")]
	public LiveCameraConfigData()
	{
	}
}
[Token(Token = "0x20002F9")]
public interface ILiveCameraDataCell
{
	[Token(Token = "0x6001748")]
	int ID();

	[Token(Token = "0x6001749")]
	void SetPos(Vector3 pos);

	[Token(Token = "0x600174A")]
	void SetRot(Quaternion rot);

	[Token(Token = "0x600174B")]
	Vector3 Pos();

	[Token(Token = "0x600174C")]
	Quaternion Rot();
}
[Token(Token = "0x20002FA")]
public class LiveCameraCustomDataCell : ILiveCameraDataCell
{
	[Token(Token = "0x4001476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int site;

	[Token(Token = "0x4001477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int id;

	[Token(Token = "0x4001478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 mPos;

	[Token(Token = "0x4001479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion mRot;

	[Token(Token = "0x600174D")]
	[Address(RVA = "0x147D8D4", Offset = "0x147D8D4", VA = "0x147D8D4", Slot = "4")]
	public int ID()
	{
		return default(int);
	}

	[Token(Token = "0x600174E")]
	[Address(RVA = "0x147D8DC", Offset = "0x147D8DC", VA = "0x147D8DC")]
	public void Init(int site, int id)
	{
	}

	[Token(Token = "0x600174F")]
	[Address(RVA = "0x147DCA8", Offset = "0x147DCA8", VA = "0x147DCA8")]
	public void UnInit(int site)
	{
	}

	[Token(Token = "0x6001750")]
	[Address(RVA = "0x147E048", Offset = "0x147E048", VA = "0x147E048", Slot = "5")]
	public void SetPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6001751")]
	[Address(RVA = "0x147E054", Offset = "0x147E054", VA = "0x147E054", Slot = "6")]
	public void SetRot(Quaternion rot)
	{
	}

	[Token(Token = "0x6001752")]
	[Address(RVA = "0x147E060", Offset = "0x147E060", VA = "0x147E060", Slot = "7")]
	public Vector3 Pos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001753")]
	[Address(RVA = "0x147E06C", Offset = "0x147E06C", VA = "0x147E06C", Slot = "8")]
	public Quaternion Rot()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6001754")]
	[Address(RVA = "0x147E078", Offset = "0x147E078", VA = "0x147E078")]
	public LiveCameraCustomDataCell()
	{
	}
}
[Token(Token = "0x20002FB")]
public class LiveCameraDataCell : MonoBehaviour, ILiveCameraDataCell
{
	[Token(Token = "0x400147A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_LiveCamera_Cell_Type CellType;

	[Token(Token = "0x400147B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject mObj;

	[Token(Token = "0x400147C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int id;

	[Token(Token = "0x170001EB")]
	public GameObject SelfPoint
	{
		[Token(Token = "0x6001755")]
		[Address(RVA = "0x147E128", Offset = "0x147E128", VA = "0x147E128")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001756")]
	[Address(RVA = "0x147E130", Offset = "0x147E130", VA = "0x147E130", Slot = "4")]
	public int ID()
	{
		return default(int);
	}

	[Token(Token = "0x6001757")]
	[Address(RVA = "0x147E138", Offset = "0x147E138", VA = "0x147E138", Slot = "5")]
	public void SetPos(Vector3 pos)
	{
	}

	[Token(Token = "0x6001758")]
	[Address(RVA = "0x147E13C", Offset = "0x147E13C", VA = "0x147E13C", Slot = "6")]
	public void SetRot(Quaternion rot)
	{
	}

	[Token(Token = "0x6001759")]
	[Address(RVA = "0x147E140", Offset = "0x147E140", VA = "0x147E140", Slot = "7")]
	public Vector3 Pos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600175A")]
	[Address(RVA = "0x147E204", Offset = "0x147E204", VA = "0x147E204", Slot = "8")]
	public Quaternion Rot()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600175B")]
	[Address(RVA = "0x147E2C8", Offset = "0x147E2C8", VA = "0x147E2C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600175C")]
	[Address(RVA = "0x147E300", Offset = "0x147E300", VA = "0x147E300")]
	private void PareseID()
	{
	}

	[Token(Token = "0x600175D")]
	[Address(RVA = "0x147E464", Offset = "0x147E464", VA = "0x147E464")]
	public void Init(int site)
	{
	}

	[Token(Token = "0x600175E")]
	[Address(RVA = "0x147E6B4", Offset = "0x147E6B4", VA = "0x147E6B4")]
	public void UnInit(int site)
	{
	}

	[Token(Token = "0x600175F")]
	[Address(RVA = "0x147E7C4", Offset = "0x147E7C4", VA = "0x147E7C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001760")]
	[Address(RVA = "0x147EA6C", Offset = "0x147EA6C", VA = "0x147EA6C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001761")]
	[Address(RVA = "0x147ED0C", Offset = "0x147ED0C", VA = "0x147ED0C")]
	public LiveCameraDataCell()
	{
	}
}
[Serializable]
[Token(Token = "0x20002FC")]
public class LiveCameraGameWinPoint
{
	[Token(Token = "0x400147D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject Point;

	[Token(Token = "0x400147E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Time;

	[Token(Token = "0x6001762")]
	[Address(RVA = "0x147F2C0", Offset = "0x147F2C0", VA = "0x147F2C0")]
	public LiveCameraGameWinPoint()
	{
	}
}
[Token(Token = "0x20002FD")]
public class LiveCameraGameWinDataCell : LiveCameraDataCell
{
	[Token(Token = "0x400147F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<LiveCameraGameWinPoint> OtherShotList;

	[Token(Token = "0x6001763")]
	[Address(RVA = "0x147F23C", Offset = "0x147F23C", VA = "0x147F23C")]
	public LiveCameraGameWinDataCell()
	{
	}
}
[Token(Token = "0x20002FE")]
public class LiveCameraManager : Singleton<LiveCameraManager>
{
	[Token(Token = "0x4001480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE92F4", Offset = "0xEE92F4")]
	private Camera <camera>k__BackingField;

	[Token(Token = "0x4001481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool IsEnter;

	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int CurStep;

	[Token(Token = "0x4001483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<LiveCameraConfigData> curStepLCConfigDataList;

	[Token(Token = "0x4001484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, LiveCameraConfigData> curCommonLCConfigDataDic;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, Dictionary<int, ILiveCameraDataCell>> AutoExPlayerDataCellDic;

	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, ILiveCameraDataCell> AutoExFixDataCellDic;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private e_LiveCamera_Model_Type mCurCameraModelStatus;

	[Token(Token = "0x4001488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<e_LiveCamera_Model_Type, LiveCameraModelBase> lcModelDic;

	[Token(Token = "0x4001489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LiveCameraModelBase mCurRunningModel;

	[Token(Token = "0x400148A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isLCPause;

	[Token(Token = "0x400148B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Action<int> ChangeStepAct;

	[Token(Token = "0x400148C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Action<e_LiveCamera_Model_Type, List<LiveCameraConfigData>> ChangeModelAct;

	[Token(Token = "0x400148D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Action<e_LiveCamera_Model_Type, int, LiveCameraConfigData, ILiveCameraDataCell> ChangeShotAct;

	[Token(Token = "0x400148E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Action<e_LiveCamera_Model_Type, int, LiveCameraConfigData, ILiveCameraDataCell> ChangeShotInAct;

	[Token(Token = "0x400148F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Action<e_LiveCamera_Model_Type, int, LiveCameraConfigData> ChangeShotOutAct;

	[Token(Token = "0x4001490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Action<int, int, ILiveCameraDataCell> LiveDataCellChange;

	[Token(Token = "0x4001491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int curSpecialSite;

	[Token(Token = "0x4001492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool NoCamSmooth;

	[Token(Token = "0x170001EC")]
	public Camera camera
	{
		[Token(Token = "0x6001764")]
		[Address(RVA = "0x14802DC", Offset = "0x14802DC", VA = "0x14802DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0D5C", Offset = "0xEF0D5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001765")]
		[Address(RVA = "0x14802E4", Offset = "0x14802E4", VA = "0x14802E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0D6C", Offset = "0xEF0D6C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001ED")]
	public int CurSpecialSite
	{
		[Token(Token = "0x600178C")]
		[Address(RVA = "0x1482078", Offset = "0x1482078", VA = "0x1482078")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600178D")]
		[Address(RVA = "0x1482080", Offset = "0x1482080", VA = "0x1482080")]
		set
		{
		}
	}

	[Token(Token = "0x6001766")]
	[Address(RVA = "0x14802EC", Offset = "0x14802EC", VA = "0x14802EC")]
	public void ChangeStep(e_LiveCamera_Step_Type step)
	{
	}

	[Token(Token = "0x6001767")]
	[Address(RVA = "0x14802F0", Offset = "0x14802F0", VA = "0x14802F0")]
	public void ChangeStep(int step)
	{
	}

	[Token(Token = "0x6001768")]
	[Address(RVA = "0x14804B4", Offset = "0x14804B4", VA = "0x14804B4")]
	public void TriggerEvent(int site, e_LiveCamera_Event_Type eType)
	{
	}

	[Token(Token = "0x6001769")]
	[Address(RVA = "0x1480918", Offset = "0x1480918", VA = "0x1480918")]
	public void ManualSellect(int site, bool isChaneModel = false)
	{
	}

	[Token(Token = "0x600176A")]
	[Address(RVA = "0x1480CB8", Offset = "0x1480CB8", VA = "0x1480CB8")]
	public void EnableManualModel(bool isEnable)
	{
	}

	[Token(Token = "0x600176B")]
	[Address(RVA = "0x1480E64", Offset = "0x1480E64", VA = "0x1480E64")]
	public void ChangeHighEvent(e_LiveCamera_HighEvent_Type eventType)
	{
	}

	[Token(Token = "0x600176C")]
	[Address(RVA = "0x1481128", Offset = "0x1481128", VA = "0x1481128")]
	public void SetEnable(bool status, bool isSetCam = false)
	{
	}

	[Token(Token = "0x600176D")]
	[Address(RVA = "0x14803A4", Offset = "0x14803A4", VA = "0x14803A4")]
	private void DoChangeStep(int step)
	{
	}

	[Token(Token = "0x600176E")]
	[Address(RVA = "0x1481318", Offset = "0x1481318", VA = "0x1481318")]
	private bool SetAllModel(int step)
	{
		return default(bool);
	}

	[Token(Token = "0x600176F")]
	[Address(RVA = "0x1481788", Offset = "0x1481788", VA = "0x1481788")]
	private void UnLoadAllModel()
	{
	}

	[Token(Token = "0x6001770")]
	[Address(RVA = "0x1481590", Offset = "0x1481590", VA = "0x1481590")]
	private bool ChangeModelStatus(e_LiveCamera_Model_Type model, int site = -1)
	{
		return default(bool);
	}

	[Token(Token = "0x6001771")]
	[Address(RVA = "0x1480570", Offset = "0x1480570", VA = "0x1480570")]
	private void DoTriggerEvent(int site, e_LiveCamera_Event_Type eType)
	{
	}

	[Token(Token = "0x6001772")]
	[Address(RVA = "0x14809D4", Offset = "0x14809D4", VA = "0x14809D4")]
	private void DoManualSellect(int site, bool isChaneModel = false)
	{
	}

	[Token(Token = "0x6001773")]
	[Address(RVA = "0x14819C0", Offset = "0x14819C0", VA = "0x14819C0")]
	private bool RejectManual()
	{
		return default(bool);
	}

	[Token(Token = "0x6001774")]
	[Address(RVA = "0x1481ACC", Offset = "0x1481ACC", VA = "0x1481ACC")]
	private bool RejectManual(int site)
	{
		return default(bool);
	}

	[Token(Token = "0x6001775")]
	[Address(RVA = "0x1481AD0", Offset = "0x1481AD0", VA = "0x1481AD0")]
	private bool RejectAuto()
	{
		return default(bool);
	}

	[Token(Token = "0x6001776")]
	[Address(RVA = "0x1480D6C", Offset = "0x1480D6C", VA = "0x1480D6C")]
	private bool DoEnableManualModel(bool isEnable)
	{
		return default(bool);
	}

	[Token(Token = "0x6001777")]
	[Address(RVA = "0x1480F18", Offset = "0x1480F18", VA = "0x1480F18")]
	private void DoTriggerHighEvent(e_LiveCamera_HighEvent_Type eventType)
	{
	}

	[Token(Token = "0x6001778")]
	[Address(RVA = "0x14818BC", Offset = "0x14818BC", VA = "0x14818BC")]
	private bool RejectEvent(LiveCameraConfigData config)
	{
		return default(bool);
	}

	[Token(Token = "0x6001779")]
	[Address(RVA = "0x1481BDC", Offset = "0x1481BDC", VA = "0x1481BDC")]
	public bool CanCover(LiveCameraConfigData tgConfig, LiveCameraModelBase model)
	{
		return default(bool);
	}

	[Token(Token = "0x600177A")]
	[Address(RVA = "0x1475F74", Offset = "0x1475F74", VA = "0x1475F74")]
	public bool CanCover(LiveCameraConfigData tgConfig, LiveCameraShotBase shot)
	{
		return default(bool);
	}

	[Token(Token = "0x600177B")]
	[Address(RVA = "0x1475380", Offset = "0x1475380", VA = "0x1475380")]
	public bool IsAIPlayer(WUnit unit)
	{
		return default(bool);
	}

	[Token(Token = "0x600177C")]
	[Address(RVA = "0x1481E6C", Offset = "0x1481E6C", VA = "0x1481E6C")]
	private void CleanOutPutEvent()
	{
	}

	[Token(Token = "0x600177D")]
	[Address(RVA = "0x147D970", Offset = "0x147D970", VA = "0x147D970")]
	public void RegisterPlayerCell(int site, ILiveCameraDataCell cell)
	{
	}

	[Token(Token = "0x600177E")]
	[Address(RVA = "0x147E8CC", Offset = "0x147E8CC", VA = "0x147E8CC")]
	public void RegisterFixCell(ILiveCameraDataCell cell)
	{
	}

	[Token(Token = "0x600177F")]
	[Address(RVA = "0x147F068", Offset = "0x147F068", VA = "0x147F068")]
	public void UnRegisterBySite(int site)
	{
	}

	[Token(Token = "0x6001780")]
	[Address(RVA = "0x147EB74", Offset = "0x147EB74", VA = "0x147EB74")]
	public void UnRegisterByCell(ILiveCameraDataCell cell)
	{
	}

	[Token(Token = "0x6001781")]
	[Address(RVA = "0x147DD34", Offset = "0x147DD34", VA = "0x147DD34")]
	public void UnRegisterBySiteAndCell(int site, ILiveCameraDataCell cell)
	{
	}

	[Token(Token = "0x6001782")]
	[Address(RVA = "0x1475008", Offset = "0x1475008", VA = "0x1475008")]
	public ILiveCameraDataCell GetLiveCameraPlayerDataCell(int site, int camId)
	{
		return null;
	}

	[Token(Token = "0x6001783")]
	[Address(RVA = "0x1475440", Offset = "0x1475440", VA = "0x1475440")]
	public ILiveCameraDataCell GetLiveCameraFixDataCell(int camId)
	{
		return null;
	}

	[Token(Token = "0x6001784")]
	[Address(RVA = "0x1475250", Offset = "0x1475250", VA = "0x1475250")]
	public WUnit GetPlayerWUnitBySite(int site)
	{
		return null;
	}

	[Token(Token = "0x6001785")]
	[Address(RVA = "0x1475730", Offset = "0x1475730", VA = "0x1475730")]
	public void SetShotDataCell(LiveCameraShotBase shot)
	{
	}

	[Token(Token = "0x6001786")]
	[Address(RVA = "0x147F4F4", Offset = "0x147F4F4", VA = "0x147F4F4")]
	public bool IsPlayerSite(int site)
	{
		return default(bool);
	}

	[Token(Token = "0x6001787")]
	[Address(RVA = "0x1475F1C", Offset = "0x1475F1C", VA = "0x1475F1C")]
	public void SetShotDataCell(LiveCameraShotBase shot, int site)
	{
	}

	[Token(Token = "0x6001788")]
	[Address(RVA = "0x1481EA0", Offset = "0x1481EA0", VA = "0x1481EA0")]
	public ILiveCameraDataCell LiveShotDataCell(LiveCameraConfigData config, out bool isAI)
	{
		return null;
	}

	[Token(Token = "0x6001789")]
	[Address(RVA = "0x1481ED4", Offset = "0x1481ED4", VA = "0x1481ED4")]
	public List<LiveCameraConfigData> GetModelConfigList(e_LiveCamera_Model_Type model)
	{
		return null;
	}

	[Token(Token = "0x600178A")]
	[Address(RVA = "0x1481FD8", Offset = "0x1481FD8", VA = "0x1481FD8")]
	public e_LiveCamera_Model_Type GetCurModel()
	{
		return default(e_LiveCamera_Model_Type);
	}

	[Token(Token = "0x600178B")]
	[Address(RVA = "0x1481FE0", Offset = "0x1481FE0", VA = "0x1481FE0")]
	public int GetCurRunningLiveShotSit()
	{
		return default(int);
	}

	[Token(Token = "0x600178E")]
	[Address(RVA = "0x1482088", Offset = "0x1482088", VA = "0x1482088")]
	public void OnEnter(Camera camera)
	{
	}

	[Token(Token = "0x600178F")]
	[Address(RVA = "0x148219C", Offset = "0x148219C", VA = "0x148219C")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6001790")]
	[Address(RVA = "0x1482290", Offset = "0x1482290", VA = "0x1482290")]
	public void OnExit()
	{
	}

	[Token(Token = "0x6001791")]
	[Address(RVA = "0x14822D4", Offset = "0x14822D4", VA = "0x14822D4")]
	public LiveCameraManager()
	{
	}
}
[Token(Token = "0x20002FF")]
public class LCAutoSwithModel : LiveCameraModelBase
{
	[Token(Token = "0x4001493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<LiveCameraConfigData> curAutoSwithConfigDataList;

	[Token(Token = "0x4001494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<LiveCameraShotBase> SwithShotList;

	[Token(Token = "0x4001495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int curIndex;

	[Token(Token = "0x4001496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int preTargetIndex;

	[Token(Token = "0x6001792")]
	[Address(RVA = "0x1474284", Offset = "0x1474284", VA = "0x1474284", Slot = "4")]
	public override void Init(LiveCameraManager mgr, Camera cam)
	{
	}

	[Token(Token = "0x6001793")]
	[Address(RVA = "0x1474308", Offset = "0x1474308", VA = "0x1474308", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001794")]
	[Address(RVA = "0x1474978", Offset = "0x1474978", VA = "0x1474978", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x6001795")]
	[Address(RVA = "0x1474A88", Offset = "0x1474A88", VA = "0x1474A88", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x6001796")]
	[Address(RVA = "0x1474AB4", Offset = "0x1474AB4", VA = "0x1474AB4", Slot = "16")]
	public override void Restart()
	{
	}

	[Token(Token = "0x6001797")]
	[Address(RVA = "0x1474B38", Offset = "0x1474B38", VA = "0x1474B38", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x6001798")]
	[Address(RVA = "0x1474BE0", Offset = "0x1474BE0", VA = "0x1474BE0", Slot = "5")]
	public override List<LiveCameraConfigData> GetConfigData()
	{
		return null;
	}

	[Token(Token = "0x6001799")]
	[Address(RVA = "0x1474BE8", Offset = "0x1474BE8", VA = "0x1474BE8", Slot = "7")]
	public override int CurShotPriority()
	{
		return default(int);
	}

	[Token(Token = "0x600179A")]
	[Address(RVA = "0x1474C00", Offset = "0x1474C00", VA = "0x1474C00", Slot = "8")]
	public override bool CurShotMinTime()
	{
		return default(bool);
	}

	[Token(Token = "0x600179B")]
	[Address(RVA = "0x1474C18", Offset = "0x1474C18", VA = "0x1474C18", Slot = "9")]
	public override bool CurShotSwithTime()
	{
		return default(bool);
	}

	[Token(Token = "0x600179C")]
	[Address(RVA = "0x1474C30", Offset = "0x1474C30", VA = "0x1474C30", Slot = "10")]
	public override bool IsFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x600179D")]
	[Address(RVA = "0x1474CA4", Offset = "0x1474CA4", VA = "0x1474CA4")]
	public void PreSetSelectCam(int tSite)
	{
	}

	[Token(Token = "0x600179E")]
	[Address(RVA = "0x1475534", Offset = "0x1475534", VA = "0x1475534")]
	private int GetPreSelectCam()
	{
		return default(int);
	}

	[Token(Token = "0x600179F")]
	[Address(RVA = "0x147553C", Offset = "0x147553C", VA = "0x147553C")]
	public void SetData(List<LiveCameraConfigData> stepList)
	{
	}

	[Token(Token = "0x60017A0")]
	[Address(RVA = "0x1474990", Offset = "0x1474990", VA = "0x1474990")]
	private void DoUpdate(float delta)
	{
	}

	[Token(Token = "0x60017A1")]
	[Address(RVA = "0x1474408", Offset = "0x1474408", VA = "0x1474408")]
	private bool ChangeNext()
	{
		return default(bool);
	}

	[Token(Token = "0x60017A2")]
	[Address(RVA = "0x147436C", Offset = "0x147436C", VA = "0x147436C")]
	private void SetShotDataCell()
	{
	}

	[Token(Token = "0x60017A3")]
	[Address(RVA = "0x14757BC", Offset = "0x14757BC", VA = "0x14757BC")]
	public LCAutoSwithModel()
	{
	}
}
[Token(Token = "0x2000300")]
public class LCEventModel : LiveCameraModelBase
{
	[Token(Token = "0x60017A4")]
	[Address(RVA = "0x1475874", Offset = "0x1475874", VA = "0x1475874", Slot = "4")]
	public override void Init(LiveCameraManager mgr, Camera cam)
	{
	}

	[Token(Token = "0x60017A5")]
	[Address(RVA = "0x14758B0", Offset = "0x14758B0", VA = "0x14758B0", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x60017A6")]
	[Address(RVA = "0x14758BC", Offset = "0x14758BC", VA = "0x14758BC", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x60017A7")]
	[Address(RVA = "0x1475908", Offset = "0x1475908", VA = "0x1475908", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x60017A8")]
	[Address(RVA = "0x1475950", Offset = "0x1475950", VA = "0x1475950", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x60017A9")]
	[Address(RVA = "0x1475958", Offset = "0x1475958", VA = "0x1475958", Slot = "7")]
	public override int CurShotPriority()
	{
		return default(int);
	}

	[Token(Token = "0x60017AA")]
	[Address(RVA = "0x1475970", Offset = "0x1475970", VA = "0x1475970", Slot = "8")]
	public override bool CurShotMinTime()
	{
		return default(bool);
	}

	[Token(Token = "0x60017AB")]
	[Address(RVA = "0x1475988", Offset = "0x1475988", VA = "0x1475988", Slot = "9")]
	public override bool CurShotSwithTime()
	{
		return default(bool);
	}

	[Token(Token = "0x60017AC")]
	[Address(RVA = "0x14759A0", Offset = "0x14759A0", VA = "0x14759A0", Slot = "10")]
	public override bool IsFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x60017AD")]
	[Address(RVA = "0x14759BC", Offset = "0x14759BC", VA = "0x14759BC", Slot = "12")]
	public override void TriggerInput(params object[] prms)
	{
	}

	[Token(Token = "0x60017AE")]
	[Address(RVA = "0x1475B60", Offset = "0x1475B60", VA = "0x1475B60")]
	public void ChangeEvent(int site, LiveCameraConfigData config)
	{
	}

	[Token(Token = "0x60017AF")]
	[Address(RVA = "0x1475E68", Offset = "0x1475E68", VA = "0x1475E68")]
	private void SetEvent(int site, LiveCameraConfigData config)
	{
	}

	[Token(Token = "0x60017B0")]
	[Address(RVA = "0x1475934", Offset = "0x1475934", VA = "0x1475934")]
	private void DoUpdate(float delta)
	{
	}

	[Token(Token = "0x60017B1")]
	[Address(RVA = "0x1475E4C", Offset = "0x1475E4C", VA = "0x1475E4C")]
	private bool CanCover(LiveCameraConfigData config)
	{
		return default(bool);
	}

	[Token(Token = "0x60017B2")]
	[Address(RVA = "0x14758C4", Offset = "0x14758C4", VA = "0x14758C4")]
	private void ResetAllData()
	{
	}

	[Token(Token = "0x60017B3")]
	[Address(RVA = "0x14761F8", Offset = "0x14761F8", VA = "0x14761F8", Slot = "6")]
	public override void ChangeShot(LiveCameraShotBase shot)
	{
	}

	[Token(Token = "0x60017B4")]
	[Address(RVA = "0x1476260", Offset = "0x1476260", VA = "0x1476260")]
	public LCEventModel()
	{
	}
}
[Token(Token = "0x2000301")]
public class LCHighEventModel : LiveCameraModelBase
{
	[Token(Token = "0x60017B5")]
	[Address(RVA = "0x1476268", Offset = "0x1476268", VA = "0x1476268", Slot = "4")]
	public override void Init(LiveCameraManager mgr, Camera cam)
	{
	}

	[Token(Token = "0x60017B6")]
	[Address(RVA = "0x14762A4", Offset = "0x14762A4", VA = "0x14762A4", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x60017B7")]
	[Address(RVA = "0x14762B0", Offset = "0x14762B0", VA = "0x14762B0", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x60017B8")]
	[Address(RVA = "0x14762FC", Offset = "0x14762FC", VA = "0x14762FC", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x60017B9")]
	[Address(RVA = "0x1476344", Offset = "0x1476344", VA = "0x1476344", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x60017BA")]
	[Address(RVA = "0x147634C", Offset = "0x147634C", VA = "0x147634C", Slot = "7")]
	public override int CurShotPriority()
	{
		return default(int);
	}

	[Token(Token = "0x60017BB")]
	[Address(RVA = "0x1476364", Offset = "0x1476364", VA = "0x1476364", Slot = "8")]
	public override bool CurShotMinTime()
	{
		return default(bool);
	}

	[Token(Token = "0x60017BC")]
	[Address(RVA = "0x147637C", Offset = "0x147637C", VA = "0x147637C", Slot = "9")]
	public override bool CurShotSwithTime()
	{
		return default(bool);
	}

	[Token(Token = "0x60017BD")]
	[Address(RVA = "0x1476394", Offset = "0x1476394", VA = "0x1476394", Slot = "10")]
	public override bool IsFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x60017BE")]
	[Address(RVA = "0x14763B0", Offset = "0x14763B0", VA = "0x14763B0", Slot = "12")]
	public override void TriggerInput(params object[] prms)
	{
	}

	[Token(Token = "0x60017BF")]
	[Address(RVA = "0x1476554", Offset = "0x1476554", VA = "0x1476554")]
	public void ChangeEvent(e_LiveCamera_HighEvent_Type eventType, LiveCameraConfigData config)
	{
	}

	[Token(Token = "0x60017C0")]
	[Address(RVA = "0x1476730", Offset = "0x1476730", VA = "0x1476730")]
	private void SetEvent(e_LiveCamera_HighEvent_Type eventType, LiveCameraConfigData config, ILiveCameraDataCell dataCell)
	{
	}

	[Token(Token = "0x60017C1")]
	[Address(RVA = "0x1476328", Offset = "0x1476328", VA = "0x1476328")]
	private void DoUpdate(float delta)
	{
	}

	[Token(Token = "0x60017C2")]
	[Address(RVA = "0x1476714", Offset = "0x1476714", VA = "0x1476714")]
	private bool CanCover(LiveCameraConfigData config)
	{
		return default(bool);
	}

	[Token(Token = "0x60017C3")]
	[Address(RVA = "0x14762B8", Offset = "0x14762B8", VA = "0x14762B8")]
	private void ResetAllData()
	{
	}

	[Token(Token = "0x60017C4")]
	[Address(RVA = "0x14768A0", Offset = "0x14768A0", VA = "0x14768A0", Slot = "6")]
	public override void ChangeShot(LiveCameraShotBase shot)
	{
	}

	[Token(Token = "0x60017C5")]
	[Address(RVA = "0x1476908", Offset = "0x1476908", VA = "0x1476908")]
	public LCHighEventModel()
	{
	}
}
[Token(Token = "0x2000302")]
public class LCManualSwithModel : LiveCameraModelBase
{
	[Token(Token = "0x4001497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<LiveCameraConfigData> sellectShotConfigDic;

	[Token(Token = "0x4001498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, LiveCameraShotBase> sellectShotDic;

	[Token(Token = "0x4001499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int curSellectSite;

	[Token(Token = "0x170001EE")]
	public int CurSellectSite
	{
		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x1476910", Offset = "0x1476910", VA = "0x1476910")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60017C7")]
		[Address(RVA = "0x1476918", Offset = "0x1476918", VA = "0x1476918")]
		set
		{
		}
	}

	[Token(Token = "0x170001EF")]
	public List<LiveCameraConfigData> SellectShotConfigDic
	{
		[Token(Token = "0x60017C8")]
		[Address(RVA = "0x1476920", Offset = "0x1476920", VA = "0x1476920")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60017C9")]
	[Address(RVA = "0x1476928", Offset = "0x1476928", VA = "0x1476928", Slot = "4")]
	public override void Init(LiveCameraManager mgr, Camera cam)
	{
	}

	[Token(Token = "0x60017CA")]
	[Address(RVA = "0x1476964", Offset = "0x1476964", VA = "0x1476964", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x60017CB")]
	[Address(RVA = "0x147709C", Offset = "0x147709C", VA = "0x147709C", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x60017CC")]
	[Address(RVA = "0x14770E4", Offset = "0x14770E4", VA = "0x14770E4", Slot = "16")]
	public override void Restart()
	{
	}

	[Token(Token = "0x60017CD")]
	[Address(RVA = "0x147712C", Offset = "0x147712C", VA = "0x147712C", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x60017CE")]
	[Address(RVA = "0x1477150", Offset = "0x1477150", VA = "0x1477150", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x60017CF")]
	[Address(RVA = "0x14771F0", Offset = "0x14771F0", VA = "0x14771F0", Slot = "5")]
	public override List<LiveCameraConfigData> GetConfigData()
	{
		return null;
	}

	[Token(Token = "0x60017D0")]
	[Address(RVA = "0x14771F8", Offset = "0x14771F8", VA = "0x14771F8", Slot = "10")]
	public override bool IsFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x60017D1")]
	[Address(RVA = "0x147726C", Offset = "0x147726C", VA = "0x147726C", Slot = "12")]
	public override void TriggerInput(params object[] prms)
	{
	}

	[Token(Token = "0x60017D2")]
	[Address(RVA = "0x1476AC8", Offset = "0x1476AC8", VA = "0x1476AC8")]
	private bool IsSiteOk(int sellectSite)
	{
		return default(bool);
	}

	[Token(Token = "0x60017D3")]
	[Address(RVA = "0x1476BC8", Offset = "0x1476BC8", VA = "0x1476BC8")]
	private int GetFirstOkSite()
	{
		return default(int);
	}

	[Token(Token = "0x60017D4")]
	[Address(RVA = "0x147743C", Offset = "0x147743C", VA = "0x147743C")]
	private ILiveCameraDataCell GetLCDataCell(LiveCameraShotBase shot, int site, int camId)
	{
		return null;
	}

	[Token(Token = "0x60017D5")]
	[Address(RVA = "0x14774B4", Offset = "0x14774B4", VA = "0x14774B4")]
	public void SetData(List<LiveCameraConfigData> stepList)
	{
	}

	[Token(Token = "0x60017D6")]
	[Address(RVA = "0x14770C8", Offset = "0x14770C8", VA = "0x14770C8")]
	private void DoUpdate(float delta)
	{
	}

	[Token(Token = "0x60017D7")]
	[Address(RVA = "0x1476CB4", Offset = "0x1476CB4", VA = "0x1476CB4")]
	private void Change(int site)
	{
	}

	[Token(Token = "0x60017D8")]
	[Address(RVA = "0x14769B8", Offset = "0x14769B8", VA = "0x14769B8")]
	private void SetShotDataCell()
	{
	}

	[Token(Token = "0x60017D9")]
	[Address(RVA = "0x1477684", Offset = "0x1477684", VA = "0x1477684")]
	public LCManualSwithModel()
	{
	}
}
[Token(Token = "0x2000303")]
public class LCRandFixedModel : LiveCameraModelBase
{
	[Token(Token = "0x400149A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<LiveCameraConfigData> curAutoSwithConfigDataList;

	[Token(Token = "0x400149B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<LiveCameraShotBase> SwithShotList;

	[Token(Token = "0x400149C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int curIndex;

	[Token(Token = "0x400149D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<int> successIndexList;

	[Token(Token = "0x60017DA")]
	[Address(RVA = "0x147773C", Offset = "0x147773C", VA = "0x147773C", Slot = "4")]
	public override void Init(LiveCameraManager mgr, Camera cam)
	{
	}

	[Token(Token = "0x60017DB")]
	[Address(RVA = "0x1477784", Offset = "0x1477784", VA = "0x1477784", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x60017DC")]
	[Address(RVA = "0x1477D28", Offset = "0x1477D28", VA = "0x1477D28", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x60017DD")]
	[Address(RVA = "0x1477E38", Offset = "0x1477E38", VA = "0x1477E38", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x60017DE")]
	[Address(RVA = "0x1477E5C", Offset = "0x1477E5C", VA = "0x1477E5C", Slot = "16")]
	public override void Restart()
	{
	}

	[Token(Token = "0x60017DF")]
	[Address(RVA = "0x1477EC0", Offset = "0x1477EC0", VA = "0x1477EC0", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x60017E0")]
	[Address(RVA = "0x1477F60", Offset = "0x1477F60", VA = "0x1477F60", Slot = "5")]
	public override List<LiveCameraConfigData> GetConfigData()
	{
		return null;
	}

	[Token(Token = "0x60017E1")]
	[Address(RVA = "0x1477F68", Offset = "0x1477F68", VA = "0x1477F68", Slot = "7")]
	public override int CurShotPriority()
	{
		return default(int);
	}

	[Token(Token = "0x60017E2")]
	[Address(RVA = "0x1477F80", Offset = "0x1477F80", VA = "0x1477F80", Slot = "8")]
	public override bool CurShotMinTime()
	{
		return default(bool);
	}

	[Token(Token = "0x60017E3")]
	[Address(RVA = "0x1477F98", Offset = "0x1477F98", VA = "0x1477F98", Slot = "9")]
	public override bool CurShotSwithTime()
	{
		return default(bool);
	}

	[Token(Token = "0x60017E4")]
	[Address(RVA = "0x1477FB0", Offset = "0x1477FB0", VA = "0x1477FB0", Slot = "10")]
	public override bool IsFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x60017E5")]
	[Address(RVA = "0x1478024", Offset = "0x1478024", VA = "0x1478024")]
	public void SetData(List<LiveCameraConfigData> stepList)
	{
	}

	[Token(Token = "0x60017E6")]
	[Address(RVA = "0x1477D40", Offset = "0x1477D40", VA = "0x1477D40")]
	private void DoUpdate(float delta)
	{
	}

	[Token(Token = "0x60017E7")]
	[Address(RVA = "0x1477878", Offset = "0x1477878", VA = "0x1477878")]
	private bool DoRandFixed()
	{
		return default(bool);
	}

	[Token(Token = "0x60017E8")]
	[Address(RVA = "0x14777DC", Offset = "0x14777DC", VA = "0x14777DC")]
	private void SetShotDataCell()
	{
	}

	[Token(Token = "0x60017E9")]
	[Address(RVA = "0x147812C", Offset = "0x147812C", VA = "0x147812C")]
	public LCRandFixedModel()
	{
	}
}
[Token(Token = "0x2000304")]
public class LiveCameraModelBase
{
	[Token(Token = "0x400149E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool IsInit;

	[Token(Token = "0x400149F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool IsRunning;

	[Token(Token = "0x40014A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Camera mAffectCam;

	[Token(Token = "0x40014A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected LiveCameraShotBase CurLCAction;

	[Token(Token = "0x40014A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LiveCameraManager LCMgr;

	[Token(Token = "0x170001F0")]
	public LiveCameraShotBase CurRunLCAction
	{
		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x14828F4", Offset = "0x14828F4", VA = "0x14828F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60017EB")]
	[Address(RVA = "0x14742CC", Offset = "0x14742CC", VA = "0x14742CC", Slot = "4")]
	public virtual void Init(LiveCameraManager mgr, Camera cam)
	{
	}

	[Token(Token = "0x60017EC")]
	[Address(RVA = "0x14828FC", Offset = "0x14828FC", VA = "0x14828FC", Slot = "5")]
	public virtual List<LiveCameraConfigData> GetConfigData()
	{
		return null;
	}

	[Token(Token = "0x60017ED")]
	[Address(RVA = "0x1482904", Offset = "0x1482904", VA = "0x1482904", Slot = "6")]
	public virtual void ChangeShot(LiveCameraShotBase shot)
	{
	}

	[Token(Token = "0x60017EE")]
	[Address(RVA = "0x148296C", Offset = "0x148296C", VA = "0x148296C", Slot = "7")]
	public virtual int CurShotPriority()
	{
		return default(int);
	}

	[Token(Token = "0x60017EF")]
	[Address(RVA = "0x1482974", Offset = "0x1482974", VA = "0x1482974", Slot = "8")]
	public virtual bool CurShotMinTime()
	{
		return default(bool);
	}

	[Token(Token = "0x60017F0")]
	[Address(RVA = "0x148297C", Offset = "0x148297C", VA = "0x148297C", Slot = "9")]
	public virtual bool CurShotSwithTime()
	{
		return default(bool);
	}

	[Token(Token = "0x60017F1")]
	[Address(RVA = "0x1482984", Offset = "0x1482984", VA = "0x1482984", Slot = "10")]
	public virtual bool IsFinish()
	{
		return default(bool);
	}

	[Token(Token = "0x60017F2")]
	[Address(RVA = "0x148298C", Offset = "0x148298C", VA = "0x148298C", Slot = "11")]
	public virtual void SetStep(int step)
	{
	}

	[Token(Token = "0x60017F3")]
	[Address(RVA = "0x1482990", Offset = "0x1482990", VA = "0x1482990", Slot = "12")]
	public virtual void TriggerInput(params object[] prms)
	{
	}

	[Token(Token = "0x60017F4")]
	[Address(RVA = "0x1474360", Offset = "0x1474360", VA = "0x1474360", Slot = "13")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60017F5")]
	[Address(RVA = "0x1482994", Offset = "0x1482994", VA = "0x1482994", Slot = "14")]
	public virtual void Update(float delta)
	{
	}

	[Token(Token = "0x60017F6")]
	[Address(RVA = "0x1474AAC", Offset = "0x1474AAC", VA = "0x1474AAC", Slot = "15")]
	public virtual void Pause()
	{
	}

	[Token(Token = "0x60017F7")]
	[Address(RVA = "0x1474B18", Offset = "0x1474B18", VA = "0x1474B18", Slot = "16")]
	public virtual void Restart()
	{
	}

	[Token(Token = "0x60017F8")]
	[Address(RVA = "0x1474BD8", Offset = "0x1474BD8", VA = "0x1474BD8", Slot = "17")]
	public virtual void UnInit()
	{
	}

	[Token(Token = "0x60017F9")]
	[Address(RVA = "0x147586C", Offset = "0x147586C", VA = "0x147586C")]
	public LiveCameraModelBase()
	{
	}
}
[Token(Token = "0x2000305")]
public class LiveCameraDataCollector : MonoBehaviour
{
	[Token(Token = "0x20005FB")]
	[SerializeField]
	public enum e_PlayerDataCell_Type
	{
		[Token(Token = "0x4002207")]
		None,
		[Token(Token = "0x4002208")]
		FirstPlayer,
		[Token(Token = "0x4002209")]
		ThirdPlayer
	}

	[Token(Token = "0x40014A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public e_PlayerDataCell_Type DataCell_Type;

	[Token(Token = "0x40014A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int FirstCamId;

	[Token(Token = "0x40014A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<LiveCameraDataCell> CellList;

	[Token(Token = "0x40014A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WUnit owner;

	[Token(Token = "0x40014A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int curSite;

	[Token(Token = "0x60017FA")]
	[Address(RVA = "0x147ED1C", Offset = "0x147ED1C", VA = "0x147ED1C")]
	public void Init()
	{
	}

	[Token(Token = "0x60017FB")]
	[Address(RVA = "0x147EFC4", Offset = "0x147EFC4", VA = "0x147EFC4")]
	public void UnInit()
	{
	}

	[Token(Token = "0x60017FC")]
	[Address(RVA = "0x147F1AC", Offset = "0x147F1AC", VA = "0x147F1AC")]
	public LiveCameraDataCollector()
	{
	}
}
[Token(Token = "0x2000306")]
public class LiveCameraGameWinShot : LiveCameraShotBase
{
	[Token(Token = "0x40014A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float switchSpeed;

	[Token(Token = "0x40014A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LiveCameraGameWinDataCell realDataCell;

	[Token(Token = "0x40014AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float curUseTime;

	[Token(Token = "0x40014AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float curRunningTime;

	[Token(Token = "0x40014AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int curIndex;

	[Token(Token = "0x40014AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject pointObj;

	[Token(Token = "0x60017FD")]
	[Address(RVA = "0x147F2C8", Offset = "0x147F2C8", VA = "0x147F2C8", Slot = "12")]
	public override void Init(Camera cam, LiveCameraConfigData config, e_LiveCamera_Model_Type model)
	{
	}

	[Token(Token = "0x60017FE")]
	[Address(RVA = "0x147F45C", Offset = "0x147F45C", VA = "0x147F45C", Slot = "9")]
	public override bool IsPlayerSite()
	{
		return default(bool);
	}

	[Token(Token = "0x60017FF")]
	[Address(RVA = "0x147F504", Offset = "0x147F504", VA = "0x147F504", Slot = "11")]
	public override void SetDataCell(ILiveCameraDataCell dataCell)
	{
	}

	[Token(Token = "0x6001800")]
	[Address(RVA = "0x147F5B4", Offset = "0x147F5B4", VA = "0x147F5B4", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6001801")]
	[Address(RVA = "0x147F94C", Offset = "0x147F94C", VA = "0x147F94C", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x6001802")]
	[Address(RVA = "0x147F89C", Offset = "0x147F89C", VA = "0x147F89C")]
	private void StartCameraPoint()
	{
	}

	[Token(Token = "0x6001803")]
	[Address(RVA = "0x147FFEC", Offset = "0x147FFEC", VA = "0x147FFEC")]
	private LiveCameraGameWinPoint GetCurPointData(int index)
	{
		return null;
	}

	[Token(Token = "0x6001804")]
	[Address(RVA = "0x147FA70", Offset = "0x147FA70", VA = "0x147FA70")]
	private void NextCameraPoint()
	{
	}

	[Token(Token = "0x6001805")]
	[Address(RVA = "0x147FCAC", Offset = "0x147FCAC", VA = "0x147FCAC")]
	private void DoUpdateCamera()
	{
	}

	[Token(Token = "0x6001806")]
	[Address(RVA = "0x14800D0", Offset = "0x14800D0", VA = "0x14800D0", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x6001807")]
	[Address(RVA = "0x1480180", Offset = "0x1480180", VA = "0x1480180", Slot = "16")]
	public override void Restart()
	{
	}

	[Token(Token = "0x6001808")]
	[Address(RVA = "0x1480248", Offset = "0x1480248", VA = "0x1480248", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x6001809")]
	[Address(RVA = "0x1476884", Offset = "0x1476884", VA = "0x1476884")]
	public LiveCameraGameWinShot()
	{
	}
}
[Token(Token = "0x2000307")]
public class LiveCameraManualShot : LiveCameraNormalShot
{
	[Token(Token = "0x600180A")]
	[Address(RVA = "0x14823F4", Offset = "0x14823F4", VA = "0x14823F4", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x600180B")]
	[Address(RVA = "0x1477680", Offset = "0x1477680", VA = "0x1477680")]
	public LiveCameraManualShot()
	{
	}
}
[Token(Token = "0x2000308")]
public class LiveCameraNormalShot : LiveCameraShotBase
{
	[Token(Token = "0x40014AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float switchSpeed;

	[Token(Token = "0x40014AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 prePos;

	[Token(Token = "0x40014B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 curPos;

	[Token(Token = "0x40014B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float posQuickDistance;

	[Token(Token = "0x40014B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion preRot;

	[Token(Token = "0x40014B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion curRot;

	[Token(Token = "0x600180C")]
	[Address(RVA = "0x1482998", Offset = "0x1482998", VA = "0x1482998", Slot = "12")]
	public override void Init(Camera cam, LiveCameraConfigData config, e_LiveCamera_Model_Type model)
	{
	}

	[Token(Token = "0x600180D")]
	[Address(RVA = "0x14829FC", Offset = "0x14829FC", VA = "0x14829FC", Slot = "9")]
	public override bool IsPlayerSite()
	{
		return default(bool);
	}

	[Token(Token = "0x600180E")]
	[Address(RVA = "0x1482A94", Offset = "0x1482A94", VA = "0x1482A94", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x600180F")]
	[Address(RVA = "0x1482CB0", Offset = "0x1482CB0", VA = "0x1482CB0", Slot = "14")]
	public override void Update(float delta)
	{
	}

	[Token(Token = "0x6001810")]
	[Address(RVA = "0x1482494", Offset = "0x1482494", VA = "0x1482494")]
	protected void DoUpdateCamera(ILiveCameraDataCell cell)
	{
	}

	[Token(Token = "0x6001811")]
	[Address(RVA = "0x1482D94", Offset = "0x1482D94", VA = "0x1482D94", Slot = "15")]
	public override void Pause()
	{
	}

	[Token(Token = "0x6001812")]
	[Address(RVA = "0x1482D98", Offset = "0x1482D98", VA = "0x1482D98", Slot = "16")]
	public override void Restart()
	{
	}

	[Token(Token = "0x6001813")]
	[Address(RVA = "0x1482D9C", Offset = "0x1482D9C", VA = "0x1482D9C", Slot = "17")]
	public override void UnInit()
	{
	}

	[Token(Token = "0x6001814")]
	[Address(RVA = "0x1475644", Offset = "0x1475644", VA = "0x1475644")]
	public LiveCameraNormalShot()
	{
	}
}
[Token(Token = "0x2000309")]
public class LiveCameraShotBase
{
	[Token(Token = "0x40014B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LiveCameraConfigData ConfigData;

	[Token(Token = "0x40014B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ILiveCameraDataCell DataCell;

	[Token(Token = "0x40014B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera AffectCam;

	[Token(Token = "0x40014B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float RunningTime;

	[Token(Token = "0x40014B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float MinTime;

	[Token(Token = "0x40014B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float SwithTime;

	[Token(Token = "0x40014BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected int Site;

	[Token(Token = "0x40014BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected e_LiveCamera_Model_Type LCCamModel;

	[Token(Token = "0x40014BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected int RealSite;

	[Token(Token = "0x40014BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected int mPriority;

	[Token(Token = "0x40014BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected bool IsInit;

	[Token(Token = "0x40014BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool IsRunning;

	[Token(Token = "0x40014C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool mIsFinish;

	[Token(Token = "0x170001F1")]
	public int Priority
	{
		[Token(Token = "0x6001815")]
		[Address(RVA = "0x1482DDC", Offset = "0x1482DDC", VA = "0x1482DDC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001F2")]
	public virtual bool IsFinish
	{
		[Token(Token = "0x6001816")]
		[Address(RVA = "0x1482DE4", Offset = "0x1482DE4", VA = "0x1482DE4", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001817")]
		[Address(RVA = "0x1482DEC", Offset = "0x1482DEC", VA = "0x1482DEC", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x170001F3")]
	public virtual int SRealSite
	{
		[Token(Token = "0x6001818")]
		[Address(RVA = "0x1482DF8", Offset = "0x1482DF8", VA = "0x1482DF8", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001819")]
	[Address(RVA = "0x1482E00", Offset = "0x1482E00", VA = "0x1482E00")]
	public void SetRealSite(int site)
	{
	}

	[Token(Token = "0x600181A")]
	[Address(RVA = "0x1474B24", Offset = "0x1474B24", VA = "0x1474B24")]
	public void HalfCurTime()
	{
	}

	[Token(Token = "0x600181B")]
	[Address(RVA = "0x1475728", Offset = "0x1475728", VA = "0x1475728")]
	public void TotalCurTime()
	{
	}

	[Token(Token = "0x600181C")]
	[Address(RVA = "0x1482E08", Offset = "0x1482E08", VA = "0x1482E08", Slot = "7")]
	public virtual bool IsMinTime()
	{
		return default(bool);
	}

	[Token(Token = "0x600181D")]
	[Address(RVA = "0x1482E18", Offset = "0x1482E18", VA = "0x1482E18", Slot = "8")]
	public virtual bool IsSwithTime()
	{
		return default(bool);
	}

	[Token(Token = "0x600181E")]
	[Address(RVA = "0x1482E2C", Offset = "0x1482E2C", VA = "0x1482E2C", Slot = "9")]
	public virtual bool IsPlayerSite()
	{
		return default(bool);
	}

	[Token(Token = "0x600181F")]
	[Address(RVA = "0x1482E34", Offset = "0x1482E34", VA = "0x1482E34", Slot = "10")]
	public virtual bool IsDataCell()
	{
		return default(bool);
	}

	[Token(Token = "0x6001820")]
	[Address(RVA = "0x1482E44", Offset = "0x1482E44", VA = "0x1482E44", Slot = "11")]
	public virtual void SetDataCell(ILiveCameraDataCell dataCell)
	{
	}

	[Token(Token = "0x6001821")]
	[Address(RVA = "0x147F32C", Offset = "0x147F32C", VA = "0x147F32C", Slot = "12")]
	public virtual void Init(Camera cam, LiveCameraConfigData config, e_LiveCamera_Model_Type model)
	{
	}

	[Token(Token = "0x6001822")]
	[Address(RVA = "0x147F7D8", Offset = "0x147F7D8", VA = "0x147F7D8", Slot = "13")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6001823")]
	[Address(RVA = "0x1482E4C", Offset = "0x1482E4C", VA = "0x1482E4C", Slot = "14")]
	public virtual void Update(float delta)
	{
	}

	[Token(Token = "0x6001824")]
	[Address(RVA = "0x14800D4", Offset = "0x14800D4", VA = "0x14800D4", Slot = "15")]
	public virtual void Pause()
	{
	}

	[Token(Token = "0x6001825")]
	[Address(RVA = "0x1480184", Offset = "0x1480184", VA = "0x1480184", Slot = "16")]
	public virtual void Restart()
	{
	}

	[Token(Token = "0x6001826")]
	[Address(RVA = "0x1480288", Offset = "0x1480288", VA = "0x1480288", Slot = "17")]
	public virtual void UnInit()
	{
	}

	[Token(Token = "0x6001827")]
	[Address(RVA = "0x14802C8", Offset = "0x14802C8", VA = "0x14802C8")]
	public LiveCameraShotBase()
	{
	}
}
[Token(Token = "0x200030A")]
public class LiveShowActiveCell : MonoBehaviour
{
	[Token(Token = "0x40014C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image icon;

	[Token(Token = "0x40014C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text cname;

	[Token(Token = "0x40014C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text kill;

	[Token(Token = "0x40014C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text headshot;

	[Token(Token = "0x40014C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text die;

	[Token(Token = "0x40014C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text lv;

	[Token(Token = "0x40014C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text score;

	[Token(Token = "0x40014C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Sprite DefaultSp;

	[Token(Token = "0x6001828")]
	[Address(RVA = "0x1484A3C", Offset = "0x1484A3C", VA = "0x1484A3C")]
	public void Show(bool isShow)
	{
	}

	[Token(Token = "0x6001829")]
	[Address(RVA = "0x1484AA0", Offset = "0x1484AA0", VA = "0x1484AA0")]
	public void SetDataCell(WUnit unit, StatisticalManager.StatisticalResultData scoreLimitCell)
	{
	}

	[Token(Token = "0x600182A")]
	[Address(RVA = "0x1484AA4", Offset = "0x1484AA4", VA = "0x1484AA4")]
	public void UpdateView(WUnit unit, StatisticalManager.StatisticalResultData cellData)
	{
	}

	[Token(Token = "0x600182B")]
	[Address(RVA = "0x1484DD0", Offset = "0x1484DD0", VA = "0x1484DD0")]
	public LiveShowActiveCell()
	{
	}
}
[Token(Token = "0x200030B")]
public class LiveShowGridCell : MonoBehaviour
{
	[Token(Token = "0x40014C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image icon;

	[Token(Token = "0x40014CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text cname;

	[Token(Token = "0x40014CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text hp;

	[Token(Token = "0x40014CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image HpProgressBar;

	[Token(Token = "0x40014CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text CurAmmo;

	[Token(Token = "0x40014CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text CurMagazineAmmo;

	[Token(Token = "0x40014CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image AmmoProgressBar;

	[Token(Token = "0x40014D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text Lv;

	[Token(Token = "0x40014D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image weaponBG;

	[Token(Token = "0x40014D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Sprite DefaultSp;

	[Token(Token = "0x40014D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Sprite RevolverSp;

	[Token(Token = "0x40014D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Sprite AssaultRifleSp;

	[Token(Token = "0x40014D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Sprite SpearGunSp;

	[Token(Token = "0x40014D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Sprite RocketLauncherSp;

	[Token(Token = "0x40014D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sprite MachineGunSp;

	[Token(Token = "0x40014D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Sprite SubMGunSp;

	[Token(Token = "0x40014D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private WUnit unit;

	[Token(Token = "0x40014DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int maxValue;

	[Token(Token = "0x600182C")]
	[Address(RVA = "0x12DAFB8", Offset = "0x12DAFB8", VA = "0x12DAFB8")]
	public void Show(bool isShow)
	{
	}

	[Token(Token = "0x600182D")]
	[Address(RVA = "0x12DB01C", Offset = "0x12DB01C", VA = "0x12DB01C")]
	public void SetDataCell(WUnit unit)
	{
	}

	[Token(Token = "0x600182E")]
	[Address(RVA = "0x12DB52C", Offset = "0x12DB52C", VA = "0x12DB52C")]
	private void Update()
	{
	}

	[Token(Token = "0x600182F")]
	[Address(RVA = "0x12DB058", Offset = "0x12DB058", VA = "0x12DB058")]
	public void UpdateView(WUnit unit)
	{
	}

	[Token(Token = "0x6001830")]
	[Address(RVA = "0x12DB20C", Offset = "0x12DB20C", VA = "0x12DB20C")]
	public void FreshData(WUnit unit)
	{
	}

	[Token(Token = "0x6001831")]
	[Address(RVA = "0x12DB534", Offset = "0x12DB534", VA = "0x12DB534")]
	public LiveShowGridCell()
	{
	}
}
[Token(Token = "0x200030C")]
public class LiveShowView : BaseUI
{
	[Token(Token = "0x40014DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ActiveCellRoot;

	[Token(Token = "0x40014DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LiveShowActiveCell BlueActiveCell;

	[Token(Token = "0x40014DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LevelViewManager LevelViewManager;

	[Token(Token = "0x40014DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<LiveShowGridCell> LiveLeftGridList;

	[Token(Token = "0x40014DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text min;

	[Token(Token = "0x40014E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Text second;

	[Token(Token = "0x40014E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Text millisecond;

	[Token(Token = "0x40014E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Text levelProcess;

	[Token(Token = "0x40014E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private e_LiveCamera_Model_Type modelType;

	[Token(Token = "0x40014E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int curSellectSite;

	[Token(Token = "0x40014E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float freqTime;

	[Token(Token = "0x40014E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float freqRunningTime;

	[Token(Token = "0x40014E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float allTime;

	[Token(Token = "0x40014E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string totalNumStr3;

	[Token(Token = "0x40014E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private string totalNumStr4;

	[Token(Token = "0x40014EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private string totalNumStr5;

	[Token(Token = "0x40014EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private string totalRoomStr;

	[Token(Token = "0x6001832")]
	[Address(RVA = "0x12DB544", Offset = "0x12DB544", VA = "0x12DB544")]
	private void Start()
	{
	}

	[Token(Token = "0x6001833")]
	[Address(RVA = "0x12DB68C", Offset = "0x12DB68C", VA = "0x12DB68C", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x6001834")]
	[Address(RVA = "0x12DB694", Offset = "0x12DB694", VA = "0x12DB694", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001835")]
	[Address(RVA = "0x12DB898", Offset = "0x12DB898", VA = "0x12DB898", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x6001836")]
	[Address(RVA = "0x12DBA28", Offset = "0x12DBA28", VA = "0x12DBA28", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x6001837")]
	[Address(RVA = "0x12DBB04", Offset = "0x12DBB04", VA = "0x12DBB04")]
	private void Update()
	{
	}

	[Token(Token = "0x6001838")]
	[Address(RVA = "0x12DBE2C", Offset = "0x12DBE2C", VA = "0x12DBE2C")]
	private void FreqUpdateView()
	{
	}

	[Token(Token = "0x6001839")]
	[Address(RVA = "0x12DBE38", Offset = "0x12DBE38", VA = "0x12DBE38")]
	private void OnLiveShowEvent()
	{
	}

	[Token(Token = "0x600183A")]
	[Address(RVA = "0x12DBE3C", Offset = "0x12DBE3C", VA = "0x12DBE3C")]
	private void SetGroupItems(List<LiveShowGridCell> cellList)
	{
	}

	[Token(Token = "0x600183B")]
	[Address(RVA = "0x12DC11C", Offset = "0x12DC11C", VA = "0x12DC11C")]
	private void SetCurSellectShot()
	{
	}

	[Token(Token = "0x600183C")]
	[Address(RVA = "0x12DB84C", Offset = "0x12DB84C", VA = "0x12DB84C")]
	public void RefreshViewInfo()
	{
	}

	[Token(Token = "0x600183D")]
	[Address(RVA = "0x12DC394", Offset = "0x12DC394", VA = "0x12DC394")]
	public LiveShowView()
	{
	}
}
[Token(Token = "0x200030D")]
public class ManualSellectCell : BaseUI
{
	[Token(Token = "0x40014EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image beSellect_Image;

	[Token(Token = "0x40014ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image sellect_Image_bg;

	[Token(Token = "0x40014EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EventTrigger enableBeSellect_Trigger;

	[Token(Token = "0x40014EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text Site_Text;

	[Token(Token = "0x40014F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text IsAi_Text;

	[Token(Token = "0x40014F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isSellect;

	[Token(Token = "0x40014F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int site;

	[Token(Token = "0x40014F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool canSellect;

	[Token(Token = "0x600183E")]
	[Address(RVA = "0x12E3534", Offset = "0x12E3534", VA = "0x12E3534", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600183F")]
	[Address(RVA = "0x12E3628", Offset = "0x12E3628", VA = "0x12E3628", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x6001840")]
	[Address(RVA = "0x12E3630", Offset = "0x12E3630", VA = "0x12E3630")]
	public void SetLiveSitData(int site)
	{
	}

	[Token(Token = "0x6001841")]
	[Address(RVA = "0x12E3718", Offset = "0x12E3718", VA = "0x12E3718")]
	public void SetSitSellect(bool isSellect)
	{
	}

	[Token(Token = "0x6001842")]
	[Address(RVA = "0x12E3760", Offset = "0x12E3760", VA = "0x12E3760")]
	public void SetCustonStatus(bool canSellect, bool isAI = false)
	{
	}

	[Token(Token = "0x6001843")]
	[Address(RVA = "0x12E3724", Offset = "0x12E3724", VA = "0x12E3724")]
	private void SetSellectStatus()
	{
	}

	[Token(Token = "0x6001844")]
	[Address(RVA = "0x12E3830", Offset = "0x12E3830", VA = "0x12E3830")]
	public void OnSellectClick()
	{
	}

	[Token(Token = "0x6001845")]
	[Address(RVA = "0x12E38C8", Offset = "0x12E38C8", VA = "0x12E38C8")]
	public void LockUI()
	{
	}

	[Token(Token = "0x6001846")]
	[Address(RVA = "0x12E38CC", Offset = "0x12E38CC", VA = "0x12E38CC")]
	public void UnLockUI()
	{
	}

	[Token(Token = "0x6001847")]
	[Address(RVA = "0x12E38D0", Offset = "0x12E38D0", VA = "0x12E38D0")]
	public ManualSellectCell()
	{
	}

	[Token(Token = "0x6001848")]
	[Address(RVA = "0x12E38E8", Offset = "0x12E38E8", VA = "0x12E38E8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0D7C", Offset = "0xEF0D7C")]
	private void <OnInit>b__8_0(BaseEventData data)
	{
	}
}
[Token(Token = "0x200030E")]
public class ManualSellectView : BaseUI
{
	[Token(Token = "0x40014F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject root;

	[Token(Token = "0x40014F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GridLayoutGroup Sellect_Item_Grid;

	[Token(Token = "0x40014F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject SellectItemPrefab;

	[Token(Token = "0x40014F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Text Tittle_Text;

	[Token(Token = "0x40014F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Text Auto_Btn_Text;

	[Token(Token = "0x40014F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<LiveCameraConfigData> LiveCameraSellectList;

	[Token(Token = "0x40014FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<ManualSellectCell> SellectCellList;

	[Token(Token = "0x40014FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image beSellect_Image;

	[Token(Token = "0x40014FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public EventTrigger enableBeSellect_Trigger;

	[Token(Token = "0x40014FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private e_LiveCamera_Model_Type modelType;

	[Token(Token = "0x40014FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool doInit;

	[Token(Token = "0x40014FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TestEventSellectView TestView;

	[Token(Token = "0x6001849")]
	[Address(RVA = "0x12E38EC", Offset = "0x12E38EC", VA = "0x12E38EC", Slot = "4")]
	protected override void OnInit()
	{
	}

	[Token(Token = "0x600184A")]
	[Address(RVA = "0x12E39E0", Offset = "0x12E39E0", VA = "0x12E39E0")]
	private void DoInit()
	{
	}

	[Token(Token = "0x600184B")]
	[Address(RVA = "0x12E3AD4", Offset = "0x12E3AD4", VA = "0x12E3AD4", Slot = "5")]
	protected override void OnShow(object[] param)
	{
	}

	[Token(Token = "0x600184C")]
	[Address(RVA = "0x12E3B04", Offset = "0x12E3B04", VA = "0x12E3B04", Slot = "10")]
	public override bool IsShow()
	{
		return default(bool);
	}

	[Token(Token = "0x600184D")]
	[Address(RVA = "0x12E3B20", Offset = "0x12E3B20", VA = "0x12E3B20", Slot = "9")]
	public override void Hide(params object[] param)
	{
	}

	[Token(Token = "0x600184E")]
	[Address(RVA = "0x12E3B68", Offset = "0x12E3B68", VA = "0x12E3B68", Slot = "8")]
	public override void Show(params object[] param)
	{
	}

	[Token(Token = "0x600184F")]
	[Address(RVA = "0x12E3BB0", Offset = "0x12E3BB0", VA = "0x12E3BB0")]
	public void ShowItems(List<LiveCameraConfigData> list)
	{
	}

	[Token(Token = "0x6001850")]
	[Address(RVA = "0x12E3C04", Offset = "0x12E3C04", VA = "0x12E3C04")]
	private void SetItems()
	{
	}

	[Token(Token = "0x6001851")]
	[Address(RVA = "0x12DD1E4", Offset = "0x12DD1E4", VA = "0x12DD1E4")]
	public void SetSellectItem()
	{
	}

	[Token(Token = "0x6001852")]
	[Address(RVA = "0x12E40C8", Offset = "0x12E40C8", VA = "0x12E40C8")]
	private void SetItemInfoStatus(LiveCameraConfigData config, ManualSellectCell cell)
	{
	}

	[Token(Token = "0x6001853")]
	[Address(RVA = "0x12DD674", Offset = "0x12DD674", VA = "0x12DD674")]
	public void FreshAllItemInfoStatus()
	{
	}

	[Token(Token = "0x6001854")]
	[Address(RVA = "0x12E3EEC", Offset = "0x12E3EEC", VA = "0x12E3EEC")]
	private ManualSellectCell AddAndChangeRoleItem(LiveCameraConfigData data)
	{
		return null;
	}

	[Token(Token = "0x6001855")]
	[Address(RVA = "0x12E3E30", Offset = "0x12E3E30", VA = "0x12E3E30")]
	private void RemoveRoleItem(ManualSellectCell cell)
	{
	}

	[Token(Token = "0x6001856")]
	[Address(RVA = "0x12E41B4", Offset = "0x12E41B4", VA = "0x12E41B4")]
	public void OnClickExchangeModel()
	{
	}

	[Token(Token = "0x6001857")]
	[Address(RVA = "0x12E4230", Offset = "0x12E4230", VA = "0x12E4230")]
	private void SetExchangeModelBtn()
	{
	}

	[Token(Token = "0x6001858")]
	[Address(RVA = "0x12DD124", Offset = "0x12DD124", VA = "0x12DD124")]
	public void RefreshViewInfol()
	{
	}

	[Token(Token = "0x6001859")]
	[Address(RVA = "0x12E42D4", Offset = "0x12E42D4", VA = "0x12E42D4")]
	public void ShowTest(string rslt)
	{
	}

	[Token(Token = "0x600185A")]
	[Address(RVA = "0x12E42F0", Offset = "0x12E42F0", VA = "0x12E42F0")]
	public ManualSellectView()
	{
	}

	[Token(Token = "0x600185B")]
	[Address(RVA = "0x12E436C", Offset = "0x12E436C", VA = "0x12E436C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0D8C", Offset = "0xEF0D8C")]
	private void <OnInit>b__11_0(BaseEventData data)
	{
	}
}
[Token(Token = "0x200030F")]
public class TestEventSellectView : MonoBehaviour
{
	[Token(Token = "0x4001500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EventTrigger enableBeSellect_Trigger;

	[Token(Token = "0x4001501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EventTrigger enableBeSellect_Trigger1;

	[Token(Token = "0x4001502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EventTrigger enableBeSellect_TriggerAdd;

	[Token(Token = "0x4001503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Text Player_Text;

	[Token(Token = "0x4001504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int playerSite;

	[Token(Token = "0x4001505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EventTrigger enableStep_Trigger1;

	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EventTrigger enableRestStep_Trigger1;

	[Token(Token = "0x4001507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public EventTrigger enableStep_TriggerAdd;

	[Token(Token = "0x4001508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public EventTrigger enableStep_TriggerHighEvent;

	[Token(Token = "0x4001509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Text Step_Text;

	[Token(Token = "0x400150A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int step;

	[Token(Token = "0x400150B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int heighEvent;

	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Text Result_Text;

	[Token(Token = "0x600185C")]
	[Address(RVA = "0x11D4F48", Offset = "0x11D4F48", VA = "0x11D4F48")]
	private void Start()
	{
	}

	[Token(Token = "0x600185D")]
	[Address(RVA = "0x11D5468", Offset = "0x11D5468", VA = "0x11D5468")]
	private void OnSellectClick()
	{
	}

	[Token(Token = "0x600185E")]
	[Address(RVA = "0x11D546C", Offset = "0x11D546C", VA = "0x11D546C")]
	private void OnSellectClick1()
	{
	}

	[Token(Token = "0x600185F")]
	[Address(RVA = "0x11D5470", Offset = "0x11D5470", VA = "0x11D5470")]
	private void OnSellectClickAdd()
	{
	}

	[Token(Token = "0x6001860")]
	[Address(RVA = "0x11D5320", Offset = "0x11D5320", VA = "0x11D5320")]
	private void SetPlayerSiteText()
	{
	}

	[Token(Token = "0x6001861")]
	[Address(RVA = "0x11D5488", Offset = "0x11D5488", VA = "0x11D5488")]
	private void OnStepClick1()
	{
	}

	[Token(Token = "0x6001862")]
	[Address(RVA = "0x11D5508", Offset = "0x11D5508", VA = "0x11D5508")]
	private void OnStepClickAdd()
	{
	}

	[Token(Token = "0x6001863")]
	[Address(RVA = "0x11D5520", Offset = "0x11D5520", VA = "0x11D5520")]
	private void OnRestStepClick()
	{
	}

	[Token(Token = "0x6001864")]
	[Address(RVA = "0x11D53C4", Offset = "0x11D53C4", VA = "0x11D53C4")]
	private void SetStepText()
	{
	}

	[Token(Token = "0x6001865")]
	[Address(RVA = "0x11D5528", Offset = "0x11D5528", VA = "0x11D5528")]
	public void SetResultText(string rslt)
	{
	}

	[Token(Token = "0x6001866")]
	[Address(RVA = "0x11D554C", Offset = "0x11D554C", VA = "0x11D554C")]
	private void OnHighEventClick()
	{
	}

	[Token(Token = "0x6001867")]
	[Address(RVA = "0x11D55EC", Offset = "0x11D55EC", VA = "0x11D55EC")]
	public TestEventSellectView()
	{
	}

	[Token(Token = "0x6001868")]
	[Address(RVA = "0x11D5608", Offset = "0x11D5608", VA = "0x11D5608")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0D9C", Offset = "0xEF0D9C")]
	private void <Start>b__13_0(BaseEventData data)
	{
	}

	[Token(Token = "0x6001869")]
	[Address(RVA = "0x11D560C", Offset = "0x11D560C", VA = "0x11D560C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0DAC", Offset = "0xEF0DAC")]
	private void <Start>b__13_1(BaseEventData data)
	{
	}

	[Token(Token = "0x600186A")]
	[Address(RVA = "0x11D5610", Offset = "0x11D5610", VA = "0x11D5610")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0DBC", Offset = "0xEF0DBC")]
	private void <Start>b__13_2(BaseEventData data)
	{
	}

	[Token(Token = "0x600186B")]
	[Address(RVA = "0x11D5628", Offset = "0x11D5628", VA = "0x11D5628")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0DCC", Offset = "0xEF0DCC")]
	private void <Start>b__13_3(BaseEventData data)
	{
	}

	[Token(Token = "0x600186C")]
	[Address(RVA = "0x11D562C", Offset = "0x11D562C", VA = "0x11D562C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0DDC", Offset = "0xEF0DDC")]
	private void <Start>b__13_4(BaseEventData data)
	{
	}

	[Token(Token = "0x600186D")]
	[Address(RVA = "0x11D5644", Offset = "0x11D5644", VA = "0x11D5644")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0DEC", Offset = "0xEF0DEC")]
	private void <Start>b__13_5(BaseEventData data)
	{
	}

	[Token(Token = "0x600186E")]
	[Address(RVA = "0x11D564C", Offset = "0x11D564C", VA = "0x11D564C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0DFC", Offset = "0xEF0DFC")]
	private void <Start>b__13_6(BaseEventData data)
	{
	}
}
[Token(Token = "0x2000310")]
public class LiveSystem : Singleton<LiveSystem>
{
	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool IsEnter;

	[Token(Token = "0x400150E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool IsShowManual;

	[Token(Token = "0x400150F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ManualSellectView mManualView;

	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LiveShowView mLiveView;

	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isForbidLiveView;

	[Token(Token = "0x600186F")]
	[Address(RVA = "0x12DC470", Offset = "0x12DC470", VA = "0x12DC470")]
	public void OnEnter()
	{
	}

	[Token(Token = "0x6001870")]
	[Address(RVA = "0x12DC970", Offset = "0x12DC970", VA = "0x12DC970")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6001871")]
	[Address(RVA = "0x12DCCB4", Offset = "0x12DCCB4", VA = "0x12DCCB4")]
	public void OnExit()
	{
	}

	[Token(Token = "0x6001872")]
	[Address(RVA = "0x12DCFB0", Offset = "0x12DCFB0", VA = "0x12DCFB0")]
	private void ChangeModel(e_LiveCamera_Model_Type model, List<LiveCameraConfigData> list)
	{
	}

	[Token(Token = "0x6001873")]
	[Address(RVA = "0x12DD338", Offset = "0x12DD338", VA = "0x12DD338")]
	private void ChangeShot(e_LiveCamera_Model_Type model, int site, LiveCameraConfigData data, ILiveCameraDataCell dataCell)
	{
	}

	[Token(Token = "0x6001874")]
	[Address(RVA = "0x12DD3DC", Offset = "0x12DD3DC", VA = "0x12DD3DC")]
	private void FreshLiveView()
	{
	}

	[Token(Token = "0x6001875")]
	[Address(RVA = "0x12DD484", Offset = "0x12DD484", VA = "0x12DD484")]
	private void DoShotIn(e_LiveCamera_Model_Type model, int site, LiveCameraConfigData data, ILiveCameraDataCell dataCell)
	{
	}

	[Token(Token = "0x6001876")]
	[Address(RVA = "0x12DD528", Offset = "0x12DD528", VA = "0x12DD528")]
	private void DoShotOut(e_LiveCamera_Model_Type model, int site, LiveCameraConfigData data)
	{
	}

	[Token(Token = "0x6001877")]
	[Address(RVA = "0x12DD5CC", Offset = "0x12DD5CC", VA = "0x12DD5CC")]
	private void DoLiveShotDataCellFresh(int op, int site, ILiveCameraDataCell dCell)
	{
	}

	[Token(Token = "0x6001878")]
	[Address(RVA = "0x12DC824", Offset = "0x12DC824", VA = "0x12DC824")]
	public void SetShowLiveView(bool isShow)
	{
	}

	[Token(Token = "0x6001879")]
	[Address(RVA = "0x12DC9F4", Offset = "0x12DC9F4", VA = "0x12DC9F4")]
	private void ForbidLiveView(bool isForbid)
	{
	}

	[Token(Token = "0x600187A")]
	[Address(RVA = "0x12DCA40", Offset = "0x12DCA40", VA = "0x12DCA40")]
	private void ShowManualSellectView()
	{
	}

	[Token(Token = "0x600187B")]
	[Address(RVA = "0x12DCB80", Offset = "0x12DCB80", VA = "0x12DCB80")]
	private void HiteManualSellectView()
	{
	}

	[Token(Token = "0x600187C")]
	[Address(RVA = "0x12DD678", Offset = "0x12DD678", VA = "0x12DD678")]
	public LiveSystem()
	{
	}
}
[Token(Token = "0x2000311")]
public class CutScenesTools : Singleton<CutScenesTools>
{
	[Token(Token = "0x4001512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Queue<e_CutScenesType> waitCutScenesQueue;

	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private e_CutScenesType curCutScenesType;

	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int cutScenesPoint_1_Time;

	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool cutScenesPoint_1_State;

	[Token(Token = "0x4001516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int cutScenesPoint_2_Time;

	[Token(Token = "0x4001517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool cutScenesPoint_2_State;

	[Token(Token = "0x4001518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isInit;

	[Token(Token = "0x4001519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int timer;

	[Token(Token = "0x170001F4")]
	public bool IsInit
	{
		[Token(Token = "0x600187D")]
		[Address(RVA = "0x121ECD4", Offset = "0x121ECD4", VA = "0x121ECD4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600187E")]
		[Address(RVA = "0x121ECDC", Offset = "0x121ECDC", VA = "0x121ECDC")]
		private set
		{
		}
	}

	[Token(Token = "0x600187F")]
	[Address(RVA = "0x121ECE8", Offset = "0x121ECE8", VA = "0x121ECE8")]
	public void Init(GameDiffculty gameDiffculty)
	{
	}

	[Token(Token = "0x6001880")]
	[Address(RVA = "0x121ECFC", Offset = "0x121ECFC", VA = "0x121ECFC")]
	public void UnInit()
	{
	}

	[Token(Token = "0x6001881")]
	[Address(RVA = "0x121ED1C", Offset = "0x121ED1C", VA = "0x121ED1C")]
	public void ProcessingCutScenes(int millisDeltaTime)
	{
	}

	[Token(Token = "0x6001882")]
	[Address(RVA = "0x121EF78", Offset = "0x121EF78", VA = "0x121EF78")]
	public void TriggerCutScenes(int deadCount)
	{
	}

	[Token(Token = "0x6001883")]
	[Address(RVA = "0x121EEFC", Offset = "0x121EEFC", VA = "0x121EEFC")]
	public void AddCutScenesQueue(e_CutScenesType type)
	{
	}

	[Token(Token = "0x6001884")]
	[Address(RVA = "0x121EFEC", Offset = "0x121EFEC", VA = "0x121EFEC")]
	public void ProcessingCutScenesEnd()
	{
	}

	[Token(Token = "0x6001885")]
	[Address(RVA = "0x121F090", Offset = "0x121F090", VA = "0x121F090")]
	public CutScenesTools()
	{
	}
}
[Token(Token = "0x2000312")]
public class TimeLineManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005FC")]
	private class TimeLineCell
	{
		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public e_CutScenesType type;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayableDirector playableDirector;

		[Token(Token = "0x6002D4A")]
		[Address(RVA = "0x11D9BDC", Offset = "0x11D9BDC", VA = "0x11D9BDC")]
		public TimeLineCell()
		{
		}
	}

	[Token(Token = "0x400151A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TimeLineManager _instance;

	[Token(Token = "0x400151B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<TimeLineCell> timeLineList;

	[Token(Token = "0x400151C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<GameObject> enableList;

	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<GameObject> disableList;

	[Token(Token = "0x170001F5")]
	public static TimeLineManager Instance
	{
		[Token(Token = "0x6001886")]
		[Address(RVA = "0x11D9294", Offset = "0x11D9294", VA = "0x11D9294")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001887")]
	[Address(RVA = "0x11D92E4", Offset = "0x11D92E4", VA = "0x11D92E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001888")]
	[Address(RVA = "0x11D933C", Offset = "0x11D933C", VA = "0x11D933C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001889")]
	[Address(RVA = "0x11D94F4", Offset = "0x11D94F4", VA = "0x11D94F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600188A")]
	[Address(RVA = "0x11D96AC", Offset = "0x11D96AC", VA = "0x11D96AC")]
	public void Control(e_CutScenesType type, bool isPlay)
	{
	}

	[Token(Token = "0x600188B")]
	[Address(RVA = "0x11D9880", Offset = "0x11D9880", VA = "0x11D9880")]
	public void Control_Net(e_CutScenesType type, bool isPlay)
	{
	}

	[Token(Token = "0x600188C")]
	[Address(RVA = "0x11D96B8", Offset = "0x11D96B8", VA = "0x11D96B8")]
	private void Play(e_CutScenesType type)
	{
	}

	[Token(Token = "0x600188D")]
	[Address(RVA = "0x11D979C", Offset = "0x11D979C", VA = "0x11D979C")]
	private void Stop(e_CutScenesType type)
	{
	}

	[Token(Token = "0x600188E")]
	[Address(RVA = "0x11D9A88", Offset = "0x11D9A88", VA = "0x11D9A88")]
	public bool CheckEnd(e_CutScenesType type)
	{
		return default(bool);
	}

	[Token(Token = "0x600188F")]
	[Address(RVA = "0x11D996C", Offset = "0x11D996C", VA = "0x11D996C")]
	private TimeLineCell GetCellByType(e_CutScenesType type)
	{
		return null;
	}

	[Token(Token = "0x6001890")]
	[Address(RVA = "0x11D9AC4", Offset = "0x11D9AC4", VA = "0x11D9AC4")]
	public void StopAll()
	{
	}

	[Token(Token = "0x6001891")]
	[Address(RVA = "0x11D9BD4", Offset = "0x11D9BD4", VA = "0x11D9BD4")]
	public TimeLineManager()
	{
	}
}
[Token(Token = "0x2000313")]
public class PlayAnimatorPlayable : PlayableBehaviour
{
	[Token(Token = "0x400151E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Animator _animator;

	[Token(Token = "0x400151F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string _stateName;

	[Token(Token = "0x4001520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _layer;

	[Token(Token = "0x4001521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _normalizedTime;

	[Token(Token = "0x4001522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private double _duration;

	[Token(Token = "0x6001892")]
	[Address(RVA = "0x152EA68", Offset = "0x152EA68", VA = "0x152EA68")]
	public void Initialize(Animator animator, string stateName, int layer, float normalizedTime)
	{
	}

	[Token(Token = "0x6001893")]
	[Address(RVA = "0x152EAC0", Offset = "0x152EAC0", VA = "0x152EAC0", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x6001894")]
	[Address(RVA = "0x152EAC4", Offset = "0x152EAC4", VA = "0x152EAC4", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x6001895")]
	[Address(RVA = "0x152EAC8", Offset = "0x152EAC8", VA = "0x152EAC8", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001896")]
	[Address(RVA = "0x152EB68", Offset = "0x152EB68", VA = "0x152EB68", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001897")]
	[Address(RVA = "0x152EB6C", Offset = "0x152EB6C", VA = "0x152EB6C", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x6001898")]
	[Address(RVA = "0x152EB70", Offset = "0x152EB70", VA = "0x152EB70")]
	public PlayAnimatorPlayable()
	{
	}
}
[Token(Token = "0x2000314")]
public class CameraFadePlayable : PlayableBehaviour
{
	[Token(Token = "0x4001523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool _isFadeOut;

	[Token(Token = "0x4001524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool _isStop;

	[Token(Token = "0x4001525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private double _duration;

	[Token(Token = "0x6001899")]
	[Address(RVA = "0x12BAF5C", Offset = "0x12BAF5C", VA = "0x12BAF5C")]
	public void Initialize(bool isFadeOut, bool isStop)
	{
	}

	[Token(Token = "0x600189A")]
	[Address(RVA = "0x12BAF70", Offset = "0x12BAF70", VA = "0x12BAF70", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x600189B")]
	[Address(RVA = "0x12BAF74", Offset = "0x12BAF74", VA = "0x12BAF74", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x600189C")]
	[Address(RVA = "0x12BAF78", Offset = "0x12BAF78", VA = "0x12BAF78", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600189D")]
	[Address(RVA = "0x12BB1D8", Offset = "0x12BB1D8", VA = "0x12BB1D8", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600189E")]
	[Address(RVA = "0x12BB2F8", Offset = "0x12BB2F8", VA = "0x12BB2F8", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600189F")]
	[Address(RVA = "0x12BB2FC", Offset = "0x12BB2FC", VA = "0x12BB2FC")]
	public CameraFadePlayable()
	{
	}
}
[Token(Token = "0x2000315")]
public class EffectPlayable : PlayableBehaviour
{
	[Token(Token = "0x4001526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 _pos;

	[Token(Token = "0x4001527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _rot;

	[Token(Token = "0x4001528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject _effectPrefabs;

	[Token(Token = "0x4001529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isLocal;

	[Token(Token = "0x400152A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject _parent;

	[Token(Token = "0x400152B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private EffectDefine _effect;

	[Token(Token = "0x60018A0")]
	[Address(RVA = "0x1230264", Offset = "0x1230264", VA = "0x1230264")]
	public void Initialize(GameObject prefab, Vector3 pos, Vector3 rot, bool isLocal, GameObject parent)
	{
	}

	[Token(Token = "0x60018A1")]
	[Address(RVA = "0x12302E8", Offset = "0x12302E8", VA = "0x12302E8", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x60018A2")]
	[Address(RVA = "0x12302EC", Offset = "0x12302EC", VA = "0x12302EC", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x60018A3")]
	[Address(RVA = "0x12302F0", Offset = "0x12302F0", VA = "0x12302F0", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60018A4")]
	[Address(RVA = "0x12305CC", Offset = "0x12305CC", VA = "0x12305CC", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60018A5")]
	[Address(RVA = "0x12306AC", Offset = "0x12306AC", VA = "0x12306AC", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60018A6")]
	[Address(RVA = "0x12306B0", Offset = "0x12306B0", VA = "0x12306B0")]
	public EffectPlayable()
	{
	}
}
[Token(Token = "0x2000316")]
public class MoveCameraPlayable : PlayableBehaviour
{
	[Token(Token = "0x400152C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isStart;

	[Token(Token = "0x400152D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 _targetPoint;

	[Token(Token = "0x400152E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _lookPoint;

	[Token(Token = "0x400152F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool _isResetCameraRot;

	[Token(Token = "0x60018A7")]
	[Address(RVA = "0x12F30C8", Offset = "0x12F30C8", VA = "0x12F30C8")]
	public void Initialize(Vector3 targetPoint, GameObject lookPoint, bool isResetCameraRot)
	{
	}

	[Token(Token = "0x60018A8")]
	[Address(RVA = "0x12F3104", Offset = "0x12F3104", VA = "0x12F3104", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x60018A9")]
	[Address(RVA = "0x12F3110", Offset = "0x12F3110", VA = "0x12F3110", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x60018AA")]
	[Address(RVA = "0x12F3118", Offset = "0x12F3118", VA = "0x12F3118", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60018AB")]
	[Address(RVA = "0x12F3598", Offset = "0x12F3598", VA = "0x12F3598", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60018AC")]
	[Address(RVA = "0x12F359C", Offset = "0x12F359C", VA = "0x12F359C", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60018AD")]
	[Address(RVA = "0x12F35A0", Offset = "0x12F35A0", VA = "0x12F35A0")]
	public MoveCameraPlayable()
	{
	}
}
[Token(Token = "0x2000317")]
public class WayPointPlayable : PlayableBehaviour
{
	[Token(Token = "0x4001530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isStart;

	[Token(Token = "0x4001531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PathManager _path;

	[Token(Token = "0x4001532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _roleRoot;

	[Token(Token = "0x4001533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private splineMove _splineMove;

	[Token(Token = "0x60018AE")]
	[Address(RVA = "0x1320A40", Offset = "0x1320A40", VA = "0x1320A40")]
	public void Initialize(PathManager path, GameObject roleRoot)
	{
	}

	[Token(Token = "0x60018AF")]
	[Address(RVA = "0x1320A74", Offset = "0x1320A74", VA = "0x1320A74", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x60018B0")]
	[Address(RVA = "0x1320A80", Offset = "0x1320A80", VA = "0x1320A80", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x60018B1")]
	[Address(RVA = "0x1320A88", Offset = "0x1320A88", VA = "0x1320A88", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60018B2")]
	[Address(RVA = "0x1320B98", Offset = "0x1320B98", VA = "0x1320B98", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60018B3")]
	[Address(RVA = "0x1320C1C", Offset = "0x1320C1C", VA = "0x1320C1C", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60018B4")]
	[Address(RVA = "0x1320C20", Offset = "0x1320C20", VA = "0x1320C20")]
	public WayPointPlayable()
	{
	}
}
[Serializable]
[Token(Token = "0x2000318")]
public class CameraFadePlayableAsset : PlayableAsset
{
	[Token(Token = "0x4001534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isFadeOut;

	[Token(Token = "0x4001535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isStop;

	[Token(Token = "0x60018B5")]
	[Address(RVA = "0x12BB304", Offset = "0x12BB304", VA = "0x12BB304", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x60018B6")]
	[Address(RVA = "0x12BB3DC", Offset = "0x12BB3DC", VA = "0x12BB3DC")]
	public CameraFadePlayableAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x2000319")]
public class EffectPlayableAsset : PlayableAsset
{
	[Token(Token = "0x4001536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<GameObject> effectPrefabs;

	[Token(Token = "0x4001537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExposedReference<GameObject> parent;

	[Token(Token = "0x4001538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isLocal;

	[Token(Token = "0x4001539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 pos;

	[Token(Token = "0x400153A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 rot;

	[Token(Token = "0x400153B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject _effectPrefabs;

	[Token(Token = "0x400153C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject _parent;

	[Token(Token = "0x60018B7")]
	[Address(RVA = "0x12306B8", Offset = "0x12306B8", VA = "0x12306B8", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x60018B8")]
	[Address(RVA = "0x1230808", Offset = "0x1230808", VA = "0x1230808")]
	public EffectPlayableAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x200031A")]
public class MoveCameraPlayableAsset : PlayableAsset
{
	[Token(Token = "0x400153D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 _targetPoint;

	[Token(Token = "0x400153E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExposedReference<GameObject> lookPoint;

	[Token(Token = "0x400153F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool _isResetCameraRot;

	[Token(Token = "0x4001540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _lookPoint;

	[Token(Token = "0x60018B9")]
	[Address(RVA = "0x1379F58", Offset = "0x1379F58", VA = "0x1379F58", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x60018BA")]
	[Address(RVA = "0x137A078", Offset = "0x137A078", VA = "0x137A078")]
	public MoveCameraPlayableAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x200031B")]
public class PlayAnimatorPlayableAsset : PlayableAsset
{
	[Token(Token = "0x4001541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Animator> animator;

	[Token(Token = "0x4001542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string stateName;

	[Token(Token = "0x4001543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int layer;

	[Token(Token = "0x4001544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float normalizedTime;

	[Token(Token = "0x4001545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator _animator;

	[Token(Token = "0x60018BB")]
	[Address(RVA = "0x152EB78", Offset = "0x152EB78", VA = "0x152EB78", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x60018BC")]
	[Address(RVA = "0x152ECA8", Offset = "0x152ECA8", VA = "0x152ECA8")]
	public PlayAnimatorPlayableAsset()
	{
	}
}
[Serializable]
[Token(Token = "0x200031C")]
public class WayPointPlayableAsset : PlayableAsset
{
	[Token(Token = "0x4001546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<PathManager> path;

	[Token(Token = "0x4001547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExposedReference<GameObject> roleRoot;

	[Token(Token = "0x4001548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PathManager _path;

	[Token(Token = "0x4001549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _roleRoot;

	[Token(Token = "0x60018BD")]
	[Address(RVA = "0x1320C28", Offset = "0x1320C28", VA = "0x1320C28", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x60018BE")]
	[Address(RVA = "0x1320D88", Offset = "0x1320D88", VA = "0x1320D88")]
	public WayPointPlayableAsset()
	{
	}
}
[Token(Token = "0x200031D")]
public class CalibrationOffsetTools : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005FD")]
	public class Calibrationinfo
	{
		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float y_offset;

		[Token(Token = "0x6002D4B")]
		[Address(RVA = "0x12BA144", Offset = "0x12BA144", VA = "0x12BA144")]
		public Calibrationinfo()
		{
		}
	}

	[Token(Token = "0x400154A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform calibrationCamera;

	[Token(Token = "0x400154B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform _idealStartPoint;

	[Token(Token = "0x400154C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _idealEndPoint;

	[Token(Token = "0x400154D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject calibrationRoot;

	[Token(Token = "0x400154E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _actualStartPoint;

	[Token(Token = "0x400154F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _actualEndPoint;

	[Token(Token = "0x4001550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Calibrationinfo curCalibrationinfo;

	[Token(Token = "0x4001551")]
	private const string jsonName = "/calibrationinfo.json";

	[Token(Token = "0x60018BF")]
	[Address(RVA = "0x12B98E0", Offset = "0x12B98E0", VA = "0x12B98E0")]
	public void Init()
	{
	}

	[Token(Token = "0x60018C0")]
	[Address(RVA = "0x12B9B10", Offset = "0x12B9B10", VA = "0x12B9B10")]
	public void Clear()
	{
	}

	[Token(Token = "0x60018C1")]
	[Address(RVA = "0x12B9C5C", Offset = "0x12B9C5C", VA = "0x12B9C5C")]
	private void WriteJson()
	{
	}

	[Token(Token = "0x60018C2")]
	[Address(RVA = "0x12B992C", Offset = "0x12B992C", VA = "0x12B992C")]
	private Calibrationinfo ReadJson()
	{
		return null;
	}

	[Token(Token = "0x60018C3")]
	[Address(RVA = "0x12B9BE0", Offset = "0x12B9BE0", VA = "0x12B9BE0")]
	private void ClearJson()
	{
	}

	[Token(Token = "0x60018C4")]
	[Address(RVA = "0x12B9D10", Offset = "0x12B9D10", VA = "0x12B9D10")]
	public void StartCalibration()
	{
	}

	[Token(Token = "0x60018C5")]
	[Address(RVA = "0x12B9D48", Offset = "0x12B9D48", VA = "0x12B9D48")]
	public void EndCalibration()
	{
	}

	[Token(Token = "0x60018C6")]
	[Address(RVA = "0x12B9EC8", Offset = "0x12B9EC8", VA = "0x12B9EC8")]
	public static float GetCalibrationAngle(Vector3 startPoint, Vector3 idealEndPoint, Vector3 actualStartPoint, Vector3 actualEndPoint)
	{
		return default(float);
	}

	[Token(Token = "0x60018C7")]
	[Address(RVA = "0x12B9A88", Offset = "0x12B9A88", VA = "0x12B9A88")]
	public void DoCalibration(Calibrationinfo info)
	{
	}

	[Token(Token = "0x60018C8")]
	[Address(RVA = "0x12B9B58", Offset = "0x12B9B58", VA = "0x12B9B58")]
	public void DoRestoreCalibration(Calibrationinfo info)
	{
	}

	[Token(Token = "0x60018C9")]
	[Address(RVA = "0x12BA14C", Offset = "0x12BA14C", VA = "0x12BA14C")]
	public CalibrationOffsetTools()
	{
	}
}
[Token(Token = "0x200031E")]
public class CalibrationTest : MonoBehaviour
{
	[Token(Token = "0x4001552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CalibrationOffsetTools cTools;

	[Token(Token = "0x60018CA")]
	[Address(RVA = "0x12BA154", Offset = "0x12BA154", VA = "0x12BA154")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60018CB")]
	[Address(RVA = "0x12BA454", Offset = "0x12BA454", VA = "0x12BA454")]
	public CalibrationTest()
	{
	}
}
[Token(Token = "0x200031F")]
public class FixSteamVR : Singleton<FixSteamVR>
{
	[Token(Token = "0x20005FE")]
	public struct defaultsettings
	{
		[Token(Token = "0x2000976")]
		public struct steamvrsettings
		{
			[Token(Token = "0x40023A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legacyInputRebinding;
		}

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public steamvrsettings steamvr;
	}

	[Token(Token = "0x20005FF")]
	public struct driverdefaultsvrsettings
	{
		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool enable;
	}

	[Token(Token = "0x4001553")]
	private const string versionPath = "bin\\version.txt";

	[Token(Token = "0x4001554")]
	private const string defaultPath = "resources\\settings\\default.vrsettings";

	[Token(Token = "0x4001555")]
	private const string driver_defaultsPath = "resources\\settings\\driver_defaults.vrsettings";

	[Token(Token = "0x4001556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE9454", Offset = "0xEE9454")]
	private int <SteamVRRuntimeNum>k__BackingField;

	[Token(Token = "0x4001557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE9464", Offset = "0xEE9464")]
	private bool <IsNeedCheckFix>k__BackingField;

	[Token(Token = "0x4001558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE9474", Offset = "0xEE9474")]
	private bool <IsNeedFix>k__BackingField;

	[Token(Token = "0x170001F6")]
	public int SteamVRRuntimeNum
	{
		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x1328FB8", Offset = "0x1328FB8", VA = "0x1328FB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0E0C", Offset = "0xEF0E0C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x1328FC0", Offset = "0x1328FC0", VA = "0x1328FC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0E1C", Offset = "0xEF0E1C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001F7")]
	public bool IsNeedCheckFix
	{
		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x1328FC8", Offset = "0x1328FC8", VA = "0x1328FC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0E2C", Offset = "0xEF0E2C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x1328FD0", Offset = "0x1328FD0", VA = "0x1328FD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0E3C", Offset = "0xEF0E3C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001F8")]
	public bool IsNeedFix
	{
		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x1328FDC", Offset = "0x1328FDC", VA = "0x1328FDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0E4C", Offset = "0xEF0E4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x1328FE4", Offset = "0x1328FE4", VA = "0x1328FE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0E5C", Offset = "0xEF0E5C")]
		private set
		{
		}
	}

	[PreserveSig]
	[Token(Token = "0x60018CC")]
	[Address(RVA = "0x1328ED4", Offset = "0x1328ED4", VA = "0x1328ED4")]
	internal static extern IntPtr RuntimePath();

	[Token(Token = "0x60018CD")]
	[Address(RVA = "0x1328F48", Offset = "0x1328F48", VA = "0x1328F48")]
	public static string GetRuntimePath()
	{
		return null;
	}

	[Token(Token = "0x60018D4")]
	[Address(RVA = "0x1328FF0", Offset = "0x1328FF0", VA = "0x1328FF0")]
	public void Init()
	{
	}

	[Token(Token = "0x60018D5")]
	[Address(RVA = "0x1328FF4", Offset = "0x1328FF4", VA = "0x1328FF4")]
	private void OnDeviceConnected(int index, bool connected)
	{
	}

	[Token(Token = "0x60018D6")]
	[Address(RVA = "0x1328FF8", Offset = "0x1328FF8", VA = "0x1328FF8")]
	public bool IsNeedFixController(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60018D7")]
	[Address(RVA = "0x1329000", Offset = "0x1329000", VA = "0x1329000")]
	private void CheckRuntimeVersion()
	{
	}

	[Token(Token = "0x60018D8")]
	[Address(RVA = "0x1329004", Offset = "0x1329004", VA = "0x1329004")]
	private void CheckNeedFixRotation()
	{
	}

	[Token(Token = "0x60018D9")]
	[Address(RVA = "0x1329008", Offset = "0x1329008", VA = "0x1329008")]
	public FixSteamVR()
	{
	}
}
[Token(Token = "0x2000320")]
public class FollowVRCamera : MonoBehaviour
{
	[Token(Token = "0x4001559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400155A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool syncPositionX;

	[Token(Token = "0x400155B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool syncPositionY;

	[Token(Token = "0x400155C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool syncPositionZ;

	[Token(Token = "0x400155D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool syncRotateX;

	[Token(Token = "0x400155E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool syncRotateY;

	[Token(Token = "0x400155F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool syncRotateZ;

	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool isOverriadY;

	[Token(Token = "0x4001561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool useDefaultRotate;

	[Token(Token = "0x4001562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float overriadY;

	[Token(Token = "0x4001563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion defaultRotate;

	[Token(Token = "0x4001564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 offset;

	[Token(Token = "0x4001565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float forwardOffset;

	[Token(Token = "0x4001566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform mVRCamera;

	[Token(Token = "0x60018DA")]
	[Address(RVA = "0x132CF44", Offset = "0x132CF44", VA = "0x132CF44")]
	private void Start()
	{
	}

	[Token(Token = "0x60018DB")]
	[Address(RVA = "0x132CF80", Offset = "0x132CF80", VA = "0x132CF80")]
	public void Init()
	{
	}

	[Token(Token = "0x60018DC")]
	[Address(RVA = "0x132D060", Offset = "0x132D060", VA = "0x132D060")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60018DD")]
	[Address(RVA = "0x132D578", Offset = "0x132D578", VA = "0x132D578")]
	public FollowVRCamera()
	{
	}
}
[Token(Token = "0x2000321")]
public class FollowVRController : MonoBehaviour
{
	[Token(Token = "0x4001567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4001568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool syncPositionX;

	[Token(Token = "0x4001569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool syncPositionY;

	[Token(Token = "0x400156A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool syncPositionZ;

	[Token(Token = "0x400156B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool syncRotateX;

	[Token(Token = "0x400156C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool syncRotateY;

	[Token(Token = "0x400156D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool syncRotateZ;

	[Token(Token = "0x400156E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool isOverriadY;

	[Token(Token = "0x400156F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool useDefaultRotate;

	[Token(Token = "0x4001570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float overriadY;

	[Token(Token = "0x4001571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform offsetTarget;

	[Token(Token = "0x4001572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion defaultRotate;

	[Token(Token = "0x4001573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Transform currentController;

	[Token(Token = "0x4001574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 controllerAdjustRotation;

	[Token(Token = "0x4001575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 controllerAdjustPosition;

	[Token(Token = "0x4001576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE9494", Offset = "0xEE9494")]
	private int <index>k__BackingField;

	[Token(Token = "0x4001577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool isRight;

	[Token(Token = "0x4001578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int weapon_type;

	[Token(Token = "0x4001579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 offset_pos;

	[Token(Token = "0x400157A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 offset_rot;

	[Token(Token = "0x400157B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool isHapticPulse;

	[Token(Token = "0x400157C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float hapticDuration;

	[Token(Token = "0x400157D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float hapticValue;

	[Token(Token = "0x400157E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AnimationCurve hapticCurve;

	[Token(Token = "0x400157F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float hapticTimer;

	[Token(Token = "0x170001F9")]
	public int index
	{
		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x132D590", Offset = "0x132D590", VA = "0x132D590")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0E6C", Offset = "0xEF0E6C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x132D598", Offset = "0x132D598", VA = "0x132D598")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0E7C", Offset = "0xEF0E7C")]
		private set
		{
		}
	}

	[Token(Token = "0x60018E0")]
	[Address(RVA = "0x132D5A0", Offset = "0x132D5A0", VA = "0x132D5A0")]
	public void ChangeFollowController(Transform target, bool _isRight, int _weapon_type)
	{
	}

	[Token(Token = "0x60018E1")]
	[Address(RVA = "0x132D66C", Offset = "0x132D66C", VA = "0x132D66C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60018E2")]
	[Address(RVA = "0x132D750", Offset = "0x132D750", VA = "0x132D750")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60018E3")]
	[Address(RVA = "0x132D99C", Offset = "0x132D99C", VA = "0x132D99C")]
	private void OnMoveEmulatorOffset(Vector3 _offset_pos, Vector3 _offset_rot)
	{
	}

	[Token(Token = "0x60018E4")]
	[Address(RVA = "0x132D890", Offset = "0x132D890", VA = "0x132D890")]
	private void ResetOffsetPosition()
	{
	}

	[Token(Token = "0x60018E5")]
	[Address(RVA = "0x132D9AC", Offset = "0x132D9AC", VA = "0x132D9AC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xEF0E8C", Offset = "0xEF0E8C")]
	public void TriggerHapticPulse_1()
	{
	}

	[Token(Token = "0x60018E6")]
	[Address(RVA = "0x132DA88", Offset = "0x132DA88", VA = "0x132DA88")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xEF0EC4", Offset = "0xEF0EC4")]
	public void Refresh_1()
	{
	}

	[Token(Token = "0x60018E7")]
	[Address(RVA = "0x132D9C0", Offset = "0x132D9C0", VA = "0x132D9C0")]
	public void TriggerHapticPulse(float _duration, float _value, [Optional] AnimationCurve _hapticCurveCurve)
	{
	}

	[Token(Token = "0x60018E8")]
	[Address(RVA = "0x132D984", Offset = "0x132D984", VA = "0x132D984")]
	public void StopHapticPulse()
	{
	}

	[Token(Token = "0x60018E9")]
	[Address(RVA = "0x132DA8C", Offset = "0x132DA8C", VA = "0x132DA8C")]
	private void ProcessingHapticPulse()
	{
	}

	[Token(Token = "0x60018EA")]
	[Address(RVA = "0x132D5E4", Offset = "0x132D5E4", VA = "0x132D5E4")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60018EB")]
	[Address(RVA = "0x132DAF0", Offset = "0x132DAF0", VA = "0x132DAF0")]
	private void ProcessHardwareType()
	{
	}

	[Token(Token = "0x60018EC")]
	[Address(RVA = "0x132DFC0", Offset = "0x132DFC0", VA = "0x132DFC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60018ED")]
	[Address(RVA = "0x132DFF8", Offset = "0x132DFF8", VA = "0x132DFF8")]
	private void Update()
	{
	}

	[Token(Token = "0x60018EE")]
	[Address(RVA = "0x132DFFC", Offset = "0x132DFFC", VA = "0x132DFFC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60018EF")]
	[Address(RVA = "0x132E458", Offset = "0x132E458", VA = "0x132E458")]
	public FollowVRController()
	{
	}
}
[Token(Token = "0x2000322")]
public class VRManager : MonoBehaviour
{
	[Token(Token = "0x2000600")]
	public enum ControllerType
	{
		[Token(Token = "0x4002211")]
		Left,
		[Token(Token = "0x4002212")]
		Right
	}

	[Token(Token = "0x4001580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CheckVRDeviced checkVRDeviced;

	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject VR_ControllerManager;

	[Token(Token = "0x4001582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Camera mainCamera;

	[Token(Token = "0x4001583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public GameObject VRHand_Left;

	[Token(Token = "0x4001584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public GameObject VRHand_Right;

	[Token(Token = "0x4001585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public GameObject VRHeadObject;

	[Token(Token = "0x4001586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static VRManager _instance;

	[Token(Token = "0x4001587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE94E4", Offset = "0xEE94E4")]
	private Vector3 <InitPos>k__BackingField;

	[Token(Token = "0x4001588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion InitRot;

	[Token(Token = "0x4001589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform playerHeightRoot;

	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE94F4", Offset = "0xEE94F4")]
	private bool <OpenVRFeature>k__BackingField;

	[Token(Token = "0x400158B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float DefaultPlayerHeight;

	[Token(Token = "0x400158C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float DefaultModelHeight;

	[Token(Token = "0x400158D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float DefaultHMDHeightOffset;

	[Token(Token = "0x400158E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float DefaultModelMaxHeight;

	[Token(Token = "0x400158F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float DefaultModelMaxHeightAntilatency;

	[Token(Token = "0x4001590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float DefaultSapceHeightAntilatency;

	[Token(Token = "0x4001591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE9504", Offset = "0xEE9504")]
	private float <PlayerHeight>k__BackingField;

	[Token(Token = "0x4001592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE9514", Offset = "0xEE9514")]
	private float <PlayerHeightOffset>k__BackingField;

	[Token(Token = "0x4001593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE9524", Offset = "0xEE9524")]
	private float <PlayerHeightRate>k__BackingField;

	[Token(Token = "0x4001594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE9534", Offset = "0xEE9534")]
	private float <ModelHeight>k__BackingField;

	[Token(Token = "0x4001595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Action OnInitPlayer;

	[Token(Token = "0x170001FA")]
	public static VRManager Instance
	{
		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x13160F0", Offset = "0x13160F0", VA = "0x13160F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001FB")]
	public Vector3 InitPos
	{
		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x1316140", Offset = "0x1316140", VA = "0x1316140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0EFC", Offset = "0xEF0EFC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x131614C", Offset = "0x131614C", VA = "0x131614C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0F0C", Offset = "0xEF0F0C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001FC")]
	public bool OpenVRFeature
	{
		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x13161B0", Offset = "0x13161B0", VA = "0x13161B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0F1C", Offset = "0xEF0F1C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x13161B8", Offset = "0x13161B8", VA = "0x13161B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0F2C", Offset = "0xEF0F2C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001FD")]
	[HideInInspector]
	public float PlayerHeight
	{
		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x1317108", Offset = "0x1317108", VA = "0x1317108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0F3C", Offset = "0xEF0F3C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001900")]
		[Address(RVA = "0x1317110", Offset = "0x1317110", VA = "0x1317110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0F4C", Offset = "0xEF0F4C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001FE")]
	[HideInInspector]
	public float PlayerHeightOffset
	{
		[Token(Token = "0x6001901")]
		[Address(RVA = "0x1317118", Offset = "0x1317118", VA = "0x1317118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0F5C", Offset = "0xEF0F5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001902")]
		[Address(RVA = "0x1317120", Offset = "0x1317120", VA = "0x1317120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0F6C", Offset = "0xEF0F6C")]
		private set
		{
		}
	}

	[Token(Token = "0x170001FF")]
	[HideInInspector]
	public float PlayerHeightRate
	{
		[Token(Token = "0x6001903")]
		[Address(RVA = "0x1317128", Offset = "0x1317128", VA = "0x1317128")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0F7C", Offset = "0xEF0F7C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001904")]
		[Address(RVA = "0x1317130", Offset = "0x1317130", VA = "0x1317130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0F8C", Offset = "0xEF0F8C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000200")]
	[HideInInspector]
	public float ModelHeight
	{
		[Token(Token = "0x6001905")]
		[Address(RVA = "0x1317138", Offset = "0x1317138", VA = "0x1317138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0F9C", Offset = "0xEF0F9C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001906")]
		[Address(RVA = "0x1317140", Offset = "0x1317140", VA = "0x1317140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0FAC", Offset = "0xEF0FAC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000201")]
	public float CurRealHeight
	{
		[Token(Token = "0x6001907")]
		[Address(RVA = "0x1317148", Offset = "0x1317148", VA = "0x1317148")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000202")]
	public float CurPlayerHeight
	{
		[Token(Token = "0x6001908")]
		[Address(RVA = "0x13172A8", Offset = "0x13172A8", VA = "0x13172A8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000203")]
	public float CurGroundHeight
	{
		[Token(Token = "0x6001909")]
		[Address(RVA = "0x13173E4", Offset = "0x13173E4", VA = "0x13173E4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60018F3")]
	[Address(RVA = "0x1316158", Offset = "0x1316158", VA = "0x1316158")]
	private void Awake()
	{
	}

	[Token(Token = "0x60018F6")]
	[Address(RVA = "0x13161C4", Offset = "0x13161C4", VA = "0x13161C4")]
	public void Init(bool useVRInput)
	{
	}

	[Token(Token = "0x60018F7")]
	[Address(RVA = "0x13164B0", Offset = "0x13164B0", VA = "0x13164B0")]
	public void SetVRCamera(GameObject vrMgr)
	{
	}

	[Token(Token = "0x60018F8")]
	[Address(RVA = "0x1316274", Offset = "0x1316274", VA = "0x1316274")]
	public void SetFirstPersonCamera(Camera mainCamera)
	{
	}

	[Token(Token = "0x60018F9")]
	[Address(RVA = "0x1316A78", Offset = "0x1316A78", VA = "0x1316A78")]
	public Vector3 GetAreaStandPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60018FA")]
	[Address(RVA = "0x1316B48", Offset = "0x1316B48", VA = "0x1316B48")]
	public Vector3 GetAreaStandForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60018FB")]
	[Address(RVA = "0x1316C18", Offset = "0x1316C18", VA = "0x1316C18")]
	public Quaternion GetAreaStandRot()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60018FC")]
	[Address(RVA = "0x1316CE8", Offset = "0x1316CE8", VA = "0x1316CE8")]
	public Vector3 GetAreaStandRight()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60018FD")]
	[Address(RVA = "0x1316DB8", Offset = "0x1316DB8", VA = "0x1316DB8")]
	public void SetAreaStandPosAndRot(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60018FE")]
	[Address(RVA = "0x131700C", Offset = "0x131700C", VA = "0x131700C")]
	public void SetMainCameraInit()
	{
	}

	[Token(Token = "0x600190A")]
	[Address(RVA = "0x13174B8", Offset = "0x13174B8", VA = "0x13174B8")]
	public void InitPlayerHeight()
	{
	}

	[Token(Token = "0x600190B")]
	[Address(RVA = "0x13175F0", Offset = "0x13175F0", VA = "0x13175F0")]
	public void InitPlayerHeightOffset()
	{
	}

	[Token(Token = "0x600190C")]
	[Address(RVA = "0x1317A94", Offset = "0x1317A94", VA = "0x1317A94")]
	public void ResetDefaultPlayerHeight()
	{
	}

	[Token(Token = "0x600190D")]
	[Address(RVA = "0x1317B94", Offset = "0x1317B94", VA = "0x1317B94")]
	public VRManager()
	{
	}
}
[Token(Token = "0x2000323")]
public class CheckVRDeviced : MonoBehaviour
{
	[Token(Token = "0x4001596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE9544", Offset = "0xEE9544")]
	public bool executeGetpressDown;

	[Token(Token = "0x4001597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject right;

	[Token(Token = "0x4001598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isHmdNormal;

	[Token(Token = "0x4001599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isControllerNormal;

	[Token(Token = "0x400159A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool alreadyShot;

	[Token(Token = "0x400159B")]
	private const string HMD = "HMD";

	[Token(Token = "0x400159C")]
	private const string CONTROLLER = "controller";

	[Token(Token = "0x400159D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool isInit;

	[Token(Token = "0x400159E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool controllerActive;

	[Token(Token = "0x400159F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool wascontrollerActive;

	[Token(Token = "0x17000204")]
	[HideInInspector]
	public bool AlreadyShot
	{
		[Token(Token = "0x600190E")]
		[Address(RVA = "0x120A978", Offset = "0x120A978", VA = "0x120A978")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600190F")]
		[Address(RVA = "0x120A980", Offset = "0x120A980", VA = "0x120A980")]
		set
		{
		}
	}

	[Token(Token = "0x6001910")]
	[Address(RVA = "0x120AABC", Offset = "0x120AABC", VA = "0x120AABC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001911")]
	[Address(RVA = "0x120AAC0", Offset = "0x120AAC0", VA = "0x120AAC0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001912")]
	[Address(RVA = "0x120AAC4", Offset = "0x120AAC4", VA = "0x120AAC4")]
	public void GameReady()
	{
	}

	[Token(Token = "0x6001913")]
	[Address(RVA = "0x120AB5C", Offset = "0x120AB5C", VA = "0x120AB5C")]
	public void GameStart()
	{
	}

	[Token(Token = "0x6001914")]
	[Address(RVA = "0x120ABE0", Offset = "0x120ABE0", VA = "0x120ABE0")]
	public void Init()
	{
	}

	[Token(Token = "0x6001915")]
	[Address(RVA = "0x120ACC4", Offset = "0x120ACC4", VA = "0x120ACC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001916")]
	[Address(RVA = "0x120ACD4", Offset = "0x120ACD4", VA = "0x120ACD4")]
	private void CheckController()
	{
	}

	[Token(Token = "0x6001917")]
	[Address(RVA = "0x120AD6C", Offset = "0x120AD6C", VA = "0x120AD6C")]
	private void OnHMDAcquired()
	{
	}

	[Token(Token = "0x6001918")]
	[Address(RVA = "0x120AE28", Offset = "0x120AE28", VA = "0x120AE28")]
	private void OnHMDLost()
	{
	}

	[Token(Token = "0x6001919")]
	[Address(RVA = "0x120AD80", Offset = "0x120AD80", VA = "0x120AD80")]
	public void SendVRHmd(int vrValue)
	{
	}

	[Token(Token = "0x600191A")]
	[Address(RVA = "0x120AA14", Offset = "0x120AA14", VA = "0x120AA14")]
	public void SendVRController(int vrValue)
	{
	}

	[Token(Token = "0x600191B")]
	[Address(RVA = "0x120AE3C", Offset = "0x120AE3C", VA = "0x120AE3C")]
	public CheckVRDeviced()
	{
	}
}
[Token(Token = "0x2000324")]
public interface ILanguageHotSwitch
{
	[Token(Token = "0x600191C")]
	void HotSwitch(e_type_language type_Language);
}
[Token(Token = "0x2000325")]
public class SystemLanguageManager : Singleton<SystemLanguageManager>
{
	[Token(Token = "0x600191D")]
	[Address(RVA = "0x12CDEF8", Offset = "0x12CDEF8", VA = "0x12CDEF8")]
	public e_type_language GetSystemLanguage()
	{
		return default(e_type_language);
	}

	[Token(Token = "0x600191E")]
	[Address(RVA = "0x12CE04C", Offset = "0x12CE04C", VA = "0x12CE04C")]
	public SystemLanguageManager()
	{
	}
}
[Token(Token = "0x2000326")]
public class VRPlatformHelper : Singleton<VRPlatformHelper>
{
	[Token(Token = "0x40015A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IPEndPoint rInfo;

	[Token(Token = "0x40015A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IPEndPoint sInfo;

	[Token(Token = "0x40015A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IPEndPoint localInfo;

	[Token(Token = "0x40015A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action VRPlatformConnectCB;

	[Token(Token = "0x40015A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dictionary<string, IPEndPoint> ipDic;

	[Token(Token = "0x40015A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isConnect;

	[Token(Token = "0x40015A6")]
	private const float reconnectHostInterval = 1f;

	[Token(Token = "0x40015A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float reconnectTimer;

	[Token(Token = "0x40015A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isInit;

	[Token(Token = "0x40015A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool isPlatformNewData;

	[Token(Token = "0x40015AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private byte ERROR_NOT_CONNCET_TO_HOST;

	[Token(Token = "0x40015AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	private byte ERROR_NOT_CONNCET_TO_PLATFORM;

	[Token(Token = "0x40015AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ObscuredInt GAMEID_1;

	[Token(Token = "0x40015AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ObscuredInt GAMEID_2;

	[Token(Token = "0x17000205")]
	private ObscuredInt GAMEID
	{
		[Token(Token = "0x600191F")]
		[Address(RVA = "0x1317BB8", Offset = "0x1317BB8", VA = "0x1317BB8")]
		get
		{
			return default(ObscuredInt);
		}
	}

	[Token(Token = "0x6001920")]
	[Address(RVA = "0x1317C64", Offset = "0x1317C64", VA = "0x1317C64")]
	public void DoInit(Action connectCB)
	{
	}

	[Token(Token = "0x6001921")]
	[Address(RVA = "0x1318B48", Offset = "0x1318B48", VA = "0x1318B48")]
	public void DoUpdate()
	{
	}

	[Token(Token = "0x6001922")]
	[Address(RVA = "0x1318CAC", Offset = "0x1318CAC", VA = "0x1318CAC")]
	public void DoAppQuit()
	{
	}

	[Token(Token = "0x6001923")]
	[Address(RVA = "0x1318A44", Offset = "0x1318A44", VA = "0x1318A44")]
	private void AutoConnection()
	{
	}

	[Token(Token = "0x6001924")]
	[Address(RVA = "0x1318E1C", Offset = "0x1318E1C", VA = "0x1318E1C")]
	private void PlayerConnectHandle(PlayerConnectProtocol p)
	{
	}

	[Token(Token = "0x6001925")]
	[Address(RVA = "0x1319C04", Offset = "0x1319C04", VA = "0x1319C04")]
	private void PlayerStatusHandle(PlayerStatusProtocol p)
	{
	}

	[Token(Token = "0x6001926")]
	[Address(RVA = "0x131A1F0", Offset = "0x131A1F0", VA = "0x131A1F0")]
	private void PlayerInfoHandle(PlayerInfoProtocol p)
	{
	}

	[Token(Token = "0x6001927")]
	[Address(RVA = "0x131A664", Offset = "0x131A664", VA = "0x131A664")]
	private void GameStartHandle(GameStartProtocol p)
	{
	}

	[Token(Token = "0x6001928")]
	[Address(RVA = "0x131B328", Offset = "0x131B328", VA = "0x131B328")]
	private void GameEndHandle()
	{
	}

	[Token(Token = "0x6001929")]
	[Address(RVA = "0x131B4D4", Offset = "0x131B4D4", VA = "0x131B4D4")]
	private void TeamInfoHandle(PlayerWXInfoProtocol playerWXInfoProtocol)
	{
	}

	[Token(Token = "0x600192A")]
	[Address(RVA = "0x131BB50", Offset = "0x131BB50", VA = "0x131BB50")]
	private void LoadSavHandle(GetLoadSavProtocol getLoadSavProtocol)
	{
	}

	[Token(Token = "0x600192B")]
	[Address(RVA = "0x131C0FC", Offset = "0x131C0FC", VA = "0x131C0FC")]
	private void CloseGameHandle()
	{
	}

	[Token(Token = "0x600192C")]
	[Address(RVA = "0x131C170", Offset = "0x131C170", VA = "0x131C170")]
	public void SendGameStatistics(GameStatisticsProtocol protocol)
	{
	}

	[Token(Token = "0x600192D")]
	[Address(RVA = "0x131C350", Offset = "0x131C350", VA = "0x131C350")]
	public void SendCmd8(string type, int value)
	{
	}

	[Token(Token = "0x600192E")]
	[Address(RVA = "0x1319F7C", Offset = "0x1319F7C", VA = "0x1319F7C")]
	public void SendIsEnableStatusRespon(byte type, string ip)
	{
	}

	[Token(Token = "0x600192F")]
	[Address(RVA = "0x131B0B8", Offset = "0x131B0B8", VA = "0x131B0B8")]
	public void SendGameStartRespon(bool flag)
	{
	}

	[Token(Token = "0x6001930")]
	[Address(RVA = "0x131C568", Offset = "0x131C568", VA = "0x131C568")]
	public void SendCmd15()
	{
	}

	[Token(Token = "0x6001931")]
	[Address(RVA = "0x1319BD4", Offset = "0x1319BD4", VA = "0x1319BD4")]
	private e_Player_Style ConvetorStyle(int rawData)
	{
		return default(e_Player_Style);
	}

	[Token(Token = "0x6001932")]
	[Address(RVA = "0x131C770", Offset = "0x131C770", VA = "0x131C770")]
	public VRPlatformHelper()
	{
	}
}
[Token(Token = "0x2000327")]
public class VRPlatformTest : MonoBehaviour
{
	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sendIp;

	[Token(Token = "0x6001933")]
	[Address(RVA = "0x131C884", Offset = "0x131C884", VA = "0x131C884")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001934")]
	[Address(RVA = "0x131CA60", Offset = "0x131CA60", VA = "0x131CA60")]
	public VRPlatformTest()
	{
	}
}
[Token(Token = "0x2000328")]
public class MoveEmulator : MonoBehaviour
{
	[Token(Token = "0x40015AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Action<Vector3, Vector3> offset_Action;

	[Token(Token = "0x40015B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform centerEyeAnchor;

	[Token(Token = "0x40015B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed_Pos;

	[Token(Token = "0x40015B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Speed_Rot;

	[Token(Token = "0x6001935")]
	[Address(RVA = "0x137A13C", Offset = "0x137A13C", VA = "0x137A13C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001936")]
	[Address(RVA = "0x137A140", Offset = "0x137A140", VA = "0x137A140")]
	public (Vector3, Vector3) GetOffset()
	{
		return default((Vector3, Vector3));
	}

	[Token(Token = "0x6001937")]
	[Address(RVA = "0x137A234", Offset = "0x137A234", VA = "0x137A234")]
	private void Update()
	{
	}

	[Token(Token = "0x6001938")]
	[Address(RVA = "0x137A560", Offset = "0x137A560", VA = "0x137A560")]
	public MoveEmulator()
	{
	}
}
[Token(Token = "0x2000329")]
public class AIBulletStraight : Bullet
{
	[Serializable]
	[Token(Token = "0x2000601")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5060", Offset = "0xEE5060")]
	private sealed class <>c
	{
		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__15_0;

		[Token(Token = "0x6002D4D")]
		[Address(RVA = "0x17F42F4", Offset = "0x17F42F4", VA = "0x17F42F4")]
		public <>c()
		{
		}

		[Token(Token = "0x6002D4E")]
		[Address(RVA = "0x17F42FC", Offset = "0x17F42FC", VA = "0x17F42FC")]
		internal int <RayCheck>b__15_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float velocity;

	[Token(Token = "0x40015B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject effectRoot;

	[Token(Token = "0x40015B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float delayDisplay;

	[Token(Token = "0x40015B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 lastPos;

	[Token(Token = "0x40015B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 forward;

	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3 curPos;

	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Coroutine coroutine;

	[Token(Token = "0x40015BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastHit[] tempRaycastHits;

	[Token(Token = "0x40015BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<RaycastHit> tempSortList;

	[Token(Token = "0x6001939")]
	[Address(RVA = "0x17F3824", Offset = "0x17F3824", VA = "0x17F3824", Slot = "4")]
	public override void DoInit(WUnit attacker, Weapon weapon)
	{
	}

	[Token(Token = "0x600193A")]
	[Address(RVA = "0x17F3970", Offset = "0x17F3970", VA = "0x17F3970", Slot = "5")]
	protected override void DoUpdate(float deltaTime)
	{
	}

	[Token(Token = "0x600193B")]
	[Address(RVA = "0x17F3EFC", Offset = "0x17F3EFC", VA = "0x17F3EFC", Slot = "6")]
	protected override void DoLateUpdate()
	{
	}

	[Token(Token = "0x600193C")]
	[Address(RVA = "0x17F3F04", Offset = "0x17F3F04", VA = "0x17F3F04", Slot = "9")]
	public override void DoDestroy()
	{
	}

	[Token(Token = "0x600193D")]
	[Address(RVA = "0x17F39B8", Offset = "0x17F39B8", VA = "0x17F39B8")]
	private void PreMove(float deltatime)
	{
	}

	[Token(Token = "0x600193E")]
	[Address(RVA = "0x17F3ED4", Offset = "0x17F3ED4", VA = "0x17F3ED4")]
	private void Move(float deltatime)
	{
	}

	[Token(Token = "0x600193F")]
	[Address(RVA = "0x17F3A98", Offset = "0x17F3A98", VA = "0x17F3A98")]
	private void RayCheck()
	{
	}

	[Token(Token = "0x6001940")]
	[Address(RVA = "0x17F3F3C", Offset = "0x17F3F3C", VA = "0x17F3F3C")]
	private bool HitTarget(RaycastHit hit)
	{
		return default(bool);
	}

	[Token(Token = "0x6001941")]
	[Address(RVA = "0x17F40FC", Offset = "0x17F40FC", VA = "0x17F40FC")]
	public AIBulletStraight()
	{
	}

	[Token(Token = "0x6001943")]
	[Address(RVA = "0x17F426C", Offset = "0x17F426C", VA = "0x17F426C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0FBC", Offset = "0xEF0FBC")]
	private void <DoInit>b__7_0()
	{
	}
}
[Token(Token = "0x200032A")]
public class AlphaGun : MonoBehaviour
{
	[Token(Token = "0x40015BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Weapon_AIRifle gun;

	[Token(Token = "0x40015BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float retargetTime;

	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float reloadReactionTime;

	[Token(Token = "0x40015BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float reloadDelay;

	[Token(Token = "0x40015C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float checkBulletTime;

	[Token(Token = "0x40015C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float findNearPercent;

	[Token(Token = "0x40015C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine cr_fire;

	[Token(Token = "0x40015C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine cr_find;

	[Token(Token = "0x40015C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine cr_reload;

	[Token(Token = "0x40015C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine cr_reload_delay;

	[Token(Token = "0x40015C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine cr_Running;

	[Token(Token = "0x40015C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isFire;

	[Token(Token = "0x6001944")]
	[Address(RVA = "0x155579C", Offset = "0x155579C", VA = "0x155579C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001945")]
	[Address(RVA = "0x1555820", Offset = "0x1555820", VA = "0x1555820")]
	private void CheckBegin()
	{
	}

	[Token(Token = "0x6001946")]
	[Address(RVA = "0x15558A4", Offset = "0x15558A4", VA = "0x15558A4")]
	private void CheckEnd()
	{
	}

	[Token(Token = "0x6001947")]
	[Address(RVA = "0x1555928", Offset = "0x1555928", VA = "0x1555928")]
	private bool CheckBullet()
	{
		return default(bool);
	}

	[Token(Token = "0x6001948")]
	[Address(RVA = "0x15559F0", Offset = "0x15559F0", VA = "0x15559F0")]
	private bool Rate(float rate)
	{
		return default(bool);
	}

	[Token(Token = "0x6001949")]
	[Address(RVA = "0x1555A1C", Offset = "0x1555A1C", VA = "0x1555A1C")]
	private WUnit GetNear(List<WUnit> units)
	{
		return null;
	}

	[Token(Token = "0x600194A")]
	[Address(RVA = "0x1555C54", Offset = "0x1555C54", VA = "0x1555C54")]
	private void Play()
	{
	}

	[Token(Token = "0x600194B")]
	[Address(RVA = "0x1555FD4", Offset = "0x1555FD4", VA = "0x1555FD4")]
	private void Stop()
	{
	}

	[Token(Token = "0x600194C")]
	[Address(RVA = "0x1556050", Offset = "0x1556050", VA = "0x1556050")]
	public AlphaGun()
	{
	}

	[Token(Token = "0x600194D")]
	[Address(RVA = "0x1556068", Offset = "0x1556068", VA = "0x1556068")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0FCC", Offset = "0xEF0FCC")]
	private bool <CheckBegin>b__13_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600194E")]
	[Address(RVA = "0x1556110", Offset = "0x1556110", VA = "0x1556110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0FDC", Offset = "0xEF0FDC")]
	private bool <CheckEnd>b__14_0()
	{
		return default(bool);
	}

	[Token(Token = "0x600194F")]
	[Address(RVA = "0x15561B8", Offset = "0x15561B8", VA = "0x15561B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0FEC", Offset = "0xEF0FEC")]
	private void <CheckBullet>b__15_0()
	{
	}

	[Token(Token = "0x6001950")]
	[Address(RVA = "0x155628C", Offset = "0x155628C", VA = "0x155628C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF0FFC", Offset = "0xEF0FFC")]
	private void <CheckBullet>b__15_1()
	{
	}

	[Token(Token = "0x6001951")]
	[Address(RVA = "0x155634C", Offset = "0x155634C", VA = "0x155634C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF100C", Offset = "0xEF100C")]
	private void <Play>b__18_0()
	{
	}
}
[Token(Token = "0x200032B")]
public class FPSTest : MonoBehaviour
{
	[Token(Token = "0x40015C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text_fps;

	[Token(Token = "0x40015C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ShowFPS fpsCom;

	[Token(Token = "0x6001952")]
	[Address(RVA = "0x12360B4", Offset = "0x12360B4", VA = "0x12360B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001953")]
	[Address(RVA = "0x1236114", Offset = "0x1236114", VA = "0x1236114")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001954")]
	[Address(RVA = "0x12362E8", Offset = "0x12362E8", VA = "0x12362E8")]
	public FPSTest()
	{
	}
}
[Token(Token = "0x200032C")]
public class LogicTest : MonoBehaviour
{
	[Token(Token = "0x40015CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 playerCenterPos;

	[Token(Token = "0x40015CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 newPos;

	[Token(Token = "0x6001955")]
	[Address(RVA = "0x12DF2B8", Offset = "0x12DF2B8", VA = "0x12DF2B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001956")]
	[Address(RVA = "0x12DF324", Offset = "0x12DF324", VA = "0x12DF324")]
	private void Start()
	{
	}

	[Token(Token = "0x6001957")]
	[Address(RVA = "0x12DF328", Offset = "0x12DF328", VA = "0x12DF328")]
	private void Update()
	{
	}

	[Token(Token = "0x6001958")]
	[Address(RVA = "0x12DF650", Offset = "0x12DF650", VA = "0x12DF650")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001959")]
	[Address(RVA = "0x12DF794", Offset = "0x12DF794", VA = "0x12DF794")]
	public LogicTest()
	{
	}
}
[Token(Token = "0x200032D")]
public class PlayWwiseAudioTest : MonoBehaviour
{
	[Token(Token = "0x40015CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioEvent audioEvent;

	[Token(Token = "0x600195A")]
	[Address(RVA = "0x152ECBC", Offset = "0x152ECBC", VA = "0x152ECBC")]
	private void Start()
	{
	}

	[Token(Token = "0x600195B")]
	[Address(RVA = "0x152ECC0", Offset = "0x152ECC0", VA = "0x152ECC0")]
	private void Update()
	{
	}

	[Token(Token = "0x600195C")]
	[Address(RVA = "0x152ED94", Offset = "0x152ED94", VA = "0x152ED94")]
	public PlayWwiseAudioTest()
	{
	}
}
[Token(Token = "0x200032E")]
public class StatisticalInfoTest : MonoBehaviour
{
	[Token(Token = "0x40015CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text;

	[Token(Token = "0x40015CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float updateInterval;

	[Token(Token = "0x40015CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x600195D")]
	[Address(RVA = "0x12C8994", Offset = "0x12C8994", VA = "0x12C8994")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600195E")]
	[Address(RVA = "0x12C8A40", Offset = "0x12C8A40", VA = "0x12C8A40")]
	private void Update()
	{
	}

	[Token(Token = "0x600195F")]
	[Address(RVA = "0x12C9B24", Offset = "0x12C9B24", VA = "0x12C9B24")]
	public StatisticalInfoTest()
	{
	}
}
[Token(Token = "0x200032F")]
public class TestAimIK : MonoBehaviour
{
	[Token(Token = "0x40015D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x40015D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform aimTransform;

	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform aimTarget;

	[Token(Token = "0x40015D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AimIKTools aimIKTools;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform weapon;

	[Token(Token = "0x40015D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform weapon_a;

	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform weapon_2;

	[Token(Token = "0x40015D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform weapon_2_a;

	[Token(Token = "0x40015D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float aimTargetR;

	[Token(Token = "0x40015D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string hideStateName;

	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string fireStateName;

	[Token(Token = "0x40015DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string fireStateName2;

	[Token(Token = "0x40015DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool isAutoFire;

	[Token(Token = "0x40015DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float autoFireFrequency;

	[Token(Token = "0x40015DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 aimTargetInitPos;

	[Token(Token = "0x40015DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float autoFireTime;

	[Token(Token = "0x40015E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine coroutine;

	[Token(Token = "0x6001960")]
	[Address(RVA = "0x11D4690", Offset = "0x11D4690", VA = "0x11D4690")]
	private void Start()
	{
	}

	[Token(Token = "0x6001961")]
	[Address(RVA = "0x11D4920", Offset = "0x11D4920", VA = "0x11D4920")]
	private void Update()
	{
	}

	[Token(Token = "0x6001962")]
	[Address(RVA = "0x11D4964", Offset = "0x11D4964", VA = "0x11D4964")]
	private void UpdateAutoFire()
	{
	}

	[Token(Token = "0x6001963")]
	[Address(RVA = "0x11D4A40", Offset = "0x11D4A40", VA = "0x11D4A40")]
	private void UpdateAimTargetPos()
	{
	}

	[Token(Token = "0x6001964")]
	[Address(RVA = "0x11D4C0C", Offset = "0x11D4C0C", VA = "0x11D4C0C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001965")]
	[Address(RVA = "0x11D48A4", Offset = "0x11D48A4", VA = "0x11D48A4")]
	private void Hide()
	{
	}

	[Token(Token = "0x6001966")]
	[Address(RVA = "0x11D4B20", Offset = "0x11D4B20", VA = "0x11D4B20")]
	private void Fire()
	{
	}

	[Token(Token = "0x6001967")]
	[Address(RVA = "0x11D4E7C", Offset = "0x11D4E7C", VA = "0x11D4E7C")]
	public TestAimIK()
	{
	}

	[Token(Token = "0x6001968")]
	[Address(RVA = "0x11D4F18", Offset = "0x11D4F18", VA = "0x11D4F18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF101C", Offset = "0xEF101C")]
	private void <UpdateAutoFire>b__18_0()
	{
	}

	[Token(Token = "0x6001969")]
	[Address(RVA = "0x11D4F1C", Offset = "0x11D4F1C", VA = "0x11D4F1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF102C", Offset = "0xEF102C")]
	private void <Fire>b__23_0()
	{
	}
}
[Token(Token = "0x2000330")]
public class TestExploder : MonoBehaviour
{
	[Token(Token = "0x40015E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RagdollTools ragdollTools;

	[Token(Token = "0x40015E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExploderTools expolderTools;

	[Token(Token = "0x40015E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ExploderObject exploderObject;

	[Token(Token = "0x40015E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Force;

	[Token(Token = "0x40015E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float ExploderForce;

	[Token(Token = "0x40015E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 point;

	[Token(Token = "0x40015E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 dir;

	[Token(Token = "0x600196A")]
	[Address(RVA = "0x11D5650", Offset = "0x11D5650", VA = "0x11D5650")]
	private void Update()
	{
	}

	[Token(Token = "0x600196B")]
	[Address(RVA = "0x11D56C0", Offset = "0x11D56C0", VA = "0x11D56C0")]
	private void RayHit()
	{
	}

	[Token(Token = "0x600196C")]
	[Address(RVA = "0x11D5B44", Offset = "0x11D5B44", VA = "0x11D5B44")]
	public TestExploder()
	{
	}
}
[Token(Token = "0x2000331")]
public class TestGear : MonoBehaviour
{
	[Token(Token = "0x600196D")]
	[Address(RVA = "0x11D5B54", Offset = "0x11D5B54", VA = "0x11D5B54")]
	private void Start()
	{
	}

	[Token(Token = "0x600196E")]
	[Address(RVA = "0x11D5C08", Offset = "0x11D5C08", VA = "0x11D5C08")]
	public TestGear()
	{
	}
}
[Token(Token = "0x2000332")]
public class TestIK : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000602")]
	public class WeaponGroupConfig
	{
		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_weapon_group weaponGroup;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Weapon leftWeapon;

		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Weapon rightWeapon;

		[Token(Token = "0x6002D4F")]
		[Address(RVA = "0x11D75FC", Offset = "0x11D75FC", VA = "0x11D75FC")]
		public WeaponGroupConfig()
		{
		}
	}

	[Token(Token = "0x40015E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject other_role;

	[Token(Token = "0x40015E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject local_role;

	[Token(Token = "0x40015EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject headAnchor;

	[Token(Token = "0x40015EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private WeaponGroupConfig[] weaponGroups;

	[Token(Token = "0x40015EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 other_leftWeapon;

	[Token(Token = "0x40015ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 other_rightWeapon;

	[Token(Token = "0x40015EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Weapon other_weapon_1;

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Weapon other_weapon_2;

	[Token(Token = "0x40015F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 local_leftWeapon;

	[Token(Token = "0x40015F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 local_rightWeapon;

	[Token(Token = "0x40015F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Weapon local_weapon_1;

	[Token(Token = "0x40015F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Weapon local_weapon_2;

	[Token(Token = "0x40015F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool enableLeft;

	[Token(Token = "0x40015F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool enableRight;

	[Token(Token = "0x40015F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private IKConfigMono other_ik;

	[Token(Token = "0x40015F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private IKConfigMono local_ik;

	[Token(Token = "0x40015F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Animator other_animator;

	[Token(Token = "0x40015F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Animator local_animator;

	[Token(Token = "0x40015FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private e_weapon_group currentGroup;

	[Token(Token = "0x40015FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float moveTime;

	[Token(Token = "0x40015FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float moveTimer;

	[Token(Token = "0x40015FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector2[] moveDirs;

	[Token(Token = "0x40015FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int moveDirIndex;

	[Token(Token = "0x40015FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float smoothSpeed;

	[Token(Token = "0x600196F")]
	[Address(RVA = "0x11D5ED0", Offset = "0x11D5ED0", VA = "0x11D5ED0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001970")]
	[Address(RVA = "0x11D647C", Offset = "0x11D647C", VA = "0x11D647C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001971")]
	[Address(RVA = "0x11D6874", Offset = "0x11D6874", VA = "0x11D6874")]
	private void Update()
	{
	}

	[Token(Token = "0x6001972")]
	[Address(RVA = "0x11D6BF8", Offset = "0x11D6BF8", VA = "0x11D6BF8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6001973")]
	[Address(RVA = "0x11D5FFC", Offset = "0x11D5FFC", VA = "0x11D5FFC")]
	private void SwitchWeapon(e_weapon_group weapon_Group)
	{
	}

	[Token(Token = "0x6001974")]
	[Address(RVA = "0x11D7280", Offset = "0x11D7280", VA = "0x11D7280")]
	public WeaponGroupConfig GetWeaponByGroup(e_weapon_group weaponGroup)
	{
		return null;
	}

	[Token(Token = "0x6001975")]
	[Address(RVA = "0x11D75DC", Offset = "0x11D75DC", VA = "0x11D75DC")]
	public TestIK()
	{
	}
}
[Token(Token = "0x2000333")]
public class TestPlayerHighlyMatched : MonoBehaviour
{
	[Token(Token = "0x4001600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject otherPlayer;

	[Token(Token = "0x4001601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject localPlayer;

	[Token(Token = "0x4001602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 otherPos;

	[Token(Token = "0x4001603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject cameraRig;

	[Token(Token = "0x4001604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject vrcamera;

	[Token(Token = "0x4001605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float playerHeight;

	[Token(Token = "0x4001606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float playerHeightOffset;

	[Token(Token = "0x4001607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float playerHeightRate;

	[Token(Token = "0x4001608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool isTest;

	[Token(Token = "0x4001609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OtherPlayerNetSyncController syncController;

	[Token(Token = "0x400160A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private IKConfigMono iK;

	[Token(Token = "0x6001976")]
	[Address(RVA = "0x11D7BDC", Offset = "0x11D7BDC", VA = "0x11D7BDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001977")]
	[Address(RVA = "0x11D7CD4", Offset = "0x11D7CD4", VA = "0x11D7CD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001978")]
	[Address(RVA = "0x11D8000", Offset = "0x11D8000", VA = "0x11D8000")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6001979")]
	[Address(RVA = "0x11D810C", Offset = "0x11D810C", VA = "0x11D810C")]
	private void Reset()
	{
	}

	[Token(Token = "0x600197A")]
	[Address(RVA = "0x11D819C", Offset = "0x11D819C", VA = "0x11D819C")]
	private void TestPlayerHeight()
	{
	}

	[Token(Token = "0x600197B")]
	[Address(RVA = "0x11D8238", Offset = "0x11D8238", VA = "0x11D8238")]
	private void SetCameraRig()
	{
	}

	[Token(Token = "0x600197C")]
	[Address(RVA = "0x11D8314", Offset = "0x11D8314", VA = "0x11D8314")]
	public TestPlayerHighlyMatched()
	{
	}
}
[Token(Token = "0x2000334")]
public class TimeTest : MonoBehaviour
{
	[Token(Token = "0x400160B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text text_time;

	[Token(Token = "0x600197D")]
	[Address(RVA = "0x11D9BE4", Offset = "0x11D9BE4", VA = "0x11D9BE4")]
	private void Start()
	{
	}

	[Token(Token = "0x600197E")]
	[Address(RVA = "0x11D9C44", Offset = "0x11D9C44", VA = "0x11D9C44")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600197F")]
	[Address(RVA = "0x11D9DAC", Offset = "0x11D9DAC", VA = "0x11D9DAC")]
	public TimeTest()
	{
	}
}
[Token(Token = "0x2000335")]
public class WeaponTest : MonoBehaviour
{
	[Token(Token = "0x400160C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxBulletCount;

	[Token(Token = "0x400160D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int maxMagazineCount;

	[Token(Token = "0x400160E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int curBulletCount;

	[Token(Token = "0x400160F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int curMagazineCount;

	[Token(Token = "0x4001610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int atk;

	[Token(Token = "0x4001611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int headPer;

	[Token(Token = "0x4001612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fireInterval;

	[Token(Token = "0x4001613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int scatterRadius;

	[Token(Token = "0x4001614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int recoil;

	[Token(Token = "0x4001615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int bulletForce;

	[Token(Token = "0x4001616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string weaponName;

	[Token(Token = "0x4001617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Weapon weapon;

	[Token(Token = "0x6001980")]
	[Address(RVA = "0x1D70C00", Offset = "0x1D70C00", VA = "0x1D70C00")]
	public void Init(Weapon _weapon)
	{
	}

	[Token(Token = "0x6001981")]
	[Address(RVA = "0x1D70C08", Offset = "0x1D70C08", VA = "0x1D70C08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001982")]
	[Address(RVA = "0x1D70D4C", Offset = "0x1D70D4C", VA = "0x1D70D4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001983")]
	[Address(RVA = "0x1D70D50", Offset = "0x1D70D50", VA = "0x1D70D50")]
	private void Update()
	{
	}

	[Token(Token = "0x6001984")]
	[Address(RVA = "0x1D70C0C", Offset = "0x1D70C0C", VA = "0x1D70C0C")]
	private void updateShowMessage()
	{
	}

	[Token(Token = "0x6001985")]
	[Address(RVA = "0x1D70D54", Offset = "0x1D70D54", VA = "0x1D70D54")]
	public WeaponTest()
	{
	}
}
[Token(Token = "0x2000336")]
public class Weapon_AILaser : Weapon_Rifle
{
	[Token(Token = "0x6001986")]
	[Address(RVA = "0x1D70D5C", Offset = "0x1D70D5C", VA = "0x1D70D5C", Slot = "10")]
	public override void Init(WUnit owner, int id, WeaponAttribute weaponAttribute, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x6001987")]
	[Address(RVA = "0x1D70D74", Offset = "0x1D70D74", VA = "0x1D70D74", Slot = "16")]
	protected override Vector3 GetFirePointPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6001988")]
	[Address(RVA = "0x1D70ED4", Offset = "0x1D70ED4", VA = "0x1D70ED4", Slot = "13")]
	public override void PreFireLogic()
	{
	}

	[Token(Token = "0x6001989")]
	[Address(RVA = "0x1D70EDC", Offset = "0x1D70EDC", VA = "0x1D70EDC", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600198A")]
	[Address(RVA = "0x1D71114", Offset = "0x1D71114", VA = "0x1D71114", Slot = "12")]
	public override void DoUpdate()
	{
	}

	[Token(Token = "0x600198B")]
	[Address(RVA = "0x1D71384", Offset = "0x1D71384", VA = "0x1D71384", Slot = "17")]
	public override void TriggerStateChance(bool trigger)
	{
	}

	[Token(Token = "0x600198C")]
	[Address(RVA = "0x1D713EC", Offset = "0x1D713EC", VA = "0x1D713EC")]
	public Weapon_AILaser()
	{
	}
}
[Token(Token = "0x2000337")]
public class Weapon_AIRifle : Weapon
{
	[Token(Token = "0x4001618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEE95BC", Offset = "0xEE95BC")]
	public Transform ShellPoint;

	[Token(Token = "0x4001619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public GameObject ShellEffectPrefab;

	[Token(Token = "0x400161A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public GameObject ShotEffectPrefab;

	[Token(Token = "0x400161B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public GameObject BulletPrefab;

	[Token(Token = "0x400161C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public GameObject BulletParticlePrefab;

	[Token(Token = "0x400161D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	private GameObject BulletParticleObj;

	[Token(Token = "0x400161E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	private ParticleSystem BulletParticleSystem;

	[Token(Token = "0x600198D")]
	[Address(RVA = "0x1D713FC", Offset = "0x1D713FC", VA = "0x1D713FC", Slot = "10")]
	public override void Init(WUnit owner, int id, WeaponAttribute weaponAttribute, bool isLocalPlayer = false)
	{
	}

	[Token(Token = "0x600198E")]
	[Address(RVA = "0x1D71408", Offset = "0x1D71408", VA = "0x1D71408")]
	private Vector3 GetFirePointPosLocal()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600198F")]
	[Address(RVA = "0x1D714E0", Offset = "0x1D714E0", VA = "0x1D714E0", Slot = "13")]
	public override void PreFireLogic()
	{
	}

	[Token(Token = "0x6001990")]
	[Address(RVA = "0x1D71568", Offset = "0x1D71568", VA = "0x1D71568", Slot = "14")]
	protected override void FireLogic(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6001991")]
	[Address(RVA = "0x1D71A34", Offset = "0x1D71A34", VA = "0x1D71A34")]
	public Weapon_AIRifle()
	{
	}
}
[Token(Token = "0x2000338")]
public class TestHaptics : MonoBehaviour
{
	[Token(Token = "0x400161F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 point;

	[Token(Token = "0x4001620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 dir;

	[Token(Token = "0x4001621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Ray ray;

	[Token(Token = "0x6001992")]
	[Address(RVA = "0x11D5C10", Offset = "0x11D5C10", VA = "0x11D5C10")]
	private void Update()
	{
	}

	[Token(Token = "0x6001993")]
	[Address(RVA = "0x11D5C4C", Offset = "0x11D5C4C", VA = "0x11D5C4C")]
	private void RayHit()
	{
	}

	[Token(Token = "0x6001994")]
	[Address(RVA = "0x11D5EB0", Offset = "0x11D5EB0", VA = "0x11D5EB0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6001995")]
	[Address(RVA = "0x11D5EC8", Offset = "0x11D5EC8", VA = "0x11D5EC8")]
	public TestHaptics()
	{
	}
}
[Token(Token = "0x2000339")]
public class TestLightCast : MonoBehaviour
{
	[Token(Token = "0x4001622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x4001623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer r;

	[Token(Token = "0x6001996")]
	[Address(RVA = "0x11D7604", Offset = "0x11D7604", VA = "0x11D7604")]
	private void Start()
	{
	}

	[Token(Token = "0x6001997")]
	[Address(RVA = "0x11D7730", Offset = "0x11D7730", VA = "0x11D7730")]
	private void OnEventHandler(FlashLight flashLight, RaycastHit raycastHit, FlashLight.LightEventType lightEventType)
	{
	}

	[Token(Token = "0x6001998")]
	[Address(RVA = "0x11D77AC", Offset = "0x11D77AC", VA = "0x11D77AC")]
	protected void OnLightEnter(RaycastHit info)
	{
	}

	[Token(Token = "0x6001999")]
	[Address(RVA = "0x11D78BC", Offset = "0x11D78BC", VA = "0x11D78BC")]
	protected void OnLightStay(RaycastHit info)
	{
	}

	[Token(Token = "0x600199A")]
	[Address(RVA = "0x11D79CC", Offset = "0x11D79CC", VA = "0x11D79CC")]
	protected void OnLightExit(RaycastHit info)
	{
	}

	[Token(Token = "0x600199B")]
	[Address(RVA = "0x11D7ADC", Offset = "0x11D7ADC", VA = "0x11D7ADC")]
	public TestLightCast()
	{
	}
}
[Token(Token = "0x200033A")]
public class TestPicoInput : MonoBehaviour
{
	[Token(Token = "0x600199C")]
	[Address(RVA = "0x11D7AE4", Offset = "0x11D7AE4", VA = "0x11D7AE4")]
	private void Start()
	{
	}

	[Token(Token = "0x600199D")]
	[Address(RVA = "0x11D7AE8", Offset = "0x11D7AE8", VA = "0x11D7AE8")]
	private void Update()
	{
	}

	[Token(Token = "0x600199E")]
	[Address(RVA = "0x11D7BD4", Offset = "0x11D7BD4", VA = "0x11D7BD4")]
	public TestPicoInput()
	{
	}
}
[Token(Token = "0x200033B")]
public class TestSingleHaptics : MonoBehaviour
{
	[Token(Token = "0x4001624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PositionTag PositionTag;

	[Token(Token = "0x600199F")]
	[Address(RVA = "0x11D85FC", Offset = "0x11D85FC", VA = "0x11D85FC")]
	public TestSingleHaptics()
	{
	}
}
[Token(Token = "0x200033C")]
public class TestWwiseObstruction : MonoBehaviour
{
	[Token(Token = "0x2000603")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5070", Offset = "0xEE5070")]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AkEvent akevent;

		[Token(Token = "0x6002D50")]
		[Address(RVA = "0x11D86D4", Offset = "0x11D86D4", VA = "0x11D86D4")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x6002D51")]
		[Address(RVA = "0x11D90D8", Offset = "0x11D90D8", VA = "0x11D90D8")]
		internal void <Start>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000604")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5080", Offset = "0xEE5080")]
	private sealed class <>c
	{
		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<RaycastHit> <>9__9_0;

		[Token(Token = "0x6002D53")]
		[Address(RVA = "0x11D908C", Offset = "0x11D908C", VA = "0x11D908C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002D54")]
		[Address(RVA = "0x11D9094", Offset = "0x11D9094", VA = "0x11D9094")]
		internal int <Update>b__9_0(RaycastHit v1, RaycastHit v2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x4001625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Listener;

	[Token(Token = "0x4001626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxDis;

	[Token(Token = "0x4001627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x4001628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ObstructionValue;

	[Token(Token = "0x4001629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask layerMask;

	[Token(Token = "0x400162A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float testP;

	[Token(Token = "0x400162B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaycastHit[] tempRaycastHits;

	[Token(Token = "0x400162C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static List<RaycastHit> tempSortList;

	[Token(Token = "0x60019A0")]
	[Address(RVA = "0x11D8604", Offset = "0x11D8604", VA = "0x11D8604")]
	private void Start()
	{
	}

	[Token(Token = "0x60019A1")]
	[Address(RVA = "0x11D86DC", Offset = "0x11D86DC", VA = "0x11D86DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60019A2")]
	[Address(RVA = "0x11D8F70", Offset = "0x11D8F70", VA = "0x11D8F70")]
	public TestWwiseObstruction()
	{
	}
}
[Token(Token = "0x200033D")]
public class Testangle : MonoBehaviour
{
	[Token(Token = "0x2000605")]
	public struct DoCell
	{
	}

	[Token(Token = "0x60019A4")]
	[Address(RVA = "0x11D90FC", Offset = "0x11D90FC", VA = "0x11D90FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60019A5")]
	[Address(RVA = "0x11D9168", Offset = "0x11D9168", VA = "0x11D9168")]
	private void Update()
	{
	}

	[Token(Token = "0x60019A6")]
	[Address(RVA = "0x11D916C", Offset = "0x11D916C", VA = "0x11D916C")]
	public Testangle()
	{
	}
}
[Token(Token = "0x200033E")]
public class VRCameraReset : MonoBehaviour
{
	[Token(Token = "0x400162D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cameraEye;

	[Token(Token = "0x400162E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 dropPreCamPos;

	[Token(Token = "0x400162F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Quaternion dropPreCamRot;

	[Token(Token = "0x60019A7")]
	[Address(RVA = "0x13149E0", Offset = "0x13149E0", VA = "0x13149E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60019A8")]
	[Address(RVA = "0x1314A48", Offset = "0x1314A48", VA = "0x1314A48")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60019A9")]
	[Address(RVA = "0x1314C38", Offset = "0x1314C38", VA = "0x1314C38")]
	public VRCameraReset()
	{
	}
}
[Token(Token = "0x200033F")]
public class testheight : MonoBehaviour
{
	[Token(Token = "0x4001630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x4001631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text2;

	[Token(Token = "0x60019AA")]
	[Address(RVA = "0x1D7ACA4", Offset = "0x1D7ACA4", VA = "0x1D7ACA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60019AB")]
	[Address(RVA = "0x1D7ADB4", Offset = "0x1D7ADB4", VA = "0x1D7ADB4")]
	public testheight()
	{
	}
}
[Token(Token = "0x2000340")]
public class ChatController : MonoBehaviour
{
	[Token(Token = "0x4001632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField TMP_ChatInput;

	[Token(Token = "0x4001633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text TMP_ChatOutput;

	[Token(Token = "0x4001634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scrollbar ChatScrollbar;

	[Token(Token = "0x60019AC")]
	[Address(RVA = "0x12BFE7C", Offset = "0x12BFE7C", VA = "0x12BFE7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60019AD")]
	[Address(RVA = "0x12BFF20", Offset = "0x12BFF20", VA = "0x12BFF20")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60019AE")]
	[Address(RVA = "0x12BFFC4", Offset = "0x12BFFC4", VA = "0x12BFFC4")]
	private void AddToChatOutput(string newText)
	{
	}

	[Token(Token = "0x60019AF")]
	[Address(RVA = "0x12C03C4", Offset = "0x12C03C4", VA = "0x12C03C4")]
	public ChatController()
	{
	}
}
[Token(Token = "0x2000341")]
public class EnvMapAnimator : MonoBehaviour
{
	[Token(Token = "0x2000606")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE5090", Offset = "0xEE5090")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnvMapAnimator <>4__this;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Matrix4x4 <matrix>5__2;

		[Token(Token = "0x17000476")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002D58")]
			[Address(RVA = "0x1233F2C", Offset = "0x1233F2C", VA = "0x1233F2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000477")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002D5A")]
			[Address(RVA = "0x1233F94", Offset = "0x1233F94", VA = "0x1233F94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002D55")]
		[Address(RVA = "0x1233CF8", Offset = "0x1233CF8", VA = "0x1233CF8")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002D56")]
		[Address(RVA = "0x1233D2C", Offset = "0x1233D2C", VA = "0x1233D2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002D57")]
		[Address(RVA = "0x1233D30", Offset = "0x1233D30", VA = "0x1233D30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002D59")]
		[Address(RVA = "0x1233F34", Offset = "0x1233F34", VA = "0x1233F34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotationSpeeds;

	[Token(Token = "0x4001636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text m_textMeshPro;

	[Token(Token = "0x4001637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_material;

	[Token(Token = "0x60019B0")]
	[Address(RVA = "0x1233BF0", Offset = "0x1233BF0", VA = "0x1233BF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60019B1")]
	[Address(RVA = "0x1233C7C", Offset = "0x1233C7C", VA = "0x1233C7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF103C", Offset = "0xEF103C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60019B2")]
	[Address(RVA = "0x1233D24", Offset = "0x1233D24", VA = "0x1233D24")]
	public EnvMapAnimator()
	{
	}
}
[Token(Token = "0x2000342")]
public class AkCommunicationSettings : IDisposable
{
	[Token(Token = "0x4001638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000206")]
	public uint uPoolSize
	{
		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x1809320", Offset = "0x1809320", VA = "0x1809320")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x1808604", Offset = "0x1808604", VA = "0x1808604")]
		set
		{
		}
	}

	[Token(Token = "0x17000207")]
	public ushort uDiscoveryBroadcastPort
	{
		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x180938C", Offset = "0x180938C", VA = "0x180938C")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60019BB")]
		[Address(RVA = "0x1808680", Offset = "0x1808680", VA = "0x1808680")]
		set
		{
		}
	}

	[Token(Token = "0x17000208")]
	public ushort uCommandPort
	{
		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x18093F8", Offset = "0x18093F8", VA = "0x18093F8")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x18086FC", Offset = "0x18086FC", VA = "0x18086FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000209")]
	public ushort uNotificationPort
	{
		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x1809464", Offset = "0x1809464", VA = "0x1809464")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x1808778", Offset = "0x1808778", VA = "0x1808778")]
		set
		{
		}
	}

	[Token(Token = "0x1700020A")]
	public bool bInitSystemLib
	{
		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x18094D0", Offset = "0x18094D0", VA = "0x18094D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x18087F4", Offset = "0x18087F4", VA = "0x18087F4")]
		set
		{
		}
	}

	[Token(Token = "0x1700020B")]
	public string szAppNetworkName
	{
		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x180953C", Offset = "0x180953C", VA = "0x180953C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x1808870", Offset = "0x1808870", VA = "0x1808870")]
		set
		{
		}
	}

	[Token(Token = "0x60019B3")]
	[Address(RVA = "0x18090C0", Offset = "0x18090C0", VA = "0x18090C0")]
	internal AkCommunicationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60019B4")]
	[Address(RVA = "0x1809100", Offset = "0x1809100", VA = "0x1809100")]
	internal static IntPtr getCPtr(AkCommunicationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60019B5")]
	[Address(RVA = "0x1809150", Offset = "0x1809150", VA = "0x1809150", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60019B6")]
	[Address(RVA = "0x1809184", Offset = "0x1809184", VA = "0x1809184", Slot = "1")]
	~AkCommunicationSettings()
	{
	}

	[Token(Token = "0x60019B7")]
	[Address(RVA = "0x18091F4", Offset = "0x18091F4", VA = "0x18091F4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60019B8")]
	[Address(RVA = "0x1803104", Offset = "0x1803104", VA = "0x1803104")]
	public AkCommunicationSettings()
	{
	}
}
[Token(Token = "0x2000343")]
public enum AkMemPoolAttributes
{
	[Token(Token = "0x400163B")]
	AkNoAlloc = 0,
	[Token(Token = "0x400163C")]
	AkMalloc = 1,
	[Token(Token = "0x400163D")]
	AkAllocMask = 1,
	[Token(Token = "0x400163E")]
	AkFixedSizeBlocksMode = 8,
	[Token(Token = "0x400163F")]
	AkBlockMgmtMask = 8
}
[Token(Token = "0x2000344")]
public class AkPlatformInitSettings : IDisposable
{
	[Token(Token = "0x4001640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700020C")]
	public AkThreadProperties threadLEngine
	{
		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x1F8FBF8", Offset = "0x1F8FBF8", VA = "0x1F8FBF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x1F8FB68", Offset = "0x1F8FB68", VA = "0x1F8FB68")]
		set
		{
		}
	}

	[Token(Token = "0x1700020D")]
	public AkThreadProperties threadOutputMgr
	{
		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x1F8FD38", Offset = "0x1F8FD38", VA = "0x1F8FD38")]
		get
		{
			return null;
		}
		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x1F8FCA8", Offset = "0x1F8FCA8", VA = "0x1F8FCA8")]
		set
		{
		}
	}

	[Token(Token = "0x1700020E")]
	public AkThreadProperties threadBankManager
	{
		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x1F8FE78", Offset = "0x1F8FE78", VA = "0x1F8FE78")]
		get
		{
			return null;
		}
		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x1F8FDE8", Offset = "0x1F8FDE8", VA = "0x1F8FDE8")]
		set
		{
		}
	}

	[Token(Token = "0x1700020F")]
	public AkThreadProperties threadMonitor
	{
		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x1F8FFB8", Offset = "0x1F8FFB8", VA = "0x1F8FFB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x1F8FF28", Offset = "0x1F8FF28", VA = "0x1F8FF28")]
		set
		{
		}
	}

	[Token(Token = "0x17000210")]
	public float fLEngineDefaultPoolRatioThreshold
	{
		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x1F900E4", Offset = "0x1F900E4", VA = "0x1F900E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x1F90068", Offset = "0x1F90068", VA = "0x1F90068")]
		set
		{
		}
	}

	[Token(Token = "0x17000211")]
	public uint uLEngineDefaultPoolSize
	{
		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x1F901CC", Offset = "0x1F901CC", VA = "0x1F901CC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x1F90150", Offset = "0x1F90150", VA = "0x1F90150")]
		set
		{
		}
	}

	[Token(Token = "0x17000212")]
	public uint uSampleRate
	{
		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x1F902B4", Offset = "0x1F902B4", VA = "0x1F902B4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x1F90238", Offset = "0x1F90238", VA = "0x1F90238")]
		set
		{
		}
	}

	[Token(Token = "0x17000213")]
	public ushort uNumRefillsInVoice
	{
		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x1F9039C", Offset = "0x1F9039C", VA = "0x1F9039C")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x1F90320", Offset = "0x1F90320", VA = "0x1F90320")]
		set
		{
		}
	}

	[Token(Token = "0x17000214")]
	public uint uChannelMask
	{
		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x1F90484", Offset = "0x1F90484", VA = "0x1F90484")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x1F90408", Offset = "0x1F90408", VA = "0x1F90408")]
		set
		{
		}
	}

	[Token(Token = "0x17000215")]
	public bool bRoundFrameSizeToHWSize
	{
		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x1F9056C", Offset = "0x1F9056C", VA = "0x1F9056C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x1F904F0", Offset = "0x1F904F0", VA = "0x1F904F0")]
		set
		{
		}
	}

	[Token(Token = "0x60019C5")]
	[Address(RVA = "0x1F844A0", Offset = "0x1F844A0", VA = "0x1F844A0")]
	internal AkPlatformInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60019C6")]
	[Address(RVA = "0x1F843A0", Offset = "0x1F843A0", VA = "0x1F843A0")]
	internal static IntPtr getCPtr(AkPlatformInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60019C7")]
	[Address(RVA = "0x1F8F998", Offset = "0x1F8F998", VA = "0x1F8F998", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60019C8")]
	[Address(RVA = "0x1F8F9CC", Offset = "0x1F8F9CC", VA = "0x1F8F9CC", Slot = "1")]
	~AkPlatformInitSettings()
	{
	}

	[Token(Token = "0x60019C9")]
	[Address(RVA = "0x1F8FA3C", Offset = "0x1F8FA3C", VA = "0x1F8FA3C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60019DE")]
	[Address(RVA = "0x1F905D8", Offset = "0x1F905D8", VA = "0x1F905D8")]
	public AkPlatformInitSettings()
	{
	}
}
[Token(Token = "0x2000345")]
internal class AkSoundEnginePINVOKE
{
	[Token(Token = "0x60019DF")]
	[Address(RVA = "0x1363434", Offset = "0x1363434", VA = "0x1363434")]
	static AkSoundEnginePINVOKE()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60019E0")]
	[Address(RVA = "0x1348928", Offset = "0x1348928", VA = "0x1348928")]
	public static extern uint CSharp_AK_SOUNDBANK_VERSION_get();

	[PreserveSig]
	[Token(Token = "0x60019E1")]
	[Address(RVA = "0x1363438", Offset = "0x1363438", VA = "0x1363438")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019E2")]
	[Address(RVA = "0x13634C8", Offset = "0x13634C8", VA = "0x13634C8")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019E3")]
	[Address(RVA = "0x1363548", Offset = "0x1363548", VA = "0x1363548")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerSecond_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019E4")]
	[Address(RVA = "0x13635D8", Offset = "0x13635D8", VA = "0x13635D8")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerSecond_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019E5")]
	[Address(RVA = "0x1363658", Offset = "0x1363658", VA = "0x1363658")]
	public static extern IntPtr CSharp_new_AkAudioSettings();

	[PreserveSig]
	[Token(Token = "0x60019E6")]
	[Address(RVA = "0x13636CC", Offset = "0x13636CC", VA = "0x13636CC")]
	public static extern void CSharp_delete_AkAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019E7")]
	[Address(RVA = "0x136374C", Offset = "0x136374C", VA = "0x136374C")]
	public static extern void CSharp_AkExternalSourceInfo_iExternalSrcCookie_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019E8")]
	[Address(RVA = "0x13637DC", Offset = "0x13637DC", VA = "0x13637DC")]
	public static extern uint CSharp_AkExternalSourceInfo_iExternalSrcCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019E9")]
	[Address(RVA = "0x136385C", Offset = "0x136385C", VA = "0x136385C")]
	public static extern void CSharp_AkExternalSourceInfo_idCodec_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019EA")]
	[Address(RVA = "0x13638EC", Offset = "0x13638EC", VA = "0x13638EC")]
	public static extern uint CSharp_AkExternalSourceInfo_idCodec_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019EB")]
	[Address(RVA = "0x136396C", Offset = "0x136396C", VA = "0x136396C")]
	public static extern void CSharp_AkExternalSourceInfo_szFile_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x60019EC")]
	[Address(RVA = "0x1363A10", Offset = "0x1363A10", VA = "0x1363A10")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_szFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019ED")]
	[Address(RVA = "0x1363A90", Offset = "0x1363A90", VA = "0x1363A90")]
	public static extern void CSharp_AkExternalSourceInfo_pInMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x60019EE")]
	[Address(RVA = "0x1363B20", Offset = "0x1363B20", VA = "0x1363B20")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_pInMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019EF")]
	[Address(RVA = "0x1363BA0", Offset = "0x1363BA0", VA = "0x1363BA0")]
	public static extern void CSharp_AkExternalSourceInfo_uiMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019F0")]
	[Address(RVA = "0x1363C30", Offset = "0x1363C30", VA = "0x1363C30")]
	public static extern uint CSharp_AkExternalSourceInfo_uiMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019F1")]
	[Address(RVA = "0x1363CB0", Offset = "0x1363CB0", VA = "0x1363CB0")]
	public static extern void CSharp_AkExternalSourceInfo_idFile_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x60019F2")]
	[Address(RVA = "0x1363D40", Offset = "0x1363D40", VA = "0x1363D40")]
	public static extern uint CSharp_AkExternalSourceInfo_idFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019F3")]
	[Address(RVA = "0x1363DC0", Offset = "0x1363DC0", VA = "0x1363DC0")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x60019F4")]
	[Address(RVA = "0x1363E34", Offset = "0x1363E34", VA = "0x1363E34")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_1(IntPtr jarg1, uint jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x60019F5")]
	[Address(RVA = "0x1363EDC", Offset = "0x1363EDC", VA = "0x1363EDC")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_2(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60019F6")]
	[Address(RVA = "0x1363F8C", Offset = "0x1363F8C", VA = "0x1363F8C")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_3(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x60019F7")]
	[Address(RVA = "0x1364024", Offset = "0x1364024", VA = "0x1364024")]
	public static extern void CSharp_delete_AkExternalSourceInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019F8")]
	[Address(RVA = "0x13640A4", Offset = "0x13640A4", VA = "0x13640A4")]
	public static extern void CSharp_AkVector_Zero(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019F9")]
	[Address(RVA = "0x1364124", Offset = "0x1364124", VA = "0x1364124")]
	public static extern void CSharp_AkVector_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60019FA")]
	[Address(RVA = "0x13641B4", Offset = "0x13641B4", VA = "0x13641B4")]
	public static extern float CSharp_AkVector_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019FB")]
	[Address(RVA = "0x1364234", Offset = "0x1364234", VA = "0x1364234")]
	public static extern void CSharp_AkVector_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60019FC")]
	[Address(RVA = "0x13642C4", Offset = "0x13642C4", VA = "0x13642C4")]
	public static extern float CSharp_AkVector_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019FD")]
	[Address(RVA = "0x1364344", Offset = "0x1364344", VA = "0x1364344")]
	public static extern void CSharp_AkVector_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x60019FE")]
	[Address(RVA = "0x13643D4", Offset = "0x13643D4", VA = "0x13643D4")]
	public static extern float CSharp_AkVector_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x60019FF")]
	[Address(RVA = "0x1364454", Offset = "0x1364454", VA = "0x1364454")]
	public static extern IntPtr CSharp_new_AkVector();

	[PreserveSig]
	[Token(Token = "0x6001A00")]
	[Address(RVA = "0x13644C8", Offset = "0x13644C8", VA = "0x13644C8")]
	public static extern void CSharp_delete_AkVector(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A01")]
	[Address(RVA = "0x1364548", Offset = "0x1364548", VA = "0x1364548")]
	public static extern IntPtr CSharp_AkTransform_Position(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A02")]
	[Address(RVA = "0x13645C8", Offset = "0x13645C8", VA = "0x13645C8")]
	public static extern IntPtr CSharp_AkTransform_OrientationFront(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A03")]
	[Address(RVA = "0x1364648", Offset = "0x1364648", VA = "0x1364648")]
	public static extern IntPtr CSharp_AkTransform_OrientationTop(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A04")]
	[Address(RVA = "0x13646C8", Offset = "0x13646C8", VA = "0x13646C8")]
	public static extern void CSharp_AkTransform_Set__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001A05")]
	[Address(RVA = "0x1364770", Offset = "0x1364770", VA = "0x1364770")]
	public static extern void CSharp_AkTransform_Set__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x6001A06")]
	[Address(RVA = "0x1364858", Offset = "0x1364858", VA = "0x1364858")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A07")]
	[Address(RVA = "0x13648E8", Offset = "0x13648E8", VA = "0x13648E8")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6001A08")]
	[Address(RVA = "0x1364990", Offset = "0x1364990", VA = "0x1364990")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A09")]
	[Address(RVA = "0x1364A28", Offset = "0x1364A28", VA = "0x1364A28")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

	[PreserveSig]
	[Token(Token = "0x6001A0A")]
	[Address(RVA = "0x1364AF0", Offset = "0x1364AF0", VA = "0x1364AF0")]
	public static extern IntPtr CSharp_new_AkTransform();

	[PreserveSig]
	[Token(Token = "0x6001A0B")]
	[Address(RVA = "0x1364B64", Offset = "0x1364B64", VA = "0x1364B64")]
	public static extern void CSharp_delete_AkTransform(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A0C")]
	[Address(RVA = "0x1364BE4", Offset = "0x1364BE4", VA = "0x1364BE4")]
	public static extern void CSharp_AkObstructionOcclusionValues_occlusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A0D")]
	[Address(RVA = "0x1364C74", Offset = "0x1364C74", VA = "0x1364C74")]
	public static extern float CSharp_AkObstructionOcclusionValues_occlusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A0E")]
	[Address(RVA = "0x1364CF4", Offset = "0x1364CF4", VA = "0x1364CF4")]
	public static extern void CSharp_AkObstructionOcclusionValues_obstruction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A0F")]
	[Address(RVA = "0x1364D84", Offset = "0x1364D84", VA = "0x1364D84")]
	public static extern float CSharp_AkObstructionOcclusionValues_obstruction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A10")]
	[Address(RVA = "0x1364E04", Offset = "0x1364E04", VA = "0x1364E04")]
	public static extern IntPtr CSharp_new_AkObstructionOcclusionValues();

	[PreserveSig]
	[Token(Token = "0x6001A11")]
	[Address(RVA = "0x1364E78", Offset = "0x1364E78", VA = "0x1364E78")]
	public static extern void CSharp_delete_AkObstructionOcclusionValues(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A12")]
	[Address(RVA = "0x1364EF8", Offset = "0x1364EF8", VA = "0x1364EF8")]
	public static extern void CSharp_AkChannelEmitter_position_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A13")]
	[Address(RVA = "0x1364F88", Offset = "0x1364F88", VA = "0x1364F88")]
	public static extern IntPtr CSharp_AkChannelEmitter_position_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A14")]
	[Address(RVA = "0x1365008", Offset = "0x1365008", VA = "0x1365008")]
	public static extern void CSharp_AkChannelEmitter_uInputChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A15")]
	[Address(RVA = "0x1365098", Offset = "0x1365098", VA = "0x1365098")]
	public static extern uint CSharp_AkChannelEmitter_uInputChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A16")]
	[Address(RVA = "0x1365118", Offset = "0x1365118", VA = "0x1365118")]
	public static extern IntPtr CSharp_new_AkChannelEmitter();

	[PreserveSig]
	[Token(Token = "0x6001A17")]
	[Address(RVA = "0x136518C", Offset = "0x136518C", VA = "0x136518C")]
	public static extern void CSharp_delete_AkChannelEmitter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A18")]
	[Address(RVA = "0x136520C", Offset = "0x136520C", VA = "0x136520C")]
	public static extern void CSharp_AkAuxSendValue_listenerID_set(IntPtr jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A19")]
	[Address(RVA = "0x136529C", Offset = "0x136529C", VA = "0x136529C")]
	public static extern ulong CSharp_AkAuxSendValue_listenerID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A1A")]
	[Address(RVA = "0x136531C", Offset = "0x136531C", VA = "0x136531C")]
	public static extern void CSharp_AkAuxSendValue_auxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A1B")]
	[Address(RVA = "0x13653AC", Offset = "0x13653AC", VA = "0x13653AC")]
	public static extern uint CSharp_AkAuxSendValue_auxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A1C")]
	[Address(RVA = "0x136542C", Offset = "0x136542C", VA = "0x136542C")]
	public static extern void CSharp_AkAuxSendValue_fControlValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A1D")]
	[Address(RVA = "0x13654BC", Offset = "0x13654BC", VA = "0x13654BC")]
	public static extern float CSharp_AkAuxSendValue_fControlValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A1E")]
	[Address(RVA = "0x136553C", Offset = "0x136553C", VA = "0x136553C")]
	public static extern void CSharp_AkAuxSendValue_Set(IntPtr jarg1, ulong jarg2, uint jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6001A1F")]
	[Address(RVA = "0x13655E4", Offset = "0x13655E4", VA = "0x13655E4")]
	public static extern bool CSharp_AkAuxSendValue_IsSame(IntPtr jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A20")]
	[Address(RVA = "0x1365684", Offset = "0x1365684", VA = "0x1365684")]
	public static extern int CSharp_AkAuxSendValue_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001A21")]
	[Address(RVA = "0x13656F8", Offset = "0x13656F8", VA = "0x13656F8")]
	public static extern int CSharp_AkAuxSendValue_SetGameObjectAuxSendValues(IntPtr jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A22")]
	[Address(RVA = "0x1365790", Offset = "0x1365790", VA = "0x1365790")]
	public static extern int CSharp_AkAuxSendValue_GetGameObjectAuxSendValues(IntPtr jarg1, ulong jarg2, ref uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A23")]
	[Address(RVA = "0x1365828", Offset = "0x1365828", VA = "0x1365828")]
	public static extern void CSharp_delete_AkAuxSendValue(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A24")]
	[Address(RVA = "0x1341968", Offset = "0x1341968", VA = "0x1341968")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001A25")]
	[Address(RVA = "0x1341A74", Offset = "0x1341A74", VA = "0x1341A74")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_1(float jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A26")]
	[Address(RVA = "0x1341B7C", Offset = "0x1341B7C", VA = "0x1341B7C")]
	public static extern void CSharp_AkRamp_fPrev_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A27")]
	[Address(RVA = "0x1341C74", Offset = "0x1341C74", VA = "0x1341C74")]
	public static extern float CSharp_AkRamp_fPrev_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A28")]
	[Address(RVA = "0x1341D6C", Offset = "0x1341D6C", VA = "0x1341D6C")]
	public static extern void CSharp_AkRamp_fNext_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A29")]
	[Address(RVA = "0x1341E64", Offset = "0x1341E64", VA = "0x1341E64")]
	public static extern float CSharp_AkRamp_fNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A2A")]
	[Address(RVA = "0x1341868", Offset = "0x1341868", VA = "0x1341868")]
	public static extern void CSharp_delete_AkRamp(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A2B")]
	[Address(RVA = "0x13489F8", Offset = "0x13489F8", VA = "0x13489F8")]
	public static extern ushort CSharp_AK_INT_get();

	[PreserveSig]
	[Token(Token = "0x6001A2C")]
	[Address(RVA = "0x1348AC8", Offset = "0x1348AC8", VA = "0x1348AC8")]
	public static extern ushort CSharp_AK_FLOAT_get();

	[PreserveSig]
	[Token(Token = "0x6001A2D")]
	[Address(RVA = "0x1348B98", Offset = "0x1348B98", VA = "0x1348B98")]
	public static extern byte CSharp_AK_INTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x6001A2E")]
	[Address(RVA = "0x1348C68", Offset = "0x1348C68", VA = "0x1348C68")]
	public static extern byte CSharp_AK_NONINTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x6001A2F")]
	[Address(RVA = "0x1348D38", Offset = "0x1348D38", VA = "0x1348D38")]
	public static extern uint CSharp_AK_LE_NATIVE_BITSPERSAMPLE_get();

	[PreserveSig]
	[Token(Token = "0x6001A30")]
	[Address(RVA = "0x1348E08", Offset = "0x1348E08", VA = "0x1348E08")]
	public static extern uint CSharp_AK_LE_NATIVE_SAMPLETYPE_get();

	[PreserveSig]
	[Token(Token = "0x6001A31")]
	[Address(RVA = "0x1348ED8", Offset = "0x1348ED8", VA = "0x1348ED8")]
	public static extern uint CSharp_AK_LE_NATIVE_INTERLEAVE_get();

	[PreserveSig]
	[Token(Token = "0x6001A32")]
	[Address(RVA = "0x13658A8", Offset = "0x13658A8", VA = "0x13658A8")]
	public static extern void CSharp_AkAudioFormat_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A33")]
	[Address(RVA = "0x1365938", Offset = "0x1365938", VA = "0x1365938")]
	public static extern uint CSharp_AkAudioFormat_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A34")]
	[Address(RVA = "0x13659B8", Offset = "0x13659B8", VA = "0x13659B8")]
	public static extern void CSharp_AkAudioFormat_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A35")]
	[Address(RVA = "0x1365A48", Offset = "0x1365A48", VA = "0x1365A48")]
	public static extern IntPtr CSharp_AkAudioFormat_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A36")]
	[Address(RVA = "0x1365AC8", Offset = "0x1365AC8", VA = "0x1365AC8")]
	public static extern void CSharp_AkAudioFormat_uBitsPerSample_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A37")]
	[Address(RVA = "0x1365B58", Offset = "0x1365B58", VA = "0x1365B58")]
	public static extern uint CSharp_AkAudioFormat_uBitsPerSample_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A38")]
	[Address(RVA = "0x1365BD8", Offset = "0x1365BD8", VA = "0x1365BD8")]
	public static extern void CSharp_AkAudioFormat_uBlockAlign_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A39")]
	[Address(RVA = "0x1365C68", Offset = "0x1365C68", VA = "0x1365C68")]
	public static extern uint CSharp_AkAudioFormat_uBlockAlign_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A3A")]
	[Address(RVA = "0x1365CE8", Offset = "0x1365CE8", VA = "0x1365CE8")]
	public static extern void CSharp_AkAudioFormat_uTypeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A3B")]
	[Address(RVA = "0x1365D78", Offset = "0x1365D78", VA = "0x1365D78")]
	public static extern uint CSharp_AkAudioFormat_uTypeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A3C")]
	[Address(RVA = "0x1365DF8", Offset = "0x1365DF8", VA = "0x1365DF8")]
	public static extern void CSharp_AkAudioFormat_uInterleaveID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A3D")]
	[Address(RVA = "0x1365E88", Offset = "0x1365E88", VA = "0x1365E88")]
	public static extern uint CSharp_AkAudioFormat_uInterleaveID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A3E")]
	[Address(RVA = "0x1365F08", Offset = "0x1365F08", VA = "0x1365F08")]
	public static extern uint CSharp_AkAudioFormat_GetNumChannels(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A3F")]
	[Address(RVA = "0x1365F88", Offset = "0x1365F88", VA = "0x1365F88")]
	public static extern uint CSharp_AkAudioFormat_GetBitsPerSample(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A40")]
	[Address(RVA = "0x1366008", Offset = "0x1366008", VA = "0x1366008")]
	public static extern uint CSharp_AkAudioFormat_GetBlockAlign(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A41")]
	[Address(RVA = "0x1366088", Offset = "0x1366088", VA = "0x1366088")]
	public static extern uint CSharp_AkAudioFormat_GetTypeID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A42")]
	[Address(RVA = "0x1366108", Offset = "0x1366108", VA = "0x1366108")]
	public static extern uint CSharp_AkAudioFormat_GetInterleaveID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A43")]
	[Address(RVA = "0x1366188", Offset = "0x1366188", VA = "0x1366188")]
	public static extern void CSharp_AkAudioFormat_SetAll(IntPtr jarg1, uint jarg2, IntPtr jarg3, uint jarg4, uint jarg5, uint jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x6001A44")]
	[Address(RVA = "0x1366250", Offset = "0x1366250", VA = "0x1366250")]
	public static extern bool CSharp_AkAudioFormat_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A45")]
	[Address(RVA = "0x13662D8", Offset = "0x13662D8", VA = "0x13662D8")]
	public static extern IntPtr CSharp_new_AkAudioFormat();

	[PreserveSig]
	[Token(Token = "0x6001A46")]
	[Address(RVA = "0x136634C", Offset = "0x136634C", VA = "0x136634C")]
	public static extern void CSharp_delete_AkAudioFormat(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A47")]
	[Address(RVA = "0x13663CC", Offset = "0x13663CC", VA = "0x13663CC")]
	public static extern void CSharp_AkIterator_pItem_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A48")]
	[Address(RVA = "0x136645C", Offset = "0x136645C", VA = "0x136645C")]
	public static extern IntPtr CSharp_AkIterator_pItem_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A49")]
	[Address(RVA = "0x13664DC", Offset = "0x13664DC", VA = "0x13664DC")]
	public static extern IntPtr CSharp_AkIterator_NextIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A4A")]
	[Address(RVA = "0x136655C", Offset = "0x136655C", VA = "0x136655C")]
	public static extern IntPtr CSharp_AkIterator_PrevIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A4B")]
	[Address(RVA = "0x13665DC", Offset = "0x13665DC", VA = "0x13665DC")]
	public static extern IntPtr CSharp_AkIterator_GetItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A4C")]
	[Address(RVA = "0x136665C", Offset = "0x136665C", VA = "0x136665C")]
	public static extern bool CSharp_AkIterator_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A4D")]
	[Address(RVA = "0x13666F4", Offset = "0x13666F4", VA = "0x13666F4")]
	public static extern bool CSharp_AkIterator_IsDifferentFrom(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A4E")]
	[Address(RVA = "0x136678C", Offset = "0x136678C", VA = "0x136678C")]
	public static extern IntPtr CSharp_new_AkIterator();

	[PreserveSig]
	[Token(Token = "0x6001A4F")]
	[Address(RVA = "0x1366800", Offset = "0x1366800", VA = "0x1366800")]
	public static extern void CSharp_delete_AkIterator(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A50")]
	[Address(RVA = "0x1366880", Offset = "0x1366880", VA = "0x1366880")]
	public static extern int CSharp__ArrayPoolDefault_Get();

	[PreserveSig]
	[Token(Token = "0x6001A51")]
	[Address(RVA = "0x13668F4", Offset = "0x13668F4", VA = "0x13668F4")]
	public static extern IntPtr CSharp_new__ArrayPoolDefault();

	[PreserveSig]
	[Token(Token = "0x6001A52")]
	[Address(RVA = "0x1366968", Offset = "0x1366968", VA = "0x1366968")]
	public static extern void CSharp_delete__ArrayPoolDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A53")]
	[Address(RVA = "0x13669E8", Offset = "0x13669E8", VA = "0x13669E8")]
	public static extern int CSharp__ArrayPoolLEngineDefault_Get();

	[PreserveSig]
	[Token(Token = "0x6001A54")]
	[Address(RVA = "0x1366A5C", Offset = "0x1366A5C", VA = "0x1366A5C")]
	public static extern IntPtr CSharp_new__ArrayPoolLEngineDefault();

	[PreserveSig]
	[Token(Token = "0x6001A55")]
	[Address(RVA = "0x1366AD0", Offset = "0x1366AD0", VA = "0x1366AD0")]
	public static extern void CSharp_delete__ArrayPoolLEngineDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A56")]
	[Address(RVA = "0x1366B50", Offset = "0x1366B50", VA = "0x1366B50")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001A57")]
	[Address(RVA = "0x1366BC4", Offset = "0x1366BC4", VA = "0x1366BC4")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A58")]
	[Address(RVA = "0x1366C44", Offset = "0x1366C44", VA = "0x1366C44")]
	public static extern void CSharp_delete_AkPlaylistItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A59")]
	[Address(RVA = "0x1366CC4", Offset = "0x1366CC4", VA = "0x1366CC4")]
	public static extern IntPtr CSharp_AkPlaylistItem_Assign(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A5A")]
	[Address(RVA = "0x1366D54", Offset = "0x1366D54", VA = "0x1366D54")]
	public static extern bool CSharp_AkPlaylistItem_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A5B")]
	[Address(RVA = "0x1366DEC", Offset = "0x1366DEC", VA = "0x1366DEC")]
	public static extern int CSharp_AkPlaylistItem_SetExternalSources(IntPtr jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A5C")]
	[Address(RVA = "0x1366E84", Offset = "0x1366E84", VA = "0x1366E84")]
	public static extern void CSharp_AkPlaylistItem_audioNodeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A5D")]
	[Address(RVA = "0x1366F14", Offset = "0x1366F14", VA = "0x1366F14")]
	public static extern uint CSharp_AkPlaylistItem_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A5E")]
	[Address(RVA = "0x1366F94", Offset = "0x1366F94", VA = "0x1366F94")]
	public static extern void CSharp_AkPlaylistItem_msDelay_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A5F")]
	[Address(RVA = "0x1367024", Offset = "0x1367024", VA = "0x1367024")]
	public static extern int CSharp_AkPlaylistItem_msDelay_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A60")]
	[Address(RVA = "0x13670A4", Offset = "0x13670A4", VA = "0x13670A4")]
	public static extern void CSharp_AkPlaylistItem_pCustomInfo_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A61")]
	[Address(RVA = "0x1367134", Offset = "0x1367134", VA = "0x1367134")]
	public static extern IntPtr CSharp_AkPlaylistItem_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A62")]
	[Address(RVA = "0x13671B4", Offset = "0x13671B4", VA = "0x13671B4")]
	public static extern IntPtr CSharp_new_AkPlaylistArray();

	[PreserveSig]
	[Token(Token = "0x6001A63")]
	[Address(RVA = "0x1367228", Offset = "0x1367228", VA = "0x1367228")]
	public static extern void CSharp_delete_AkPlaylistArray(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A64")]
	[Address(RVA = "0x13672A8", Offset = "0x13672A8", VA = "0x13672A8")]
	public static extern IntPtr CSharp_AkPlaylistArray_Begin(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A65")]
	[Address(RVA = "0x1367328", Offset = "0x1367328", VA = "0x1367328")]
	public static extern IntPtr CSharp_AkPlaylistArray_End(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A66")]
	[Address(RVA = "0x13673A8", Offset = "0x13673A8", VA = "0x13673A8")]
	public static extern IntPtr CSharp_AkPlaylistArray_FindEx(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A67")]
	[Address(RVA = "0x1367438", Offset = "0x1367438", VA = "0x1367438")]
	public static extern IntPtr CSharp_AkPlaylistArray_Erase__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A68")]
	[Address(RVA = "0x13674C8", Offset = "0x13674C8", VA = "0x13674C8")]
	public static extern void CSharp_AkPlaylistArray_Erase__SWIG_1(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A69")]
	[Address(RVA = "0x1367558", Offset = "0x1367558", VA = "0x1367558")]
	public static extern IntPtr CSharp_AkPlaylistArray_EraseSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A6A")]
	[Address(RVA = "0x13675E8", Offset = "0x13675E8", VA = "0x13675E8")]
	public static extern int CSharp_AkPlaylistArray_Reserve(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A6B")]
	[Address(RVA = "0x1367678", Offset = "0x1367678", VA = "0x1367678")]
	public static extern uint CSharp_AkPlaylistArray_Reserved(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A6C")]
	[Address(RVA = "0x13676F8", Offset = "0x13676F8", VA = "0x13676F8")]
	public static extern void CSharp_AkPlaylistArray_Term(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A6D")]
	[Address(RVA = "0x1367778", Offset = "0x1367778", VA = "0x1367778")]
	public static extern uint CSharp_AkPlaylistArray_Length(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A6E")]
	[Address(RVA = "0x13677F8", Offset = "0x13677F8", VA = "0x13677F8")]
	public static extern IntPtr CSharp_AkPlaylistArray_Data(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A6F")]
	[Address(RVA = "0x1367878", Offset = "0x1367878", VA = "0x1367878")]
	public static extern bool CSharp_AkPlaylistArray_IsEmpty(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A70")]
	[Address(RVA = "0x1367900", Offset = "0x1367900", VA = "0x1367900")]
	public static extern IntPtr CSharp_AkPlaylistArray_Exists(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A71")]
	[Address(RVA = "0x1367990", Offset = "0x1367990", VA = "0x1367990")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_0(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A72")]
	[Address(RVA = "0x1367A10", Offset = "0x1367A10", VA = "0x1367A10")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_1(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A73")]
	[Address(RVA = "0x1367AA0", Offset = "0x1367AA0", VA = "0x1367AA0")]
	public static extern IntPtr CSharp_AkPlaylistArray_Last(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A74")]
	[Address(RVA = "0x1367B20", Offset = "0x1367B20", VA = "0x1367B20")]
	public static extern void CSharp_AkPlaylistArray_RemoveLast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A75")]
	[Address(RVA = "0x1367BA0", Offset = "0x1367BA0", VA = "0x1367BA0")]
	public static extern int CSharp_AkPlaylistArray_Remove(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A76")]
	[Address(RVA = "0x1367C30", Offset = "0x1367C30", VA = "0x1367C30")]
	public static extern int CSharp_AkPlaylistArray_RemoveSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A77")]
	[Address(RVA = "0x1367CC0", Offset = "0x1367CC0", VA = "0x1367CC0")]
	public static extern void CSharp_AkPlaylistArray_RemoveAll(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A78")]
	[Address(RVA = "0x1367D40", Offset = "0x1367D40", VA = "0x1367D40")]
	public static extern IntPtr CSharp_AkPlaylistArray_ItemAtIndex(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A79")]
	[Address(RVA = "0x1367DD0", Offset = "0x1367DD0", VA = "0x1367DD0")]
	public static extern IntPtr CSharp_AkPlaylistArray_Insert(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A7A")]
	[Address(RVA = "0x1367E60", Offset = "0x1367E60", VA = "0x1367E60")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_0(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A7B")]
	[Address(RVA = "0x1367EF8", Offset = "0x1367EF8", VA = "0x1367EF8")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A7C")]
	[Address(RVA = "0x1367F80", Offset = "0x1367F80", VA = "0x1367F80")]
	public static extern bool CSharp_AkPlaylistArray_Resize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A7D")]
	[Address(RVA = "0x1368018", Offset = "0x1368018", VA = "0x1368018")]
	public static extern void CSharp_AkPlaylistArray_Transfer(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A7E")]
	[Address(RVA = "0x13680A8", Offset = "0x13680A8", VA = "0x13680A8")]
	public static extern int CSharp_AkPlaylistArray_Copy(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A7F")]
	[Address(RVA = "0x1368138", Offset = "0x1368138", VA = "0x1368138")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_0(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6);

	[PreserveSig]
	[Token(Token = "0x6001A80")]
	[Address(RVA = "0x13681F8", Offset = "0x13681F8", VA = "0x13681F8")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_1(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001A81")]
	[Address(RVA = "0x13682A8", Offset = "0x13682A8", VA = "0x13682A8")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_2(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001A82")]
	[Address(RVA = "0x1368350", Offset = "0x1368350", VA = "0x1368350")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A83")]
	[Address(RVA = "0x13683E8", Offset = "0x13683E8", VA = "0x13683E8")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_4(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A84")]
	[Address(RVA = "0x1368478", Offset = "0x1368478", VA = "0x1368478")]
	public static extern IntPtr CSharp_new_AkPlaylist();

	[PreserveSig]
	[Token(Token = "0x6001A85")]
	[Address(RVA = "0x13684EC", Offset = "0x13684EC", VA = "0x13684EC")]
	public static extern void CSharp_delete_AkPlaylist(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A86")]
	[Address(RVA = "0x1349124", Offset = "0x1349124", VA = "0x1349124")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_0(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001A87")]
	[Address(RVA = "0x1349330", Offset = "0x1349330", VA = "0x1349330")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_1(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001A88")]
	[Address(RVA = "0x13494C0", Offset = "0x13494C0", VA = "0x13494C0")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_2(ulong jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A89")]
	[Address(RVA = "0x1349628", Offset = "0x1349628", VA = "0x1349628")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_3(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A8A")]
	[Address(RVA = "0x134970C", Offset = "0x134970C", VA = "0x134970C")]
	public static extern int CSharp_DynamicSequenceClose(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A8B")]
	[Address(RVA = "0x1349808", Offset = "0x1349808", VA = "0x1349808")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A8C")]
	[Address(RVA = "0x1349914", Offset = "0x1349914", VA = "0x1349914")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A8D")]
	[Address(RVA = "0x1349A08", Offset = "0x1349A08", VA = "0x1349A08")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A8E")]
	[Address(RVA = "0x1349B04", Offset = "0x1349B04", VA = "0x1349B04")]
	public static extern int CSharp_DynamicSequencePause__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A8F")]
	[Address(RVA = "0x1349C10", Offset = "0x1349C10", VA = "0x1349C10")]
	public static extern int CSharp_DynamicSequencePause__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A90")]
	[Address(RVA = "0x1349D04", Offset = "0x1349D04", VA = "0x1349D04")]
	public static extern int CSharp_DynamicSequencePause__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A91")]
	[Address(RVA = "0x1349E00", Offset = "0x1349E00", VA = "0x1349E00")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A92")]
	[Address(RVA = "0x1349F0C", Offset = "0x1349F0C", VA = "0x1349F0C")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A93")]
	[Address(RVA = "0x134A000", Offset = "0x134A000", VA = "0x134A000")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A94")]
	[Address(RVA = "0x134A0FC", Offset = "0x134A0FC", VA = "0x134A0FC")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A95")]
	[Address(RVA = "0x134A208", Offset = "0x134A208", VA = "0x134A208")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A96")]
	[Address(RVA = "0x134A2FC", Offset = "0x134A2FC", VA = "0x134A2FC")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A97")]
	[Address(RVA = "0x134A3E0", Offset = "0x134A3E0", VA = "0x134A3E0")]
	public static extern int CSharp_DynamicSequenceBreak(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A98")]
	[Address(RVA = "0x134A4DC", Offset = "0x134A4DC", VA = "0x134A4DC")]
	public static extern int CSharp_DynamicSequenceGetPauseTimes(uint jarg1, out uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A99")]
	[Address(RVA = "0x134A61C", Offset = "0x134A61C", VA = "0x134A61C")]
	public static extern IntPtr CSharp_DynamicSequenceLockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A9A")]
	[Address(RVA = "0x134A700", Offset = "0x134A700", VA = "0x134A700")]
	public static extern int CSharp_DynamicSequenceUnlockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001A9B")]
	[Address(RVA = "0x136856C", Offset = "0x136856C", VA = "0x136856C")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001A9C")]
	[Address(RVA = "0x13685E0", Offset = "0x13685E0", VA = "0x13685E0")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_1(string jarg1, uint jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001A9D")]
	[Address(RVA = "0x13686A0", Offset = "0x13686A0", VA = "0x13686A0")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_2(string jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001A9E")]
	[Address(RVA = "0x1368750", Offset = "0x1368750", VA = "0x1368750")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_3(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001A9F")]
	[Address(RVA = "0x13687F8", Offset = "0x13687F8", VA = "0x13687F8")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_4(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AA0")]
	[Address(RVA = "0x1368890", Offset = "0x1368890", VA = "0x1368890")]
	public static extern void CSharp_AkOutputSettings_audioDeviceShareset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AA1")]
	[Address(RVA = "0x1368920", Offset = "0x1368920", VA = "0x1368920")]
	public static extern uint CSharp_AkOutputSettings_audioDeviceShareset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AA2")]
	[Address(RVA = "0x13689A0", Offset = "0x13689A0", VA = "0x13689A0")]
	public static extern void CSharp_AkOutputSettings_idDevice_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AA3")]
	[Address(RVA = "0x1368A30", Offset = "0x1368A30", VA = "0x1368A30")]
	public static extern uint CSharp_AkOutputSettings_idDevice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AA4")]
	[Address(RVA = "0x1368AB0", Offset = "0x1368AB0", VA = "0x1368AB0")]
	public static extern void CSharp_AkOutputSettings_ePanningRule_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AA5")]
	[Address(RVA = "0x1368B40", Offset = "0x1368B40", VA = "0x1368B40")]
	public static extern int CSharp_AkOutputSettings_ePanningRule_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AA6")]
	[Address(RVA = "0x1368BC0", Offset = "0x1368BC0", VA = "0x1368BC0")]
	public static extern void CSharp_AkOutputSettings_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AA7")]
	[Address(RVA = "0x1368C50", Offset = "0x1368C50", VA = "0x1368C50")]
	public static extern IntPtr CSharp_AkOutputSettings_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AA8")]
	[Address(RVA = "0x1368CD0", Offset = "0x1368CD0", VA = "0x1368CD0")]
	public static extern void CSharp_delete_AkOutputSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AA9")]
	[Address(RVA = "0x1368D50", Offset = "0x1368D50", VA = "0x1368D50")]
	public static extern void CSharp_AkTaskContext_uIdxThread_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AAA")]
	[Address(RVA = "0x1368DE0", Offset = "0x1368DE0", VA = "0x1368DE0")]
	public static extern uint CSharp_AkTaskContext_uIdxThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AAB")]
	[Address(RVA = "0x1368E60", Offset = "0x1368E60", VA = "0x1368E60")]
	public static extern IntPtr CSharp_new_AkTaskContext();

	[PreserveSig]
	[Token(Token = "0x6001AAC")]
	[Address(RVA = "0x1368ED4", Offset = "0x1368ED4", VA = "0x1368ED4")]
	public static extern void CSharp_delete_AkTaskContext(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AAD")]
	[Address(RVA = "0x1368F54", Offset = "0x1368F54", VA = "0x1368F54")]
	public static extern void CSharp_AkInitSettings_pfnAssertHook_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AAE")]
	[Address(RVA = "0x1368FE4", Offset = "0x1368FE4", VA = "0x1368FE4")]
	public static extern IntPtr CSharp_AkInitSettings_pfnAssertHook_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AAF")]
	[Address(RVA = "0x1369064", Offset = "0x1369064", VA = "0x1369064")]
	public static extern void CSharp_AkInitSettings_uMaxNumPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AB0")]
	[Address(RVA = "0x13690F4", Offset = "0x13690F4", VA = "0x13690F4")]
	public static extern uint CSharp_AkInitSettings_uMaxNumPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AB1")]
	[Address(RVA = "0x1369174", Offset = "0x1369174", VA = "0x1369174")]
	public static extern void CSharp_AkInitSettings_uDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AB2")]
	[Address(RVA = "0x1369204", Offset = "0x1369204", VA = "0x1369204")]
	public static extern uint CSharp_AkInitSettings_uDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AB3")]
	[Address(RVA = "0x1369284", Offset = "0x1369284", VA = "0x1369284")]
	public static extern void CSharp_AkInitSettings_fDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AB4")]
	[Address(RVA = "0x1369314", Offset = "0x1369314", VA = "0x1369314")]
	public static extern float CSharp_AkInitSettings_fDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AB5")]
	[Address(RVA = "0x1369394", Offset = "0x1369394", VA = "0x1369394")]
	public static extern void CSharp_AkInitSettings_uCommandQueueSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AB6")]
	[Address(RVA = "0x1369424", Offset = "0x1369424", VA = "0x1369424")]
	public static extern uint CSharp_AkInitSettings_uCommandQueueSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AB7")]
	[Address(RVA = "0x13694A4", Offset = "0x13694A4", VA = "0x13694A4")]
	public static extern void CSharp_AkInitSettings_uPrepareEventMemoryPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AB8")]
	[Address(RVA = "0x1369534", Offset = "0x1369534", VA = "0x1369534")]
	public static extern int CSharp_AkInitSettings_uPrepareEventMemoryPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AB9")]
	[Address(RVA = "0x13695B4", Offset = "0x13695B4", VA = "0x13695B4")]
	public static extern void CSharp_AkInitSettings_bEnableGameSyncPreparation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001ABA")]
	[Address(RVA = "0x1369644", Offset = "0x1369644", VA = "0x1369644")]
	public static extern bool CSharp_AkInitSettings_bEnableGameSyncPreparation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001ABB")]
	[Address(RVA = "0x13696CC", Offset = "0x13696CC", VA = "0x13696CC")]
	public static extern void CSharp_AkInitSettings_uContinuousPlaybackLookAhead_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001ABC")]
	[Address(RVA = "0x136975C", Offset = "0x136975C", VA = "0x136975C")]
	public static extern uint CSharp_AkInitSettings_uContinuousPlaybackLookAhead_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001ABD")]
	[Address(RVA = "0x13697DC", Offset = "0x13697DC", VA = "0x13697DC")]
	public static extern void CSharp_AkInitSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001ABE")]
	[Address(RVA = "0x136986C", Offset = "0x136986C", VA = "0x136986C")]
	public static extern uint CSharp_AkInitSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001ABF")]
	[Address(RVA = "0x13698EC", Offset = "0x13698EC", VA = "0x13698EC")]
	public static extern void CSharp_AkInitSettings_uMonitorPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AC0")]
	[Address(RVA = "0x136997C", Offset = "0x136997C", VA = "0x136997C")]
	public static extern uint CSharp_AkInitSettings_uMonitorPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AC1")]
	[Address(RVA = "0x13699FC", Offset = "0x13699FC", VA = "0x13699FC")]
	public static extern void CSharp_AkInitSettings_uMonitorQueuePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AC2")]
	[Address(RVA = "0x1369A8C", Offset = "0x1369A8C", VA = "0x1369A8C")]
	public static extern uint CSharp_AkInitSettings_uMonitorQueuePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AC3")]
	[Address(RVA = "0x1369B0C", Offset = "0x1369B0C", VA = "0x1369B0C")]
	public static extern void CSharp_AkInitSettings_settingsMainOutput_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AC4")]
	[Address(RVA = "0x1369B9C", Offset = "0x1369B9C", VA = "0x1369B9C")]
	public static extern IntPtr CSharp_AkInitSettings_settingsMainOutput_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AC5")]
	[Address(RVA = "0x1369C1C", Offset = "0x1369C1C", VA = "0x1369C1C")]
	public static extern void CSharp_AkInitSettings_uMaxHardwareTimeoutMs_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AC6")]
	[Address(RVA = "0x1369CAC", Offset = "0x1369CAC", VA = "0x1369CAC")]
	public static extern uint CSharp_AkInitSettings_uMaxHardwareTimeoutMs_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AC7")]
	[Address(RVA = "0x1369D2C", Offset = "0x1369D2C", VA = "0x1369D2C")]
	public static extern void CSharp_AkInitSettings_bUseSoundBankMgrThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AC8")]
	[Address(RVA = "0x1369DBC", Offset = "0x1369DBC", VA = "0x1369DBC")]
	public static extern bool CSharp_AkInitSettings_bUseSoundBankMgrThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AC9")]
	[Address(RVA = "0x1369E44", Offset = "0x1369E44", VA = "0x1369E44")]
	public static extern void CSharp_AkInitSettings_bUseLEngineThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001ACA")]
	[Address(RVA = "0x1369ED4", Offset = "0x1369ED4", VA = "0x1369ED4")]
	public static extern bool CSharp_AkInitSettings_bUseLEngineThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001ACB")]
	[Address(RVA = "0x1369F5C", Offset = "0x1369F5C", VA = "0x1369F5C")]
	public static extern void CSharp_AkInitSettings_szPluginDLLPath_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001ACC")]
	[Address(RVA = "0x136A000", Offset = "0x136A000", VA = "0x136A000")]
	public static extern IntPtr CSharp_AkInitSettings_szPluginDLLPath_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001ACD")]
	[Address(RVA = "0x136A080", Offset = "0x136A080", VA = "0x136A080")]
	public static extern void CSharp_AkInitSettings_eFloorPlane_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001ACE")]
	[Address(RVA = "0x136A110", Offset = "0x136A110", VA = "0x136A110")]
	public static extern int CSharp_AkInitSettings_eFloorPlane_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001ACF")]
	[Address(RVA = "0x136A190", Offset = "0x136A190", VA = "0x136A190")]
	public static extern IntPtr CSharp_new_AkInitSettings();

	[PreserveSig]
	[Token(Token = "0x6001AD0")]
	[Address(RVA = "0x136A204", Offset = "0x136A204", VA = "0x136A204")]
	public static extern void CSharp_delete_AkInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AD1")]
	[Address(RVA = "0x136A284", Offset = "0x136A284", VA = "0x136A284")]
	public static extern void CSharp_AkSourceSettings_sourceID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AD2")]
	[Address(RVA = "0x136A314", Offset = "0x136A314", VA = "0x136A314")]
	public static extern uint CSharp_AkSourceSettings_sourceID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AD3")]
	[Address(RVA = "0x136A394", Offset = "0x136A394", VA = "0x136A394")]
	public static extern void CSharp_AkSourceSettings_pMediaMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AD4")]
	[Address(RVA = "0x136A424", Offset = "0x136A424", VA = "0x136A424")]
	public static extern IntPtr CSharp_AkSourceSettings_pMediaMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AD5")]
	[Address(RVA = "0x136A4A4", Offset = "0x136A4A4", VA = "0x136A4A4")]
	public static extern void CSharp_AkSourceSettings_uMediaSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AD6")]
	[Address(RVA = "0x136A534", Offset = "0x136A534", VA = "0x136A534")]
	public static extern uint CSharp_AkSourceSettings_uMediaSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AD7")]
	[Address(RVA = "0x136A5B4", Offset = "0x136A5B4", VA = "0x136A5B4")]
	public static extern IntPtr CSharp_new_AkSourceSettings();

	[PreserveSig]
	[Token(Token = "0x6001AD8")]
	[Address(RVA = "0x136A628", Offset = "0x136A628", VA = "0x136A628")]
	public static extern void CSharp_delete_AkSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AD9")]
	[Address(RVA = "0x134A7DC", Offset = "0x134A7DC", VA = "0x134A7DC")]
	public static extern bool CSharp_IsInitialized();

	[PreserveSig]
	[Token(Token = "0x6001ADA")]
	[Address(RVA = "0x134A8D0", Offset = "0x134A8D0", VA = "0x134A8D0")]
	public static extern int CSharp_GetAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001ADB")]
	[Address(RVA = "0x134A9E8", Offset = "0x134A9E8", VA = "0x134A9E8")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001ADC")]
	[Address(RVA = "0x134AAF8", Offset = "0x134AAF8", VA = "0x134AAF8")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001ADD")]
	[Address(RVA = "0x134ABE0", Offset = "0x134ABE0", VA = "0x134ABE0")]
	public static extern int CSharp_GetPanningRule__SWIG_0(out int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001ADE")]
	[Address(RVA = "0x134ACD4", Offset = "0x134ACD4", VA = "0x134ACD4")]
	public static extern int CSharp_GetPanningRule__SWIG_1(out int jarg1);

	[PreserveSig]
	[Token(Token = "0x6001ADF")]
	[Address(RVA = "0x134ADC8", Offset = "0x134ADC8", VA = "0x134ADC8")]
	public static extern int CSharp_SetPanningRule__SWIG_0(int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AE0")]
	[Address(RVA = "0x134AEBC", Offset = "0x134AEBC", VA = "0x134AEBC")]
	public static extern int CSharp_SetPanningRule__SWIG_1(int jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AE1")]
	[Address(RVA = "0x134AFC8", Offset = "0x134AFC8", VA = "0x134AFC8")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_0([In][Out] float[] jarg1, ref uint jarg2, out float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6001AE2")]
	[Address(RVA = "0x134B0F4", Offset = "0x134B0F4", VA = "0x134B0F4")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_1([In][Out] float[] jarg1, ref uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001AE3")]
	[Address(RVA = "0x134B220", Offset = "0x134B220", VA = "0x134B220")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_0([In] float[] jarg1, uint jarg2, float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6001AE4")]
	[Address(RVA = "0x134B354", Offset = "0x134B354", VA = "0x134B354")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_1([In] float[] jarg1, uint jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001AE5")]
	[Address(RVA = "0x134B468", Offset = "0x134B468", VA = "0x134B468")]
	public static extern int CSharp_SetVolumeThreshold(float jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AE6")]
	[Address(RVA = "0x134B554", Offset = "0x134B554", VA = "0x134B554")]
	public static extern int CSharp_SetMaxNumVoicesLimit(ushort jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AE7")]
	[Address(RVA = "0x134B638", Offset = "0x134B638", VA = "0x134B638")]
	public static extern int CSharp_RenderAudio__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AE8")]
	[Address(RVA = "0x134B714", Offset = "0x134B714", VA = "0x134B714")]
	public static extern int CSharp_RenderAudio__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001AE9")]
	[Address(RVA = "0x134B7EC", Offset = "0x134B7EC", VA = "0x134B7EC")]
	public static extern int CSharp_RegisterPluginDLL(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AEA")]
	[Address(RVA = "0x134B8E8", Offset = "0x134B8E8", VA = "0x134B8E8")]
	public static extern uint CSharp_GetIDFromString(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001AEB")]
	[Address(RVA = "0x134BB20", Offset = "0x134BB20", VA = "0x134BB20")]
	public static extern uint CSharp_PostEvent__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x6001AEC")]
	[Address(RVA = "0x134BD88", Offset = "0x134BD88", VA = "0x134BD88")]
	public static extern uint CSharp_PostEvent__SWIG_1(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6001AED")]
	[Address(RVA = "0x134BFC4", Offset = "0x134BFC4", VA = "0x134BFC4")]
	public static extern uint CSharp_PostEvent__SWIG_2(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6001AEE")]
	[Address(RVA = "0x134C1E8", Offset = "0x134C1E8", VA = "0x134C1E8")]
	public static extern uint CSharp_PostEvent__SWIG_3(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6001AEF")]
	[Address(RVA = "0x134C388", Offset = "0x134C388", VA = "0x134C388")]
	public static extern uint CSharp_PostEvent__SWIG_4(uint jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001AF0")]
	[Address(RVA = "0x134C508", Offset = "0x134C508", VA = "0x134C508")]
	public static extern uint CSharp_PostEvent__SWIG_5(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AF1")]
	[Address(RVA = "0x134C738", Offset = "0x134C738", VA = "0x134C738")]
	public static extern uint CSharp_PostEvent__SWIG_6(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x6001AF2")]
	[Address(RVA = "0x134C9B8", Offset = "0x134C9B8", VA = "0x134C9B8")]
	public static extern uint CSharp_PostEvent__SWIG_7(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6001AF3")]
	[Address(RVA = "0x134CC0C", Offset = "0x134CC0C", VA = "0x134CC0C")]
	public static extern uint CSharp_PostEvent__SWIG_8(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6001AF4")]
	[Address(RVA = "0x134CE48", Offset = "0x134CE48", VA = "0x134CE48")]
	public static extern uint CSharp_PostEvent__SWIG_9(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6001AF5")]
	[Address(RVA = "0x134D000", Offset = "0x134D000", VA = "0x134D000")]
	public static extern uint CSharp_PostEvent__SWIG_10(string jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001AF6")]
	[Address(RVA = "0x134D198", Offset = "0x134D198", VA = "0x134D198")]
	public static extern uint CSharp_PostEvent__SWIG_11(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AF7")]
	[Address(RVA = "0x134D31C", Offset = "0x134D31C", VA = "0x134D31C")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_0(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6001AF8")]
	[Address(RVA = "0x134D4A8", Offset = "0x134D4A8", VA = "0x134D4A8")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_1(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001AF9")]
	[Address(RVA = "0x134D61C", Offset = "0x134D61C", VA = "0x134D61C")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_2(uint jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001AFA")]
	[Address(RVA = "0x134D778", Offset = "0x134D778", VA = "0x134D778")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_3(uint jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001AFB")]
	[Address(RVA = "0x134D884", Offset = "0x134D884", VA = "0x134D884")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_4(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001AFC")]
	[Address(RVA = "0x134D9F0", Offset = "0x134D9F0", VA = "0x134D9F0")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_5(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6001AFD")]
	[Address(RVA = "0x134DB94", Offset = "0x134DB94", VA = "0x134DB94")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_6(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001AFE")]
	[Address(RVA = "0x134DD20", Offset = "0x134DD20", VA = "0x134DD20")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_7(string jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001AFF")]
	[Address(RVA = "0x134DE94", Offset = "0x134DE94", VA = "0x134DE94")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_8(string jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B00")]
	[Address(RVA = "0x134DFB8", Offset = "0x134DFB8", VA = "0x134DFB8")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_9(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B01")]
	[Address(RVA = "0x134E130", Offset = "0x134E130", VA = "0x134E130")]
	public static extern int CSharp_PostMIDIOnEvent(uint jarg1, ulong jarg2, IntPtr jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B02")]
	[Address(RVA = "0x134E284", Offset = "0x134E284", VA = "0x134E284")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B03")]
	[Address(RVA = "0x134E378", Offset = "0x134E378", VA = "0x134E378")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_1(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B04")]
	[Address(RVA = "0x134E454", Offset = "0x134E454", VA = "0x134E454")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_2();

	[PreserveSig]
	[Token(Token = "0x6001B05")]
	[Address(RVA = "0x134E544", Offset = "0x134E544", VA = "0x134E544")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_0(uint jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B06")]
	[Address(RVA = "0x134E658", Offset = "0x134E658", VA = "0x134E658")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_1(string jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B07")]
	[Address(RVA = "0x134E76C", Offset = "0x134E76C", VA = "0x134E76C")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_0(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B08")]
	[Address(RVA = "0x134E850", Offset = "0x134E850", VA = "0x134E850")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_1(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B09")]
	[Address(RVA = "0x134E964", Offset = "0x134E964", VA = "0x134E964")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_0(uint jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B0A")]
	[Address(RVA = "0x134EA78", Offset = "0x134EA78", VA = "0x134EA78")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_1(string jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B0B")]
	[Address(RVA = "0x134EBF4", Offset = "0x134EBF4", VA = "0x134EBF4")]
	public static extern int CSharp_SeekOnEvent__SWIG_0(uint jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001B0C")]
	[Address(RVA = "0x134ED68", Offset = "0x134ED68", VA = "0x134ED68")]
	public static extern int CSharp_SeekOnEvent__SWIG_1(uint jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B0D")]
	[Address(RVA = "0x134EEC4", Offset = "0x134EEC4", VA = "0x134EEC4")]
	public static extern int CSharp_SeekOnEvent__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B0E")]
	[Address(RVA = "0x134F028", Offset = "0x134F028", VA = "0x134F028")]
	public static extern int CSharp_SeekOnEvent__SWIG_3(string jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001B0F")]
	[Address(RVA = "0x134F1B4", Offset = "0x134F1B4", VA = "0x134F1B4")]
	public static extern int CSharp_SeekOnEvent__SWIG_4(string jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B10")]
	[Address(RVA = "0x134F328", Offset = "0x134F328", VA = "0x134F328")]
	public static extern int CSharp_SeekOnEvent__SWIG_5(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B11")]
	[Address(RVA = "0x134F4AC", Offset = "0x134F4AC", VA = "0x134F4AC")]
	public static extern int CSharp_SeekOnEvent__SWIG_6(uint jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001B12")]
	[Address(RVA = "0x134F628", Offset = "0x134F628", VA = "0x134F628")]
	public static extern int CSharp_SeekOnEvent__SWIG_7(uint jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B13")]
	[Address(RVA = "0x134F78C", Offset = "0x134F78C", VA = "0x134F78C")]
	public static extern int CSharp_SeekOnEvent__SWIG_8(uint jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B14")]
	[Address(RVA = "0x134F900", Offset = "0x134F900", VA = "0x134F900")]
	public static extern int CSharp_SeekOnEvent__SWIG_9(string jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001B15")]
	[Address(RVA = "0x134FA94", Offset = "0x134FA94", VA = "0x134FA94")]
	public static extern int CSharp_SeekOnEvent__SWIG_10(string jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B16")]
	[Address(RVA = "0x134FC10", Offset = "0x134FC10", VA = "0x134FC10")]
	public static extern int CSharp_SeekOnEvent__SWIG_11(string jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B17")]
	[Address(RVA = "0x136A6A8", Offset = "0x136A6A8", VA = "0x136A6A8")]
	public static extern void CSharp_CancelEventCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B18")]
	[Address(RVA = "0x134FDCC", Offset = "0x134FDCC", VA = "0x134FDCC")]
	public static extern void CSharp_CancelEventCallbackGameObject(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B19")]
	[Address(RVA = "0x136A728", Offset = "0x136A728", VA = "0x136A728")]
	public static extern void CSharp_CancelEventCallback(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B1A")]
	[Address(RVA = "0x134FF30", Offset = "0x134FF30", VA = "0x134FF30")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_0(uint jarg1, out int jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B1B")]
	[Address(RVA = "0x135003C", Offset = "0x135003C", VA = "0x135003C")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_1(uint jarg1, out int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B1C")]
	[Address(RVA = "0x1350148", Offset = "0x1350148", VA = "0x1350148")]
	public static extern int CSharp_GetSourceStreamBuffering(uint jarg1, out int jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B1D")]
	[Address(RVA = "0x135027C", Offset = "0x135027C", VA = "0x135027C")]
	public static extern void CSharp_StopAll__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B1E")]
	[Address(RVA = "0x1350358", Offset = "0x1350358", VA = "0x1350358")]
	public static extern void CSharp_StopAll__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001B1F")]
	[Address(RVA = "0x1350444", Offset = "0x1350444", VA = "0x1350444")]
	public static extern void CSharp_StopPlayingID__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B20")]
	[Address(RVA = "0x1350550", Offset = "0x1350550", VA = "0x1350550")]
	public static extern void CSharp_StopPlayingID__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B21")]
	[Address(RVA = "0x1350644", Offset = "0x1350644", VA = "0x1350644")]
	public static extern void CSharp_StopPlayingID__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B22")]
	[Address(RVA = "0x1350728", Offset = "0x1350728", VA = "0x1350728")]
	public static extern void CSharp_SetRandomSeed(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B23")]
	[Address(RVA = "0x135080C", Offset = "0x135080C", VA = "0x135080C")]
	public static extern void CSharp_MuteBackgroundMusic(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B24")]
	[Address(RVA = "0x13508E8", Offset = "0x13508E8", VA = "0x13508E8")]
	public static extern bool CSharp_GetBackgroundMusicMute();

	[PreserveSig]
	[Token(Token = "0x6001B25")]
	[Address(RVA = "0x1350A48", Offset = "0x1350A48", VA = "0x1350A48")]
	public static extern int CSharp_SendPluginCustomGameData(uint jarg1, ulong jarg2, int jarg3, uint jarg4, uint jarg5, IntPtr jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x6001B26")]
	[Address(RVA = "0x1350B6C", Offset = "0x1350B6C", VA = "0x1350B6C")]
	public static extern int CSharp_UnregisterAllGameObj();

	[PreserveSig]
	[Token(Token = "0x6001B27")]
	[Address(RVA = "0x1350CA4", Offset = "0x1350CA4", VA = "0x1350CA4")]
	public static extern int CSharp_SetMultiplePositions__SWIG_0(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B28")]
	[Address(RVA = "0x1350E00", Offset = "0x1350E00", VA = "0x1350E00")]
	public static extern int CSharp_SetMultiplePositions__SWIG_1(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B29")]
	[Address(RVA = "0x1350F5C", Offset = "0x1350F5C", VA = "0x1350F5C")]
	public static extern int CSharp_SetMultiplePositions__SWIG_2(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B2A")]
	[Address(RVA = "0x13510B8", Offset = "0x13510B8", VA = "0x13510B8")]
	public static extern int CSharp_SetMultiplePositions__SWIG_3(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B2B")]
	[Address(RVA = "0x13511F4", Offset = "0x13511F4", VA = "0x13511F4")]
	public static extern int CSharp_SetScalingFactor(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B2C")]
	[Address(RVA = "0x13512E0", Offset = "0x13512E0", VA = "0x13512E0")]
	public static extern int CSharp_ClearBanks();

	[PreserveSig]
	[Token(Token = "0x6001B2D")]
	[Address(RVA = "0x13513C8", Offset = "0x13513C8", VA = "0x13513C8")]
	public static extern int CSharp_SetBankLoadIOSettings(float jarg1, sbyte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B2E")]
	[Address(RVA = "0x13514D4", Offset = "0x13514D4", VA = "0x13514D4")]
	public static extern int CSharp_LoadBank__SWIG_0(string jarg1, int jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B2F")]
	[Address(RVA = "0x13515F8", Offset = "0x13515F8", VA = "0x13515F8")]
	public static extern int CSharp_LoadBank__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B30")]
	[Address(RVA = "0x1351704", Offset = "0x1351704", VA = "0x1351704")]
	public static extern int CSharp_LoadBank__SWIG_2(IntPtr jarg1, uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B31")]
	[Address(RVA = "0x1351828", Offset = "0x1351828", VA = "0x1351828")]
	public static extern int CSharp_LoadBank__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3, out uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B32")]
	[Address(RVA = "0x13519B0", Offset = "0x13519B0", VA = "0x13519B0")]
	public static extern int CSharp_LoadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001B33")]
	[Address(RVA = "0x1351B50", Offset = "0x1351B50", VA = "0x1351B50")]
	public static extern int CSharp_LoadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B34")]
	[Address(RVA = "0x1351CD8", Offset = "0x1351CD8", VA = "0x1351CD8")]
	public static extern int CSharp_LoadBank__SWIG_6(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001B35")]
	[Address(RVA = "0x1351E78", Offset = "0x1351E78", VA = "0x1351E78")]
	public static extern int CSharp_LoadBank__SWIG_7(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6001B36")]
	[Address(RVA = "0x1351FB4", Offset = "0x1351FB4", VA = "0x1351FB4")]
	public static extern int CSharp_UnloadBank__SWIG_0(string jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B37")]
	[Address(RVA = "0x13520D8", Offset = "0x13520D8", VA = "0x13520D8")]
	public static extern int CSharp_UnloadBank__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B38")]
	[Address(RVA = "0x13521FC", Offset = "0x13521FC", VA = "0x13521FC")]
	public static extern int CSharp_UnloadBank__SWIG_2(uint jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B39")]
	[Address(RVA = "0x1352308", Offset = "0x1352308", VA = "0x1352308")]
	public static extern int CSharp_UnloadBank__SWIG_3(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B3A")]
	[Address(RVA = "0x1352470", Offset = "0x1352470", VA = "0x1352470")]
	public static extern int CSharp_UnloadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B3B")]
	[Address(RVA = "0x1352608", Offset = "0x1352608", VA = "0x1352608")]
	public static extern int CSharp_UnloadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B3C")]
	[Address(RVA = "0x136A7A8", Offset = "0x136A7A8", VA = "0x136A7A8")]
	public static extern void CSharp_CancelBankCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B3D")]
	[Address(RVA = "0x1352794", Offset = "0x1352794", VA = "0x1352794")]
	public static extern int CSharp_PrepareBank__SWIG_0(int jarg1, string jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B3E")]
	[Address(RVA = "0x13528BC", Offset = "0x13528BC", VA = "0x13528BC")]
	public static extern int CSharp_PrepareBank__SWIG_1(int jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B3F")]
	[Address(RVA = "0x13529E4", Offset = "0x13529E4", VA = "0x13529E4")]
	public static extern int CSharp_PrepareBank__SWIG_2(int jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B40")]
	[Address(RVA = "0x1352AF0", Offset = "0x1352AF0", VA = "0x1352AF0")]
	public static extern int CSharp_PrepareBank__SWIG_3(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B41")]
	[Address(RVA = "0x1352C60", Offset = "0x1352C60", VA = "0x1352C60")]
	public static extern int CSharp_PrepareBank__SWIG_4(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001B42")]
	[Address(RVA = "0x1352E04", Offset = "0x1352E04", VA = "0x1352E04")]
	public static extern int CSharp_PrepareBank__SWIG_5(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B43")]
	[Address(RVA = "0x1352FA8", Offset = "0x1352FA8", VA = "0x1352FA8")]
	public static extern int CSharp_PrepareBank__SWIG_6(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001B44")]
	[Address(RVA = "0x1353130", Offset = "0x1353130", VA = "0x1353130")]
	public static extern int CSharp_PrepareBank__SWIG_7(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B45")]
	[Address(RVA = "0x1353234", Offset = "0x1353234", VA = "0x1353234")]
	public static extern int CSharp_ClearPreparedEvents();

	[PreserveSig]
	[Token(Token = "0x6001B46")]
	[Address(RVA = "0x1353540", Offset = "0x1353540", VA = "0x1353540")]
	public static extern int CSharp_PrepareEvent__SWIG_0(int jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B47")]
	[Address(RVA = "0x1353654", Offset = "0x1353654", VA = "0x1353654")]
	public static extern int CSharp_PrepareEvent__SWIG_1(int jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B48")]
	[Address(RVA = "0x13539F0", Offset = "0x13539F0", VA = "0x13539F0")]
	public static extern int CSharp_PrepareEvent__SWIG_2(int jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6001B49")]
	[Address(RVA = "0x1353B80", Offset = "0x1353B80", VA = "0x1353B80")]
	public static extern int CSharp_PrepareEvent__SWIG_3(int jarg1, [In] uint[] jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6001B4A")]
	[Address(RVA = "0x1353CC0", Offset = "0x1353CC0", VA = "0x1353CC0")]
	public static extern int CSharp_SetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B4B")]
	[Address(RVA = "0x1353DD8", Offset = "0x1353DD8", VA = "0x1353DD8")]
	public static extern int CSharp_UnsetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B4C")]
	[Address(RVA = "0x1354110", Offset = "0x1354110", VA = "0x1354110")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_0(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001B4D")]
	[Address(RVA = "0x1354270", Offset = "0x1354270", VA = "0x1354270")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_1(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001B4E")]
	[Address(RVA = "0x1354634", Offset = "0x1354634", VA = "0x1354634")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_2(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6001B4F")]
	[Address(RVA = "0x1354810", Offset = "0x1354810", VA = "0x1354810")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_3(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6001B50")]
	[Address(RVA = "0x13549A4", Offset = "0x13549A4", VA = "0x13549A4")]
	public static extern int CSharp_AddListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B51")]
	[Address(RVA = "0x1354AF8", Offset = "0x1354AF8", VA = "0x1354AF8")]
	public static extern int CSharp_RemoveListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B52")]
	[Address(RVA = "0x1354C24", Offset = "0x1354C24", VA = "0x1354C24")]
	public static extern int CSharp_AddDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B53")]
	[Address(RVA = "0x1354D40", Offset = "0x1354D40", VA = "0x1354D40")]
	public static extern int CSharp_RemoveDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B54")]
	[Address(RVA = "0x1354E5C", Offset = "0x1354E5C", VA = "0x1354E5C")]
	public static extern int CSharp_ResetListenersToDefault(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B55")]
	[Address(RVA = "0x1354FB4", Offset = "0x1354FB4", VA = "0x1354FB4")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_0(ulong jarg1, bool jarg2, IntPtr jarg3, [In] float[] jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B56")]
	[Address(RVA = "0x135512C", Offset = "0x135512C", VA = "0x135512C")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_1(ulong jarg1, bool jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B57")]
	[Address(RVA = "0x13552A0", Offset = "0x13552A0", VA = "0x13552A0")]
	public static extern int CSharp_SetRTPCValue__SWIG_0(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001B58")]
	[Address(RVA = "0x1355434", Offset = "0x1355434", VA = "0x1355434")]
	public static extern int CSharp_SetRTPCValue__SWIG_1(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001B59")]
	[Address(RVA = "0x13555B0", Offset = "0x13555B0", VA = "0x13555B0")]
	public static extern int CSharp_SetRTPCValue__SWIG_2(uint jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B5A")]
	[Address(RVA = "0x1355714", Offset = "0x1355714", VA = "0x1355714")]
	public static extern int CSharp_SetRTPCValue__SWIG_3(uint jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B5B")]
	[Address(RVA = "0x1355828", Offset = "0x1355828", VA = "0x1355828")]
	public static extern int CSharp_SetRTPCValue__SWIG_4(uint jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B5C")]
	[Address(RVA = "0x1355994", Offset = "0x1355994", VA = "0x1355994")]
	public static extern int CSharp_SetRTPCValue__SWIG_5(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001B5D")]
	[Address(RVA = "0x1355B40", Offset = "0x1355B40", VA = "0x1355B40")]
	public static extern int CSharp_SetRTPCValue__SWIG_6(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001B5E")]
	[Address(RVA = "0x1355CD4", Offset = "0x1355CD4", VA = "0x1355CD4")]
	public static extern int CSharp_SetRTPCValue__SWIG_7(string jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B5F")]
	[Address(RVA = "0x1355E50", Offset = "0x1355E50", VA = "0x1355E50")]
	public static extern int CSharp_SetRTPCValue__SWIG_8(string jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B60")]
	[Address(RVA = "0x1355F7C", Offset = "0x1355F7C", VA = "0x1355F7C")]
	public static extern int CSharp_SetRTPCValue__SWIG_9(string jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B61")]
	[Address(RVA = "0x13560C8", Offset = "0x13560C8", VA = "0x13560C8")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_0(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001B62")]
	[Address(RVA = "0x1356224", Offset = "0x1356224", VA = "0x1356224")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_1(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001B63")]
	[Address(RVA = "0x1356368", Offset = "0x1356368", VA = "0x1356368")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_2(uint jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B64")]
	[Address(RVA = "0x1356494", Offset = "0x1356494", VA = "0x1356494")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_3(uint jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B65")]
	[Address(RVA = "0x13565D8", Offset = "0x13565D8", VA = "0x13565D8")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_4(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001B66")]
	[Address(RVA = "0x135674C", Offset = "0x135674C", VA = "0x135674C")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_5(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001B67")]
	[Address(RVA = "0x13568A8", Offset = "0x13568A8", VA = "0x13568A8")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_6(string jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B68")]
	[Address(RVA = "0x13569EC", Offset = "0x13569EC", VA = "0x13569EC")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_7(string jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B69")]
	[Address(RVA = "0x1356B70", Offset = "0x1356B70", VA = "0x1356B70")]
	public static extern int CSharp_ResetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x6001B6A")]
	[Address(RVA = "0x1356CE4", Offset = "0x1356CE4", VA = "0x1356CE4")]
	public static extern int CSharp_ResetRTPCValue__SWIG_1(uint jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B6B")]
	[Address(RVA = "0x1356E40", Offset = "0x1356E40", VA = "0x1356E40")]
	public static extern int CSharp_ResetRTPCValue__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B6C")]
	[Address(RVA = "0x1356F84", Offset = "0x1356F84", VA = "0x1356F84")]
	public static extern int CSharp_ResetRTPCValue__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B6D")]
	[Address(RVA = "0x1357078", Offset = "0x1357078", VA = "0x1357078")]
	public static extern int CSharp_ResetRTPCValue__SWIG_4(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B6E")]
	[Address(RVA = "0x13571C4", Offset = "0x13571C4", VA = "0x13571C4")]
	public static extern int CSharp_ResetRTPCValue__SWIG_5(string jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x6001B6F")]
	[Address(RVA = "0x1357350", Offset = "0x1357350", VA = "0x1357350")]
	public static extern int CSharp_ResetRTPCValue__SWIG_6(string jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B70")]
	[Address(RVA = "0x13574C4", Offset = "0x13574C4", VA = "0x13574C4")]
	public static extern int CSharp_ResetRTPCValue__SWIG_7(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B71")]
	[Address(RVA = "0x1357620", Offset = "0x1357620", VA = "0x1357620")]
	public static extern int CSharp_ResetRTPCValue__SWIG_8(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B72")]
	[Address(RVA = "0x135772C", Offset = "0x135772C", VA = "0x135772C")]
	public static extern int CSharp_ResetRTPCValue__SWIG_9(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B73")]
	[Address(RVA = "0x1357878", Offset = "0x1357878", VA = "0x1357878")]
	public static extern int CSharp_SetSwitch__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B74")]
	[Address(RVA = "0x13579C4", Offset = "0x13579C4", VA = "0x13579C4")]
	public static extern int CSharp_SetSwitch__SWIG_1(string jarg1, string jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B75")]
	[Address(RVA = "0x1357B34", Offset = "0x1357B34", VA = "0x1357B34")]
	public static extern int CSharp_PostTrigger__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B76")]
	[Address(RVA = "0x1357C70", Offset = "0x1357C70", VA = "0x1357C70")]
	public static extern int CSharp_PostTrigger__SWIG_1(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B77")]
	[Address(RVA = "0x1357D8C", Offset = "0x1357D8C", VA = "0x1357D8C")]
	public static extern int CSharp_SetState__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B78")]
	[Address(RVA = "0x1357E90", Offset = "0x1357E90", VA = "0x1357E90")]
	public static extern int CSharp_SetState__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B79")]
	[Address(RVA = "0x1358010", Offset = "0x1358010", VA = "0x1358010")]
	public static extern int CSharp_SetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B7A")]
	[Address(RVA = "0x135817C", Offset = "0x135817C", VA = "0x135817C")]
	public static extern int CSharp_SetGameObjectOutputBusVolume(ulong jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B7B")]
	[Address(RVA = "0x1358298", Offset = "0x1358298", VA = "0x1358298")]
	public static extern int CSharp_SetActorMixerEffect(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B7C")]
	[Address(RVA = "0x13583AC", Offset = "0x13583AC", VA = "0x13583AC")]
	public static extern int CSharp_SetBusEffect__SWIG_0(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B7D")]
	[Address(RVA = "0x13584C0", Offset = "0x13584C0", VA = "0x13584C0")]
	public static extern int CSharp_SetBusEffect__SWIG_1(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001B7E")]
	[Address(RVA = "0x13585E4", Offset = "0x13585E4", VA = "0x13585E4")]
	public static extern int CSharp_SetMixer__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B7F")]
	[Address(RVA = "0x13586E8", Offset = "0x13586E8", VA = "0x13586E8")]
	public static extern int CSharp_SetMixer__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B80")]
	[Address(RVA = "0x1358818", Offset = "0x1358818", VA = "0x1358818")]
	public static extern int CSharp_SetBusConfig__SWIG_0(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B81")]
	[Address(RVA = "0x1358930", Offset = "0x1358930", VA = "0x1358930")]
	public static extern int CSharp_SetBusConfig__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B82")]
	[Address(RVA = "0x1358AB4", Offset = "0x1358AB4", VA = "0x1358AB4")]
	public static extern int CSharp_SetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B83")]
	[Address(RVA = "0x1358C4C", Offset = "0x1358C4C", VA = "0x1358C4C")]
	public static extern int CSharp_SetMultipleObstructionAndOcclusion(ulong jarg1, ulong jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001B84")]
	[Address(RVA = "0x1358D58", Offset = "0x1358D58", VA = "0x1358D58")]
	public static extern int CSharp_StartOutputCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B85")]
	[Address(RVA = "0x1358E4C", Offset = "0x1358E4C", VA = "0x1358E4C")]
	public static extern int CSharp_StopOutputCapture();

	[PreserveSig]
	[Token(Token = "0x6001B86")]
	[Address(RVA = "0x1358F24", Offset = "0x1358F24", VA = "0x1358F24")]
	public static extern int CSharp_AddOutputCaptureMarker(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B87")]
	[Address(RVA = "0x1359020", Offset = "0x1359020", VA = "0x1359020")]
	public static extern int CSharp_StartProfilerCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B88")]
	[Address(RVA = "0x1359114", Offset = "0x1359114", VA = "0x1359114")]
	public static extern int CSharp_StopProfilerCapture();

	[PreserveSig]
	[Token(Token = "0x6001B89")]
	[Address(RVA = "0x13591EC", Offset = "0x13591EC", VA = "0x13591EC")]
	public static extern int CSharp_RemoveOutput(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B8A")]
	[Address(RVA = "0x13592E0", Offset = "0x13592E0", VA = "0x13592E0")]
	public static extern ulong CSharp_GetOutputID__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B8B")]
	[Address(RVA = "0x13593E4", Offset = "0x13593E4", VA = "0x13593E4")]
	public static extern ulong CSharp_GetOutputID__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B8C")]
	[Address(RVA = "0x1359500", Offset = "0x1359500", VA = "0x1359500")]
	public static extern int CSharp_SetBusDevice__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B8D")]
	[Address(RVA = "0x1359604", Offset = "0x1359604", VA = "0x1359604")]
	public static extern int CSharp_SetBusDevice__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B8E")]
	[Address(RVA = "0x1359738", Offset = "0x1359738", VA = "0x1359738")]
	public static extern int CSharp_SetOutputVolume(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B8F")]
	[Address(RVA = "0x135982C", Offset = "0x135982C", VA = "0x135982C")]
	public static extern int CSharp_Suspend__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B90")]
	[Address(RVA = "0x1359908", Offset = "0x1359908", VA = "0x1359908")]
	public static extern int CSharp_Suspend__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001B91")]
	[Address(RVA = "0x13599D8", Offset = "0x13599D8", VA = "0x13599D8")]
	public static extern int CSharp_WakeupFromSuspend();

	[PreserveSig]
	[Token(Token = "0x6001B92")]
	[Address(RVA = "0x1359AA8", Offset = "0x1359AA8", VA = "0x1359AA8")]
	public static extern uint CSharp_GetBufferTick();

	[PreserveSig]
	[Token(Token = "0x6001B93")]
	[Address(RVA = "0x1346F18", Offset = "0x1346F18", VA = "0x1346F18")]
	public static extern void CSharp_AkSegmentInfo_iCurrentPosition_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B94")]
	[Address(RVA = "0x1347010", Offset = "0x1347010", VA = "0x1347010")]
	public static extern int CSharp_AkSegmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B95")]
	[Address(RVA = "0x1347108", Offset = "0x1347108", VA = "0x1347108")]
	public static extern void CSharp_AkSegmentInfo_iPreEntryDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B96")]
	[Address(RVA = "0x1347200", Offset = "0x1347200", VA = "0x1347200")]
	public static extern int CSharp_AkSegmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B97")]
	[Address(RVA = "0x13472F8", Offset = "0x13472F8", VA = "0x13472F8")]
	public static extern void CSharp_AkSegmentInfo_iActiveDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B98")]
	[Address(RVA = "0x13473F0", Offset = "0x13473F0", VA = "0x13473F0")]
	public static extern int CSharp_AkSegmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B99")]
	[Address(RVA = "0x13474E8", Offset = "0x13474E8", VA = "0x13474E8")]
	public static extern void CSharp_AkSegmentInfo_iPostExitDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B9A")]
	[Address(RVA = "0x13475E0", Offset = "0x13475E0", VA = "0x13475E0")]
	public static extern int CSharp_AkSegmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B9B")]
	[Address(RVA = "0x13476D8", Offset = "0x13476D8", VA = "0x13476D8")]
	public static extern void CSharp_AkSegmentInfo_iRemainingLookAheadTime_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B9C")]
	[Address(RVA = "0x13477D0", Offset = "0x13477D0", VA = "0x13477D0")]
	public static extern int CSharp_AkSegmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B9D")]
	[Address(RVA = "0x13478C8", Offset = "0x13478C8", VA = "0x13478C8")]
	public static extern void CSharp_AkSegmentInfo_fBeatDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001B9E")]
	[Address(RVA = "0x13479C0", Offset = "0x13479C0", VA = "0x13479C0")]
	public static extern float CSharp_AkSegmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001B9F")]
	[Address(RVA = "0x1347AB8", Offset = "0x1347AB8", VA = "0x1347AB8")]
	public static extern void CSharp_AkSegmentInfo_fBarDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BA0")]
	[Address(RVA = "0x1347BB0", Offset = "0x1347BB0", VA = "0x1347BB0")]
	public static extern float CSharp_AkSegmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BA1")]
	[Address(RVA = "0x1347CA8", Offset = "0x1347CA8", VA = "0x1347CA8")]
	public static extern void CSharp_AkSegmentInfo_fGridDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BA2")]
	[Address(RVA = "0x1347DA0", Offset = "0x1347DA0", VA = "0x1347DA0")]
	public static extern float CSharp_AkSegmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BA3")]
	[Address(RVA = "0x1347E98", Offset = "0x1347E98", VA = "0x1347E98")]
	public static extern void CSharp_AkSegmentInfo_fGridOffset_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BA4")]
	[Address(RVA = "0x1347F90", Offset = "0x1347F90", VA = "0x1347F90")]
	public static extern float CSharp_AkSegmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BA5")]
	[Address(RVA = "0x1348090", Offset = "0x1348090", VA = "0x1348090")]
	public static extern IntPtr CSharp_new_AkSegmentInfo();

	[PreserveSig]
	[Token(Token = "0x6001BA6")]
	[Address(RVA = "0x1346E20", Offset = "0x1346E20", VA = "0x1346E20")]
	public static extern void CSharp_delete_AkSegmentInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BA7")]
	[Address(RVA = "0x1359B78", Offset = "0x1359B78", VA = "0x1359B78")]
	public static extern byte CSharp_AK_INVALID_MIDI_CHANNEL_get();

	[PreserveSig]
	[Token(Token = "0x6001BA8")]
	[Address(RVA = "0x1359C48", Offset = "0x1359C48", VA = "0x1359C48")]
	public static extern byte CSharp_AK_INVALID_MIDI_NOTE_get();

	[PreserveSig]
	[Token(Token = "0x6001BA9")]
	[Address(RVA = "0x136A828", Offset = "0x136A828", VA = "0x136A828")]
	public static extern void CSharp_AkMIDIEvent_byChan_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BAA")]
	[Address(RVA = "0x136A8B8", Offset = "0x136A8B8", VA = "0x136A8B8")]
	public static extern byte CSharp_AkMIDIEvent_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BAB")]
	[Address(RVA = "0x136A938", Offset = "0x136A938", VA = "0x136A938")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam1_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BAC")]
	[Address(RVA = "0x136A9C8", Offset = "0x136A9C8", VA = "0x136A9C8")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BAD")]
	[Address(RVA = "0x136AA48", Offset = "0x136AA48", VA = "0x136AA48")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam2_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BAE")]
	[Address(RVA = "0x136AAD8", Offset = "0x136AAD8", VA = "0x136AAD8")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BAF")]
	[Address(RVA = "0x136AB58", Offset = "0x136AB58", VA = "0x136AB58")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tGen();

	[PreserveSig]
	[Token(Token = "0x6001BB0")]
	[Address(RVA = "0x136ABCC", Offset = "0x136ABCC", VA = "0x136ABCC")]
	public static extern void CSharp_delete_AkMIDIEvent_tGen(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BB1")]
	[Address(RVA = "0x136AC4C", Offset = "0x136AC4C", VA = "0x136AC4C")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BB2")]
	[Address(RVA = "0x136ACDC", Offset = "0x136ACDC", VA = "0x136ACDC")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BB3")]
	[Address(RVA = "0x136AD5C", Offset = "0x136AD5C", VA = "0x136AD5C")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BB4")]
	[Address(RVA = "0x136ADEC", Offset = "0x136ADEC", VA = "0x136ADEC")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BB5")]
	[Address(RVA = "0x136AE6C", Offset = "0x136AE6C", VA = "0x136AE6C")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteOnOff();

	[PreserveSig]
	[Token(Token = "0x6001BB6")]
	[Address(RVA = "0x136AEE0", Offset = "0x136AEE0", VA = "0x136AEE0")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteOnOff(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BB7")]
	[Address(RVA = "0x136AF60", Offset = "0x136AF60", VA = "0x136AF60")]
	public static extern void CSharp_AkMIDIEvent_tCc_byCc_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BB8")]
	[Address(RVA = "0x136AFF0", Offset = "0x136AFF0", VA = "0x136AFF0")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BB9")]
	[Address(RVA = "0x136B070", Offset = "0x136B070", VA = "0x136B070")]
	public static extern void CSharp_AkMIDIEvent_tCc_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BBA")]
	[Address(RVA = "0x136B100", Offset = "0x136B100", VA = "0x136B100")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BBB")]
	[Address(RVA = "0x136B180", Offset = "0x136B180", VA = "0x136B180")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tCc();

	[PreserveSig]
	[Token(Token = "0x6001BBC")]
	[Address(RVA = "0x136B1F4", Offset = "0x136B1F4", VA = "0x136B1F4")]
	public static extern void CSharp_delete_AkMIDIEvent_tCc(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BBD")]
	[Address(RVA = "0x136B274", Offset = "0x136B274", VA = "0x136B274")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BBE")]
	[Address(RVA = "0x136B304", Offset = "0x136B304", VA = "0x136B304")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BBF")]
	[Address(RVA = "0x136B384", Offset = "0x136B384", VA = "0x136B384")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BC0")]
	[Address(RVA = "0x136B414", Offset = "0x136B414", VA = "0x136B414")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BC1")]
	[Address(RVA = "0x136B494", Offset = "0x136B494", VA = "0x136B494")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tPitchBend();

	[PreserveSig]
	[Token(Token = "0x6001BC2")]
	[Address(RVA = "0x136B508", Offset = "0x136B508", VA = "0x136B508")]
	public static extern void CSharp_delete_AkMIDIEvent_tPitchBend(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BC3")]
	[Address(RVA = "0x136B588", Offset = "0x136B588", VA = "0x136B588")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BC4")]
	[Address(RVA = "0x136B618", Offset = "0x136B618", VA = "0x136B618")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BC5")]
	[Address(RVA = "0x136B698", Offset = "0x136B698", VA = "0x136B698")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BC6")]
	[Address(RVA = "0x136B728", Offset = "0x136B728", VA = "0x136B728")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BC7")]
	[Address(RVA = "0x136B7A8", Offset = "0x136B7A8", VA = "0x136B7A8")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteAftertouch();

	[PreserveSig]
	[Token(Token = "0x6001BC8")]
	[Address(RVA = "0x136B81C", Offset = "0x136B81C", VA = "0x136B81C")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BC9")]
	[Address(RVA = "0x136B89C", Offset = "0x136B89C", VA = "0x136B89C")]
	public static extern void CSharp_AkMIDIEvent_tChanAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BCA")]
	[Address(RVA = "0x136B92C", Offset = "0x136B92C", VA = "0x136B92C")]
	public static extern byte CSharp_AkMIDIEvent_tChanAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BCB")]
	[Address(RVA = "0x136B9AC", Offset = "0x136B9AC", VA = "0x136B9AC")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tChanAftertouch();

	[PreserveSig]
	[Token(Token = "0x6001BCC")]
	[Address(RVA = "0x136BA20", Offset = "0x136BA20", VA = "0x136BA20")]
	public static extern void CSharp_delete_AkMIDIEvent_tChanAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BCD")]
	[Address(RVA = "0x136BAA0", Offset = "0x136BAA0", VA = "0x136BAA0")]
	public static extern void CSharp_AkMIDIEvent_tProgramChange_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BCE")]
	[Address(RVA = "0x136BB30", Offset = "0x136BB30", VA = "0x136BB30")]
	public static extern byte CSharp_AkMIDIEvent_tProgramChange_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BCF")]
	[Address(RVA = "0x136BBB0", Offset = "0x136BBB0", VA = "0x136BBB0")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tProgramChange();

	[PreserveSig]
	[Token(Token = "0x6001BD0")]
	[Address(RVA = "0x136BC24", Offset = "0x136BC24", VA = "0x136BC24")]
	public static extern void CSharp_delete_AkMIDIEvent_tProgramChange(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BD1")]
	[Address(RVA = "0x136BCA4", Offset = "0x136BCA4", VA = "0x136BCA4")]
	public static extern void CSharp_AkMIDIEvent_Gen_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BD2")]
	[Address(RVA = "0x136BD34", Offset = "0x136BD34", VA = "0x136BD34")]
	public static extern IntPtr CSharp_AkMIDIEvent_Gen_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BD3")]
	[Address(RVA = "0x136BDB4", Offset = "0x136BDB4", VA = "0x136BDB4")]
	public static extern void CSharp_AkMIDIEvent_Cc_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BD4")]
	[Address(RVA = "0x136BE44", Offset = "0x136BE44", VA = "0x136BE44")]
	public static extern IntPtr CSharp_AkMIDIEvent_Cc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BD5")]
	[Address(RVA = "0x136BEC4", Offset = "0x136BEC4", VA = "0x136BEC4")]
	public static extern void CSharp_AkMIDIEvent_NoteOnOff_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BD6")]
	[Address(RVA = "0x136BF54", Offset = "0x136BF54", VA = "0x136BF54")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteOnOff_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BD7")]
	[Address(RVA = "0x136BFD4", Offset = "0x136BFD4", VA = "0x136BFD4")]
	public static extern void CSharp_AkMIDIEvent_PitchBend_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BD8")]
	[Address(RVA = "0x136C064", Offset = "0x136C064", VA = "0x136C064")]
	public static extern IntPtr CSharp_AkMIDIEvent_PitchBend_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BD9")]
	[Address(RVA = "0x136C0E4", Offset = "0x136C0E4", VA = "0x136C0E4")]
	public static extern void CSharp_AkMIDIEvent_NoteAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BDA")]
	[Address(RVA = "0x136C174", Offset = "0x136C174", VA = "0x136C174")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BDB")]
	[Address(RVA = "0x136C1F4", Offset = "0x136C1F4", VA = "0x136C1F4")]
	public static extern void CSharp_AkMIDIEvent_ChanAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BDC")]
	[Address(RVA = "0x136C284", Offset = "0x136C284", VA = "0x136C284")]
	public static extern IntPtr CSharp_AkMIDIEvent_ChanAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BDD")]
	[Address(RVA = "0x136C304", Offset = "0x136C304", VA = "0x136C304")]
	public static extern void CSharp_AkMIDIEvent_ProgramChange_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BDE")]
	[Address(RVA = "0x136C394", Offset = "0x136C394", VA = "0x136C394")]
	public static extern IntPtr CSharp_AkMIDIEvent_ProgramChange_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BDF")]
	[Address(RVA = "0x136C414", Offset = "0x136C414", VA = "0x136C414")]
	public static extern void CSharp_AkMIDIEvent_byType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BE0")]
	[Address(RVA = "0x136C4A4", Offset = "0x136C4A4", VA = "0x136C4A4")]
	public static extern int CSharp_AkMIDIEvent_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BE1")]
	[Address(RVA = "0x136C524", Offset = "0x136C524", VA = "0x136C524")]
	public static extern void CSharp_AkMIDIEvent_byOnOffNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BE2")]
	[Address(RVA = "0x136C5B4", Offset = "0x136C5B4", VA = "0x136C5B4")]
	public static extern byte CSharp_AkMIDIEvent_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BE3")]
	[Address(RVA = "0x136C634", Offset = "0x136C634", VA = "0x136C634")]
	public static extern void CSharp_AkMIDIEvent_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BE4")]
	[Address(RVA = "0x136C6C4", Offset = "0x136C6C4", VA = "0x136C6C4")]
	public static extern byte CSharp_AkMIDIEvent_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BE5")]
	[Address(RVA = "0x136C744", Offset = "0x136C744", VA = "0x136C744")]
	public static extern void CSharp_AkMIDIEvent_byCc_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BE6")]
	[Address(RVA = "0x136C7D4", Offset = "0x136C7D4", VA = "0x136C7D4")]
	public static extern int CSharp_AkMIDIEvent_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BE7")]
	[Address(RVA = "0x136C854", Offset = "0x136C854", VA = "0x136C854")]
	public static extern void CSharp_AkMIDIEvent_byCcValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BE8")]
	[Address(RVA = "0x136C8E4", Offset = "0x136C8E4", VA = "0x136C8E4")]
	public static extern byte CSharp_AkMIDIEvent_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BE9")]
	[Address(RVA = "0x136C964", Offset = "0x136C964", VA = "0x136C964")]
	public static extern void CSharp_AkMIDIEvent_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BEA")]
	[Address(RVA = "0x136C9F4", Offset = "0x136C9F4", VA = "0x136C9F4")]
	public static extern byte CSharp_AkMIDIEvent_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BEB")]
	[Address(RVA = "0x136CA74", Offset = "0x136CA74", VA = "0x136CA74")]
	public static extern void CSharp_AkMIDIEvent_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BEC")]
	[Address(RVA = "0x136CB04", Offset = "0x136CB04", VA = "0x136CB04")]
	public static extern byte CSharp_AkMIDIEvent_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BED")]
	[Address(RVA = "0x136CB84", Offset = "0x136CB84", VA = "0x136CB84")]
	public static extern void CSharp_AkMIDIEvent_byAftertouchNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BEE")]
	[Address(RVA = "0x136CC14", Offset = "0x136CC14", VA = "0x136CC14")]
	public static extern byte CSharp_AkMIDIEvent_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BEF")]
	[Address(RVA = "0x136CC94", Offset = "0x136CC94", VA = "0x136CC94")]
	public static extern void CSharp_AkMIDIEvent_byNoteAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BF0")]
	[Address(RVA = "0x136CD24", Offset = "0x136CD24", VA = "0x136CD24")]
	public static extern byte CSharp_AkMIDIEvent_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BF1")]
	[Address(RVA = "0x136CDA4", Offset = "0x136CDA4", VA = "0x136CDA4")]
	public static extern void CSharp_AkMIDIEvent_byChanAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BF2")]
	[Address(RVA = "0x136CE34", Offset = "0x136CE34", VA = "0x136CE34")]
	public static extern byte CSharp_AkMIDIEvent_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BF3")]
	[Address(RVA = "0x136CEB4", Offset = "0x136CEB4", VA = "0x136CEB4")]
	public static extern void CSharp_AkMIDIEvent_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BF4")]
	[Address(RVA = "0x136CF44", Offset = "0x136CF44", VA = "0x136CF44")]
	public static extern byte CSharp_AkMIDIEvent_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BF5")]
	[Address(RVA = "0x136CFC4", Offset = "0x136CFC4", VA = "0x136CFC4")]
	public static extern IntPtr CSharp_new_AkMIDIEvent();

	[PreserveSig]
	[Token(Token = "0x6001BF6")]
	[Address(RVA = "0x136D038", Offset = "0x136D038", VA = "0x136D038")]
	public static extern void CSharp_delete_AkMIDIEvent(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BF7")]
	[Address(RVA = "0x136D0B8", Offset = "0x136D0B8", VA = "0x136D0B8")]
	public static extern void CSharp_AkMIDIPost_uOffset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BF8")]
	[Address(RVA = "0x136D148", Offset = "0x136D148", VA = "0x136D148")]
	public static extern uint CSharp_AkMIDIPost_uOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BF9")]
	[Address(RVA = "0x136D1C8", Offset = "0x136D1C8", VA = "0x136D1C8")]
	public static extern int CSharp_AkMIDIPost_PostOnEvent(IntPtr jarg1, uint jarg2, ulong jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001BFA")]
	[Address(RVA = "0x136D270", Offset = "0x136D270", VA = "0x136D270")]
	public static extern void CSharp_AkMIDIPost_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001BFB")]
	[Address(RVA = "0x136D300", Offset = "0x136D300", VA = "0x136D300")]
	public static extern int CSharp_AkMIDIPost_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001BFC")]
	[Address(RVA = "0x136D374", Offset = "0x136D374", VA = "0x136D374")]
	public static extern IntPtr CSharp_new_AkMIDIPost();

	[PreserveSig]
	[Token(Token = "0x6001BFD")]
	[Address(RVA = "0x136D3E8", Offset = "0x136D3E8", VA = "0x136D3E8")]
	public static extern void CSharp_delete_AkMIDIPost(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001BFE")]
	[Address(RVA = "0x136D468", Offset = "0x136D468", VA = "0x136D468")]
	public static extern IntPtr CSharp_new_AkMemSettings();

	[PreserveSig]
	[Token(Token = "0x6001BFF")]
	[Address(RVA = "0x136D4DC", Offset = "0x136D4DC", VA = "0x136D4DC")]
	public static extern void CSharp_AkMemSettings_uMaxNumPools_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C00")]
	[Address(RVA = "0x136D56C", Offset = "0x136D56C", VA = "0x136D56C")]
	public static extern uint CSharp_AkMemSettings_uMaxNumPools_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C01")]
	[Address(RVA = "0x136D5EC", Offset = "0x136D5EC", VA = "0x136D5EC")]
	public static extern void CSharp_AkMemSettings_uDebugFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C02")]
	[Address(RVA = "0x136D67C", Offset = "0x136D67C", VA = "0x136D67C")]
	public static extern uint CSharp_AkMemSettings_uDebugFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C03")]
	[Address(RVA = "0x136D6FC", Offset = "0x136D6FC", VA = "0x136D6FC")]
	public static extern void CSharp_delete_AkMemSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C04")]
	[Address(RVA = "0x136D77C", Offset = "0x136D77C", VA = "0x136D77C")]
	public static extern void CSharp_AkMusicSettings_fStreamingLookAheadRatio_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C05")]
	[Address(RVA = "0x136D80C", Offset = "0x136D80C", VA = "0x136D80C")]
	public static extern float CSharp_AkMusicSettings_fStreamingLookAheadRatio_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C06")]
	[Address(RVA = "0x136D88C", Offset = "0x136D88C", VA = "0x136D88C")]
	public static extern IntPtr CSharp_new_AkMusicSettings();

	[PreserveSig]
	[Token(Token = "0x6001C07")]
	[Address(RVA = "0x136D900", Offset = "0x136D900", VA = "0x136D900")]
	public static extern void CSharp_delete_AkMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C08")]
	[Address(RVA = "0x1359D64", Offset = "0x1359D64", VA = "0x1359D64")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_0(uint jarg1, IntPtr jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6001C09")]
	[Address(RVA = "0x1359E9C", Offset = "0x1359E9C", VA = "0x1359E9C")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_1(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C0A")]
	[Address(RVA = "0x1348448", Offset = "0x1348448", VA = "0x1348448")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pPackage_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C0B")]
	[Address(RVA = "0x1348574", Offset = "0x1348574", VA = "0x1348574")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C0C")]
	[Address(RVA = "0x134865C", Offset = "0x134865C", VA = "0x134865C")]
	public static extern int CSharp_AkSerializedCallbackHeader_eType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C0D")]
	[Address(RVA = "0x1348744", Offset = "0x1348744", VA = "0x1348744")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_GetData(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C0E")]
	[Address(RVA = "0x1348844", Offset = "0x1348844", VA = "0x1348844")]
	public static extern IntPtr CSharp_new_AkSerializedCallbackHeader();

	[PreserveSig]
	[Token(Token = "0x6001C0F")]
	[Address(RVA = "0x1348360", Offset = "0x1348360", VA = "0x1348360")]
	public static extern void CSharp_delete_AkSerializedCallbackHeader(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C10")]
	[Address(RVA = "0x136D980", Offset = "0x136D980", VA = "0x136D980")]
	public static extern IntPtr CSharp_AkCallbackInfo_pCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C11")]
	[Address(RVA = "0x136DA00", Offset = "0x136DA00", VA = "0x136DA00")]
	public static extern ulong CSharp_AkCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C12")]
	[Address(RVA = "0x136DA80", Offset = "0x136DA80", VA = "0x136DA80")]
	public static extern IntPtr CSharp_new_AkCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001C13")]
	[Address(RVA = "0x136DAF4", Offset = "0x136DAF4", VA = "0x136DAF4")]
	public static extern void CSharp_delete_AkCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C14")]
	[Address(RVA = "0x136DB74", Offset = "0x136DB74", VA = "0x136DB74")]
	public static extern uint CSharp_AkEventCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C15")]
	[Address(RVA = "0x136DBF4", Offset = "0x136DBF4", VA = "0x136DBF4")]
	public static extern uint CSharp_AkEventCallbackInfo_eventID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C16")]
	[Address(RVA = "0x136DC74", Offset = "0x136DC74", VA = "0x136DC74")]
	public static extern IntPtr CSharp_new_AkEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001C17")]
	[Address(RVA = "0x136DCE8", Offset = "0x136DCE8", VA = "0x136DCE8")]
	public static extern void CSharp_delete_AkEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C18")]
	[Address(RVA = "0x136DD68", Offset = "0x136DD68", VA = "0x136DD68")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C19")]
	[Address(RVA = "0x136DDE8", Offset = "0x136DDE8", VA = "0x136DDE8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C1A")]
	[Address(RVA = "0x136DE68", Offset = "0x136DE68", VA = "0x136DE68")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C1B")]
	[Address(RVA = "0x136DEE8", Offset = "0x136DEE8", VA = "0x136DEE8")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C1C")]
	[Address(RVA = "0x136DF68", Offset = "0x136DF68", VA = "0x136DF68")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C1D")]
	[Address(RVA = "0x136DFE8", Offset = "0x136DFE8", VA = "0x136DFE8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C1E")]
	[Address(RVA = "0x136E068", Offset = "0x136E068", VA = "0x136E068")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C1F")]
	[Address(RVA = "0x136E0E8", Offset = "0x136E0E8", VA = "0x136E0E8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C20")]
	[Address(RVA = "0x136E168", Offset = "0x136E168", VA = "0x136E168")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C21")]
	[Address(RVA = "0x136E1E8", Offset = "0x136E1E8", VA = "0x136E1E8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C22")]
	[Address(RVA = "0x136E268", Offset = "0x136E268", VA = "0x136E268")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C23")]
	[Address(RVA = "0x136E2E8", Offset = "0x136E2E8", VA = "0x136E2E8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C24")]
	[Address(RVA = "0x136E368", Offset = "0x136E368", VA = "0x136E368")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C25")]
	[Address(RVA = "0x136E3E8", Offset = "0x136E3E8", VA = "0x136E3E8")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C26")]
	[Address(RVA = "0x136E468", Offset = "0x136E468", VA = "0x136E468")]
	public static extern IntPtr CSharp_new_AkMIDIEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001C27")]
	[Address(RVA = "0x136E4DC", Offset = "0x136E4DC", VA = "0x136E4DC")]
	public static extern void CSharp_delete_AkMIDIEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C28")]
	[Address(RVA = "0x136E55C", Offset = "0x136E55C", VA = "0x136E55C")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uIdentifier_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C29")]
	[Address(RVA = "0x136E5DC", Offset = "0x136E5DC", VA = "0x136E5DC")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C2A")]
	[Address(RVA = "0x136E65C", Offset = "0x136E65C", VA = "0x136E65C")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_strLabel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C2B")]
	[Address(RVA = "0x136E6DC", Offset = "0x136E6DC", VA = "0x136E6DC")]
	public static extern IntPtr CSharp_new_AkMarkerCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001C2C")]
	[Address(RVA = "0x136E750", Offset = "0x136E750", VA = "0x136E750")]
	public static extern void CSharp_delete_AkMarkerCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C2D")]
	[Address(RVA = "0x136E7D0", Offset = "0x136E7D0", VA = "0x136E7D0")]
	public static extern float CSharp_AkDurationCallbackInfo_fDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C2E")]
	[Address(RVA = "0x136E850", Offset = "0x136E850", VA = "0x136E850")]
	public static extern float CSharp_AkDurationCallbackInfo_fEstimatedDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C2F")]
	[Address(RVA = "0x136E8D0", Offset = "0x136E8D0", VA = "0x136E8D0")]
	public static extern uint CSharp_AkDurationCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C30")]
	[Address(RVA = "0x136E950", Offset = "0x136E950", VA = "0x136E950")]
	public static extern uint CSharp_AkDurationCallbackInfo_mediaID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C31")]
	[Address(RVA = "0x136E9D0", Offset = "0x136E9D0", VA = "0x136E9D0")]
	public static extern bool CSharp_AkDurationCallbackInfo_bStreaming_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C32")]
	[Address(RVA = "0x136EA58", Offset = "0x136EA58", VA = "0x136EA58")]
	public static extern IntPtr CSharp_new_AkDurationCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001C33")]
	[Address(RVA = "0x136EACC", Offset = "0x136EACC", VA = "0x136EACC")]
	public static extern void CSharp_delete_AkDurationCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C34")]
	[Address(RVA = "0x136EB4C", Offset = "0x136EB4C", VA = "0x136EB4C")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C35")]
	[Address(RVA = "0x136EBCC", Offset = "0x136EBCC", VA = "0x136EBCC")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C36")]
	[Address(RVA = "0x136EC4C", Offset = "0x136EC4C", VA = "0x136EC4C")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C37")]
	[Address(RVA = "0x136ECCC", Offset = "0x136ECCC", VA = "0x136ECCC")]
	public static extern IntPtr CSharp_new_AkDynamicSequenceItemCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001C38")]
	[Address(RVA = "0x136ED40", Offset = "0x136ED40", VA = "0x136ED40")]
	public static extern void CSharp_delete_AkDynamicSequenceItemCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C39")]
	[Address(RVA = "0x136EDC0", Offset = "0x136EDC0", VA = "0x136EDC0")]
	public static extern uint CSharp_AkMusicSyncCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C3A")]
	[Address(RVA = "0x136EE40", Offset = "0x136EE40", VA = "0x136EE40")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C3B")]
	[Address(RVA = "0x136EEC0", Offset = "0x136EEC0", VA = "0x136EEC0")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C3C")]
	[Address(RVA = "0x136EF40", Offset = "0x136EF40", VA = "0x136EF40")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C3D")]
	[Address(RVA = "0x136EFC0", Offset = "0x136EFC0", VA = "0x136EFC0")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C3E")]
	[Address(RVA = "0x136F040", Offset = "0x136F040", VA = "0x136F040")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C3F")]
	[Address(RVA = "0x136F0C0", Offset = "0x136F0C0", VA = "0x136F0C0")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C40")]
	[Address(RVA = "0x136F140", Offset = "0x136F140", VA = "0x136F140")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C41")]
	[Address(RVA = "0x136F1C0", Offset = "0x136F1C0", VA = "0x136F1C0")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C42")]
	[Address(RVA = "0x136F240", Offset = "0x136F240", VA = "0x136F240")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C43")]
	[Address(RVA = "0x136F2C0", Offset = "0x136F2C0", VA = "0x136F2C0")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_musicSyncType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C44")]
	[Address(RVA = "0x136F340", Offset = "0x136F340", VA = "0x136F340")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_userCueName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C45")]
	[Address(RVA = "0x136F3C0", Offset = "0x136F3C0", VA = "0x136F3C0")]
	public static extern IntPtr CSharp_new_AkMusicSyncCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001C46")]
	[Address(RVA = "0x136F434", Offset = "0x136F434", VA = "0x136F434")]
	public static extern void CSharp_delete_AkMusicSyncCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C47")]
	[Address(RVA = "0x136F4B4", Offset = "0x136F4B4", VA = "0x136F4B4")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_playlistID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C48")]
	[Address(RVA = "0x136F534", Offset = "0x136F534", VA = "0x136F534")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uNumPlaylistItems_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C49")]
	[Address(RVA = "0x136F5B4", Offset = "0x136F5B4", VA = "0x136F5B4")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistSelection_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C4A")]
	[Address(RVA = "0x136F634", Offset = "0x136F634", VA = "0x136F634")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistItemDone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C4B")]
	[Address(RVA = "0x136F6B4", Offset = "0x136F6B4", VA = "0x136F6B4")]
	public static extern IntPtr CSharp_new_AkMusicPlaylistCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001C4C")]
	[Address(RVA = "0x136F728", Offset = "0x136F728", VA = "0x136F728")]
	public static extern void CSharp_delete_AkMusicPlaylistCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C4D")]
	[Address(RVA = "0x136F7A8", Offset = "0x136F7A8", VA = "0x136F7A8")]
	public static extern uint CSharp_AkBankCallbackInfo_bankID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C4E")]
	[Address(RVA = "0x136F828", Offset = "0x136F828", VA = "0x136F828")]
	public static extern IntPtr CSharp_AkBankCallbackInfo_inMemoryBankPtr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C4F")]
	[Address(RVA = "0x136F8A8", Offset = "0x136F8A8", VA = "0x136F8A8")]
	public static extern int CSharp_AkBankCallbackInfo_loadResult_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C50")]
	[Address(RVA = "0x136F928", Offset = "0x136F928", VA = "0x136F928")]
	public static extern int CSharp_AkBankCallbackInfo_memPoolId_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C51")]
	[Address(RVA = "0x136F9A8", Offset = "0x136F9A8", VA = "0x136F9A8")]
	public static extern IntPtr CSharp_new_AkBankCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001C52")]
	[Address(RVA = "0x136FA1C", Offset = "0x136FA1C", VA = "0x136FA1C")]
	public static extern void CSharp_delete_AkBankCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C53")]
	[Address(RVA = "0x136FA9C", Offset = "0x136FA9C", VA = "0x136FA9C")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorCode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C54")]
	[Address(RVA = "0x136FB1C", Offset = "0x136FB1C", VA = "0x136FB1C")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C55")]
	[Address(RVA = "0x136FB9C", Offset = "0x136FB9C", VA = "0x136FB9C")]
	public static extern uint CSharp_AkMonitoringCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C56")]
	[Address(RVA = "0x136FC1C", Offset = "0x136FC1C", VA = "0x136FC1C")]
	public static extern ulong CSharp_AkMonitoringCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C57")]
	[Address(RVA = "0x136FC9C", Offset = "0x136FC9C", VA = "0x136FC9C")]
	public static extern IntPtr CSharp_AkMonitoringCallbackInfo_message_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C58")]
	[Address(RVA = "0x136FD1C", Offset = "0x136FD1C", VA = "0x136FD1C")]
	public static extern IntPtr CSharp_new_AkMonitoringCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001C59")]
	[Address(RVA = "0x136FD90", Offset = "0x136FD90", VA = "0x136FD90")]
	public static extern void CSharp_delete_AkMonitoringCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C5A")]
	[Address(RVA = "0x136FE10", Offset = "0x136FE10", VA = "0x136FE10")]
	public static extern bool CSharp_AkAudioInterruptionCallbackInfo_bEnterInterruption_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C5B")]
	[Address(RVA = "0x136FE98", Offset = "0x136FE98", VA = "0x136FE98")]
	public static extern IntPtr CSharp_new_AkAudioInterruptionCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001C5C")]
	[Address(RVA = "0x136FF0C", Offset = "0x136FF0C", VA = "0x136FF0C")]
	public static extern void CSharp_delete_AkAudioInterruptionCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C5D")]
	[Address(RVA = "0x136FF8C", Offset = "0x136FF8C", VA = "0x136FF8C")]
	public static extern bool CSharp_AkAudioSourceChangeCallbackInfo_bOtherAudioPlaying_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C5E")]
	[Address(RVA = "0x1370014", Offset = "0x1370014", VA = "0x1370014")]
	public static extern IntPtr CSharp_new_AkAudioSourceChangeCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6001C5F")]
	[Address(RVA = "0x1370088", Offset = "0x1370088", VA = "0x1370088")]
	public static extern void CSharp_delete_AkAudioSourceChangeCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C60")]
	[Address(RVA = "0x1370108", Offset = "0x1370108", VA = "0x1370108")]
	public static extern int CSharp_AkCallbackSerializer_Init(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C61")]
	[Address(RVA = "0x1370198", Offset = "0x1370198", VA = "0x1370198")]
	public static extern void CSharp_AkCallbackSerializer_Term();

	[PreserveSig]
	[Token(Token = "0x6001C62")]
	[Address(RVA = "0x1370208", Offset = "0x1370208", VA = "0x1370208")]
	public static extern IntPtr CSharp_AkCallbackSerializer_Lock();

	[PreserveSig]
	[Token(Token = "0x6001C63")]
	[Address(RVA = "0x137027C", Offset = "0x137027C", VA = "0x137027C")]
	public static extern void CSharp_AkCallbackSerializer_SetLocalOutput(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C64")]
	[Address(RVA = "0x13702FC", Offset = "0x13702FC", VA = "0x13702FC")]
	public static extern void CSharp_AkCallbackSerializer_Unlock();

	[PreserveSig]
	[Token(Token = "0x6001C65")]
	[Address(RVA = "0x137036C", Offset = "0x137036C", VA = "0x137036C")]
	public static extern int CSharp_AkCallbackSerializer_AudioSourceChangeCallbackFunc(bool jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C66")]
	[Address(RVA = "0x13703FC", Offset = "0x13703FC", VA = "0x13703FC")]
	public static extern IntPtr CSharp_new_AkCallbackSerializer();

	[PreserveSig]
	[Token(Token = "0x6001C67")]
	[Address(RVA = "0x1370470", Offset = "0x1370470", VA = "0x1370470")]
	public static extern void CSharp_delete_AkCallbackSerializer(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C68")]
	[Address(RVA = "0x135A008", Offset = "0x135A008", VA = "0x135A008")]
	public static extern int CSharp_PostCode__SWIG_0(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001C69")]
	[Address(RVA = "0x135A194", Offset = "0x135A194", VA = "0x135A194")]
	public static extern int CSharp_PostCode__SWIG_1(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001C6A")]
	[Address(RVA = "0x135A308", Offset = "0x135A308", VA = "0x135A308")]
	public static extern int CSharp_PostCode__SWIG_2(int jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6001C6B")]
	[Address(RVA = "0x135A42C", Offset = "0x135A42C", VA = "0x135A42C")]
	public static extern int CSharp_PostCode__SWIG_3(int jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001C6C")]
	[Address(RVA = "0x135A538", Offset = "0x135A538", VA = "0x135A538")]
	public static extern int CSharp_PostCode__SWIG_4(int jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C6D")]
	[Address(RVA = "0x135A6A4", Offset = "0x135A6A4", VA = "0x135A6A4")]
	public static extern int CSharp_PostString__SWIG_0(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001C6E")]
	[Address(RVA = "0x135A848", Offset = "0x135A848", VA = "0x135A848")]
	public static extern int CSharp_PostString__SWIG_1(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001C6F")]
	[Address(RVA = "0x135A9D4", Offset = "0x135A9D4", VA = "0x135A9D4")]
	public static extern int CSharp_PostString__SWIG_2(string jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6001C70")]
	[Address(RVA = "0x135AB10", Offset = "0x135AB10", VA = "0x135AB10")]
	public static extern int CSharp_PostString__SWIG_3(string jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001C71")]
	[Address(RVA = "0x135AC34", Offset = "0x135AC34", VA = "0x135AC34")]
	public static extern int CSharp_PostString__SWIG_4(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C72")]
	[Address(RVA = "0x135AD38", Offset = "0x135AD38", VA = "0x135AD38")]
	public static extern int CSharp_GetTimeStamp();

	[PreserveSig]
	[Token(Token = "0x6001C73")]
	[Address(RVA = "0x135AE10", Offset = "0x135AE10", VA = "0x135AE10")]
	public static extern uint CSharp_GetNumNonZeroBits(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C74")]
	[Address(RVA = "0x135AF08", Offset = "0x135AF08", VA = "0x135AF08")]
	public static extern void CSharp_AkGetDefaultHighPriorityThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C75")]
	[Address(RVA = "0x135B014", Offset = "0x135B014", VA = "0x135B014")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_0(uint jarg1, [In] uint[] jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001C76")]
	[Address(RVA = "0x135B140", Offset = "0x135B140", VA = "0x135B140")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_1(uint jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001C77")]
	[Address(RVA = "0x135B25C", Offset = "0x135B25C", VA = "0x135B25C")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001C78")]
	[Address(RVA = "0x135B370", Offset = "0x135B370", VA = "0x135B370")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001C79")]
	[Address(RVA = "0x13704F0", Offset = "0x13704F0", VA = "0x13704F0")]
	public static extern void CSharp_AkPositioningInfo_fCenterPct_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C7A")]
	[Address(RVA = "0x1370580", Offset = "0x1370580", VA = "0x1370580")]
	public static extern float CSharp_AkPositioningInfo_fCenterPct_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C7B")]
	[Address(RVA = "0x1370600", Offset = "0x1370600", VA = "0x1370600")]
	public static extern void CSharp_AkPositioningInfo_pannerType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C7C")]
	[Address(RVA = "0x1370690", Offset = "0x1370690", VA = "0x1370690")]
	public static extern int CSharp_AkPositioningInfo_pannerType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C7D")]
	[Address(RVA = "0x1370710", Offset = "0x1370710", VA = "0x1370710")]
	public static extern void CSharp_AkPositioningInfo_e3dPositioningType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C7E")]
	[Address(RVA = "0x13707A0", Offset = "0x13707A0", VA = "0x13707A0")]
	public static extern int CSharp_AkPositioningInfo_e3dPositioningType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C7F")]
	[Address(RVA = "0x1370820", Offset = "0x1370820", VA = "0x1370820")]
	public static extern void CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C80")]
	[Address(RVA = "0x13708B0", Offset = "0x13708B0", VA = "0x13708B0")]
	public static extern bool CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C81")]
	[Address(RVA = "0x1370938", Offset = "0x1370938", VA = "0x1370938")]
	public static extern void CSharp_AkPositioningInfo_e3DSpatializationMode_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C82")]
	[Address(RVA = "0x13709C8", Offset = "0x13709C8", VA = "0x13709C8")]
	public static extern int CSharp_AkPositioningInfo_e3DSpatializationMode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C83")]
	[Address(RVA = "0x1370A48", Offset = "0x1370A48", VA = "0x1370A48")]
	public static extern void CSharp_AkPositioningInfo_bUseAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C84")]
	[Address(RVA = "0x1370AD8", Offset = "0x1370AD8", VA = "0x1370AD8")]
	public static extern bool CSharp_AkPositioningInfo_bUseAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C85")]
	[Address(RVA = "0x1370B60", Offset = "0x1370B60", VA = "0x1370B60")]
	public static extern void CSharp_AkPositioningInfo_bUseConeAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C86")]
	[Address(RVA = "0x1370BF0", Offset = "0x1370BF0", VA = "0x1370BF0")]
	public static extern bool CSharp_AkPositioningInfo_bUseConeAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C87")]
	[Address(RVA = "0x1370C78", Offset = "0x1370C78", VA = "0x1370C78")]
	public static extern void CSharp_AkPositioningInfo_fInnerAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C88")]
	[Address(RVA = "0x1370D08", Offset = "0x1370D08", VA = "0x1370D08")]
	public static extern float CSharp_AkPositioningInfo_fInnerAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C89")]
	[Address(RVA = "0x1370D88", Offset = "0x1370D88", VA = "0x1370D88")]
	public static extern void CSharp_AkPositioningInfo_fOuterAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C8A")]
	[Address(RVA = "0x1370E18", Offset = "0x1370E18", VA = "0x1370E18")]
	public static extern float CSharp_AkPositioningInfo_fOuterAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C8B")]
	[Address(RVA = "0x1370E98", Offset = "0x1370E98", VA = "0x1370E98")]
	public static extern void CSharp_AkPositioningInfo_fConeMaxAttenuation_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C8C")]
	[Address(RVA = "0x1370F28", Offset = "0x1370F28", VA = "0x1370F28")]
	public static extern float CSharp_AkPositioningInfo_fConeMaxAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C8D")]
	[Address(RVA = "0x1370FA8", Offset = "0x1370FA8", VA = "0x1370FA8")]
	public static extern void CSharp_AkPositioningInfo_LPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C8E")]
	[Address(RVA = "0x1371038", Offset = "0x1371038", VA = "0x1371038")]
	public static extern float CSharp_AkPositioningInfo_LPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C8F")]
	[Address(RVA = "0x13710B8", Offset = "0x13710B8", VA = "0x13710B8")]
	public static extern void CSharp_AkPositioningInfo_HPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C90")]
	[Address(RVA = "0x1371148", Offset = "0x1371148", VA = "0x1371148")]
	public static extern float CSharp_AkPositioningInfo_HPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C91")]
	[Address(RVA = "0x13711C8", Offset = "0x13711C8", VA = "0x13711C8")]
	public static extern void CSharp_AkPositioningInfo_fMaxDistance_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C92")]
	[Address(RVA = "0x1371258", Offset = "0x1371258", VA = "0x1371258")]
	public static extern float CSharp_AkPositioningInfo_fMaxDistance_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C93")]
	[Address(RVA = "0x13712D8", Offset = "0x13712D8", VA = "0x13712D8")]
	public static extern void CSharp_AkPositioningInfo_fVolDryAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C94")]
	[Address(RVA = "0x1371368", Offset = "0x1371368", VA = "0x1371368")]
	public static extern float CSharp_AkPositioningInfo_fVolDryAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C95")]
	[Address(RVA = "0x13713E8", Offset = "0x13713E8", VA = "0x13713E8")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C96")]
	[Address(RVA = "0x1371478", Offset = "0x1371478", VA = "0x1371478")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C97")]
	[Address(RVA = "0x13714F8", Offset = "0x13714F8", VA = "0x13714F8")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C98")]
	[Address(RVA = "0x1371588", Offset = "0x1371588", VA = "0x1371588")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C99")]
	[Address(RVA = "0x1371608", Offset = "0x1371608", VA = "0x1371608")]
	public static extern void CSharp_AkPositioningInfo_LPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C9A")]
	[Address(RVA = "0x1371698", Offset = "0x1371698", VA = "0x1371698")]
	public static extern float CSharp_AkPositioningInfo_LPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C9B")]
	[Address(RVA = "0x1371718", Offset = "0x1371718", VA = "0x1371718")]
	public static extern void CSharp_AkPositioningInfo_HPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001C9C")]
	[Address(RVA = "0x13717A8", Offset = "0x13717A8", VA = "0x13717A8")]
	public static extern float CSharp_AkPositioningInfo_HPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C9D")]
	[Address(RVA = "0x1371828", Offset = "0x1371828", VA = "0x1371828")]
	public static extern IntPtr CSharp_new_AkPositioningInfo();

	[PreserveSig]
	[Token(Token = "0x6001C9E")]
	[Address(RVA = "0x137189C", Offset = "0x137189C", VA = "0x137189C")]
	public static extern void CSharp_delete_AkPositioningInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001C9F")]
	[Address(RVA = "0x137191C", Offset = "0x137191C", VA = "0x137191C")]
	public static extern void CSharp_AkObjectInfo_objID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CA0")]
	[Address(RVA = "0x13719AC", Offset = "0x13719AC", VA = "0x13719AC")]
	public static extern uint CSharp_AkObjectInfo_objID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CA1")]
	[Address(RVA = "0x1371A2C", Offset = "0x1371A2C", VA = "0x1371A2C")]
	public static extern void CSharp_AkObjectInfo_parentID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CA2")]
	[Address(RVA = "0x1371ABC", Offset = "0x1371ABC", VA = "0x1371ABC")]
	public static extern uint CSharp_AkObjectInfo_parentID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CA3")]
	[Address(RVA = "0x1371B3C", Offset = "0x1371B3C", VA = "0x1371B3C")]
	public static extern void CSharp_AkObjectInfo_iDepth_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CA4")]
	[Address(RVA = "0x1371BCC", Offset = "0x1371BCC", VA = "0x1371BCC")]
	public static extern int CSharp_AkObjectInfo_iDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CA5")]
	[Address(RVA = "0x1371C4C", Offset = "0x1371C4C", VA = "0x1371C4C")]
	public static extern IntPtr CSharp_new_AkObjectInfo();

	[PreserveSig]
	[Token(Token = "0x6001CA6")]
	[Address(RVA = "0x1371CC0", Offset = "0x1371CC0", VA = "0x1371CC0")]
	public static extern void CSharp_delete_AkObjectInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CA7")]
	[Address(RVA = "0x135B4BC", Offset = "0x135B4BC", VA = "0x135B4BC")]
	public static extern int CSharp_GetPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CA8")]
	[Address(RVA = "0x135B60C", Offset = "0x135B60C", VA = "0x135B60C")]
	public static extern int CSharp_GetListenerPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CA9")]
	[Address(RVA = "0x135B768", Offset = "0x135B768", VA = "0x135B768")]
	public static extern int CSharp_GetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001CAA")]
	[Address(RVA = "0x135B8E4", Offset = "0x135B8E4", VA = "0x135B8E4")]
	public static extern int CSharp_GetRTPCValue__SWIG_1(string jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x6001CAB")]
	[Address(RVA = "0x135BA60", Offset = "0x135BA60", VA = "0x135BA60")]
	public static extern int CSharp_GetSwitch__SWIG_0(uint jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001CAC")]
	[Address(RVA = "0x135BBA4", Offset = "0x135BBA4", VA = "0x135BBA4")]
	public static extern int CSharp_GetSwitch__SWIG_1(string jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001CAD")]
	[Address(RVA = "0x135BCC4", Offset = "0x135BCC4", VA = "0x135BCC4")]
	public static extern int CSharp_GetState__SWIG_0(uint jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CAE")]
	[Address(RVA = "0x135BDC8", Offset = "0x135BDC8", VA = "0x135BDC8")]
	public static extern int CSharp_GetState__SWIG_1(string jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CAF")]
	[Address(RVA = "0x135BF30", Offset = "0x135BF30", VA = "0x135BF30")]
	public static extern int CSharp_GetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, ref uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001CB0")]
	[Address(RVA = "0x135C094", Offset = "0x135C094", VA = "0x135C094")]
	public static extern int CSharp_GetGameObjectDryLevelValue(ulong jarg1, ulong jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001CB1")]
	[Address(RVA = "0x135C208", Offset = "0x135C208", VA = "0x135C208")]
	public static extern int CSharp_GetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, out float jarg3, out float jarg4);

	[PreserveSig]
	[Token(Token = "0x6001CB2")]
	[Address(RVA = "0x135C340", Offset = "0x135C340", VA = "0x135C340")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_0(uint jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001CB3")]
	[Address(RVA = "0x135C468", Offset = "0x135C468", VA = "0x135C468")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_1(string jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6001CB4")]
	[Address(RVA = "0x135C5A0", Offset = "0x135C5A0", VA = "0x135C5A0")]
	public static extern int CSharp_GetPositioningInfo(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CB5")]
	[Address(RVA = "0x135C6CC", Offset = "0x135C6CC", VA = "0x135C6CC")]
	public static extern bool CSharp_GetIsGameObjectActive(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CB6")]
	[Address(RVA = "0x135C7F0", Offset = "0x135C7F0", VA = "0x135C7F0")]
	public static extern float CSharp_GetMaxRadius(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CB7")]
	[Address(RVA = "0x135C8D4", Offset = "0x135C8D4", VA = "0x135C8D4")]
	public static extern uint CSharp_GetEventIDFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CB8")]
	[Address(RVA = "0x135C9B8", Offset = "0x135C9B8", VA = "0x135C9B8")]
	public static extern ulong CSharp_GetGameObjectFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CB9")]
	[Address(RVA = "0x135CAEC", Offset = "0x135CAEC", VA = "0x135CAEC")]
	public static extern int CSharp_GetPlayingIDsFromGameObject(ulong jarg1, ref uint jarg2, [Out] uint[] jarg3);

	[PreserveSig]
	[Token(Token = "0x6001CBA")]
	[Address(RVA = "0x135CC90", Offset = "0x135CC90", VA = "0x135CC90")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001CBB")]
	[Address(RVA = "0x135CDA4", Offset = "0x135CDA4", VA = "0x135CDA4")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001CBC")]
	[Address(RVA = "0x135CEA0", Offset = "0x135CEA0", VA = "0x135CEA0")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CBD")]
	[Address(RVA = "0x135CF84", Offset = "0x135CF84", VA = "0x135CF84")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CBE")]
	[Address(RVA = "0x135D068", Offset = "0x135D068", VA = "0x135D068")]
	public static extern void CSharp_AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CBF")]
	[Address(RVA = "0x135D14C", Offset = "0x135D14C", VA = "0x135D14C")]
	public static extern byte CSharp_ChannelMaskToNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CC0")]
	[Address(RVA = "0x135D230", Offset = "0x135D230", VA = "0x135D230")]
	public static extern uint CSharp_ChannelMaskFromNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CC1")]
	[Address(RVA = "0x135D324", Offset = "0x135D324", VA = "0x135D324")]
	public static extern byte CSharp_ChannelBitToIndex(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CC2")]
	[Address(RVA = "0x135D418", Offset = "0x135D418", VA = "0x135D418")]
	public static extern bool CSharp_HasSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CC3")]
	[Address(RVA = "0x135D504", Offset = "0x135D504", VA = "0x135D504")]
	public static extern bool CSharp_HasStrictlyOnePairOfSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CC4")]
	[Address(RVA = "0x135D5F0", Offset = "0x135D5F0", VA = "0x135D5F0")]
	public static extern bool CSharp_HasSideAndRearChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CC5")]
	[Address(RVA = "0x135D6DC", Offset = "0x135D6DC", VA = "0x135D6DC")]
	public static extern bool CSharp_HasHeightChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CC6")]
	[Address(RVA = "0x135D7C8", Offset = "0x135D7C8", VA = "0x135D7C8")]
	public static extern uint CSharp_BackToSideChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CC7")]
	[Address(RVA = "0x135D8C4", Offset = "0x135D8C4", VA = "0x135D8C4")]
	public static extern uint CSharp_StdChannelIndexToDisplayIndex(int jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001CC8")]
	[Address(RVA = "0x1371D40", Offset = "0x1371D40", VA = "0x1371D40")]
	public static extern void CSharp_AkChannelConfig_uNumChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CC9")]
	[Address(RVA = "0x1371DD0", Offset = "0x1371DD0", VA = "0x1371DD0")]
	public static extern uint CSharp_AkChannelConfig_uNumChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CCA")]
	[Address(RVA = "0x1371E50", Offset = "0x1371E50", VA = "0x1371E50")]
	public static extern void CSharp_AkChannelConfig_eConfigType_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CCB")]
	[Address(RVA = "0x1371EE0", Offset = "0x1371EE0", VA = "0x1371EE0")]
	public static extern uint CSharp_AkChannelConfig_eConfigType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CCC")]
	[Address(RVA = "0x1371F60", Offset = "0x1371F60", VA = "0x1371F60")]
	public static extern void CSharp_AkChannelConfig_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CCD")]
	[Address(RVA = "0x1371FF0", Offset = "0x1371FF0", VA = "0x1371FF0")]
	public static extern uint CSharp_AkChannelConfig_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CCE")]
	[Address(RVA = "0x1372070", Offset = "0x1372070", VA = "0x1372070")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001CCF")]
	[Address(RVA = "0x13720E4", Offset = "0x13720E4", VA = "0x13720E4")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CD0")]
	[Address(RVA = "0x1372174", Offset = "0x1372174", VA = "0x1372174")]
	public static extern void CSharp_AkChannelConfig_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CD1")]
	[Address(RVA = "0x13721F4", Offset = "0x13721F4", VA = "0x13721F4")]
	public static extern void CSharp_AkChannelConfig_SetStandard(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CD2")]
	[Address(RVA = "0x1372284", Offset = "0x1372284", VA = "0x1372284")]
	public static extern void CSharp_AkChannelConfig_SetStandardOrAnonymous(IntPtr jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001CD3")]
	[Address(RVA = "0x137231C", Offset = "0x137231C", VA = "0x137231C")]
	public static extern void CSharp_AkChannelConfig_SetAnonymous(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CD4")]
	[Address(RVA = "0x13723AC", Offset = "0x13723AC", VA = "0x13723AC")]
	public static extern void CSharp_AkChannelConfig_SetAmbisonic(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CD5")]
	[Address(RVA = "0x137243C", Offset = "0x137243C", VA = "0x137243C")]
	public static extern bool CSharp_AkChannelConfig_IsValid(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CD6")]
	[Address(RVA = "0x13724C4", Offset = "0x13724C4", VA = "0x13724C4")]
	public static extern uint CSharp_AkChannelConfig_Serialize(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CD7")]
	[Address(RVA = "0x1372544", Offset = "0x1372544", VA = "0x1372544")]
	public static extern void CSharp_AkChannelConfig_Deserialize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CD8")]
	[Address(RVA = "0x13725D4", Offset = "0x13725D4", VA = "0x13725D4")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveLFE(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CD9")]
	[Address(RVA = "0x1372654", Offset = "0x1372654", VA = "0x1372654")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveCenter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CDA")]
	[Address(RVA = "0x13726D4", Offset = "0x13726D4", VA = "0x13726D4")]
	public static extern bool CSharp_AkChannelConfig_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CDB")]
	[Address(RVA = "0x137275C", Offset = "0x137275C", VA = "0x137275C")]
	public static extern void CSharp_delete_AkChannelConfig(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CDC")]
	[Address(RVA = "0x13727DC", Offset = "0x13727DC", VA = "0x13727DC")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001CDD")]
	[Address(RVA = "0x1372850", Offset = "0x1372850", VA = "0x1372850")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001CDE")]
	[Address(RVA = "0x13728E8", Offset = "0x13728E8", VA = "0x13728E8")]
	public static extern void CSharp_AkImageSourceParams_sourcePosition_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CDF")]
	[Address(RVA = "0x1372978", Offset = "0x1372978", VA = "0x1372978")]
	public static extern IntPtr CSharp_AkImageSourceParams_sourcePosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CE0")]
	[Address(RVA = "0x13729F8", Offset = "0x13729F8", VA = "0x13729F8")]
	public static extern void CSharp_AkImageSourceParams_fDistanceScalingFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CE1")]
	[Address(RVA = "0x1372A88", Offset = "0x1372A88", VA = "0x1372A88")]
	public static extern float CSharp_AkImageSourceParams_fDistanceScalingFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CE2")]
	[Address(RVA = "0x1372B08", Offset = "0x1372B08", VA = "0x1372B08")]
	public static extern void CSharp_AkImageSourceParams_fLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CE3")]
	[Address(RVA = "0x1372B98", Offset = "0x1372B98", VA = "0x1372B98")]
	public static extern float CSharp_AkImageSourceParams_fLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CE4")]
	[Address(RVA = "0x1372C18", Offset = "0x1372C18", VA = "0x1372C18")]
	public static extern void CSharp_AkImageSourceParams_fDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CE5")]
	[Address(RVA = "0x1372CA8", Offset = "0x1372CA8", VA = "0x1372CA8")]
	public static extern float CSharp_AkImageSourceParams_fDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CE6")]
	[Address(RVA = "0x1372D28", Offset = "0x1372D28", VA = "0x1372D28")]
	public static extern void CSharp_AkImageSourceParams_bDiffractedEmitterSide_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CE7")]
	[Address(RVA = "0x1372DB8", Offset = "0x1372DB8", VA = "0x1372DB8")]
	public static extern bool CSharp_AkImageSourceParams_bDiffractedEmitterSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CE8")]
	[Address(RVA = "0x1372E40", Offset = "0x1372E40", VA = "0x1372E40")]
	public static extern void CSharp_AkImageSourceParams_bDiffractedListenerSide_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CE9")]
	[Address(RVA = "0x1372ED0", Offset = "0x1372ED0", VA = "0x1372ED0")]
	public static extern bool CSharp_AkImageSourceParams_bDiffractedListenerSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CEA")]
	[Address(RVA = "0x1372F58", Offset = "0x1372F58", VA = "0x1372F58")]
	public static extern void CSharp_delete_AkImageSourceParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CEB")]
	[Address(RVA = "0x135D9B8", Offset = "0x135D9B8", VA = "0x135D9B8")]
	public static extern float CSharp_kDefaultMaxPathLength_get();

	[PreserveSig]
	[Token(Token = "0x6001CEC")]
	[Address(RVA = "0x135DA84", Offset = "0x135DA84", VA = "0x135DA84")]
	public static extern float CSharp_kMaxDiffraction_get();

	[PreserveSig]
	[Token(Token = "0x6001CED")]
	[Address(RVA = "0x135DB58", Offset = "0x135DB58", VA = "0x135DB58")]
	public static extern void CSharp_g_SpatialAudioPoolId_set(int jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CEE")]
	[Address(RVA = "0x135DC34", Offset = "0x135DC34", VA = "0x135DC34")]
	public static extern int CSharp_g_SpatialAudioPoolId_get();

	[PreserveSig]
	[Token(Token = "0x6001CEF")]
	[Address(RVA = "0x1372FD8", Offset = "0x1372FD8", VA = "0x1372FD8")]
	public static extern int CSharp__ArrayPoolSpatialAudio_Get();

	[PreserveSig]
	[Token(Token = "0x6001CF0")]
	[Address(RVA = "0x137304C", Offset = "0x137304C", VA = "0x137304C")]
	public static extern IntPtr CSharp_new__ArrayPoolSpatialAudio();

	[PreserveSig]
	[Token(Token = "0x6001CF1")]
	[Address(RVA = "0x13730C0", Offset = "0x13730C0", VA = "0x13730C0")]
	public static extern void CSharp_delete__ArrayPoolSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CF2")]
	[Address(RVA = "0x1373140", Offset = "0x1373140", VA = "0x1373140")]
	public static extern IntPtr CSharp_new_AkSpatialAudioInitSettings();

	[PreserveSig]
	[Token(Token = "0x6001CF3")]
	[Address(RVA = "0x13731B4", Offset = "0x13731B4", VA = "0x13731B4")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CF4")]
	[Address(RVA = "0x1373244", Offset = "0x1373244", VA = "0x1373244")]
	public static extern int CSharp_AkSpatialAudioInitSettings_uPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CF5")]
	[Address(RVA = "0x13732C4", Offset = "0x13732C4", VA = "0x13732C4")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CF6")]
	[Address(RVA = "0x1373354", Offset = "0x1373354", VA = "0x1373354")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CF7")]
	[Address(RVA = "0x13733D4", Offset = "0x13733D4", VA = "0x13733D4")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CF8")]
	[Address(RVA = "0x1373464", Offset = "0x1373464", VA = "0x1373464")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CF9")]
	[Address(RVA = "0x13734E4", Offset = "0x13734E4", VA = "0x13734E4")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CFA")]
	[Address(RVA = "0x1373574", Offset = "0x1373574", VA = "0x1373574")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CFB")]
	[Address(RVA = "0x13735F4", Offset = "0x13735F4", VA = "0x13735F4")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CFC")]
	[Address(RVA = "0x1373684", Offset = "0x1373684", VA = "0x1373684")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CFD")]
	[Address(RVA = "0x1373704", Offset = "0x1373704", VA = "0x1373704")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001CFE")]
	[Address(RVA = "0x1373794", Offset = "0x1373794", VA = "0x1373794")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001CFF")]
	[Address(RVA = "0x1373814", Offset = "0x1373814", VA = "0x1373814")]
	public static extern void CSharp_delete_AkSpatialAudioInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D00")]
	[Address(RVA = "0x1373894", Offset = "0x1373894", VA = "0x1373894")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001D01")]
	[Address(RVA = "0x1373908", Offset = "0x1373908", VA = "0x1373908")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001D02")]
	[Address(RVA = "0x13739A0", Offset = "0x13739A0", VA = "0x13739A0")]
	public static extern void CSharp_delete_AkImageSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D03")]
	[Address(RVA = "0x1373A20", Offset = "0x1373A20", VA = "0x1373A20")]
	public static extern void CSharp_AkImageSourceSettings_SetOneTexture(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D04")]
	[Address(RVA = "0x1373AB0", Offset = "0x1373AB0", VA = "0x1373AB0")]
	public static extern void CSharp_AkImageSourceSettings_SetName(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D05")]
	[Address(RVA = "0x1373B54", Offset = "0x1373B54", VA = "0x1373B54")]
	public static extern void CSharp_AkImageSourceSettings_params__set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D06")]
	[Address(RVA = "0x1373BE4", Offset = "0x1373BE4", VA = "0x1373BE4")]
	public static extern IntPtr CSharp_AkImageSourceSettings_params__get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D07")]
	[Address(RVA = "0x1373C64", Offset = "0x1373C64", VA = "0x1373C64")]
	public static extern IntPtr CSharp_new_AkEmitterSettings();

	[PreserveSig]
	[Token(Token = "0x6001D08")]
	[Address(RVA = "0x1373CD8", Offset = "0x1373CD8", VA = "0x1373CD8")]
	public static extern void CSharp_AkEmitterSettings_reflectAuxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D09")]
	[Address(RVA = "0x1373D68", Offset = "0x1373D68", VA = "0x1373D68")]
	public static extern uint CSharp_AkEmitterSettings_reflectAuxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D0A")]
	[Address(RVA = "0x1373DE8", Offset = "0x1373DE8", VA = "0x1373DE8")]
	public static extern void CSharp_AkEmitterSettings_reflectionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D0B")]
	[Address(RVA = "0x1373E78", Offset = "0x1373E78", VA = "0x1373E78")]
	public static extern float CSharp_AkEmitterSettings_reflectionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D0C")]
	[Address(RVA = "0x1373EF8", Offset = "0x1373EF8", VA = "0x1373EF8")]
	public static extern void CSharp_AkEmitterSettings_reflectionsAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D0D")]
	[Address(RVA = "0x1373F88", Offset = "0x1373F88", VA = "0x1373F88")]
	public static extern float CSharp_AkEmitterSettings_reflectionsAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D0E")]
	[Address(RVA = "0x1374008", Offset = "0x1374008", VA = "0x1374008")]
	public static extern void CSharp_AkEmitterSettings_reflectionsOrder_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D0F")]
	[Address(RVA = "0x1374098", Offset = "0x1374098", VA = "0x1374098")]
	public static extern uint CSharp_AkEmitterSettings_reflectionsOrder_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D10")]
	[Address(RVA = "0x1374118", Offset = "0x1374118", VA = "0x1374118")]
	public static extern void CSharp_AkEmitterSettings_reflectorFilterMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D11")]
	[Address(RVA = "0x13741A8", Offset = "0x13741A8", VA = "0x13741A8")]
	public static extern uint CSharp_AkEmitterSettings_reflectorFilterMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D12")]
	[Address(RVA = "0x1374228", Offset = "0x1374228", VA = "0x1374228")]
	public static extern void CSharp_AkEmitterSettings_roomReverbAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D13")]
	[Address(RVA = "0x13742B8", Offset = "0x13742B8", VA = "0x13742B8")]
	public static extern float CSharp_AkEmitterSettings_roomReverbAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D14")]
	[Address(RVA = "0x1374338", Offset = "0x1374338", VA = "0x1374338")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxEdges_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D15")]
	[Address(RVA = "0x13743C8", Offset = "0x13743C8", VA = "0x13743C8")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxEdges_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D16")]
	[Address(RVA = "0x1374448", Offset = "0x1374448", VA = "0x1374448")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D17")]
	[Address(RVA = "0x13744D8", Offset = "0x13744D8", VA = "0x13744D8")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D18")]
	[Address(RVA = "0x1374558", Offset = "0x1374558", VA = "0x1374558")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D19")]
	[Address(RVA = "0x13745E8", Offset = "0x13745E8", VA = "0x13745E8")]
	public static extern float CSharp_AkEmitterSettings_diffractionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D1A")]
	[Address(RVA = "0x1374668", Offset = "0x1374668", VA = "0x1374668")]
	public static extern void CSharp_AkEmitterSettings_useImageSources_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D1B")]
	[Address(RVA = "0x13746F8", Offset = "0x13746F8", VA = "0x13746F8")]
	public static extern byte CSharp_AkEmitterSettings_useImageSources_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D1C")]
	[Address(RVA = "0x1374778", Offset = "0x1374778", VA = "0x1374778")]
	public static extern void CSharp_delete_AkEmitterSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D1D")]
	[Address(RVA = "0x13747F8", Offset = "0x13747F8", VA = "0x13747F8")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001D1E")]
	[Address(RVA = "0x137486C", Offset = "0x137486C", VA = "0x137486C")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_1(float jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001D1F")]
	[Address(RVA = "0x137490C", Offset = "0x137490C", VA = "0x137490C")]
	public static extern void CSharp_AkVertex_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D20")]
	[Address(RVA = "0x137499C", Offset = "0x137499C", VA = "0x137499C")]
	public static extern float CSharp_AkVertex_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D21")]
	[Address(RVA = "0x1374A1C", Offset = "0x1374A1C", VA = "0x1374A1C")]
	public static extern void CSharp_AkVertex_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D22")]
	[Address(RVA = "0x1374AAC", Offset = "0x1374AAC", VA = "0x1374AAC")]
	public static extern float CSharp_AkVertex_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D23")]
	[Address(RVA = "0x1374B2C", Offset = "0x1374B2C", VA = "0x1374B2C")]
	public static extern void CSharp_AkVertex_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D24")]
	[Address(RVA = "0x1374BBC", Offset = "0x1374BBC", VA = "0x1374BBC")]
	public static extern float CSharp_AkVertex_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D25")]
	[Address(RVA = "0x1374C3C", Offset = "0x1374C3C", VA = "0x1374C3C")]
	public static extern void CSharp_AkVertex_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D26")]
	[Address(RVA = "0x1374CBC", Offset = "0x1374CBC", VA = "0x1374CBC")]
	public static extern int CSharp_AkVertex_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001D27")]
	[Address(RVA = "0x1374D30", Offset = "0x1374D30", VA = "0x1374D30")]
	public static extern void CSharp_AkVertex_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D28")]
	[Address(RVA = "0x1374DC0", Offset = "0x1374DC0", VA = "0x1374DC0")]
	public static extern void CSharp_delete_AkVertex(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D29")]
	[Address(RVA = "0x1374E40", Offset = "0x1374E40", VA = "0x1374E40")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6001D2A")]
	[Address(RVA = "0x1374EB4", Offset = "0x1374EB4", VA = "0x1374EB4")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_1(ushort jarg1, ushort jarg2, ushort jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x6001D2B")]
	[Address(RVA = "0x1374F5C", Offset = "0x1374F5C", VA = "0x1374F5C")]
	public static extern void CSharp_AkTriangle_point0_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D2C")]
	[Address(RVA = "0x1374FEC", Offset = "0x1374FEC", VA = "0x1374FEC")]
	public static extern ushort CSharp_AkTriangle_point0_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D2D")]
	[Address(RVA = "0x137506C", Offset = "0x137506C", VA = "0x137506C")]
	public static extern void CSharp_AkTriangle_point1_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D2E")]
	[Address(RVA = "0x13750FC", Offset = "0x13750FC", VA = "0x13750FC")]
	public static extern ushort CSharp_AkTriangle_point1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D2F")]
	[Address(RVA = "0x137517C", Offset = "0x137517C", VA = "0x137517C")]
	public static extern void CSharp_AkTriangle_point2_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D30")]
	[Address(RVA = "0x137520C", Offset = "0x137520C", VA = "0x137520C")]
	public static extern ushort CSharp_AkTriangle_point2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D31")]
	[Address(RVA = "0x137528C", Offset = "0x137528C", VA = "0x137528C")]
	public static extern void CSharp_AkTriangle_surface_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D32")]
	[Address(RVA = "0x137531C", Offset = "0x137531C", VA = "0x137531C")]
	public static extern ushort CSharp_AkTriangle_surface_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D33")]
	[Address(RVA = "0x137539C", Offset = "0x137539C", VA = "0x137539C")]
	public static extern void CSharp_AkTriangle_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D34")]
	[Address(RVA = "0x137541C", Offset = "0x137541C", VA = "0x137541C")]
	public static extern int CSharp_AkTriangle_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001D35")]
	[Address(RVA = "0x1375490", Offset = "0x1375490", VA = "0x1375490")]
	public static extern void CSharp_AkTriangle_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D36")]
	[Address(RVA = "0x1375520", Offset = "0x1375520", VA = "0x1375520")]
	public static extern void CSharp_delete_AkTriangle(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D37")]
	[Address(RVA = "0x13755A0", Offset = "0x13755A0", VA = "0x13755A0")]
	public static extern IntPtr CSharp_new_AkAcousticSurface();

	[PreserveSig]
	[Token(Token = "0x6001D38")]
	[Address(RVA = "0x1375614", Offset = "0x1375614", VA = "0x1375614")]
	public static extern void CSharp_AkAcousticSurface_textureID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D39")]
	[Address(RVA = "0x13756A4", Offset = "0x13756A4", VA = "0x13756A4")]
	public static extern uint CSharp_AkAcousticSurface_textureID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D3A")]
	[Address(RVA = "0x1375724", Offset = "0x1375724", VA = "0x1375724")]
	public static extern void CSharp_AkAcousticSurface_reflectorChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D3B")]
	[Address(RVA = "0x13757B4", Offset = "0x13757B4", VA = "0x13757B4")]
	public static extern uint CSharp_AkAcousticSurface_reflectorChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D3C")]
	[Address(RVA = "0x1375834", Offset = "0x1375834", VA = "0x1375834")]
	public static extern void CSharp_AkAcousticSurface_strName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D3D")]
	[Address(RVA = "0x13758D8", Offset = "0x13758D8", VA = "0x13758D8")]
	public static extern IntPtr CSharp_AkAcousticSurface_strName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D3E")]
	[Address(RVA = "0x1375958", Offset = "0x1375958", VA = "0x1375958")]
	public static extern void CSharp_AkAcousticSurface_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D3F")]
	[Address(RVA = "0x13759D8", Offset = "0x13759D8", VA = "0x13759D8")]
	public static extern void CSharp_AkAcousticSurface_DeleteName(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D40")]
	[Address(RVA = "0x1375A58", Offset = "0x1375A58", VA = "0x1375A58")]
	public static extern int CSharp_AkAcousticSurface_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001D41")]
	[Address(RVA = "0x1375ACC", Offset = "0x1375ACC", VA = "0x1375ACC")]
	public static extern void CSharp_AkAcousticSurface_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D42")]
	[Address(RVA = "0x1375B5C", Offset = "0x1375B5C", VA = "0x1375B5C")]
	public static extern void CSharp_delete_AkAcousticSurface(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D43")]
	[Address(RVA = "0x134224C", Offset = "0x134224C", VA = "0x134224C")]
	public static extern void CSharp_AkReflectionPathInfo_imageSource_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D44")]
	[Address(RVA = "0x1342388", Offset = "0x1342388", VA = "0x1342388")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_imageSource_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D45")]
	[Address(RVA = "0x1342480", Offset = "0x1342480", VA = "0x1342480")]
	public static extern void CSharp_AkReflectionPathInfo_numPathPoints_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D46")]
	[Address(RVA = "0x1342578", Offset = "0x1342578", VA = "0x1342578")]
	public static extern uint CSharp_AkReflectionPathInfo_numPathPoints_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D47")]
	[Address(RVA = "0x1342670", Offset = "0x1342670", VA = "0x1342670")]
	public static extern void CSharp_AkReflectionPathInfo_numReflections_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D48")]
	[Address(RVA = "0x1342768", Offset = "0x1342768", VA = "0x1342768")]
	public static extern uint CSharp_AkReflectionPathInfo_numReflections_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D49")]
	[Address(RVA = "0x1342874", Offset = "0x1342874", VA = "0x1342874")]
	public static extern void CSharp_AkReflectionPathInfo_occlusionPoint_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D4A")]
	[Address(RVA = "0x13429B0", Offset = "0x13429B0", VA = "0x13429B0")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_occlusionPoint_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D4B")]
	[Address(RVA = "0x1342AA8", Offset = "0x1342AA8", VA = "0x1342AA8")]
	public static extern void CSharp_AkReflectionPathInfo_level_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D4C")]
	[Address(RVA = "0x1342BA0", Offset = "0x1342BA0", VA = "0x1342BA0")]
	public static extern float CSharp_AkReflectionPathInfo_level_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D4D")]
	[Address(RVA = "0x1342C98", Offset = "0x1342C98", VA = "0x1342C98")]
	public static extern void CSharp_AkReflectionPathInfo_isOccluded_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D4E")]
	[Address(RVA = "0x1342D90", Offset = "0x1342D90", VA = "0x1342D90")]
	public static extern bool CSharp_AkReflectionPathInfo_isOccluded_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D4F")]
	[Address(RVA = "0x1342E74", Offset = "0x1342E74", VA = "0x1342E74")]
	public static extern int CSharp_AkReflectionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001D50")]
	[Address(RVA = "0x1342FA4", Offset = "0x1342FA4", VA = "0x1342FA4")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetPathPoint(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D51")]
	[Address(RVA = "0x13430E0", Offset = "0x13430E0", VA = "0x13430E0")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetAcousticSurface(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D52")]
	[Address(RVA = "0x13431E8", Offset = "0x13431E8", VA = "0x13431E8")]
	public static extern float CSharp_AkReflectionPathInfo_GetDiffraction(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D53")]
	[Address(RVA = "0x134331C", Offset = "0x134331C", VA = "0x134331C")]
	public static extern void CSharp_AkReflectionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D54")]
	[Address(RVA = "0x134342C", Offset = "0x134342C", VA = "0x134342C")]
	public static extern IntPtr CSharp_new_AkReflectionPathInfo();

	[PreserveSig]
	[Token(Token = "0x6001D55")]
	[Address(RVA = "0x1342140", Offset = "0x1342140", VA = "0x1342140")]
	public static extern void CSharp_delete_AkReflectionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D56")]
	[Address(RVA = "0x1375BDC", Offset = "0x1375BDC", VA = "0x1375BDC")]
	public static extern void CSharp_AkDiffractionPathInfo_virtualPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D57")]
	[Address(RVA = "0x1375C6C", Offset = "0x1375C6C", VA = "0x1375C6C")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_virtualPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D58")]
	[Address(RVA = "0x1375CEC", Offset = "0x1375CEC", VA = "0x1375CEC")]
	public static extern void CSharp_AkDiffractionPathInfo_nodeCount_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D59")]
	[Address(RVA = "0x1375D7C", Offset = "0x1375D7C", VA = "0x1375D7C")]
	public static extern uint CSharp_AkDiffractionPathInfo_nodeCount_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D5A")]
	[Address(RVA = "0x1375DFC", Offset = "0x1375DFC", VA = "0x1375DFC")]
	public static extern void CSharp_AkDiffractionPathInfo_diffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D5B")]
	[Address(RVA = "0x1375E8C", Offset = "0x1375E8C", VA = "0x1375E8C")]
	public static extern float CSharp_AkDiffractionPathInfo_diffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D5C")]
	[Address(RVA = "0x1375F0C", Offset = "0x1375F0C", VA = "0x1375F0C")]
	public static extern void CSharp_AkDiffractionPathInfo_totLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D5D")]
	[Address(RVA = "0x1375F9C", Offset = "0x1375F9C", VA = "0x1375F9C")]
	public static extern float CSharp_AkDiffractionPathInfo_totLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D5E")]
	[Address(RVA = "0x137601C", Offset = "0x137601C", VA = "0x137601C")]
	public static extern void CSharp_AkDiffractionPathInfo_obstructionValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D5F")]
	[Address(RVA = "0x13760AC", Offset = "0x13760AC", VA = "0x13760AC")]
	public static extern float CSharp_AkDiffractionPathInfo_obstructionValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D60")]
	[Address(RVA = "0x137612C", Offset = "0x137612C", VA = "0x137612C")]
	public static extern int CSharp_AkDiffractionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001D61")]
	[Address(RVA = "0x13761A0", Offset = "0x13761A0", VA = "0x13761A0")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_GetNodes(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D62")]
	[Address(RVA = "0x1376230", Offset = "0x1376230", VA = "0x1376230")]
	public static extern float CSharp_AkDiffractionPathInfo_GetAngles(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D63")]
	[Address(RVA = "0x13762C0", Offset = "0x13762C0", VA = "0x13762C0")]
	public static extern void CSharp_AkDiffractionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D64")]
	[Address(RVA = "0x1376350", Offset = "0x1376350", VA = "0x1376350")]
	public static extern IntPtr CSharp_new_AkDiffractionPathInfo();

	[PreserveSig]
	[Token(Token = "0x6001D65")]
	[Address(RVA = "0x13763C4", Offset = "0x13763C4", VA = "0x13763C4")]
	public static extern void CSharp_delete_AkDiffractionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D66")]
	[Address(RVA = "0x133F9C0", Offset = "0x133F9C0", VA = "0x133F9C0")]
	public static extern void CSharp_AkPropagationPathInfo_nodePoint_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D67")]
	[Address(RVA = "0x133FAFC", Offset = "0x133FAFC", VA = "0x133FAFC")]
	public static extern IntPtr CSharp_AkPropagationPathInfo_nodePoint_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D68")]
	[Address(RVA = "0x133FBF4", Offset = "0x133FBF4", VA = "0x133FBF4")]
	public static extern void CSharp_AkPropagationPathInfo_numNodes_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D69")]
	[Address(RVA = "0x133FCEC", Offset = "0x133FCEC", VA = "0x133FCEC")]
	public static extern uint CSharp_AkPropagationPathInfo_numNodes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D6A")]
	[Address(RVA = "0x133FDE4", Offset = "0x133FDE4", VA = "0x133FDE4")]
	public static extern void CSharp_AkPropagationPathInfo_length_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D6B")]
	[Address(RVA = "0x133FEDC", Offset = "0x133FEDC", VA = "0x133FEDC")]
	public static extern float CSharp_AkPropagationPathInfo_length_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D6C")]
	[Address(RVA = "0x133FFD4", Offset = "0x133FFD4", VA = "0x133FFD4")]
	public static extern void CSharp_AkPropagationPathInfo_gain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D6D")]
	[Address(RVA = "0x13400CC", Offset = "0x13400CC", VA = "0x13400CC")]
	public static extern float CSharp_AkPropagationPathInfo_gain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D6E")]
	[Address(RVA = "0x13401C4", Offset = "0x13401C4", VA = "0x13401C4")]
	public static extern void CSharp_AkPropagationPathInfo_dryDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D6F")]
	[Address(RVA = "0x13402BC", Offset = "0x13402BC", VA = "0x13402BC")]
	public static extern float CSharp_AkPropagationPathInfo_dryDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D70")]
	[Address(RVA = "0x13403B4", Offset = "0x13403B4", VA = "0x13403B4")]
	public static extern void CSharp_AkPropagationPathInfo_wetDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D71")]
	[Address(RVA = "0x13404AC", Offset = "0x13404AC", VA = "0x13404AC")]
	public static extern float CSharp_AkPropagationPathInfo_wetDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D72")]
	[Address(RVA = "0x1340588", Offset = "0x1340588", VA = "0x1340588")]
	public static extern int CSharp_AkPropagationPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6001D73")]
	[Address(RVA = "0x13406B8", Offset = "0x13406B8", VA = "0x13406B8")]
	public static extern IntPtr CSharp_AkPropagationPathInfo_GetNodePoint(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D74")]
	[Address(RVA = "0x13407EC", Offset = "0x13407EC", VA = "0x13407EC")]
	public static extern void CSharp_AkPropagationPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D75")]
	[Address(RVA = "0x13408FC", Offset = "0x13408FC", VA = "0x13408FC")]
	public static extern IntPtr CSharp_new_AkPropagationPathInfo();

	[PreserveSig]
	[Token(Token = "0x6001D76")]
	[Address(RVA = "0x133F8B4", Offset = "0x133F8B4", VA = "0x133F8B4")]
	public static extern void CSharp_delete_AkPropagationPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D77")]
	[Address(RVA = "0x1344B60", Offset = "0x1344B60", VA = "0x1344B60")]
	public static extern IntPtr CSharp_new_AkRoomParams();

	[PreserveSig]
	[Token(Token = "0x6001D78")]
	[Address(RVA = "0x1344C60", Offset = "0x1344C60", VA = "0x1344C60")]
	public static extern void CSharp_AkRoomParams_Up_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D79")]
	[Address(RVA = "0x1344CF0", Offset = "0x1344CF0", VA = "0x1344CF0")]
	public static extern IntPtr CSharp_AkRoomParams_Up_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D7A")]
	[Address(RVA = "0x1344DFC", Offset = "0x1344DFC", VA = "0x1344DFC")]
	public static extern void CSharp_AkRoomParams_Front_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D7B")]
	[Address(RVA = "0x1344E8C", Offset = "0x1344E8C", VA = "0x1344E8C")]
	public static extern IntPtr CSharp_AkRoomParams_Front_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D7C")]
	[Address(RVA = "0x1344F0C", Offset = "0x1344F0C", VA = "0x1344F0C")]
	public static extern void CSharp_AkRoomParams_ReverbAuxBus_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D7D")]
	[Address(RVA = "0x1345004", Offset = "0x1345004", VA = "0x1345004")]
	public static extern uint CSharp_AkRoomParams_ReverbAuxBus_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D7E")]
	[Address(RVA = "0x1345084", Offset = "0x1345084", VA = "0x1345084")]
	public static extern void CSharp_AkRoomParams_ReverbLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D7F")]
	[Address(RVA = "0x134517C", Offset = "0x134517C", VA = "0x134517C")]
	public static extern float CSharp_AkRoomParams_ReverbLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D80")]
	[Address(RVA = "0x13451FC", Offset = "0x13451FC", VA = "0x13451FC")]
	public static extern void CSharp_AkRoomParams_WallOcclusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D81")]
	[Address(RVA = "0x13452F4", Offset = "0x13452F4", VA = "0x13452F4")]
	public static extern float CSharp_AkRoomParams_WallOcclusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D82")]
	[Address(RVA = "0x1345374", Offset = "0x1345374", VA = "0x1345374")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D83")]
	[Address(RVA = "0x134546C", Offset = "0x134546C", VA = "0x134546C")]
	public static extern float CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D84")]
	[Address(RVA = "0x13454EC", Offset = "0x13454EC", VA = "0x13454EC")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_KeepRegistered_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D85")]
	[Address(RVA = "0x13455E4", Offset = "0x13455E4", VA = "0x13455E4")]
	public static extern bool CSharp_AkRoomParams_RoomGameObj_KeepRegistered_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D86")]
	[Address(RVA = "0x1344AE0", Offset = "0x1344AE0", VA = "0x1344AE0")]
	public static extern void CSharp_delete_AkRoomParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D87")]
	[Address(RVA = "0x135DD04", Offset = "0x135DD04", VA = "0x135DD04")]
	public static extern int CSharp_GetPoolID();

	[PreserveSig]
	[Token(Token = "0x6001D88")]
	[Address(RVA = "0x135DE38", Offset = "0x135DE38", VA = "0x135DE38")]
	public static extern int CSharp_RegisterEmitter(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D89")]
	[Address(RVA = "0x135DF64", Offset = "0x135DF64", VA = "0x135DF64")]
	public static extern int CSharp_UnregisterEmitter(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D8A")]
	[Address(RVA = "0x135E0A4", Offset = "0x135E0A4", VA = "0x135E0A4")]
	public static extern int CSharp_SetEmitterAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001D8B")]
	[Address(RVA = "0x135E21C", Offset = "0x135E21C", VA = "0x135E21C")]
	public static extern int CSharp_SetImageSource__SWIG_0(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4, ulong jarg5);

	[PreserveSig]
	[Token(Token = "0x6001D8C")]
	[Address(RVA = "0x135E36C", Offset = "0x135E36C", VA = "0x135E36C")]
	public static extern int CSharp_SetImageSource__SWIG_1(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6001D8D")]
	[Address(RVA = "0x135E4C8", Offset = "0x135E4C8", VA = "0x135E4C8")]
	public static extern int CSharp_RemoveImageSource__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6001D8E")]
	[Address(RVA = "0x135E5D4", Offset = "0x135E5D4", VA = "0x135E5D4")]
	public static extern int CSharp_RemoveImageSource__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D8F")]
	[Address(RVA = "0x135E6C8", Offset = "0x135E6C8", VA = "0x135E6C8")]
	public static extern int CSharp_RemoveGeometry(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D90")]
	[Address(RVA = "0x135E840", Offset = "0x135E840", VA = "0x135E840")]
	public static extern int CSharp_QueryReflectionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6001D91")]
	[Address(RVA = "0x135E8F0", Offset = "0x135E8F0", VA = "0x135E8F0")]
	public static extern int CSharp_RemoveRoom(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D92")]
	[Address(RVA = "0x135E9D4", Offset = "0x135E9D4", VA = "0x135E9D4")]
	public static extern int CSharp_RemovePortal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D93")]
	[Address(RVA = "0x135EB00", Offset = "0x135EB00", VA = "0x135EB00")]
	public static extern int CSharp_SetGameObjectInRoom(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D94")]
	[Address(RVA = "0x135EC44", Offset = "0x135EC44", VA = "0x135EC44")]
	public static extern int CSharp_SetEmitterObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001D95")]
	[Address(RVA = "0x135ECDC", Offset = "0x135ECDC", VA = "0x135ECDC")]
	public static extern int CSharp_SetPortalObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6001D96")]
	[Address(RVA = "0x1376444", Offset = "0x1376444", VA = "0x1376444")]
	public static extern void CSharp_AkPlatformInitSettings_threadLEngine_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D97")]
	[Address(RVA = "0x13764D4", Offset = "0x13764D4", VA = "0x13764D4")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadLEngine_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D98")]
	[Address(RVA = "0x1376554", Offset = "0x1376554", VA = "0x1376554")]
	public static extern void CSharp_AkPlatformInitSettings_threadOutputMgr_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D99")]
	[Address(RVA = "0x13765E4", Offset = "0x13765E4", VA = "0x13765E4")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadOutputMgr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D9A")]
	[Address(RVA = "0x1376664", Offset = "0x1376664", VA = "0x1376664")]
	public static extern void CSharp_AkPlatformInitSettings_threadBankManager_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D9B")]
	[Address(RVA = "0x13766F4", Offset = "0x13766F4", VA = "0x13766F4")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadBankManager_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D9C")]
	[Address(RVA = "0x1376774", Offset = "0x1376774", VA = "0x1376774")]
	public static extern void CSharp_AkPlatformInitSettings_threadMonitor_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D9D")]
	[Address(RVA = "0x1376804", Offset = "0x1376804", VA = "0x1376804")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadMonitor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001D9E")]
	[Address(RVA = "0x1376884", Offset = "0x1376884", VA = "0x1376884")]
	public static extern void CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001D9F")]
	[Address(RVA = "0x1376914", Offset = "0x1376914", VA = "0x1376914")]
	public static extern float CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DA0")]
	[Address(RVA = "0x1376994", Offset = "0x1376994", VA = "0x1376994")]
	public static extern void CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DA1")]
	[Address(RVA = "0x1376A24", Offset = "0x1376A24", VA = "0x1376A24")]
	public static extern uint CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DA2")]
	[Address(RVA = "0x1376AA4", Offset = "0x1376AA4", VA = "0x1376AA4")]
	public static extern void CSharp_AkPlatformInitSettings_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DA3")]
	[Address(RVA = "0x1376B34", Offset = "0x1376B34", VA = "0x1376B34")]
	public static extern uint CSharp_AkPlatformInitSettings_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DA4")]
	[Address(RVA = "0x1376BB4", Offset = "0x1376BB4", VA = "0x1376BB4")]
	public static extern void CSharp_AkPlatformInitSettings_uNumRefillsInVoice_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DA5")]
	[Address(RVA = "0x1376C44", Offset = "0x1376C44", VA = "0x1376C44")]
	public static extern ushort CSharp_AkPlatformInitSettings_uNumRefillsInVoice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DA6")]
	[Address(RVA = "0x1376CC4", Offset = "0x1376CC4", VA = "0x1376CC4")]
	public static extern void CSharp_AkPlatformInitSettings_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DA7")]
	[Address(RVA = "0x1376D54", Offset = "0x1376D54", VA = "0x1376D54")]
	public static extern uint CSharp_AkPlatformInitSettings_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DA8")]
	[Address(RVA = "0x1376DD4", Offset = "0x1376DD4", VA = "0x1376DD4")]
	public static extern void CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DA9")]
	[Address(RVA = "0x1376E64", Offset = "0x1376E64", VA = "0x1376E64")]
	public static extern bool CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DAA")]
	[Address(RVA = "0x1376EEC", Offset = "0x1376EEC", VA = "0x1376EEC")]
	public static extern IntPtr CSharp_new_AkPlatformInitSettings();

	[PreserveSig]
	[Token(Token = "0x6001DAB")]
	[Address(RVA = "0x1376F60", Offset = "0x1376F60", VA = "0x1376F60")]
	public static extern void CSharp_delete_AkPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DAC")]
	[Address(RVA = "0x135EE0C", Offset = "0x135EE0C", VA = "0x135EE0C")]
	public static extern int CSharp_GetFastPathSettings(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DAD")]
	[Address(RVA = "0x1376FE0", Offset = "0x1376FE0", VA = "0x1376FE0")]
	public static extern void CSharp_AkStreamMgrSettings_uMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DAE")]
	[Address(RVA = "0x1377070", Offset = "0x1377070", VA = "0x1377070")]
	public static extern uint CSharp_AkStreamMgrSettings_uMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DAF")]
	[Address(RVA = "0x13770F0", Offset = "0x13770F0", VA = "0x13770F0")]
	public static extern IntPtr CSharp_new_AkStreamMgrSettings();

	[PreserveSig]
	[Token(Token = "0x6001DB0")]
	[Address(RVA = "0x1377164", Offset = "0x1377164", VA = "0x1377164")]
	public static extern void CSharp_delete_AkStreamMgrSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DB1")]
	[Address(RVA = "0x13771E4", Offset = "0x13771E4", VA = "0x13771E4")]
	public static extern void CSharp_AkDeviceSettings_pIOMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DB2")]
	[Address(RVA = "0x1377274", Offset = "0x1377274", VA = "0x1377274")]
	public static extern IntPtr CSharp_AkDeviceSettings_pIOMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DB3")]
	[Address(RVA = "0x13772F4", Offset = "0x13772F4", VA = "0x13772F4")]
	public static extern void CSharp_AkDeviceSettings_uIOMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DB4")]
	[Address(RVA = "0x1377384", Offset = "0x1377384", VA = "0x1377384")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DB5")]
	[Address(RVA = "0x1377404", Offset = "0x1377404", VA = "0x1377404")]
	public static extern void CSharp_AkDeviceSettings_uIOMemoryAlignment_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DB6")]
	[Address(RVA = "0x1377494", Offset = "0x1377494", VA = "0x1377494")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemoryAlignment_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DB7")]
	[Address(RVA = "0x1377514", Offset = "0x1377514", VA = "0x1377514")]
	public static extern void CSharp_AkDeviceSettings_ePoolAttributes_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DB8")]
	[Address(RVA = "0x13775A4", Offset = "0x13775A4", VA = "0x13775A4")]
	public static extern int CSharp_AkDeviceSettings_ePoolAttributes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DB9")]
	[Address(RVA = "0x1377624", Offset = "0x1377624", VA = "0x1377624")]
	public static extern void CSharp_AkDeviceSettings_uGranularity_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DBA")]
	[Address(RVA = "0x13776B4", Offset = "0x13776B4", VA = "0x13776B4")]
	public static extern uint CSharp_AkDeviceSettings_uGranularity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DBB")]
	[Address(RVA = "0x1377734", Offset = "0x1377734", VA = "0x1377734")]
	public static extern void CSharp_AkDeviceSettings_uSchedulerTypeFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DBC")]
	[Address(RVA = "0x13777C4", Offset = "0x13777C4", VA = "0x13777C4")]
	public static extern uint CSharp_AkDeviceSettings_uSchedulerTypeFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DBD")]
	[Address(RVA = "0x1377844", Offset = "0x1377844", VA = "0x1377844")]
	public static extern void CSharp_AkDeviceSettings_threadProperties_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DBE")]
	[Address(RVA = "0x13778D4", Offset = "0x13778D4", VA = "0x13778D4")]
	public static extern IntPtr CSharp_AkDeviceSettings_threadProperties_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DBF")]
	[Address(RVA = "0x1377954", Offset = "0x1377954", VA = "0x1377954")]
	public static extern void CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DC0")]
	[Address(RVA = "0x13779E4", Offset = "0x13779E4", VA = "0x13779E4")]
	public static extern float CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DC1")]
	[Address(RVA = "0x1377A64", Offset = "0x1377A64", VA = "0x1377A64")]
	public static extern void CSharp_AkDeviceSettings_uMaxConcurrentIO_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DC2")]
	[Address(RVA = "0x1377AF4", Offset = "0x1377AF4", VA = "0x1377AF4")]
	public static extern uint CSharp_AkDeviceSettings_uMaxConcurrentIO_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DC3")]
	[Address(RVA = "0x1377B74", Offset = "0x1377B74", VA = "0x1377B74")]
	public static extern void CSharp_AkDeviceSettings_bUseStreamCache_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DC4")]
	[Address(RVA = "0x1377C04", Offset = "0x1377C04", VA = "0x1377C04")]
	public static extern bool CSharp_AkDeviceSettings_bUseStreamCache_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DC5")]
	[Address(RVA = "0x1377C8C", Offset = "0x1377C8C", VA = "0x1377C8C")]
	public static extern void CSharp_AkDeviceSettings_uMaxCachePinnedBytes_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DC6")]
	[Address(RVA = "0x1377D1C", Offset = "0x1377D1C", VA = "0x1377D1C")]
	public static extern uint CSharp_AkDeviceSettings_uMaxCachePinnedBytes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DC7")]
	[Address(RVA = "0x1377D9C", Offset = "0x1377D9C", VA = "0x1377D9C")]
	public static extern IntPtr CSharp_new_AkDeviceSettings();

	[PreserveSig]
	[Token(Token = "0x6001DC8")]
	[Address(RVA = "0x1377E10", Offset = "0x1377E10", VA = "0x1377E10")]
	public static extern void CSharp_delete_AkDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DC9")]
	[Address(RVA = "0x1377E90", Offset = "0x1377E90", VA = "0x1377E90")]
	public static extern void CSharp_AkThreadProperties_nPriority_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DCA")]
	[Address(RVA = "0x1377F20", Offset = "0x1377F20", VA = "0x1377F20")]
	public static extern int CSharp_AkThreadProperties_nPriority_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DCB")]
	[Address(RVA = "0x1377FA0", Offset = "0x1377FA0", VA = "0x1377FA0")]
	public static extern void CSharp_AkThreadProperties_uStackSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DCC")]
	[Address(RVA = "0x1378030", Offset = "0x1378030", VA = "0x1378030")]
	public static extern uint CSharp_AkThreadProperties_uStackSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DCD")]
	[Address(RVA = "0x13780B0", Offset = "0x13780B0", VA = "0x13780B0")]
	public static extern void CSharp_AkThreadProperties_uSchedPolicy_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DCE")]
	[Address(RVA = "0x1378140", Offset = "0x1378140", VA = "0x1378140")]
	public static extern int CSharp_AkThreadProperties_uSchedPolicy_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DCF")]
	[Address(RVA = "0x13781C0", Offset = "0x13781C0", VA = "0x13781C0")]
	public static extern void CSharp_AkThreadProperties_dwAffinityMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DD0")]
	[Address(RVA = "0x1378250", Offset = "0x1378250", VA = "0x1378250")]
	public static extern uint CSharp_AkThreadProperties_dwAffinityMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DD1")]
	[Address(RVA = "0x13782D0", Offset = "0x13782D0", VA = "0x13782D0")]
	public static extern IntPtr CSharp_new_AkThreadProperties();

	[PreserveSig]
	[Token(Token = "0x6001DD2")]
	[Address(RVA = "0x1378344", Offset = "0x1378344", VA = "0x1378344")]
	public static extern void CSharp_delete_AkThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DD3")]
	[Address(RVA = "0x135EF00", Offset = "0x135EF00", VA = "0x135EF00")]
	public static extern void CSharp_SetErrorLogger__SWIG_0(AkLogger.ErrorLoggerInteropDelegate jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DD4")]
	[Address(RVA = "0x135EFE0", Offset = "0x135EFE0", VA = "0x135EFE0")]
	public static extern void CSharp_SetErrorLogger__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6001DD5")]
	[Address(RVA = "0x135F0C4", Offset = "0x135F0C4", VA = "0x135F0C4")]
	public static extern void CSharp_SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate jarg1, AkAudioInputManager.AudioFormatInteropDelegate jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DD6")]
	[Address(RVA = "0x13783C4", Offset = "0x13783C4", VA = "0x13783C4")]
	public static extern void CSharp_AkPathParams_listenerPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DD7")]
	[Address(RVA = "0x1378454", Offset = "0x1378454", VA = "0x1378454")]
	public static extern IntPtr CSharp_AkPathParams_listenerPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DD8")]
	[Address(RVA = "0x13784D4", Offset = "0x13784D4", VA = "0x13784D4")]
	public static extern void CSharp_AkPathParams_emitterPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DD9")]
	[Address(RVA = "0x1378564", Offset = "0x1378564", VA = "0x1378564")]
	public static extern IntPtr CSharp_AkPathParams_emitterPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DDA")]
	[Address(RVA = "0x13785E4", Offset = "0x13785E4", VA = "0x13785E4")]
	public static extern void CSharp_AkPathParams_numValidPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DDB")]
	[Address(RVA = "0x1378674", Offset = "0x1378674", VA = "0x1378674")]
	public static extern uint CSharp_AkPathParams_numValidPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DDC")]
	[Address(RVA = "0x13786F4", Offset = "0x13786F4", VA = "0x13786F4")]
	public static extern IntPtr CSharp_new_AkPathParams();

	[PreserveSig]
	[Token(Token = "0x6001DDD")]
	[Address(RVA = "0x1378768", Offset = "0x1378768", VA = "0x1378768")]
	public static extern void CSharp_delete_AkPathParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DDE")]
	[Address(RVA = "0x13787E8", Offset = "0x13787E8", VA = "0x13787E8")]
	public static extern IntPtr CSharp_new_AkUnityPlatformSpecificSettings();

	[PreserveSig]
	[Token(Token = "0x6001DDF")]
	[Address(RVA = "0x137885C", Offset = "0x137885C", VA = "0x137885C")]
	public static extern void CSharp_delete_AkUnityPlatformSpecificSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DE0")]
	[Address(RVA = "0x13788DC", Offset = "0x13788DC", VA = "0x13788DC")]
	public static extern IntPtr CSharp_new_AkCommunicationSettings();

	[PreserveSig]
	[Token(Token = "0x6001DE1")]
	[Address(RVA = "0x1378950", Offset = "0x1378950", VA = "0x1378950")]
	public static extern void CSharp_AkCommunicationSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DE2")]
	[Address(RVA = "0x13789E0", Offset = "0x13789E0", VA = "0x13789E0")]
	public static extern uint CSharp_AkCommunicationSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DE3")]
	[Address(RVA = "0x1378A60", Offset = "0x1378A60", VA = "0x1378A60")]
	public static extern void CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DE4")]
	[Address(RVA = "0x1378AF0", Offset = "0x1378AF0", VA = "0x1378AF0")]
	public static extern ushort CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DE5")]
	[Address(RVA = "0x1378B70", Offset = "0x1378B70", VA = "0x1378B70")]
	public static extern void CSharp_AkCommunicationSettings_uCommandPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DE6")]
	[Address(RVA = "0x1378C00", Offset = "0x1378C00", VA = "0x1378C00")]
	public static extern ushort CSharp_AkCommunicationSettings_uCommandPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DE7")]
	[Address(RVA = "0x1378C80", Offset = "0x1378C80", VA = "0x1378C80")]
	public static extern void CSharp_AkCommunicationSettings_uNotificationPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DE8")]
	[Address(RVA = "0x1378D10", Offset = "0x1378D10", VA = "0x1378D10")]
	public static extern ushort CSharp_AkCommunicationSettings_uNotificationPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DE9")]
	[Address(RVA = "0x1378D90", Offset = "0x1378D90", VA = "0x1378D90")]
	public static extern void CSharp_AkCommunicationSettings_bInitSystemLib_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DEA")]
	[Address(RVA = "0x1378E20", Offset = "0x1378E20", VA = "0x1378E20")]
	public static extern bool CSharp_AkCommunicationSettings_bInitSystemLib_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DEB")]
	[Address(RVA = "0x1378EA8", Offset = "0x1378EA8", VA = "0x1378EA8")]
	public static extern void CSharp_AkCommunicationSettings_szAppNetworkName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DEC")]
	[Address(RVA = "0x1378F4C", Offset = "0x1378F4C", VA = "0x1378F4C")]
	public static extern IntPtr CSharp_AkCommunicationSettings_szAppNetworkName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DED")]
	[Address(RVA = "0x1378FCC", Offset = "0x1378FCC", VA = "0x1378FCC")]
	public static extern void CSharp_delete_AkCommunicationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DEE")]
	[Address(RVA = "0x137904C", Offset = "0x137904C", VA = "0x137904C")]
	public static extern IntPtr CSharp_new_AkInitializationSettings();

	[PreserveSig]
	[Token(Token = "0x6001DEF")]
	[Address(RVA = "0x13790C0", Offset = "0x13790C0", VA = "0x13790C0")]
	public static extern void CSharp_AkInitializationSettings_memSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DF0")]
	[Address(RVA = "0x1379150", Offset = "0x1379150", VA = "0x1379150")]
	public static extern IntPtr CSharp_AkInitializationSettings_memSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DF1")]
	[Address(RVA = "0x13791D0", Offset = "0x13791D0", VA = "0x13791D0")]
	public static extern void CSharp_AkInitializationSettings_streamMgrSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DF2")]
	[Address(RVA = "0x1379260", Offset = "0x1379260", VA = "0x1379260")]
	public static extern IntPtr CSharp_AkInitializationSettings_streamMgrSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DF3")]
	[Address(RVA = "0x13792E0", Offset = "0x13792E0", VA = "0x13792E0")]
	public static extern void CSharp_AkInitializationSettings_deviceSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DF4")]
	[Address(RVA = "0x1379370", Offset = "0x1379370", VA = "0x1379370")]
	public static extern IntPtr CSharp_AkInitializationSettings_deviceSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DF5")]
	[Address(RVA = "0x13793F0", Offset = "0x13793F0", VA = "0x13793F0")]
	public static extern void CSharp_AkInitializationSettings_initSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DF6")]
	[Address(RVA = "0x1379480", Offset = "0x1379480", VA = "0x1379480")]
	public static extern IntPtr CSharp_AkInitializationSettings_initSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DF7")]
	[Address(RVA = "0x1379500", Offset = "0x1379500", VA = "0x1379500")]
	public static extern void CSharp_AkInitializationSettings_platformSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DF8")]
	[Address(RVA = "0x1379590", Offset = "0x1379590", VA = "0x1379590")]
	public static extern IntPtr CSharp_AkInitializationSettings_platformSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DF9")]
	[Address(RVA = "0x1379610", Offset = "0x1379610", VA = "0x1379610")]
	public static extern void CSharp_AkInitializationSettings_musicSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DFA")]
	[Address(RVA = "0x13796A0", Offset = "0x13796A0", VA = "0x13796A0")]
	public static extern IntPtr CSharp_AkInitializationSettings_musicSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DFB")]
	[Address(RVA = "0x1379720", Offset = "0x1379720", VA = "0x1379720")]
	public static extern void CSharp_AkInitializationSettings_preparePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DFC")]
	[Address(RVA = "0x13797B0", Offset = "0x13797B0", VA = "0x13797B0")]
	public static extern uint CSharp_AkInitializationSettings_preparePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DFD")]
	[Address(RVA = "0x1379830", Offset = "0x1379830", VA = "0x1379830")]
	public static extern void CSharp_AkInitializationSettings_communicationSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001DFE")]
	[Address(RVA = "0x13798C0", Offset = "0x13798C0", VA = "0x13798C0")]
	public static extern IntPtr CSharp_AkInitializationSettings_communicationSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001DFF")]
	[Address(RVA = "0x1379940", Offset = "0x1379940", VA = "0x1379940")]
	public static extern void CSharp_AkInitializationSettings_unityPlatformSpecificSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E00")]
	[Address(RVA = "0x13799D0", Offset = "0x13799D0", VA = "0x13799D0")]
	public static extern IntPtr CSharp_AkInitializationSettings_unityPlatformSpecificSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E01")]
	[Address(RVA = "0x1379A50", Offset = "0x1379A50", VA = "0x1379A50")]
	public static extern void CSharp_delete_AkInitializationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E02")]
	[Address(RVA = "0x135F1E0", Offset = "0x135F1E0", VA = "0x135F1E0")]
	public static extern int CSharp_Init(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E03")]
	[Address(RVA = "0x135F2D8", Offset = "0x135F2D8", VA = "0x135F2D8")]
	public static extern int CSharp_InitSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E04")]
	[Address(RVA = "0x135F3D0", Offset = "0x135F3D0", VA = "0x135F3D0")]
	public static extern int CSharp_InitCommunication(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E05")]
	[Address(RVA = "0x135F4AC", Offset = "0x135F4AC", VA = "0x135F4AC")]
	public static extern void CSharp_Term();

	[PreserveSig]
	[Token(Token = "0x6001E06")]
	[Address(RVA = "0x135F5B0", Offset = "0x135F5B0", VA = "0x135F5B0")]
	public static extern int CSharp_RegisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E07")]
	[Address(RVA = "0x135F6C4", Offset = "0x135F6C4", VA = "0x135F6C4")]
	public static extern int CSharp_UnregisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E08")]
	[Address(RVA = "0x135F7E8", Offset = "0x135F7E8", VA = "0x135F7E8")]
	public static extern int CSharp_RegisterGameObjInternal_WithName(ulong jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E09")]
	[Address(RVA = "0x135F8F8", Offset = "0x135F8F8", VA = "0x135F8F8")]
	public static extern int CSharp_SetBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E0A")]
	[Address(RVA = "0x135F9F4", Offset = "0x135F9F4", VA = "0x135F9F4")]
	public static extern int CSharp_SetCurrentLanguage(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E0B")]
	[Address(RVA = "0x135FB08", Offset = "0x135FB08", VA = "0x135FB08")]
	public static extern int CSharp_LoadFilePackage(string jarg1, out uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6001E0C")]
	[Address(RVA = "0x135FC1C", Offset = "0x135FC1C", VA = "0x135FC1C")]
	public static extern int CSharp_AddBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E0D")]
	[Address(RVA = "0x135FD18", Offset = "0x135FD18", VA = "0x135FD18")]
	public static extern int CSharp_SetGameName(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E0E")]
	[Address(RVA = "0x135FE14", Offset = "0x135FE14", VA = "0x135FE14")]
	public static extern int CSharp_SetDecodedBankPath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E0F")]
	[Address(RVA = "0x135FF28", Offset = "0x135FF28", VA = "0x135FF28")]
	public static extern int CSharp_LoadAndDecodeBank(string jarg1, bool jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001E10")]
	[Address(RVA = "0x136007C", Offset = "0x136007C", VA = "0x136007C")]
	public static extern int CSharp_LoadAndDecodeBankFromMemory(IntPtr jarg1, uint jarg2, bool jarg3, string jarg4, bool jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6001E11")]
	[Address(RVA = "0x13601E4", Offset = "0x13601E4", VA = "0x13601E4")]
	public static extern IntPtr CSharp_GetCurrentLanguage();

	[PreserveSig]
	[Token(Token = "0x6001E12")]
	[Address(RVA = "0x1360320", Offset = "0x1360320", VA = "0x1360320")]
	public static extern int CSharp_UnloadFilePackage(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E13")]
	[Address(RVA = "0x13603FC", Offset = "0x13603FC", VA = "0x13603FC")]
	public static extern int CSharp_UnloadAllFilePackages();

	[PreserveSig]
	[Token(Token = "0x6001E14")]
	[Address(RVA = "0x1360574", Offset = "0x1360574", VA = "0x1360574")]
	public static extern int CSharp_SetObjectPosition(ulong jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x6001E15")]
	[Address(RVA = "0x1360700", Offset = "0x1360700", VA = "0x1360700")]
	public static extern int CSharp_GetSourceMultiplePlayPositions(uint jarg1, [Out] uint[] jarg2, [Out] uint[] jarg3, [Out] int[] jarg4, ref uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6001E16")]
	[Address(RVA = "0x13609C4", Offset = "0x13609C4", VA = "0x13609C4")]
	public static extern int CSharp_SetListeners(ulong jarg1, ulong[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6001E17")]
	[Address(RVA = "0x1360AD8", Offset = "0x1360AD8", VA = "0x1360AD8")]
	public static extern int CSharp_SetDefaultListeners(ulong[] jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6001E18")]
	[Address(RVA = "0x1360C10", Offset = "0x1360C10", VA = "0x1360C10")]
	public static extern int CSharp_AddOutput(IntPtr jarg1, out ulong jarg2, ulong[] jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001E19")]
	[Address(RVA = "0x1360D38", Offset = "0x1360D38", VA = "0x1360D38")]
	public static extern void CSharp_GetDefaultStreamSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E1A")]
	[Address(RVA = "0x1360E30", Offset = "0x1360E30", VA = "0x1360E30")]
	public static extern void CSharp_GetDefaultDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E1B")]
	[Address(RVA = "0x1360F28", Offset = "0x1360F28", VA = "0x1360F28")]
	public static extern void CSharp_GetDefaultMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E1C")]
	[Address(RVA = "0x1361020", Offset = "0x1361020", VA = "0x1361020")]
	public static extern void CSharp_GetDefaultInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E1D")]
	[Address(RVA = "0x1361118", Offset = "0x1361118", VA = "0x1361118")]
	public static extern void CSharp_GetDefaultPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E1E")]
	[Address(RVA = "0x13611F4", Offset = "0x13611F4", VA = "0x13611F4")]
	public static extern uint CSharp_GetMajorMinorVersion();

	[PreserveSig]
	[Token(Token = "0x6001E1F")]
	[Address(RVA = "0x13612C4", Offset = "0x13612C4", VA = "0x13612C4")]
	public static extern uint CSharp_GetSubminorBuildVersion();

	[PreserveSig]
	[Token(Token = "0x6001E20")]
	[Address(RVA = "0x1361418", Offset = "0x1361418", VA = "0x1361418")]
	public static extern int CSharp_QueryIndirectPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001E21")]
	[Address(RVA = "0x13615A0", Offset = "0x13615A0", VA = "0x13615A0")]
	public static extern int CSharp_QuerySoundPropagationPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001E22")]
	[Address(RVA = "0x1361728", Offset = "0x1361728", VA = "0x1361728")]
	public static extern int CSharp_QueryDiffractionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6001E23")]
	[Address(RVA = "0x13617CC", Offset = "0x13617CC", VA = "0x13617CC")]
	public static extern int CSharp_SetRoomPortal(ulong jarg1, IntPtr jarg2, IntPtr jarg3, bool jarg4, ulong jarg5, ulong jarg6);

	[PreserveSig]
	[Token(Token = "0x6001E24")]
	[Address(RVA = "0x136188C", Offset = "0x136188C", VA = "0x136188C")]
	public static extern int CSharp_SetRoom(ulong jarg1, IntPtr jarg2, string jarg3);

	[PreserveSig]
	[Token(Token = "0x6001E25")]
	[Address(RVA = "0x13619DC", Offset = "0x13619DC", VA = "0x13619DC")]
	public static extern int CSharp_RegisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E26")]
	[Address(RVA = "0x1361AF8", Offset = "0x1361AF8", VA = "0x1361AF8")]
	public static extern int CSharp_UnregisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E27")]
	[Address(RVA = "0x1361C5C", Offset = "0x1361C5C", VA = "0x1361C5C")]
	public static extern int CSharp_SetGeometry(ulong jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, uint jarg7, bool jarg8, bool jarg9);

	[PreserveSig]
	[Token(Token = "0x6001E28")]
	[Address(RVA = "0x1379AD0", Offset = "0x1379AD0", VA = "0x1379AD0")]
	public static extern IntPtr CSharp_AkPlaylist_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E29")]
	[Address(RVA = "0x1379B50", Offset = "0x1379B50", VA = "0x1379B50")]
	public static extern IntPtr CSharp_AkMIDIPost_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E2A")]
	[Address(RVA = "0x1379BD0", Offset = "0x1379BD0", VA = "0x1379BD0")]
	public static extern IntPtr CSharp_AkEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E2B")]
	[Address(RVA = "0x1379C50", Offset = "0x1379C50", VA = "0x1379C50")]
	public static extern IntPtr CSharp_AkMIDIEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E2C")]
	[Address(RVA = "0x1379CD0", Offset = "0x1379CD0", VA = "0x1379CD0")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E2D")]
	[Address(RVA = "0x1379D50", Offset = "0x1379D50", VA = "0x1379D50")]
	public static extern IntPtr CSharp_AkDurationCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E2E")]
	[Address(RVA = "0x1379DD0", Offset = "0x1379DD0", VA = "0x1379DD0")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E2F")]
	[Address(RVA = "0x1379E50", Offset = "0x1379E50", VA = "0x1379E50")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6001E30")]
	[Address(RVA = "0x1379ED0", Offset = "0x1379ED0", VA = "0x1379ED0")]
	public static extern IntPtr CSharp_AkMusicPlaylistCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[Token(Token = "0x6001E31")]
	[Address(RVA = "0x1379F50", Offset = "0x1379F50", VA = "0x1379F50")]
	public AkSoundEnginePINVOKE()
	{
	}
}
[Token(Token = "0x2000346")]
public class AkSoundEngine
{
	[Token(Token = "0x2000607")]
	public delegate ulong GameObjectHashFunction(GameObject gameObject);

	[Token(Token = "0x2000608")]
	private class AutoObject
	{
		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GameObject gameObject;

		[Token(Token = "0x6002D5F")]
		[Address(RVA = "0x1362B34", Offset = "0x1362B34", VA = "0x1362B34")]
		public AutoObject(GameObject go)
		{
		}

		[Token(Token = "0x6002D60")]
		[Address(RVA = "0x1362D74", Offset = "0x1362D74", VA = "0x1362D74", Slot = "1")]
		~AutoObject()
		{
		}
	}

	[Token(Token = "0x4001642")]
	public const int AK_SIMD_ALIGNMENT = 16;

	[Token(Token = "0x4001643")]
	public const int AK_BUFFER_ALIGNMENT = 16;

	[Token(Token = "0x4001644")]
	public const int AK_MAX_PATH = 260;

	[Token(Token = "0x4001645")]
	public const int AK_BANK_PLATFORM_DATA_ALIGNMENT = 16;

	[Token(Token = "0x4001646")]
	public const uint AK_INVALID_PLUGINID = uint.MaxValue;

	[Token(Token = "0x4001647")]
	public const ulong AK_INVALID_GAME_OBJECT = ulong.MaxValue;

	[Token(Token = "0x4001648")]
	public const uint AK_INVALID_UNIQUE_ID = 0u;

	[Token(Token = "0x4001649")]
	public const uint AK_INVALID_RTPC_ID = 0u;

	[Token(Token = "0x400164A")]
	public const uint AK_INVALID_LISTENER_INDEX = uint.MaxValue;

	[Token(Token = "0x400164B")]
	public const uint AK_INVALID_PLAYING_ID = 0u;

	[Token(Token = "0x400164C")]
	public const uint AK_DEFAULT_SWITCH_STATE = 0u;

	[Token(Token = "0x400164D")]
	public const int AK_INVALID_POOL_ID = -1;

	[Token(Token = "0x400164E")]
	public const int AK_DEFAULT_POOL_ID = -1;

	[Token(Token = "0x400164F")]
	public const uint AK_INVALID_AUX_ID = 0u;

	[Token(Token = "0x4001650")]
	public const uint AK_INVALID_FILE_ID = uint.MaxValue;

	[Token(Token = "0x4001651")]
	public const uint AK_INVALID_DEVICE_ID = uint.MaxValue;

	[Token(Token = "0x4001652")]
	public const uint AK_INVALID_BANK_ID = 0u;

	[Token(Token = "0x4001653")]
	public const uint AK_FALLBACK_ARGUMENTVALUE_ID = 0u;

	[Token(Token = "0x4001654")]
	public const uint AK_INVALID_CHANNELMASK = 0u;

	[Token(Token = "0x4001655")]
	public const uint AK_INVALID_OUTPUT_DEVICE_ID = 0u;

	[Token(Token = "0x4001656")]
	public const uint AK_MIXER_FX_SLOT = uint.MaxValue;

	[Token(Token = "0x4001657")]
	public const ulong AK_DEFAULT_LISTENER_OBJ = 0uL;

	[Token(Token = "0x4001658")]
	public const uint AK_DEFAULT_PRIORITY = 50u;

	[Token(Token = "0x4001659")]
	public const uint AK_MIN_PRIORITY = 0u;

	[Token(Token = "0x400165A")]
	public const uint AK_MAX_PRIORITY = 100u;

	[Token(Token = "0x400165B")]
	public const uint AK_DEFAULT_BANK_IO_PRIORITY = 50u;

	[Token(Token = "0x400165C")]
	public const double AK_DEFAULT_BANK_THROUGHPUT = 1048.576;

	[Token(Token = "0x400165D")]
	public const uint AKCOMPANYID_AUDIOKINETIC = 0u;

	[Token(Token = "0x400165E")]
	public const uint AK_LISTENERS_MASK_ALL = uint.MaxValue;

	[Token(Token = "0x400165F")]
	public const int NULL = 0;

	[Token(Token = "0x4001660")]
	public const int AKCURVEINTERPOLATION_NUM_STORAGE_BIT = 5;

	[Token(Token = "0x4001661")]
	public const int AK_MAX_LANGUAGE_NAME_SIZE = 32;

	[Token(Token = "0x4001662")]
	public const int AKCOMPANYID_AUDIOKINETIC_EXTERNAL = 1;

	[Token(Token = "0x4001663")]
	public const int AKCOMPANYID_MCDSP = 256;

	[Token(Token = "0x4001664")]
	public const int AKCOMPANYID_WAVEARTS = 257;

	[Token(Token = "0x4001665")]
	public const int AKCOMPANYID_PHONETICARTS = 258;

	[Token(Token = "0x4001666")]
	public const int AKCOMPANYID_IZOTOPE = 259;

	[Token(Token = "0x4001667")]
	public const int AKCOMPANYID_CRANKCASEAUDIO = 261;

	[Token(Token = "0x4001668")]
	public const int AKCOMPANYID_IOSONO = 262;

	[Token(Token = "0x4001669")]
	public const int AKCOMPANYID_AUROTECHNOLOGIES = 263;

	[Token(Token = "0x400166A")]
	public const int AKCOMPANYID_DOLBY = 264;

	[Token(Token = "0x400166B")]
	public const int AKCOMPANYID_TWOBIGEARS = 265;

	[Token(Token = "0x400166C")]
	public const int AKCOMPANYID_OCULUS = 266;

	[Token(Token = "0x400166D")]
	public const int AKCOMPANYID_BLUERIPPLESOUND = 267;

	[Token(Token = "0x400166E")]
	public const int AKCOMPANYID_ENZIEN = 268;

	[Token(Token = "0x400166F")]
	public const int AKCOMPANYID_KROTOS = 269;

	[Token(Token = "0x4001670")]
	public const int AKCOMPANYID_NURULIZE = 270;

	[Token(Token = "0x4001671")]
	public const int AKCOMPANYID_SUPERPOWERED = 271;

	[Token(Token = "0x4001672")]
	public const int AKCOMPANYID_GOOGLE = 272;

	[Token(Token = "0x4001673")]
	public const int AKCOMPANYID_VISISONICS = 277;

	[Token(Token = "0x4001674")]
	public const int AKCODECID_BANK = 0;

	[Token(Token = "0x4001675")]
	public const int AKCODECID_PCM = 1;

	[Token(Token = "0x4001676")]
	public const int AKCODECID_ADPCM = 2;

	[Token(Token = "0x4001677")]
	public const int AKCODECID_XMA = 3;

	[Token(Token = "0x4001678")]
	public const int AKCODECID_VORBIS = 4;

	[Token(Token = "0x4001679")]
	public const int AKCODECID_WIIADPCM = 5;

	[Token(Token = "0x400167A")]
	public const int AKCODECID_PCMEX = 7;

	[Token(Token = "0x400167B")]
	public const int AKCODECID_EXTERNAL_SOURCE = 8;

	[Token(Token = "0x400167C")]
	public const int AKCODECID_XWMA = 9;

	[Token(Token = "0x400167D")]
	public const int AKCODECID_AAC = 10;

	[Token(Token = "0x400167E")]
	public const int AKCODECID_FILE_PACKAGE = 11;

	[Token(Token = "0x400167F")]
	public const int AKCODECID_ATRAC9 = 12;

	[Token(Token = "0x4001680")]
	public const int AKCODECID_VAG = 13;

	[Token(Token = "0x4001681")]
	public const int AKCODECID_PROFILERCAPTURE = 14;

	[Token(Token = "0x4001682")]
	public const int AKCODECID_ANALYSISFILE = 15;

	[Token(Token = "0x4001683")]
	public const int AKCODECID_MIDI = 16;

	[Token(Token = "0x4001684")]
	public const int AKCODECID_OPUSNX = 17;

	[Token(Token = "0x4001685")]
	public const int AKCODECID_CAF = 18;

	[Token(Token = "0x4001686")]
	public const int AKCODECID_AKOPUS = 19;

	[Token(Token = "0x4001687")]
	public const int AKPLUGINID_METER = 129;

	[Token(Token = "0x4001688")]
	public const int AKPLUGINID_RECORDER = 132;

	[Token(Token = "0x4001689")]
	public const int AKEXTENSIONID_SPATIALAUDIO = 800;

	[Token(Token = "0x400168A")]
	public const int AKEXTENSIONID_INTERACTIVEMUSIC = 801;

	[Token(Token = "0x400168B")]
	public const int AK_WAVE_FORMAT_VAG = 65531;

	[Token(Token = "0x400168C")]
	public const int AK_WAVE_FORMAT_AT9 = 65532;

	[Token(Token = "0x400168D")]
	public const int AK_WAVE_FORMAT_VORBIS = 65535;

	[Token(Token = "0x400168E")]
	public const int AK_WAVE_FORMAT_AAC = 43712;

	[Token(Token = "0x400168F")]
	public const int AK_WAVE_FORMAT_OPUSNX = 12345;

	[Token(Token = "0x4001690")]
	public const int AK_WAVE_FORMAT_OPUS = 12352;

	[Token(Token = "0x4001691")]
	public const int WAVE_FORMAT_XMA2 = 358;

	[Token(Token = "0x4001692")]
	public const int AK_PANNER_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4001693")]
	public const int AK_POSSOURCE_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4001694")]
	public const int AK_SPAT_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4001695")]
	public const int AK_MAX_BITS_METERING_FLAGS = 5;

	[Token(Token = "0x4001696")]
	public const int AK_OS_STRUCT_ALIGN = 4;

	[Token(Token = "0x4001697")]
	public const int AK_64B_OS_STRUCT_ALIGN = 8;

	[Token(Token = "0x4001698")]
	public const bool AK_ASYNC_OPEN_DEFAULT = false;

	[Token(Token = "0x4001699")]
	public const int AK_COMM_DEFAULT_DISCOVERY_PORT = 24024;

	[Token(Token = "0x400169A")]
	public const int AK_MIDI_EVENT_TYPE_INVALID = 0;

	[Token(Token = "0x400169B")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_OFF = 128;

	[Token(Token = "0x400169C")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_ON = 144;

	[Token(Token = "0x400169D")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_AFTERTOUCH = 160;

	[Token(Token = "0x400169E")]
	public const int AK_MIDI_EVENT_TYPE_CONTROLLER = 176;

	[Token(Token = "0x400169F")]
	public const int AK_MIDI_EVENT_TYPE_PROGRAM_CHANGE = 192;

	[Token(Token = "0x40016A0")]
	public const int AK_MIDI_EVENT_TYPE_CHANNEL_AFTERTOUCH = 208;

	[Token(Token = "0x40016A1")]
	public const int AK_MIDI_EVENT_TYPE_PITCH_BEND = 224;

	[Token(Token = "0x40016A2")]
	public const int AK_MIDI_EVENT_TYPE_SYSEX = 240;

	[Token(Token = "0x40016A3")]
	public const int AK_MIDI_EVENT_TYPE_ESCAPE = 247;

	[Token(Token = "0x40016A4")]
	public const int AK_MIDI_EVENT_TYPE_META = 255;

	[Token(Token = "0x40016A5")]
	public const int AK_MIDI_CC_BANK_SELECT_COARSE = 0;

	[Token(Token = "0x40016A6")]
	public const int AK_MIDI_CC_MOD_WHEEL_COARSE = 1;

	[Token(Token = "0x40016A7")]
	public const int AK_MIDI_CC_BREATH_CTRL_COARSE = 2;

	[Token(Token = "0x40016A8")]
	public const int AK_MIDI_CC_CTRL_3_COARSE = 3;

	[Token(Token = "0x40016A9")]
	public const int AK_MIDI_CC_FOOT_PEDAL_COARSE = 4;

	[Token(Token = "0x40016AA")]
	public const int AK_MIDI_CC_PORTAMENTO_COARSE = 5;

	[Token(Token = "0x40016AB")]
	public const int AK_MIDI_CC_DATA_ENTRY_COARSE = 6;

	[Token(Token = "0x40016AC")]
	public const int AK_MIDI_CC_VOLUME_COARSE = 7;

	[Token(Token = "0x40016AD")]
	public const int AK_MIDI_CC_BALANCE_COARSE = 8;

	[Token(Token = "0x40016AE")]
	public const int AK_MIDI_CC_CTRL_9_COARSE = 9;

	[Token(Token = "0x40016AF")]
	public const int AK_MIDI_CC_PAN_POSITION_COARSE = 10;

	[Token(Token = "0x40016B0")]
	public const int AK_MIDI_CC_EXPRESSION_COARSE = 11;

	[Token(Token = "0x40016B1")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_COARSE = 12;

	[Token(Token = "0x40016B2")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_COARSE = 13;

	[Token(Token = "0x40016B3")]
	public const int AK_MIDI_CC_CTRL_14_COARSE = 14;

	[Token(Token = "0x40016B4")]
	public const int AK_MIDI_CC_CTRL_15_COARSE = 15;

	[Token(Token = "0x40016B5")]
	public const int AK_MIDI_CC_GEN_SLIDER_1 = 16;

	[Token(Token = "0x40016B6")]
	public const int AK_MIDI_CC_GEN_SLIDER_2 = 17;

	[Token(Token = "0x40016B7")]
	public const int AK_MIDI_CC_GEN_SLIDER_3 = 18;

	[Token(Token = "0x40016B8")]
	public const int AK_MIDI_CC_GEN_SLIDER_4 = 19;

	[Token(Token = "0x40016B9")]
	public const int AK_MIDI_CC_CTRL_20_COARSE = 20;

	[Token(Token = "0x40016BA")]
	public const int AK_MIDI_CC_CTRL_21_COARSE = 21;

	[Token(Token = "0x40016BB")]
	public const int AK_MIDI_CC_CTRL_22_COARSE = 22;

	[Token(Token = "0x40016BC")]
	public const int AK_MIDI_CC_CTRL_23_COARSE = 23;

	[Token(Token = "0x40016BD")]
	public const int AK_MIDI_CC_CTRL_24_COARSE = 24;

	[Token(Token = "0x40016BE")]
	public const int AK_MIDI_CC_CTRL_25_COARSE = 25;

	[Token(Token = "0x40016BF")]
	public const int AK_MIDI_CC_CTRL_26_COARSE = 26;

	[Token(Token = "0x40016C0")]
	public const int AK_MIDI_CC_CTRL_27_COARSE = 27;

	[Token(Token = "0x40016C1")]
	public const int AK_MIDI_CC_CTRL_28_COARSE = 28;

	[Token(Token = "0x40016C2")]
	public const int AK_MIDI_CC_CTRL_29_COARSE = 29;

	[Token(Token = "0x40016C3")]
	public const int AK_MIDI_CC_CTRL_30_COARSE = 30;

	[Token(Token = "0x40016C4")]
	public const int AK_MIDI_CC_CTRL_31_COARSE = 31;

	[Token(Token = "0x40016C5")]
	public const int AK_MIDI_CC_BANK_SELECT_FINE = 32;

	[Token(Token = "0x40016C6")]
	public const int AK_MIDI_CC_MOD_WHEEL_FINE = 33;

	[Token(Token = "0x40016C7")]
	public const int AK_MIDI_CC_BREATH_CTRL_FINE = 34;

	[Token(Token = "0x40016C8")]
	public const int AK_MIDI_CC_CTRL_3_FINE = 35;

	[Token(Token = "0x40016C9")]
	public const int AK_MIDI_CC_FOOT_PEDAL_FINE = 36;

	[Token(Token = "0x40016CA")]
	public const int AK_MIDI_CC_PORTAMENTO_FINE = 37;

	[Token(Token = "0x40016CB")]
	public const int AK_MIDI_CC_DATA_ENTRY_FINE = 38;

	[Token(Token = "0x40016CC")]
	public const int AK_MIDI_CC_VOLUME_FINE = 39;

	[Token(Token = "0x40016CD")]
	public const int AK_MIDI_CC_BALANCE_FINE = 40;

	[Token(Token = "0x40016CE")]
	public const int AK_MIDI_CC_CTRL_9_FINE = 41;

	[Token(Token = "0x40016CF")]
	public const int AK_MIDI_CC_PAN_POSITION_FINE = 42;

	[Token(Token = "0x40016D0")]
	public const int AK_MIDI_CC_EXPRESSION_FINE = 43;

	[Token(Token = "0x40016D1")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_FINE = 44;

	[Token(Token = "0x40016D2")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_FINE = 45;

	[Token(Token = "0x40016D3")]
	public const int AK_MIDI_CC_CTRL_14_FINE = 46;

	[Token(Token = "0x40016D4")]
	public const int AK_MIDI_CC_CTRL_15_FINE = 47;

	[Token(Token = "0x40016D5")]
	public const int AK_MIDI_CC_CTRL_20_FINE = 52;

	[Token(Token = "0x40016D6")]
	public const int AK_MIDI_CC_CTRL_21_FINE = 53;

	[Token(Token = "0x40016D7")]
	public const int AK_MIDI_CC_CTRL_22_FINE = 54;

	[Token(Token = "0x40016D8")]
	public const int AK_MIDI_CC_CTRL_23_FINE = 55;

	[Token(Token = "0x40016D9")]
	public const int AK_MIDI_CC_CTRL_24_FINE = 56;

	[Token(Token = "0x40016DA")]
	public const int AK_MIDI_CC_CTRL_25_FINE = 57;

	[Token(Token = "0x40016DB")]
	public const int AK_MIDI_CC_CTRL_26_FINE = 58;

	[Token(Token = "0x40016DC")]
	public const int AK_MIDI_CC_CTRL_27_FINE = 59;

	[Token(Token = "0x40016DD")]
	public const int AK_MIDI_CC_CTRL_28_FINE = 60;

	[Token(Token = "0x40016DE")]
	public const int AK_MIDI_CC_CTRL_29_FINE = 61;

	[Token(Token = "0x40016DF")]
	public const int AK_MIDI_CC_CTRL_30_FINE = 62;

	[Token(Token = "0x40016E0")]
	public const int AK_MIDI_CC_CTRL_31_FINE = 63;

	[Token(Token = "0x40016E1")]
	public const int AK_MIDI_CC_HOLD_PEDAL = 64;

	[Token(Token = "0x40016E2")]
	public const int AK_MIDI_CC_PORTAMENTO_ON_OFF = 65;

	[Token(Token = "0x40016E3")]
	public const int AK_MIDI_CC_SUSTENUTO_PEDAL = 66;

	[Token(Token = "0x40016E4")]
	public const int AK_MIDI_CC_SOFT_PEDAL = 67;

	[Token(Token = "0x40016E5")]
	public const int AK_MIDI_CC_LEGATO_PEDAL = 68;

	[Token(Token = "0x40016E6")]
	public const int AK_MIDI_CC_HOLD_PEDAL_2 = 69;

	[Token(Token = "0x40016E7")]
	public const int AK_MIDI_CC_SOUND_VARIATION = 70;

	[Token(Token = "0x40016E8")]
	public const int AK_MIDI_CC_SOUND_TIMBRE = 71;

	[Token(Token = "0x40016E9")]
	public const int AK_MIDI_CC_SOUND_RELEASE_TIME = 72;

	[Token(Token = "0x40016EA")]
	public const int AK_MIDI_CC_SOUND_ATTACK_TIME = 73;

	[Token(Token = "0x40016EB")]
	public const int AK_MIDI_CC_SOUND_BRIGHTNESS = 74;

	[Token(Token = "0x40016EC")]
	public const int AK_MIDI_CC_SOUND_CTRL_6 = 75;

	[Token(Token = "0x40016ED")]
	public const int AK_MIDI_CC_SOUND_CTRL_7 = 76;

	[Token(Token = "0x40016EE")]
	public const int AK_MIDI_CC_SOUND_CTRL_8 = 77;

	[Token(Token = "0x40016EF")]
	public const int AK_MIDI_CC_SOUND_CTRL_9 = 78;

	[Token(Token = "0x40016F0")]
	public const int AK_MIDI_CC_SOUND_CTRL_10 = 79;

	[Token(Token = "0x40016F1")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_1 = 80;

	[Token(Token = "0x40016F2")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_2 = 81;

	[Token(Token = "0x40016F3")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_3 = 82;

	[Token(Token = "0x40016F4")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_4 = 83;

	[Token(Token = "0x40016F5")]
	public const int AK_MIDI_CC_REVERB_LEVEL = 91;

	[Token(Token = "0x40016F6")]
	public const int AK_MIDI_CC_TREMOLO_LEVEL = 92;

	[Token(Token = "0x40016F7")]
	public const int AK_MIDI_CC_CHORUS_LEVEL = 93;

	[Token(Token = "0x40016F8")]
	public const int AK_MIDI_CC_CELESTE_LEVEL = 94;

	[Token(Token = "0x40016F9")]
	public const int AK_MIDI_CC_PHASER_LEVEL = 95;

	[Token(Token = "0x40016FA")]
	public const int AK_MIDI_CC_DATA_BUTTON_P1 = 96;

	[Token(Token = "0x40016FB")]
	public const int AK_MIDI_CC_DATA_BUTTON_M1 = 97;

	[Token(Token = "0x40016FC")]
	public const int AK_MIDI_CC_NON_REGISTER_COARSE = 98;

	[Token(Token = "0x40016FD")]
	public const int AK_MIDI_CC_NON_REGISTER_FINE = 99;

	[Token(Token = "0x40016FE")]
	public const int AK_MIDI_CC_ALL_SOUND_OFF = 120;

	[Token(Token = "0x40016FF")]
	public const int AK_MIDI_CC_ALL_CONTROLLERS_OFF = 121;

	[Token(Token = "0x4001700")]
	public const int AK_MIDI_CC_LOCAL_KEYBOARD = 122;

	[Token(Token = "0x4001701")]
	public const int AK_MIDI_CC_ALL_NOTES_OFF = 123;

	[Token(Token = "0x4001702")]
	public const int AK_MIDI_CC_OMNI_MODE_OFF = 124;

	[Token(Token = "0x4001703")]
	public const int AK_MIDI_CC_OMNI_MODE_ON = 125;

	[Token(Token = "0x4001704")]
	public const int AK_MIDI_CC_OMNI_MONOPHONIC_ON = 126;

	[Token(Token = "0x4001705")]
	public const int AK_MIDI_CC_OMNI_POLYPHONIC_ON = 127;

	[Token(Token = "0x4001706")]
	public const int AK_SPEAKER_FRONT_LEFT = 1;

	[Token(Token = "0x4001707")]
	public const int AK_SPEAKER_FRONT_RIGHT = 2;

	[Token(Token = "0x4001708")]
	public const int AK_SPEAKER_FRONT_CENTER = 4;

	[Token(Token = "0x4001709")]
	public const int AK_SPEAKER_LOW_FREQUENCY = 8;

	[Token(Token = "0x400170A")]
	public const int AK_SPEAKER_BACK_LEFT = 16;

	[Token(Token = "0x400170B")]
	public const int AK_SPEAKER_BACK_RIGHT = 32;

	[Token(Token = "0x400170C")]
	public const int AK_SPEAKER_BACK_CENTER = 256;

	[Token(Token = "0x400170D")]
	public const int AK_SPEAKER_SIDE_LEFT = 512;

	[Token(Token = "0x400170E")]
	public const int AK_SPEAKER_SIDE_RIGHT = 1024;

	[Token(Token = "0x400170F")]
	public const int AK_SPEAKER_TOP = 2048;

	[Token(Token = "0x4001710")]
	public const int AK_SPEAKER_HEIGHT_FRONT_LEFT = 4096;

	[Token(Token = "0x4001711")]
	public const int AK_SPEAKER_HEIGHT_FRONT_CENTER = 8192;

	[Token(Token = "0x4001712")]
	public const int AK_SPEAKER_HEIGHT_FRONT_RIGHT = 16384;

	[Token(Token = "0x4001713")]
	public const int AK_SPEAKER_HEIGHT_BACK_LEFT = 32768;

	[Token(Token = "0x4001714")]
	public const int AK_SPEAKER_HEIGHT_BACK_CENTER = 65536;

	[Token(Token = "0x4001715")]
	public const int AK_SPEAKER_HEIGHT_BACK_RIGHT = 131072;

	[Token(Token = "0x4001716")]
	public const int AK_SPEAKER_SETUP_MONO = 4;

	[Token(Token = "0x4001717")]
	public const int AK_SPEAKER_SETUP_0POINT1 = 8;

	[Token(Token = "0x4001718")]
	public const int AK_SPEAKER_SETUP_1POINT1 = 12;

	[Token(Token = "0x4001719")]
	public const int AK_SPEAKER_SETUP_STEREO = 3;

	[Token(Token = "0x400171A")]
	public const int AK_SPEAKER_SETUP_2POINT1 = 11;

	[Token(Token = "0x400171B")]
	public const int AK_SPEAKER_SETUP_3STEREO = 7;

	[Token(Token = "0x400171C")]
	public const int AK_SPEAKER_SETUP_3POINT1 = 15;

	[Token(Token = "0x400171D")]
	public const int AK_SPEAKER_SETUP_4 = 1539;

	[Token(Token = "0x400171E")]
	public const int AK_SPEAKER_SETUP_4POINT1 = 1547;

	[Token(Token = "0x400171F")]
	public const int AK_SPEAKER_SETUP_5 = 1543;

	[Token(Token = "0x4001720")]
	public const int AK_SPEAKER_SETUP_5POINT1 = 1551;

	[Token(Token = "0x4001721")]
	public const int AK_SPEAKER_SETUP_6 = 1587;

	[Token(Token = "0x4001722")]
	public const int AK_SPEAKER_SETUP_6POINT1 = 1595;

	[Token(Token = "0x4001723")]
	public const int AK_SPEAKER_SETUP_7 = 1591;

	[Token(Token = "0x4001724")]
	public const int AK_SPEAKER_SETUP_7POINT1 = 1599;

	[Token(Token = "0x4001725")]
	public const int AK_SPEAKER_SETUP_SURROUND = 259;

	[Token(Token = "0x4001726")]
	public const int AK_SPEAKER_SETUP_DPL2 = 1539;

	[Token(Token = "0x4001727")]
	public const int AK_SPEAKER_SETUP_HEIGHT_4 = 184320;

	[Token(Token = "0x4001728")]
	public const int AK_SPEAKER_SETUP_HEIGHT_5 = 192512;

	[Token(Token = "0x4001729")]
	public const int AK_SPEAKER_SETUP_HEIGHT_ALL = 258048;

	[Token(Token = "0x400172A")]
	public const int AK_SPEAKER_SETUP_AURO_222 = 22019;

	[Token(Token = "0x400172B")]
	public const int AK_SPEAKER_SETUP_AURO_8 = 185859;

	[Token(Token = "0x400172C")]
	public const int AK_SPEAKER_SETUP_AURO_9 = 185863;

	[Token(Token = "0x400172D")]
	public const int AK_SPEAKER_SETUP_AURO_9POINT1 = 185871;

	[Token(Token = "0x400172E")]
	public const int AK_SPEAKER_SETUP_AURO_10 = 187911;

	[Token(Token = "0x400172F")]
	public const int AK_SPEAKER_SETUP_AURO_10POINT1 = 187919;

	[Token(Token = "0x4001730")]
	public const int AK_SPEAKER_SETUP_AURO_11 = 196103;

	[Token(Token = "0x4001731")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1 = 196111;

	[Token(Token = "0x4001732")]
	public const int AK_SPEAKER_SETUP_AURO_11_740 = 185911;

	[Token(Token = "0x4001733")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1_740 = 185919;

	[Token(Token = "0x4001734")]
	public const int AK_SPEAKER_SETUP_AURO_13_751 = 196151;

	[Token(Token = "0x4001735")]
	public const int AK_SPEAKER_SETUP_AURO_13POINT1_751 = 196159;

	[Token(Token = "0x4001736")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_0_2 = 22023;

	[Token(Token = "0x4001737")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_1_2 = 22031;

	[Token(Token = "0x4001738")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_2 = 22067;

	[Token(Token = "0x4001739")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_2 = 22075;

	[Token(Token = "0x400173A")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_4 = 185907;

	[Token(Token = "0x400173B")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_4 = 185915;

	[Token(Token = "0x400173C")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_2 = 22071;

	[Token(Token = "0x400173D")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_2 = 22079;

	[Token(Token = "0x400173E")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_4 = 185911;

	[Token(Token = "0x400173F")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_4 = 185919;

	[Token(Token = "0x4001740")]
	public const int AK_SPEAKER_SETUP_ALL_SPEAKERS = 261951;

	[Token(Token = "0x4001741")]
	public const int AK_IDX_SETUP_FRONT_LEFT = 0;

	[Token(Token = "0x4001742")]
	public const int AK_IDX_SETUP_FRONT_RIGHT = 1;

	[Token(Token = "0x4001743")]
	public const int AK_IDX_SETUP_CENTER = 2;

	[Token(Token = "0x4001744")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_LEFT = 2;

	[Token(Token = "0x4001745")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_RIGHT = 3;

	[Token(Token = "0x4001746")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_LEFT = 4;

	[Token(Token = "0x4001747")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_RIGHT = 5;

	[Token(Token = "0x4001748")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_LEFT = 3;

	[Token(Token = "0x4001749")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_RIGHT = 4;

	[Token(Token = "0x400174A")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_LEFT = 5;

	[Token(Token = "0x400174B")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_RIGHT = 6;

	[Token(Token = "0x400174C")]
	public const int AK_IDX_SETUP_0_LFE = 0;

	[Token(Token = "0x400174D")]
	public const int AK_IDX_SETUP_1_CENTER = 0;

	[Token(Token = "0x400174E")]
	public const int AK_IDX_SETUP_1_LFE = 1;

	[Token(Token = "0x400174F")]
	public const int AK_IDX_SETUP_2_LEFT = 0;

	[Token(Token = "0x4001750")]
	public const int AK_IDX_SETUP_2_RIGHT = 1;

	[Token(Token = "0x4001751")]
	public const int AK_IDX_SETUP_2_LFE = 2;

	[Token(Token = "0x4001752")]
	public const int AK_IDX_SETUP_3_LEFT = 0;

	[Token(Token = "0x4001753")]
	public const int AK_IDX_SETUP_3_RIGHT = 1;

	[Token(Token = "0x4001754")]
	public const int AK_IDX_SETUP_3_CENTER = 2;

	[Token(Token = "0x4001755")]
	public const int AK_IDX_SETUP_3_LFE = 3;

	[Token(Token = "0x4001756")]
	public const int AK_IDX_SETUP_4_FRONTLEFT = 0;

	[Token(Token = "0x4001757")]
	public const int AK_IDX_SETUP_4_FRONTRIGHT = 1;

	[Token(Token = "0x4001758")]
	public const int AK_IDX_SETUP_4_REARLEFT = 2;

	[Token(Token = "0x4001759")]
	public const int AK_IDX_SETUP_4_REARRIGHT = 3;

	[Token(Token = "0x400175A")]
	public const int AK_IDX_SETUP_4_LFE = 4;

	[Token(Token = "0x400175B")]
	public const int AK_IDX_SETUP_5_FRONTLEFT = 0;

	[Token(Token = "0x400175C")]
	public const int AK_IDX_SETUP_5_FRONTRIGHT = 1;

	[Token(Token = "0x400175D")]
	public const int AK_IDX_SETUP_5_CENTER = 2;

	[Token(Token = "0x400175E")]
	public const int AK_IDX_SETUP_5_REARLEFT = 3;

	[Token(Token = "0x400175F")]
	public const int AK_IDX_SETUP_5_REARRIGHT = 4;

	[Token(Token = "0x4001760")]
	public const int AK_IDX_SETUP_5_LFE = 5;

	[Token(Token = "0x4001761")]
	public const int AK_IDX_SETUP_6_FRONTLEFT = 0;

	[Token(Token = "0x4001762")]
	public const int AK_IDX_SETUP_6_FRONTRIGHT = 1;

	[Token(Token = "0x4001763")]
	public const int AK_IDX_SETUP_6_REARLEFT = 2;

	[Token(Token = "0x4001764")]
	public const int AK_IDX_SETUP_6_REARRIGHT = 3;

	[Token(Token = "0x4001765")]
	public const int AK_IDX_SETUP_6_SIDELEFT = 4;

	[Token(Token = "0x4001766")]
	public const int AK_IDX_SETUP_6_SIDERIGHT = 5;

	[Token(Token = "0x4001767")]
	public const int AK_IDX_SETUP_6_LFE = 6;

	[Token(Token = "0x4001768")]
	public const int AK_IDX_SETUP_7_FRONTLEFT = 0;

	[Token(Token = "0x4001769")]
	public const int AK_IDX_SETUP_7_FRONTRIGHT = 1;

	[Token(Token = "0x400176A")]
	public const int AK_IDX_SETUP_7_CENTER = 2;

	[Token(Token = "0x400176B")]
	public const int AK_IDX_SETUP_7_REARLEFT = 3;

	[Token(Token = "0x400176C")]
	public const int AK_IDX_SETUP_7_REARRIGHT = 4;

	[Token(Token = "0x400176D")]
	public const int AK_IDX_SETUP_7_SIDELEFT = 5;

	[Token(Token = "0x400176E")]
	public const int AK_IDX_SETUP_7_SIDERIGHT = 6;

	[Token(Token = "0x400176F")]
	public const int AK_IDX_SETUP_7_LFE = 7;

	[Token(Token = "0x4001770")]
	public const int AK_SPEAKER_SETUP_0_1 = 8;

	[Token(Token = "0x4001771")]
	public const int AK_SPEAKER_SETUP_1_0_CENTER = 4;

	[Token(Token = "0x4001772")]
	public const int AK_SPEAKER_SETUP_1_1_CENTER = 12;

	[Token(Token = "0x4001773")]
	public const int AK_SPEAKER_SETUP_2_0 = 3;

	[Token(Token = "0x4001774")]
	public const int AK_SPEAKER_SETUP_2_1 = 11;

	[Token(Token = "0x4001775")]
	public const int AK_SPEAKER_SETUP_3_0 = 7;

	[Token(Token = "0x4001776")]
	public const int AK_SPEAKER_SETUP_3_1 = 15;

	[Token(Token = "0x4001777")]
	public const int AK_SPEAKER_SETUP_FRONT = 7;

	[Token(Token = "0x4001778")]
	public const int AK_SPEAKER_SETUP_4_0 = 1539;

	[Token(Token = "0x4001779")]
	public const int AK_SPEAKER_SETUP_4_1 = 1547;

	[Token(Token = "0x400177A")]
	public const int AK_SPEAKER_SETUP_5_0 = 1543;

	[Token(Token = "0x400177B")]
	public const int AK_SPEAKER_SETUP_5_1 = 1551;

	[Token(Token = "0x400177C")]
	public const int AK_SPEAKER_SETUP_6_0 = 1587;

	[Token(Token = "0x400177D")]
	public const int AK_SPEAKER_SETUP_6_1 = 1595;

	[Token(Token = "0x400177E")]
	public const int AK_SPEAKER_SETUP_7_0 = 1591;

	[Token(Token = "0x400177F")]
	public const int AK_SPEAKER_SETUP_7_1 = 1599;

	[Token(Token = "0x4001780")]
	public const int AK_SPEAKER_SETUP_DEFAULT_PLANE = 1599;

	[Token(Token = "0x4001781")]
	public const int AK_SUPPORTED_STANDARD_CHANNEL_MASK = 261951;

	[Token(Token = "0x4001782")]
	public const int AK_STANDARD_MAX_NUM_CHANNELS = 8;

	[Token(Token = "0x4001783")]
	public const int AK_NUM_SAMPLED_SPHERE_POINTS = 32;

	[Token(Token = "0x4001784")]
	public const int AK_MAX_NUM_TEXTURE = 4;

	[Token(Token = "0x4001785")]
	public const int AK_MAX_REFLECT_ORDER = 4;

	[Token(Token = "0x4001786")]
	public const int AK_MAX_REFLECTION_PATH_LENGTH = 6;

	[Token(Token = "0x4001787")]
	public const int AK_MAX_SOUND_PROPAGATION_DEPTH = 8;

	[Token(Token = "0x4001788")]
	public const double AK_DEFAULT_DIFFR_SHADOW_DEGREES = 30.0;

	[Token(Token = "0x4001789")]
	public const double AK_DEFAULT_DIFFR_SHADOW_ATTEN = 2.0;

	[Token(Token = "0x400178A")]
	public const double AK_SA_EPSILON = 0.001;

	[Token(Token = "0x400178B")]
	public const double AK_SA_PLANE_THICKNESS_RATIO = 0.005;

	[Token(Token = "0x400178C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObjectHashFunction gameObjectHash;

	[Token(Token = "0x400178D")]
	public const string Deprecation_2018_1_2 = "This functionality is deprecated as of Wwise v2018.1.2 and will be removed in a future release.";

	[Token(Token = "0x400178E")]
	public const string Deprecation_2018_1_6 = "This functionality is deprecated as of Wwise v2018.1.6 and will be removed in a future release.";

	[Token(Token = "0x400178F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly HashSet<ulong> RegisteredGameObjects;

	[Token(Token = "0x17000216")]
	public static uint AK_SOUNDBANK_VERSION
	{
		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x13488CC", Offset = "0x13488CC", VA = "0x13488CC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000217")]
	public static ushort AK_INT
	{
		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x134899C", Offset = "0x134899C", VA = "0x134899C")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000218")]
	public static ushort AK_FLOAT
	{
		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x1348A6C", Offset = "0x1348A6C", VA = "0x1348A6C")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x17000219")]
	public static byte AK_INTERLEAVED
	{
		[Token(Token = "0x6001E35")]
		[Address(RVA = "0x1348B3C", Offset = "0x1348B3C", VA = "0x1348B3C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700021A")]
	public static byte AK_NONINTERLEAVED
	{
		[Token(Token = "0x6001E36")]
		[Address(RVA = "0x1348C0C", Offset = "0x1348C0C", VA = "0x1348C0C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700021B")]
	public static uint AK_LE_NATIVE_BITSPERSAMPLE
	{
		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x1348CDC", Offset = "0x1348CDC", VA = "0x1348CDC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700021C")]
	public static uint AK_LE_NATIVE_SAMPLETYPE
	{
		[Token(Token = "0x6001E38")]
		[Address(RVA = "0x1348DAC", Offset = "0x1348DAC", VA = "0x1348DAC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700021D")]
	public static uint AK_LE_NATIVE_INTERLEAVE
	{
		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x1348E7C", Offset = "0x1348E7C", VA = "0x1348E7C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700021E")]
	public static byte AK_INVALID_MIDI_CHANNEL
	{
		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x1359B1C", Offset = "0x1359B1C", VA = "0x1359B1C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700021F")]
	public static byte AK_INVALID_MIDI_NOTE
	{
		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x1359BEC", Offset = "0x1359BEC", VA = "0x1359BEC")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000220")]
	public static float kDefaultMaxPathLength
	{
		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x135D95C", Offset = "0x135D95C", VA = "0x135D95C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000221")]
	public static float kMaxDiffraction
	{
		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x135DA28", Offset = "0x135DA28", VA = "0x135DA28")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000222")]
	public static int g_SpatialAudioPoolId
	{
		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x135DBD8", Offset = "0x135DBD8", VA = "0x135DBD8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001F41")]
		[Address(RVA = "0x135DAF4", Offset = "0x135DAF4", VA = "0x135DAF4")]
		set
		{
		}
	}

	[Token(Token = "0x17000223")]
	public static GameObjectHashFunction GameObjectHash
	{
		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x1361EA4", Offset = "0x1361EA4", VA = "0x1361EA4")]
		set
		{
		}
	}

	[Token(Token = "0x6001E3A")]
	[Address(RVA = "0x1348F4C", Offset = "0x1348F4C", VA = "0x1348F4C")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, AkDynamicSequenceType in_eDynamicSequenceType)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E3B")]
	[Address(RVA = "0x13491D4", Offset = "0x13491D4", VA = "0x13491D4")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E3C")]
	[Address(RVA = "0x13493D8", Offset = "0x13493D8", VA = "0x13493D8")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E3D")]
	[Address(RVA = "0x1349550", Offset = "0x1349550", VA = "0x1349550")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E3E")]
	[Address(RVA = "0x13496A8", Offset = "0x13496A8", VA = "0x13496A8")]
	public static AKRESULT DynamicSequenceClose(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E3F")]
	[Address(RVA = "0x134978C", Offset = "0x134978C", VA = "0x134978C")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E40")]
	[Address(RVA = "0x13498A0", Offset = "0x13498A0", VA = "0x13498A0")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E41")]
	[Address(RVA = "0x13499A4", Offset = "0x13499A4", VA = "0x13499A4")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E42")]
	[Address(RVA = "0x1349A88", Offset = "0x1349A88", VA = "0x1349A88")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E43")]
	[Address(RVA = "0x1349B9C", Offset = "0x1349B9C", VA = "0x1349B9C")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E44")]
	[Address(RVA = "0x1349CA0", Offset = "0x1349CA0", VA = "0x1349CA0")]
	public static AKRESULT DynamicSequencePause(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E45")]
	[Address(RVA = "0x1349D84", Offset = "0x1349D84", VA = "0x1349D84")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E46")]
	[Address(RVA = "0x1349E98", Offset = "0x1349E98", VA = "0x1349E98")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E47")]
	[Address(RVA = "0x1349F9C", Offset = "0x1349F9C", VA = "0x1349F9C")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E48")]
	[Address(RVA = "0x134A080", Offset = "0x134A080", VA = "0x134A080")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E49")]
	[Address(RVA = "0x134A194", Offset = "0x134A194", VA = "0x134A194")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E4A")]
	[Address(RVA = "0x134A298", Offset = "0x134A298", VA = "0x134A298")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E4B")]
	[Address(RVA = "0x134A37C", Offset = "0x134A37C", VA = "0x134A37C")]
	public static AKRESULT DynamicSequenceBreak(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E4C")]
	[Address(RVA = "0x134A460", Offset = "0x134A460", VA = "0x134A460")]
	public static AKRESULT DynamicSequenceGetPauseTimes(uint in_playingID, out uint out_uTime, out uint out_uDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E4D")]
	[Address(RVA = "0x134A574", Offset = "0x134A574", VA = "0x134A574")]
	public static AkPlaylist DynamicSequenceLockPlaylist(uint in_playingID)
	{
		return null;
	}

	[Token(Token = "0x6001E4E")]
	[Address(RVA = "0x134A69C", Offset = "0x134A69C", VA = "0x134A69C")]
	public static AKRESULT DynamicSequenceUnlockPlaylist(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E4F")]
	[Address(RVA = "0x134A780", Offset = "0x134A780", VA = "0x134A780")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6001E50")]
	[Address(RVA = "0x134A858", Offset = "0x134A858", VA = "0x134A858")]
	public static AKRESULT GetAudioSettings(AkAudioSettings out_audioSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E51")]
	[Address(RVA = "0x134A950", Offset = "0x134A950", VA = "0x134A950")]
	public static AkChannelConfig GetSpeakerConfiguration(ulong in_idOutput)
	{
		return null;
	}

	[Token(Token = "0x6001E52")]
	[Address(RVA = "0x134AA68", Offset = "0x134AA68", VA = "0x134AA68")]
	public static AkChannelConfig GetSpeakerConfiguration()
	{
		return null;
	}

	[Token(Token = "0x6001E53")]
	[Address(RVA = "0x134AB6C", Offset = "0x134AB6C", VA = "0x134AB6C")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E54")]
	[Address(RVA = "0x134AC70", Offset = "0x134AC70", VA = "0x134AC70")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E55")]
	[Address(RVA = "0x134AD54", Offset = "0x134AD54", VA = "0x134AD54")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E56")]
	[Address(RVA = "0x134AE58", Offset = "0x134AE58", VA = "0x134AE58")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E57")]
	[Address(RVA = "0x134AF3C", Offset = "0x134AF3C", VA = "0x134AF3C")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E58")]
	[Address(RVA = "0x134B078", Offset = "0x134B078", VA = "0x134B078")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E59")]
	[Address(RVA = "0x134B194", Offset = "0x134B194", VA = "0x134B194")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E5A")]
	[Address(RVA = "0x134B2D0", Offset = "0x134B2D0", VA = "0x134B2D0")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E5B")]
	[Address(RVA = "0x134B3FC", Offset = "0x134B3FC", VA = "0x134B3FC")]
	public static AKRESULT SetVolumeThreshold(float in_fVolumeThresholdDB)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E5C")]
	[Address(RVA = "0x134B4F0", Offset = "0x134B4F0", VA = "0x134B4F0")]
	public static AKRESULT SetMaxNumVoicesLimit(ushort in_maxNumberVoices)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E5D")]
	[Address(RVA = "0x134B5D4", Offset = "0x134B5D4", VA = "0x134B5D4")]
	public static AKRESULT RenderAudio(bool in_bAllowSyncRender)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E5E")]
	[Address(RVA = "0x134B6B8", Offset = "0x134B6B8", VA = "0x134B6B8")]
	public static AKRESULT RenderAudio()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E5F")]
	[Address(RVA = "0x134B788", Offset = "0x134B788", VA = "0x134B788")]
	public static AKRESULT RegisterPluginDLL(string in_DllName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E60")]
	[Address(RVA = "0x134B884", Offset = "0x134B884", VA = "0x134B884")]
	public static uint GetIDFromString(string in_pszString)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E61")]
	[Address(RVA = "0x134B980", Offset = "0x134B980", VA = "0x134B980")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfo in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E62")]
	[Address(RVA = "0x134BBF8", Offset = "0x134BBF8", VA = "0x134BBF8")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfo in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E63")]
	[Address(RVA = "0x134BE50", Offset = "0x134BE50", VA = "0x134BE50")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E64")]
	[Address(RVA = "0x134C084", Offset = "0x134C084", VA = "0x134C084")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E65")]
	[Address(RVA = "0x134C298", Offset = "0x134C298", VA = "0x134C298")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E66")]
	[Address(RVA = "0x134C420", Offset = "0x134C420", VA = "0x134C420")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E67")]
	[Address(RVA = "0x134C598", Offset = "0x134C598", VA = "0x134C598")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfo in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E68")]
	[Address(RVA = "0x134C828", Offset = "0x134C828", VA = "0x134C828")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfo in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E69")]
	[Address(RVA = "0x134CA98", Offset = "0x134CA98", VA = "0x134CA98")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E6A")]
	[Address(RVA = "0x134CCE4", Offset = "0x134CCE4", VA = "0x134CCE4")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E6B")]
	[Address(RVA = "0x134CF10", Offset = "0x134CF10", VA = "0x134CF10")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E6C")]
	[Address(RVA = "0x134D0B0", Offset = "0x134D0B0", VA = "0x134D0B0")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6001E6D")]
	[Address(RVA = "0x134D240", Offset = "0x134D240", VA = "0x134D240")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E6E")]
	[Address(RVA = "0x134D3DC", Offset = "0x134D3DC", VA = "0x134D3DC")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E6F")]
	[Address(RVA = "0x134D558", Offset = "0x134D558", VA = "0x134D558")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E70")]
	[Address(RVA = "0x134D6C4", Offset = "0x134D6C4", VA = "0x134D6C4")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E71")]
	[Address(RVA = "0x134D810", Offset = "0x134D810", VA = "0x134D810")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E72")]
	[Address(RVA = "0x134D914", Offset = "0x134D914", VA = "0x134D914")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E73")]
	[Address(RVA = "0x134DAC8", Offset = "0x134DAC8", VA = "0x134DAC8")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E74")]
	[Address(RVA = "0x134DC5C", Offset = "0x134DC5C", VA = "0x134DC5C")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E75")]
	[Address(RVA = "0x134DDE0", Offset = "0x134DDE0", VA = "0x134DDE0")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E76")]
	[Address(RVA = "0x134DF44", Offset = "0x134DF44", VA = "0x134DF44")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E77")]
	[Address(RVA = "0x134E060", Offset = "0x134E060", VA = "0x134E060")]
	public static AKRESULT PostMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID, AkMIDIPostArray in_pPosts, ushort in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E78")]
	[Address(RVA = "0x134E1D8", Offset = "0x134E1D8", VA = "0x134E1D8")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E79")]
	[Address(RVA = "0x134E314", Offset = "0x134E314", VA = "0x134E314")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E7A")]
	[Address(RVA = "0x134E3F8", Offset = "0x134E3F8", VA = "0x134E3F8")]
	public static AKRESULT StopMIDIOnEvent()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E7B")]
	[Address(RVA = "0x134E4C8", Offset = "0x134E4C8", VA = "0x134E4C8")]
	public static AKRESULT PinEventInStreamCache(uint in_eventID, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E7C")]
	[Address(RVA = "0x134E5DC", Offset = "0x134E5DC", VA = "0x134E5DC")]
	public static AKRESULT PinEventInStreamCache(string in_pszEventName, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E7D")]
	[Address(RVA = "0x134E708", Offset = "0x134E708", VA = "0x134E708")]
	public static AKRESULT UnpinEventInStreamCache(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E7E")]
	[Address(RVA = "0x134E7EC", Offset = "0x134E7EC", VA = "0x134E7EC")]
	public static AKRESULT UnpinEventInStreamCache(string in_pszEventName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E7F")]
	[Address(RVA = "0x134E8E8", Offset = "0x134E8E8", VA = "0x134E8E8")]
	public static AKRESULT GetBufferStatusForPinnedEvent(uint in_eventID, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E80")]
	[Address(RVA = "0x134E9FC", Offset = "0x134E9FC", VA = "0x134E9FC")]
	public static AKRESULT GetBufferStatusForPinnedEvent(string in_pszEventName, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E81")]
	[Address(RVA = "0x134EB28", Offset = "0x134EB28", VA = "0x134EB28")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E82")]
	[Address(RVA = "0x134ECA4", Offset = "0x134ECA4", VA = "0x134ECA4")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E83")]
	[Address(RVA = "0x134EE10", Offset = "0x134EE10", VA = "0x134EE10")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E84")]
	[Address(RVA = "0x134EF5C", Offset = "0x134EF5C", VA = "0x134EF5C")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E85")]
	[Address(RVA = "0x134F0F0", Offset = "0x134F0F0", VA = "0x134F0F0")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E86")]
	[Address(RVA = "0x134F274", Offset = "0x134F274", VA = "0x134F274")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E87")]
	[Address(RVA = "0x134F3D8", Offset = "0x134F3D8", VA = "0x134F3D8")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E88")]
	[Address(RVA = "0x134F564", Offset = "0x134F564", VA = "0x134F564")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E89")]
	[Address(RVA = "0x134F6D0", Offset = "0x134F6D0", VA = "0x134F6D0")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E8A")]
	[Address(RVA = "0x134F82C", Offset = "0x134F82C", VA = "0x134F82C")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E8B")]
	[Address(RVA = "0x134F9D0", Offset = "0x134F9D0", VA = "0x134F9D0")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E8C")]
	[Address(RVA = "0x134FB54", Offset = "0x134FB54", VA = "0x134FB54")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E8D")]
	[Address(RVA = "0x134FCC8", Offset = "0x134FCC8", VA = "0x134FCC8")]
	public static void CancelEventCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x6001E8E")]
	[Address(RVA = "0x134FD30", Offset = "0x134FD30", VA = "0x134FD30")]
	public static void CancelEventCallbackGameObject(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x6001E8F")]
	[Address(RVA = "0x134FE4C", Offset = "0x134FE4C", VA = "0x134FE4C")]
	public static void CancelEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x6001E90")]
	[Address(RVA = "0x134FEB4", Offset = "0x134FEB4", VA = "0x134FEB4")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E91")]
	[Address(RVA = "0x134FFC8", Offset = "0x134FFC8", VA = "0x134FFC8")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E92")]
	[Address(RVA = "0x13500CC", Offset = "0x13500CC", VA = "0x13500CC")]
	public static AKRESULT GetSourceStreamBuffering(uint in_PlayingID, out int out_buffering, out int out_bIsBuffering)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E93")]
	[Address(RVA = "0x13501E0", Offset = "0x13501E0", VA = "0x13501E0")]
	public static void StopAll(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x6001E94")]
	[Address(RVA = "0x13502FC", Offset = "0x13502FC", VA = "0x13502FC")]
	public static void StopAll()
	{
	}

	[Token(Token = "0x6001E95")]
	[Address(RVA = "0x13503C8", Offset = "0x13503C8", VA = "0x13503C8")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
	}

	[Token(Token = "0x6001E96")]
	[Address(RVA = "0x13504DC", Offset = "0x13504DC", VA = "0x13504DC")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration)
	{
	}

	[Token(Token = "0x6001E97")]
	[Address(RVA = "0x13505E0", Offset = "0x13505E0", VA = "0x13505E0")]
	public static void StopPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x6001E98")]
	[Address(RVA = "0x13506C4", Offset = "0x13506C4", VA = "0x13506C4")]
	public static void SetRandomSeed(uint in_uSeed)
	{
	}

	[Token(Token = "0x6001E99")]
	[Address(RVA = "0x13507A8", Offset = "0x13507A8", VA = "0x13507A8")]
	public static void MuteBackgroundMusic(bool in_bMute)
	{
	}

	[Token(Token = "0x6001E9A")]
	[Address(RVA = "0x135088C", Offset = "0x135088C", VA = "0x135088C")]
	public static bool GetBackgroundMusicMute()
	{
		return default(bool);
	}

	[Token(Token = "0x6001E9B")]
	[Address(RVA = "0x1350964", Offset = "0x1350964", VA = "0x1350964")]
	public static AKRESULT SendPluginCustomGameData(uint in_busID, GameObject in_busObjectID, AkPluginType in_eType, uint in_uCompanyID, uint in_uPluginID, IntPtr in_pData, uint in_uSizeInBytes)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E9C")]
	[Address(RVA = "0x1350B10", Offset = "0x1350B10", VA = "0x1350B10")]
	public static AKRESULT UnregisterAllGameObj()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E9D")]
	[Address(RVA = "0x1350BE0", Offset = "0x1350BE0", VA = "0x1350BE0")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E9E")]
	[Address(RVA = "0x1350D4C", Offset = "0x1350D4C", VA = "0x1350D4C")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001E9F")]
	[Address(RVA = "0x1350E98", Offset = "0x1350E98", VA = "0x1350E98")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EA0")]
	[Address(RVA = "0x1351004", Offset = "0x1351004", VA = "0x1351004")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EA1")]
	[Address(RVA = "0x1351150", Offset = "0x1351150", VA = "0x1351150")]
	public static AKRESULT SetScalingFactor(GameObject in_GameObjectID, float in_fAttenuationScalingFactor)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EA2")]
	[Address(RVA = "0x1351284", Offset = "0x1351284", VA = "0x1351284")]
	public static AKRESULT ClearBanks()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EA3")]
	[Address(RVA = "0x1351354", Offset = "0x1351354", VA = "0x1351354")]
	public static AKRESULT SetBankLoadIOSettings(float in_fThroughput, sbyte in_priority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EA4")]
	[Address(RVA = "0x1351458", Offset = "0x1351458", VA = "0x1351458")]
	public static AKRESULT LoadBank(string in_pszString, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EA5")]
	[Address(RVA = "0x1351584", Offset = "0x1351584", VA = "0x1351584")]
	public static AKRESULT LoadBank(uint in_bankID, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EA6")]
	[Address(RVA = "0x1351688", Offset = "0x1351688", VA = "0x1351688")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EA7")]
	[Address(RVA = "0x135179C", Offset = "0x135179C", VA = "0x135179C")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EA8")]
	[Address(RVA = "0x13518D0", Offset = "0x13518D0", VA = "0x13518D0")]
	public static AKRESULT LoadBank(string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EA9")]
	[Address(RVA = "0x1351A78", Offset = "0x1351A78", VA = "0x1351A78")]
	public static AKRESULT LoadBank(uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EAA")]
	[Address(RVA = "0x1351BF8", Offset = "0x1351BF8", VA = "0x1351BF8")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EAB")]
	[Address(RVA = "0x1351D88", Offset = "0x1351D88", VA = "0x1351D88")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EAC")]
	[Address(RVA = "0x1351F38", Offset = "0x1351F38", VA = "0x1351F38")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EAD")]
	[Address(RVA = "0x1352064", Offset = "0x1352064", VA = "0x1352064")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EAE")]
	[Address(RVA = "0x1352180", Offset = "0x1352180", VA = "0x1352180")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EAF")]
	[Address(RVA = "0x1352294", Offset = "0x1352294", VA = "0x1352294")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EB0")]
	[Address(RVA = "0x1352398", Offset = "0x1352398", VA = "0x1352398")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EB1")]
	[Address(RVA = "0x1352530", Offset = "0x1352530", VA = "0x1352530")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EB2")]
	[Address(RVA = "0x13526B0", Offset = "0x13526B0", VA = "0x13526B0")]
	public static void CancelBankCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x6001EB3")]
	[Address(RVA = "0x1352718", Offset = "0x1352718", VA = "0x1352718")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EB4")]
	[Address(RVA = "0x1352848", Offset = "0x1352848", VA = "0x1352848")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EB5")]
	[Address(RVA = "0x1352968", Offset = "0x1352968", VA = "0x1352968")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EB6")]
	[Address(RVA = "0x1352A7C", Offset = "0x1352A7C", VA = "0x1352A7C")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EB7")]
	[Address(RVA = "0x1352B80", Offset = "0x1352B80", VA = "0x1352B80")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EB8")]
	[Address(RVA = "0x1352D2C", Offset = "0x1352D2C", VA = "0x1352D2C")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EB9")]
	[Address(RVA = "0x1352EC8", Offset = "0x1352EC8", VA = "0x1352EC8")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EBA")]
	[Address(RVA = "0x1353058", Offset = "0x1353058", VA = "0x1353058")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EBB")]
	[Address(RVA = "0x13531D8", Offset = "0x13531D8", VA = "0x13531D8")]
	public static AKRESULT ClearPreparedEvents()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EBC")]
	[Address(RVA = "0x13532A8", Offset = "0x13532A8", VA = "0x13532A8")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EBD")]
	[Address(RVA = "0x13535D8", Offset = "0x13535D8", VA = "0x13535D8")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EBE")]
	[Address(RVA = "0x13536F4", Offset = "0x13536F4", VA = "0x13536F4")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EBF")]
	[Address(RVA = "0x1353AA0", Offset = "0x1353AA0", VA = "0x1353AA0")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EC0")]
	[Address(RVA = "0x1353C38", Offset = "0x1353C38", VA = "0x1353C38")]
	public static AKRESULT SetMedia(AkSourceSettings in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EC1")]
	[Address(RVA = "0x1353D50", Offset = "0x1353D50", VA = "0x1353D50")]
	public static AKRESULT UnsetMedia(AkSourceSettings in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EC2")]
	[Address(RVA = "0x1353E68", Offset = "0x1353E68", VA = "0x1353E68")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EC3")]
	[Address(RVA = "0x13541DC", Offset = "0x13541DC", VA = "0x13541DC")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EC4")]
	[Address(RVA = "0x1354328", Offset = "0x1354328", VA = "0x1354328")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EC5")]
	[Address(RVA = "0x1354718", Offset = "0x1354718", VA = "0x1354718")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EC6")]
	[Address(RVA = "0x13548E0", Offset = "0x13548E0", VA = "0x13548E0")]
	public static AKRESULT AddListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EC7")]
	[Address(RVA = "0x1354A34", Offset = "0x1354A34", VA = "0x1354A34")]
	public static AKRESULT RemoveListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EC8")]
	[Address(RVA = "0x1354B88", Offset = "0x1354B88", VA = "0x1354B88")]
	public static AKRESULT AddDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EC9")]
	[Address(RVA = "0x1354CA4", Offset = "0x1354CA4", VA = "0x1354CA4")]
	public static AKRESULT RemoveDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ECA")]
	[Address(RVA = "0x1354DC0", Offset = "0x1354DC0", VA = "0x1354DC0")]
	public static AKRESULT ResetListenersToDefault(GameObject in_emitterGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ECB")]
	[Address(RVA = "0x1354EDC", Offset = "0x1354EDC", VA = "0x1354EDC")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig, float[] in_pVolumeOffsets)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ECC")]
	[Address(RVA = "0x1355064", Offset = "0x1355064", VA = "0x1355064")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ECD")]
	[Address(RVA = "0x13551C4", Offset = "0x13551C4", VA = "0x13551C4")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ECE")]
	[Address(RVA = "0x1355360", Offset = "0x1355360", VA = "0x1355360")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ECF")]
	[Address(RVA = "0x13554EC", Offset = "0x13554EC", VA = "0x13554EC")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ED0")]
	[Address(RVA = "0x1355658", Offset = "0x1355658", VA = "0x1355658")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ED1")]
	[Address(RVA = "0x13557B4", Offset = "0x13557B4", VA = "0x13557B4")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ED2")]
	[Address(RVA = "0x13558B8", Offset = "0x13558B8", VA = "0x13558B8")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ED3")]
	[Address(RVA = "0x1355A6C", Offset = "0x1355A6C", VA = "0x1355A6C")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ED4")]
	[Address(RVA = "0x1355C10", Offset = "0x1355C10", VA = "0x1355C10")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ED5")]
	[Address(RVA = "0x1355D94", Offset = "0x1355D94", VA = "0x1355D94")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ED6")]
	[Address(RVA = "0x1355F08", Offset = "0x1355F08", VA = "0x1355F08")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ED7")]
	[Address(RVA = "0x1356024", Offset = "0x1356024", VA = "0x1356024")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ED8")]
	[Address(RVA = "0x1356188", Offset = "0x1356188", VA = "0x1356188")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001ED9")]
	[Address(RVA = "0x13562DC", Offset = "0x13562DC", VA = "0x13562DC")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EDA")]
	[Address(RVA = "0x1356410", Offset = "0x1356410", VA = "0x1356410")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EDB")]
	[Address(RVA = "0x1356534", Offset = "0x1356534", VA = "0x1356534")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EDC")]
	[Address(RVA = "0x13566B0", Offset = "0x13566B0", VA = "0x13566B0")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EDD")]
	[Address(RVA = "0x135681C", Offset = "0x135681C", VA = "0x135681C")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EDE")]
	[Address(RVA = "0x1356968", Offset = "0x1356968", VA = "0x1356968")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EDF")]
	[Address(RVA = "0x1356AA4", Offset = "0x1356AA4", VA = "0x1356AA4")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EE0")]
	[Address(RVA = "0x1356C20", Offset = "0x1356C20", VA = "0x1356C20")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EE1")]
	[Address(RVA = "0x1356D8C", Offset = "0x1356D8C", VA = "0x1356D8C")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EE2")]
	[Address(RVA = "0x1356ED8", Offset = "0x1356ED8", VA = "0x1356ED8")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EE3")]
	[Address(RVA = "0x1357014", Offset = "0x1357014", VA = "0x1357014")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EE4")]
	[Address(RVA = "0x13570F8", Offset = "0x13570F8", VA = "0x13570F8")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EE5")]
	[Address(RVA = "0x135728C", Offset = "0x135728C", VA = "0x135728C")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EE6")]
	[Address(RVA = "0x1357410", Offset = "0x1357410", VA = "0x1357410")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EE7")]
	[Address(RVA = "0x1357574", Offset = "0x1357574", VA = "0x1357574")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EE8")]
	[Address(RVA = "0x13576C8", Offset = "0x13576C8", VA = "0x13576C8")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EE9")]
	[Address(RVA = "0x13577C4", Offset = "0x13577C4", VA = "0x13577C4")]
	public static AKRESULT SetSwitch(uint in_switchGroup, uint in_switchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EEA")]
	[Address(RVA = "0x1357910", Offset = "0x1357910", VA = "0x1357910")]
	public static AKRESULT SetSwitch(string in_pszSwitchGroup, string in_pszSwitchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EEB")]
	[Address(RVA = "0x1357A88", Offset = "0x1357A88", VA = "0x1357A88")]
	public static AKRESULT PostTrigger(uint in_triggerID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EEC")]
	[Address(RVA = "0x1357BC4", Offset = "0x1357BC4", VA = "0x1357BC4")]
	public static AKRESULT PostTrigger(string in_pszTrigger, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EED")]
	[Address(RVA = "0x1357D18", Offset = "0x1357D18", VA = "0x1357D18")]
	public static AKRESULT SetState(uint in_stateGroup, uint in_state)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EEE")]
	[Address(RVA = "0x1357E1C", Offset = "0x1357E1C", VA = "0x1357E1C")]
	public static AKRESULT SetState(string in_pszStateGroup, string in_pszState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EEF")]
	[Address(RVA = "0x1357F50", Offset = "0x1357F50", VA = "0x1357F50")]
	public static AKRESULT SetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_aAuxSendValues, uint in_uNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EF0")]
	[Address(RVA = "0x13580A8", Offset = "0x13580A8", VA = "0x13580A8")]
	public static AKRESULT SetGameObjectOutputBusVolume(GameObject in_emitterObjID, GameObject in_listenerObjID, float in_fControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EF1")]
	[Address(RVA = "0x135821C", Offset = "0x135821C", VA = "0x135821C")]
	public static AKRESULT SetActorMixerEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EF2")]
	[Address(RVA = "0x1358330", Offset = "0x1358330", VA = "0x1358330")]
	public static AKRESULT SetBusEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EF3")]
	[Address(RVA = "0x1358444", Offset = "0x1358444", VA = "0x1358444")]
	public static AKRESULT SetBusEffect(string in_pszBusName, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EF4")]
	[Address(RVA = "0x1358570", Offset = "0x1358570", VA = "0x1358570")]
	public static AKRESULT SetMixer(uint in_audioNodeID, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EF5")]
	[Address(RVA = "0x1358674", Offset = "0x1358674", VA = "0x1358674")]
	public static AKRESULT SetMixer(string in_pszBusName, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EF6")]
	[Address(RVA = "0x1358790", Offset = "0x1358790", VA = "0x1358790")]
	public static AKRESULT SetBusConfig(uint in_audioNodeID, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EF7")]
	[Address(RVA = "0x13588A8", Offset = "0x13588A8", VA = "0x13588A8")]
	public static AKRESULT SetBusConfig(string in_pszBusName, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EF8")]
	[Address(RVA = "0x13589D8", Offset = "0x13589D8", VA = "0x13589D8")]
	public static AKRESULT SetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, float in_fObstructionLevel, float in_fOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EF9")]
	[Address(RVA = "0x1358B5C", Offset = "0x1358B5C", VA = "0x1358B5C")]
	public static AKRESULT SetMultipleObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_uListenerID, AkObstructionOcclusionValues in_fObstructionOcclusionValues, uint in_uNumOcclusionObstruction)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EFA")]
	[Address(RVA = "0x1358CF4", Offset = "0x1358CF4", VA = "0x1358CF4")]
	public static AKRESULT StartOutputCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EFB")]
	[Address(RVA = "0x1358DF0", Offset = "0x1358DF0", VA = "0x1358DF0")]
	public static AKRESULT StopOutputCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EFC")]
	[Address(RVA = "0x1358EC0", Offset = "0x1358EC0", VA = "0x1358EC0")]
	public static AKRESULT AddOutputCaptureMarker(string in_MarkerText)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EFD")]
	[Address(RVA = "0x1358FBC", Offset = "0x1358FBC", VA = "0x1358FBC")]
	public static AKRESULT StartProfilerCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EFE")]
	[Address(RVA = "0x13590B8", Offset = "0x13590B8", VA = "0x13590B8")]
	public static AKRESULT StopProfilerCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001EFF")]
	[Address(RVA = "0x1359188", Offset = "0x1359188", VA = "0x1359188")]
	public static AKRESULT RemoveOutput(ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F00")]
	[Address(RVA = "0x135926C", Offset = "0x135926C", VA = "0x135926C")]
	public static ulong GetOutputID(uint in_idShareset, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001F01")]
	[Address(RVA = "0x1359370", Offset = "0x1359370", VA = "0x1359370")]
	public static ulong GetOutputID(string in_szShareSet, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001F02")]
	[Address(RVA = "0x135948C", Offset = "0x135948C", VA = "0x135948C")]
	public static AKRESULT SetBusDevice(uint in_idBus, uint in_idNewDevice)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F03")]
	[Address(RVA = "0x1359590", Offset = "0x1359590", VA = "0x1359590")]
	public static AKRESULT SetBusDevice(string in_BusName, string in_DeviceName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F04")]
	[Address(RVA = "0x13596C4", Offset = "0x13596C4", VA = "0x13596C4")]
	public static AKRESULT SetOutputVolume(ulong in_idOutput, float in_fVolume)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F05")]
	[Address(RVA = "0x13597C8", Offset = "0x13597C8", VA = "0x13597C8")]
	public static AKRESULT Suspend(bool in_bRenderAnyway)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F06")]
	[Address(RVA = "0x13598AC", Offset = "0x13598AC", VA = "0x13598AC")]
	public static AKRESULT Suspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F07")]
	[Address(RVA = "0x135997C", Offset = "0x135997C", VA = "0x135997C")]
	public static AKRESULT WakeupFromSuspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F08")]
	[Address(RVA = "0x1359A4C", Offset = "0x1359A4C", VA = "0x1359A4C")]
	public static uint GetBufferTick()
	{
		return default(uint);
	}

	[Token(Token = "0x6001F0B")]
	[Address(RVA = "0x1359CBC", Offset = "0x1359CBC", VA = "0x1359CBC")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F0C")]
	[Address(RVA = "0x1359DFC", Offset = "0x1359DFC", VA = "0x1359DFC")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F0D")]
	[Address(RVA = "0x1359F2C", Offset = "0x1359F2C", VA = "0x1359F2C")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F0E")]
	[Address(RVA = "0x135A0C8", Offset = "0x135A0C8", VA = "0x135A0C8")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F0F")]
	[Address(RVA = "0x135A244", Offset = "0x135A244", VA = "0x135A244")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F10")]
	[Address(RVA = "0x135A3B0", Offset = "0x135A3B0", VA = "0x135A3B0")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F11")]
	[Address(RVA = "0x135A4C4", Offset = "0x135A4C4", VA = "0x135A4C4")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F12")]
	[Address(RVA = "0x135A5C8", Offset = "0x135A5C8", VA = "0x135A5C8")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F13")]
	[Address(RVA = "0x135A77C", Offset = "0x135A77C", VA = "0x135A77C")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F14")]
	[Address(RVA = "0x135A910", Offset = "0x135A910", VA = "0x135A910")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F15")]
	[Address(RVA = "0x135AA94", Offset = "0x135AA94", VA = "0x135AA94")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F16")]
	[Address(RVA = "0x135ABC0", Offset = "0x135ABC0", VA = "0x135ABC0")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F17")]
	[Address(RVA = "0x135ACDC", Offset = "0x135ACDC", VA = "0x135ACDC")]
	public static int GetTimeStamp()
	{
		return default(int);
	}

	[Token(Token = "0x6001F18")]
	[Address(RVA = "0x135ADAC", Offset = "0x135ADAC", VA = "0x135ADAC")]
	public static uint GetNumNonZeroBits(uint in_uWord)
	{
		return default(uint);
	}

	[Token(Token = "0x6001F19")]
	[Address(RVA = "0x135AE90", Offset = "0x135AE90", VA = "0x135AE90")]
	public static void AkGetDefaultHighPriorityThreadProperties(AkThreadProperties out_threadProperties)
	{
	}

	[Token(Token = "0x6001F1A")]
	[Address(RVA = "0x135AF88", Offset = "0x135AF88", VA = "0x135AF88")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments, uint in_idSequence)
	{
		return default(uint);
	}

	[Token(Token = "0x6001F1B")]
	[Address(RVA = "0x135B0C4", Offset = "0x135B0C4", VA = "0x135B0C4")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments)
	{
		return default(uint);
	}

	[Token(Token = "0x6001F1C")]
	[Address(RVA = "0x135B1E0", Offset = "0x135B1E0", VA = "0x135B1E0")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F1D")]
	[Address(RVA = "0x135B2F4", Offset = "0x135B2F4", VA = "0x135B2F4")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F1E")]
	[Address(RVA = "0x135B408", Offset = "0x135B408", VA = "0x135B408")]
	public static AKRESULT GetPosition(GameObject in_GameObjectID, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F1F")]
	[Address(RVA = "0x135B54C", Offset = "0x135B54C", VA = "0x135B54C")]
	public static AKRESULT GetListenerPosition(GameObject in_uIndex, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F20")]
	[Address(RVA = "0x135B69C", Offset = "0x135B69C", VA = "0x135B69C")]
	public static AKRESULT GetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F21")]
	[Address(RVA = "0x135B818", Offset = "0x135B818", VA = "0x135B818")]
	public static AKRESULT GetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F22")]
	[Address(RVA = "0x135B9AC", Offset = "0x135B9AC", VA = "0x135B9AC")]
	public static AKRESULT GetSwitch(uint in_switchGroup, GameObject in_gameObjectID, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F23")]
	[Address(RVA = "0x135BAF8", Offset = "0x135BAF8", VA = "0x135BAF8")]
	public static AKRESULT GetSwitch(string in_pstrSwitchGroupName, GameObject in_GameObj, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F24")]
	[Address(RVA = "0x135BC50", Offset = "0x135BC50", VA = "0x135BC50")]
	public static AKRESULT GetState(uint in_stateGroup, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F25")]
	[Address(RVA = "0x135BD54", Offset = "0x135BD54", VA = "0x135BD54")]
	public static AKRESULT GetState(string in_pstrStateGroupName, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F26")]
	[Address(RVA = "0x135BE70", Offset = "0x135BE70", VA = "0x135BE70")]
	public static AKRESULT GetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray out_paAuxSendValues, ref uint io_ruNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F27")]
	[Address(RVA = "0x135BFC8", Offset = "0x135BFC8", VA = "0x135BFC8")]
	public static AKRESULT GetGameObjectDryLevelValue(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F28")]
	[Address(RVA = "0x135C12C", Offset = "0x135C12C", VA = "0x135C12C")]
	public static AKRESULT GetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfObstructionLevel, out float out_rfOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F29")]
	[Address(RVA = "0x135C2B0", Offset = "0x135C2B0", VA = "0x135C2B0")]
	public static AKRESULT QueryAudioObjectIDs(uint in_eventID, ref uint io_ruNumItems, AkObjectInfo out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F2A")]
	[Address(RVA = "0x135C3D8", Offset = "0x135C3D8", VA = "0x135C3D8")]
	public static AKRESULT QueryAudioObjectIDs(string in_pszEventName, ref uint io_ruNumItems, AkObjectInfo out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F2B")]
	[Address(RVA = "0x135C518", Offset = "0x135C518", VA = "0x135C518")]
	public static AKRESULT GetPositioningInfo(uint in_ObjectID, AkPositioningInfo out_rPositioningInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F2C")]
	[Address(RVA = "0x135C630", Offset = "0x135C630", VA = "0x135C630")]
	public static bool GetIsGameObjectActive(GameObject in_GameObjId)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F2D")]
	[Address(RVA = "0x135C754", Offset = "0x135C754", VA = "0x135C754")]
	public static float GetMaxRadius(GameObject in_GameObjId)
	{
		return default(float);
	}

	[Token(Token = "0x6001F2E")]
	[Address(RVA = "0x135C870", Offset = "0x135C870", VA = "0x135C870")]
	public static uint GetEventIDFromPlayingID(uint in_playingID)
	{
		return default(uint);
	}

	[Token(Token = "0x6001F2F")]
	[Address(RVA = "0x135C954", Offset = "0x135C954", VA = "0x135C954")]
	public static ulong GetGameObjectFromPlayingID(uint in_playingID)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001F30")]
	[Address(RVA = "0x135CA38", Offset = "0x135CA38", VA = "0x135CA38")]
	public static AKRESULT GetPlayingIDsFromGameObject(GameObject in_GameObjId, ref uint io_ruNumIDs, uint[] out_aPlayingIDs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F31")]
	[Address(RVA = "0x135CC14", Offset = "0x135CC14", VA = "0x135CC14")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F32")]
	[Address(RVA = "0x135CD28", Offset = "0x135CD28", VA = "0x135CD28")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F33")]
	[Address(RVA = "0x135CE3C", Offset = "0x135CE3C", VA = "0x135CE3C")]
	public static void AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x6001F34")]
	[Address(RVA = "0x135CF20", Offset = "0x135CF20", VA = "0x135CF20")]
	public static void AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x6001F35")]
	[Address(RVA = "0x135D004", Offset = "0x135D004", VA = "0x135D004")]
	public static void AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x6001F36")]
	[Address(RVA = "0x135D0E8", Offset = "0x135D0E8", VA = "0x135D0E8")]
	public static byte ChannelMaskToNumChannels(uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x6001F37")]
	[Address(RVA = "0x135D1CC", Offset = "0x135D1CC", VA = "0x135D1CC")]
	public static uint ChannelMaskFromNumChannels(uint in_uNumChannels)
	{
		return default(uint);
	}

	[Token(Token = "0x6001F38")]
	[Address(RVA = "0x135D2B0", Offset = "0x135D2B0", VA = "0x135D2B0")]
	public static byte ChannelBitToIndex(uint in_uChannelBit, uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x6001F39")]
	[Address(RVA = "0x135D3B4", Offset = "0x135D3B4", VA = "0x135D3B4")]
	public static bool HasSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F3A")]
	[Address(RVA = "0x135D4A0", Offset = "0x135D4A0", VA = "0x135D4A0")]
	public static bool HasStrictlyOnePairOfSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F3B")]
	[Address(RVA = "0x135D58C", Offset = "0x135D58C", VA = "0x135D58C")]
	public static bool HasSideAndRearChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F3C")]
	[Address(RVA = "0x135D678", Offset = "0x135D678", VA = "0x135D678")]
	public static bool HasHeightChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F3D")]
	[Address(RVA = "0x135D764", Offset = "0x135D764", VA = "0x135D764")]
	public static uint BackToSideChannels(uint in_uChannelMask)
	{
		return default(uint);
	}

	[Token(Token = "0x6001F3E")]
	[Address(RVA = "0x135D848", Offset = "0x135D848", VA = "0x135D848")]
	public static uint StdChannelIndexToDisplayIndex(AkChannelOrdering in_eOrdering, uint in_uChannelMask, uint in_uChannelIdx)
	{
		return default(uint);
	}

	[Token(Token = "0x6001F43")]
	[Address(RVA = "0x135DCA8", Offset = "0x135DCA8", VA = "0x135DCA8")]
	public static int GetPoolID()
	{
		return default(int);
	}

	[Token(Token = "0x6001F44")]
	[Address(RVA = "0x135DD78", Offset = "0x135DD78", VA = "0x135DD78")]
	public static AKRESULT RegisterEmitter(GameObject in_gameObjectID, AkEmitterSettings in_settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F45")]
	[Address(RVA = "0x135DEC8", Offset = "0x135DEC8", VA = "0x135DEC8")]
	public static AKRESULT UnregisterEmitter(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F46")]
	[Address(RVA = "0x135DFE4", Offset = "0x135DFE4", VA = "0x135DFE4")]
	public static AKRESULT SetEmitterAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_pAuxSends, uint in_uNumAux)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F47")]
	[Address(RVA = "0x135E13C", Offset = "0x135E13C", VA = "0x135E13C")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F48")]
	[Address(RVA = "0x135E2CC", Offset = "0x135E2CC", VA = "0x135E2CC")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F49")]
	[Address(RVA = "0x135E414", Offset = "0x135E414", VA = "0x135E414")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F4A")]
	[Address(RVA = "0x135E560", Offset = "0x135E560", VA = "0x135E560")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F4B")]
	[Address(RVA = "0x135E664", Offset = "0x135E664", VA = "0x135E664")]
	public static AKRESULT RemoveGeometry(ulong in_SetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F4C")]
	[Address(RVA = "0x135E748", Offset = "0x135E748", VA = "0x135E748")]
	public static AKRESULT QueryReflectionPaths(GameObject in_gameObjectID, AkVector out_listenerPos, AkVector out_emitterPos, AkReflectionPathInfoArray out_aPaths, out uint io_uArraySize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F4D")]
	[Address(RVA = "0x1344080", Offset = "0x1344080", VA = "0x1344080")]
	public static AKRESULT RemoveRoom(ulong in_RoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F4E")]
	[Address(RVA = "0x135E970", Offset = "0x135E970", VA = "0x135E970")]
	public static AKRESULT RemovePortal(ulong in_PortalID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F4F")]
	[Address(RVA = "0x135EA54", Offset = "0x135EA54", VA = "0x135EA54")]
	public static AKRESULT SetGameObjectInRoom(GameObject in_gameObjectID, ulong in_CurrentRoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F50")]
	[Address(RVA = "0x135EB90", Offset = "0x135EB90", VA = "0x135EB90")]
	public static AKRESULT SetEmitterObstructionAndOcclusion(GameObject in_gameObjectID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F51")]
	[Address(RVA = "0x1346B40", Offset = "0x1346B40", VA = "0x1346B40")]
	public static AKRESULT SetPortalObstructionAndOcclusion(ulong in_PortalID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F52")]
	[Address(RVA = "0x135ED74", Offset = "0x135ED74", VA = "0x135ED74")]
	public static AKRESULT GetFastPathSettings(AkInitSettings in_settings, AkPlatformInitSettings in_pfSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F53")]
	[Address(RVA = "0x135EE9C", Offset = "0x135EE9C", VA = "0x135EE9C")]
	public static void SetErrorLogger(AkLogger.ErrorLoggerInteropDelegate logger)
	{
	}

	[Token(Token = "0x6001F54")]
	[Address(RVA = "0x135EF84", Offset = "0x135EF84", VA = "0x135EF84")]
	public static void SetErrorLogger()
	{
	}

	[Token(Token = "0x6001F55")]
	[Address(RVA = "0x135F050", Offset = "0x135F050", VA = "0x135F050")]
	public static void SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate getAudioSamples, AkAudioInputManager.AudioFormatInteropDelegate getAudioFormat)
	{
	}

	[Token(Token = "0x6001F56")]
	[Address(RVA = "0x135F168", Offset = "0x135F168", VA = "0x135F168")]
	public static AKRESULT Init(AkInitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F57")]
	[Address(RVA = "0x135F260", Offset = "0x135F260", VA = "0x135F260")]
	public static AKRESULT InitSpatialAudio(AkSpatialAudioInitSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F58")]
	[Address(RVA = "0x135F358", Offset = "0x135F358", VA = "0x135F358")]
	public static AKRESULT InitCommunication(AkCommunicationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F59")]
	[Address(RVA = "0x135F450", Offset = "0x135F450", VA = "0x135F450")]
	public static void Term()
	{
	}

	[Token(Token = "0x6001F5A")]
	[Address(RVA = "0x135F51C", Offset = "0x135F51C", VA = "0x135F51C")]
	public static AKRESULT RegisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F5B")]
	[Address(RVA = "0x135F630", Offset = "0x135F630", VA = "0x135F630")]
	public static AKRESULT UnregisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F5C")]
	[Address(RVA = "0x135F744", Offset = "0x135F744", VA = "0x135F744")]
	public static AKRESULT RegisterGameObjInternal_WithName(GameObject in_GameObj, string in_pszObjName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F5D")]
	[Address(RVA = "0x135F894", Offset = "0x135F894", VA = "0x135F894")]
	public static AKRESULT SetBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F5E")]
	[Address(RVA = "0x135F990", Offset = "0x135F990", VA = "0x135F990")]
	public static AKRESULT SetCurrentLanguage(string in_pszAudioSrcPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F5F")]
	[Address(RVA = "0x135FA8C", Offset = "0x135FA8C", VA = "0x135FA8C")]
	public static AKRESULT LoadFilePackage(string in_pszFilePackageName, out uint out_uPackageID, int in_memPoolID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F60")]
	[Address(RVA = "0x135FBB8", Offset = "0x135FBB8", VA = "0x135FBB8")]
	public static AKRESULT AddBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F61")]
	[Address(RVA = "0x135FCB4", Offset = "0x135FCB4", VA = "0x135FCB4")]
	public static AKRESULT SetGameName(string in_GameName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F62")]
	[Address(RVA = "0x135FDB0", Offset = "0x135FDB0", VA = "0x135FDB0")]
	public static AKRESULT SetDecodedBankPath(string in_DecodedPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F63")]
	[Address(RVA = "0x135FEAC", Offset = "0x135FEAC", VA = "0x135FEAC")]
	public static AKRESULT LoadAndDecodeBank(string in_pszString, bool in_bSaveDecodedBank, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F64")]
	[Address(RVA = "0x135FFD8", Offset = "0x135FFD8", VA = "0x135FFD8")]
	public static AKRESULT LoadAndDecodeBankFromMemory(IntPtr in_BankData, uint in_BankDataSize, bool in_bSaveDecodedBank, string in_DecodedBankName, bool in_bIsLanguageSpecific, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F65")]
	[Address(RVA = "0x1360158", Offset = "0x1360158", VA = "0x1360158")]
	public static string GetCurrentLanguage()
	{
		return null;
	}

	[Token(Token = "0x6001F66")]
	[Address(RVA = "0x13602BC", Offset = "0x13602BC", VA = "0x13602BC")]
	public static AKRESULT UnloadFilePackage(uint in_uPackageID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F67")]
	[Address(RVA = "0x13603A0", Offset = "0x13603A0", VA = "0x13603A0")]
	public static AKRESULT UnloadAllFilePackages()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F68")]
	[Address(RVA = "0x1360470", Offset = "0x1360470", VA = "0x1360470")]
	public static AKRESULT SetObjectPosition(GameObject in_GameObjectID, float PosX, float PosY, float PosZ, float FrontX, float FrontY, float FrontZ, float TopX, float TopY, float TopZ)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F69")]
	[Address(RVA = "0x136065C", Offset = "0x136065C", VA = "0x136065C")]
	public static AKRESULT GetSourceMultiplePlayPositions(uint in_PlayingID, uint[] out_audioNodeID, uint[] out_mediaID, int[] out_msTime, ref uint io_pcPositions, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F6A")]
	[Address(RVA = "0x1360910", Offset = "0x1360910", VA = "0x1360910")]
	public static AKRESULT SetListeners(GameObject in_emitterGameObj, ulong[] in_pListenerGameObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F6B")]
	[Address(RVA = "0x1360A64", Offset = "0x1360A64", VA = "0x1360A64")]
	public static AKRESULT SetDefaultListeners(ulong[] in_pListenerObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F6C")]
	[Address(RVA = "0x1360B70", Offset = "0x1360B70", VA = "0x1360B70")]
	public static AKRESULT AddOutput(AkOutputSettings in_Settings, out ulong out_pDeviceID, ulong[] in_pListenerIDs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F6D")]
	[Address(RVA = "0x1360CC0", Offset = "0x1360CC0", VA = "0x1360CC0")]
	public static void GetDefaultStreamSettings(AkStreamMgrSettings out_settings)
	{
	}

	[Token(Token = "0x6001F6E")]
	[Address(RVA = "0x1360DB8", Offset = "0x1360DB8", VA = "0x1360DB8")]
	public static void GetDefaultDeviceSettings(AkDeviceSettings out_settings)
	{
	}

	[Token(Token = "0x6001F6F")]
	[Address(RVA = "0x1360EB0", Offset = "0x1360EB0", VA = "0x1360EB0")]
	public static void GetDefaultMusicSettings(AkMusicSettings out_settings)
	{
	}

	[Token(Token = "0x6001F70")]
	[Address(RVA = "0x1360FA8", Offset = "0x1360FA8", VA = "0x1360FA8")]
	public static void GetDefaultInitSettings(AkInitSettings out_settings)
	{
	}

	[Token(Token = "0x6001F71")]
	[Address(RVA = "0x13610A0", Offset = "0x13610A0", VA = "0x13610A0")]
	public static void GetDefaultPlatformInitSettings(AkPlatformInitSettings out_settings)
	{
	}

	[Token(Token = "0x6001F72")]
	[Address(RVA = "0x1361198", Offset = "0x1361198", VA = "0x1361198")]
	public static uint GetMajorMinorVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x6001F73")]
	[Address(RVA = "0x1361268", Offset = "0x1361268", VA = "0x1361268")]
	public static uint GetSubminorBuildVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x6001F74")]
	[Address(RVA = "0x1361338", Offset = "0x1361338", VA = "0x1361338")]
	public static AKRESULT QueryIndirectPaths(GameObject in_gameObjectID, AkPathParams arg1, AkReflectionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F75")]
	[Address(RVA = "0x13614C0", Offset = "0x13614C0", VA = "0x13614C0")]
	public static AKRESULT QuerySoundPropagationPaths(GameObject in_gameObjectID, AkPathParams arg1, AkPropagationPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F76")]
	[Address(RVA = "0x1361648", Offset = "0x1361648", VA = "0x1361648")]
	public static AKRESULT QueryDiffractionPaths(GameObject in_gameObjectID, AkPathParams arg1, AkDiffractionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F77")]
	[Address(RVA = "0x1345E5C", Offset = "0x1345E5C", VA = "0x1345E5C")]
	public static AKRESULT SetRoomPortal(ulong in_PortalID, AkTransform Transform, AkVector Extent, bool bEnabled, ulong FrontRoom, ulong BackRoom)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F78")]
	[Address(RVA = "0x1343EF0", Offset = "0x1343EF0", VA = "0x1343EF0")]
	public static AKRESULT SetRoom(ulong in_RoomID, AkRoomParams in_roomParams, string in_pName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F79")]
	[Address(RVA = "0x1361940", Offset = "0x1361940", VA = "0x1361940")]
	public static AKRESULT RegisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F7A")]
	[Address(RVA = "0x1361A5C", Offset = "0x1361A5C", VA = "0x1361A5C")]
	public static AKRESULT UnregisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F7B")]
	[Address(RVA = "0x1361B78", Offset = "0x1361B78", VA = "0x1361B78")]
	public static AKRESULT SetGeometry(ulong in_GeomSetID, AkTriangleArray Triangles, uint NumTriangles, AkVertexArray Vertices, uint NumVertices, AkAcousticSurfaceArray Surfaces, uint NumSurfaces, bool EnableDiffraction, bool EnableDiffractionOnBoundaryEdges)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F7C")]
	[Address(RVA = "0x1361D40", Offset = "0x1361D40", VA = "0x1361D40")]
	public static string StringFromIntPtrString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6001F7D")]
	[Address(RVA = "0x1361DA8", Offset = "0x1361DA8", VA = "0x1361DA8")]
	public static string StringFromIntPtrWString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6001F7E")]
	[Address(RVA = "0x1360258", Offset = "0x1360258", VA = "0x1360258")]
	public static string StringFromIntPtrOSString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x6001F7F")]
	[Address(RVA = "0x1361E10", Offset = "0x1361E10", VA = "0x1361E10")]
	private static ulong InternalGameObjectHash(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001F81")]
	[Address(RVA = "0x13437B8", Offset = "0x13437B8", VA = "0x13437B8")]
	public static ulong GetAkGameObjectID(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001F82")]
	[Address(RVA = "0x1362300", Offset = "0x1362300", VA = "0x1362300")]
	public static AKRESULT RegisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F83")]
	[Address(RVA = "0x1362450", Offset = "0x1362450", VA = "0x1362450")]
	public static AKRESULT RegisterGameObj(GameObject gameObject, string name)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F84")]
	[Address(RVA = "0x1362508", Offset = "0x1362508", VA = "0x1362508")]
	public static AKRESULT UnregisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F85")]
	[Address(RVA = "0x1362658", Offset = "0x1362658", VA = "0x1362658")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Transform transform)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F86")]
	[Address(RVA = "0x13627DC", Offset = "0x13627DC", VA = "0x13627DC")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Vector3 position, Vector3 forward, Vector3 up)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001F87")]
	[Address(RVA = "0x13490B0", Offset = "0x13490B0", VA = "0x13490B0")]
	public static void PreGameObjectAPICall(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6001F88")]
	[Address(RVA = "0x13628DC", Offset = "0x13628DC", VA = "0x13628DC")]
	private static void PreGameObjectAPICallUserHook(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6001F89")]
	[Address(RVA = "0x13623A8", Offset = "0x13623A8", VA = "0x13623A8")]
	private static void PostRegisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6001F8A")]
	[Address(RVA = "0x13625B0", Offset = "0x13625B0", VA = "0x13625B0")]
	private static void PostUnregisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6001F8B")]
	[Address(RVA = "0x1362A24", Offset = "0x1362A24", VA = "0x1362A24")]
	private static void AutoRegister(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x6001F8C")]
	[Address(RVA = "0x13629A0", Offset = "0x13629A0", VA = "0x13629A0")]
	private static bool IsInRegisteredList(ulong id)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F8D")]
	[Address(RVA = "0x1362C40", Offset = "0x1362C40", VA = "0x1362C40")]
	public static bool IsGameObjectRegistered(GameObject in_gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6001F8E")]
	[Address(RVA = "0x1362CA8", Offset = "0x1362CA8", VA = "0x1362CA8")]
	public AkSoundEngine()
	{
	}
}
[Token(Token = "0x2000347")]
public class AkThreadProperties : IDisposable
{
	[Token(Token = "0x4001790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000224")]
	public int nPriority
	{
		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x154F2AC", Offset = "0x154F2AC", VA = "0x154F2AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x154F230", Offset = "0x154F230", VA = "0x154F230")]
		set
		{
		}
	}

	[Token(Token = "0x17000225")]
	public uint uStackSize
	{
		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x154F394", Offset = "0x154F394", VA = "0x154F394")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x154F318", Offset = "0x154F318", VA = "0x154F318")]
		set
		{
		}
	}

	[Token(Token = "0x17000226")]
	public int uSchedPolicy
	{
		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x154F47C", Offset = "0x154F47C", VA = "0x154F47C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x154F400", Offset = "0x154F400", VA = "0x154F400")]
		set
		{
		}
	}

	[Token(Token = "0x17000227")]
	public uint dwAffinityMask
	{
		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x154F564", Offset = "0x154F564", VA = "0x154F564")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x154F4E8", Offset = "0x154F4E8", VA = "0x154F4E8")]
		set
		{
		}
	}

	[Token(Token = "0x6001F90")]
	[Address(RVA = "0x154EFD0", Offset = "0x154EFD0", VA = "0x154EFD0")]
	internal AkThreadProperties(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001F91")]
	[Address(RVA = "0x154F010", Offset = "0x154F010", VA = "0x154F010")]
	internal static IntPtr getCPtr(AkThreadProperties obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001F92")]
	[Address(RVA = "0x154F060", Offset = "0x154F060", VA = "0x154F060", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001F93")]
	[Address(RVA = "0x154F094", Offset = "0x154F094", VA = "0x154F094", Slot = "1")]
	~AkThreadProperties()
	{
	}

	[Token(Token = "0x6001F94")]
	[Address(RVA = "0x154F104", Offset = "0x154F104", VA = "0x154F104", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001F9D")]
	[Address(RVA = "0x154F5D0", Offset = "0x154F5D0", VA = "0x154F5D0")]
	public AkThreadProperties()
	{
	}
}
[Token(Token = "0x2000348")]
public class AkUnityPlatformSpecificSettings : IDisposable
{
	[Token(Token = "0x4001792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001F9E")]
	[Address(RVA = "0x15521FC", Offset = "0x15521FC", VA = "0x15521FC")]
	internal AkUnityPlatformSpecificSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001F9F")]
	[Address(RVA = "0x155223C", Offset = "0x155223C", VA = "0x155223C")]
	internal static IntPtr getCPtr(AkUnityPlatformSpecificSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001FA0")]
	[Address(RVA = "0x155228C", Offset = "0x155228C", VA = "0x155228C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001FA1")]
	[Address(RVA = "0x15522C0", Offset = "0x15522C0", VA = "0x15522C0", Slot = "1")]
	~AkUnityPlatformSpecificSettings()
	{
	}

	[Token(Token = "0x6001FA2")]
	[Address(RVA = "0x1552330", Offset = "0x1552330", VA = "0x1552330", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001FA3")]
	[Address(RVA = "0x155245C", Offset = "0x155245C", VA = "0x155245C")]
	public AkUnityPlatformSpecificSettings()
	{
	}
}
[Token(Token = "0x2000349")]
public enum AKRESULT
{
	[Token(Token = "0x4001795")]
	AK_NotImplemented = 0,
	[Token(Token = "0x4001796")]
	AK_Success = 1,
	[Token(Token = "0x4001797")]
	AK_Fail = 2,
	[Token(Token = "0x4001798")]
	AK_PartialSuccess = 3,
	[Token(Token = "0x4001799")]
	AK_NotCompatible = 4,
	[Token(Token = "0x400179A")]
	AK_AlreadyConnected = 5,
	[Token(Token = "0x400179B")]
	AK_NameNotSet = 6,
	[Token(Token = "0x400179C")]
	AK_InvalidFile = 7,
	[Token(Token = "0x400179D")]
	AK_AudioFileHeaderTooLarge = 8,
	[Token(Token = "0x400179E")]
	AK_MaxReached = 9,
	[Token(Token = "0x400179F")]
	AK_InputsInUsed = 10,
	[Token(Token = "0x40017A0")]
	AK_OutputsInUsed = 11,
	[Token(Token = "0x40017A1")]
	AK_InvalidName = 12,
	[Token(Token = "0x40017A2")]
	AK_NameAlreadyInUse = 13,
	[Token(Token = "0x40017A3")]
	AK_InvalidID = 14,
	[Token(Token = "0x40017A4")]
	AK_IDNotFound = 15,
	[Token(Token = "0x40017A5")]
	AK_InvalidInstanceID = 16,
	[Token(Token = "0x40017A6")]
	AK_NoMoreData = 17,
	[Token(Token = "0x40017A7")]
	AK_NoSourceAvailable = 18,
	[Token(Token = "0x40017A8")]
	AK_StateGroupAlreadyExists = 19,
	[Token(Token = "0x40017A9")]
	AK_InvalidStateGroup = 20,
	[Token(Token = "0x40017AA")]
	AK_ChildAlreadyHasAParent = 21,
	[Token(Token = "0x40017AB")]
	AK_InvalidLanguage = 22,
	[Token(Token = "0x40017AC")]
	AK_CannotAddItseflAsAChild = 23,
	[Token(Token = "0x40017AD")]
	AK_UserNotInList = 29,
	[Token(Token = "0x40017AE")]
	AK_NoTransitionPoint = 30,
	[Token(Token = "0x40017AF")]
	AK_InvalidParameter = 31,
	[Token(Token = "0x40017B0")]
	AK_ParameterAdjusted = 32,
	[Token(Token = "0x40017B1")]
	AK_IsA3DSound = 33,
	[Token(Token = "0x40017B2")]
	AK_NotA3DSound = 34,
	[Token(Token = "0x40017B3")]
	AK_ElementAlreadyInList = 35,
	[Token(Token = "0x40017B4")]
	AK_PathNotFound = 36,
	[Token(Token = "0x40017B5")]
	AK_PathNoVertices = 37,
	[Token(Token = "0x40017B6")]
	AK_PathNotRunning = 38,
	[Token(Token = "0x40017B7")]
	AK_PathNotPaused = 39,
	[Token(Token = "0x40017B8")]
	AK_PathNodeAlreadyInList = 40,
	[Token(Token = "0x40017B9")]
	AK_PathNodeNotInList = 41,
	[Token(Token = "0x40017BA")]
	AK_VoiceNotFound = 42,
	[Token(Token = "0x40017BB")]
	AK_DataNeeded = 43,
	[Token(Token = "0x40017BC")]
	AK_NoDataNeeded = 44,
	[Token(Token = "0x40017BD")]
	AK_DataReady = 45,
	[Token(Token = "0x40017BE")]
	AK_NoDataReady = 46,
	[Token(Token = "0x40017BF")]
	AK_NoMoreSlotAvailable = 47,
	[Token(Token = "0x40017C0")]
	AK_SlotNotFound = 48,
	[Token(Token = "0x40017C1")]
	AK_ProcessingOnly = 49,
	[Token(Token = "0x40017C2")]
	AK_MemoryLeak = 50,
	[Token(Token = "0x40017C3")]
	AK_CorruptedBlockList = 51,
	[Token(Token = "0x40017C4")]
	AK_InsufficientMemory = 52,
	[Token(Token = "0x40017C5")]
	AK_Cancelled = 53,
	[Token(Token = "0x40017C6")]
	AK_UnknownBankID = 54,
	[Token(Token = "0x40017C7")]
	AK_IsProcessing = 55,
	[Token(Token = "0x40017C8")]
	AK_BankReadError = 56,
	[Token(Token = "0x40017C9")]
	AK_InvalidSwitchType = 57,
	[Token(Token = "0x40017CA")]
	AK_VoiceDone = 58,
	[Token(Token = "0x40017CB")]
	AK_UnknownEnvironment = 59,
	[Token(Token = "0x40017CC")]
	AK_EnvironmentInUse = 60,
	[Token(Token = "0x40017CD")]
	AK_UnknownObject = 61,
	[Token(Token = "0x40017CE")]
	AK_NoConversionNeeded = 62,
	[Token(Token = "0x40017CF")]
	AK_FormatNotReady = 63,
	[Token(Token = "0x40017D0")]
	AK_WrongBankVersion = 64,
	[Token(Token = "0x40017D1")]
	AK_DataReadyNoProcess = 65,
	[Token(Token = "0x40017D2")]
	AK_FileNotFound = 66,
	[Token(Token = "0x40017D3")]
	AK_DeviceNotReady = 67,
	[Token(Token = "0x40017D4")]
	AK_CouldNotCreateSecBuffer = 68,
	[Token(Token = "0x40017D5")]
	AK_BankAlreadyLoaded = 69,
	[Token(Token = "0x40017D6")]
	AK_RenderedFX = 71,
	[Token(Token = "0x40017D7")]
	AK_ProcessNeeded = 72,
	[Token(Token = "0x40017D8")]
	AK_ProcessDone = 73,
	[Token(Token = "0x40017D9")]
	AK_MemManagerNotInitialized = 74,
	[Token(Token = "0x40017DA")]
	AK_StreamMgrNotInitialized = 75,
	[Token(Token = "0x40017DB")]
	AK_SSEInstructionsNotSupported = 76,
	[Token(Token = "0x40017DC")]
	AK_Busy = 77,
	[Token(Token = "0x40017DD")]
	AK_UnsupportedChannelConfig = 78,
	[Token(Token = "0x40017DE")]
	AK_PluginMediaNotAvailable = 79,
	[Token(Token = "0x40017DF")]
	AK_MustBeVirtualized = 80,
	[Token(Token = "0x40017E0")]
	AK_CommandTooLarge = 81,
	[Token(Token = "0x40017E1")]
	AK_RejectedByFilter = 82,
	[Token(Token = "0x40017E2")]
	AK_InvalidCustomPlatformName = 83,
	[Token(Token = "0x40017E3")]
	AK_DLLCannotLoad = 84,
	[Token(Token = "0x40017E4")]
	AK_DLLPathNotFound = 85,
	[Token(Token = "0x40017E5")]
	AK_NoJavaVM = 86,
	[Token(Token = "0x40017E6")]
	AK_OpenSLError = 87,
	[Token(Token = "0x40017E7")]
	AK_PluginNotRegistered = 88,
	[Token(Token = "0x40017E8")]
	AK_DataAlignmentError = 89,
	[Token(Token = "0x40017E9")]
	AK_DeviceNotCompatible = 90,
	[Token(Token = "0x40017EA")]
	AK_DuplicateUniqueID = 91,
	[Token(Token = "0x40017EB")]
	AK_InitBankNotLoaded = 92
}
[Token(Token = "0x200034A")]
public enum Ak3DPositionType
{
	[Token(Token = "0x40017ED")]
	AK_3DPositionType_Emitter,
	[Token(Token = "0x40017EE")]
	AK_3DPositionType_EmitterWithAutomation,
	[Token(Token = "0x40017EF")]
	AK_3DPositionType_ListenerWithAutomation
}
[Token(Token = "0x200034B")]
public enum Ak3DSpatializationMode
{
	[Token(Token = "0x40017F1")]
	AK_SpatializationMode_None,
	[Token(Token = "0x40017F2")]
	AK_SpatializationMode_PositionOnly,
	[Token(Token = "0x40017F3")]
	AK_SpatializationMode_PositionAndOrientation
}
[Token(Token = "0x200034C")]
public class AkAcousticSurface : IDisposable
{
	[Token(Token = "0x40017F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40017F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000228")]
	public uint textureID
	{
		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x17FA8E8", Offset = "0x17FA8E8", VA = "0x17FA8E8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x17FA86C", Offset = "0x17FA86C", VA = "0x17FA86C")]
		set
		{
		}
	}

	[Token(Token = "0x17000229")]
	public uint reflectorChannelMask
	{
		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x17FA9D0", Offset = "0x17FA9D0", VA = "0x17FA9D0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x17FA954", Offset = "0x17FA954", VA = "0x17FA954")]
		set
		{
		}
	}

	[Token(Token = "0x1700022A")]
	public string strName
	{
		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0x17FAAB8", Offset = "0x17FAAB8", VA = "0x17FAAB8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x17FAA3C", Offset = "0x17FAA3C", VA = "0x17FAA3C")]
		set
		{
		}
	}

	[Token(Token = "0x6001FA4")]
	[Address(RVA = "0x17FA588", Offset = "0x17FA588", VA = "0x17FA588")]
	internal AkAcousticSurface(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001FA5")]
	[Address(RVA = "0x17FA5C8", Offset = "0x17FA5C8", VA = "0x17FA5C8")]
	internal static IntPtr getCPtr(AkAcousticSurface obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001FA6")]
	[Address(RVA = "0x17FA618", Offset = "0x17FA618", VA = "0x17FA618", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001FA7")]
	[Address(RVA = "0x17FA64C", Offset = "0x17FA64C", VA = "0x17FA64C", Slot = "1")]
	~AkAcousticSurface()
	{
	}

	[Token(Token = "0x6001FA8")]
	[Address(RVA = "0x17FA6BC", Offset = "0x17FA6BC", VA = "0x17FA6BC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001FA9")]
	[Address(RVA = "0x17FA7E8", Offset = "0x17FA7E8", VA = "0x17FA7E8")]
	public AkAcousticSurface()
	{
	}

	[Token(Token = "0x6001FB0")]
	[Address(RVA = "0x17FAB58", Offset = "0x17FAB58", VA = "0x17FAB58")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001FB1")]
	[Address(RVA = "0x17FABC4", Offset = "0x17FABC4", VA = "0x17FABC4")]
	public void DeleteName()
	{
	}

	[Token(Token = "0x6001FB2")]
	[Address(RVA = "0x17FAC30", Offset = "0x17FAC30", VA = "0x17FAC30")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001FB3")]
	[Address(RVA = "0x17FAC90", Offset = "0x17FAC90", VA = "0x17FAC90")]
	public void Clone(AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x200034D")]
public enum AkActionOnEventType
{
	[Token(Token = "0x40017F7")]
	AkActionOnEventType_Stop,
	[Token(Token = "0x40017F8")]
	AkActionOnEventType_Pause,
	[Token(Token = "0x40017F9")]
	AkActionOnEventType_Resume,
	[Token(Token = "0x40017FA")]
	AkActionOnEventType_Break,
	[Token(Token = "0x40017FB")]
	AkActionOnEventType_ReleaseEnvelope
}
[Token(Token = "0x200034E")]
public enum AkAudioDeviceState
{
	[Token(Token = "0x40017FD")]
	AkDeviceState_Active = 1,
	[Token(Token = "0x40017FE")]
	AkDeviceState_Disabled = 2,
	[Token(Token = "0x40017FF")]
	AkDeviceState_NotPresent = 4,
	[Token(Token = "0x4001800")]
	AkDeviceState_Unplugged = 8,
	[Token(Token = "0x4001801")]
	AkDeviceState_All = 15
}
[Token(Token = "0x200034F")]
public class AkAudioFormat : IDisposable
{
	[Token(Token = "0x4001802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700022B")]
	public uint uSampleRate
	{
		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x17FC234", Offset = "0x17FC234", VA = "0x17FC234")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x17FC1B8", Offset = "0x17FC1B8", VA = "0x17FC1B8")]
		set
		{
		}
	}

	[Token(Token = "0x1700022C")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x17FC398", Offset = "0x17FC398", VA = "0x17FC398")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x17FC2A0", Offset = "0x17FC2A0", VA = "0x17FC2A0")]
		set
		{
		}
	}

	[Token(Token = "0x1700022D")]
	public uint uBitsPerSample
	{
		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x17FC504", Offset = "0x17FC504", VA = "0x17FC504")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x17FC488", Offset = "0x17FC488", VA = "0x17FC488")]
		set
		{
		}
	}

	[Token(Token = "0x1700022E")]
	public uint uBlockAlign
	{
		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x17FC5EC", Offset = "0x17FC5EC", VA = "0x17FC5EC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x17FC570", Offset = "0x17FC570", VA = "0x17FC570")]
		set
		{
		}
	}

	[Token(Token = "0x1700022F")]
	public uint uTypeID
	{
		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x17FC6D4", Offset = "0x17FC6D4", VA = "0x17FC6D4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x17FC658", Offset = "0x17FC658", VA = "0x17FC658")]
		set
		{
		}
	}

	[Token(Token = "0x17000230")]
	public uint uInterleaveID
	{
		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x17FC7BC", Offset = "0x17FC7BC", VA = "0x17FC7BC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x17FC740", Offset = "0x17FC740", VA = "0x17FC740")]
		set
		{
		}
	}

	[Token(Token = "0x6001FB4")]
	[Address(RVA = "0x17FBF58", Offset = "0x17FBF58", VA = "0x17FBF58")]
	internal AkAudioFormat(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001FB5")]
	[Address(RVA = "0x17FBF98", Offset = "0x17FBF98", VA = "0x17FBF98")]
	internal static IntPtr getCPtr(AkAudioFormat obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001FB6")]
	[Address(RVA = "0x17FBFE8", Offset = "0x17FBFE8", VA = "0x17FBFE8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001FB7")]
	[Address(RVA = "0x17FC01C", Offset = "0x17FC01C", VA = "0x17FC01C", Slot = "1")]
	~AkAudioFormat()
	{
	}

	[Token(Token = "0x6001FB8")]
	[Address(RVA = "0x17FC08C", Offset = "0x17FC08C", VA = "0x17FC08C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001FC5")]
	[Address(RVA = "0x17FC828", Offset = "0x17FC828", VA = "0x17FC828")]
	public uint GetNumChannels()
	{
		return default(uint);
	}

	[Token(Token = "0x6001FC6")]
	[Address(RVA = "0x17FC894", Offset = "0x17FC894", VA = "0x17FC894")]
	public uint GetBitsPerSample()
	{
		return default(uint);
	}

	[Token(Token = "0x6001FC7")]
	[Address(RVA = "0x17FC900", Offset = "0x17FC900", VA = "0x17FC900")]
	public uint GetBlockAlign()
	{
		return default(uint);
	}

	[Token(Token = "0x6001FC8")]
	[Address(RVA = "0x17FC96C", Offset = "0x17FC96C", VA = "0x17FC96C")]
	public uint GetTypeID()
	{
		return default(uint);
	}

	[Token(Token = "0x6001FC9")]
	[Address(RVA = "0x17FC9D8", Offset = "0x17FC9D8", VA = "0x17FC9D8")]
	public uint GetInterleaveID()
	{
		return default(uint);
	}

	[Token(Token = "0x6001FCA")]
	[Address(RVA = "0x17FCA44", Offset = "0x17FCA44", VA = "0x17FCA44")]
	public void SetAll(uint in_uSampleRate, AkChannelConfig in_channelConfig, uint in_uBitsPerSample, uint in_uBlockAlign, uint in_uTypeID, uint in_uInterleaveID)
	{
	}

	[Token(Token = "0x6001FCB")]
	[Address(RVA = "0x17FCB24", Offset = "0x17FCB24", VA = "0x17FCB24")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x6001FCC")]
	[Address(RVA = "0x17FCB90", Offset = "0x17FCB90", VA = "0x17FCB90")]
	public AkAudioFormat()
	{
	}
}
[Token(Token = "0x2000350")]
public class AkAudioInterruptionCallbackInfo : IDisposable
{
	[Token(Token = "0x4001804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000231")]
	public bool bEnterInterruption
	{
		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x17FE5C0", Offset = "0x17FE5C0", VA = "0x17FE5C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001FCD")]
	[Address(RVA = "0x17FE360", Offset = "0x17FE360", VA = "0x17FE360")]
	internal AkAudioInterruptionCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001FCE")]
	[Address(RVA = "0x17FE3A0", Offset = "0x17FE3A0", VA = "0x17FE3A0")]
	internal static IntPtr getCPtr(AkAudioInterruptionCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001FCF")]
	[Address(RVA = "0x17FE3F0", Offset = "0x17FE3F0", VA = "0x17FE3F0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001FD0")]
	[Address(RVA = "0x17FE424", Offset = "0x17FE424", VA = "0x17FE424", Slot = "1")]
	~AkAudioInterruptionCallbackInfo()
	{
	}

	[Token(Token = "0x6001FD1")]
	[Address(RVA = "0x17FE494", Offset = "0x17FE494", VA = "0x17FE494", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001FD3")]
	[Address(RVA = "0x17FE62C", Offset = "0x17FE62C", VA = "0x17FE62C")]
	public AkAudioInterruptionCallbackInfo()
	{
	}
}
[Token(Token = "0x2000351")]
public class AkAudioSettings : IDisposable
{
	[Token(Token = "0x4001806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000232")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x17FF690", Offset = "0x17FF690", VA = "0x17FF690")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x17FF614", Offset = "0x17FF614", VA = "0x17FF614")]
		set
		{
		}
	}

	[Token(Token = "0x17000233")]
	public uint uNumSamplesPerSecond
	{
		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x17FF778", Offset = "0x17FF778", VA = "0x17FF778")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x17FF6FC", Offset = "0x17FF6FC", VA = "0x17FF6FC")]
		set
		{
		}
	}

	[Token(Token = "0x6001FD4")]
	[Address(RVA = "0x17FF3B4", Offset = "0x17FF3B4", VA = "0x17FF3B4")]
	internal AkAudioSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001FD5")]
	[Address(RVA = "0x17FF3F4", Offset = "0x17FF3F4", VA = "0x17FF3F4")]
	internal static IntPtr getCPtr(AkAudioSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001FD6")]
	[Address(RVA = "0x17FF444", Offset = "0x17FF444", VA = "0x17FF444", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001FD7")]
	[Address(RVA = "0x17FF478", Offset = "0x17FF478", VA = "0x17FF478", Slot = "1")]
	~AkAudioSettings()
	{
	}

	[Token(Token = "0x6001FD8")]
	[Address(RVA = "0x17FF4E8", Offset = "0x17FF4E8", VA = "0x17FF4E8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001FDD")]
	[Address(RVA = "0x17FF7E4", Offset = "0x17FF7E4", VA = "0x17FF7E4")]
	public AkAudioSettings()
	{
	}
}
[Token(Token = "0x2000352")]
public class AkAudioSourceChangeCallbackInfo : IDisposable
{
	[Token(Token = "0x4001808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000234")]
	public bool bOtherAudioPlaying
	{
		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x17FFAC8", Offset = "0x17FFAC8", VA = "0x17FFAC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001FDE")]
	[Address(RVA = "0x17FF868", Offset = "0x17FF868", VA = "0x17FF868")]
	internal AkAudioSourceChangeCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001FDF")]
	[Address(RVA = "0x17FF8A8", Offset = "0x17FF8A8", VA = "0x17FF8A8")]
	internal static IntPtr getCPtr(AkAudioSourceChangeCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001FE0")]
	[Address(RVA = "0x17FF8F8", Offset = "0x17FF8F8", VA = "0x17FF8F8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001FE1")]
	[Address(RVA = "0x17FF92C", Offset = "0x17FF92C", VA = "0x17FF92C", Slot = "1")]
	~AkAudioSourceChangeCallbackInfo()
	{
	}

	[Token(Token = "0x6001FE2")]
	[Address(RVA = "0x17FF99C", Offset = "0x17FF99C", VA = "0x17FF99C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001FE4")]
	[Address(RVA = "0x17FFB34", Offset = "0x17FFB34", VA = "0x17FFB34")]
	public AkAudioSourceChangeCallbackInfo()
	{
	}
}
[Token(Token = "0x2000353")]
public class AkAuxSendValue : IDisposable
{
	[Token(Token = "0x400180A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400180B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000235")]
	public ulong listenerID
	{
		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x1800788", Offset = "0x1800788", VA = "0x1800788")]
		get
		{
			return default(ulong);
		}
		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x180070C", Offset = "0x180070C", VA = "0x180070C")]
		set
		{
		}
	}

	[Token(Token = "0x17000236")]
	public uint auxBusID
	{
		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x1800870", Offset = "0x1800870", VA = "0x1800870")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x18007F4", Offset = "0x18007F4", VA = "0x18007F4")]
		set
		{
		}
	}

	[Token(Token = "0x17000237")]
	public float fControlValue
	{
		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x1800958", Offset = "0x1800958", VA = "0x1800958")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x18008DC", Offset = "0x18008DC", VA = "0x18008DC")]
		set
		{
		}
	}

	[Token(Token = "0x6001FE5")]
	[Address(RVA = "0x17FFD88", Offset = "0x17FFD88", VA = "0x17FFD88")]
	internal AkAuxSendValue(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001FE6")]
	[Address(RVA = "0x18004EC", Offset = "0x18004EC", VA = "0x18004EC")]
	internal static IntPtr getCPtr(AkAuxSendValue obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001FE7")]
	[Address(RVA = "0x180053C", Offset = "0x180053C", VA = "0x180053C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001FE8")]
	[Address(RVA = "0x1800570", Offset = "0x1800570", VA = "0x1800570", Slot = "1")]
	~AkAuxSendValue()
	{
	}

	[Token(Token = "0x6001FE9")]
	[Address(RVA = "0x18005E0", Offset = "0x18005E0", VA = "0x18005E0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001FF0")]
	[Address(RVA = "0x18009C4", Offset = "0x18009C4", VA = "0x18009C4")]
	public void Set(GameObject listener, uint id, float value)
	{
	}

	[Token(Token = "0x6001FF1")]
	[Address(RVA = "0x1800A98", Offset = "0x1800A98", VA = "0x1800A98")]
	public bool IsSame(GameObject listener, uint id)
	{
		return default(bool);
	}

	[Token(Token = "0x6001FF2")]
	[Address(RVA = "0x1800B5C", Offset = "0x1800B5C", VA = "0x1800B5C")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001FF3")]
	[Address(RVA = "0x1800BBC", Offset = "0x1800BBC", VA = "0x1800BBC")]
	public AKRESULT SetGameObjectAuxSendValues(GameObject in_gameObjectID, uint in_uNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001FF4")]
	[Address(RVA = "0x1800C80", Offset = "0x1800C80", VA = "0x1800C80")]
	public AKRESULT GetGameObjectAuxSendValues(GameObject in_gameObjectID, ref uint io_ruNumSendValues)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x2000354")]
public class AkBankCallbackInfo : IDisposable
{
	[Token(Token = "0x400180C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400180D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000238")]
	public uint bankID
	{
		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x1801454", Offset = "0x1801454", VA = "0x1801454")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000239")]
	public IntPtr inMemoryBankPtr
	{
		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x18014C0", Offset = "0x18014C0", VA = "0x18014C0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700023A")]
	public AKRESULT loadResult
	{
		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x180152C", Offset = "0x180152C", VA = "0x180152C")]
		get
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x1700023B")]
	public int memPoolId
	{
		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x1801598", Offset = "0x1801598", VA = "0x1801598")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001FF5")]
	[Address(RVA = "0x18011F4", Offset = "0x18011F4", VA = "0x18011F4")]
	internal AkBankCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001FF6")]
	[Address(RVA = "0x1801234", Offset = "0x1801234", VA = "0x1801234")]
	internal static IntPtr getCPtr(AkBankCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001FF7")]
	[Address(RVA = "0x1801284", Offset = "0x1801284", VA = "0x1801284", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001FF8")]
	[Address(RVA = "0x18012B8", Offset = "0x18012B8", VA = "0x18012B8", Slot = "1")]
	~AkBankCallbackInfo()
	{
	}

	[Token(Token = "0x6001FF9")]
	[Address(RVA = "0x1801328", Offset = "0x1801328", VA = "0x1801328", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001FFE")]
	[Address(RVA = "0x1801604", Offset = "0x1801604", VA = "0x1801604")]
	public AkBankCallbackInfo()
	{
	}
}
[Token(Token = "0x2000355")]
public enum AkBankContent
{
	[Token(Token = "0x400180F")]
	AkBankContent_StructureOnly,
	[Token(Token = "0x4001810")]
	AkBankContent_All
}
[Token(Token = "0x2000356")]
public enum AkBusHierarchyFlags
{
	[Token(Token = "0x4001812")]
	AkBusHierarchy_Primary = 1,
	[Token(Token = "0x4001813")]
	AkBusHierarchy_Secondary = 2,
	[Token(Token = "0x4001814")]
	AkBusHierarchy_IsMaster = 0x80
}
[Token(Token = "0x2000357")]
public class AkCallbackInfo : IDisposable
{
	[Token(Token = "0x4001815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700023C")]
	public IntPtr pCookie
	{
		[Token(Token = "0x6002004")]
		[Address(RVA = "0x18033F0", Offset = "0x18033F0", VA = "0x18033F0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700023D")]
	public ulong gameObjID
	{
		[Token(Token = "0x6002005")]
		[Address(RVA = "0x180345C", Offset = "0x180345C", VA = "0x180345C")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x6001FFF")]
	[Address(RVA = "0x1803190", Offset = "0x1803190", VA = "0x1803190")]
	internal AkCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002000")]
	[Address(RVA = "0x18031D0", Offset = "0x18031D0", VA = "0x18031D0")]
	internal static IntPtr getCPtr(AkCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002001")]
	[Address(RVA = "0x1803220", Offset = "0x1803220", VA = "0x1803220", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002002")]
	[Address(RVA = "0x1803254", Offset = "0x1803254", VA = "0x1803254", Slot = "1")]
	~AkCallbackInfo()
	{
	}

	[Token(Token = "0x6002003")]
	[Address(RVA = "0x18032C4", Offset = "0x18032C4", VA = "0x18032C4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6002006")]
	[Address(RVA = "0x18034C8", Offset = "0x18034C8", VA = "0x18034C8")]
	public AkCallbackInfo()
	{
	}
}
[Token(Token = "0x2000358")]
public class AkCallbackSerializer : IDisposable
{
	[Token(Token = "0x4001817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6002007")]
	[Address(RVA = "0x1806824", Offset = "0x1806824", VA = "0x1806824")]
	internal AkCallbackSerializer(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002008")]
	[Address(RVA = "0x1806864", Offset = "0x1806864", VA = "0x1806864")]
	internal static IntPtr getCPtr(AkCallbackSerializer obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002009")]
	[Address(RVA = "0x18068B4", Offset = "0x18068B4", VA = "0x18068B4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600200A")]
	[Address(RVA = "0x18068E8", Offset = "0x18068E8", VA = "0x18068E8", Slot = "1")]
	~AkCallbackSerializer()
	{
	}

	[Token(Token = "0x600200B")]
	[Address(RVA = "0x1806958", Offset = "0x1806958", VA = "0x1806958", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600200C")]
	[Address(RVA = "0x1804338", Offset = "0x1804338", VA = "0x1804338")]
	public static AKRESULT Init(IntPtr in_pMemory, uint in_uSize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600200D")]
	[Address(RVA = "0x180448C", Offset = "0x180448C", VA = "0x180448C")]
	public static void Term()
	{
	}

	[Token(Token = "0x600200E")]
	[Address(RVA = "0x1805294", Offset = "0x1805294", VA = "0x1805294")]
	public static IntPtr Lock()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600200F")]
	[Address(RVA = "0x1804574", Offset = "0x1804574", VA = "0x1804574")]
	public static void SetLocalOutput(uint in_uErrorLevel)
	{
	}

	[Token(Token = "0x6002010")]
	[Address(RVA = "0x1805CAC", Offset = "0x1805CAC", VA = "0x1805CAC")]
	public static void Unlock()
	{
	}

	[Token(Token = "0x6002011")]
	[Address(RVA = "0x1806A84", Offset = "0x1806A84", VA = "0x1806A84")]
	public static AKRESULT AudioSourceChangeCallbackFunc(bool in_bOtherAudioPlaying, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002012")]
	[Address(RVA = "0x1806B1C", Offset = "0x1806B1C", VA = "0x1806B1C")]
	public AkCallbackSerializer()
	{
	}
}
[Token(Token = "0x2000359")]
public enum AkCallbackType
{
	[Token(Token = "0x400181A")]
	AK_EndOfEvent = 1,
	[Token(Token = "0x400181B")]
	AK_EndOfDynamicSequenceItem = 2,
	[Token(Token = "0x400181C")]
	AK_Marker = 4,
	[Token(Token = "0x400181D")]
	AK_Duration = 8,
	[Token(Token = "0x400181E")]
	AK_SpeakerVolumeMatrix = 16,
	[Token(Token = "0x400181F")]
	AK_Starvation = 32,
	[Token(Token = "0x4001820")]
	AK_MusicPlaylistSelect = 64,
	[Token(Token = "0x4001821")]
	AK_MusicPlayStarted = 128,
	[Token(Token = "0x4001822")]
	AK_MusicSyncBeat = 256,
	[Token(Token = "0x4001823")]
	AK_MusicSyncBar = 512,
	[Token(Token = "0x4001824")]
	AK_MusicSyncEntry = 1024,
	[Token(Token = "0x4001825")]
	AK_MusicSyncExit = 2048,
	[Token(Token = "0x4001826")]
	AK_MusicSyncGrid = 4096,
	[Token(Token = "0x4001827")]
	AK_MusicSyncUserCue = 8192,
	[Token(Token = "0x4001828")]
	AK_MusicSyncPoint = 16384,
	[Token(Token = "0x4001829")]
	AK_MusicSyncAll = 32512,
	[Token(Token = "0x400182A")]
	AK_MIDIEvent = 65536,
	[Token(Token = "0x400182B")]
	AK_CallbackBits = 1048575,
	[Token(Token = "0x400182C")]
	AK_EnableGetSourcePlayPosition = 1048576,
	[Token(Token = "0x400182D")]
	AK_EnableGetMusicPlayPosition = 2097152,
	[Token(Token = "0x400182E")]
	AK_EnableGetSourceStreamBuffering = 4194304,
	[Token(Token = "0x400182F")]
	AK_Monitoring = 536870912,
	[Token(Token = "0x4001830")]
	AK_AudioSourceChange = 587202560,
	[Token(Token = "0x4001831")]
	AK_Bank = 1073741824,
	[Token(Token = "0x4001832")]
	AK_AudioInterruption = 570425344
}
[Token(Token = "0x200035A")]
public class AkChannelConfig : IDisposable
{
	[Token(Token = "0x4001833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700023E")]
	public uint uNumChannels
	{
		[Token(Token = "0x6002019")]
		[Address(RVA = "0x1806DEC", Offset = "0x1806DEC", VA = "0x1806DEC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002018")]
		[Address(RVA = "0x1806D70", Offset = "0x1806D70", VA = "0x1806D70")]
		set
		{
		}
	}

	[Token(Token = "0x1700023F")]
	public uint eConfigType
	{
		[Token(Token = "0x600201B")]
		[Address(RVA = "0x1806ED4", Offset = "0x1806ED4", VA = "0x1806ED4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600201A")]
		[Address(RVA = "0x1806E58", Offset = "0x1806E58", VA = "0x1806E58")]
		set
		{
		}
	}

	[Token(Token = "0x17000240")]
	public uint uChannelMask
	{
		[Token(Token = "0x600201D")]
		[Address(RVA = "0x1806FBC", Offset = "0x1806FBC", VA = "0x1806FBC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600201C")]
		[Address(RVA = "0x1806F40", Offset = "0x1806F40", VA = "0x1806F40")]
		set
		{
		}
	}

	[Token(Token = "0x6002013")]
	[Address(RVA = "0x17FC448", Offset = "0x17FC448", VA = "0x17FC448")]
	internal AkChannelConfig(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002014")]
	[Address(RVA = "0x17FC348", Offset = "0x17FC348", VA = "0x17FC348")]
	internal static IntPtr getCPtr(AkChannelConfig obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002015")]
	[Address(RVA = "0x1806BA0", Offset = "0x1806BA0", VA = "0x1806BA0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002016")]
	[Address(RVA = "0x1806BD4", Offset = "0x1806BD4", VA = "0x1806BD4", Slot = "1")]
	~AkChannelConfig()
	{
	}

	[Token(Token = "0x6002017")]
	[Address(RVA = "0x1806C44", Offset = "0x1806C44", VA = "0x1806C44", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600201E")]
	[Address(RVA = "0x1807028", Offset = "0x1807028", VA = "0x1807028")]
	public AkChannelConfig()
	{
	}

	[Token(Token = "0x600201F")]
	[Address(RVA = "0x18070AC", Offset = "0x18070AC", VA = "0x18070AC")]
	public AkChannelConfig(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6002020")]
	[Address(RVA = "0x1807148", Offset = "0x1807148", VA = "0x1807148")]
	public void Clear()
	{
	}

	[Token(Token = "0x6002021")]
	[Address(RVA = "0x18071B4", Offset = "0x18071B4", VA = "0x18071B4")]
	public void SetStandard(uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6002022")]
	[Address(RVA = "0x1807230", Offset = "0x1807230", VA = "0x1807230")]
	public void SetStandardOrAnonymous(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6002023")]
	[Address(RVA = "0x18072B4", Offset = "0x18072B4", VA = "0x18072B4")]
	public void SetAnonymous(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x6002024")]
	[Address(RVA = "0x1807330", Offset = "0x1807330", VA = "0x1807330")]
	public void SetAmbisonic(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x6002025")]
	[Address(RVA = "0x18073AC", Offset = "0x18073AC", VA = "0x18073AC")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x6002026")]
	[Address(RVA = "0x1807418", Offset = "0x1807418", VA = "0x1807418")]
	public uint Serialize()
	{
		return default(uint);
	}

	[Token(Token = "0x6002027")]
	[Address(RVA = "0x1807484", Offset = "0x1807484", VA = "0x1807484")]
	public void Deserialize(uint in_uChannelConfig)
	{
	}

	[Token(Token = "0x6002028")]
	[Address(RVA = "0x1807500", Offset = "0x1807500", VA = "0x1807500")]
	public AkChannelConfig RemoveLFE()
	{
		return null;
	}

	[Token(Token = "0x6002029")]
	[Address(RVA = "0x18075A4", Offset = "0x18075A4", VA = "0x18075A4")]
	public AkChannelConfig RemoveCenter()
	{
		return null;
	}

	[Token(Token = "0x600202A")]
	[Address(RVA = "0x1807648", Offset = "0x1807648", VA = "0x1807648")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}
}
[Token(Token = "0x200035B")]
public enum AkChannelConfigType
{
	[Token(Token = "0x4001836")]
	AK_ChannelConfigType_Anonymous,
	[Token(Token = "0x4001837")]
	AK_ChannelConfigType_Standard,
	[Token(Token = "0x4001838")]
	AK_ChannelConfigType_Ambisonic
}
[Token(Token = "0x200035C")]
public class AkChannelEmitter : IDisposable
{
	[Token(Token = "0x4001839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400183A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000241")]
	public AkTransform position
	{
		[Token(Token = "0x6002031")]
		[Address(RVA = "0x18079A4", Offset = "0x18079A4", VA = "0x18079A4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002030")]
		[Address(RVA = "0x1807914", Offset = "0x1807914", VA = "0x1807914")]
		set
		{
		}
	}

	[Token(Token = "0x17000242")]
	public uint uInputChannels
	{
		[Token(Token = "0x6002033")]
		[Address(RVA = "0x1807AD0", Offset = "0x1807AD0", VA = "0x1807AD0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002032")]
		[Address(RVA = "0x1807A54", Offset = "0x1807A54", VA = "0x1807A54")]
		set
		{
		}
	}

	[Token(Token = "0x600202B")]
	[Address(RVA = "0x18076B4", Offset = "0x18076B4", VA = "0x18076B4")]
	internal AkChannelEmitter(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600202C")]
	[Address(RVA = "0x18076F4", Offset = "0x18076F4", VA = "0x18076F4")]
	internal static IntPtr getCPtr(AkChannelEmitter obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600202D")]
	[Address(RVA = "0x1807744", Offset = "0x1807744", VA = "0x1807744", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600202E")]
	[Address(RVA = "0x1807778", Offset = "0x1807778", VA = "0x1807778", Slot = "1")]
	~AkChannelEmitter()
	{
	}

	[Token(Token = "0x600202F")]
	[Address(RVA = "0x18077E8", Offset = "0x18077E8", VA = "0x18077E8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6002034")]
	[Address(RVA = "0x1807B3C", Offset = "0x1807B3C", VA = "0x1807B3C")]
	public AkChannelEmitter()
	{
	}
}
[Token(Token = "0x200035D")]
public enum AkChannelOrdering
{
	[Token(Token = "0x400183C")]
	ChannelOrdering_Standard,
	[Token(Token = "0x400183D")]
	ChannelOrdering_RunTime
}
[Token(Token = "0x200035E")]
public enum AkConnectionType
{
	[Token(Token = "0x400183F")]
	ConnectionType_Direct,
	[Token(Token = "0x4001840")]
	ConnectionType_GameDefSend,
	[Token(Token = "0x4001841")]
	ConnectionType_UserDefSend
}
[Token(Token = "0x200035F")]
public enum AkCurveInterpolation
{
	[Token(Token = "0x4001843")]
	AkCurveInterpolation_Log3 = 0,
	[Token(Token = "0x4001844")]
	AkCurveInterpolation_Sine = 1,
	[Token(Token = "0x4001845")]
	AkCurveInterpolation_Log1 = 2,
	[Token(Token = "0x4001846")]
	AkCurveInterpolation_InvSCurve = 3,
	[Token(Token = "0x4001847")]
	AkCurveInterpolation_Linear = 4,
	[Token(Token = "0x4001848")]
	AkCurveInterpolation_SCurve = 5,
	[Token(Token = "0x4001849")]
	AkCurveInterpolation_Exp1 = 6,
	[Token(Token = "0x400184A")]
	AkCurveInterpolation_SineRecip = 7,
	[Token(Token = "0x400184B")]
	AkCurveInterpolation_Exp3 = 8,
	[Token(Token = "0x400184C")]
	AkCurveInterpolation_LastFadeCurve = 8,
	[Token(Token = "0x400184D")]
	AkCurveInterpolation_Constant = 9
}
[Token(Token = "0x2000360")]
public class AkDeviceSettings : IDisposable
{
	[Token(Token = "0x400184E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400184F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000243")]
	public IntPtr pIOMemory
	{
		[Token(Token = "0x600203B")]
		[Address(RVA = "0x18098B8", Offset = "0x18098B8", VA = "0x18098B8")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x600203A")]
		[Address(RVA = "0x180983C", Offset = "0x180983C", VA = "0x180983C")]
		set
		{
		}
	}

	[Token(Token = "0x17000244")]
	public uint uIOMemorySize
	{
		[Token(Token = "0x600203D")]
		[Address(RVA = "0x1809924", Offset = "0x1809924", VA = "0x1809924")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600203C")]
		[Address(RVA = "0x18081A0", Offset = "0x18081A0", VA = "0x18081A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000245")]
	public uint uIOMemoryAlignment
	{
		[Token(Token = "0x600203F")]
		[Address(RVA = "0x1809A0C", Offset = "0x1809A0C", VA = "0x1809A0C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600203E")]
		[Address(RVA = "0x1809990", Offset = "0x1809990", VA = "0x1809990")]
		set
		{
		}
	}

	[Token(Token = "0x17000246")]
	public int ePoolAttributes
	{
		[Token(Token = "0x6002041")]
		[Address(RVA = "0x1809AF4", Offset = "0x1809AF4", VA = "0x1809AF4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6002040")]
		[Address(RVA = "0x1809A78", Offset = "0x1809A78", VA = "0x1809A78")]
		set
		{
		}
	}

	[Token(Token = "0x17000247")]
	public uint uGranularity
	{
		[Token(Token = "0x6002043")]
		[Address(RVA = "0x1809BDC", Offset = "0x1809BDC", VA = "0x1809BDC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002042")]
		[Address(RVA = "0x1809B60", Offset = "0x1809B60", VA = "0x1809B60")]
		set
		{
		}
	}

	[Token(Token = "0x17000248")]
	public uint uSchedulerTypeFlags
	{
		[Token(Token = "0x6002045")]
		[Address(RVA = "0x1809CC4", Offset = "0x1809CC4", VA = "0x1809CC4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002044")]
		[Address(RVA = "0x1809C48", Offset = "0x1809C48", VA = "0x1809C48")]
		set
		{
		}
	}

	[Token(Token = "0x17000249")]
	public AkThreadProperties threadProperties
	{
		[Token(Token = "0x6002047")]
		[Address(RVA = "0x1809DC0", Offset = "0x1809DC0", VA = "0x1809DC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002046")]
		[Address(RVA = "0x1809D30", Offset = "0x1809D30", VA = "0x1809D30")]
		set
		{
		}
	}

	[Token(Token = "0x1700024A")]
	public float fTargetAutoStmBufferLength
	{
		[Token(Token = "0x6002049")]
		[Address(RVA = "0x1809E70", Offset = "0x1809E70", VA = "0x1809E70")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002048")]
		[Address(RVA = "0x180821C", Offset = "0x180821C", VA = "0x180821C")]
		set
		{
		}
	}

	[Token(Token = "0x1700024B")]
	public uint uMaxConcurrentIO
	{
		[Token(Token = "0x600204B")]
		[Address(RVA = "0x1809F58", Offset = "0x1809F58", VA = "0x1809F58")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600204A")]
		[Address(RVA = "0x1809EDC", Offset = "0x1809EDC", VA = "0x1809EDC")]
		set
		{
		}
	}

	[Token(Token = "0x1700024C")]
	public bool bUseStreamCache
	{
		[Token(Token = "0x600204D")]
		[Address(RVA = "0x1809FC4", Offset = "0x1809FC4", VA = "0x1809FC4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600204C")]
		[Address(RVA = "0x1808298", Offset = "0x1808298", VA = "0x1808298")]
		set
		{
		}
	}

	[Token(Token = "0x1700024D")]
	public uint uMaxCachePinnedBytes
	{
		[Token(Token = "0x600204F")]
		[Address(RVA = "0x180A030", Offset = "0x180A030", VA = "0x180A030")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600204E")]
		[Address(RVA = "0x1808314", Offset = "0x1808314", VA = "0x1808314")]
		set
		{
		}
	}

	[Token(Token = "0x6002035")]
	[Address(RVA = "0x18095DC", Offset = "0x18095DC", VA = "0x18095DC")]
	internal AkDeviceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002036")]
	[Address(RVA = "0x180961C", Offset = "0x180961C", VA = "0x180961C")]
	internal static IntPtr getCPtr(AkDeviceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002037")]
	[Address(RVA = "0x180966C", Offset = "0x180966C", VA = "0x180966C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002038")]
	[Address(RVA = "0x18096A0", Offset = "0x18096A0", VA = "0x18096A0", Slot = "1")]
	~AkDeviceSettings()
	{
	}

	[Token(Token = "0x6002039")]
	[Address(RVA = "0x1809710", Offset = "0x1809710", VA = "0x1809710", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6002050")]
	[Address(RVA = "0x180A09C", Offset = "0x180A09C", VA = "0x180A09C")]
	public AkDeviceSettings()
	{
	}
}
[Token(Token = "0x2000361")]
public enum AkDiffractionFlags
{
	[Token(Token = "0x4001851")]
	DiffractionFlags_UseBuiltInParam = 1,
	[Token(Token = "0x4001852")]
	DiffractionFlags_UseObstruction = 2,
	[Token(Token = "0x4001853")]
	DiffractionFlags_CalcEmitterVirtualPosition = 8,
	[Token(Token = "0x4001854")]
	DefaultDiffractionFlags = 11
}
[Token(Token = "0x2000362")]
public class AkDiffractionPathInfo : IDisposable
{
	[Token(Token = "0x4001855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x4001857")]
	public const uint kMaxNodes = 8u;

	[Token(Token = "0x1700024E")]
	public AkTransform virtualPos
	{
		[Token(Token = "0x6002057")]
		[Address(RVA = "0x180A410", Offset = "0x180A410", VA = "0x180A410")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002056")]
		[Address(RVA = "0x180A380", Offset = "0x180A380", VA = "0x180A380")]
		set
		{
		}
	}

	[Token(Token = "0x1700024F")]
	public uint nodeCount
	{
		[Token(Token = "0x6002059")]
		[Address(RVA = "0x180A53C", Offset = "0x180A53C", VA = "0x180A53C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002058")]
		[Address(RVA = "0x180A4C0", Offset = "0x180A4C0", VA = "0x180A4C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000250")]
	public float diffraction
	{
		[Token(Token = "0x600205B")]
		[Address(RVA = "0x180A624", Offset = "0x180A624", VA = "0x180A624")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600205A")]
		[Address(RVA = "0x180A5A8", Offset = "0x180A5A8", VA = "0x180A5A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000251")]
	public float totLength
	{
		[Token(Token = "0x600205D")]
		[Address(RVA = "0x180A70C", Offset = "0x180A70C", VA = "0x180A70C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600205C")]
		[Address(RVA = "0x180A690", Offset = "0x180A690", VA = "0x180A690")]
		set
		{
		}
	}

	[Token(Token = "0x17000252")]
	public float obstructionValue
	{
		[Token(Token = "0x600205F")]
		[Address(RVA = "0x180A7F4", Offset = "0x180A7F4", VA = "0x180A7F4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600205E")]
		[Address(RVA = "0x180A778", Offset = "0x180A778", VA = "0x180A778")]
		set
		{
		}
	}

	[Token(Token = "0x6002051")]
	[Address(RVA = "0x180A120", Offset = "0x180A120", VA = "0x180A120")]
	internal AkDiffractionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002052")]
	[Address(RVA = "0x180A160", Offset = "0x180A160", VA = "0x180A160")]
	internal static IntPtr getCPtr(AkDiffractionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002053")]
	[Address(RVA = "0x180A1B0", Offset = "0x180A1B0", VA = "0x180A1B0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002054")]
	[Address(RVA = "0x180A1E4", Offset = "0x180A1E4", VA = "0x180A1E4", Slot = "1")]
	~AkDiffractionPathInfo()
	{
	}

	[Token(Token = "0x6002055")]
	[Address(RVA = "0x180A254", Offset = "0x180A254", VA = "0x180A254", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6002060")]
	[Address(RVA = "0x180A860", Offset = "0x180A860", VA = "0x180A860")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6002061")]
	[Address(RVA = "0x180A8C0", Offset = "0x180A8C0", VA = "0x180A8C0")]
	public AkVector GetNodes(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6002062")]
	[Address(RVA = "0x180A980", Offset = "0x180A980", VA = "0x180A980")]
	public float GetAngles(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x6002063")]
	[Address(RVA = "0x180A9FC", Offset = "0x180A9FC", VA = "0x180A9FC")]
	public void Clone(AkDiffractionPathInfo other)
	{
	}

	[Token(Token = "0x6002064")]
	[Address(RVA = "0x180AAA4", Offset = "0x180AAA4", VA = "0x180AAA4")]
	public AkDiffractionPathInfo()
	{
	}
}
[Token(Token = "0x2000363")]
public class AkDurationCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4001858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000253")]
	public float fDuration
	{
		[Token(Token = "0x600206A")]
		[Address(RVA = "0x180AFF8", Offset = "0x180AFF8", VA = "0x180AFF8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000254")]
	public float fEstimatedDuration
	{
		[Token(Token = "0x600206B")]
		[Address(RVA = "0x180B064", Offset = "0x180B064", VA = "0x180B064")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000255")]
	public uint audioNodeID
	{
		[Token(Token = "0x600206C")]
		[Address(RVA = "0x180B0D0", Offset = "0x180B0D0", VA = "0x180B0D0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000256")]
	public uint mediaID
	{
		[Token(Token = "0x600206D")]
		[Address(RVA = "0x180B13C", Offset = "0x180B13C", VA = "0x180B13C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000257")]
	public bool bStreaming
	{
		[Token(Token = "0x600206E")]
		[Address(RVA = "0x180B1A8", Offset = "0x180B1A8", VA = "0x180B1A8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002065")]
	[Address(RVA = "0x18060C8", Offset = "0x18060C8", VA = "0x18060C8")]
	internal AkDurationCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002066")]
	[Address(RVA = "0x180AD74", Offset = "0x180AD74", VA = "0x180AD74")]
	internal static IntPtr getCPtr(AkDurationCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002067")]
	[Address(RVA = "0x180ADC4", Offset = "0x180ADC4", VA = "0x180ADC4", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002068")]
	[Address(RVA = "0x180AE50", Offset = "0x180AE50", VA = "0x180AE50", Slot = "1")]
	~AkDurationCallbackInfo()
	{
	}

	[Token(Token = "0x6002069")]
	[Address(RVA = "0x180AEC0", Offset = "0x180AEC0", VA = "0x180AEC0", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x600206F")]
	[Address(RVA = "0x180B214", Offset = "0x180B214", VA = "0x180B214")]
	public AkDurationCallbackInfo()
	{
	}
}
[Token(Token = "0x2000364")]
public class AkDynamicSequenceItemCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x4001859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000258")]
	public uint playingID
	{
		[Token(Token = "0x6002075")]
		[Address(RVA = "0x180B508", Offset = "0x180B508", VA = "0x180B508")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000259")]
	public uint audioNodeID
	{
		[Token(Token = "0x6002076")]
		[Address(RVA = "0x180B574", Offset = "0x180B574", VA = "0x180B574")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700025A")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x6002077")]
		[Address(RVA = "0x180B5E0", Offset = "0x180B5E0", VA = "0x180B5E0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x6002070")]
	[Address(RVA = "0x180602C", Offset = "0x180602C", VA = "0x180602C")]
	internal AkDynamicSequenceItemCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002071")]
	[Address(RVA = "0x180B288", Offset = "0x180B288", VA = "0x180B288")]
	internal static IntPtr getCPtr(AkDynamicSequenceItemCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002072")]
	[Address(RVA = "0x180B2D8", Offset = "0x180B2D8", VA = "0x180B2D8", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002073")]
	[Address(RVA = "0x180B36C", Offset = "0x180B36C", VA = "0x180B36C", Slot = "1")]
	~AkDynamicSequenceItemCallbackInfo()
	{
	}

	[Token(Token = "0x6002074")]
	[Address(RVA = "0x180B3D4", Offset = "0x180B3D4", VA = "0x180B3D4", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6002078")]
	[Address(RVA = "0x180B64C", Offset = "0x180B64C", VA = "0x180B64C")]
	public AkDynamicSequenceItemCallbackInfo()
	{
	}
}
[Token(Token = "0x2000365")]
public enum AkDynamicSequenceType
{
	[Token(Token = "0x400185B")]
	DynamicSequenceType_SampleAccurate,
	[Token(Token = "0x400185C")]
	DynamicSequenceType_NormalTransition
}
[Token(Token = "0x2000366")]
public class AkEmitterSettings : IDisposable
{
	[Token(Token = "0x400185D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400185E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700025B")]
	public uint reflectAuxBusID
	{
		[Token(Token = "0x6002080")]
		[Address(RVA = "0x180BD34", Offset = "0x180BD34", VA = "0x180BD34")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600207F")]
		[Address(RVA = "0x180BCB8", Offset = "0x180BCB8", VA = "0x180BCB8")]
		set
		{
		}
	}

	[Token(Token = "0x1700025C")]
	public float reflectionMaxPathLength
	{
		[Token(Token = "0x6002082")]
		[Address(RVA = "0x180BE1C", Offset = "0x180BE1C", VA = "0x180BE1C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002081")]
		[Address(RVA = "0x180BDA0", Offset = "0x180BDA0", VA = "0x180BDA0")]
		set
		{
		}
	}

	[Token(Token = "0x1700025D")]
	public float reflectionsAuxBusGain
	{
		[Token(Token = "0x6002084")]
		[Address(RVA = "0x180BF04", Offset = "0x180BF04", VA = "0x180BF04")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002083")]
		[Address(RVA = "0x180BE88", Offset = "0x180BE88", VA = "0x180BE88")]
		set
		{
		}
	}

	[Token(Token = "0x1700025E")]
	public uint reflectionsOrder
	{
		[Token(Token = "0x6002086")]
		[Address(RVA = "0x180BFEC", Offset = "0x180BFEC", VA = "0x180BFEC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002085")]
		[Address(RVA = "0x180BF70", Offset = "0x180BF70", VA = "0x180BF70")]
		set
		{
		}
	}

	[Token(Token = "0x1700025F")]
	public uint reflectorFilterMask
	{
		[Token(Token = "0x6002088")]
		[Address(RVA = "0x180C0D4", Offset = "0x180C0D4", VA = "0x180C0D4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002087")]
		[Address(RVA = "0x180C058", Offset = "0x180C058", VA = "0x180C058")]
		set
		{
		}
	}

	[Token(Token = "0x17000260")]
	public float roomReverbAuxBusGain
	{
		[Token(Token = "0x600208A")]
		[Address(RVA = "0x180C1BC", Offset = "0x180C1BC", VA = "0x180C1BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002089")]
		[Address(RVA = "0x180C140", Offset = "0x180C140", VA = "0x180C140")]
		set
		{
		}
	}

	[Token(Token = "0x17000261")]
	public uint diffractionMaxEdges
	{
		[Token(Token = "0x600208C")]
		[Address(RVA = "0x180C2A4", Offset = "0x180C2A4", VA = "0x180C2A4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600208B")]
		[Address(RVA = "0x180C228", Offset = "0x180C228", VA = "0x180C228")]
		set
		{
		}
	}

	[Token(Token = "0x17000262")]
	public uint diffractionMaxPaths
	{
		[Token(Token = "0x600208E")]
		[Address(RVA = "0x180C38C", Offset = "0x180C38C", VA = "0x180C38C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600208D")]
		[Address(RVA = "0x180C310", Offset = "0x180C310", VA = "0x180C310")]
		set
		{
		}
	}

	[Token(Token = "0x17000263")]
	public float diffractionMaxPathLength
	{
		[Token(Token = "0x6002090")]
		[Address(RVA = "0x180C474", Offset = "0x180C474", VA = "0x180C474")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600208F")]
		[Address(RVA = "0x180C3F8", Offset = "0x180C3F8", VA = "0x180C3F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000264")]
	public byte useImageSources
	{
		[Token(Token = "0x6002092")]
		[Address(RVA = "0x180C55C", Offset = "0x180C55C", VA = "0x180C55C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6002091")]
		[Address(RVA = "0x180C4E0", Offset = "0x180C4E0", VA = "0x180C4E0")]
		set
		{
		}
	}

	[Token(Token = "0x6002079")]
	[Address(RVA = "0x180B9D4", Offset = "0x180B9D4", VA = "0x180B9D4")]
	internal AkEmitterSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600207A")]
	[Address(RVA = "0x180BA14", Offset = "0x180BA14", VA = "0x180BA14")]
	internal static IntPtr getCPtr(AkEmitterSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600207B")]
	[Address(RVA = "0x180BA64", Offset = "0x180BA64", VA = "0x180BA64", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600207C")]
	[Address(RVA = "0x180BA98", Offset = "0x180BA98", VA = "0x180BA98", Slot = "1")]
	~AkEmitterSettings()
	{
	}

	[Token(Token = "0x600207D")]
	[Address(RVA = "0x180BB08", Offset = "0x180BB08", VA = "0x180BB08", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600207E")]
	[Address(RVA = "0x180BC34", Offset = "0x180BC34", VA = "0x180BC34")]
	public AkEmitterSettings()
	{
	}
}
[Token(Token = "0x2000367")]
public class AkEventCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x400185F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000265")]
	public uint playingID
	{
		[Token(Token = "0x6002098")]
		[Address(RVA = "0x1F7BEF0", Offset = "0x1F7BEF0", VA = "0x1F7BEF0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000266")]
	public uint eventID
	{
		[Token(Token = "0x6002099")]
		[Address(RVA = "0x1F7BF5C", Offset = "0x1F7BF5C", VA = "0x1F7BF5C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x6002093")]
	[Address(RVA = "0x1F7BBD8", Offset = "0x1F7BBD8", VA = "0x1F7BBD8")]
	internal AkEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002094")]
	[Address(RVA = "0x1F7BC6C", Offset = "0x1F7BC6C", VA = "0x1F7BC6C")]
	internal static IntPtr getCPtr(AkEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002095")]
	[Address(RVA = "0x1F7BCBC", Offset = "0x1F7BCBC", VA = "0x1F7BCBC", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002096")]
	[Address(RVA = "0x1F7BD48", Offset = "0x1F7BD48", VA = "0x1F7BD48", Slot = "1")]
	~AkEventCallbackInfo()
	{
	}

	[Token(Token = "0x6002097")]
	[Address(RVA = "0x1F7BDB8", Offset = "0x1F7BDB8", VA = "0x1F7BDB8", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x600209A")]
	[Address(RVA = "0x1F7BFC8", Offset = "0x1F7BFC8", VA = "0x1F7BFC8")]
	public AkEventCallbackInfo()
	{
	}
}
[Token(Token = "0x2000368")]
public class AkExternalSourceInfo : IDisposable
{
	[Token(Token = "0x4001860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000267")]
	public uint iExternalSrcCookie
	{
		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x1F7EC0C", Offset = "0x1F7EC0C", VA = "0x1F7EC0C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x1F7EB90", Offset = "0x1F7EB90", VA = "0x1F7EB90")]
		set
		{
		}
	}

	[Token(Token = "0x17000268")]
	public uint idCodec
	{
		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x1F7ECF4", Offset = "0x1F7ECF4", VA = "0x1F7ECF4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x1F7EC78", Offset = "0x1F7EC78", VA = "0x1F7EC78")]
		set
		{
		}
	}

	[Token(Token = "0x17000269")]
	public string szFile
	{
		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x1F7EDDC", Offset = "0x1F7EDDC", VA = "0x1F7EDDC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x1F7ED60", Offset = "0x1F7ED60", VA = "0x1F7ED60")]
		set
		{
		}
	}

	[Token(Token = "0x1700026A")]
	public IntPtr pInMemory
	{
		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x1F7EEF8", Offset = "0x1F7EEF8", VA = "0x1F7EEF8")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x1F7EE7C", Offset = "0x1F7EE7C", VA = "0x1F7EE7C")]
		set
		{
		}
	}

	[Token(Token = "0x1700026B")]
	public uint uiMemorySize
	{
		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x1F7EFE0", Offset = "0x1F7EFE0", VA = "0x1F7EFE0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x1F7EF64", Offset = "0x1F7EF64", VA = "0x1F7EF64")]
		set
		{
		}
	}

	[Token(Token = "0x1700026C")]
	public uint idFile
	{
		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x1F7F0C8", Offset = "0x1F7F0C8", VA = "0x1F7F0C8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x1F7F04C", Offset = "0x1F7F04C", VA = "0x1F7F04C")]
		set
		{
		}
	}

	[Token(Token = "0x600209B")]
	[Address(RVA = "0x1F7E930", Offset = "0x1F7E930", VA = "0x1F7E930")]
	internal AkExternalSourceInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600209C")]
	[Address(RVA = "0x1F7E970", Offset = "0x1F7E970", VA = "0x1F7E970")]
	internal static IntPtr getCPtr(AkExternalSourceInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600209D")]
	[Address(RVA = "0x1F7E9C0", Offset = "0x1F7E9C0", VA = "0x1F7E9C0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600209E")]
	[Address(RVA = "0x1F7E9F4", Offset = "0x1F7E9F4", VA = "0x1F7E9F4", Slot = "1")]
	~AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x600209F")]
	[Address(RVA = "0x1F7EA64", Offset = "0x1F7EA64", VA = "0x1F7EA64", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60020AC")]
	[Address(RVA = "0x1F7F134", Offset = "0x1F7F134", VA = "0x1F7F134")]
	public AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x60020AD")]
	[Address(RVA = "0x1F7F1B8", Offset = "0x1F7F1B8", VA = "0x1F7F1B8")]
	public AkExternalSourceInfo(IntPtr in_pInMemory, uint in_uiMemorySize, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x60020AE")]
	[Address(RVA = "0x1F7F26C", Offset = "0x1F7F26C", VA = "0x1F7F26C")]
	public AkExternalSourceInfo(string in_pszFileName, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x60020AF")]
	[Address(RVA = "0x1F7F318", Offset = "0x1F7F318", VA = "0x1F7F318")]
	public AkExternalSourceInfo(uint in_idFile, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}
}
[Token(Token = "0x2000369")]
public enum AkFloorPlane
{
	[Token(Token = "0x4001863")]
	AkFloorPlane_XZ = 0,
	[Token(Token = "0x4001864")]
	AkFloorPlane_XY = 1,
	[Token(Token = "0x4001865")]
	AkFloorPlane_YZ = 2,
	[Token(Token = "0x4001866")]
	AkFloorPlane_Default = 0
}
[Token(Token = "0x200036A")]
public enum AkGlobalCallbackLocation
{
	[Token(Token = "0x4001868")]
	AkGlobalCallbackLocation_Register = 1,
	[Token(Token = "0x4001869")]
	AkGlobalCallbackLocation_Begin = 2,
	[Token(Token = "0x400186A")]
	AkGlobalCallbackLocation_PreProcessMessageQueueForRender = 4,
	[Token(Token = "0x400186B")]
	AkGlobalCallbackLocation_PostMessagesProcessed = 8,
	[Token(Token = "0x400186C")]
	AkGlobalCallbackLocation_BeginRender = 16,
	[Token(Token = "0x400186D")]
	AkGlobalCallbackLocation_EndRender = 32,
	[Token(Token = "0x400186E")]
	AkGlobalCallbackLocation_End = 64,
	[Token(Token = "0x400186F")]
	AkGlobalCallbackLocation_Term = 128,
	[Token(Token = "0x4001870")]
	AkGlobalCallbackLocation_Monitor = 256,
	[Token(Token = "0x4001871")]
	AkGlobalCallbackLocation_MonitorRecap = 512,
	[Token(Token = "0x4001872")]
	AkGlobalCallbackLocation_Num = 10
}
[Token(Token = "0x200036B")]
public enum AkGroupType
{
	[Token(Token = "0x4001874")]
	AkGroupType_Switch,
	[Token(Token = "0x4001875")]
	AkGroupType_State
}
[Token(Token = "0x200036C")]
public class AkImageSourceParams : IDisposable
{
	[Token(Token = "0x4001876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700026D")]
	public AkVector sourcePosition
	{
		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x1F81C84", Offset = "0x1F81C84", VA = "0x1F81C84")]
		get
		{
			return null;
		}
		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x1F81BF4", Offset = "0x1F81BF4", VA = "0x1F81BF4")]
		set
		{
		}
	}

	[Token(Token = "0x1700026E")]
	public float fDistanceScalingFactor
	{
		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x1F81DB0", Offset = "0x1F81DB0", VA = "0x1F81DB0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x1F81D34", Offset = "0x1F81D34", VA = "0x1F81D34")]
		set
		{
		}
	}

	[Token(Token = "0x1700026F")]
	public float fLevel
	{
		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x1F81E98", Offset = "0x1F81E98", VA = "0x1F81E98")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x1F81E1C", Offset = "0x1F81E1C", VA = "0x1F81E1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000270")]
	public float fDiffraction
	{
		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x1F81F80", Offset = "0x1F81F80", VA = "0x1F81F80")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x1F81F04", Offset = "0x1F81F04", VA = "0x1F81F04")]
		set
		{
		}
	}

	[Token(Token = "0x17000271")]
	public bool bDiffractedEmitterSide
	{
		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x1F82068", Offset = "0x1F82068", VA = "0x1F82068")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x1F81FEC", Offset = "0x1F81FEC", VA = "0x1F81FEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000272")]
	public bool bDiffractedListenerSide
	{
		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x1F82150", Offset = "0x1F82150", VA = "0x1F82150")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x1F820D4", Offset = "0x1F820D4", VA = "0x1F820D4")]
		set
		{
		}
	}

	[Token(Token = "0x60020B0")]
	[Address(RVA = "0x1F81850", Offset = "0x1F81850", VA = "0x1F81850")]
	internal AkImageSourceParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60020B1")]
	[Address(RVA = "0x1F81890", Offset = "0x1F81890", VA = "0x1F81890")]
	internal static IntPtr getCPtr(AkImageSourceParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60020B2")]
	[Address(RVA = "0x1F818E0", Offset = "0x1F818E0", VA = "0x1F818E0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60020B3")]
	[Address(RVA = "0x1F81914", Offset = "0x1F81914", VA = "0x1F81914", Slot = "1")]
	~AkImageSourceParams()
	{
	}

	[Token(Token = "0x60020B4")]
	[Address(RVA = "0x1F81984", Offset = "0x1F81984", VA = "0x1F81984", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60020B5")]
	[Address(RVA = "0x1F81AB0", Offset = "0x1F81AB0", VA = "0x1F81AB0")]
	public AkImageSourceParams()
	{
	}

	[Token(Token = "0x60020B6")]
	[Address(RVA = "0x1F81B34", Offset = "0x1F81B34", VA = "0x1F81B34")]
	public AkImageSourceParams(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}
}
[Token(Token = "0x200036D")]
public class AkImageSourceSettings : IDisposable
{
	[Token(Token = "0x4001878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000273")]
	public AkImageSourceParams params_
	{
		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x1F82700", Offset = "0x1F82700", VA = "0x1F82700")]
		get
		{
			return null;
		}
		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x1F82658", Offset = "0x1F82658", VA = "0x1F82658")]
		set
		{
		}
	}

	[Token(Token = "0x60020C3")]
	[Address(RVA = "0x1F821BC", Offset = "0x1F821BC", VA = "0x1F821BC")]
	internal AkImageSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60020C4")]
	[Address(RVA = "0x1F821FC", Offset = "0x1F821FC", VA = "0x1F821FC")]
	internal static IntPtr getCPtr(AkImageSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60020C5")]
	[Address(RVA = "0x1F8224C", Offset = "0x1F8224C", VA = "0x1F8224C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60020C6")]
	[Address(RVA = "0x1F82280", Offset = "0x1F82280", VA = "0x1F82280", Slot = "1")]
	~AkImageSourceSettings()
	{
	}

	[Token(Token = "0x60020C7")]
	[Address(RVA = "0x1F822F0", Offset = "0x1F822F0", VA = "0x1F822F0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60020C8")]
	[Address(RVA = "0x1F8241C", Offset = "0x1F8241C", VA = "0x1F8241C")]
	public AkImageSourceSettings()
	{
	}

	[Token(Token = "0x60020C9")]
	[Address(RVA = "0x1F824A0", Offset = "0x1F824A0", VA = "0x1F824A0")]
	public AkImageSourceSettings(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}

	[Token(Token = "0x60020CA")]
	[Address(RVA = "0x1F82560", Offset = "0x1F82560", VA = "0x1F82560")]
	public void SetOneTexture(uint in_texture)
	{
	}

	[Token(Token = "0x60020CB")]
	[Address(RVA = "0x1F825DC", Offset = "0x1F825DC", VA = "0x1F825DC")]
	public void SetName(string in_pName)
	{
	}
}
[Token(Token = "0x200036E")]
public class AkInitSettings : IDisposable
{
	[Token(Token = "0x400187A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400187B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000274")]
	public int pfnAssertHook
	{
		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x1F82A14", Offset = "0x1F82A14", VA = "0x1F82A14")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x1F82A10", Offset = "0x1F82A10", VA = "0x1F82A10")]
		set
		{
		}
	}

	[Token(Token = "0x17000275")]
	public uint uMaxNumPaths
	{
		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x1F82A98", Offset = "0x1F82A98", VA = "0x1F82A98")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x1F82A1C", Offset = "0x1F82A1C", VA = "0x1F82A1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000276")]
	public uint uDefaultPoolSize
	{
		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x1F82B80", Offset = "0x1F82B80", VA = "0x1F82B80")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x1F82B04", Offset = "0x1F82B04", VA = "0x1F82B04")]
		set
		{
		}
	}

	[Token(Token = "0x17000277")]
	public float fDefaultPoolRatioThreshold
	{
		[Token(Token = "0x60020DA")]
		[Address(RVA = "0x1F82C68", Offset = "0x1F82C68", VA = "0x1F82C68")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60020D9")]
		[Address(RVA = "0x1F82BEC", Offset = "0x1F82BEC", VA = "0x1F82BEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000278")]
	public uint uCommandQueueSize
	{
		[Token(Token = "0x60020DC")]
		[Address(RVA = "0x1F82D50", Offset = "0x1F82D50", VA = "0x1F82D50")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60020DB")]
		[Address(RVA = "0x1F82CD4", Offset = "0x1F82CD4", VA = "0x1F82CD4")]
		set
		{
		}
	}

	[Token(Token = "0x17000279")]
	public int uPrepareEventMemoryPoolID
	{
		[Token(Token = "0x60020DE")]
		[Address(RVA = "0x1F82E38", Offset = "0x1F82E38", VA = "0x1F82E38")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60020DD")]
		[Address(RVA = "0x1F82DBC", Offset = "0x1F82DBC", VA = "0x1F82DBC")]
		set
		{
		}
	}

	[Token(Token = "0x1700027A")]
	public bool bEnableGameSyncPreparation
	{
		[Token(Token = "0x60020E0")]
		[Address(RVA = "0x1F82F20", Offset = "0x1F82F20", VA = "0x1F82F20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60020DF")]
		[Address(RVA = "0x1F82EA4", Offset = "0x1F82EA4", VA = "0x1F82EA4")]
		set
		{
		}
	}

	[Token(Token = "0x1700027B")]
	public uint uContinuousPlaybackLookAhead
	{
		[Token(Token = "0x60020E2")]
		[Address(RVA = "0x1F83008", Offset = "0x1F83008", VA = "0x1F83008")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60020E1")]
		[Address(RVA = "0x1F82F8C", Offset = "0x1F82F8C", VA = "0x1F82F8C")]
		set
		{
		}
	}

	[Token(Token = "0x1700027C")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x60020E4")]
		[Address(RVA = "0x1F830F0", Offset = "0x1F830F0", VA = "0x1F830F0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60020E3")]
		[Address(RVA = "0x1F83074", Offset = "0x1F83074", VA = "0x1F83074")]
		set
		{
		}
	}

	[Token(Token = "0x1700027D")]
	public uint uMonitorPoolSize
	{
		[Token(Token = "0x60020E6")]
		[Address(RVA = "0x1F831D8", Offset = "0x1F831D8", VA = "0x1F831D8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60020E5")]
		[Address(RVA = "0x1F8315C", Offset = "0x1F8315C", VA = "0x1F8315C")]
		set
		{
		}
	}

	[Token(Token = "0x1700027E")]
	public uint uMonitorQueuePoolSize
	{
		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x1F832C0", Offset = "0x1F832C0", VA = "0x1F832C0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x1F83244", Offset = "0x1F83244", VA = "0x1F83244")]
		set
		{
		}
	}

	[Token(Token = "0x1700027F")]
	public AkOutputSettings settingsMainOutput
	{
		[Token(Token = "0x60020EA")]
		[Address(RVA = "0x1F83424", Offset = "0x1F83424", VA = "0x1F83424")]
		get
		{
			return null;
		}
		[Token(Token = "0x60020E9")]
		[Address(RVA = "0x1F8332C", Offset = "0x1F8332C", VA = "0x1F8332C")]
		set
		{
		}
	}

	[Token(Token = "0x17000280")]
	public uint uMaxHardwareTimeoutMs
	{
		[Token(Token = "0x60020EC")]
		[Address(RVA = "0x1F83590", Offset = "0x1F83590", VA = "0x1F83590")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60020EB")]
		[Address(RVA = "0x1F83514", Offset = "0x1F83514", VA = "0x1F83514")]
		set
		{
		}
	}

	[Token(Token = "0x17000281")]
	public bool bUseSoundBankMgrThread
	{
		[Token(Token = "0x60020EE")]
		[Address(RVA = "0x1F83678", Offset = "0x1F83678", VA = "0x1F83678")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60020ED")]
		[Address(RVA = "0x1F835FC", Offset = "0x1F835FC", VA = "0x1F835FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000282")]
	public bool bUseLEngineThread
	{
		[Token(Token = "0x60020F0")]
		[Address(RVA = "0x1F83760", Offset = "0x1F83760", VA = "0x1F83760")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60020EF")]
		[Address(RVA = "0x1F836E4", Offset = "0x1F836E4", VA = "0x1F836E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000283")]
	public string szPluginDLLPath
	{
		[Token(Token = "0x60020F2")]
		[Address(RVA = "0x1F83848", Offset = "0x1F83848", VA = "0x1F83848")]
		get
		{
			return null;
		}
		[Token(Token = "0x60020F1")]
		[Address(RVA = "0x1F837CC", Offset = "0x1F837CC", VA = "0x1F837CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000284")]
	public AkFloorPlane eFloorPlane
	{
		[Token(Token = "0x60020F4")]
		[Address(RVA = "0x1F83964", Offset = "0x1F83964", VA = "0x1F83964")]
		get
		{
			return default(AkFloorPlane);
		}
		[Token(Token = "0x60020F3")]
		[Address(RVA = "0x1F838E8", Offset = "0x1F838E8", VA = "0x1F838E8")]
		set
		{
		}
	}

	[Token(Token = "0x60020CE")]
	[Address(RVA = "0x1F827B0", Offset = "0x1F827B0", VA = "0x1F827B0")]
	internal AkInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60020CF")]
	[Address(RVA = "0x1F827F0", Offset = "0x1F827F0", VA = "0x1F827F0")]
	internal static IntPtr getCPtr(AkInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60020D0")]
	[Address(RVA = "0x1F82840", Offset = "0x1F82840", VA = "0x1F82840", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60020D1")]
	[Address(RVA = "0x1F82874", Offset = "0x1F82874", VA = "0x1F82874", Slot = "1")]
	~AkInitSettings()
	{
	}

	[Token(Token = "0x60020D2")]
	[Address(RVA = "0x1F828E4", Offset = "0x1F828E4", VA = "0x1F828E4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60020F5")]
	[Address(RVA = "0x1F839D0", Offset = "0x1F839D0", VA = "0x1F839D0")]
	public AkInitSettings()
	{
	}
}
[Token(Token = "0x200036F")]
public class AkInitializationSettings : IDisposable
{
	[Token(Token = "0x400187C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400187D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000285")]
	public AkMemSettings memSettings
	{
		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x1F83E30", Offset = "0x1F83E30", VA = "0x1F83E30")]
		get
		{
			return null;
		}
		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x1F83D38", Offset = "0x1F83D38", VA = "0x1F83D38")]
		set
		{
		}
	}

	[Token(Token = "0x17000286")]
	public AkStreamMgrSettings streamMgrSettings
	{
		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x1F83FB0", Offset = "0x1F83FB0", VA = "0x1F83FB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x1F83F20", Offset = "0x1F83F20", VA = "0x1F83F20")]
		set
		{
		}
	}

	[Token(Token = "0x17000287")]
	public AkDeviceSettings deviceSettings
	{
		[Token(Token = "0x6002101")]
		[Address(RVA = "0x1F840F0", Offset = "0x1F840F0", VA = "0x1F840F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002100")]
		[Address(RVA = "0x1F84060", Offset = "0x1F84060", VA = "0x1F84060")]
		set
		{
		}
	}

	[Token(Token = "0x17000288")]
	public AkInitSettings initSettings
	{
		[Token(Token = "0x6002103")]
		[Address(RVA = "0x1F84248", Offset = "0x1F84248", VA = "0x1F84248")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002102")]
		[Address(RVA = "0x1F841A0", Offset = "0x1F841A0", VA = "0x1F841A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000289")]
	public AkPlatformInitSettings platformSettings
	{
		[Token(Token = "0x6002105")]
		[Address(RVA = "0x1F843F0", Offset = "0x1F843F0", VA = "0x1F843F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002104")]
		[Address(RVA = "0x1F842F8", Offset = "0x1F842F8", VA = "0x1F842F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700028A")]
	public AkMusicSettings musicSettings
	{
		[Token(Token = "0x6002107")]
		[Address(RVA = "0x1F845D8", Offset = "0x1F845D8", VA = "0x1F845D8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002106")]
		[Address(RVA = "0x1F844E0", Offset = "0x1F844E0", VA = "0x1F844E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700028B")]
	public uint preparePoolSize
	{
		[Token(Token = "0x6002109")]
		[Address(RVA = "0x1F84744", Offset = "0x1F84744", VA = "0x1F84744")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002108")]
		[Address(RVA = "0x1F846C8", Offset = "0x1F846C8", VA = "0x1F846C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700028C")]
	public AkCommunicationSettings communicationSettings
	{
		[Token(Token = "0x600210B")]
		[Address(RVA = "0x1F84840", Offset = "0x1F84840", VA = "0x1F84840")]
		get
		{
			return null;
		}
		[Token(Token = "0x600210A")]
		[Address(RVA = "0x1F847B0", Offset = "0x1F847B0", VA = "0x1F847B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700028D")]
	public AkUnityPlatformSpecificSettings unityPlatformSpecificSettings
	{
		[Token(Token = "0x600210D")]
		[Address(RVA = "0x1F84980", Offset = "0x1F84980", VA = "0x1F84980")]
		get
		{
			return null;
		}
		[Token(Token = "0x600210C")]
		[Address(RVA = "0x1F848F0", Offset = "0x1F848F0", VA = "0x1F848F0")]
		set
		{
		}
	}

	[Token(Token = "0x60020F6")]
	[Address(RVA = "0x1F83A54", Offset = "0x1F83A54", VA = "0x1F83A54")]
	internal AkInitializationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60020F7")]
	[Address(RVA = "0x1F83A94", Offset = "0x1F83A94", VA = "0x1F83A94")]
	internal static IntPtr getCPtr(AkInitializationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60020F8")]
	[Address(RVA = "0x1F83AE4", Offset = "0x1F83AE4", VA = "0x1F83AE4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60020F9")]
	[Address(RVA = "0x1F83B18", Offset = "0x1F83B18", VA = "0x1F83B18", Slot = "1")]
	~AkInitializationSettings()
	{
	}

	[Token(Token = "0x60020FA")]
	[Address(RVA = "0x1F83B88", Offset = "0x1F83B88", VA = "0x1F83B88", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60020FB")]
	[Address(RVA = "0x1F83CB4", Offset = "0x1F83CB4", VA = "0x1F83CB4")]
	public AkInitializationSettings()
	{
	}
}
[Token(Token = "0x2000370")]
public class AkIterator : IDisposable
{
	[Token(Token = "0x400187E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400187F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700028E")]
	public AkPlaylistItem pItem
	{
		[Token(Token = "0x6002114")]
		[Address(RVA = "0x1F85314", Offset = "0x1F85314", VA = "0x1F85314")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002113")]
		[Address(RVA = "0x1F8521C", Offset = "0x1F8521C", VA = "0x1F8521C")]
		set
		{
		}
	}

	[Token(Token = "0x600210E")]
	[Address(RVA = "0x1F84FBC", Offset = "0x1F84FBC", VA = "0x1F84FBC")]
	internal AkIterator(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600210F")]
	[Address(RVA = "0x1F84FFC", Offset = "0x1F84FFC", VA = "0x1F84FFC")]
	internal static IntPtr getCPtr(AkIterator obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002110")]
	[Address(RVA = "0x1F8504C", Offset = "0x1F8504C", VA = "0x1F8504C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002111")]
	[Address(RVA = "0x1F85080", Offset = "0x1F85080", VA = "0x1F85080", Slot = "1")]
	~AkIterator()
	{
	}

	[Token(Token = "0x6002112")]
	[Address(RVA = "0x1F850F0", Offset = "0x1F850F0", VA = "0x1F850F0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6002115")]
	[Address(RVA = "0x1F85404", Offset = "0x1F85404", VA = "0x1F85404")]
	public AkIterator NextIter()
	{
		return null;
	}

	[Token(Token = "0x6002116")]
	[Address(RVA = "0x1F854A4", Offset = "0x1F854A4", VA = "0x1F854A4")]
	public AkIterator PrevIter()
	{
		return null;
	}

	[Token(Token = "0x6002117")]
	[Address(RVA = "0x1F85544", Offset = "0x1F85544", VA = "0x1F85544")]
	public AkPlaylistItem GetItem()
	{
		return null;
	}

	[Token(Token = "0x6002118")]
	[Address(RVA = "0x1F855E4", Offset = "0x1F855E4", VA = "0x1F855E4")]
	public bool IsEqualTo(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x6002119")]
	[Address(RVA = "0x1F8568C", Offset = "0x1F8568C", VA = "0x1F8568C")]
	public bool IsDifferentFrom(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x600211A")]
	[Address(RVA = "0x1F85734", Offset = "0x1F85734", VA = "0x1F85734")]
	public AkIterator()
	{
	}
}
[Token(Token = "0x2000371")]
public enum AkMIDICcTypes
{
	[Token(Token = "0x4001881")]
	BANK_SELECT_COARSE = 0,
	[Token(Token = "0x4001882")]
	MOD_WHEEL_COARSE = 1,
	[Token(Token = "0x4001883")]
	BREATH_CTRL_COARSE = 2,
	[Token(Token = "0x4001884")]
	CTRL_3_COARSE = 3,
	[Token(Token = "0x4001885")]
	FOOT_PEDAL_COARSE = 4,
	[Token(Token = "0x4001886")]
	PORTAMENTO_COARSE = 5,
	[Token(Token = "0x4001887")]
	DATA_ENTRY_COARSE = 6,
	[Token(Token = "0x4001888")]
	VOLUME_COARSE = 7,
	[Token(Token = "0x4001889")]
	BALANCE_COARSE = 8,
	[Token(Token = "0x400188A")]
	CTRL_9_COARSE = 9,
	[Token(Token = "0x400188B")]
	PAN_POSITION_COARSE = 10,
	[Token(Token = "0x400188C")]
	EXPRESSION_COARSE = 11,
	[Token(Token = "0x400188D")]
	EFFECT_CTRL_1_COARSE = 12,
	[Token(Token = "0x400188E")]
	EFFECT_CTRL_2_COARSE = 13,
	[Token(Token = "0x400188F")]
	CTRL_14_COARSE = 14,
	[Token(Token = "0x4001890")]
	CTRL_15_COARSE = 15,
	[Token(Token = "0x4001891")]
	GEN_SLIDER_1 = 16,
	[Token(Token = "0x4001892")]
	GEN_SLIDER_2 = 17,
	[Token(Token = "0x4001893")]
	GEN_SLIDER_3 = 18,
	[Token(Token = "0x4001894")]
	GEN_SLIDER_4 = 19,
	[Token(Token = "0x4001895")]
	CTRL_20_COARSE = 20,
	[Token(Token = "0x4001896")]
	CTRL_21_COARSE = 21,
	[Token(Token = "0x4001897")]
	CTRL_22_COARSE = 22,
	[Token(Token = "0x4001898")]
	CTRL_23_COARSE = 23,
	[Token(Token = "0x4001899")]
	CTRL_24_COARSE = 24,
	[Token(Token = "0x400189A")]
	CTRL_25_COARSE = 25,
	[Token(Token = "0x400189B")]
	CTRL_26_COARSE = 26,
	[Token(Token = "0x400189C")]
	CTRL_27_COARSE = 27,
	[Token(Token = "0x400189D")]
	CTRL_28_COARSE = 28,
	[Token(Token = "0x400189E")]
	CTRL_29_COARSE = 29,
	[Token(Token = "0x400189F")]
	CTRL_30_COARSE = 30,
	[Token(Token = "0x40018A0")]
	CTRL_31_COARSE = 31,
	[Token(Token = "0x40018A1")]
	BANK_SELECT_FINE = 32,
	[Token(Token = "0x40018A2")]
	MOD_WHEEL_FINE = 33,
	[Token(Token = "0x40018A3")]
	BREATH_CTRL_FINE = 34,
	[Token(Token = "0x40018A4")]
	CTRL_3_FINE = 35,
	[Token(Token = "0x40018A5")]
	FOOT_PEDAL_FINE = 36,
	[Token(Token = "0x40018A6")]
	PORTAMENTO_FINE = 37,
	[Token(Token = "0x40018A7")]
	DATA_ENTRY_FINE = 38,
	[Token(Token = "0x40018A8")]
	VOLUME_FINE = 39,
	[Token(Token = "0x40018A9")]
	BALANCE_FINE = 40,
	[Token(Token = "0x40018AA")]
	CTRL_9_FINE = 41,
	[Token(Token = "0x40018AB")]
	PAN_POSITION_FINE = 42,
	[Token(Token = "0x40018AC")]
	EXPRESSION_FINE = 43,
	[Token(Token = "0x40018AD")]
	EFFECT_CTRL_1_FINE = 44,
	[Token(Token = "0x40018AE")]
	EFFECT_CTRL_2_FINE = 45,
	[Token(Token = "0x40018AF")]
	CTRL_14_FINE = 46,
	[Token(Token = "0x40018B0")]
	CTRL_15_FINE = 47,
	[Token(Token = "0x40018B1")]
	CTRL_20_FINE = 52,
	[Token(Token = "0x40018B2")]
	CTRL_21_FINE = 53,
	[Token(Token = "0x40018B3")]
	CTRL_22_FINE = 54,
	[Token(Token = "0x40018B4")]
	CTRL_23_FINE = 55,
	[Token(Token = "0x40018B5")]
	CTRL_24_FINE = 56,
	[Token(Token = "0x40018B6")]
	CTRL_25_FINE = 57,
	[Token(Token = "0x40018B7")]
	CTRL_26_FINE = 58,
	[Token(Token = "0x40018B8")]
	CTRL_27_FINE = 59,
	[Token(Token = "0x40018B9")]
	CTRL_28_FINE = 60,
	[Token(Token = "0x40018BA")]
	CTRL_29_FINE = 61,
	[Token(Token = "0x40018BB")]
	CTRL_30_FINE = 62,
	[Token(Token = "0x40018BC")]
	CTRL_31_FINE = 63,
	[Token(Token = "0x40018BD")]
	HOLD_PEDAL = 64,
	[Token(Token = "0x40018BE")]
	PORTAMENTO_ON_OFF = 65,
	[Token(Token = "0x40018BF")]
	SUSTENUTO_PEDAL = 66,
	[Token(Token = "0x40018C0")]
	SOFT_PEDAL = 67,
	[Token(Token = "0x40018C1")]
	LEGATO_PEDAL = 68,
	[Token(Token = "0x40018C2")]
	HOLD_PEDAL_2 = 69,
	[Token(Token = "0x40018C3")]
	SOUND_VARIATION = 70,
	[Token(Token = "0x40018C4")]
	SOUND_TIMBRE = 71,
	[Token(Token = "0x40018C5")]
	SOUND_RELEASE_TIME = 72,
	[Token(Token = "0x40018C6")]
	SOUND_ATTACK_TIME = 73,
	[Token(Token = "0x40018C7")]
	SOUND_BRIGHTNESS = 74,
	[Token(Token = "0x40018C8")]
	SOUND_CTRL_6 = 75,
	[Token(Token = "0x40018C9")]
	SOUND_CTRL_7 = 76,
	[Token(Token = "0x40018CA")]
	SOUND_CTRL_8 = 77,
	[Token(Token = "0x40018CB")]
	SOUND_CTRL_9 = 78,
	[Token(Token = "0x40018CC")]
	SOUND_CTRL_10 = 79,
	[Token(Token = "0x40018CD")]
	GENERAL_BUTTON_1 = 80,
	[Token(Token = "0x40018CE")]
	GENERAL_BUTTON_2 = 81,
	[Token(Token = "0x40018CF")]
	GENERAL_BUTTON_3 = 82,
	[Token(Token = "0x40018D0")]
	GENERAL_BUTTON_4 = 83,
	[Token(Token = "0x40018D1")]
	REVERB_LEVEL = 91,
	[Token(Token = "0x40018D2")]
	TREMOLO_LEVEL = 92,
	[Token(Token = "0x40018D3")]
	CHORUS_LEVEL = 93,
	[Token(Token = "0x40018D4")]
	CELESTE_LEVEL = 94,
	[Token(Token = "0x40018D5")]
	PHASER_LEVEL = 95,
	[Token(Token = "0x40018D6")]
	DATA_BUTTON_P1 = 96,
	[Token(Token = "0x40018D7")]
	DATA_BUTTON_M1 = 97,
	[Token(Token = "0x40018D8")]
	NON_REGISTER_COARSE = 98,
	[Token(Token = "0x40018D9")]
	NON_REGISTER_FINE = 99,
	[Token(Token = "0x40018DA")]
	ALL_SOUND_OFF = 120,
	[Token(Token = "0x40018DB")]
	ALL_CONTROLLERS_OFF = 121,
	[Token(Token = "0x40018DC")]
	LOCAL_KEYBOARD = 122,
	[Token(Token = "0x40018DD")]
	ALL_NOTES_OFF = 123,
	[Token(Token = "0x40018DE")]
	OMNI_MODE_OFF = 124,
	[Token(Token = "0x40018DF")]
	OMNI_MODE_ON = 125,
	[Token(Token = "0x40018E0")]
	OMNI_MONOPHONIC_ON = 126,
	[Token(Token = "0x40018E1")]
	OMNI_POLYPHONIC_ON = 127
}
[Token(Token = "0x2000372")]
public class AkMIDIEvent : IDisposable
{
	[Token(Token = "0x2000609")]
	public class tGen : IDisposable
	{
		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000478")]
		public byte byParam1
		{
			[Token(Token = "0x6002D67")]
			[Address(RVA = "0x1F88598", Offset = "0x1F88598", VA = "0x1F88598")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002D66")]
			[Address(RVA = "0x1F8851C", Offset = "0x1F8851C", VA = "0x1F8851C")]
			set
			{
			}
		}

		[Token(Token = "0x17000479")]
		public byte byParam2
		{
			[Token(Token = "0x6002D69")]
			[Address(RVA = "0x1F88680", Offset = "0x1F88680", VA = "0x1F88680")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002D68")]
			[Address(RVA = "0x1F88604", Offset = "0x1F88604", VA = "0x1F88604")]
			set
			{
			}
		}

		[Token(Token = "0x6002D61")]
		[Address(RVA = "0x1F865C0", Offset = "0x1F865C0", VA = "0x1F865C0")]
		internal tGen(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6002D62")]
		[Address(RVA = "0x1F864C0", Offset = "0x1F864C0", VA = "0x1F864C0")]
		internal static IntPtr getCPtr(tGen obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002D63")]
		[Address(RVA = "0x1F8834C", Offset = "0x1F8834C", VA = "0x1F8834C", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6002D64")]
		[Address(RVA = "0x1F88380", Offset = "0x1F88380", VA = "0x1F88380", Slot = "1")]
		~tGen()
		{
		}

		[Token(Token = "0x6002D65")]
		[Address(RVA = "0x1F883F0", Offset = "0x1F883F0", VA = "0x1F883F0", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002D6A")]
		[Address(RVA = "0x1F886EC", Offset = "0x1F886EC", VA = "0x1F886EC")]
		public tGen()
		{
		}
	}

	[Token(Token = "0x200060A")]
	public class tNoteOnOff : IDisposable
	{
		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700047A")]
		public byte byNote
		{
			[Token(Token = "0x6002D71")]
			[Address(RVA = "0x1F88DE0", Offset = "0x1F88DE0", VA = "0x1F88DE0")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002D70")]
			[Address(RVA = "0x1F88D64", Offset = "0x1F88D64", VA = "0x1F88D64")]
			set
			{
			}
		}

		[Token(Token = "0x1700047B")]
		public byte byVelocity
		{
			[Token(Token = "0x6002D73")]
			[Address(RVA = "0x1F88EC8", Offset = "0x1F88EC8", VA = "0x1F88EC8")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002D72")]
			[Address(RVA = "0x1F88E4C", Offset = "0x1F88E4C", VA = "0x1F88E4C")]
			set
			{
			}
		}

		[Token(Token = "0x6002D6B")]
		[Address(RVA = "0x1F86990", Offset = "0x1F86990", VA = "0x1F86990")]
		internal tNoteOnOff(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6002D6C")]
		[Address(RVA = "0x1F86890", Offset = "0x1F86890", VA = "0x1F86890")]
		internal static IntPtr getCPtr(tNoteOnOff obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002D6D")]
		[Address(RVA = "0x1F88B94", Offset = "0x1F88B94", VA = "0x1F88B94", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6002D6E")]
		[Address(RVA = "0x1F88BC8", Offset = "0x1F88BC8", VA = "0x1F88BC8", Slot = "1")]
		~tNoteOnOff()
		{
		}

		[Token(Token = "0x6002D6F")]
		[Address(RVA = "0x1F88C38", Offset = "0x1F88C38", VA = "0x1F88C38", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002D74")]
		[Address(RVA = "0x1F88F34", Offset = "0x1F88F34", VA = "0x1F88F34")]
		public tNoteOnOff()
		{
		}
	}

	[Token(Token = "0x200060B")]
	public class tCc : IDisposable
	{
		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700047C")]
		public byte byCc
		{
			[Token(Token = "0x6002D7B")]
			[Address(RVA = "0x1F87E38", Offset = "0x1F87E38", VA = "0x1F87E38")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002D7A")]
			[Address(RVA = "0x1F87DBC", Offset = "0x1F87DBC", VA = "0x1F87DBC")]
			set
			{
			}
		}

		[Token(Token = "0x1700047D")]
		public byte byValue
		{
			[Token(Token = "0x6002D7D")]
			[Address(RVA = "0x1F87F20", Offset = "0x1F87F20", VA = "0x1F87F20")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002D7C")]
			[Address(RVA = "0x1F87EA4", Offset = "0x1F87EA4", VA = "0x1F87EA4")]
			set
			{
			}
		}

		[Token(Token = "0x6002D75")]
		[Address(RVA = "0x1F867A8", Offset = "0x1F867A8", VA = "0x1F867A8")]
		internal tCc(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6002D76")]
		[Address(RVA = "0x1F866A8", Offset = "0x1F866A8", VA = "0x1F866A8")]
		internal static IntPtr getCPtr(tCc obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002D77")]
		[Address(RVA = "0x1F87BEC", Offset = "0x1F87BEC", VA = "0x1F87BEC", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6002D78")]
		[Address(RVA = "0x1F87C20", Offset = "0x1F87C20", VA = "0x1F87C20", Slot = "1")]
		~tCc()
		{
		}

		[Token(Token = "0x6002D79")]
		[Address(RVA = "0x1F87C90", Offset = "0x1F87C90", VA = "0x1F87C90", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002D7E")]
		[Address(RVA = "0x1F87F8C", Offset = "0x1F87F8C", VA = "0x1F87F8C")]
		public tCc()
		{
		}
	}

	[Token(Token = "0x200060C")]
	public class tPitchBend : IDisposable
	{
		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x1700047E")]
		public byte byValueLsb
		{
			[Token(Token = "0x6002D85")]
			[Address(RVA = "0x1F89204", Offset = "0x1F89204", VA = "0x1F89204")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002D84")]
			[Address(RVA = "0x1F89188", Offset = "0x1F89188", VA = "0x1F89188")]
			set
			{
			}
		}

		[Token(Token = "0x1700047F")]
		public byte byValueMsb
		{
			[Token(Token = "0x6002D87")]
			[Address(RVA = "0x1F892EC", Offset = "0x1F892EC", VA = "0x1F892EC")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002D86")]
			[Address(RVA = "0x1F89270", Offset = "0x1F89270", VA = "0x1F89270")]
			set
			{
			}
		}

		[Token(Token = "0x6002D7F")]
		[Address(RVA = "0x1F86B78", Offset = "0x1F86B78", VA = "0x1F86B78")]
		internal tPitchBend(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6002D80")]
		[Address(RVA = "0x1F86A78", Offset = "0x1F86A78", VA = "0x1F86A78")]
		internal static IntPtr getCPtr(tPitchBend obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002D81")]
		[Address(RVA = "0x1F88FB8", Offset = "0x1F88FB8", VA = "0x1F88FB8", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6002D82")]
		[Address(RVA = "0x1F88FEC", Offset = "0x1F88FEC", VA = "0x1F88FEC", Slot = "1")]
		~tPitchBend()
		{
		}

		[Token(Token = "0x6002D83")]
		[Address(RVA = "0x1F8905C", Offset = "0x1F8905C", VA = "0x1F8905C", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002D88")]
		[Address(RVA = "0x1F89358", Offset = "0x1F89358", VA = "0x1F89358")]
		public tPitchBend()
		{
		}
	}

	[Token(Token = "0x200060D")]
	public class tNoteAftertouch : IDisposable
	{
		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000480")]
		public byte byNote
		{
			[Token(Token = "0x6002D8F")]
			[Address(RVA = "0x1F889BC", Offset = "0x1F889BC", VA = "0x1F889BC")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002D8E")]
			[Address(RVA = "0x1F88940", Offset = "0x1F88940", VA = "0x1F88940")]
			set
			{
			}
		}

		[Token(Token = "0x17000481")]
		public byte byValue
		{
			[Token(Token = "0x6002D91")]
			[Address(RVA = "0x1F88AA4", Offset = "0x1F88AA4", VA = "0x1F88AA4")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002D90")]
			[Address(RVA = "0x1F88A28", Offset = "0x1F88A28", VA = "0x1F88A28")]
			set
			{
			}
		}

		[Token(Token = "0x6002D89")]
		[Address(RVA = "0x1F86D60", Offset = "0x1F86D60", VA = "0x1F86D60")]
		internal tNoteAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6002D8A")]
		[Address(RVA = "0x1F86C60", Offset = "0x1F86C60", VA = "0x1F86C60")]
		internal static IntPtr getCPtr(tNoteAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002D8B")]
		[Address(RVA = "0x1F88770", Offset = "0x1F88770", VA = "0x1F88770", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6002D8C")]
		[Address(RVA = "0x1F887A4", Offset = "0x1F887A4", VA = "0x1F887A4", Slot = "1")]
		~tNoteAftertouch()
		{
		}

		[Token(Token = "0x6002D8D")]
		[Address(RVA = "0x1F88814", Offset = "0x1F88814", VA = "0x1F88814", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002D92")]
		[Address(RVA = "0x1F88B10", Offset = "0x1F88B10", VA = "0x1F88B10")]
		public tNoteAftertouch()
		{
		}
	}

	[Token(Token = "0x200060E")]
	public class tChanAftertouch : IDisposable
	{
		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000482")]
		public byte byValue
		{
			[Token(Token = "0x6002D99")]
			[Address(RVA = "0x1F8825C", Offset = "0x1F8825C", VA = "0x1F8825C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002D98")]
			[Address(RVA = "0x1F881E0", Offset = "0x1F881E0", VA = "0x1F881E0")]
			set
			{
			}
		}

		[Token(Token = "0x6002D93")]
		[Address(RVA = "0x1F86F48", Offset = "0x1F86F48", VA = "0x1F86F48")]
		internal tChanAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6002D94")]
		[Address(RVA = "0x1F86E48", Offset = "0x1F86E48", VA = "0x1F86E48")]
		internal static IntPtr getCPtr(tChanAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002D95")]
		[Address(RVA = "0x1F88010", Offset = "0x1F88010", VA = "0x1F88010", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6002D96")]
		[Address(RVA = "0x1F88044", Offset = "0x1F88044", VA = "0x1F88044", Slot = "1")]
		~tChanAftertouch()
		{
		}

		[Token(Token = "0x6002D97")]
		[Address(RVA = "0x1F880B4", Offset = "0x1F880B4", VA = "0x1F880B4", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002D9A")]
		[Address(RVA = "0x1F882C8", Offset = "0x1F882C8", VA = "0x1F882C8")]
		public tChanAftertouch()
		{
		}
	}

	[Token(Token = "0x200060F")]
	public class tProgramChange : IDisposable
	{
		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x17000483")]
		public byte byProgramNum
		{
			[Token(Token = "0x6002DA1")]
			[Address(RVA = "0x1F89628", Offset = "0x1F89628", VA = "0x1F89628")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002DA0")]
			[Address(RVA = "0x1F895AC", Offset = "0x1F895AC", VA = "0x1F895AC")]
			set
			{
			}
		}

		[Token(Token = "0x6002D9B")]
		[Address(RVA = "0x1F87130", Offset = "0x1F87130", VA = "0x1F87130")]
		internal tProgramChange(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x6002D9C")]
		[Address(RVA = "0x1F87030", Offset = "0x1F87030", VA = "0x1F87030")]
		internal static IntPtr getCPtr(tProgramChange obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6002D9D")]
		[Address(RVA = "0x1F893DC", Offset = "0x1F893DC", VA = "0x1F893DC", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x6002D9E")]
		[Address(RVA = "0x1F89410", Offset = "0x1F89410", VA = "0x1F89410", Slot = "1")]
		~tProgramChange()
		{
		}

		[Token(Token = "0x6002D9F")]
		[Address(RVA = "0x1F89480", Offset = "0x1F89480", VA = "0x1F89480", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6002DA2")]
		[Address(RVA = "0x1F89694", Offset = "0x1F89694", VA = "0x1F89694")]
		public tProgramChange()
		{
		}
	}

	[Token(Token = "0x40018E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40018E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700028F")]
	public byte byChan
	{
		[Token(Token = "0x6002121")]
		[Address(RVA = "0x1F863AC", Offset = "0x1F863AC", VA = "0x1F863AC")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6002120")]
		[Address(RVA = "0x1F86330", Offset = "0x1F86330", VA = "0x1F86330")]
		set
		{
		}
	}

	[Token(Token = "0x17000290")]
	public tGen Gen
	{
		[Token(Token = "0x6002123")]
		[Address(RVA = "0x1F86510", Offset = "0x1F86510", VA = "0x1F86510")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002122")]
		[Address(RVA = "0x1F86418", Offset = "0x1F86418", VA = "0x1F86418")]
		set
		{
		}
	}

	[Token(Token = "0x17000291")]
	public tCc Cc
	{
		[Token(Token = "0x6002125")]
		[Address(RVA = "0x1F866F8", Offset = "0x1F866F8", VA = "0x1F866F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002124")]
		[Address(RVA = "0x1F86600", Offset = "0x1F86600", VA = "0x1F86600")]
		set
		{
		}
	}

	[Token(Token = "0x17000292")]
	public tNoteOnOff NoteOnOff
	{
		[Token(Token = "0x6002127")]
		[Address(RVA = "0x1F868E0", Offset = "0x1F868E0", VA = "0x1F868E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002126")]
		[Address(RVA = "0x1F867E8", Offset = "0x1F867E8", VA = "0x1F867E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000293")]
	public tPitchBend PitchBend
	{
		[Token(Token = "0x6002129")]
		[Address(RVA = "0x1F86AC8", Offset = "0x1F86AC8", VA = "0x1F86AC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002128")]
		[Address(RVA = "0x1F869D0", Offset = "0x1F869D0", VA = "0x1F869D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000294")]
	public tNoteAftertouch NoteAftertouch
	{
		[Token(Token = "0x600212B")]
		[Address(RVA = "0x1F86CB0", Offset = "0x1F86CB0", VA = "0x1F86CB0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600212A")]
		[Address(RVA = "0x1F86BB8", Offset = "0x1F86BB8", VA = "0x1F86BB8")]
		set
		{
		}
	}

	[Token(Token = "0x17000295")]
	public tChanAftertouch ChanAftertouch
	{
		[Token(Token = "0x600212D")]
		[Address(RVA = "0x1F86E98", Offset = "0x1F86E98", VA = "0x1F86E98")]
		get
		{
			return null;
		}
		[Token(Token = "0x600212C")]
		[Address(RVA = "0x1F86DA0", Offset = "0x1F86DA0", VA = "0x1F86DA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000296")]
	public tProgramChange ProgramChange
	{
		[Token(Token = "0x600212F")]
		[Address(RVA = "0x1F87080", Offset = "0x1F87080", VA = "0x1F87080")]
		get
		{
			return null;
		}
		[Token(Token = "0x600212E")]
		[Address(RVA = "0x1F86F88", Offset = "0x1F86F88", VA = "0x1F86F88")]
		set
		{
		}
	}

	[Token(Token = "0x17000297")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x6002131")]
		[Address(RVA = "0x1F871EC", Offset = "0x1F871EC", VA = "0x1F871EC")]
		get
		{
			return default(AkMIDIEventTypes);
		}
		[Token(Token = "0x6002130")]
		[Address(RVA = "0x1F87170", Offset = "0x1F87170", VA = "0x1F87170")]
		set
		{
		}
	}

	[Token(Token = "0x17000298")]
	public byte byOnOffNote
	{
		[Token(Token = "0x6002133")]
		[Address(RVA = "0x1F872D4", Offset = "0x1F872D4", VA = "0x1F872D4")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6002132")]
		[Address(RVA = "0x1F87258", Offset = "0x1F87258", VA = "0x1F87258")]
		set
		{
		}
	}

	[Token(Token = "0x17000299")]
	public byte byVelocity
	{
		[Token(Token = "0x6002135")]
		[Address(RVA = "0x1F873BC", Offset = "0x1F873BC", VA = "0x1F873BC")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6002134")]
		[Address(RVA = "0x1F87340", Offset = "0x1F87340", VA = "0x1F87340")]
		set
		{
		}
	}

	[Token(Token = "0x1700029A")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x6002137")]
		[Address(RVA = "0x1F874A4", Offset = "0x1F874A4", VA = "0x1F874A4")]
		get
		{
			return default(AkMIDICcTypes);
		}
		[Token(Token = "0x6002136")]
		[Address(RVA = "0x1F87428", Offset = "0x1F87428", VA = "0x1F87428")]
		set
		{
		}
	}

	[Token(Token = "0x1700029B")]
	public byte byCcValue
	{
		[Token(Token = "0x6002139")]
		[Address(RVA = "0x1F8758C", Offset = "0x1F8758C", VA = "0x1F8758C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6002138")]
		[Address(RVA = "0x1F87510", Offset = "0x1F87510", VA = "0x1F87510")]
		set
		{
		}
	}

	[Token(Token = "0x1700029C")]
	public byte byValueLsb
	{
		[Token(Token = "0x600213B")]
		[Address(RVA = "0x1F87674", Offset = "0x1F87674", VA = "0x1F87674")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600213A")]
		[Address(RVA = "0x1F875F8", Offset = "0x1F875F8", VA = "0x1F875F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700029D")]
	public byte byValueMsb
	{
		[Token(Token = "0x600213D")]
		[Address(RVA = "0x1F8775C", Offset = "0x1F8775C", VA = "0x1F8775C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600213C")]
		[Address(RVA = "0x1F876E0", Offset = "0x1F876E0", VA = "0x1F876E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700029E")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x600213F")]
		[Address(RVA = "0x1F87844", Offset = "0x1F87844", VA = "0x1F87844")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600213E")]
		[Address(RVA = "0x1F877C8", Offset = "0x1F877C8", VA = "0x1F877C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700029F")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x6002141")]
		[Address(RVA = "0x1F8792C", Offset = "0x1F8792C", VA = "0x1F8792C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6002140")]
		[Address(RVA = "0x1F878B0", Offset = "0x1F878B0", VA = "0x1F878B0")]
		set
		{
		}
	}

	[Token(Token = "0x170002A0")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x6002143")]
		[Address(RVA = "0x1F87A14", Offset = "0x1F87A14", VA = "0x1F87A14")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6002142")]
		[Address(RVA = "0x1F87998", Offset = "0x1F87998", VA = "0x1F87998")]
		set
		{
		}
	}

	[Token(Token = "0x170002A1")]
	public byte byProgramNum
	{
		[Token(Token = "0x6002145")]
		[Address(RVA = "0x1F87AFC", Offset = "0x1F87AFC", VA = "0x1F87AFC")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6002144")]
		[Address(RVA = "0x1F87A80", Offset = "0x1F87A80", VA = "0x1F87A80")]
		set
		{
		}
	}

	[Token(Token = "0x600211B")]
	[Address(RVA = "0x1F860D0", Offset = "0x1F860D0", VA = "0x1F860D0")]
	internal AkMIDIEvent(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600211C")]
	[Address(RVA = "0x1F86110", Offset = "0x1F86110", VA = "0x1F86110")]
	internal static IntPtr getCPtr(AkMIDIEvent obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600211D")]
	[Address(RVA = "0x1F86160", Offset = "0x1F86160", VA = "0x1F86160", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600211E")]
	[Address(RVA = "0x1F86194", Offset = "0x1F86194", VA = "0x1F86194", Slot = "1")]
	~AkMIDIEvent()
	{
	}

	[Token(Token = "0x600211F")]
	[Address(RVA = "0x1F86204", Offset = "0x1F86204", VA = "0x1F86204", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6002146")]
	[Address(RVA = "0x1F87B68", Offset = "0x1F87B68", VA = "0x1F87B68")]
	public AkMIDIEvent()
	{
	}
}
[Token(Token = "0x2000373")]
public class AkMIDIEventCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x40018E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170002A2")]
	public byte byChan
	{
		[Token(Token = "0x600214C")]
		[Address(RVA = "0x1F89A1C", Offset = "0x1F89A1C", VA = "0x1F89A1C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A3")]
	public byte byParam1
	{
		[Token(Token = "0x600214D")]
		[Address(RVA = "0x1F89A88", Offset = "0x1F89A88", VA = "0x1F89A88")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A4")]
	public byte byParam2
	{
		[Token(Token = "0x600214E")]
		[Address(RVA = "0x1F89AF4", Offset = "0x1F89AF4", VA = "0x1F89AF4")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A5")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x600214F")]
		[Address(RVA = "0x1F89B60", Offset = "0x1F89B60", VA = "0x1F89B60")]
		get
		{
			return default(AkMIDIEventTypes);
		}
	}

	[Token(Token = "0x170002A6")]
	public byte byOnOffNote
	{
		[Token(Token = "0x6002150")]
		[Address(RVA = "0x1F89BCC", Offset = "0x1F89BCC", VA = "0x1F89BCC")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A7")]
	public byte byVelocity
	{
		[Token(Token = "0x6002151")]
		[Address(RVA = "0x1F89C38", Offset = "0x1F89C38", VA = "0x1F89C38")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002A8")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x6002152")]
		[Address(RVA = "0x1F89CA4", Offset = "0x1F89CA4", VA = "0x1F89CA4")]
		get
		{
			return default(AkMIDICcTypes);
		}
	}

	[Token(Token = "0x170002A9")]
	public byte byCcValue
	{
		[Token(Token = "0x6002153")]
		[Address(RVA = "0x1F89D10", Offset = "0x1F89D10", VA = "0x1F89D10")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002AA")]
	public byte byValueLsb
	{
		[Token(Token = "0x6002154")]
		[Address(RVA = "0x1F89D7C", Offset = "0x1F89D7C", VA = "0x1F89D7C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002AB")]
	public byte byValueMsb
	{
		[Token(Token = "0x6002155")]
		[Address(RVA = "0x1F89DE8", Offset = "0x1F89DE8", VA = "0x1F89DE8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002AC")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x6002156")]
		[Address(RVA = "0x1F89E54", Offset = "0x1F89E54", VA = "0x1F89E54")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002AD")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x6002157")]
		[Address(RVA = "0x1F89EC0", Offset = "0x1F89EC0", VA = "0x1F89EC0")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002AE")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x6002158")]
		[Address(RVA = "0x1F89F2C", Offset = "0x1F89F2C", VA = "0x1F89F2C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170002AF")]
	public byte byProgramNum
	{
		[Token(Token = "0x6002159")]
		[Address(RVA = "0x1F89F98", Offset = "0x1F89F98", VA = "0x1F89F98")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x6002147")]
	[Address(RVA = "0x1F89718", Offset = "0x1F89718", VA = "0x1F89718")]
	internal AkMIDIEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002148")]
	[Address(RVA = "0x1F897A8", Offset = "0x1F897A8", VA = "0x1F897A8")]
	internal static IntPtr getCPtr(AkMIDIEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002149")]
	[Address(RVA = "0x1F897F8", Offset = "0x1F897F8", VA = "0x1F897F8", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600214A")]
	[Address(RVA = "0x1F89880", Offset = "0x1F89880", VA = "0x1F89880", Slot = "1")]
	~AkMIDIEventCallbackInfo()
	{
	}

	[Token(Token = "0x600214B")]
	[Address(RVA = "0x1F898E8", Offset = "0x1F898E8", VA = "0x1F898E8", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x600215A")]
	[Address(RVA = "0x1F8A004", Offset = "0x1F8A004", VA = "0x1F8A004")]
	public AkMIDIEventCallbackInfo()
	{
	}
}
[Token(Token = "0x2000374")]
public enum AkMIDIEventTypes
{
	[Token(Token = "0x40018E6")]
	NOTE_OFF = 128,
	[Token(Token = "0x40018E7")]
	NOTE_ON = 144,
	[Token(Token = "0x40018E8")]
	NOTE_AFTERTOUCH = 160,
	[Token(Token = "0x40018E9")]
	CONTROLLER = 176,
	[Token(Token = "0x40018EA")]
	PROGRAM_CHANGE = 192,
	[Token(Token = "0x40018EB")]
	CHANNEL_AFTERTOUCH = 208,
	[Token(Token = "0x40018EC")]
	PITCH_BEND = 224,
	[Token(Token = "0x40018ED")]
	SYSEX = 240,
	[Token(Token = "0x40018EE")]
	ESCAPE = 247,
	[Token(Token = "0x40018EF")]
	META = 255
}
[Token(Token = "0x2000375")]
public class AkMIDIPost : AkMIDIEvent
{
	[Token(Token = "0x40018F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170002B0")]
	public uint uOffset
	{
		[Token(Token = "0x6002161")]
		[Address(RVA = "0x1F8A410", Offset = "0x1F8A410", VA = "0x1F8A410")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002160")]
		[Address(RVA = "0x1F8A394", Offset = "0x1F8A394", VA = "0x1F8A394")]
		set
		{
		}
	}

	[Token(Token = "0x600215B")]
	[Address(RVA = "0x1F8A078", Offset = "0x1F8A078", VA = "0x1F8A078")]
	internal AkMIDIPost(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600215C")]
	[Address(RVA = "0x1F8A114", Offset = "0x1F8A114", VA = "0x1F8A114")]
	internal static IntPtr getCPtr(AkMIDIPost obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600215D")]
	[Address(RVA = "0x1F8A164", Offset = "0x1F8A164", VA = "0x1F8A164", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600215E")]
	[Address(RVA = "0x1F8A1F8", Offset = "0x1F8A1F8", VA = "0x1F8A1F8", Slot = "1")]
	~AkMIDIPost()
	{
	}

	[Token(Token = "0x600215F")]
	[Address(RVA = "0x1F8A260", Offset = "0x1F8A260", VA = "0x1F8A260", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6002162")]
	[Address(RVA = "0x1F8A47C", Offset = "0x1F8A47C", VA = "0x1F8A47C")]
	public AKRESULT PostOnEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002163")]
	[Address(RVA = "0x1F8A550", Offset = "0x1F8A550", VA = "0x1F8A550")]
	public void Clone(AkMIDIPost other)
	{
	}

	[Token(Token = "0x6002164")]
	[Address(RVA = "0x1F8A5F8", Offset = "0x1F8A5F8", VA = "0x1F8A5F8")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6002165")]
	[Address(RVA = "0x1F8A658", Offset = "0x1F8A658", VA = "0x1F8A658")]
	public AkMIDIPost()
	{
	}
}
[Token(Token = "0x2000376")]
public class AkMarkerCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x40018F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170002B1")]
	public uint uIdentifier
	{
		[Token(Token = "0x600216B")]
		[Address(RVA = "0x1F8AF7C", Offset = "0x1F8AF7C", VA = "0x1F8AF7C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002B2")]
	public uint uPosition
	{
		[Token(Token = "0x600216C")]
		[Address(RVA = "0x1F8AFE8", Offset = "0x1F8AFE8", VA = "0x1F8AFE8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002B3")]
	public string strLabel
	{
		[Token(Token = "0x600216D")]
		[Address(RVA = "0x1F8B054", Offset = "0x1F8B054", VA = "0x1F8B054")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002166")]
	[Address(RVA = "0x1F8AC78", Offset = "0x1F8AC78", VA = "0x1F8AC78")]
	internal AkMarkerCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002167")]
	[Address(RVA = "0x1F8AD08", Offset = "0x1F8AD08", VA = "0x1F8AD08")]
	internal static IntPtr getCPtr(AkMarkerCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002168")]
	[Address(RVA = "0x1F8AD58", Offset = "0x1F8AD58", VA = "0x1F8AD58", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002169")]
	[Address(RVA = "0x1F8ADE0", Offset = "0x1F8ADE0", VA = "0x1F8ADE0", Slot = "1")]
	~AkMarkerCallbackInfo()
	{
	}

	[Token(Token = "0x600216A")]
	[Address(RVA = "0x1F8AE48", Offset = "0x1F8AE48", VA = "0x1F8AE48", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x600216E")]
	[Address(RVA = "0x1F8B0F4", Offset = "0x1F8B0F4", VA = "0x1F8B0F4")]
	public AkMarkerCallbackInfo()
	{
	}
}
[Token(Token = "0x2000377")]
public class AkMemSettings : IDisposable
{
	[Token(Token = "0x40018F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40018F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002B4")]
	public uint uMaxNumPools
	{
		[Token(Token = "0x6002176")]
		[Address(RVA = "0x1F8BC60", Offset = "0x1F8BC60", VA = "0x1F8BC60")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002175")]
		[Address(RVA = "0x1F8BBE4", Offset = "0x1F8BBE4", VA = "0x1F8BBE4")]
		set
		{
		}
	}

	[Token(Token = "0x170002B5")]
	public uint uDebugFlags
	{
		[Token(Token = "0x6002178")]
		[Address(RVA = "0x1F8BD48", Offset = "0x1F8BD48", VA = "0x1F8BD48")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002177")]
		[Address(RVA = "0x1F8BCCC", Offset = "0x1F8BCCC", VA = "0x1F8BCCC")]
		set
		{
		}
	}

	[Token(Token = "0x600216F")]
	[Address(RVA = "0x1F83EE0", Offset = "0x1F83EE0", VA = "0x1F83EE0")]
	internal AkMemSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002170")]
	[Address(RVA = "0x1F83DE0", Offset = "0x1F83DE0", VA = "0x1F83DE0")]
	internal static IntPtr getCPtr(AkMemSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002171")]
	[Address(RVA = "0x1F8B990", Offset = "0x1F8B990", VA = "0x1F8B990", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002172")]
	[Address(RVA = "0x1F8B9C4", Offset = "0x1F8B9C4", VA = "0x1F8B9C4", Slot = "1")]
	~AkMemSettings()
	{
	}

	[Token(Token = "0x6002173")]
	[Address(RVA = "0x1F8BA34", Offset = "0x1F8BA34", VA = "0x1F8BA34", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6002174")]
	[Address(RVA = "0x1F8BB60", Offset = "0x1F8BB60", VA = "0x1F8BB60")]
	public AkMemSettings()
	{
	}
}
[Token(Token = "0x2000378")]
public enum AkMeteringFlags
{
	[Token(Token = "0x40018F5")]
	AK_NoMetering = 0,
	[Token(Token = "0x40018F6")]
	AK_EnableBusMeter_Peak = 1,
	[Token(Token = "0x40018F7")]
	AK_EnableBusMeter_TruePeak = 2,
	[Token(Token = "0x40018F8")]
	AK_EnableBusMeter_RMS = 4,
	[Token(Token = "0x40018F9")]
	AK_EnableBusMeter_KPower = 0x10,
	[Token(Token = "0x40018FA")]
	AK_EnableBusMeter_3DMeter = 0x20
}
[Token(Token = "0x2000379")]
public enum AkMonitorErrorCode
{
	[Token(Token = "0x40018FC")]
	ErrorCode_NoError,
	[Token(Token = "0x40018FD")]
	ErrorCode_FileNotFound,
	[Token(Token = "0x40018FE")]
	ErrorCode_CannotOpenFile,
	[Token(Token = "0x40018FF")]
	ErrorCode_CannotStartStreamNoMemory,
	[Token(Token = "0x4001900")]
	ErrorCode_IODevice,
	[Token(Token = "0x4001901")]
	ErrorCode_IncompatibleIOSettings,
	[Token(Token = "0x4001902")]
	ErrorCode_PluginUnsupportedChannelConfiguration,
	[Token(Token = "0x4001903")]
	ErrorCode_PluginMediaUnavailable,
	[Token(Token = "0x4001904")]
	ErrorCode_PluginInitialisationFailed,
	[Token(Token = "0x4001905")]
	ErrorCode_PluginProcessingFailed,
	[Token(Token = "0x4001906")]
	ErrorCode_PluginExecutionInvalid,
	[Token(Token = "0x4001907")]
	ErrorCode_PluginAllocationFailed,
	[Token(Token = "0x4001908")]
	ErrorCode_VorbisRequireSeekTable,
	[Token(Token = "0x4001909")]
	ErrorCode_VorbisDecodeError,
	[Token(Token = "0x400190A")]
	ErrorCode_AACDecodeError,
	[Token(Token = "0x400190B")]
	ErrorCode_xWMACreateDecoderFailed,
	[Token(Token = "0x400190C")]
	ErrorCode_ATRAC9CreateDecoderFailed,
	[Token(Token = "0x400190D")]
	ErrorCode_ATRAC9CreateDecoderFailedChShortage,
	[Token(Token = "0x400190E")]
	ErrorCode_ATRAC9DecodeFailed,
	[Token(Token = "0x400190F")]
	ErrorCode_ATRAC9ClearContextFailed,
	[Token(Token = "0x4001910")]
	ErrorCode_ATRAC9LoopSectionTooSmall,
	[Token(Token = "0x4001911")]
	ErrorCode_InvalidAudioFileHeader,
	[Token(Token = "0x4001912")]
	ErrorCode_AudioFileHeaderTooLarge,
	[Token(Token = "0x4001913")]
	ErrorCode_FileTooSmall,
	[Token(Token = "0x4001914")]
	ErrorCode_TransitionNotAccurateChannel,
	[Token(Token = "0x4001915")]
	ErrorCode_TransitionNotAccurateStarvation,
	[Token(Token = "0x4001916")]
	ErrorCode_NothingToPlay,
	[Token(Token = "0x4001917")]
	ErrorCode_PlayFailed,
	[Token(Token = "0x4001918")]
	ErrorCode_StingerCouldNotBeScheduled,
	[Token(Token = "0x4001919")]
	ErrorCode_TooLongSegmentLookAhead,
	[Token(Token = "0x400191A")]
	ErrorCode_CannotScheduleMusicSwitch,
	[Token(Token = "0x400191B")]
	ErrorCode_TooManySimultaneousMusicSegments,
	[Token(Token = "0x400191C")]
	ErrorCode_PlaylistStoppedForEditing,
	[Token(Token = "0x400191D")]
	ErrorCode_MusicClipsRescheduledAfterTrackEdit,
	[Token(Token = "0x400191E")]
	ErrorCode_CannotPlaySource_Create,
	[Token(Token = "0x400191F")]
	ErrorCode_CannotPlaySource_VirtualOff,
	[Token(Token = "0x4001920")]
	ErrorCode_CannotPlaySource_TimeSkip,
	[Token(Token = "0x4001921")]
	ErrorCode_CannotPlaySource_InconsistentState,
	[Token(Token = "0x4001922")]
	ErrorCode_MediaNotLoaded,
	[Token(Token = "0x4001923")]
	ErrorCode_VoiceStarving,
	[Token(Token = "0x4001924")]
	ErrorCode_StreamingSourceStarving,
	[Token(Token = "0x4001925")]
	ErrorCode_XMADecoderSourceStarving,
	[Token(Token = "0x4001926")]
	ErrorCode_XMADecodingError,
	[Token(Token = "0x4001927")]
	ErrorCode_InvalidXMAData,
	[Token(Token = "0x4001928")]
	ErrorCode_PluginNotRegistered,
	[Token(Token = "0x4001929")]
	ErrorCode_CodecNotRegistered,
	[Token(Token = "0x400192A")]
	ErrorCode_PluginVersionMismatch,
	[Token(Token = "0x400192B")]
	ErrorCode_EventIDNotFound,
	[Token(Token = "0x400192C")]
	ErrorCode_InvalidGroupID,
	[Token(Token = "0x400192D")]
	ErrorCode_SelectedChildNotAvailable,
	[Token(Token = "0x400192E")]
	ErrorCode_SelectedNodeNotAvailable,
	[Token(Token = "0x400192F")]
	ErrorCode_SelectedMediaNotAvailable,
	[Token(Token = "0x4001930")]
	ErrorCode_NoValidSwitch,
	[Token(Token = "0x4001931")]
	ErrorCode_SelectedNodeNotAvailablePlay,
	[Token(Token = "0x4001932")]
	ErrorCode_FeedbackVoiceStarving,
	[Token(Token = "0x4001933")]
	ErrorCode_BankLoadFailed,
	[Token(Token = "0x4001934")]
	ErrorCode_BankUnloadFailed,
	[Token(Token = "0x4001935")]
	ErrorCode_ErrorWhileLoadingBank,
	[Token(Token = "0x4001936")]
	ErrorCode_InsufficientSpaceToLoadBank,
	[Token(Token = "0x4001937")]
	ErrorCode_LowerEngineCommandListFull,
	[Token(Token = "0x4001938")]
	ErrorCode_SeekNoMarker,
	[Token(Token = "0x4001939")]
	ErrorCode_CannotSeekContinuous,
	[Token(Token = "0x400193A")]
	ErrorCode_SeekAfterEof,
	[Token(Token = "0x400193B")]
	ErrorCode_UnknownGameObject,
	[Token(Token = "0x400193C")]
	ErrorCode_UnknownEmitter,
	[Token(Token = "0x400193D")]
	ErrorCode_UnknownListener,
	[Token(Token = "0x400193E")]
	ErrorCode_GameObjectIsNotListener,
	[Token(Token = "0x400193F")]
	ErrorCode_GameObjectIsNotEmitter,
	[Token(Token = "0x4001940")]
	ErrorCode_UnknownGameObjectEvent,
	[Token(Token = "0x4001941")]
	ErrorCode_GameObjectIsNotEmitterEvent,
	[Token(Token = "0x4001942")]
	ErrorCode_ExternalSourceNotResolved,
	[Token(Token = "0x4001943")]
	ErrorCode_FileFormatMismatch,
	[Token(Token = "0x4001944")]
	ErrorCode_CommandQueueFull,
	[Token(Token = "0x4001945")]
	ErrorCode_CommandTooLarge,
	[Token(Token = "0x4001946")]
	ErrorCode_XMACreateDecoderLimitReached,
	[Token(Token = "0x4001947")]
	ErrorCode_XMAStreamBufferTooSmall,
	[Token(Token = "0x4001948")]
	ErrorCode_ModulatorScopeError_Inst,
	[Token(Token = "0x4001949")]
	ErrorCode_ModulatorScopeError_Obj,
	[Token(Token = "0x400194A")]
	ErrorCode_SeekAfterEndOfPlaylist,
	[Token(Token = "0x400194B")]
	ErrorCode_OpusRequireSeekTable,
	[Token(Token = "0x400194C")]
	ErrorCode_OpusDecodeError,
	[Token(Token = "0x400194D")]
	ErrorCode_OpusCreateDecoderFailed,
	[Token(Token = "0x400194E")]
	ErrorCode_SourcePluginNotFound,
	[Token(Token = "0x400194F")]
	ErrorCode_VirtualVoiceLimit,
	[Token(Token = "0x4001950")]
	ErrorCode_AudioDeviceShareSetNotFound,
	[Token(Token = "0x4001951")]
	ErrorCode_NotEnoughMemoryToStart,
	[Token(Token = "0x4001952")]
	ErrorCode_UnkownOpusError,
	[Token(Token = "0x4001953")]
	ErrorCode_AudioDeviceInitFailure,
	[Token(Token = "0x4001954")]
	Num_ErrorCodes
}
[Token(Token = "0x200037A")]
public enum AkMonitorErrorLevel
{
	[Token(Token = "0x4001956")]
	ErrorLevel_Message = 1,
	[Token(Token = "0x4001957")]
	ErrorLevel_Error,
	[Token(Token = "0x4001958")]
	ErrorLevel_All
}
[Token(Token = "0x200037B")]
public class AkMonitoringCallbackInfo : IDisposable
{
	[Token(Token = "0x4001959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400195A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002B6")]
	public AkMonitorErrorCode errorCode
	{
		[Token(Token = "0x600217E")]
		[Address(RVA = "0x1F8C014", Offset = "0x1F8C014", VA = "0x1F8C014")]
		get
		{
			return default(AkMonitorErrorCode);
		}
	}

	[Token(Token = "0x170002B7")]
	public AkMonitorErrorLevel errorLevel
	{
		[Token(Token = "0x600217F")]
		[Address(RVA = "0x1F8C080", Offset = "0x1F8C080", VA = "0x1F8C080")]
		get
		{
			return default(AkMonitorErrorLevel);
		}
	}

	[Token(Token = "0x170002B8")]
	public uint playingID
	{
		[Token(Token = "0x6002180")]
		[Address(RVA = "0x1F8C0EC", Offset = "0x1F8C0EC", VA = "0x1F8C0EC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002B9")]
	public ulong gameObjID
	{
		[Token(Token = "0x6002181")]
		[Address(RVA = "0x1F8C158", Offset = "0x1F8C158", VA = "0x1F8C158")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x170002BA")]
	public string message
	{
		[Token(Token = "0x6002182")]
		[Address(RVA = "0x1F8C1C4", Offset = "0x1F8C1C4", VA = "0x1F8C1C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002179")]
	[Address(RVA = "0x1F8BDB4", Offset = "0x1F8BDB4", VA = "0x1F8BDB4")]
	internal AkMonitoringCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600217A")]
	[Address(RVA = "0x1F8BDF4", Offset = "0x1F8BDF4", VA = "0x1F8BDF4")]
	internal static IntPtr getCPtr(AkMonitoringCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600217B")]
	[Address(RVA = "0x1F8BE44", Offset = "0x1F8BE44", VA = "0x1F8BE44", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600217C")]
	[Address(RVA = "0x1F8BE78", Offset = "0x1F8BE78", VA = "0x1F8BE78", Slot = "1")]
	~AkMonitoringCallbackInfo()
	{
	}

	[Token(Token = "0x600217D")]
	[Address(RVA = "0x1F8BEE8", Offset = "0x1F8BEE8", VA = "0x1F8BEE8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6002183")]
	[Address(RVA = "0x1F8C264", Offset = "0x1F8C264", VA = "0x1F8C264")]
	public AkMonitoringCallbackInfo()
	{
	}
}
[Token(Token = "0x200037C")]
public enum AkMultiPositionType
{
	[Token(Token = "0x400195C")]
	MultiPositionType_SingleSource,
	[Token(Token = "0x400195D")]
	MultiPositionType_MultiSources,
	[Token(Token = "0x400195E")]
	MultiPositionType_MultiDirections
}
[Token(Token = "0x200037D")]
public class AkMusicPlaylistCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x400195F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170002BB")]
	public uint playlistID
	{
		[Token(Token = "0x6002189")]
		[Address(RVA = "0x1F8C670", Offset = "0x1F8C670", VA = "0x1F8C670")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002BC")]
	public uint uNumPlaylistItems
	{
		[Token(Token = "0x600218A")]
		[Address(RVA = "0x1F8C6DC", Offset = "0x1F8C6DC", VA = "0x1F8C6DC")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002BD")]
	public uint uPlaylistSelection
	{
		[Token(Token = "0x600218B")]
		[Address(RVA = "0x1F8C748", Offset = "0x1F8C748", VA = "0x1F8C748")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002BE")]
	public uint uPlaylistItemDone
	{
		[Token(Token = "0x600218C")]
		[Address(RVA = "0x1F8C7B4", Offset = "0x1F8C7B4", VA = "0x1F8C7B4")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x6002184")]
	[Address(RVA = "0x1F8C36C", Offset = "0x1F8C36C", VA = "0x1F8C36C")]
	internal AkMusicPlaylistCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002185")]
	[Address(RVA = "0x1F8C3FC", Offset = "0x1F8C3FC", VA = "0x1F8C3FC")]
	internal static IntPtr getCPtr(AkMusicPlaylistCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002186")]
	[Address(RVA = "0x1F8C44C", Offset = "0x1F8C44C", VA = "0x1F8C44C", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002187")]
	[Address(RVA = "0x1F8C4D4", Offset = "0x1F8C4D4", VA = "0x1F8C4D4", Slot = "1")]
	~AkMusicPlaylistCallbackInfo()
	{
	}

	[Token(Token = "0x6002188")]
	[Address(RVA = "0x1F8C53C", Offset = "0x1F8C53C", VA = "0x1F8C53C", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x600218D")]
	[Address(RVA = "0x1F8C820", Offset = "0x1F8C820", VA = "0x1F8C820")]
	public AkMusicPlaylistCallbackInfo()
	{
	}
}
[Token(Token = "0x200037E")]
public class AkMusicSettings : IDisposable
{
	[Token(Token = "0x4001960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002BF")]
	public float fStreamingLookAheadRatio
	{
		[Token(Token = "0x6002194")]
		[Address(RVA = "0x1F8CAE0", Offset = "0x1F8CAE0", VA = "0x1F8CAE0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002193")]
		[Address(RVA = "0x1F8CA64", Offset = "0x1F8CA64", VA = "0x1F8CA64")]
		set
		{
		}
	}

	[Token(Token = "0x600218E")]
	[Address(RVA = "0x1F84688", Offset = "0x1F84688", VA = "0x1F84688")]
	internal AkMusicSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600218F")]
	[Address(RVA = "0x1F84588", Offset = "0x1F84588", VA = "0x1F84588")]
	internal static IntPtr getCPtr(AkMusicSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002190")]
	[Address(RVA = "0x1F8C894", Offset = "0x1F8C894", VA = "0x1F8C894", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002191")]
	[Address(RVA = "0x1F8C8C8", Offset = "0x1F8C8C8", VA = "0x1F8C8C8", Slot = "1")]
	~AkMusicSettings()
	{
	}

	[Token(Token = "0x6002192")]
	[Address(RVA = "0x1F8C938", Offset = "0x1F8C938", VA = "0x1F8C938", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6002195")]
	[Address(RVA = "0x1F8CB4C", Offset = "0x1F8CB4C", VA = "0x1F8CB4C")]
	public AkMusicSettings()
	{
	}
}
[Token(Token = "0x200037F")]
public class AkMusicSyncCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x4001962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170002C0")]
	public uint playingID
	{
		[Token(Token = "0x600219B")]
		[Address(RVA = "0x1F8CEE8", Offset = "0x1F8CEE8", VA = "0x1F8CEE8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170002C1")]
	public int segmentInfo_iCurrentPosition
	{
		[Token(Token = "0x600219C")]
		[Address(RVA = "0x1F8CF54", Offset = "0x1F8CF54", VA = "0x1F8CF54")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002C2")]
	public int segmentInfo_iPreEntryDuration
	{
		[Token(Token = "0x600219D")]
		[Address(RVA = "0x1F8CFC0", Offset = "0x1F8CFC0", VA = "0x1F8CFC0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002C3")]
	public int segmentInfo_iActiveDuration
	{
		[Token(Token = "0x600219E")]
		[Address(RVA = "0x1F8D02C", Offset = "0x1F8D02C", VA = "0x1F8D02C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002C4")]
	public int segmentInfo_iPostExitDuration
	{
		[Token(Token = "0x600219F")]
		[Address(RVA = "0x1F8D098", Offset = "0x1F8D098", VA = "0x1F8D098")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002C5")]
	public int segmentInfo_iRemainingLookAheadTime
	{
		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x1F8D104", Offset = "0x1F8D104", VA = "0x1F8D104")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170002C6")]
	public float segmentInfo_fBeatDuration
	{
		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x1F8D170", Offset = "0x1F8D170", VA = "0x1F8D170")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002C7")]
	public float segmentInfo_fBarDuration
	{
		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x1F8D1DC", Offset = "0x1F8D1DC", VA = "0x1F8D1DC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002C8")]
	public float segmentInfo_fGridDuration
	{
		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x1F8D248", Offset = "0x1F8D248", VA = "0x1F8D248")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002C9")]
	public float segmentInfo_fGridOffset
	{
		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x1F8D2B4", Offset = "0x1F8D2B4", VA = "0x1F8D2B4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170002CA")]
	public AkCallbackType musicSyncType
	{
		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x1F8D320", Offset = "0x1F8D320", VA = "0x1F8D320")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x170002CB")]
	public string userCueName
	{
		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x1F8D38C", Offset = "0x1F8D38C", VA = "0x1F8D38C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002196")]
	[Address(RVA = "0x1F8CBD0", Offset = "0x1F8CBD0", VA = "0x1F8CBD0")]
	internal AkMusicSyncCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002197")]
	[Address(RVA = "0x1F8CC64", Offset = "0x1F8CC64", VA = "0x1F8CC64")]
	internal static IntPtr getCPtr(AkMusicSyncCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002198")]
	[Address(RVA = "0x1F8CCB4", Offset = "0x1F8CCB4", VA = "0x1F8CCB4", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002199")]
	[Address(RVA = "0x1F8CD40", Offset = "0x1F8CD40", VA = "0x1F8CD40", Slot = "1")]
	~AkMusicSyncCallbackInfo()
	{
	}

	[Token(Token = "0x600219A")]
	[Address(RVA = "0x1F8CDB0", Offset = "0x1F8CDB0", VA = "0x1F8CDB0", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x60021A7")]
	[Address(RVA = "0x1F8D42C", Offset = "0x1F8D42C", VA = "0x1F8D42C")]
	public AkMusicSyncCallbackInfo()
	{
	}
}
[Token(Token = "0x2000380")]
public class AkObjectInfo : IDisposable
{
	[Token(Token = "0x4001963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002CC")]
	public uint objID
	{
		[Token(Token = "0x60021AE")]
		[Address(RVA = "0x1F8D77C", Offset = "0x1F8D77C", VA = "0x1F8D77C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x1F8D700", Offset = "0x1F8D700", VA = "0x1F8D700")]
		set
		{
		}
	}

	[Token(Token = "0x170002CD")]
	public uint parentID
	{
		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x1F8D864", Offset = "0x1F8D864", VA = "0x1F8D864")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60021AF")]
		[Address(RVA = "0x1F8D7E8", Offset = "0x1F8D7E8", VA = "0x1F8D7E8")]
		set
		{
		}
	}

	[Token(Token = "0x170002CE")]
	public int iDepth
	{
		[Token(Token = "0x60021B2")]
		[Address(RVA = "0x1F8D94C", Offset = "0x1F8D94C", VA = "0x1F8D94C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x1F8D8D0", Offset = "0x1F8D8D0", VA = "0x1F8D8D0")]
		set
		{
		}
	}

	[Token(Token = "0x60021A8")]
	[Address(RVA = "0x1F8D4A0", Offset = "0x1F8D4A0", VA = "0x1F8D4A0")]
	internal AkObjectInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60021A9")]
	[Address(RVA = "0x1F8D4E0", Offset = "0x1F8D4E0", VA = "0x1F8D4E0")]
	internal static IntPtr getCPtr(AkObjectInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60021AA")]
	[Address(RVA = "0x1F8D530", Offset = "0x1F8D530", VA = "0x1F8D530", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60021AB")]
	[Address(RVA = "0x1F8D564", Offset = "0x1F8D564", VA = "0x1F8D564", Slot = "1")]
	~AkObjectInfo()
	{
	}

	[Token(Token = "0x60021AC")]
	[Address(RVA = "0x1F8D5D4", Offset = "0x1F8D5D4", VA = "0x1F8D5D4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60021B3")]
	[Address(RVA = "0x1F8D9B8", Offset = "0x1F8D9B8", VA = "0x1F8D9B8")]
	public AkObjectInfo()
	{
	}
}
[Token(Token = "0x2000381")]
public class AkObstructionOcclusionValues : IDisposable
{
	[Token(Token = "0x4001965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002CF")]
	public float occlusion
	{
		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x1F8E870", Offset = "0x1F8E870", VA = "0x1F8E870")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x1F8E7F4", Offset = "0x1F8E7F4", VA = "0x1F8E7F4")]
		set
		{
		}
	}

	[Token(Token = "0x170002D0")]
	public float obstruction
	{
		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x1F8E958", Offset = "0x1F8E958", VA = "0x1F8E958")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x1F8E8DC", Offset = "0x1F8E8DC", VA = "0x1F8E8DC")]
		set
		{
		}
	}

	[Token(Token = "0x60021B4")]
	[Address(RVA = "0x1F8E594", Offset = "0x1F8E594", VA = "0x1F8E594")]
	internal AkObstructionOcclusionValues(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60021B5")]
	[Address(RVA = "0x1F8E5D4", Offset = "0x1F8E5D4", VA = "0x1F8E5D4")]
	internal static IntPtr getCPtr(AkObstructionOcclusionValues obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60021B6")]
	[Address(RVA = "0x1F8E624", Offset = "0x1F8E624", VA = "0x1F8E624", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60021B7")]
	[Address(RVA = "0x1F8E658", Offset = "0x1F8E658", VA = "0x1F8E658", Slot = "1")]
	~AkObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x60021B8")]
	[Address(RVA = "0x1F8E6C8", Offset = "0x1F8E6C8", VA = "0x1F8E6C8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60021BD")]
	[Address(RVA = "0x1F8E9C4", Offset = "0x1F8E9C4", VA = "0x1F8E9C4")]
	public AkObstructionOcclusionValues()
	{
	}
}
[Token(Token = "0x2000382")]
public class AkOutputSettings : IDisposable
{
	[Token(Token = "0x4001967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002D1")]
	public uint audioDeviceShareset
	{
		[Token(Token = "0x60021C9")]
		[Address(RVA = "0x1F8EFD0", Offset = "0x1F8EFD0", VA = "0x1F8EFD0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60021C8")]
		[Address(RVA = "0x1F8EF54", Offset = "0x1F8EF54", VA = "0x1F8EF54")]
		set
		{
		}
	}

	[Token(Token = "0x170002D2")]
	public uint idDevice
	{
		[Token(Token = "0x60021CB")]
		[Address(RVA = "0x1F8F0B8", Offset = "0x1F8F0B8", VA = "0x1F8F0B8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60021CA")]
		[Address(RVA = "0x1F8F03C", Offset = "0x1F8F03C", VA = "0x1F8F03C")]
		set
		{
		}
	}

	[Token(Token = "0x170002D3")]
	public AkPanningRule ePanningRule
	{
		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x1F8F1A0", Offset = "0x1F8F1A0", VA = "0x1F8F1A0")]
		get
		{
			return default(AkPanningRule);
		}
		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x1F8F124", Offset = "0x1F8F124", VA = "0x1F8F124")]
		set
		{
		}
	}

	[Token(Token = "0x170002D4")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x1F8F29C", Offset = "0x1F8F29C", VA = "0x1F8F29C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x1F8F20C", Offset = "0x1F8F20C", VA = "0x1F8F20C")]
		set
		{
		}
	}

	[Token(Token = "0x60021BE")]
	[Address(RVA = "0x1F834D4", Offset = "0x1F834D4", VA = "0x1F834D4")]
	internal AkOutputSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60021BF")]
	[Address(RVA = "0x1F833D4", Offset = "0x1F833D4", VA = "0x1F833D4")]
	internal static IntPtr getCPtr(AkOutputSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60021C0")]
	[Address(RVA = "0x1F8EA48", Offset = "0x1F8EA48", VA = "0x1F8EA48", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60021C1")]
	[Address(RVA = "0x1F8EA7C", Offset = "0x1F8EA7C", VA = "0x1F8EA7C", Slot = "1")]
	~AkOutputSettings()
	{
	}

	[Token(Token = "0x60021C2")]
	[Address(RVA = "0x1F8EAEC", Offset = "0x1F8EAEC", VA = "0x1F8EAEC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60021C3")]
	[Address(RVA = "0x1F8EC18", Offset = "0x1F8EC18", VA = "0x1F8EC18")]
	public AkOutputSettings()
	{
	}

	[Token(Token = "0x60021C4")]
	[Address(RVA = "0x1F8EC9C", Offset = "0x1F8EC9C", VA = "0x1F8EC9C")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig, AkPanningRule in_ePanning)
	{
	}

	[Token(Token = "0x60021C5")]
	[Address(RVA = "0x1F8ED64", Offset = "0x1F8ED64", VA = "0x1F8ED64")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig)
	{
	}

	[Token(Token = "0x60021C6")]
	[Address(RVA = "0x1F8EE24", Offset = "0x1F8EE24", VA = "0x1F8EE24")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice)
	{
	}

	[Token(Token = "0x60021C7")]
	[Address(RVA = "0x1F8EEC0", Offset = "0x1F8EEC0", VA = "0x1F8EEC0")]
	public AkOutputSettings(string in_szDeviceShareSet)
	{
	}
}
[Token(Token = "0x2000383")]
public enum AkPanningRule
{
	[Token(Token = "0x400196A")]
	AkPanningRule_Speakers,
	[Token(Token = "0x400196B")]
	AkPanningRule_Headphones
}
[Token(Token = "0x2000384")]
public class AkPathParams : IDisposable
{
	[Token(Token = "0x400196C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400196D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002D5")]
	public AkVector listenerPos
	{
		[Token(Token = "0x60021D6")]
		[Address(RVA = "0x1F8F63C", Offset = "0x1F8F63C", VA = "0x1F8F63C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60021D5")]
		[Address(RVA = "0x1F8F5AC", Offset = "0x1F8F5AC", VA = "0x1F8F5AC")]
		set
		{
		}
	}

	[Token(Token = "0x170002D6")]
	public AkVector emitterPos
	{
		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x1F8F77C", Offset = "0x1F8F77C", VA = "0x1F8F77C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x1F8F6EC", Offset = "0x1F8F6EC", VA = "0x1F8F6EC")]
		set
		{
		}
	}

	[Token(Token = "0x170002D7")]
	public uint numValidPaths
	{
		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x1F8F8A8", Offset = "0x1F8F8A8", VA = "0x1F8F8A8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x1F8F82C", Offset = "0x1F8F82C", VA = "0x1F8F82C")]
		set
		{
		}
	}

	[Token(Token = "0x60021D0")]
	[Address(RVA = "0x1F8F34C", Offset = "0x1F8F34C", VA = "0x1F8F34C")]
	internal AkPathParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60021D1")]
	[Address(RVA = "0x1F8F38C", Offset = "0x1F8F38C", VA = "0x1F8F38C")]
	internal static IntPtr getCPtr(AkPathParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60021D2")]
	[Address(RVA = "0x1F8F3DC", Offset = "0x1F8F3DC", VA = "0x1F8F3DC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60021D3")]
	[Address(RVA = "0x1F8F410", Offset = "0x1F8F410", VA = "0x1F8F410", Slot = "1")]
	~AkPathParams()
	{
	}

	[Token(Token = "0x60021D4")]
	[Address(RVA = "0x1F8F480", Offset = "0x1F8F480", VA = "0x1F8F480", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60021DB")]
	[Address(RVA = "0x1F8F914", Offset = "0x1F8F914", VA = "0x1F8F914")]
	public AkPathParams()
	{
	}
}
[Token(Token = "0x2000385")]
public class AkPlaylist : AkPlaylistArray
{
	[Token(Token = "0x400196E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x60021DC")]
	[Address(RVA = "0x1F9065C", Offset = "0x1F9065C", VA = "0x1F9065C")]
	internal AkPlaylist(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60021DD")]
	[Address(RVA = "0x1F90738", Offset = "0x1F90738", VA = "0x1F90738")]
	internal static IntPtr getCPtr(AkPlaylist obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60021DE")]
	[Address(RVA = "0x1F90788", Offset = "0x1F90788", VA = "0x1F90788", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60021DF")]
	[Address(RVA = "0x1F90850", Offset = "0x1F90850", VA = "0x1F90850", Slot = "1")]
	~AkPlaylist()
	{
	}

	[Token(Token = "0x60021E0")]
	[Address(RVA = "0x1F90928", Offset = "0x1F90928", VA = "0x1F90928", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x60021E1")]
	[Address(RVA = "0x1F90B88", Offset = "0x1F90B88", VA = "0x1F90B88")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals, AkExternalSourceInfo in_pExternalSources)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60021E2")]
	[Address(RVA = "0x1F90C60", Offset = "0x1F90C60", VA = "0x1F90C60")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60021E3")]
	[Address(RVA = "0x1F90CFC", Offset = "0x1F90CFC", VA = "0x1F90CFC")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60021E4")]
	[Address(RVA = "0x1F90D90", Offset = "0x1F90D90", VA = "0x1F90D90")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60021E5")]
	[Address(RVA = "0x1F90E14", Offset = "0x1F90E14", VA = "0x1F90E14")]
	public AKRESULT Enqueue(uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60021E6")]
	[Address(RVA = "0x1F90E90", Offset = "0x1F90E90", VA = "0x1F90E90")]
	public AkPlaylist()
	{
	}
}
[Token(Token = "0x2000386")]
public class AkPlaylistArray : IDisposable
{
	[Token(Token = "0x400196F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x60021E7")]
	[Address(RVA = "0x1F906F8", Offset = "0x1F906F8", VA = "0x1F906F8")]
	internal AkPlaylistArray(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60021E8")]
	[Address(RVA = "0x1F90F04", Offset = "0x1F90F04", VA = "0x1F90F04")]
	internal static IntPtr getCPtr(AkPlaylistArray obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60021E9")]
	[Address(RVA = "0x1F9081C", Offset = "0x1F9081C", VA = "0x1F9081C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60021EA")]
	[Address(RVA = "0x1F908B8", Offset = "0x1F908B8", VA = "0x1F908B8", Slot = "1")]
	~AkPlaylistArray()
	{
	}

	[Token(Token = "0x60021EB")]
	[Address(RVA = "0x1F90A5C", Offset = "0x1F90A5C", VA = "0x1F90A5C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60021EC")]
	[Address(RVA = "0x1F90F54", Offset = "0x1F90F54", VA = "0x1F90F54")]
	public AkPlaylistArray()
	{
	}

	[Token(Token = "0x60021ED")]
	[Address(RVA = "0x1F90FD8", Offset = "0x1F90FD8", VA = "0x1F90FD8")]
	public AkIterator Begin()
	{
		return null;
	}

	[Token(Token = "0x60021EE")]
	[Address(RVA = "0x1F9107C", Offset = "0x1F9107C", VA = "0x1F9107C")]
	public AkIterator End()
	{
		return null;
	}

	[Token(Token = "0x60021EF")]
	[Address(RVA = "0x1F91120", Offset = "0x1F91120", VA = "0x1F91120")]
	public AkIterator FindEx(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x60021F0")]
	[Address(RVA = "0x1F91200", Offset = "0x1F91200", VA = "0x1F91200")]
	public AkIterator Erase(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x60021F1")]
	[Address(RVA = "0x1F912E0", Offset = "0x1F912E0", VA = "0x1F912E0")]
	public void Erase(uint in_uIndex)
	{
	}

	[Token(Token = "0x60021F2")]
	[Address(RVA = "0x1F9135C", Offset = "0x1F9135C", VA = "0x1F9135C")]
	public AkIterator EraseSwap(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x60021F3")]
	[Address(RVA = "0x1F9143C", Offset = "0x1F9143C", VA = "0x1F9143C")]
	public AKRESULT Reserve(uint in_ulReserve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60021F4")]
	[Address(RVA = "0x1F914B8", Offset = "0x1F914B8", VA = "0x1F914B8")]
	public uint Reserved()
	{
		return default(uint);
	}

	[Token(Token = "0x60021F5")]
	[Address(RVA = "0x1F91524", Offset = "0x1F91524", VA = "0x1F91524")]
	public void Term()
	{
	}

	[Token(Token = "0x60021F6")]
	[Address(RVA = "0x1F91590", Offset = "0x1F91590", VA = "0x1F91590")]
	public uint Length()
	{
		return default(uint);
	}

	[Token(Token = "0x60021F7")]
	[Address(RVA = "0x1F915FC", Offset = "0x1F915FC", VA = "0x1F915FC")]
	public AkPlaylistItem Data()
	{
		return null;
	}

	[Token(Token = "0x60021F8")]
	[Address(RVA = "0x1F916AC", Offset = "0x1F916AC", VA = "0x1F916AC")]
	public bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x60021F9")]
	[Address(RVA = "0x1F91718", Offset = "0x1F91718", VA = "0x1F91718")]
	public AkPlaylistItem Exists(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x60021FA")]
	[Address(RVA = "0x1F91804", Offset = "0x1F91804", VA = "0x1F91804")]
	public AkPlaylistItem AddLast()
	{
		return null;
	}

	[Token(Token = "0x60021FB")]
	[Address(RVA = "0x1F918B4", Offset = "0x1F918B4", VA = "0x1F918B4")]
	public AkPlaylistItem AddLast(AkPlaylistItem in_rItem)
	{
		return null;
	}

	[Token(Token = "0x60021FC")]
	[Address(RVA = "0x1F919A0", Offset = "0x1F919A0", VA = "0x1F919A0")]
	public AkPlaylistItem Last()
	{
		return null;
	}

	[Token(Token = "0x60021FD")]
	[Address(RVA = "0x1F91A40", Offset = "0x1F91A40", VA = "0x1F91A40")]
	public void RemoveLast()
	{
	}

	[Token(Token = "0x60021FE")]
	[Address(RVA = "0x1F91AAC", Offset = "0x1F91AAC", VA = "0x1F91AAC")]
	public AKRESULT Remove(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60021FF")]
	[Address(RVA = "0x1F91B54", Offset = "0x1F91B54", VA = "0x1F91B54")]
	public AKRESULT RemoveSwap(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002200")]
	[Address(RVA = "0x1F91BFC", Offset = "0x1F91BFC", VA = "0x1F91BFC")]
	public void RemoveAll()
	{
	}

	[Token(Token = "0x6002201")]
	[Address(RVA = "0x1F91C68", Offset = "0x1F91C68", VA = "0x1F91C68")]
	public AkPlaylistItem ItemAtIndex(uint uiIndex)
	{
		return null;
	}

	[Token(Token = "0x6002202")]
	[Address(RVA = "0x1F91D18", Offset = "0x1F91D18", VA = "0x1F91D18")]
	public AkPlaylistItem Insert(uint in_uIndex)
	{
		return null;
	}

	[Token(Token = "0x6002203")]
	[Address(RVA = "0x1F91DD8", Offset = "0x1F91DD8", VA = "0x1F91DD8")]
	public bool GrowArray(uint in_uGrowBy)
	{
		return default(bool);
	}

	[Token(Token = "0x6002204")]
	[Address(RVA = "0x1F91E54", Offset = "0x1F91E54", VA = "0x1F91E54")]
	public bool GrowArray()
	{
		return default(bool);
	}

	[Token(Token = "0x6002205")]
	[Address(RVA = "0x1F91EC0", Offset = "0x1F91EC0", VA = "0x1F91EC0")]
	public bool Resize(uint in_uiSize)
	{
		return default(bool);
	}

	[Token(Token = "0x6002206")]
	[Address(RVA = "0x1F91F3C", Offset = "0x1F91F3C", VA = "0x1F91F3C")]
	public void Transfer(AkPlaylistArray in_rSource)
	{
	}

	[Token(Token = "0x6002207")]
	[Address(RVA = "0x1F91FE4", Offset = "0x1F91FE4", VA = "0x1F91FE4")]
	public AKRESULT Copy(AkPlaylistArray in_rSource)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x2000387")]
public class AkPlaylistItem : IDisposable
{
	[Token(Token = "0x4001971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002D8")]
	public uint audioNodeID
	{
		[Token(Token = "0x6002213")]
		[Address(RVA = "0x1F92650", Offset = "0x1F92650", VA = "0x1F92650")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002212")]
		[Address(RVA = "0x1F925D4", Offset = "0x1F925D4", VA = "0x1F925D4")]
		set
		{
		}
	}

	[Token(Token = "0x170002D9")]
	public int msDelay
	{
		[Token(Token = "0x6002215")]
		[Address(RVA = "0x1F92738", Offset = "0x1F92738", VA = "0x1F92738")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6002214")]
		[Address(RVA = "0x1F926BC", Offset = "0x1F926BC", VA = "0x1F926BC")]
		set
		{
		}
	}

	[Token(Token = "0x170002DA")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x6002217")]
		[Address(RVA = "0x1F92820", Offset = "0x1F92820", VA = "0x1F92820")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6002216")]
		[Address(RVA = "0x1F927A4", Offset = "0x1F927A4", VA = "0x1F927A4")]
		set
		{
		}
	}

	[Token(Token = "0x6002208")]
	[Address(RVA = "0x1F853C4", Offset = "0x1F853C4", VA = "0x1F853C4")]
	internal AkPlaylistItem(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002209")]
	[Address(RVA = "0x1F852C4", Offset = "0x1F852C4", VA = "0x1F852C4")]
	internal static IntPtr getCPtr(AkPlaylistItem obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600220A")]
	[Address(RVA = "0x1F9208C", Offset = "0x1F9208C", VA = "0x1F9208C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600220B")]
	[Address(RVA = "0x1F920C0", Offset = "0x1F920C0", VA = "0x1F920C0", Slot = "1")]
	~AkPlaylistItem()
	{
	}

	[Token(Token = "0x600220C")]
	[Address(RVA = "0x1F92130", Offset = "0x1F92130", VA = "0x1F92130", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600220D")]
	[Address(RVA = "0x1F9225C", Offset = "0x1F9225C", VA = "0x1F9225C")]
	public AkPlaylistItem()
	{
	}

	[Token(Token = "0x600220E")]
	[Address(RVA = "0x1F922E0", Offset = "0x1F922E0", VA = "0x1F922E0")]
	public AkPlaylistItem(AkPlaylistItem in_rCopy)
	{
	}

	[Token(Token = "0x600220F")]
	[Address(RVA = "0x1F923A0", Offset = "0x1F923A0", VA = "0x1F923A0")]
	public AkPlaylistItem Assign(AkPlaylistItem in_rCopy)
	{
		return null;
	}

	[Token(Token = "0x6002210")]
	[Address(RVA = "0x1F9247C", Offset = "0x1F9247C", VA = "0x1F9247C")]
	public bool IsEqualTo(AkPlaylistItem in_rCopy)
	{
		return default(bool);
	}

	[Token(Token = "0x6002211")]
	[Address(RVA = "0x1F92524", Offset = "0x1F92524", VA = "0x1F92524")]
	public AKRESULT SetExternalSources(uint in_nExternalSrc, AkExternalSourceInfo in_pExternalSrc)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x2000388")]
public enum AkPluginType
{
	[Token(Token = "0x4001974")]
	AkPluginTypeNone = 0,
	[Token(Token = "0x4001975")]
	AkPluginTypeCodec = 1,
	[Token(Token = "0x4001976")]
	AkPluginTypeSource = 2,
	[Token(Token = "0x4001977")]
	AkPluginTypeEffect = 3,
	[Token(Token = "0x4001978")]
	AkPluginTypeMixer = 6,
	[Token(Token = "0x4001979")]
	AkPluginTypeSink = 7,
	[Token(Token = "0x400197A")]
	AkPluginTypeGlobalExtension = 8,
	[Token(Token = "0x400197B")]
	AkPluginTypeMask = 15
}
[Token(Token = "0x2000389")]
public class AkPositioningInfo : IDisposable
{
	[Token(Token = "0x400197C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400197D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002DB")]
	public float fCenterPct
	{
		[Token(Token = "0x600221E")]
		[Address(RVA = "0x1F930C8", Offset = "0x1F930C8", VA = "0x1F930C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600221D")]
		[Address(RVA = "0x1F9304C", Offset = "0x1F9304C", VA = "0x1F9304C")]
		set
		{
		}
	}

	[Token(Token = "0x170002DC")]
	public AkSpeakerPanningType pannerType
	{
		[Token(Token = "0x6002220")]
		[Address(RVA = "0x1F931B0", Offset = "0x1F931B0", VA = "0x1F931B0")]
		get
		{
			return default(AkSpeakerPanningType);
		}
		[Token(Token = "0x600221F")]
		[Address(RVA = "0x1F93134", Offset = "0x1F93134", VA = "0x1F93134")]
		set
		{
		}
	}

	[Token(Token = "0x170002DD")]
	public Ak3DPositionType e3dPositioningType
	{
		[Token(Token = "0x6002222")]
		[Address(RVA = "0x1F93298", Offset = "0x1F93298", VA = "0x1F93298")]
		get
		{
			return default(Ak3DPositionType);
		}
		[Token(Token = "0x6002221")]
		[Address(RVA = "0x1F9321C", Offset = "0x1F9321C", VA = "0x1F9321C")]
		set
		{
		}
	}

	[Token(Token = "0x170002DE")]
	public bool bHoldEmitterPosAndOrient
	{
		[Token(Token = "0x6002224")]
		[Address(RVA = "0x1F93380", Offset = "0x1F93380", VA = "0x1F93380")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002223")]
		[Address(RVA = "0x1F93304", Offset = "0x1F93304", VA = "0x1F93304")]
		set
		{
		}
	}

	[Token(Token = "0x170002DF")]
	public Ak3DSpatializationMode e3DSpatializationMode
	{
		[Token(Token = "0x6002226")]
		[Address(RVA = "0x1F93468", Offset = "0x1F93468", VA = "0x1F93468")]
		get
		{
			return default(Ak3DSpatializationMode);
		}
		[Token(Token = "0x6002225")]
		[Address(RVA = "0x1F933EC", Offset = "0x1F933EC", VA = "0x1F933EC")]
		set
		{
		}
	}

	[Token(Token = "0x170002E0")]
	public bool bUseAttenuation
	{
		[Token(Token = "0x6002228")]
		[Address(RVA = "0x1F93550", Offset = "0x1F93550", VA = "0x1F93550")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002227")]
		[Address(RVA = "0x1F934D4", Offset = "0x1F934D4", VA = "0x1F934D4")]
		set
		{
		}
	}

	[Token(Token = "0x170002E1")]
	public bool bUseConeAttenuation
	{
		[Token(Token = "0x600222A")]
		[Address(RVA = "0x1F93638", Offset = "0x1F93638", VA = "0x1F93638")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002229")]
		[Address(RVA = "0x1F935BC", Offset = "0x1F935BC", VA = "0x1F935BC")]
		set
		{
		}
	}

	[Token(Token = "0x170002E2")]
	public float fInnerAngle
	{
		[Token(Token = "0x600222C")]
		[Address(RVA = "0x1F93720", Offset = "0x1F93720", VA = "0x1F93720")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600222B")]
		[Address(RVA = "0x1F936A4", Offset = "0x1F936A4", VA = "0x1F936A4")]
		set
		{
		}
	}

	[Token(Token = "0x170002E3")]
	public float fOuterAngle
	{
		[Token(Token = "0x600222E")]
		[Address(RVA = "0x1F93808", Offset = "0x1F93808", VA = "0x1F93808")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600222D")]
		[Address(RVA = "0x1F9378C", Offset = "0x1F9378C", VA = "0x1F9378C")]
		set
		{
		}
	}

	[Token(Token = "0x170002E4")]
	public float fConeMaxAttenuation
	{
		[Token(Token = "0x6002230")]
		[Address(RVA = "0x1F938F0", Offset = "0x1F938F0", VA = "0x1F938F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600222F")]
		[Address(RVA = "0x1F93874", Offset = "0x1F93874", VA = "0x1F93874")]
		set
		{
		}
	}

	[Token(Token = "0x170002E5")]
	public float LPFCone
	{
		[Token(Token = "0x6002232")]
		[Address(RVA = "0x1F939D8", Offset = "0x1F939D8", VA = "0x1F939D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002231")]
		[Address(RVA = "0x1F9395C", Offset = "0x1F9395C", VA = "0x1F9395C")]
		set
		{
		}
	}

	[Token(Token = "0x170002E6")]
	public float HPFCone
	{
		[Token(Token = "0x6002234")]
		[Address(RVA = "0x1F93AC0", Offset = "0x1F93AC0", VA = "0x1F93AC0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002233")]
		[Address(RVA = "0x1F93A44", Offset = "0x1F93A44", VA = "0x1F93A44")]
		set
		{
		}
	}

	[Token(Token = "0x170002E7")]
	public float fMaxDistance
	{
		[Token(Token = "0x6002236")]
		[Address(RVA = "0x1F93BA8", Offset = "0x1F93BA8", VA = "0x1F93BA8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002235")]
		[Address(RVA = "0x1F93B2C", Offset = "0x1F93B2C", VA = "0x1F93B2C")]
		set
		{
		}
	}

	[Token(Token = "0x170002E8")]
	public float fVolDryAtMaxDist
	{
		[Token(Token = "0x6002238")]
		[Address(RVA = "0x1F93C90", Offset = "0x1F93C90", VA = "0x1F93C90")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002237")]
		[Address(RVA = "0x1F93C14", Offset = "0x1F93C14", VA = "0x1F93C14")]
		set
		{
		}
	}

	[Token(Token = "0x170002E9")]
	public float fVolAuxGameDefAtMaxDist
	{
		[Token(Token = "0x600223A")]
		[Address(RVA = "0x1F93D78", Offset = "0x1F93D78", VA = "0x1F93D78")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002239")]
		[Address(RVA = "0x1F93CFC", Offset = "0x1F93CFC", VA = "0x1F93CFC")]
		set
		{
		}
	}

	[Token(Token = "0x170002EA")]
	public float fVolAuxUserDefAtMaxDist
	{
		[Token(Token = "0x600223C")]
		[Address(RVA = "0x1F93E60", Offset = "0x1F93E60", VA = "0x1F93E60")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600223B")]
		[Address(RVA = "0x1F93DE4", Offset = "0x1F93DE4", VA = "0x1F93DE4")]
		set
		{
		}
	}

	[Token(Token = "0x170002EB")]
	public float LPFValueAtMaxDist
	{
		[Token(Token = "0x600223E")]
		[Address(RVA = "0x1F93F48", Offset = "0x1F93F48", VA = "0x1F93F48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600223D")]
		[Address(RVA = "0x1F93ECC", Offset = "0x1F93ECC", VA = "0x1F93ECC")]
		set
		{
		}
	}

	[Token(Token = "0x170002EC")]
	public float HPFValueAtMaxDist
	{
		[Token(Token = "0x6002240")]
		[Address(RVA = "0x1F94030", Offset = "0x1F94030", VA = "0x1F94030")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600223F")]
		[Address(RVA = "0x1F93FB4", Offset = "0x1F93FB4", VA = "0x1F93FB4")]
		set
		{
		}
	}

	[Token(Token = "0x6002218")]
	[Address(RVA = "0x1F92DEC", Offset = "0x1F92DEC", VA = "0x1F92DEC")]
	internal AkPositioningInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002219")]
	[Address(RVA = "0x1F92E2C", Offset = "0x1F92E2C", VA = "0x1F92E2C")]
	internal static IntPtr getCPtr(AkPositioningInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600221A")]
	[Address(RVA = "0x1F92E7C", Offset = "0x1F92E7C", VA = "0x1F92E7C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600221B")]
	[Address(RVA = "0x1F92EB0", Offset = "0x1F92EB0", VA = "0x1F92EB0", Slot = "1")]
	~AkPositioningInfo()
	{
	}

	[Token(Token = "0x600221C")]
	[Address(RVA = "0x1F92F20", Offset = "0x1F92F20", VA = "0x1F92F20", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6002241")]
	[Address(RVA = "0x1F9409C", Offset = "0x1F9409C", VA = "0x1F9409C")]
	public AkPositioningInfo()
	{
	}
}
[Token(Token = "0x200038A")]
public enum AkPreparationType
{
	[Token(Token = "0x400197F")]
	Preparation_Load,
	[Token(Token = "0x4001980")]
	Preparation_Unload,
	[Token(Token = "0x4001981")]
	Preparation_LoadAndDecode
}
[Token(Token = "0x200038B")]
public class AkPropagationPathInfo : IDisposable
{
	[Token(Token = "0x4001982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x4001984")]
	public const uint kMaxNodes = 8u;

	[Token(Token = "0x170002ED")]
	public AkVector nodePoint
	{
		[Token(Token = "0x6002248")]
		[Address(RVA = "0x133FA50", Offset = "0x133FA50", VA = "0x133FA50")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002247")]
		[Address(RVA = "0x133F934", Offset = "0x133F934", VA = "0x133F934")]
		set
		{
		}
	}

	[Token(Token = "0x170002EE")]
	public uint numNodes
	{
		[Token(Token = "0x600224A")]
		[Address(RVA = "0x133FC84", Offset = "0x133FC84", VA = "0x133FC84")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002249")]
		[Address(RVA = "0x133FB7C", Offset = "0x133FB7C", VA = "0x133FB7C")]
		set
		{
		}
	}

	[Token(Token = "0x170002EF")]
	public float length
	{
		[Token(Token = "0x600224C")]
		[Address(RVA = "0x133FE74", Offset = "0x133FE74", VA = "0x133FE74")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600224B")]
		[Address(RVA = "0x133FD6C", Offset = "0x133FD6C", VA = "0x133FD6C")]
		set
		{
		}
	}

	[Token(Token = "0x170002F0")]
	public float gain
	{
		[Token(Token = "0x600224E")]
		[Address(RVA = "0x1340064", Offset = "0x1340064", VA = "0x1340064")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600224D")]
		[Address(RVA = "0x133FF5C", Offset = "0x133FF5C", VA = "0x133FF5C")]
		set
		{
		}
	}

	[Token(Token = "0x170002F1")]
	public float dryDiffraction
	{
		[Token(Token = "0x6002250")]
		[Address(RVA = "0x1340254", Offset = "0x1340254", VA = "0x1340254")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600224F")]
		[Address(RVA = "0x134014C", Offset = "0x134014C", VA = "0x134014C")]
		set
		{
		}
	}

	[Token(Token = "0x170002F2")]
	public float wetDiffraction
	{
		[Token(Token = "0x6002252")]
		[Address(RVA = "0x1340444", Offset = "0x1340444", VA = "0x1340444")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002251")]
		[Address(RVA = "0x134033C", Offset = "0x134033C", VA = "0x134033C")]
		set
		{
		}
	}

	[Token(Token = "0x6002242")]
	[Address(RVA = "0x133F658", Offset = "0x133F658", VA = "0x133F658")]
	internal AkPropagationPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002243")]
	[Address(RVA = "0x133F698", Offset = "0x133F698", VA = "0x133F698")]
	internal static IntPtr getCPtr(AkPropagationPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002244")]
	[Address(RVA = "0x133F6E8", Offset = "0x133F6E8", VA = "0x133F6E8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002245")]
	[Address(RVA = "0x133F71C", Offset = "0x133F71C", VA = "0x133F71C", Slot = "1")]
	~AkPropagationPathInfo()
	{
	}

	[Token(Token = "0x6002246")]
	[Address(RVA = "0x133F78C", Offset = "0x133F78C", VA = "0x133F78C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6002253")]
	[Address(RVA = "0x134052C", Offset = "0x134052C", VA = "0x134052C")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6002254")]
	[Address(RVA = "0x13405FC", Offset = "0x13405FC", VA = "0x13405FC")]
	public AkVector GetNodePoint(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6002255")]
	[Address(RVA = "0x1340748", Offset = "0x1340748", VA = "0x1340748")]
	public void Clone(AkPropagationPathInfo other)
	{
	}

	[Token(Token = "0x6002256")]
	[Address(RVA = "0x134087C", Offset = "0x134087C", VA = "0x134087C")]
	public AkPropagationPathInfo()
	{
	}
}
[Token(Token = "0x200038C")]
public enum AkQueryRTPCValue
{
	[Token(Token = "0x4001986")]
	RTPCValue_Default,
	[Token(Token = "0x4001987")]
	RTPCValue_Global,
	[Token(Token = "0x4001988")]
	RTPCValue_GameObject,
	[Token(Token = "0x4001989")]
	RTPCValue_PlayingID,
	[Token(Token = "0x400198A")]
	RTPCValue_Unavailable
}
[Token(Token = "0x200038D")]
public class AkRamp : IDisposable
{
	[Token(Token = "0x400198B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400198C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002F3")]
	public float fPrev
	{
		[Token(Token = "0x600225F")]
		[Address(RVA = "0x1341C0C", Offset = "0x1341C0C", VA = "0x1341C0C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600225E")]
		[Address(RVA = "0x1341B04", Offset = "0x1341B04", VA = "0x1341B04")]
		set
		{
		}
	}

	[Token(Token = "0x170002F4")]
	public float fNext
	{
		[Token(Token = "0x6002261")]
		[Address(RVA = "0x1341DFC", Offset = "0x1341DFC", VA = "0x1341DFC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002260")]
		[Address(RVA = "0x1341CF4", Offset = "0x1341CF4", VA = "0x1341CF4")]
		set
		{
		}
	}

	[Token(Token = "0x6002257")]
	[Address(RVA = "0x134160C", Offset = "0x134160C", VA = "0x134160C")]
	internal AkRamp(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002258")]
	[Address(RVA = "0x134164C", Offset = "0x134164C", VA = "0x134164C")]
	internal static IntPtr getCPtr(AkRamp obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002259")]
	[Address(RVA = "0x134169C", Offset = "0x134169C", VA = "0x134169C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600225A")]
	[Address(RVA = "0x13416D0", Offset = "0x13416D0", VA = "0x13416D0", Slot = "1")]
	~AkRamp()
	{
	}

	[Token(Token = "0x600225B")]
	[Address(RVA = "0x1341740", Offset = "0x1341740", VA = "0x1341740", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600225C")]
	[Address(RVA = "0x13418E8", Offset = "0x13418E8", VA = "0x13418E8")]
	public AkRamp()
	{
	}

	[Token(Token = "0x600225D")]
	[Address(RVA = "0x13419DC", Offset = "0x13419DC", VA = "0x13419DC")]
	public AkRamp(float in_fPrev, float in_fNext)
	{
	}
}
[Token(Token = "0x200038E")]
public class AkReflectionPathInfo : IDisposable
{
	[Token(Token = "0x400198D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400198E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002F5")]
	public AkVector imageSource
	{
		[Token(Token = "0x6002268")]
		[Address(RVA = "0x13422DC", Offset = "0x13422DC", VA = "0x13422DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002267")]
		[Address(RVA = "0x13421C0", Offset = "0x13421C0", VA = "0x13421C0")]
		set
		{
		}
	}

	[Token(Token = "0x170002F6")]
	public uint numPathPoints
	{
		[Token(Token = "0x600226A")]
		[Address(RVA = "0x1342510", Offset = "0x1342510", VA = "0x1342510")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002269")]
		[Address(RVA = "0x1342408", Offset = "0x1342408", VA = "0x1342408")]
		set
		{
		}
	}

	[Token(Token = "0x170002F7")]
	public uint numReflections
	{
		[Token(Token = "0x600226C")]
		[Address(RVA = "0x1342700", Offset = "0x1342700", VA = "0x1342700")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600226B")]
		[Address(RVA = "0x13425F8", Offset = "0x13425F8", VA = "0x13425F8")]
		set
		{
		}
	}

	[Token(Token = "0x170002F8")]
	public AkVector occlusionPoint
	{
		[Token(Token = "0x600226E")]
		[Address(RVA = "0x1342904", Offset = "0x1342904", VA = "0x1342904")]
		get
		{
			return null;
		}
		[Token(Token = "0x600226D")]
		[Address(RVA = "0x13427E8", Offset = "0x13427E8", VA = "0x13427E8")]
		set
		{
		}
	}

	[Token(Token = "0x170002F9")]
	public float level
	{
		[Token(Token = "0x6002270")]
		[Address(RVA = "0x1342B38", Offset = "0x1342B38", VA = "0x1342B38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600226F")]
		[Address(RVA = "0x1342A30", Offset = "0x1342A30", VA = "0x1342A30")]
		set
		{
		}
	}

	[Token(Token = "0x170002FA")]
	public bool isOccluded
	{
		[Token(Token = "0x6002272")]
		[Address(RVA = "0x1342D28", Offset = "0x1342D28", VA = "0x1342D28")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6002271")]
		[Address(RVA = "0x1342C20", Offset = "0x1342C20", VA = "0x1342C20")]
		set
		{
		}
	}

	[Token(Token = "0x6002262")]
	[Address(RVA = "0x1341EE4", Offset = "0x1341EE4", VA = "0x1341EE4")]
	internal AkReflectionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002263")]
	[Address(RVA = "0x1341F24", Offset = "0x1341F24", VA = "0x1341F24")]
	internal static IntPtr getCPtr(AkReflectionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002264")]
	[Address(RVA = "0x1341F74", Offset = "0x1341F74", VA = "0x1341F74", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002265")]
	[Address(RVA = "0x1341FA8", Offset = "0x1341FA8", VA = "0x1341FA8", Slot = "1")]
	~AkReflectionPathInfo()
	{
	}

	[Token(Token = "0x6002266")]
	[Address(RVA = "0x1342018", Offset = "0x1342018", VA = "0x1342018", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6002273")]
	[Address(RVA = "0x1342E18", Offset = "0x1342E18", VA = "0x1342E18")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6002274")]
	[Address(RVA = "0x1342EE8", Offset = "0x1342EE8", VA = "0x1342EE8")]
	public AkVector GetPathPoint(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6002275")]
	[Address(RVA = "0x1343034", Offset = "0x1343034", VA = "0x1343034")]
	public AkAcousticSurface GetAcousticSurface(uint idx)
	{
		return null;
	}

	[Token(Token = "0x6002276")]
	[Address(RVA = "0x1343170", Offset = "0x1343170", VA = "0x1343170")]
	public float GetDiffraction(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x6002277")]
	[Address(RVA = "0x1343278", Offset = "0x1343278", VA = "0x1343278")]
	public void Clone(AkReflectionPathInfo other)
	{
	}

	[Token(Token = "0x6002278")]
	[Address(RVA = "0x13433AC", Offset = "0x13433AC", VA = "0x13433AC")]
	public AkReflectionPathInfo()
	{
	}
}
[Token(Token = "0x200038F")]
public class AkRoomParams : IDisposable
{
	[Token(Token = "0x400198F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170002FB")]
	public AkVector Up
	{
		[Token(Token = "0x6002280")]
		[Address(RVA = "0x1343B40", Offset = "0x1343B40", VA = "0x1343B40")]
		get
		{
			return null;
		}
		[Token(Token = "0x600227F")]
		[Address(RVA = "0x1344BD4", Offset = "0x1344BD4", VA = "0x1344BD4")]
		set
		{
		}
	}

	[Token(Token = "0x170002FC")]
	public AkVector Front
	{
		[Token(Token = "0x6002282")]
		[Address(RVA = "0x1343BEC", Offset = "0x1343BEC", VA = "0x1343BEC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002281")]
		[Address(RVA = "0x1344D70", Offset = "0x1344D70", VA = "0x1344D70")]
		set
		{
		}
	}

	[Token(Token = "0x170002FD")]
	public uint ReverbAuxBus
	{
		[Token(Token = "0x6002284")]
		[Address(RVA = "0x1344F9C", Offset = "0x1344F9C", VA = "0x1344F9C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6002283")]
		[Address(RVA = "0x1343C98", Offset = "0x1343C98", VA = "0x1343C98")]
		set
		{
		}
	}

	[Token(Token = "0x170002FE")]
	public float ReverbLevel
	{
		[Token(Token = "0x6002286")]
		[Address(RVA = "0x1345114", Offset = "0x1345114", VA = "0x1345114")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002285")]
		[Address(RVA = "0x1343D10", Offset = "0x1343D10", VA = "0x1343D10")]
		set
		{
		}
	}

	[Token(Token = "0x170002FF")]
	public float WallOcclusion
	{
		[Token(Token = "0x6002288")]
		[Address(RVA = "0x134528C", Offset = "0x134528C", VA = "0x134528C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002287")]
		[Address(RVA = "0x1343D88", Offset = "0x1343D88", VA = "0x1343D88")]
		set
		{
		}
	}

	[Token(Token = "0x17000300")]
	public float RoomGameObj_AuxSendLevelToSelf
	{
		[Token(Token = "0x600228A")]
		[Address(RVA = "0x1345404", Offset = "0x1345404", VA = "0x1345404")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002289")]
		[Address(RVA = "0x1343E00", Offset = "0x1343E00", VA = "0x1343E00")]
		set
		{
		}
	}

	[Token(Token = "0x17000301")]
	public bool RoomGameObj_KeepRegistered
	{
		[Token(Token = "0x600228C")]
		[Address(RVA = "0x134557C", Offset = "0x134557C", VA = "0x134557C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600228B")]
		[Address(RVA = "0x1343E78", Offset = "0x1343E78", VA = "0x1343E78")]
		set
		{
		}
	}

	[Token(Token = "0x6002279")]
	[Address(RVA = "0x1344884", Offset = "0x1344884", VA = "0x1344884")]
	internal AkRoomParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600227A")]
	[Address(RVA = "0x13448C4", Offset = "0x13448C4", VA = "0x13448C4")]
	internal static IntPtr getCPtr(AkRoomParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600227B")]
	[Address(RVA = "0x1344914", Offset = "0x1344914", VA = "0x1344914", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600227C")]
	[Address(RVA = "0x1344948", Offset = "0x1344948", VA = "0x1344948", Slot = "1")]
	~AkRoomParams()
	{
	}

	[Token(Token = "0x600227D")]
	[Address(RVA = "0x13449B8", Offset = "0x13449B8", VA = "0x13449B8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600227E")]
	[Address(RVA = "0x1343AC0", Offset = "0x1343AC0", VA = "0x1343AC0")]
	public AkRoomParams()
	{
	}
}
[Token(Token = "0x2000390")]
public class AkSegmentInfo : IDisposable
{
	[Token(Token = "0x4001991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000302")]
	public int iCurrentPosition
	{
		[Token(Token = "0x6002293")]
		[Address(RVA = "0x1346FA8", Offset = "0x1346FA8", VA = "0x1346FA8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6002292")]
		[Address(RVA = "0x1346EA0", Offset = "0x1346EA0", VA = "0x1346EA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000303")]
	public int iPreEntryDuration
	{
		[Token(Token = "0x6002295")]
		[Address(RVA = "0x1347198", Offset = "0x1347198", VA = "0x1347198")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6002294")]
		[Address(RVA = "0x1347090", Offset = "0x1347090", VA = "0x1347090")]
		set
		{
		}
	}

	[Token(Token = "0x17000304")]
	public int iActiveDuration
	{
		[Token(Token = "0x6002297")]
		[Address(RVA = "0x1347388", Offset = "0x1347388", VA = "0x1347388")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6002296")]
		[Address(RVA = "0x1347280", Offset = "0x1347280", VA = "0x1347280")]
		set
		{
		}
	}

	[Token(Token = "0x17000305")]
	public int iPostExitDuration
	{
		[Token(Token = "0x6002299")]
		[Address(RVA = "0x1347578", Offset = "0x1347578", VA = "0x1347578")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6002298")]
		[Address(RVA = "0x1347470", Offset = "0x1347470", VA = "0x1347470")]
		set
		{
		}
	}

	[Token(Token = "0x17000306")]
	public int iRemainingLookAheadTime
	{
		[Token(Token = "0x600229B")]
		[Address(RVA = "0x1347768", Offset = "0x1347768", VA = "0x1347768")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600229A")]
		[Address(RVA = "0x1347660", Offset = "0x1347660", VA = "0x1347660")]
		set
		{
		}
	}

	[Token(Token = "0x17000307")]
	public float fBeatDuration
	{
		[Token(Token = "0x600229D")]
		[Address(RVA = "0x1347958", Offset = "0x1347958", VA = "0x1347958")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600229C")]
		[Address(RVA = "0x1347850", Offset = "0x1347850", VA = "0x1347850")]
		set
		{
		}
	}

	[Token(Token = "0x17000308")]
	public float fBarDuration
	{
		[Token(Token = "0x600229F")]
		[Address(RVA = "0x1347B48", Offset = "0x1347B48", VA = "0x1347B48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600229E")]
		[Address(RVA = "0x1347A40", Offset = "0x1347A40", VA = "0x1347A40")]
		set
		{
		}
	}

	[Token(Token = "0x17000309")]
	public float fGridDuration
	{
		[Token(Token = "0x60022A1")]
		[Address(RVA = "0x1347D38", Offset = "0x1347D38", VA = "0x1347D38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60022A0")]
		[Address(RVA = "0x1347C30", Offset = "0x1347C30", VA = "0x1347C30")]
		set
		{
		}
	}

	[Token(Token = "0x1700030A")]
	public float fGridOffset
	{
		[Token(Token = "0x60022A3")]
		[Address(RVA = "0x1347F28", Offset = "0x1347F28", VA = "0x1347F28")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60022A2")]
		[Address(RVA = "0x1347E20", Offset = "0x1347E20", VA = "0x1347E20")]
		set
		{
		}
	}

	[Token(Token = "0x600228D")]
	[Address(RVA = "0x1346BC4", Offset = "0x1346BC4", VA = "0x1346BC4")]
	internal AkSegmentInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600228E")]
	[Address(RVA = "0x1346C04", Offset = "0x1346C04", VA = "0x1346C04")]
	internal static IntPtr getCPtr(AkSegmentInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600228F")]
	[Address(RVA = "0x1346C54", Offset = "0x1346C54", VA = "0x1346C54", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002290")]
	[Address(RVA = "0x1346C88", Offset = "0x1346C88", VA = "0x1346C88", Slot = "1")]
	~AkSegmentInfo()
	{
	}

	[Token(Token = "0x6002291")]
	[Address(RVA = "0x1346CF8", Offset = "0x1346CF8", VA = "0x1346CF8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60022A4")]
	[Address(RVA = "0x1348010", Offset = "0x1348010", VA = "0x1348010")]
	public AkSegmentInfo()
	{
	}
}
[Token(Token = "0x2000391")]
public class AkSerializedCallbackHeader : IDisposable
{
	[Token(Token = "0x4001993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700030B")]
	public IntPtr pPackage
	{
		[Token(Token = "0x60022AA")]
		[Address(RVA = "0x13483E0", Offset = "0x13483E0", VA = "0x13483E0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700030C")]
	public AkSerializedCallbackHeader pNext
	{
		[Token(Token = "0x60022AB")]
		[Address(RVA = "0x13484C8", Offset = "0x13484C8", VA = "0x13484C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700030D")]
	public AkCallbackType eType
	{
		[Token(Token = "0x60022AC")]
		[Address(RVA = "0x13485F4", Offset = "0x13485F4", VA = "0x13485F4")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x60022A5")]
	[Address(RVA = "0x1348104", Offset = "0x1348104", VA = "0x1348104")]
	internal AkSerializedCallbackHeader(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60022A6")]
	[Address(RVA = "0x1348144", Offset = "0x1348144", VA = "0x1348144")]
	internal static IntPtr getCPtr(AkSerializedCallbackHeader obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60022A7")]
	[Address(RVA = "0x1348194", Offset = "0x1348194", VA = "0x1348194", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60022A8")]
	[Address(RVA = "0x13481C8", Offset = "0x13481C8", VA = "0x13481C8", Slot = "1")]
	~AkSerializedCallbackHeader()
	{
	}

	[Token(Token = "0x60022A9")]
	[Address(RVA = "0x1348238", Offset = "0x1348238", VA = "0x1348238", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60022AD")]
	[Address(RVA = "0x13486DC", Offset = "0x13486DC", VA = "0x13486DC")]
	public IntPtr GetData()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60022AE")]
	[Address(RVA = "0x13487C4", Offset = "0x13487C4", VA = "0x13487C4")]
	public AkSerializedCallbackHeader()
	{
	}
}
[Token(Token = "0x2000392")]
public enum AkSourceChannelOrdering
{
	[Token(Token = "0x4001996")]
	SourceChannelOrdering_Standard,
	[Token(Token = "0x4001997")]
	SourceChannelOrdering_Film,
	[Token(Token = "0x4001998")]
	SourceChannelOrdering_FuMa
}
[Token(Token = "0x2000393")]
public class AkSourceSettings : IDisposable
{
	[Token(Token = "0x4001999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400199A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700030E")]
	public uint sourceID
	{
		[Token(Token = "0x60022B5")]
		[Address(RVA = "0x154B930", Offset = "0x154B930", VA = "0x154B930")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60022B4")]
		[Address(RVA = "0x154B8B4", Offset = "0x154B8B4", VA = "0x154B8B4")]
		set
		{
		}
	}

	[Token(Token = "0x1700030F")]
	public IntPtr pMediaMemory
	{
		[Token(Token = "0x60022B7")]
		[Address(RVA = "0x154BA18", Offset = "0x154BA18", VA = "0x154BA18")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x60022B6")]
		[Address(RVA = "0x154B99C", Offset = "0x154B99C", VA = "0x154B99C")]
		set
		{
		}
	}

	[Token(Token = "0x17000310")]
	public uint uMediaSize
	{
		[Token(Token = "0x60022B9")]
		[Address(RVA = "0x154BB00", Offset = "0x154BB00", VA = "0x154BB00")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x154BA84", Offset = "0x154BA84", VA = "0x154BA84")]
		set
		{
		}
	}

	[Token(Token = "0x60022AF")]
	[Address(RVA = "0x154B654", Offset = "0x154B654", VA = "0x154B654")]
	internal AkSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60022B0")]
	[Address(RVA = "0x154B694", Offset = "0x154B694", VA = "0x154B694")]
	internal static IntPtr getCPtr(AkSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60022B1")]
	[Address(RVA = "0x154B6E4", Offset = "0x154B6E4", VA = "0x154B6E4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60022B2")]
	[Address(RVA = "0x154B718", Offset = "0x154B718", VA = "0x154B718", Slot = "1")]
	~AkSourceSettings()
	{
	}

	[Token(Token = "0x60022B3")]
	[Address(RVA = "0x154B788", Offset = "0x154B788", VA = "0x154B788", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60022BA")]
	[Address(RVA = "0x154BB6C", Offset = "0x154BB6C", VA = "0x154BB6C")]
	public AkSourceSettings()
	{
	}
}
[Token(Token = "0x2000394")]
public class AkSpatialAudioInitSettings : IDisposable
{
	[Token(Token = "0x400199B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400199C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000311")]
	public int uPoolID
	{
		[Token(Token = "0x60022C2")]
		[Address(RVA = "0x154C47C", Offset = "0x154C47C", VA = "0x154C47C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60022C1")]
		[Address(RVA = "0x154C400", Offset = "0x154C400", VA = "0x154C400")]
		set
		{
		}
	}

	[Token(Token = "0x17000312")]
	public uint uPoolSize
	{
		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x154C564", Offset = "0x154C564", VA = "0x154C564")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x154C4E8", Offset = "0x154C4E8", VA = "0x154C4E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000313")]
	public uint uMaxSoundPropagationDepth
	{
		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x154C64C", Offset = "0x154C64C", VA = "0x154C64C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60022C5")]
		[Address(RVA = "0x154C5D0", Offset = "0x154C5D0", VA = "0x154C5D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000314")]
	public uint uDiffractionFlags
	{
		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x154C734", Offset = "0x154C734", VA = "0x154C734")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60022C7")]
		[Address(RVA = "0x154C6B8", Offset = "0x154C6B8", VA = "0x154C6B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000315")]
	public float fDiffractionShadowAttenFactor
	{
		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x154C81C", Offset = "0x154C81C", VA = "0x154C81C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x154C7A0", Offset = "0x154C7A0", VA = "0x154C7A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000316")]
	public float fDiffractionShadowDegrees
	{
		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x154C904", Offset = "0x154C904", VA = "0x154C904")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x154C888", Offset = "0x154C888", VA = "0x154C888")]
		set
		{
		}
	}

	[Token(Token = "0x60022BB")]
	[Address(RVA = "0x154C11C", Offset = "0x154C11C", VA = "0x154C11C")]
	internal AkSpatialAudioInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60022BC")]
	[Address(RVA = "0x154C15C", Offset = "0x154C15C", VA = "0x154C15C")]
	internal static IntPtr getCPtr(AkSpatialAudioInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60022BD")]
	[Address(RVA = "0x154C1AC", Offset = "0x154C1AC", VA = "0x154C1AC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60022BE")]
	[Address(RVA = "0x154C1E0", Offset = "0x154C1E0", VA = "0x154C1E0", Slot = "1")]
	~AkSpatialAudioInitSettings()
	{
	}

	[Token(Token = "0x60022BF")]
	[Address(RVA = "0x154C250", Offset = "0x154C250", VA = "0x154C250", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60022C0")]
	[Address(RVA = "0x154C37C", Offset = "0x154C37C", VA = "0x154C37C")]
	public AkSpatialAudioInitSettings()
	{
	}
}
[Token(Token = "0x2000395")]
public enum AkSpeakerPanningType
{
	[Token(Token = "0x400199E")]
	AK_DirectSpeakerAssignment,
	[Token(Token = "0x400199F")]
	AK_BalanceFadeHeight
}
[Token(Token = "0x2000396")]
public class AkStreamMgrSettings : IDisposable
{
	[Token(Token = "0x40019A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40019A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000317")]
	public uint uMemorySize
	{
		[Token(Token = "0x60022D3")]
		[Address(RVA = "0x154D6A8", Offset = "0x154D6A8", VA = "0x154D6A8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60022D2")]
		[Address(RVA = "0x154D62C", Offset = "0x154D62C", VA = "0x154D62C")]
		set
		{
		}
	}

	[Token(Token = "0x60022CD")]
	[Address(RVA = "0x154D3CC", Offset = "0x154D3CC", VA = "0x154D3CC")]
	internal AkStreamMgrSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60022CE")]
	[Address(RVA = "0x154D40C", Offset = "0x154D40C", VA = "0x154D40C")]
	internal static IntPtr getCPtr(AkStreamMgrSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60022CF")]
	[Address(RVA = "0x154D45C", Offset = "0x154D45C", VA = "0x154D45C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60022D0")]
	[Address(RVA = "0x154D490", Offset = "0x154D490", VA = "0x154D490", Slot = "1")]
	~AkStreamMgrSettings()
	{
	}

	[Token(Token = "0x60022D1")]
	[Address(RVA = "0x154D500", Offset = "0x154D500", VA = "0x154D500", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60022D4")]
	[Address(RVA = "0x154D714", Offset = "0x154D714", VA = "0x154D714")]
	public AkStreamMgrSettings()
	{
	}
}
[Token(Token = "0x2000397")]
public class AkTaskContext : IDisposable
{
	[Token(Token = "0x40019A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40019A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000318")]
	public uint uIdxThread
	{
		[Token(Token = "0x60022DB")]
		[Address(RVA = "0x154EED8", Offset = "0x154EED8", VA = "0x154EED8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x154EE5C", Offset = "0x154EE5C", VA = "0x154EE5C")]
		set
		{
		}
	}

	[Token(Token = "0x60022D5")]
	[Address(RVA = "0x154EBFC", Offset = "0x154EBFC", VA = "0x154EBFC")]
	internal AkTaskContext(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60022D6")]
	[Address(RVA = "0x154EC3C", Offset = "0x154EC3C", VA = "0x154EC3C")]
	internal static IntPtr getCPtr(AkTaskContext obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60022D7")]
	[Address(RVA = "0x154EC8C", Offset = "0x154EC8C", VA = "0x154EC8C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60022D8")]
	[Address(RVA = "0x154ECC0", Offset = "0x154ECC0", VA = "0x154ECC0", Slot = "1")]
	~AkTaskContext()
	{
	}

	[Token(Token = "0x60022D9")]
	[Address(RVA = "0x154ED30", Offset = "0x154ED30", VA = "0x154ED30", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60022DC")]
	[Address(RVA = "0x154EF44", Offset = "0x154EF44", VA = "0x154EF44")]
	public AkTaskContext()
	{
	}
}
[Token(Token = "0x2000398")]
public class AkTransform : IDisposable
{
	[Token(Token = "0x40019A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40019A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x60022DD")]
	[Address(RVA = "0x154F654", Offset = "0x154F654", VA = "0x154F654")]
	internal AkTransform(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60022DE")]
	[Address(RVA = "0x154F694", Offset = "0x154F694", VA = "0x154F694")]
	internal static IntPtr getCPtr(AkTransform obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60022DF")]
	[Address(RVA = "0x154F6E4", Offset = "0x154F6E4", VA = "0x154F6E4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60022E0")]
	[Address(RVA = "0x154F718", Offset = "0x154F718", VA = "0x154F718", Slot = "1")]
	~AkTransform()
	{
	}

	[Token(Token = "0x60022E1")]
	[Address(RVA = "0x154F788", Offset = "0x154F788", VA = "0x154F788", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60022E2")]
	[Address(RVA = "0x154F8B4", Offset = "0x154F8B4", VA = "0x154F8B4")]
	public AkVector Position()
	{
		return null;
	}

	[Token(Token = "0x60022E3")]
	[Address(RVA = "0x154F994", Offset = "0x154F994", VA = "0x154F994")]
	public AkVector OrientationFront()
	{
		return null;
	}

	[Token(Token = "0x60022E4")]
	[Address(RVA = "0x154FA34", Offset = "0x154FA34", VA = "0x154FA34")]
	public AkVector OrientationTop()
	{
		return null;
	}

	[Token(Token = "0x60022E5")]
	[Address(RVA = "0x154FAD4", Offset = "0x154FAD4", VA = "0x154FAD4")]
	public void Set(AkVector in_position, AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x60022E6")]
	[Address(RVA = "0x154FBF4", Offset = "0x154FBF4", VA = "0x154FBF4")]
	public void Set(float in_positionX, float in_positionY, float in_positionZ, float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x60022E7")]
	[Address(RVA = "0x154FD20", Offset = "0x154FD20", VA = "0x154FD20")]
	public void SetPosition(AkVector in_position)
	{
	}

	[Token(Token = "0x60022E8")]
	[Address(RVA = "0x154FDC8", Offset = "0x154FDC8", VA = "0x154FDC8")]
	public void SetPosition(float in_x, float in_y, float in_z)
	{
	}

	[Token(Token = "0x60022E9")]
	[Address(RVA = "0x154FE5C", Offset = "0x154FE5C", VA = "0x154FE5C")]
	public void SetOrientation(AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x60022EA")]
	[Address(RVA = "0x154FF14", Offset = "0x154FF14", VA = "0x154FF14")]
	public void SetOrientation(float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x60022EB")]
	[Address(RVA = "0x154FFC8", Offset = "0x154FFC8", VA = "0x154FFC8")]
	public AkTransform()
	{
	}
}
[Token(Token = "0x2000399")]
public class AkTriangle : IDisposable
{
	[Token(Token = "0x40019A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40019A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000319")]
	public ushort point0
	{
		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x15503E4", Offset = "0x15503E4", VA = "0x15503E4")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x154E57C", Offset = "0x154E57C", VA = "0x154E57C")]
		set
		{
		}
	}

	[Token(Token = "0x1700031A")]
	public ushort point1
	{
		[Token(Token = "0x60022F6")]
		[Address(RVA = "0x1550450", Offset = "0x1550450", VA = "0x1550450")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60022F5")]
		[Address(RVA = "0x154E5F8", Offset = "0x154E5F8", VA = "0x154E5F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700031B")]
	public ushort point2
	{
		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x15504BC", Offset = "0x15504BC", VA = "0x15504BC")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60022F7")]
		[Address(RVA = "0x154E674", Offset = "0x154E674", VA = "0x154E674")]
		set
		{
		}
	}

	[Token(Token = "0x1700031C")]
	public ushort surface
	{
		[Token(Token = "0x60022FA")]
		[Address(RVA = "0x1550528", Offset = "0x1550528", VA = "0x1550528")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x154E6F0", Offset = "0x154E6F0", VA = "0x154E6F0")]
		set
		{
		}
	}

	[Token(Token = "0x60022EC")]
	[Address(RVA = "0x155004C", Offset = "0x155004C", VA = "0x155004C")]
	internal AkTriangle(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60022ED")]
	[Address(RVA = "0x155008C", Offset = "0x155008C", VA = "0x155008C")]
	internal static IntPtr getCPtr(AkTriangle obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60022EE")]
	[Address(RVA = "0x15500DC", Offset = "0x15500DC", VA = "0x15500DC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60022EF")]
	[Address(RVA = "0x1550110", Offset = "0x1550110", VA = "0x1550110", Slot = "1")]
	~AkTriangle()
	{
	}

	[Token(Token = "0x60022F0")]
	[Address(RVA = "0x1550180", Offset = "0x1550180", VA = "0x1550180", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60022F1")]
	[Address(RVA = "0x15502AC", Offset = "0x15502AC", VA = "0x15502AC")]
	public AkTriangle()
	{
	}

	[Token(Token = "0x60022F2")]
	[Address(RVA = "0x1550330", Offset = "0x1550330", VA = "0x1550330")]
	public AkTriangle(ushort in_pt0, ushort in_pt1, ushort in_pt2, ushort in_surfaceInfo)
	{
	}

	[Token(Token = "0x60022FB")]
	[Address(RVA = "0x1550594", Offset = "0x1550594", VA = "0x1550594")]
	public void Clear()
	{
	}

	[Token(Token = "0x60022FC")]
	[Address(RVA = "0x1550600", Offset = "0x1550600", VA = "0x1550600")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x60022FD")]
	[Address(RVA = "0x1550660", Offset = "0x1550660", VA = "0x1550660")]
	public void Clone(AkTriangle other)
	{
	}
}
[Token(Token = "0x200039A")]
public class AkVector : IDisposable
{
	[Token(Token = "0x40019A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40019A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700031D")]
	public float X
	{
		[Token(Token = "0x6002305")]
		[Address(RVA = "0x15528A0", Offset = "0x15528A0", VA = "0x15528A0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002304")]
		[Address(RVA = "0x1552824", Offset = "0x1552824", VA = "0x1552824")]
		set
		{
		}
	}

	[Token(Token = "0x1700031E")]
	public float Y
	{
		[Token(Token = "0x6002307")]
		[Address(RVA = "0x1552988", Offset = "0x1552988", VA = "0x1552988")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002306")]
		[Address(RVA = "0x155290C", Offset = "0x155290C", VA = "0x155290C")]
		set
		{
		}
	}

	[Token(Token = "0x1700031F")]
	public float Z
	{
		[Token(Token = "0x6002309")]
		[Address(RVA = "0x1552A70", Offset = "0x1552A70", VA = "0x1552A70")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002308")]
		[Address(RVA = "0x15529F4", Offset = "0x15529F4", VA = "0x15529F4")]
		set
		{
		}
	}

	[Token(Token = "0x60022FE")]
	[Address(RVA = "0x154F954", Offset = "0x154F954", VA = "0x154F954")]
	internal AkVector(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60022FF")]
	[Address(RVA = "0x154FBA4", Offset = "0x154FBA4", VA = "0x154FBA4")]
	internal static IntPtr getCPtr(AkVector obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002300")]
	[Address(RVA = "0x15525E8", Offset = "0x15525E8", VA = "0x15525E8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002301")]
	[Address(RVA = "0x155261C", Offset = "0x155261C", VA = "0x155261C", Slot = "1")]
	~AkVector()
	{
	}

	[Token(Token = "0x6002302")]
	[Address(RVA = "0x155268C", Offset = "0x155268C", VA = "0x155268C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6002303")]
	[Address(RVA = "0x15527B8", Offset = "0x15527B8", VA = "0x15527B8")]
	public void Zero()
	{
	}

	[Token(Token = "0x600230A")]
	[Address(RVA = "0x1552ADC", Offset = "0x1552ADC", VA = "0x1552ADC")]
	public AkVector()
	{
	}
}
[Token(Token = "0x200039B")]
public class AkVertex : IDisposable
{
	[Token(Token = "0x40019AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40019AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000320")]
	public float X
	{
		[Token(Token = "0x6002313")]
		[Address(RVA = "0x1552EF0", Offset = "0x1552EF0", VA = "0x1552EF0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002312")]
		[Address(RVA = "0x154E3A8", Offset = "0x154E3A8", VA = "0x154E3A8")]
		set
		{
		}
	}

	[Token(Token = "0x17000321")]
	public float Y
	{
		[Token(Token = "0x6002315")]
		[Address(RVA = "0x1552F5C", Offset = "0x1552F5C", VA = "0x1552F5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002314")]
		[Address(RVA = "0x154E424", Offset = "0x154E424", VA = "0x154E424")]
		set
		{
		}
	}

	[Token(Token = "0x17000322")]
	public float Z
	{
		[Token(Token = "0x6002317")]
		[Address(RVA = "0x1552FC8", Offset = "0x1552FC8", VA = "0x1552FC8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6002316")]
		[Address(RVA = "0x154E4A0", Offset = "0x154E4A0", VA = "0x154E4A0")]
		set
		{
		}
	}

	[Token(Token = "0x600230B")]
	[Address(RVA = "0x1552B60", Offset = "0x1552B60", VA = "0x1552B60")]
	internal AkVertex(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600230C")]
	[Address(RVA = "0x1552BA0", Offset = "0x1552BA0", VA = "0x1552BA0")]
	internal static IntPtr getCPtr(AkVertex obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600230D")]
	[Address(RVA = "0x1552BF0", Offset = "0x1552BF0", VA = "0x1552BF0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600230E")]
	[Address(RVA = "0x1552C24", Offset = "0x1552C24", VA = "0x1552C24", Slot = "1")]
	~AkVertex()
	{
	}

	[Token(Token = "0x600230F")]
	[Address(RVA = "0x1552C94", Offset = "0x1552C94", VA = "0x1552C94", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6002310")]
	[Address(RVA = "0x1552DC0", Offset = "0x1552DC0", VA = "0x1552DC0")]
	public AkVertex()
	{
	}

	[Token(Token = "0x6002311")]
	[Address(RVA = "0x1552E44", Offset = "0x1552E44", VA = "0x1552E44")]
	public AkVertex(float in_X, float in_Y, float in_Z)
	{
	}

	[Token(Token = "0x6002318")]
	[Address(RVA = "0x1553034", Offset = "0x1553034", VA = "0x1553034")]
	public void Clear()
	{
	}

	[Token(Token = "0x6002319")]
	[Address(RVA = "0x15530A0", Offset = "0x15530A0", VA = "0x15530A0")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x600231A")]
	[Address(RVA = "0x1553100", Offset = "0x1553100", VA = "0x1553100")]
	public void Clone(AkVertex other)
	{
	}
}
[Token(Token = "0x200039C")]
public class _ArrayPoolDefault : IDisposable
{
	[Token(Token = "0x40019AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40019AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x600231B")]
	[Address(RVA = "0x1D79DAC", Offset = "0x1D79DAC", VA = "0x1D79DAC")]
	internal _ArrayPoolDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600231C")]
	[Address(RVA = "0x1D79DEC", Offset = "0x1D79DEC", VA = "0x1D79DEC")]
	internal static IntPtr getCPtr(_ArrayPoolDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600231D")]
	[Address(RVA = "0x1D79E3C", Offset = "0x1D79E3C", VA = "0x1D79E3C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600231E")]
	[Address(RVA = "0x1D79E70", Offset = "0x1D79E70", VA = "0x1D79E70", Slot = "1")]
	~_ArrayPoolDefault()
	{
	}

	[Token(Token = "0x600231F")]
	[Address(RVA = "0x1D79EE0", Offset = "0x1D79EE0", VA = "0x1D79EE0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6002320")]
	[Address(RVA = "0x1D7A00C", Offset = "0x1D7A00C", VA = "0x1D7A00C")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6002321")]
	[Address(RVA = "0x1D7A06C", Offset = "0x1D7A06C", VA = "0x1D7A06C")]
	public _ArrayPoolDefault()
	{
	}
}
[Token(Token = "0x200039D")]
public class _ArrayPoolLEngineDefault : IDisposable
{
	[Token(Token = "0x40019AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40019AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6002322")]
	[Address(RVA = "0x1D7A0F0", Offset = "0x1D7A0F0", VA = "0x1D7A0F0")]
	internal _ArrayPoolLEngineDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6002323")]
	[Address(RVA = "0x1D7A130", Offset = "0x1D7A130", VA = "0x1D7A130")]
	internal static IntPtr getCPtr(_ArrayPoolLEngineDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002324")]
	[Address(RVA = "0x1D7A180", Offset = "0x1D7A180", VA = "0x1D7A180", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6002325")]
	[Address(RVA = "0x1D7A1B4", Offset = "0x1D7A1B4", VA = "0x1D7A1B4", Slot = "1")]
	~_ArrayPoolLEngineDefault()
	{
	}

	[Token(Token = "0x6002326")]
	[Address(RVA = "0x1D7A224", Offset = "0x1D7A224", VA = "0x1D7A224", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6002327")]
	[Address(RVA = "0x1D7A350", Offset = "0x1D7A350", VA = "0x1D7A350")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6002328")]
	[Address(RVA = "0x1D7A3B0", Offset = "0x1D7A3B0", VA = "0x1D7A3B0")]
	public _ArrayPoolLEngineDefault()
	{
	}
}
[Token(Token = "0x200039E")]
public class _ArrayPoolSpatialAudio : IDisposable
{
	[Token(Token = "0x40019B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40019B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6002329")]
	[Address(RVA = "0x1D7A434", Offset = "0x1D7A434", VA = "0x1D7A434")]
	internal _ArrayPoolSpatialAudio(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600232A")]
	[Address(RVA = "0x1D7A474", Offset = "0x1D7A474", VA = "0x1D7A474")]
	internal static IntPtr getCPtr(_ArrayPoolSpatialAudio obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600232B")]
	[Address(RVA = "0x1D7A4C4", Offset = "0x1D7A4C4", VA = "0x1D7A4C4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600232C")]
	[Address(RVA = "0x1D7A4F8", Offset = "0x1D7A4F8", VA = "0x1D7A4F8", Slot = "1")]
	~_ArrayPoolSpatialAudio()
	{
	}

	[Token(Token = "0x600232D")]
	[Address(RVA = "0x1D7A568", Offset = "0x1D7A568", VA = "0x1D7A568", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600232E")]
	[Address(RVA = "0x1D7A694", Offset = "0x1D7A694", VA = "0x1D7A694")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x600232F")]
	[Address(RVA = "0x1D7A6F4", Offset = "0x1D7A6F4", VA = "0x1D7A6F4")]
	public _ArrayPoolSpatialAudio()
	{
	}
}
[Token(Token = "0x200039F")]
public class AkAndroidSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x2000610")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEB614", Offset = "0xEEB614")]
		public bool m_RoundFrameSizeToHardwareSize;

		[Token(Token = "0x6002DA3")]
		[Address(RVA = "0x17FBEDC", Offset = "0x17FBEDC", VA = "0x17FBEDC", Slot = "7")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x6002DA4")]
		[Address(RVA = "0x17FBF00", Offset = "0x17FBF00", VA = "0x17FBF00")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x40019B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x40019B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x40019B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x6002330")]
	[Address(RVA = "0x17FBBC8", Offset = "0x17FBBC8", VA = "0x17FBBC8")]
	public AkAndroidSettings()
	{
	}

	[Token(Token = "0x6002331")]
	[Address(RVA = "0x17FBEC4", Offset = "0x17FBEC4", VA = "0x17FBEC4", Slot = "10")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6002332")]
	[Address(RVA = "0x17FBECC", Offset = "0x17FBECC", VA = "0x17FBECC", Slot = "11")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6002333")]
	[Address(RVA = "0x17FBED4", Offset = "0x17FBED4", VA = "0x17FBED4", Slot = "12")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}
}
[Token(Token = "0x20003A0")]
public class AkAcousticSurfaceArray : AkBaseArray<AkAcousticSurface>
{
	[Token(Token = "0x17000323")]
	protected override int StructureSize
	{
		[Token(Token = "0x6002335")]
		[Address(RVA = "0x17FAD98", Offset = "0x17FAD98", VA = "0x17FAD98", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6002334")]
	[Address(RVA = "0x17FAD38", Offset = "0x17FAD38", VA = "0x17FAD38")]
	public AkAcousticSurfaceArray(int count)
	{
	}

	[Token(Token = "0x6002336")]
	[Address(RVA = "0x17FADF8", Offset = "0x17FADF8", VA = "0x17FADF8", Slot = "7")]
	protected override void ClearAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6002337")]
	[Address(RVA = "0x17FAE60", Offset = "0x17FAE60", VA = "0x17FAE60", Slot = "8")]
	protected override AkAcousticSurface CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6002338")]
	[Address(RVA = "0x17FAEC8", Offset = "0x17FAEC8", VA = "0x17FAEC8", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x20003A1")]
public static class AkAudioInputManager
{
	[Token(Token = "0x2000611")]
	public delegate void AudioFormatDelegate(uint playingID, AkAudioFormat format);

	[Token(Token = "0x2000612")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xEE50A0", Offset = "0xEE50A0")]
	public delegate void AudioFormatInteropDelegate(uint playingID, IntPtr format);

	[Token(Token = "0x2000613")]
	public delegate bool AudioSamplesDelegate(uint playingID, uint channelIndex, float[] samples);

	[Token(Token = "0x2000614")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xEE50B4", Offset = "0xEE50B4")]
	public delegate bool AudioSamplesInteropDelegate(uint playingID, [In][Out] float[] samples, uint channelIndex, uint frames);

	[Token(Token = "0x40019B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool initialized;

	[Token(Token = "0x40019B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<uint, AudioSamplesDelegate> audioSamplesDelegates;

	[Token(Token = "0x40019B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Dictionary<uint, AudioFormatDelegate> audioFormatDelegates;

	[Token(Token = "0x40019B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkAudioFormat audioFormat;

	[Token(Token = "0x40019B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AudioSamplesInteropDelegate audioSamplesDelegate;

	[Token(Token = "0x40019BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AudioFormatInteropDelegate audioFormatDelegate;

	[Token(Token = "0x6002339")]
	[Address(RVA = "0x17FCE28", Offset = "0x17FCE28", VA = "0x17FCE28")]
	public static uint PostAudioInputEvent(AK.Wwise.Event akEvent, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x600233A")]
	[Address(RVA = "0x17FD0DC", Offset = "0x17FD0DC", VA = "0x17FD0DC")]
	public static uint PostAudioInputEvent(uint akEventID, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x600233B")]
	[Address(RVA = "0x17FD1E4", Offset = "0x17FD1E4", VA = "0x17FD1E4")]
	public static uint PostAudioInputEvent(string akEventName, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x600233C")]
	[Address(RVA = "0x17FCC14", Offset = "0x17FCC14", VA = "0x17FCC14")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xEF10A0", Offset = "0xEF10A0")]
	private static bool InternalAudioSamplesDelegate(uint playingID, float[] samples, uint channelIndex, uint frames)
	{
		return default(bool);
	}

	[Token(Token = "0x600233D")]
	[Address(RVA = "0x17FCD10", Offset = "0x17FCD10", VA = "0x17FCD10")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xEF1104", Offset = "0xEF1104")]
	private static void InternalAudioFormatDelegate(uint playingID, IntPtr format)
	{
	}

	[Token(Token = "0x600233E")]
	[Address(RVA = "0x17FCF14", Offset = "0x17FCF14", VA = "0x17FCF14")]
	private static void TryInitialize()
	{
	}

	[Token(Token = "0x600233F")]
	[Address(RVA = "0x17FCFE8", Offset = "0x17FCFE8", VA = "0x17FCFE8")]
	private static void AddPlayingID(uint playingID, AudioSamplesDelegate sampleDelegate, AudioFormatDelegate formatDelegate)
	{
	}

	[Token(Token = "0x6002340")]
	[Address(RVA = "0x17FD80C", Offset = "0x17FD80C", VA = "0x17FD80C")]
	private static void EventCallback(object cookie, AkCallbackType type, AkCallbackInfo callbackInfo)
	{
	}
}
[Token(Token = "0x20003A2")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xEE28F4", Offset = "0xEE28F4")]
public class AkAuxSendArray : IDisposable
{
	[Token(Token = "0x40019BB")]
	private const int MAX_COUNT = 4;

	[Token(Token = "0x40019BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int SIZE_OF_AKAUXSENDVALUE;

	[Token(Token = "0x40019BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x40019BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_Count;

	[Token(Token = "0x17000324")]
	public AkAuxSendValue Item
	{
		[Token(Token = "0x6002343")]
		[Address(RVA = "0x17FFC68", Offset = "0x17FFC68", VA = "0x17FFC68")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000325")]
	public bool isFull
	{
		[Token(Token = "0x6002344")]
		[Address(RVA = "0x17FFDC8", Offset = "0x17FFDC8", VA = "0x17FFDC8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6002342")]
	[Address(RVA = "0x17FFBB8", Offset = "0x17FFBB8", VA = "0x17FFBB8")]
	public AkAuxSendArray()
	{
	}

	[Token(Token = "0x6002345")]
	[Address(RVA = "0x17FFE30", Offset = "0x17FFE30", VA = "0x17FFE30", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002346")]
	[Address(RVA = "0x17FFEBC", Offset = "0x17FFEBC", VA = "0x17FFEBC", Slot = "1")]
	~AkAuxSendArray()
	{
	}

	[Token(Token = "0x6002347")]
	[Address(RVA = "0x17FFF24", Offset = "0x17FFF24", VA = "0x17FFF24")]
	public void Reset()
	{
	}

	[Token(Token = "0x6002348")]
	[Address(RVA = "0x17FFF2C", Offset = "0x17FFF2C", VA = "0x17FFF2C")]
	public bool Add(GameObject in_listenerGameObj, uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6002349")]
	[Address(RVA = "0x1800044", Offset = "0x1800044", VA = "0x1800044")]
	public bool Add(uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x600234A")]
	[Address(RVA = "0x1800124", Offset = "0x1800124", VA = "0x1800124")]
	public bool Contains(GameObject in_listenerGameObj, uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x600234B")]
	[Address(RVA = "0x1800264", Offset = "0x1800264", VA = "0x1800264")]
	public bool Contains(uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x600234C")]
	[Address(RVA = "0x180035C", Offset = "0x180035C", VA = "0x180035C")]
	public AKRESULT SetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600234D")]
	[Address(RVA = "0x1800414", Offset = "0x1800414", VA = "0x1800414")]
	public AKRESULT GetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600234E")]
	[Address(RVA = "0x18004DC", Offset = "0x18004DC", VA = "0x18004DC")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600234F")]
	[Address(RVA = "0x18004E4", Offset = "0x18004E4", VA = "0x18004E4")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6002350")]
	[Address(RVA = "0x17FFD4C", Offset = "0x17FFD4C", VA = "0x17FFD4C")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x20003A3")]
public static class AkBankManager
{
	[Token(Token = "0x2000615")]
	private class BankHandle
	{
		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly string bankName;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected uint m_BankID;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB64C", Offset = "0xEEB64C")]
		private int <RefCount>k__BackingField;

		[Token(Token = "0x17000484")]
		public int RefCount
		{
			[Token(Token = "0x6002DB6")]
			[Address(RVA = "0x18025B8", Offset = "0x18025B8", VA = "0x18025B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF3374", Offset = "0xEF3374")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002DB7")]
			[Address(RVA = "0x18025C0", Offset = "0x18025C0", VA = "0x18025C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF3384", Offset = "0xEF3384")]
			private set
			{
			}
		}

		[Token(Token = "0x6002DB5")]
		[Address(RVA = "0x1801848", Offset = "0x1801848", VA = "0x1801848")]
		public BankHandle(string name)
		{
		}

		[Token(Token = "0x6002DB8")]
		[Address(RVA = "0x18025C8", Offset = "0x18025C8", VA = "0x18025C8", Slot = "4")]
		public virtual AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x6002DB9")]
		[Address(RVA = "0x1801B48", Offset = "0x1801B48", VA = "0x1801B48")]
		public void LoadBank()
		{
		}

		[Token(Token = "0x6002DBA")]
		[Address(RVA = "0x1802640", Offset = "0x1802640", VA = "0x1802640", Slot = "5")]
		public virtual void UnloadBank()
		{
		}

		[Token(Token = "0x6002DBB")]
		[Address(RVA = "0x1801C44", Offset = "0x1801C44", VA = "0x1801C44")]
		public void IncRef()
		{
		}

		[Token(Token = "0x6002DBC")]
		[Address(RVA = "0x1801CA4", Offset = "0x1801CA4", VA = "0x1801CA4")]
		public void DecRef()
		{
		}

		[Token(Token = "0x6002DBD")]
		[Address(RVA = "0x1801FC4", Offset = "0x1801FC4", VA = "0x1801FC4")]
		protected void LogLoadResult(AKRESULT result)
		{
		}
	}

	[Token(Token = "0x2000616")]
	private class AsyncBankHandle : BankHandle
	{
		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly AkCallbackManager.BankCallback bankCallback;

		[Token(Token = "0x6002DBE")]
		[Address(RVA = "0x1801C54", Offset = "0x1801C54", VA = "0x1801C54")]
		public AsyncBankHandle(string name, AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x6002DBF")]
		[Address(RVA = "0x1801E24", Offset = "0x1801E24", VA = "0x1801E24")]
		private static void GlobalBankCallback(uint in_bankID, IntPtr in_pInMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie)
		{
		}

		[Token(Token = "0x6002DC0")]
		[Address(RVA = "0x18024E4", Offset = "0x18024E4", VA = "0x18024E4", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x2000617")]
	private class DecodableBankHandle : BankHandle
	{
		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly bool decodeBank;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly string decodedBankPath;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly bool saveDecodedBank;

		[Token(Token = "0x6002DC1")]
		[Address(RVA = "0x180187C", Offset = "0x180187C", VA = "0x180187C")]
		public DecodableBankHandle(string name, bool save)
		{
		}

		[Token(Token = "0x6002DC2")]
		[Address(RVA = "0x18027A0", Offset = "0x18027A0", VA = "0x18027A0", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x6002DC3")]
		[Address(RVA = "0x1802934", Offset = "0x1802934", VA = "0x1802934", Slot = "5")]
		public override void UnloadBank()
		{
		}
	}

	[Token(Token = "0x40019BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, BankHandle> m_BankHandles;

	[Token(Token = "0x40019C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly List<BankHandle> BanksToUnload;

	[Token(Token = "0x40019C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Mutex m_Mutex;

	[Token(Token = "0x6002351")]
	[Address(RVA = "0x1801688", Offset = "0x1801688", VA = "0x1801688")]
	internal static void DoUnloadBanks()
	{
	}

	[Token(Token = "0x6002352")]
	[Address(RVA = "0x18017AC", Offset = "0x18017AC", VA = "0x18017AC")]
	internal static void Reset()
	{
	}

	[Token(Token = "0x6002353")]
	[Address(RVA = "0x17F45FC", Offset = "0x17F45FC", VA = "0x17F45FC")]
	public static void LoadBank(string name, bool decodeBank, bool saveDecodedBank)
	{
	}

	[Token(Token = "0x6002354")]
	[Address(RVA = "0x17F487C", Offset = "0x17F487C", VA = "0x17F487C")]
	public static void LoadBankAsync(string name, [Optional] AkCallbackManager.BankCallback callback)
	{
	}

	[Token(Token = "0x6002355")]
	[Address(RVA = "0x17F4AAC", Offset = "0x17F4AAC", VA = "0x17F4AAC")]
	public static void UnloadBank(string name)
	{
	}
}
[Token(Token = "0x20003A4")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xEE292C", Offset = "0xEE292C")]
public abstract class AkBaseArray<T> : IDisposable
{
	[Token(Token = "0x40019C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE9624", Offset = "0xEE9624")]
	private int <Capacity>k__BackingField;

	[Token(Token = "0x40019C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private IntPtr m_Buffer;

	[Token(Token = "0x17000326")]
	public int Capacity
	{
		[Token(Token = "0x600235A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1168", Offset = "0xEF1168")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600235B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1178", Offset = "0xEF1178")]
		private set
		{
		}
	}

	[Token(Token = "0x17000327")]
	protected abstract int StructureSize
	{
		[Token(Token = "0x600235D")]
		get;
	}

	[Token(Token = "0x17000328")]
	public T Item
	{
		[Token(Token = "0x6002361")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6002362")]
		set
		{
		}
	}

	[Token(Token = "0x6002357")]
	public AkBaseArray(int capacity)
	{
	}

	[Token(Token = "0x6002358")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6002359")]
	~AkBaseArray()
	{
	}

	[Token(Token = "0x600235C")]
	public virtual int Count()
	{
		return default(int);
	}

	[Token(Token = "0x600235E")]
	protected virtual void ClearAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x600235F")]
	protected abstract T CreateNewReferenceFromIntPtr(IntPtr address);

	[Token(Token = "0x6002360")]
	protected abstract void CloneIntoReferenceFromIntPtr(IntPtr address, T other);

	[Token(Token = "0x6002363")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6002364")]
	protected IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x20003A5")]
public class AkBasePathGetter
{
	[Token(Token = "0x40019C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string DefaultBasePath;

	[Token(Token = "0x6002365")]
	[Address(RVA = "0x18029C4", Offset = "0x18029C4", VA = "0x18029C4")]
	public static string GetPlatformName()
	{
		return null;
	}

	[Token(Token = "0x6002366")]
	[Address(RVA = "0x1802A34", Offset = "0x1802A34", VA = "0x1802A34")]
	public static string GetPlatformBasePath()
	{
		return null;
	}

	[Token(Token = "0x6002367")]
	[Address(RVA = "0x1802AF0", Offset = "0x1802AF0", VA = "0x1802AF0")]
	public static string GetFullSoundBankPath()
	{
		return null;
	}

	[Token(Token = "0x6002368")]
	[Address(RVA = "0x1802C74", Offset = "0x1802C74", VA = "0x1802C74")]
	public static void FixSlashes(ref string path, char separatorChar, char badChar, bool addTrailingSlash)
	{
	}

	[Token(Token = "0x6002369")]
	[Address(RVA = "0x1802BC0", Offset = "0x1802BC0", VA = "0x1802BC0")]
	public static void FixSlashes(ref string path)
	{
	}

	[Token(Token = "0x600236A")]
	[Address(RVA = "0x18026B8", Offset = "0x18026B8", VA = "0x18026B8")]
	public static string GetSoundbankBasePath()
	{
		return null;
	}

	[Token(Token = "0x600236B")]
	[Address(RVA = "0x1802DC8", Offset = "0x1802DC8", VA = "0x1802DC8")]
	public AkBasePathGetter()
	{
	}
}
[Token(Token = "0x20003A6")]
public static class AkCallbackManager
{
	[Token(Token = "0x2000618")]
	public delegate void EventCallback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info);

	[Token(Token = "0x2000619")]
	public delegate void MonitoringCallback(AkMonitorErrorCode in_errorCode, AkMonitorErrorLevel in_errorLevel, uint in_playingID, ulong in_gameObjID, string in_msg);

	[Token(Token = "0x200061A")]
	public delegate void BankCallback(uint in_bankID, IntPtr in_InMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie);

	[Token(Token = "0x200061B")]
	public class EventCallbackPackage
	{
		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bNotifyEndOfEvent;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventCallback m_Callback;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object m_Cookie;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_playingID;

		[Token(Token = "0x6002DD0")]
		[Address(RVA = "0x18064B0", Offset = "0x18064B0", VA = "0x18064B0")]
		public static EventCallbackPackage Create(EventCallback in_cb, object in_cookie, ref uint io_Flags)
		{
			return null;
		}

		[Token(Token = "0x6002DD1")]
		[Address(RVA = "0x18065F4", Offset = "0x18065F4", VA = "0x18065F4", Slot = "1")]
		~EventCallbackPackage()
		{
		}

		[Token(Token = "0x6002DD2")]
		[Address(RVA = "0x18065EC", Offset = "0x18065EC", VA = "0x18065EC")]
		public EventCallbackPackage()
		{
		}
	}

	[Token(Token = "0x200061C")]
	public class BankCallbackPackage
	{
		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BankCallback m_Callback;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x6002DD3")]
		[Address(RVA = "0x180632C", Offset = "0x180632C", VA = "0x180632C")]
		public BankCallbackPackage(BankCallback in_cb, object in_cookie)
		{
		}
	}

	[Token(Token = "0x200061D")]
	public delegate AKRESULT BGMCallback(bool in_bOtherAudioPlaying, object in_Cookie);

	[Token(Token = "0x200061E")]
	public class BGMCallbackPackage
	{
		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BGMCallback m_Callback;

		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x6002DD8")]
		[Address(RVA = "0x180469C", Offset = "0x180469C", VA = "0x180469C")]
		public BGMCallbackPackage()
		{
		}
	}

	[Token(Token = "0x200061F")]
	public class InitializationSettings
	{
		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DefaultBufferSize;

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool DefaultIsLoggingEnabled;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int BufferSize;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsLoggingEnabled;

		[Token(Token = "0x6002DD9")]
		[Address(RVA = "0x1802F78", Offset = "0x1802F78", VA = "0x1802F78")]
		public InitializationSettings()
		{
		}
	}

	[Token(Token = "0x40019C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE9634", Offset = "0xEE9634")]
	private static bool <IsLoggingEnabled>k__BackingField;

	[Token(Token = "0x40019C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly AkEventCallbackInfo AkEventCallbackInfo;

	[Token(Token = "0x40019C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly AkDynamicSequenceItemCallbackInfo AkDynamicSequenceItemCallbackInfo;

	[Token(Token = "0x40019C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkMIDIEventCallbackInfo AkMIDIEventCallbackInfo;

	[Token(Token = "0x40019C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AkMarkerCallbackInfo AkMarkerCallbackInfo;

	[Token(Token = "0x40019CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AkDurationCallbackInfo AkDurationCallbackInfo;

	[Token(Token = "0x40019CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly AkMusicSyncCallbackInfo AkMusicSyncCallbackInfo;

	[Token(Token = "0x40019CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly AkMusicPlaylistCallbackInfo AkMusicPlaylistCallbackInfo;

	[Token(Token = "0x40019CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly AkAudioSourceChangeCallbackInfo AkAudioSourceChangeCallbackInfo;

	[Token(Token = "0x40019CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly AkMonitoringCallbackInfo AkMonitoringCallbackInfo;

	[Token(Token = "0x40019CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static readonly AkBankCallbackInfo AkBankCallbackInfo;

	[Token(Token = "0x40019D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static readonly ConcurrentDictionary<int, EventCallbackPackage> m_mapEventCallbacks;

	[Token(Token = "0x40019D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly ConcurrentDictionary<int, BankCallbackPackage> m_mapBankCallbacks;

	[Token(Token = "0x40019D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static EventCallbackPackage m_LastAddedEventPackage;

	[Token(Token = "0x40019D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ConcurrentQueue<int> cookiesToRemove;

	[Token(Token = "0x40019D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr m_pNotifMem;

	[Token(Token = "0x40019D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static MonitoringCallback m_MonitoringCB;

	[Token(Token = "0x40019D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static BGMCallbackPackage ms_sourceChangeCallbackPkg;

	[Token(Token = "0x17000329")]
	private static bool IsLoggingEnabled
	{
		[Token(Token = "0x600236D")]
		[Address(RVA = "0x180354C", Offset = "0x180354C", VA = "0x180354C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1188", Offset = "0xEF1188")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600236E")]
		[Address(RVA = "0x18035B4", Offset = "0x18035B4", VA = "0x18035B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1198", Offset = "0xEF1198")]
		set
		{
		}
	}

	[Token(Token = "0x600236F")]
	[Address(RVA = "0x1803624", Offset = "0x1803624", VA = "0x1803624")]
	public static void RemoveEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x6002370")]
	[Address(RVA = "0x1803A88", Offset = "0x1803A88", VA = "0x1803A88")]
	public static void RemoveEventCallbackCookie(object in_cookie)
	{
	}

	[Token(Token = "0x6002371")]
	[Address(RVA = "0x1803DE4", Offset = "0x1803DE4", VA = "0x1803DE4")]
	public static void RemoveBankCallback(object in_cookie)
	{
	}

	[Token(Token = "0x6002372")]
	[Address(RVA = "0x1804140", Offset = "0x1804140", VA = "0x1804140")]
	public static void SetLastAddedPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x6002373")]
	[Address(RVA = "0x1804208", Offset = "0x1804208", VA = "0x1804208")]
	public static AKRESULT Init(InitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6002374")]
	[Address(RVA = "0x18043B0", Offset = "0x18043B0", VA = "0x18043B0")]
	public static void Term()
	{
	}

	[Token(Token = "0x6002375")]
	[Address(RVA = "0x18044EC", Offset = "0x18044EC", VA = "0x18044EC")]
	public static void SetMonitoringCallback(AkMonitorErrorLevel in_Level, MonitoringCallback in_CB)
	{
	}

	[Token(Token = "0x6002376")]
	[Address(RVA = "0x18045DC", Offset = "0x18045DC", VA = "0x18045DC")]
	public static void SetBGMCallback(BGMCallback in_CB, object in_cookie)
	{
	}

	[Token(Token = "0x6002377")]
	[Address(RVA = "0x18046A4", Offset = "0x18046A4", VA = "0x18046A4")]
	public static int PostCallbacks()
	{
		return default(int);
	}
}
[Token(Token = "0x20003A7")]
public class AkChannelEmitterArray : IDisposable
{
	[Token(Token = "0x40019D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x40019D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x40019D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x40019DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE9644", Offset = "0xEE9644")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x1700032A")]
	public uint Count
	{
		[Token(Token = "0x600237A")]
		[Address(RVA = "0x1807C50", Offset = "0x1807C50", VA = "0x1807C50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF11A8", Offset = "0xEF11A8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600237B")]
		[Address(RVA = "0x1807C58", Offset = "0x1807C58", VA = "0x1807C58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF11B8", Offset = "0xEF11B8")]
		private set
		{
		}
	}

	[Token(Token = "0x6002379")]
	[Address(RVA = "0x1807BC0", Offset = "0x1807BC0", VA = "0x1807BC0")]
	public AkChannelEmitterArray(uint in_Count)
	{
	}

	[Token(Token = "0x600237C")]
	[Address(RVA = "0x1807C60", Offset = "0x1807C60", VA = "0x1807C60", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600237D")]
	[Address(RVA = "0x1807CEC", Offset = "0x1807CEC", VA = "0x1807CEC", Slot = "1")]
	~AkChannelEmitterArray()
	{
	}

	[Token(Token = "0x600237E")]
	[Address(RVA = "0x1807D54", Offset = "0x1807D54", VA = "0x1807D54")]
	public void Reset()
	{
	}

	[Token(Token = "0x600237F")]
	[Address(RVA = "0x1807D64", Offset = "0x1807D64", VA = "0x1807D64")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top, uint in_ChannelMask)
	{
	}
}
[Token(Token = "0x20003A8")]
public class AkBasePlatformSettings : ScriptableObject
{
	[Token(Token = "0x1700032B")]
	public virtual AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x6002380")]
		[Address(RVA = "0x1802E68", Offset = "0x1802E68", VA = "0x1802E68", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032C")]
	public virtual AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x6002381")]
		[Address(RVA = "0x1802EC4", Offset = "0x1802EC4", VA = "0x1802EC4", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032D")]
	public virtual AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x6002382")]
		[Address(RVA = "0x1802F20", Offset = "0x1802F20", VA = "0x1802F20", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032E")]
	public virtual string InitialLanguage
	{
		[Token(Token = "0x6002383")]
		[Address(RVA = "0x1802FFC", Offset = "0x1802FFC", VA = "0x1802FFC", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700032F")]
	public virtual string SoundbankPath
	{
		[Token(Token = "0x6002384")]
		[Address(RVA = "0x1803044", Offset = "0x1803044", VA = "0x1803044", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000330")]
	public virtual AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x6002385")]
		[Address(RVA = "0x18030AC", Offset = "0x18030AC", VA = "0x18030AC", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002386")]
	[Address(RVA = "0x1803188", Offset = "0x1803188", VA = "0x1803188")]
	public AkBasePlatformSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x20003A9")]
public class AkCommonOutputSettings
{
	[Token(Token = "0x2000620")]
	public enum PanningRule
	{
		[Token(Token = "0x4002243")]
		Speakers,
		[Token(Token = "0x4002244")]
		Headphones
	}

	[Serializable]
	[Token(Token = "0x2000621")]
	public class ChannelConfiguration
	{
		[Token(Token = "0x2000977")]
		public enum ChannelConfigType
		{
			[Token(Token = "0x40023AA")]
			Anonymous,
			[Token(Token = "0x40023AB")]
			Standard,
			[Token(Token = "0x40023AC")]
			Ambisonic
		}

		[Token(Token = "0x2000978")]
		public enum ChannelMask
		{
			[Token(Token = "0x40023AE")]
			NONE = 0,
			[Token(Token = "0x40023AF")]
			FRONT_LEFT = 1,
			[Token(Token = "0x40023B0")]
			FRONT_RIGHT = 2,
			[Token(Token = "0x40023B1")]
			FRONT_CENTER = 4,
			[Token(Token = "0x40023B2")]
			LOW_FREQUENCY = 8,
			[Token(Token = "0x40023B3")]
			BACK_LEFT = 16,
			[Token(Token = "0x40023B4")]
			BACK_RIGHT = 32,
			[Token(Token = "0x40023B5")]
			BACK_CENTER = 256,
			[Token(Token = "0x40023B6")]
			SIDE_LEFT = 512,
			[Token(Token = "0x40023B7")]
			SIDE_RIGHT = 1024,
			[Token(Token = "0x40023B8")]
			TOP = 2048,
			[Token(Token = "0x40023B9")]
			HEIGHT_FRONT_LEFT = 4096,
			[Token(Token = "0x40023BA")]
			HEIGHT_FRONT_CENTER = 8192,
			[Token(Token = "0x40023BB")]
			HEIGHT_FRONT_RIGHT = 16384,
			[Token(Token = "0x40023BC")]
			HEIGHT_BACK_LEFT = 32768,
			[Token(Token = "0x40023BD")]
			HEIGHT_BACK_CENTER = 65536,
			[Token(Token = "0x40023BE")]
			HEIGHT_BACK_RIGHT = 131072,
			[Token(Token = "0x40023BF")]
			SETUP_MONO = 4,
			[Token(Token = "0x40023C0")]
			SETUP_0POINT1 = 8,
			[Token(Token = "0x40023C1")]
			SETUP_1POINT1 = 12,
			[Token(Token = "0x40023C2")]
			SETUP_STEREO = 3,
			[Token(Token = "0x40023C3")]
			SETUP_2POINT1 = 11,
			[Token(Token = "0x40023C4")]
			SETUP_3STEREO = 7,
			[Token(Token = "0x40023C5")]
			SETUP_3POINT1 = 15,
			[Token(Token = "0x40023C6")]
			SETUP_4 = 1539,
			[Token(Token = "0x40023C7")]
			SETUP_4POINT1 = 1547,
			[Token(Token = "0x40023C8")]
			SETUP_5 = 1543,
			[Token(Token = "0x40023C9")]
			SETUP_5POINT1 = 1551,
			[Token(Token = "0x40023CA")]
			SETUP_6 = 1587,
			[Token(Token = "0x40023CB")]
			SETUP_6POINT1 = 1595,
			[Token(Token = "0x40023CC")]
			SETUP_7 = 1591,
			[Token(Token = "0x40023CD")]
			SETUP_7POINT1 = 1599,
			[Token(Token = "0x40023CE")]
			SETUP_SURROUND = 259,
			[Token(Token = "0x40023CF")]
			SETUP_DPL2 = 1539,
			[Token(Token = "0x40023D0")]
			SETUP_HEIGHT_4 = 184320,
			[Token(Token = "0x40023D1")]
			SETUP_HEIGHT_5 = 192512,
			[Token(Token = "0x40023D2")]
			SETUP_HEIGHT_ALL = 258048,
			[Token(Token = "0x40023D3")]
			SETUP_AURO_222 = 22019,
			[Token(Token = "0x40023D4")]
			SETUP_AURO_8 = 185859,
			[Token(Token = "0x40023D5")]
			SETUP_AURO_9 = 185863,
			[Token(Token = "0x40023D6")]
			SETUP_AURO_9POINT1 = 185871,
			[Token(Token = "0x40023D7")]
			SETUP_AURO_10 = 187911,
			[Token(Token = "0x40023D8")]
			SETUP_AURO_10POINT1 = 187919,
			[Token(Token = "0x40023D9")]
			SETUP_AURO_11 = 196103,
			[Token(Token = "0x40023DA")]
			SETUP_AURO_11POINT1 = 196111,
			[Token(Token = "0x40023DB")]
			SETUP_AURO_11_740 = 185911,
			[Token(Token = "0x40023DC")]
			SETUP_AURO_11POINT1_740 = 185919,
			[Token(Token = "0x40023DD")]
			SETUP_AURO_13_751 = 196151,
			[Token(Token = "0x40023DE")]
			SETUP_AURO_13POINT1_751 = 196159,
			[Token(Token = "0x40023DF")]
			SETUP_DOLBY_5_0_2 = 22023,
			[Token(Token = "0x40023E0")]
			SETUP_DOLBY_5_1_2 = 22031,
			[Token(Token = "0x40023E1")]
			SETUP_DOLBY_6_0_2 = 22067,
			[Token(Token = "0x40023E2")]
			SETUP_DOLBY_6_1_2 = 22075,
			[Token(Token = "0x40023E3")]
			SETUP_DOLBY_6_0_4 = 185907,
			[Token(Token = "0x40023E4")]
			SETUP_DOLBY_6_1_4 = 185915,
			[Token(Token = "0x40023E5")]
			SETUP_DOLBY_7_0_2 = 22071,
			[Token(Token = "0x40023E6")]
			SETUP_DOLBY_7_1_2 = 22079,
			[Token(Token = "0x40023E7")]
			SETUP_DOLBY_7_0_4 = 185911,
			[Token(Token = "0x40023E8")]
			SETUP_DOLBY_7_1_4 = 185919,
			[Token(Token = "0x40023E9")]
			SETUP_ALL_SPEAKERS = 261951
		}

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEB65C", Offset = "0xEEB65C")]
		public ChannelConfigType m_ChannelConfigType;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEB694", Offset = "0xEEB694")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0xEEB694", Offset = "0xEEB694")]
		public ChannelMask m_ChannelMask;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEB71C", Offset = "0xEEB71C")]
		public uint m_NumberOfChannels;

		[Token(Token = "0x6002DDB")]
		[Address(RVA = "0x1808AB4", Offset = "0x1808AB4", VA = "0x1808AB4")]
		public void CopyTo(AkChannelConfig config)
		{
		}

		[Token(Token = "0x6002DDC")]
		[Address(RVA = "0x17FBEBC", Offset = "0x17FBEBC", VA = "0x17FBEBC")]
		public ChannelConfiguration()
		{
		}
	}

	[Token(Token = "0x40019DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9654", Offset = "0xEE9654")]
	public string m_AudioDeviceShareset;

	[Token(Token = "0x40019DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE968C", Offset = "0xEE968C")]
	public uint m_DeviceID;

	[Token(Token = "0x40019DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE96C4", Offset = "0xEE96C4")]
	public PanningRule m_PanningRule;

	[Token(Token = "0x40019DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE96FC", Offset = "0xEE96FC")]
	public ChannelConfiguration m_ChannelConfig;

	[Token(Token = "0x6002387")]
	[Address(RVA = "0x18089C8", Offset = "0x18089C8", VA = "0x18089C8")]
	public void CopyTo(AkOutputSettings settings)
	{
	}

	[Token(Token = "0x6002388")]
	[Address(RVA = "0x17FBE28", Offset = "0x17FBE28", VA = "0x17FBE28")]
	public AkCommonOutputSettings()
	{
	}
}
[Token(Token = "0x20003AA")]
public class AkSettingsValidationHandler
{
	[Token(Token = "0x6002389")]
	[Address(RVA = "0x13488B8", Offset = "0x13488B8", VA = "0x13488B8", Slot = "4")]
	public virtual void Validate()
	{
	}

	[Token(Token = "0x600238A")]
	[Address(RVA = "0x13488BC", Offset = "0x13488BC", VA = "0x13488BC")]
	public AkSettingsValidationHandler()
	{
	}
}
[Serializable]
[Token(Token = "0x20003AB")]
public class AkCommonUserSettings : AkSettingsValidationHandler
{
	[Serializable]
	[Token(Token = "0x2000622")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x2000979")]
		public enum DiffractionFlags
		{
			[Token(Token = "0x40023EB")]
			UseBuiltInParam = 1,
			[Token(Token = "0x40023EC")]
			UseObstruction = 2,
			[Token(Token = "0x40023ED")]
			CalcEmitterVirtualPosition = 8
		}

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEB754", Offset = "0xEEB754")]
		public uint m_PoolSize;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEB78C", Offset = "0xEEB78C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEEB78C", Offset = "0xEEB78C")]
		public uint m_MaxSoundPropagationDepth;

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEB7E0", Offset = "0xEEB7E0")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0xEEB7E0", Offset = "0xEEB7E0")]
		public DiffractionFlags m_DiffractionFlags;

		[Token(Token = "0x6002DDD")]
		[Address(RVA = "0x18090A4", Offset = "0x18090A4", VA = "0x18090A4")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x40019DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9734", Offset = "0xEE9734")]
	public string m_BasePath;

	[Token(Token = "0x40019E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE976C", Offset = "0xEE976C")]
	public string m_StartupLanguage;

	[Token(Token = "0x40019E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE97A4", Offset = "0xEE97A4")]
	public uint m_PreparePoolSize;

	[Token(Token = "0x40019E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE97DC", Offset = "0xEE97DC")]
	public int m_CallbackManagerBufferSize;

	[Token(Token = "0x40019E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9814", Offset = "0xEE9814")]
	public bool m_EngineLogging;

	[Token(Token = "0x40019E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE984C", Offset = "0xEE984C")]
	public uint m_MaximumNumberOfMemoryPools;

	[Token(Token = "0x40019E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9884", Offset = "0xEE9884")]
	public uint m_MaximumNumberOfPositioningPaths;

	[Token(Token = "0x40019E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE98BC", Offset = "0xEE98BC")]
	public uint m_DefaultPoolSize;

	[Token(Token = "0x40019E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE98F4", Offset = "0xEE98F4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE98F4", Offset = "0xEE98F4")]
	public float m_MemoryCutoffThreshold;

	[Token(Token = "0x40019E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9948", Offset = "0xEE9948")]
	public uint m_CommandQueueSize;

	[Token(Token = "0x40019E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9980", Offset = "0xEE9980")]
	public uint m_SamplesPerFrame;

	[Token(Token = "0x40019EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE99B8", Offset = "0xEE99B8")]
	public AkCommonOutputSettings m_MainOutputSettings;

	[Token(Token = "0x40019EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE99F0", Offset = "0xEE99F0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE99F0", Offset = "0xEE99F0")]
	public float m_StreamingLookAheadRatio;

	[Token(Token = "0x40019EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9A44", Offset = "0xEE9A44")]
	public uint m_StreamManagerPoolSize;

	[Token(Token = "0x40019ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9A7C", Offset = "0xEE9A7C")]
	public uint m_SampleRate;

	[Token(Token = "0x40019EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9AB4", Offset = "0xEE9AB4")]
	public uint m_LowerEnginePoolSize;

	[Token(Token = "0x40019EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9AEC", Offset = "0xEE9AEC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEE9AEC", Offset = "0xEE9AEC")]
	public float m_LowerEngineMemoryCutoffThreshold;

	[Token(Token = "0x40019F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9B40", Offset = "0xEE9B40")]
	public ushort m_NumberOfRefillsInVoice;

	[Token(Token = "0x40019F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9B78", Offset = "0xEE9B78")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x600238B")]
	[Address(RVA = "0x1808CF4", Offset = "0x1808CF4", VA = "0x1808CF4")]
	public void CopyTo(AkMemSettings settings)
	{
	}

	[Token(Token = "0x600238C")]
	[Address(RVA = "0x1808F08", Offset = "0x1808F08", VA = "0x1808F08", Slot = "5")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x600238D")]
	[Address(RVA = "0x1808D3C", Offset = "0x1808D3C", VA = "0x1808D3C")]
	public void CopyTo(AkMusicSettings settings)
	{
	}

	[Token(Token = "0x600238E")]
	[Address(RVA = "0x1808D18", Offset = "0x1808D18", VA = "0x1808D18")]
	public void CopyTo(AkStreamMgrSettings settings)
	{
	}

	[Token(Token = "0x600238F")]
	[Address(RVA = "0x1808FAC", Offset = "0x1808FAC", VA = "0x1808FAC", Slot = "6")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x6002390")]
	[Address(RVA = "0x1808FB0", Offset = "0x1808FB0", VA = "0x1808FB0", Slot = "7")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x6002391")]
	[Address(RVA = "0x1809014", Offset = "0x1809014", VA = "0x1809014", Slot = "8")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x6002392")]
	[Address(RVA = "0x1809080", Offset = "0x1809080", VA = "0x1809080", Slot = "9")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x6002393")]
	[Address(RVA = "0x1809084", Offset = "0x1809084", VA = "0x1809084", Slot = "4")]
	public override void Validate()
	{
	}

	[Token(Token = "0x6002394")]
	[Address(RVA = "0x17FBD0C", Offset = "0x17FBD0C", VA = "0x17FBD0C")]
	public AkCommonUserSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x20003AC")]
public class AkCommonAdvancedSettings : AkSettingsValidationHandler
{
	[Serializable]
	[Token(Token = "0x2000623")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEB868", Offset = "0xEEB868")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEEB868", Offset = "0xEEB868")]
		public float m_DiffractionShadowAttenuationFactor;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEB8BC", Offset = "0xEEB8BC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEEB8BC", Offset = "0xEEB8BC")]
		public float m_DiffractionShadowDegrees;

		[Token(Token = "0x6002DDE")]
		[Address(RVA = "0x1808564", Offset = "0x1808564", VA = "0x1808564")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x40019F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9BB0", Offset = "0xEE9BB0")]
	public uint m_IOMemorySize;

	[Token(Token = "0x40019F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9BE8", Offset = "0xEE9BE8")]
	public float m_TargetAutoStreamBufferLengthMs;

	[Token(Token = "0x40019F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9C20", Offset = "0xEE9C20")]
	public bool m_UseStreamCache;

	[Token(Token = "0x40019F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9C58", Offset = "0xEE9C58")]
	public uint m_MaximumPinnedBytesInCache;

	[Token(Token = "0x40019F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9C90", Offset = "0xEE9C90")]
	public int m_PrepareEventMemoryPoolID;

	[Token(Token = "0x40019F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9CC8", Offset = "0xEE9CC8")]
	public bool m_EnableGameSyncPreparation;

	[Token(Token = "0x40019F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9D00", Offset = "0xEE9D00")]
	public uint m_ContinuousPlaybackLookAhead;

	[Token(Token = "0x40019F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9D38", Offset = "0xEE9D38")]
	public uint m_MonitorPoolSize;

	[Token(Token = "0x40019FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9D70", Offset = "0xEE9D70")]
	public uint m_MonitorQueuePoolSize;

	[Token(Token = "0x40019FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9DA8", Offset = "0xEE9DA8")]
	public uint m_MaximumHardwareTimeoutMs;

	[Token(Token = "0x40019FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9DE0", Offset = "0xEE9DE0")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x6002395")]
	[Address(RVA = "0x180814C", Offset = "0x180814C", VA = "0x180814C", Slot = "5")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x6002396")]
	[Address(RVA = "0x1808390", Offset = "0x1808390", VA = "0x1808390", Slot = "6")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x6002397")]
	[Address(RVA = "0x1808414", Offset = "0x1808414", VA = "0x1808414", Slot = "7")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x6002398")]
	[Address(RVA = "0x1808418", Offset = "0x1808418", VA = "0x1808418", Slot = "8")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x6002399")]
	[Address(RVA = "0x180846C", Offset = "0x180846C", VA = "0x180846C", Slot = "9")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x600239A")]
	[Address(RVA = "0x1808470", Offset = "0x1808470", VA = "0x1808470", Slot = "4")]
	public override void Validate()
	{
	}

	[Token(Token = "0x600239B")]
	[Address(RVA = "0x17FBF30", Offset = "0x17FBF30", VA = "0x17FBF30")]
	public AkCommonAdvancedSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x20003AD")]
public class AkCommonCommSettings : AkSettingsValidationHandler
{
	[Token(Token = "0x40019FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9E18", Offset = "0xEE9E18")]
	public uint m_PoolSize;

	[Token(Token = "0x40019FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ushort DefaultDiscoveryBroadcastPort;

	[Token(Token = "0x40019FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9E50", Offset = "0xEE9E50")]
	public ushort m_DiscoveryBroadcastPort;

	[Token(Token = "0x4001A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9E88", Offset = "0xEE9E88")]
	public ushort m_CommandPort;

	[Token(Token = "0x4001A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9EC0", Offset = "0xEE9EC0")]
	public ushort m_NotificationPort;

	[Token(Token = "0x4001A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9EF8", Offset = "0xEE9EF8")]
	public bool m_InitializeSystemComms;

	[Token(Token = "0x4001A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEE9F30", Offset = "0xEE9F30")]
	public string m_NetworkName;

	[Token(Token = "0x600239C")]
	[Address(RVA = "0x1808578", Offset = "0x1808578", VA = "0x1808578", Slot = "5")]
	public virtual void CopyTo(AkCommunicationSettings settings)
	{
	}

	[Token(Token = "0x600239D")]
	[Address(RVA = "0x18088EC", Offset = "0x18088EC", VA = "0x18088EC")]
	public AkCommonCommSettings()
	{
	}
}
[Token(Token = "0x20003AE")]
public abstract class AkCommonPlatformSettings : AkBasePlatformSettings
{
	[Token(Token = "0x17000331")]
	public override AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x60023A2")]
		[Address(RVA = "0x1808B28", Offset = "0x1808B28", VA = "0x1808B28", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000332")]
	public override AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x60023A3")]
		[Address(RVA = "0x1808D5C", Offset = "0x1808D5C", VA = "0x1808D5C", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000333")]
	public override AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x1808DD0", Offset = "0x1808DD0", VA = "0x1808DD0", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000334")]
	public override string InitialLanguage
	{
		[Token(Token = "0x60023A5")]
		[Address(RVA = "0x1808E60", Offset = "0x1808E60", VA = "0x1808E60", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000335")]
	public override string SoundbankPath
	{
		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x1808E88", Offset = "0x1808E88", VA = "0x1808E88", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000336")]
	public override AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x1808EB0", Offset = "0x1808EB0", VA = "0x1808EB0", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600239F")]
	protected abstract AkCommonUserSettings GetUserSettings();

	[Token(Token = "0x60023A0")]
	protected abstract AkCommonAdvancedSettings GetAdvancedSettings();

	[Token(Token = "0x60023A1")]
	protected abstract AkCommonCommSettings GetCommsSettings();

	[Token(Token = "0x60023A8")]
	[Address(RVA = "0x1808F00", Offset = "0x1808F00", VA = "0x1808F00")]
	protected AkCommonPlatformSettings()
	{
	}
}
[Token(Token = "0x20003AF")]
public class AkDiffractionPathInfoArray : AkBaseArray<AkDiffractionPathInfo>
{
	[Token(Token = "0x17000337")]
	protected override int StructureSize
	{
		[Token(Token = "0x60023AA")]
		[Address(RVA = "0x180AB88", Offset = "0x180AB88", VA = "0x180AB88", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60023A9")]
	[Address(RVA = "0x180AB28", Offset = "0x180AB28", VA = "0x180AB28")]
	public AkDiffractionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x60023AB")]
	[Address(RVA = "0x180ABE8", Offset = "0x180ABE8", VA = "0x180ABE8", Slot = "8")]
	protected override AkDiffractionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60023AC")]
	[Address(RVA = "0x180AC50", Offset = "0x180AC50", VA = "0x180AC50", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkDiffractionPathInfo other)
	{
	}
}
[Token(Token = "0x20003B0")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE2964", Offset = "0xEE2964")]
public class AkEnumFlagAttribute : PropertyAttribute
{
	[Token(Token = "0x4001A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Type Type;

	[Token(Token = "0x60023AD")]
	[Address(RVA = "0x1F7ADB4", Offset = "0x1F7ADB4", VA = "0x1F7ADB4")]
	public AkEnumFlagAttribute(Type type)
	{
	}
}
[Token(Token = "0x20003B1")]
public class AkLogger
{
	[Token(Token = "0x2000624")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xEE50C8", Offset = "0xEE50C8")]
	public delegate void ErrorLoggerInteropDelegate(string message);

	[Token(Token = "0x4001A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkLogger ms_Instance;

	[Token(Token = "0x4001A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ErrorLoggerInteropDelegate errorLoggerDelegate;

	[Token(Token = "0x17000338")]
	public static AkLogger Instance
	{
		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x1F85984", Offset = "0x1F85984", VA = "0x1F85984")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60023AE")]
	[Address(RVA = "0x1F85848", Offset = "0x1F85848", VA = "0x1F85848")]
	private AkLogger()
	{
	}

	[Token(Token = "0x60023B0")]
	[Address(RVA = "0x1F859EC", Offset = "0x1F859EC", VA = "0x1F859EC", Slot = "1")]
	~AkLogger()
	{
	}

	[Token(Token = "0x60023B1")]
	[Address(RVA = "0x1F85B0C", Offset = "0x1F85B0C", VA = "0x1F85B0C")]
	public void Init()
	{
	}

	[Token(Token = "0x60023B2")]
	[Address(RVA = "0x1F857C0", Offset = "0x1F857C0", VA = "0x1F857C0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xEF11C8", Offset = "0xEF11C8")]
	public static void WwiseInternalLogError(string message)
	{
	}

	[Token(Token = "0x60023B3")]
	[Address(RVA = "0x1F85B10", Offset = "0x1F85B10", VA = "0x1F85B10")]
	public static void Message(string message)
	{
	}

	[Token(Token = "0x60023B4")]
	[Address(RVA = "0x1F85B98", Offset = "0x1F85B98", VA = "0x1F85B98")]
	public static void Warning(string message)
	{
	}

	[Token(Token = "0x60023B5")]
	[Address(RVA = "0x1F85C20", Offset = "0x1F85C20", VA = "0x1F85C20")]
	public static void Error(string message)
	{
	}
}
[Token(Token = "0x20003B2")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xEE299C", Offset = "0xEE299C")]
public class AkMIDIPostArray
{
	[Token(Token = "0x4001A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int m_Count;

	[Token(Token = "0x4001A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private readonly int SIZE_OF;

	[Token(Token = "0x4001A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x17000339")]
	public AkMIDIPost Item
	{
		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x1F8A78C", Offset = "0x1F8A78C", VA = "0x1F8A78C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x1F8A8A8", Offset = "0x1F8A8A8", VA = "0x1F8A8A8")]
		set
		{
		}
	}

	[Token(Token = "0x60023B7")]
	[Address(RVA = "0x1F8A6CC", Offset = "0x1F8A6CC", VA = "0x1F8A6CC")]
	public AkMIDIPostArray(int size)
	{
	}

	[Token(Token = "0x60023BA")]
	[Address(RVA = "0x1F8A9BC", Offset = "0x1F8A9BC", VA = "0x1F8A9BC", Slot = "1")]
	~AkMIDIPostArray()
	{
	}

	[Token(Token = "0x60023BB")]
	[Address(RVA = "0x1F8AA78", Offset = "0x1F8AA78", VA = "0x1F8AA78")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject)
	{
	}

	[Token(Token = "0x60023BC")]
	[Address(RVA = "0x1F8AB44", Offset = "0x1F8AB44", VA = "0x1F8AB44")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject, int count)
	{
	}

	[Token(Token = "0x60023BD")]
	[Address(RVA = "0x1F8AC60", Offset = "0x1F8AC60", VA = "0x1F8AC60")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60023BE")]
	[Address(RVA = "0x1F8AC68", Offset = "0x1F8AC68", VA = "0x1F8AC68")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x60023BF")]
	[Address(RVA = "0x1F8A86C", Offset = "0x1F8A86C", VA = "0x1F8A86C")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x20003B3")]
public class AkPositionArray : IDisposable
{
	[Token(Token = "0x4001A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x4001A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x4001A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x4001A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE9F68", Offset = "0xEE9F68")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x1700033A")]
	public uint Count
	{
		[Token(Token = "0x60023C1")]
		[Address(RVA = "0x1F9291C", Offset = "0x1F9291C", VA = "0x1F9291C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF122C", Offset = "0xEF122C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60023C2")]
		[Address(RVA = "0x1F92924", Offset = "0x1F92924", VA = "0x1F92924")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF123C", Offset = "0xEF123C")]
		private set
		{
		}
	}

	[Token(Token = "0x60023C0")]
	[Address(RVA = "0x1F9288C", Offset = "0x1F9288C", VA = "0x1F9288C")]
	public AkPositionArray(uint in_Count)
	{
	}

	[Token(Token = "0x60023C3")]
	[Address(RVA = "0x1F9292C", Offset = "0x1F9292C", VA = "0x1F9292C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60023C4")]
	[Address(RVA = "0x1F929B8", Offset = "0x1F929B8", VA = "0x1F929B8", Slot = "1")]
	~AkPositionArray()
	{
	}

	[Token(Token = "0x60023C5")]
	[Address(RVA = "0x1F92A20", Offset = "0x1F92A20", VA = "0x1F92A20")]
	public void Reset()
	{
	}

	[Token(Token = "0x60023C6")]
	[Address(RVA = "0x1F92A30", Offset = "0x1F92A30", VA = "0x1F92A30")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top)
	{
	}
}
[Token(Token = "0x20003B4")]
public class AkPropagationPathInfoArray : AkBaseArray<AkPropagationPathInfo>
{
	[Token(Token = "0x1700033B")]
	protected override int StructureSize
	{
		[Token(Token = "0x60023C8")]
		[Address(RVA = "0x13409D0", Offset = "0x13409D0", VA = "0x13409D0", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60023C7")]
	[Address(RVA = "0x1340970", Offset = "0x1340970", VA = "0x1340970")]
	public AkPropagationPathInfoArray(int count)
	{
	}

	[Token(Token = "0x60023C9")]
	[Address(RVA = "0x1340A2C", Offset = "0x1340A2C", VA = "0x1340A2C", Slot = "8")]
	protected override AkPropagationPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60023CA")]
	[Address(RVA = "0x1340A94", Offset = "0x1340A94", VA = "0x1340A94", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkPropagationPathInfo other)
	{
	}
}
[Token(Token = "0x20003B5")]
public class AkReflectionPathInfoArray : AkBaseArray<AkReflectionPathInfo>
{
	[Token(Token = "0x1700033C")]
	protected override int StructureSize
	{
		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x1343500", Offset = "0x1343500", VA = "0x1343500", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60023CB")]
	[Address(RVA = "0x13434A0", Offset = "0x13434A0", VA = "0x13434A0")]
	public AkReflectionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x60023CD")]
	[Address(RVA = "0x134355C", Offset = "0x134355C", VA = "0x134355C", Slot = "8")]
	protected override AkReflectionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60023CE")]
	[Address(RVA = "0x13435C4", Offset = "0x13435C4", VA = "0x13435C4", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkReflectionPathInfo other)
	{
	}
}
[Token(Token = "0x20003B6")]
public class AkShowOnlyAttribute : PropertyAttribute
{
	[Token(Token = "0x60023CF")]
	[Address(RVA = "0x13488C4", Offset = "0x13488C4", VA = "0x13488C4")]
	public AkShowOnlyAttribute()
	{
	}
}
[Token(Token = "0x20003B7")]
public class AkTriangleArray : AkBaseArray<AkTriangle>
{
	[Token(Token = "0x1700033D")]
	protected override int StructureSize
	{
		[Token(Token = "0x60023D1")]
		[Address(RVA = "0x1550708", Offset = "0x1550708", VA = "0x1550708", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60023D0")]
	[Address(RVA = "0x154E51C", Offset = "0x154E51C", VA = "0x154E51C")]
	public AkTriangleArray(int count)
	{
	}

	[Token(Token = "0x60023D2")]
	[Address(RVA = "0x1550768", Offset = "0x1550768", VA = "0x1550768", Slot = "7")]
	protected override void ClearAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60023D3")]
	[Address(RVA = "0x15507D0", Offset = "0x15507D0", VA = "0x15507D0", Slot = "8")]
	protected override AkTriangle CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60023D4")]
	[Address(RVA = "0x1550838", Offset = "0x1550838", VA = "0x1550838", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkTriangle other)
	{
	}
}
[Token(Token = "0x20003B8")]
public class AkUtilities
{
	[Token(Token = "0x2000625")]
	public class ShortIDGenerator
	{
		[Token(Token = "0x400224D")]
		private const uint s_prime32 = 16777619u;

		[Token(Token = "0x400224E")]
		private const uint s_offsetBasis32 = 2166136261u;

		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte s_hashSize;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static uint s_mask;

		[Token(Token = "0x17000485")]
		public static byte HashSize
		{
			[Token(Token = "0x6002DE4")]
			[Address(RVA = "0x1552578", Offset = "0x1552578", VA = "0x1552578")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002DE5")]
			[Address(RVA = "0x15524F0", Offset = "0x15524F0", VA = "0x15524F0")]
			set
			{
			}
		}

		[Token(Token = "0x6002DE3")]
		[Address(RVA = "0x15524E8", Offset = "0x15524E8", VA = "0x15524E8")]
		static ShortIDGenerator()
		{
		}

		[Token(Token = "0x6002DE6")]
		[Address(RVA = "0x1550BB8", Offset = "0x1550BB8", VA = "0x1550BB8")]
		public static uint Compute(string in_name)
		{
			return default(uint);
		}

		[Token(Token = "0x6002DE7")]
		[Address(RVA = "0x15525E0", Offset = "0x15525E0", VA = "0x15525E0")]
		public ShortIDGenerator()
		{
		}
	}

	[Token(Token = "0x60023D5")]
	[Address(RVA = "0x15524E0", Offset = "0x15524E0", VA = "0x15524E0")]
	public AkUtilities()
	{
	}
}
[Token(Token = "0x20003B9")]
public class AkVertexArray : AkBaseArray<AkVertex>
{
	[Token(Token = "0x1700033E")]
	protected override int StructureSize
	{
		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x15531A8", Offset = "0x15531A8", VA = "0x15531A8", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60023D6")]
	[Address(RVA = "0x154E348", Offset = "0x154E348", VA = "0x154E348")]
	public AkVertexArray(int count)
	{
	}

	[Token(Token = "0x60023D8")]
	[Address(RVA = "0x1553208", Offset = "0x1553208", VA = "0x1553208", Slot = "7")]
	protected override void ClearAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60023D9")]
	[Address(RVA = "0x1553270", Offset = "0x1553270", VA = "0x1553270", Slot = "8")]
	protected override AkVertex CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60023DA")]
	[Address(RVA = "0x15532D8", Offset = "0x15532D8", VA = "0x15532D8", Slot = "9")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkVertex other)
	{
	}
}
[Token(Token = "0x20003BA")]
public class AkWwiseInitializationSettings : AkCommonPlatformSettings
{
	[Token(Token = "0x2000626")]
	public abstract class PlatformSettings : AkCommonPlatformSettings
	{
		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private List<string> IgnorePropertyNameList;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private List<string> GlobalPropertyNameList;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<string> _GlobalPropertyHashSet;

		[Token(Token = "0x17000486")]
		public HashSet<string> GlobalPropertyHashSet
		{
			[Token(Token = "0x6002DEE")]
			[Address(RVA = "0x1555700", Offset = "0x1555700", VA = "0x1555700")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002DEF")]
			[Address(RVA = "0x1555794", Offset = "0x1555794", VA = "0x1555794")]
			set
			{
			}
		}

		[Token(Token = "0x6002DE8")]
		[Address(RVA = "0x1555224", Offset = "0x1555224", VA = "0x1555224")]
		public void IgnorePropertyValue(string propertyPath)
		{
		}

		[Token(Token = "0x6002DE9")]
		[Address(RVA = "0x15552BC", Offset = "0x15552BC", VA = "0x15552BC")]
		public bool IsPropertyIgnored(string propertyPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DEA")]
		[Address(RVA = "0x1553398", Offset = "0x1553398", VA = "0x1553398")]
		protected PlatformSettings()
		{
		}

		[Token(Token = "0x6002DEB")]
		[Address(RVA = "0x1555324", Offset = "0x1555324", VA = "0x1555324")]
		public void SetUseGlobalPropertyValue(string propertyPath, bool use)
		{
		}

		[Token(Token = "0x6002DEC")]
		[Address(RVA = "0x15553E0", Offset = "0x15553E0", VA = "0x15553E0")]
		public void SetGlobalPropertyValues(IEnumerable enumerable)
		{
		}

		[Token(Token = "0x6002DED")]
		[Address(RVA = "0x1555698", Offset = "0x1555698", VA = "0x1555698")]
		private bool IsUsingGlobalPropertyValue(string propertyPath)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000627")]
	public class CommonPlatformSettings : PlatformSettings
	{
		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public AkCommonUserSettings UserSettings;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public AkCommonAdvancedSettings AdvancedSettings;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public AkCommonCommSettings CommsSettings;

		[Token(Token = "0x6002DF0")]
		[Address(RVA = "0x1555208", Offset = "0x1555208", VA = "0x1555208", Slot = "10")]
		protected override AkCommonUserSettings GetUserSettings()
		{
			return null;
		}

		[Token(Token = "0x6002DF1")]
		[Address(RVA = "0x1555210", Offset = "0x1555210", VA = "0x1555210", Slot = "11")]
		protected override AkCommonAdvancedSettings GetAdvancedSettings()
		{
			return null;
		}

		[Token(Token = "0x6002DF2")]
		[Address(RVA = "0x1555218", Offset = "0x1555218", VA = "0x1555218", Slot = "12")]
		protected override AkCommonCommSettings GetCommsSettings()
		{
			return null;
		}

		[Token(Token = "0x6002DF3")]
		[Address(RVA = "0x1555220", Offset = "0x1555220", VA = "0x1555220")]
		public CommonPlatformSettings()
		{
		}
	}

	[Token(Token = "0x4001A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<string> PlatformSettingsNameList;

	[Token(Token = "0x4001A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<PlatformSettings> PlatformSettingsList;

	[Token(Token = "0x4001A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public List<string> InvalidReferencePlatforms;

	[Token(Token = "0x4001A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4001A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public AkCommonAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4001A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x4001A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] AllGlobalValues;

	[Token(Token = "0x4001A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AkWwiseInitializationSettings m_Instance;

	[Token(Token = "0x4001A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static AkBasePlatformSettings m_ActivePlatformSettings;

	[Token(Token = "0x1700033F")]
	public bool IsValid
	{
		[Token(Token = "0x60023DB")]
		[Address(RVA = "0x1553490", Offset = "0x1553490", VA = "0x1553490")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000340")]
	public int Count
	{
		[Token(Token = "0x60023DC")]
		[Address(RVA = "0x15534F4", Offset = "0x15534F4", VA = "0x15534F4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000341")]
	public static AkWwiseInitializationSettings Instance
	{
		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x155355C", Offset = "0x155355C", VA = "0x155355C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000342")]
	public static AkBasePlatformSettings ActivePlatformSettings
	{
		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x1553848", Offset = "0x1553848", VA = "0x1553848")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60023DD")]
	[Address(RVA = "0x1553544", Offset = "0x1553544", VA = "0x1553544", Slot = "10")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x60023DE")]
	[Address(RVA = "0x155354C", Offset = "0x155354C", VA = "0x155354C", Slot = "11")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x60023DF")]
	[Address(RVA = "0x1553554", Offset = "0x1553554", VA = "0x1553554", Slot = "12")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x60023E1")]
	[Address(RVA = "0x1553698", Offset = "0x1553698", VA = "0x1553698")]
	private static AkBasePlatformSettings GetPlatformSettings(string platformName)
	{
		return null;
	}

	[Token(Token = "0x60023E3")]
	[Address(RVA = "0x1553974", Offset = "0x1553974", VA = "0x1553974")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60023E4")]
	[Address(RVA = "0x1553AE8", Offset = "0x1553AE8", VA = "0x1553AE8")]
	public static bool InitializeSoundEngine()
	{
		return default(bool);
	}

	[Token(Token = "0x60023E5")]
	[Address(RVA = "0x15540B8", Offset = "0x15540B8", VA = "0x15540B8")]
	public static bool ResetSoundEngine(bool isPlaying)
	{
		return default(bool);
	}

	[Token(Token = "0x60023E6")]
	[Address(RVA = "0x1553FA0", Offset = "0x1553FA0", VA = "0x1553FA0")]
	private static void LoadInitBank()
	{
	}

	[Token(Token = "0x60023E7")]
	[Address(RVA = "0x15541B8", Offset = "0x15541B8", VA = "0x15541B8")]
	public static void TerminateSoundEngine()
	{
	}

	[Token(Token = "0x60023E8")]
	[Address(RVA = "0x155436C", Offset = "0x155436C", VA = "0x155436C")]
	private static void SleepForMilliseconds(double milliseconds)
	{
	}

	[Token(Token = "0x60023E9")]
	[Address(RVA = "0x15544C0", Offset = "0x15544C0", VA = "0x15544C0")]
	public AkWwiseInitializationSettings()
	{
	}
}
[Token(Token = "0x20003BB")]
public class WwiseAcousticTextureReference : WwiseObjectReference
{
	[Token(Token = "0x4001A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000343")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x60023EB")]
		[Address(RVA = "0x1D747F8", Offset = "0x1D747F8", VA = "0x1D747F8", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x60023EC")]
	[Address(RVA = "0x1D74860", Offset = "0x1D74860", VA = "0x1D74860")]
	public WwiseAcousticTextureReference()
	{
	}
}
[Token(Token = "0x20003BC")]
public class WwiseAuxBusReference : WwiseObjectReference
{
	[Token(Token = "0x4001A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000344")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x1D762B0", Offset = "0x1D762B0", VA = "0x1D762B0", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x60023EF")]
	[Address(RVA = "0x1D76318", Offset = "0x1D76318", VA = "0x1D76318")]
	public WwiseAuxBusReference()
	{
	}
}
[Token(Token = "0x20003BD")]
public class WwiseBankReference : WwiseObjectReference
{
	[Token(Token = "0x4001A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000345")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x1D76374", Offset = "0x1D76374", VA = "0x1D76374", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x60023F2")]
	[Address(RVA = "0x1D763DC", Offset = "0x1D763DC", VA = "0x1D763DC")]
	public WwiseBankReference()
	{
	}
}
[Token(Token = "0x20003BE")]
public class WwiseEventReference : WwiseObjectReference
{
	[Token(Token = "0x4001A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000346")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x1D779BC", Offset = "0x1D779BC", VA = "0x1D779BC", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x60023F5")]
	[Address(RVA = "0x1D77A24", Offset = "0x1D77A24", VA = "0x1D77A24")]
	public WwiseEventReference()
	{
	}
}
[Token(Token = "0x20003BF")]
public abstract class WwiseObjectReference : ScriptableObject
{
	[Token(Token = "0x4001A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AkShowOnly]
	[SerializeField]
	private string objectName;

	[Token(Token = "0x4001A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AkShowOnly]
	[SerializeField]
	private uint id;

	[Token(Token = "0x4001A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AkShowOnly]
	[SerializeField]
	private string guid;

	[Token(Token = "0x17000347")]
	public Guid Guid
	{
		[Token(Token = "0x60023F7")]
		[Address(RVA = "0x1D789A4", Offset = "0x1D789A4", VA = "0x1D789A4")]
		get
		{
			return default(Guid);
		}
	}

	[Token(Token = "0x17000348")]
	public string ObjectName
	{
		[Token(Token = "0x60023F8")]
		[Address(RVA = "0x1D78A48", Offset = "0x1D78A48", VA = "0x1D78A48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000349")]
	public virtual string DisplayName
	{
		[Token(Token = "0x60023F9")]
		[Address(RVA = "0x1D78A50", Offset = "0x1D78A50", VA = "0x1D78A50", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700034A")]
	public uint Id
	{
		[Token(Token = "0x60023FA")]
		[Address(RVA = "0x1D78A58", Offset = "0x1D78A58", VA = "0x1D78A58")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700034B")]
	public abstract WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x60023FB")]
		get;
	}

	[Token(Token = "0x60023FC")]
	[Address(RVA = "0x1D74868", Offset = "0x1D74868", VA = "0x1D74868")]
	protected WwiseObjectReference()
	{
	}
}
[Token(Token = "0x20003C0")]
public abstract class WwiseGroupValueObjectReference : WwiseObjectReference
{
	[Token(Token = "0x1700034C")]
	public abstract WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x60023FD")]
		get;
		[Token(Token = "0x60023FE")]
		set;
	}

	[Token(Token = "0x1700034D")]
	public abstract WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x60023FF")]
		get;
	}

	[Token(Token = "0x1700034E")]
	public override string DisplayName
	{
		[Token(Token = "0x6002400")]
		[Address(RVA = "0x1D77B5C", Offset = "0x1D77B5C", VA = "0x1D77B5C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002401")]
	[Address(RVA = "0x1D77C14", Offset = "0x1D77C14", VA = "0x1D77C14")]
	protected WwiseGroupValueObjectReference()
	{
	}
}
[Token(Token = "0x20003C1")]
public enum WwiseObjectType
{
	[Token(Token = "0x4001A1F")]
	None,
	[Token(Token = "0x4001A20")]
	AuxBus,
	[Token(Token = "0x4001A21")]
	Bus,
	[Token(Token = "0x4001A22")]
	Event,
	[Token(Token = "0x4001A23")]
	Folder,
	[Token(Token = "0x4001A24")]
	PhysicalFolder,
	[Token(Token = "0x4001A25")]
	Project,
	[Token(Token = "0x4001A26")]
	Soundbank,
	[Token(Token = "0x4001A27")]
	State,
	[Token(Token = "0x4001A28")]
	StateGroup,
	[Token(Token = "0x4001A29")]
	Switch,
	[Token(Token = "0x4001A2A")]
	SwitchGroup,
	[Token(Token = "0x4001A2B")]
	WorkUnit,
	[Token(Token = "0x4001A2C")]
	GameParameter,
	[Token(Token = "0x4001A2D")]
	Trigger,
	[Token(Token = "0x4001A2E")]
	AcousticTexture
}
[Token(Token = "0x20003C2")]
public class WwiseRtpcReference : WwiseObjectReference
{
	[Token(Token = "0x4001A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x1700034F")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002402")]
		[Address(RVA = "0x1D79348", Offset = "0x1D79348", VA = "0x1D79348", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6002403")]
	[Address(RVA = "0x1D793B0", Offset = "0x1D793B0", VA = "0x1D793B0")]
	public WwiseRtpcReference()
	{
	}
}
[Token(Token = "0x20003C3")]
public class WwiseStateGroupReference : WwiseObjectReference
{
	[Token(Token = "0x4001A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000350")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002405")]
		[Address(RVA = "0x1D7940C", Offset = "0x1D7940C", VA = "0x1D7940C", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6002406")]
	[Address(RVA = "0x1D79474", Offset = "0x1D79474", VA = "0x1D79474")]
	public WwiseStateGroupReference()
	{
	}
}
[Token(Token = "0x20003C4")]
public class WwiseStateReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x4001A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x4001A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly WwiseObjectType MyGroupWwiseObjectType;

	[Token(Token = "0x4001A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AkShowOnly]
	[SerializeField]
	private WwiseStateGroupReference WwiseStateGroupReference;

	[Token(Token = "0x17000351")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002408")]
		[Address(RVA = "0x1D794D0", Offset = "0x1D794D0", VA = "0x1D794D0", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x17000352")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6002409")]
		[Address(RVA = "0x1D79538", Offset = "0x1D79538", VA = "0x1D79538", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x600240A")]
		[Address(RVA = "0x1D79540", Offset = "0x1D79540", VA = "0x1D79540", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000353")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x600240B")]
		[Address(RVA = "0x1D795D4", Offset = "0x1D795D4", VA = "0x1D795D4", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x600240C")]
	[Address(RVA = "0x1D7963C", Offset = "0x1D7963C", VA = "0x1D7963C")]
	public WwiseStateReference()
	{
	}
}
[Token(Token = "0x20003C5")]
public class WwiseSwitchGroupReference : WwiseObjectReference
{
	[Token(Token = "0x4001A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000354")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x600240E")]
		[Address(RVA = "0x1D796A8", Offset = "0x1D796A8", VA = "0x1D796A8", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x600240F")]
	[Address(RVA = "0x1D79710", Offset = "0x1D79710", VA = "0x1D79710")]
	public WwiseSwitchGroupReference()
	{
	}
}
[Token(Token = "0x20003C6")]
public class WwiseSwitchReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x4001A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x4001A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly WwiseObjectType MyGroupWwiseObjectType;

	[Token(Token = "0x4001A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AkShowOnly]
	[SerializeField]
	private WwiseSwitchGroupReference WwiseSwitchGroupReference;

	[Token(Token = "0x17000355")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002411")]
		[Address(RVA = "0x1D7976C", Offset = "0x1D7976C", VA = "0x1D7976C", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x17000356")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6002412")]
		[Address(RVA = "0x1D797D4", Offset = "0x1D797D4", VA = "0x1D797D4", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002413")]
		[Address(RVA = "0x1D797DC", Offset = "0x1D797DC", VA = "0x1D797DC", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000357")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6002414")]
		[Address(RVA = "0x1D79870", Offset = "0x1D79870", VA = "0x1D79870", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6002415")]
	[Address(RVA = "0x1D798D8", Offset = "0x1D798D8", VA = "0x1D798D8")]
	public WwiseSwitchReference()
	{
	}
}
[Token(Token = "0x20003C7")]
public class WwiseTriggerReference : WwiseObjectReference
{
	[Token(Token = "0x4001A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000358")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6002417")]
		[Address(RVA = "0x1D79944", Offset = "0x1D79944", VA = "0x1D79944", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6002418")]
	[Address(RVA = "0x1D799AC", Offset = "0x1D799AC", VA = "0x1D799AC")]
	public WwiseTriggerReference()
	{
	}
}
[Token(Token = "0x20003C8")]
public class AkLinuxSettings : AkWwiseInitializationSettings.CommonPlatformSettings
{
	[Token(Token = "0x600241A")]
	[Address(RVA = "0x1F857B8", Offset = "0x1F857B8", VA = "0x1F857B8")]
	public AkLinuxSettings()
	{
	}
}
[Token(Token = "0x20003C9")]
public class AkMacSettings : AkWwiseInitializationSettings.CommonPlatformSettings
{
	[Token(Token = "0x600241B")]
	[Address(RVA = "0x1F8AC70", Offset = "0x1F8AC70", VA = "0x1F8AC70")]
	public AkMacSettings()
	{
	}
}
[Token(Token = "0x20003CA")]
public class AkWindowsSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x2000628")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x200097A")]
		public enum AudioAPI
		{
			[Token(Token = "0x40023EF")]
			None = 0,
			[Token(Token = "0x40023F0")]
			Wasapi = 1,
			[Token(Token = "0x40023F1")]
			XAudio2 = 2,
			[Token(Token = "0x40023F2")]
			DirectSound = 4,
			[Token(Token = "0x40023F3")]
			Default = -1
		}

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEB9B8", Offset = "0xEEB9B8")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0xEEB9B8", Offset = "0xEEB9B8")]
		public AudioAPI m_AudioAPI;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEBA40", Offset = "0xEEBA40")]
		public bool m_GlobalFocus;

		[Token(Token = "0x6002DF4")]
		[Address(RVA = "0x1553474", Offset = "0x1553474", VA = "0x1553474", Slot = "7")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x6002DF5")]
		[Address(RVA = "0x1553478", Offset = "0x1553478", VA = "0x1553478")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x4001A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4001A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4001A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x600241C")]
	[Address(RVA = "0x155337C", Offset = "0x155337C", VA = "0x155337C", Slot = "10")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x600241D")]
	[Address(RVA = "0x1553384", Offset = "0x1553384", VA = "0x1553384", Slot = "11")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x600241E")]
	[Address(RVA = "0x155338C", Offset = "0x155338C", VA = "0x155338C", Slot = "12")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x600241F")]
	[Address(RVA = "0x1553394", Offset = "0x1553394", VA = "0x1553394")]
	public AkWindowsSettings()
	{
	}
}
[Token(Token = "0x20003CB")]
public enum MultiPositionTypeLabel
{
	[Token(Token = "0x4001A3D")]
	Simple_Mode,
	[Token(Token = "0x4001A3E")]
	Large_Mode,
	[Token(Token = "0x4001A3F")]
	MultiPosition_Mode
}
[Token(Token = "0x20003CC")]
public class AkMultiPosEvent
{
	[Token(Token = "0x4001A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool eventIsPlaying;

	[Token(Token = "0x4001A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AkAmbient> list;

	[Token(Token = "0x6002420")]
	[Address(RVA = "0x1F8C2E8", Offset = "0x1F8C2E8", VA = "0x1F8C2E8")]
	public void FinishedPlaying(object in_cookie, AkCallbackType in_type, object in_info)
	{
	}

	[Token(Token = "0x6002421")]
	[Address(RVA = "0x1F8C2F0", Offset = "0x1F8C2F0", VA = "0x1F8C2F0")]
	public AkMultiPosEvent()
	{
	}
}
[Token(Token = "0x20003CD")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEE29D4", Offset = "0xEE29D4")]
public class AkAmbient : AkEvent
{
	[Token(Token = "0x4001A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, AkMultiPosEvent> multiPosEventTree;

	[Token(Token = "0x4001A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Vector3> multiPositionArray;

	[Token(Token = "0x4001A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AkMultiPositionType MultiPositionType;

	[Token(Token = "0x4001A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public MultiPositionTypeLabel multiPositionTypeLabel;

	[Token(Token = "0x4001A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEA120", Offset = "0xEEA120")]
	private AkAmbient <ParentAkAmbience>k__BackingField;

	[Token(Token = "0x17000359")]
	public AkAmbient ParentAkAmbience
	{
		[Token(Token = "0x6002422")]
		[Address(RVA = "0x17FAF6C", Offset = "0x17FAF6C", VA = "0x17FAF6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF124C", Offset = "0xEF124C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002423")]
		[Address(RVA = "0x17FAF74", Offset = "0x17FAF74", VA = "0x17FAF74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF125C", Offset = "0xEF125C")]
		set
		{
		}
	}

	[Token(Token = "0x6002424")]
	[Address(RVA = "0x17FAF7C", Offset = "0x17FAF7C", VA = "0x17FAF7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002425")]
	[Address(RVA = "0x17FB6AC", Offset = "0x17FB6AC", VA = "0x17FB6AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002426")]
	[Address(RVA = "0x17FB874", Offset = "0x17FB874", VA = "0x17FB874", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6002427")]
	[Address(RVA = "0x17FBA5C", Offset = "0x17FBA5C", VA = "0x17FBA5C")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6002428")]
	[Address(RVA = "0x17FB4EC", Offset = "0x17FB4EC", VA = "0x17FB4EC")]
	public AkPositionArray BuildMultiDirectionArray(AkMultiPosEvent eventPosList)
	{
		return null;
	}

	[Token(Token = "0x6002429")]
	[Address(RVA = "0x17FB314", Offset = "0x17FB314", VA = "0x17FB314")]
	private AkPositionArray BuildAkPositionArray()
	{
		return null;
	}

	[Token(Token = "0x600242A")]
	[Address(RVA = "0x17FBACC", Offset = "0x17FBACC", VA = "0x17FBACC")]
	public AkAmbient()
	{
	}
}
[Token(Token = "0x20003CE")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEE2A0C", Offset = "0xEE2A0C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE2A0C", Offset = "0xEE2A0C")]
[DisallowMultipleComponent]
public class AkAudioListener : MonoBehaviour
{
	[Token(Token = "0x2000629")]
	public class BaseListenerList
	{
		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<ulong> listenerIdList;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<AkAudioListener> listenerList;

		[Token(Token = "0x17000487")]
		public List<AkAudioListener> ListenerList
		{
			[Token(Token = "0x6002DF6")]
			[Address(RVA = "0x17FEF1C", Offset = "0x17FEF1C", VA = "0x17FEF1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002DF7")]
		[Address(RVA = "0x17FEF24", Offset = "0x17FEF24", VA = "0x17FEF24", Slot = "4")]
		public virtual bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF8")]
		[Address(RVA = "0x17FF014", Offset = "0x17FF014", VA = "0x17FF014", Slot = "5")]
		public virtual bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DF9")]
		[Address(RVA = "0x17FF104", Offset = "0x17FF104", VA = "0x17FF104")]
		public ulong[] GetListenerIds()
		{
			return null;
		}

		[Token(Token = "0x6002DFA")]
		[Address(RVA = "0x17FF15C", Offset = "0x17FF15C", VA = "0x17FF15C")]
		public BaseListenerList()
		{
		}
	}

	[Token(Token = "0x200062A")]
	public class DefaultListenerList : BaseListenerList
	{
		[Token(Token = "0x6002DFB")]
		[Address(RVA = "0x17FF20C", Offset = "0x17FF20C", VA = "0x17FF20C", Slot = "4")]
		public override bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DFC")]
		[Address(RVA = "0x17FF2E0", Offset = "0x17FF2E0", VA = "0x17FF2E0", Slot = "5")]
		public override bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002DFD")]
		[Address(RVA = "0x17FEF18", Offset = "0x17FEF18", VA = "0x17FEF18")]
		public DefaultListenerList()
		{
		}
	}

	[Token(Token = "0x4001A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly DefaultListenerList defaultListeners;

	[Token(Token = "0x4001A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong akGameObjectID;

	[Token(Token = "0x4001A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AkGameObj> EmittersToStartListeningTo;

	[Token(Token = "0x4001A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AkGameObj> EmittersToStopListeningTo;

	[Token(Token = "0x4001A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isDefaultListener;

	[Token(Token = "0x4001A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public int listenerId;

	[Token(Token = "0x1700035A")]
	public static DefaultListenerList DefaultListeners
	{
		[Token(Token = "0x600242C")]
		[Address(RVA = "0x17FE6B0", Offset = "0x17FE6B0", VA = "0x17FE6B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600242D")]
	[Address(RVA = "0x17FE718", Offset = "0x17FE718", VA = "0x17FE718")]
	public void StartListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x600242E")]
	[Address(RVA = "0x17FE79C", Offset = "0x17FE79C", VA = "0x17FE79C")]
	public void StopListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x600242F")]
	[Address(RVA = "0x17FE820", Offset = "0x17FE820", VA = "0x17FE820")]
	public void SetIsDefaultListener(bool isDefault)
	{
	}

	[Token(Token = "0x6002430")]
	[Address(RVA = "0x17FE980", Offset = "0x17FE980", VA = "0x17FE980")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002431")]
	[Address(RVA = "0x17FEA64", Offset = "0x17FEA64", VA = "0x17FEA64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002432")]
	[Address(RVA = "0x17FEB40", Offset = "0x17FEB40", VA = "0x17FEB40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002433")]
	[Address(RVA = "0x17FEC1C", Offset = "0x17FEC1C", VA = "0x17FEC1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6002434")]
	[Address(RVA = "0x17FED28", Offset = "0x17FED28", VA = "0x17FED28")]
	public ulong GetAkGameObjectID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6002435")]
	[Address(RVA = "0x17FED30", Offset = "0x17FED30", VA = "0x17FED30")]
	public void Migrate14()
	{
	}

	[Token(Token = "0x6002436")]
	[Address(RVA = "0x17FEDF4", Offset = "0x17FEDF4", VA = "0x17FEDF4")]
	public AkAudioListener()
	{
	}
}
[Token(Token = "0x20003CF")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEE2AA4", Offset = "0xEE2AA4")]
[ExecuteInEditMode]
public class AkBank : AkTriggerHandler
{
	[Token(Token = "0x4001A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Bank data;

	[Token(Token = "0x4001A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool decodeBank;

	[Token(Token = "0x4001A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool loadAsynchronous;

	[Token(Token = "0x4001A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool saveDecodedBank;

	[Token(Token = "0x4001A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<int> unloadTriggerList;

	[Token(Token = "0x4001A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEA140", Offset = "0xEEA140")]
	private string bankNameInternal;

	[Token(Token = "0x4001A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEA19C", Offset = "0xEEA19C")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x1700035B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF4358", Offset = "0xEF4358")]
	public string bankName
	{
		[Token(Token = "0x600243D")]
		[Address(RVA = "0x1800FD4", Offset = "0x1800FD4", VA = "0x1800FD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700035C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF4390", Offset = "0xEF4390")]
	public byte[] valueGuid
	{
		[Token(Token = "0x600243E")]
		[Address(RVA = "0x1801044", Offset = "0x1801044", VA = "0x1801044")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002438")]
	[Address(RVA = "0x1800D44", Offset = "0x1800D44", VA = "0x1800D44", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6002439")]
	[Address(RVA = "0x1800E34", Offset = "0x1800E34", VA = "0x1800E34", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600243A")]
	[Address(RVA = "0x1800EBC", Offset = "0x1800EBC", VA = "0x1800EBC", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x600243B")]
	[Address(RVA = "0x1800E1C", Offset = "0x1800E1C", VA = "0x1800E1C")]
	public void UnloadBank(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x600243C")]
	[Address(RVA = "0x1800EFC", Offset = "0x1800EFC", VA = "0x1800EFC", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600243F")]
	[Address(RVA = "0x1801108", Offset = "0x1801108", VA = "0x1801108")]
	public AkBank()
	{
	}
}
[Token(Token = "0x20003D0")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEE2AF0", Offset = "0xEE2AF0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE2AF0", Offset = "0xEE2AF0")]
public class AkEmitterObstructionOcclusion : AkObstructionOcclusion
{
	[Token(Token = "0x4001A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AkGameObj m_gameObj;

	[Token(Token = "0x6002440")]
	[Address(RVA = "0x180B6C0", Offset = "0x180B6C0", VA = "0x180B6C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002441")]
	[Address(RVA = "0x180B72C", Offset = "0x180B72C", VA = "0x180B72C", Slot = "4")]
	protected override void UpdateObstructionOcclusionValuesForListeners()
	{
	}

	[Token(Token = "0x6002442")]
	[Address(RVA = "0x180B894", Offset = "0x180B894", VA = "0x180B894", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x6002443")]
	[Address(RVA = "0x180B9CC", Offset = "0x180B9CC", VA = "0x180B9CC")]
	public AkEmitterObstructionOcclusion()
	{
	}
}
[Token(Token = "0x20003D1")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEE2B78", Offset = "0xEE2B78")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE2B78", Offset = "0xEE2B78")]
[ExecuteInEditMode]
public class AkEnvironment : MonoBehaviour
{
	[Token(Token = "0x200062B")]
	public class AkEnvironment_CompareByPriority : IComparer<AkEnvironment>
	{
		[Token(Token = "0x6002DFE")]
		[Address(RVA = "0x1F7B080", Offset = "0x1F7B080", VA = "0x1F7B080", Slot = "5")]
		public virtual int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x6002DFF")]
		[Address(RVA = "0x1F7B070", Offset = "0x1F7B070", VA = "0x1F7B070")]
		public AkEnvironment_CompareByPriority()
		{
		}
	}

	[Token(Token = "0x200062C")]
	public class AkEnvironment_CompareBySelectionAlgorithm : AkEnvironment_CompareByPriority
	{
		[Token(Token = "0x6002E00")]
		[Address(RVA = "0x1F7B120", Offset = "0x1F7B120", VA = "0x1F7B120", Slot = "5")]
		public override int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x6002E01")]
		[Address(RVA = "0x1F7B078", Offset = "0x1F7B078", VA = "0x1F7B078")]
		public AkEnvironment_CompareBySelectionAlgorithm()
		{
		}
	}

	[Token(Token = "0x4001A55")]
	public const int MAX_NB_ENVIRONMENTS = 4;

	[Token(Token = "0x4001A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AkEnvironment_CompareByPriority s_compareByPriority;

	[Token(Token = "0x4001A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AkEnvironment_CompareBySelectionAlgorithm s_compareBySelectionAlgorithm;

	[Token(Token = "0x4001A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool excludeOthers;

	[Token(Token = "0x4001A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isDefault;

	[Token(Token = "0x4001A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AuxBus data;

	[Token(Token = "0x4001A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEA1F8", Offset = "0xEEA1F8")]
	private Collider <Collider>k__BackingField;

	[Token(Token = "0x4001A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int priority;

	[Token(Token = "0x4001A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEA208", Offset = "0xEEA208")]
	private int auxBusIdInternal;

	[Token(Token = "0x4001A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEA264", Offset = "0xEEA264")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x1700035D")]
	public Collider Collider
	{
		[Token(Token = "0x6002444")]
		[Address(RVA = "0x1F7ADE8", Offset = "0x1F7ADE8", VA = "0x1F7ADE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF126C", Offset = "0xEF126C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6002445")]
		[Address(RVA = "0x1F7ADF0", Offset = "0x1F7ADF0", VA = "0x1F7ADF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF127C", Offset = "0xEF127C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700035E")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF43C8", Offset = "0xEF43C8")]
	public int m_auxBusID
	{
		[Token(Token = "0x6002448")]
		[Address(RVA = "0x1F7AE60", Offset = "0x1F7AE60", VA = "0x1F7AE60")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700035F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF4400", Offset = "0xEF4400")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6002449")]
		[Address(RVA = "0x1F7AE74", Offset = "0x1F7AE74", VA = "0x1F7AE74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002446")]
	[Address(RVA = "0x1F7ADF8", Offset = "0x1F7ADF8", VA = "0x1F7ADF8")]
	public float GetAuxSendValueForPosition(Vector3 in_position)
	{
		return default(float);
	}

	[Token(Token = "0x6002447")]
	[Address(RVA = "0x1F7AE00", Offset = "0x1F7AE00", VA = "0x1F7AE00")]
	public void Awake()
	{
	}

	[Token(Token = "0x600244A")]
	[Address(RVA = "0x1F7AF38", Offset = "0x1F7AF38", VA = "0x1F7AF38")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF128C", Offset = "0xEF128C")]
	public uint GetAuxBusID()
	{
		return default(uint);
	}

	[Token(Token = "0x600244B")]
	[Address(RVA = "0x1F7AF54", Offset = "0x1F7AF54", VA = "0x1F7AF54")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF12C4", Offset = "0xEF12C4")]
	public Collider GetCollider()
	{
		return null;
	}

	[Token(Token = "0x600244C")]
	[Address(RVA = "0x1F7AF5C", Offset = "0x1F7AF5C", VA = "0x1F7AF5C")]
	public AkEnvironment()
	{
	}
}
[Token(Token = "0x20003D2")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEE2C10", Offset = "0xEE2C10")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE2C10", Offset = "0xEE2C10")]
[ExecuteInEditMode]
public class AkEnvironmentPortal : MonoBehaviour
{
	[Token(Token = "0x4001A5F")]
	public const int MAX_ENVIRONMENTS_PER_PORTAL = 2;

	[Token(Token = "0x4001A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 axis;

	[Token(Token = "0x4001A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AkEnvironment[] environments;

	[Token(Token = "0x600244E")]
	[Address(RVA = "0x1F7B17C", Offset = "0x1F7B17C", VA = "0x1F7B17C")]
	public float GetAuxSendValueForPosition(Vector3 in_position, int index)
	{
		return default(float);
	}

	[Token(Token = "0x600244F")]
	[Address(RVA = "0x1F7B3E0", Offset = "0x1F7B3E0", VA = "0x1F7B3E0")]
	public AkEnvironmentPortal()
	{
	}
}
[Token(Token = "0x20003D3")]
public class AkEventCallbackMsg
{
	[Token(Token = "0x4001A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AkCallbackInfo info;

	[Token(Token = "0x4001A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sender;

	[Token(Token = "0x4001A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AkCallbackType type;

	[Token(Token = "0x6002450")]
	[Address(RVA = "0x1F7B530", Offset = "0x1F7B530", VA = "0x1F7B530")]
	public AkEventCallbackMsg()
	{
	}
}
[Token(Token = "0x20003D4")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEE2CA8", Offset = "0xEE2CA8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE2CA8", Offset = "0xEE2CA8")]
public class AkEvent : AkDragDropTriggerHandler
{
	[Serializable]
	[Token(Token = "0x200062D")]
	public class CallbackData
	{
		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CallbackFlags Flags;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FunctionName;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject GameObject;

		[Token(Token = "0x6002E02")]
		[Address(RVA = "0x1F7B5F8", Offset = "0x1F7B5F8", VA = "0x1F7B5F8")]
		public void CallFunction(AkEventCallbackMsg eventCallbackMsg)
		{
		}

		[Token(Token = "0x6002E03")]
		[Address(RVA = "0x1F7BAEC", Offset = "0x1F7BAEC", VA = "0x1F7BAEC")]
		public CallbackData()
		{
		}
	}

	[Token(Token = "0x4001A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AkActionOnEventType actionOnEventType;

	[Token(Token = "0x4001A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AkCurveInterpolation curveInterpolation;

	[Token(Token = "0x4001A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool enableActionOnEvent;

	[Token(Token = "0x4001A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AK.Wwise.Event data;

	[Token(Token = "0x4001A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool useCallbacks;

	[Token(Token = "0x4001A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<CallbackData> Callbacks;

	[Token(Token = "0x4001A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public uint playingId;

	[Token(Token = "0x4001A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject soundEmitterObject;

	[Token(Token = "0x4001A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float transitionDuration;

	[Token(Token = "0x4001A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AkEventCallbackMsg EventCallbackMsg;

	[Token(Token = "0x4001A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEA2C0", Offset = "0xEEA2C0")]
	private int eventIdInternal;

	[Token(Token = "0x4001A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEA31C", Offset = "0xEEA31C")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x4001A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEA378", Offset = "0xEEA378")]
	private AkEventCallbackData m_callbackDataInternal;

	[Token(Token = "0x17000360")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x6002451")]
		[Address(RVA = "0x1F7B488", Offset = "0x1F7B488", VA = "0x1F7B488", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000361")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF4438", Offset = "0xEF4438")]
	public int eventID
	{
		[Token(Token = "0x6002457")]
		[Address(RVA = "0x1F7B95C", Offset = "0x1F7B95C", VA = "0x1F7B95C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000362")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF4470", Offset = "0xEF4470")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6002458")]
		[Address(RVA = "0x1F7B970", Offset = "0x1F7B970", VA = "0x1F7B970")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000363")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF44A8", Offset = "0xEF44A8")]
	public AkEventCallbackData m_callbackData
	{
		[Token(Token = "0x6002459")]
		[Address(RVA = "0x1F7BA34", Offset = "0x1F7BA34", VA = "0x1F7BA34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6002452")]
	[Address(RVA = "0x1F7B490", Offset = "0x1F7B490", VA = "0x1F7B490", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6002453")]
	[Address(RVA = "0x1F7B538", Offset = "0x1F7B538", VA = "0x1F7B538")]
	private void Callback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6002454")]
	[Address(RVA = "0x1F7B6BC", Offset = "0x1F7B6BC", VA = "0x1F7B6BC", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6002455")]
	[Address(RVA = "0x1F7B928", Offset = "0x1F7B928", VA = "0x1F7B928")]
	public void Stop(int _transitionDuration)
	{
	}

	[Token(Token = "0x6002456")]
	[Address(RVA = "0x1F7B930", Offset = "0x1F7B930", VA = "0x1F7B930")]
	public void Stop(int _transitionDuration, AkCurveInterpolation _curveInterpolation)
	{
	}

	[Token(Token = "0x600245A")]
	[Address(RVA = "0x1F7BA3C", Offset = "0x1F7BA3C", VA = "0x1F7BA3C")]
	public AkEvent()
	{
	}
}
[Token(Token = "0x20003D5")]
public class AkEventCallbackData : ScriptableObject
{
	[Token(Token = "0x4001A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> callbackFlags;

	[Token(Token = "0x4001A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> callbackFunc;

	[Token(Token = "0x4001A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> callbackGameObj;

	[Token(Token = "0x4001A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int uFlags;

	[Token(Token = "0x600245B")]
	[Address(RVA = "0x1F7BAF4", Offset = "0x1F7BAF4", VA = "0x1F7BAF4")]
	public AkEventCallbackData()
	{
	}
}
[Token(Token = "0x20003D6")]
public class WwiseEventTracker
{
	[Token(Token = "0x4001A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float currentDuration;

	[Token(Token = "0x4001A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float currentDurationProportion;

	[Token(Token = "0x4001A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool eventIsPlaying;

	[Token(Token = "0x4001A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool fadeoutTriggered;

	[Token(Token = "0x4001A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public uint playingID;

	[Token(Token = "0x4001A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float previousEventStartTime;

	[Token(Token = "0x600245C")]
	[Address(RVA = "0x1D77A80", Offset = "0x1D77A80", VA = "0x1D77A80")]
	public void CallbackHandler(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x600245D")]
	[Address(RVA = "0x1D77B48", Offset = "0x1D77B48", VA = "0x1D77B48")]
	public WwiseEventTracker()
	{
	}
}
[Serializable]
[Token(Token = "0x20003D7")]
public class AkEventPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4001A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly WwiseEventTracker eventTracker;

	[Token(Token = "0x4001A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AK.Wwise.Event akEvent;

	[Token(Token = "0x4001A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float blendInDuration;

	[Token(Token = "0x4001A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float blendOutDuration;

	[Token(Token = "0x4001A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float easeInDuration;

	[Token(Token = "0x4001A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float easeOutDuration;

	[Token(Token = "0x4001A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ExposedReference<GameObject> emitterObjectRef;

	[Token(Token = "0x4001A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float eventDurationMax;

	[Token(Token = "0x4001A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float eventDurationMin;

	[Token(Token = "0x4001A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool overrideTrackEmitterObject;

	[Token(Token = "0x4001A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TimelineClip owningClip;

	[Token(Token = "0x4001A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool retriggerEvent;

	[Token(Token = "0x17000364")]
	public TimelineClip OwningClip
	{
		[Token(Token = "0x600245E")]
		[Address(RVA = "0x1F7C03C", Offset = "0x1F7C03C", VA = "0x1F7C03C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600245F")]
		[Address(RVA = "0x1F7C044", Offset = "0x1F7C044", VA = "0x1F7C044")]
		set
		{
		}
	}

	[Token(Token = "0x17000365")]
	public override double duration
	{
		[Token(Token = "0x6002460")]
		[Address(RVA = "0x1F7C04C", Offset = "0x1F7C04C", VA = "0x1F7C04C", Slot = "7")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x17000366")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6002461")]
		[Address(RVA = "0x1F7C068", Offset = "0x1F7C068", VA = "0x1F7C068", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6002462")]
	[Address(RVA = "0x1F7C074", Offset = "0x1F7C074", VA = "0x1F7C074")]
	public void setEaseInDuration(float d)
	{
	}

	[Token(Token = "0x6002463")]
	[Address(RVA = "0x1F7C07C", Offset = "0x1F7C07C", VA = "0x1F7C07C")]
	public void setEaseOutDuration(float d)
	{
	}

	[Token(Token = "0x6002464")]
	[Address(RVA = "0x1F7C084", Offset = "0x1F7C084", VA = "0x1F7C084")]
	public void setBlendInDuration(float d)
	{
	}

	[Token(Token = "0x6002465")]
	[Address(RVA = "0x1F7C08C", Offset = "0x1F7C08C", VA = "0x1F7C08C")]
	public void setBlendOutDuration(float d)
	{
	}

	[Token(Token = "0x6002466")]
	[Address(RVA = "0x1F7C094", Offset = "0x1F7C094", VA = "0x1F7C094", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6002467")]
	[Address(RVA = "0x1F7C19C", Offset = "0x1F7C19C", VA = "0x1F7C19C")]
	public void initializeBehaviour(PlayableGraph graph, AkEventPlayableBehavior b, GameObject owner)
	{
	}

	[Token(Token = "0x6002468")]
	[Address(RVA = "0x1F7C2B4", Offset = "0x1F7C2B4", VA = "0x1F7C2B4")]
	public AkEventPlayable()
	{
	}
}
[Token(Token = "0x20003D8")]
public class AkEventPlayableBehavior : PlayableBehaviour
{
	[Token(Token = "0x200062E")]
	[Flags]
	public enum AkPlayableAction
	{
		[Token(Token = "0x400225F")]
		None = 0,
		[Token(Token = "0x4002260")]
		Playback = 1,
		[Token(Token = "0x4002261")]
		Retrigger = 2,
		[Token(Token = "0x4002262")]
		Stop = 4,
		[Token(Token = "0x4002263")]
		DelayedStop = 8,
		[Token(Token = "0x4002264")]
		Seek = 0x10,
		[Token(Token = "0x4002265")]
		FadeIn = 0x20,
		[Token(Token = "0x4002266")]
		FadeOut = 0x40
	}

	[Token(Token = "0x4001A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int scrubPlaybackLengthMs;

	[Token(Token = "0x4001A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AK.Wwise.Event akEvent;

	[Token(Token = "0x4001A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float akEventMaxDuration;

	[Token(Token = "0x4001A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float akEventMinDuration;

	[Token(Token = "0x4001A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float blendInDuration;

	[Token(Token = "0x4001A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float blendOutDuration;

	[Token(Token = "0x4001A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float easeInDuration;

	[Token(Token = "0x4001A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float easeOutDuration;

	[Token(Token = "0x4001A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject eventObject;

	[Token(Token = "0x4001A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool eventShouldRetrigger;

	[Token(Token = "0x4001A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WwiseEventTracker eventTracker;

	[Token(Token = "0x4001A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float lastEffectiveWeight;

	[Token(Token = "0x4001A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool overrideTrackEmittorObject;

	[Token(Token = "0x4001A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AkPlayableAction requiredActions;

	[Token(Token = "0x6002469")]
	[Address(RVA = "0x1F7C330", Offset = "0x1F7C330", VA = "0x1F7C330", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600246A")]
	[Address(RVA = "0x1F7C650", Offset = "0x1F7C650", VA = "0x1F7C650", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600246B")]
	[Address(RVA = "0x1F7C894", Offset = "0x1F7C894", VA = "0x1F7C894", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x600246C")]
	[Address(RVA = "0x1F7C9E0", Offset = "0x1F7C9E0", VA = "0x1F7C9E0", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x600246D")]
	[Address(RVA = "0x1F7CC24", Offset = "0x1F7CC24", VA = "0x1F7CC24")]
	private bool actionIsRequired(AkPlayableAction actionType)
	{
		return default(bool);
	}

	[Token(Token = "0x600246E")]
	[Address(RVA = "0x1F7C4D4", Offset = "0x1F7C4D4", VA = "0x1F7C4D4")]
	private bool ShouldPlay(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x600246F")]
	[Address(RVA = "0x1F7D1D4", Offset = "0x1F7D1D4", VA = "0x1F7D1D4")]
	private bool fadeInRequired(float currentClipTime)
	{
		return default(bool);
	}

	[Token(Token = "0x6002470")]
	[Address(RVA = "0x1F7C5DC", Offset = "0x1F7C5DC", VA = "0x1F7C5DC")]
	private void checkForFadeIn(float currentClipTime)
	{
	}

	[Token(Token = "0x6002471")]
	[Address(RVA = "0x1F7D1FC", Offset = "0x1F7D1FC", VA = "0x1F7D1FC")]
	private void checkForFadeInImmediate(float currentClipTime)
	{
	}

	[Token(Token = "0x6002472")]
	[Address(RVA = "0x1F7D224", Offset = "0x1F7D224", VA = "0x1F7D224")]
	private bool fadeOutRequired(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x6002473")]
	[Address(RVA = "0x1F7D2DC", Offset = "0x1F7D2DC", VA = "0x1F7D2DC")]
	private void checkForFadeOutImmediate(Playable playable)
	{
	}

	[Token(Token = "0x6002474")]
	[Address(RVA = "0x1F7C610", Offset = "0x1F7C610", VA = "0x1F7C610")]
	private void checkForFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x6002475")]
	[Address(RVA = "0x1F7CFC4", Offset = "0x1F7CFC4", VA = "0x1F7CFC4")]
	protected void triggerFadeIn(float currentClipTime)
	{
	}

	[Token(Token = "0x6002476")]
	[Address(RVA = "0x1F7D0FC", Offset = "0x1F7D0FC", VA = "0x1F7D0FC")]
	protected void triggerFadeOut(float fadeDuration)
	{
	}

	[Token(Token = "0x6002477")]
	[Address(RVA = "0x1F7C920", Offset = "0x1F7C920", VA = "0x1F7C920")]
	protected void stopEvent(int transition = 0)
	{
	}

	[Token(Token = "0x6002478")]
	[Address(RVA = "0x1F7CC34", Offset = "0x1F7CC34", VA = "0x1F7CC34")]
	protected void playEvent()
	{
	}

	[Token(Token = "0x6002479")]
	[Address(RVA = "0x1F7CD54", Offset = "0x1F7CD54", VA = "0x1F7CD54")]
	protected void retriggerEvent(Playable playable)
	{
	}

	[Token(Token = "0x600247A")]
	[Address(RVA = "0x1F7C790", Offset = "0x1F7C790", VA = "0x1F7C790")]
	protected float getProportionalTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x600247B")]
	[Address(RVA = "0x1F7CEAC", Offset = "0x1F7CEAC", VA = "0x1F7CEAC")]
	protected float seekToTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x600247C")]
	[Address(RVA = "0x1F7D3AC", Offset = "0x1F7D3AC", VA = "0x1F7D3AC")]
	public AkEventPlayableBehavior()
	{
	}
}
[Token(Token = "0x20003D9")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xEE2D30", Offset = "0xEE2D30")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xEE2D30", Offset = "0xEE2D30")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xEE2D30", Offset = "0xEE2D30")]
public class AkEventTrack : TrackAsset
{
	[Token(Token = "0x600247E")]
	[Address(RVA = "0x1F7D418", Offset = "0x1F7D418", VA = "0x1F7D418", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600247F")]
	[Address(RVA = "0x1F7D4F0", Offset = "0x1F7D4F0", VA = "0x1F7D4F0")]
	public void setFadeTimes()
	{
	}

	[Token(Token = "0x6002480")]
	[Address(RVA = "0x1F7D80C", Offset = "0x1F7D80C", VA = "0x1F7D80C")]
	public void setOwnerClips()
	{
	}

	[Token(Token = "0x6002481")]
	[Address(RVA = "0x1F7DAC8", Offset = "0x1F7DAC8", VA = "0x1F7DAC8")]
	public double getBlendInTime(AkEventPlayable playableClip)
	{
		return default(double);
	}

	[Token(Token = "0x6002482")]
	[Address(RVA = "0x1F7DE48", Offset = "0x1F7DE48", VA = "0x1F7DE48")]
	public double getBlendOutTime(AkEventPlayable playableClip)
	{
		return default(double);
	}

	[Token(Token = "0x6002483")]
	[Address(RVA = "0x1F7E1C8", Offset = "0x1F7E1C8", VA = "0x1F7E1C8")]
	public double getEaseInTime(AkEventPlayable playableClip)
	{
		return default(double);
	}

	[Token(Token = "0x6002484")]
	[Address(RVA = "0x1F7E548", Offset = "0x1F7E548", VA = "0x1F7E548")]
	public double getEaseOutTime(AkEventPlayable playableClip)
	{
		return default(double);
	}

	[Token(Token = "0x6002485")]
	[Address(RVA = "0x1F7E8C8", Offset = "0x1F7E8C8", VA = "0x1F7E8C8")]
	public AkEventTrack()
	{
	}
}
[Token(Token = "0x20003DA")]
public class AkGameObjEnvironmentData
{
	[Token(Token = "0x4001A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<AkEnvironment> activeEnvironments;

	[Token(Token = "0x4001A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkEnvironment> activeEnvironmentsFromPortals;

	[Token(Token = "0x4001A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly List<AkEnvironmentPortal> activePortals;

	[Token(Token = "0x4001A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly AkAuxSendArray auxSendValues;

	[Token(Token = "0x4001A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 lastPosition;

	[Token(Token = "0x4001A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hasEnvironmentListChanged;

	[Token(Token = "0x4001A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool hasActivePortalListChanged;

	[Token(Token = "0x4001A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool hasSentZero;

	[Token(Token = "0x6002486")]
	[Address(RVA = "0x1F80DEC", Offset = "0x1F80DEC", VA = "0x1F80DEC")]
	private void AddHighestPriorityEnvironmentsFromPortals(Vector3 position)
	{
	}

	[Token(Token = "0x6002487")]
	[Address(RVA = "0x1F81008", Offset = "0x1F81008", VA = "0x1F81008")]
	private void AddHighestPriorityEnvironments(Vector3 position)
	{
	}

	[Token(Token = "0x6002488")]
	[Address(RVA = "0x1F8021C", Offset = "0x1F8021C", VA = "0x1F8021C")]
	public void UpdateAuxSend(GameObject gameObject, Vector3 position)
	{
	}

	[Token(Token = "0x6002489")]
	[Address(RVA = "0x1F81144", Offset = "0x1F81144", VA = "0x1F81144")]
	private void TryAddEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x600248A")]
	[Address(RVA = "0x1F812A8", Offset = "0x1F812A8", VA = "0x1F812A8")]
	private void RemoveEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x600248B")]
	[Address(RVA = "0x1F800E4", Offset = "0x1F800E4", VA = "0x1F800E4")]
	public void AddAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x600248C")]
	[Address(RVA = "0x1F81330", Offset = "0x1F81330", VA = "0x1F81330")]
	private bool AkEnvironmentBelongsToActivePortals(AkEnvironment env)
	{
		return default(bool);
	}

	[Token(Token = "0x600248D")]
	[Address(RVA = "0x1F80A78", Offset = "0x1F80A78", VA = "0x1F80A78")]
	public void RemoveAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x600248E")]
	[Address(RVA = "0x1F7FF98", Offset = "0x1F7FF98", VA = "0x1F7FF98")]
	public AkGameObjEnvironmentData()
	{
	}
}
[Serializable]
[Token(Token = "0x20003DB")]
public class AkGameObjListenerList : AkAudioListener.BaseListenerList
{
	[NonSerialized]
	[Token(Token = "0x4001A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AkGameObj akGameObj;

	[Token(Token = "0x4001A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<AkAudioListener> initialListenerList;

	[Token(Token = "0x4001AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public bool useDefaultListeners;

	[Token(Token = "0x600248F")]
	[Address(RVA = "0x1F81460", Offset = "0x1F81460", VA = "0x1F81460")]
	public void SetUseDefaultListeners(bool useDefault)
	{
	}

	[Token(Token = "0x6002490")]
	[Address(RVA = "0x1F80388", Offset = "0x1F80388", VA = "0x1F80388")]
	public void Init(AkGameObj akGameObj)
	{
	}

	[Token(Token = "0x6002491")]
	[Address(RVA = "0x1F81638", Offset = "0x1F81638", VA = "0x1F81638", Slot = "4")]
	public override bool Add(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x6002492")]
	[Address(RVA = "0x1F81728", Offset = "0x1F81728", VA = "0x1F81728", Slot = "5")]
	public override bool Remove(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x6002493")]
	[Address(RVA = "0x1F80D14", Offset = "0x1F80D14", VA = "0x1F80D14")]
	public AkGameObjListenerList()
	{
	}
}
[Token(Token = "0x20003DC")]
public class AkGameObjPosOffsetData : ScriptableObject
{
	[Token(Token = "0x4001AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 positionOffset;

	[Token(Token = "0x6002494")]
	[Address(RVA = "0x1F81818", Offset = "0x1F81818", VA = "0x1F81818")]
	public AkGameObjPosOffsetData()
	{
	}
}
[Token(Token = "0x20003DD")]
public class AkGameObjPositionData
{
	[Token(Token = "0x4001AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 forward;

	[Token(Token = "0x4001AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 position;

	[Token(Token = "0x4001AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 up;

	[Token(Token = "0x6002495")]
	[Address(RVA = "0x1F7FF90", Offset = "0x1F7FF90", VA = "0x1F7FF90")]
	public AkGameObjPositionData()
	{
	}
}
[Serializable]
[Token(Token = "0x20003DE")]
public class AkGameObjPositionOffsetData
{
	[Token(Token = "0x4001AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool KeepMe;

	[Token(Token = "0x4001AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 positionOffset;

	[Token(Token = "0x6002496")]
	[Address(RVA = "0x1F81820", Offset = "0x1F81820", VA = "0x1F81820")]
	public AkGameObjPositionOffsetData(bool IReallyWantToBeConstructed = false)
	{
	}
}
[Token(Token = "0x20003DF")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEE2DE4", Offset = "0xEE2DE4")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkInitializer : MonoBehaviour
{
	[Token(Token = "0x4001AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkInitializer ms_Instance;

	[Token(Token = "0x4001AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AkWwiseInitializationSettings InitializationSettings;

	[Token(Token = "0x6002497")]
	[Address(RVA = "0x1F84A30", Offset = "0x1F84A30", VA = "0x1F84A30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002498")]
	[Address(RVA = "0x1F84B20", Offset = "0x1F84B20", VA = "0x1F84B20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002499")]
	[Address(RVA = "0x1F84B94", Offset = "0x1F84B94", VA = "0x1F84B94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600249A")]
	[Address(RVA = "0x1F84C3C", Offset = "0x1F84C3C", VA = "0x1F84C3C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600249B")]
	[Address(RVA = "0x1F84CEC", Offset = "0x1F84CEC", VA = "0x1F84CEC")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600249C")]
	[Address(RVA = "0x1F84DA8", Offset = "0x1F84DA8", VA = "0x1F84DA8")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600249D")]
	[Address(RVA = "0x1F84E64", Offset = "0x1F84E64", VA = "0x1F84E64")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600249E")]
	[Address(RVA = "0x1F84F0C", Offset = "0x1F84F0C", VA = "0x1F84F0C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600249F")]
	[Address(RVA = "0x1F84FB4", Offset = "0x1F84FB4", VA = "0x1F84FB4")]
	public AkInitializer()
	{
	}
}
[Token(Token = "0x20003E0")]
public class AkMemBankLoader : MonoBehaviour
{
	[Token(Token = "0x200062F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE50EC", Offset = "0xEE50EC")]
	private sealed class <LoadFile>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AkMemBankLoader <>4__this;

		[Token(Token = "0x17000488")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002E07")]
			[Address(RVA = "0x1F8B920", Offset = "0x1F8B920", VA = "0x1F8B920", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000489")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002E09")]
			[Address(RVA = "0x1F8B988", Offset = "0x1F8B988", VA = "0x1F8B988", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E04")]
		[Address(RVA = "0x1F8B638", Offset = "0x1F8B638", VA = "0x1F8B638")]
		[DebuggerHidden]
		public <LoadFile>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002E05")]
		[Address(RVA = "0x1F8B77C", Offset = "0x1F8B77C", VA = "0x1F8B77C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002E06")]
		[Address(RVA = "0x1F8B780", Offset = "0x1F8B780", VA = "0x1F8B780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002E08")]
		[Address(RVA = "0x1F8B928", Offset = "0x1F8B928", VA = "0x1F8B928", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001AA9")]
	private const int WaitMs = 50;

	[Token(Token = "0x4001AAA")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT = 16L;

	[Token(Token = "0x4001AAB")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT_MASK = 15L;

	[Token(Token = "0x4001AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string bankName;

	[Token(Token = "0x4001AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isLocalizedBank;

	[Token(Token = "0x4001AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_bankPath;

	[Token(Token = "0x4001AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public uint ms_bankID;

	[Token(Token = "0x4001AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IntPtr ms_pInMemoryBankPtr;

	[Token(Token = "0x4001AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GCHandle ms_pinnedArray;

	[Token(Token = "0x4001AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityWebRequest ms_www;

	[Token(Token = "0x60024A0")]
	[Address(RVA = "0x1F8B168", Offset = "0x1F8B168", VA = "0x1F8B168")]
	private void Start()
	{
	}

	[Token(Token = "0x60024A1")]
	[Address(RVA = "0x1F8B288", Offset = "0x1F8B288", VA = "0x1F8B288")]
	public void LoadNonLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x60024A2")]
	[Address(RVA = "0x1F8B17C", Offset = "0x1F8B17C", VA = "0x1F8B17C")]
	public void LoadLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x60024A3")]
	[Address(RVA = "0x1F8B390", Offset = "0x1F8B390", VA = "0x1F8B390")]
	private uint AllocateAlignedBuffer(byte[] data)
	{
		return default(uint);
	}

	[Token(Token = "0x60024A4")]
	[Address(RVA = "0x1F8B5BC", Offset = "0x1F8B5BC", VA = "0x1F8B5BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF12FC", Offset = "0xEF12FC")]
	private IEnumerator LoadFile()
	{
		return null;
	}

	[Token(Token = "0x60024A5")]
	[Address(RVA = "0x1F8B358", Offset = "0x1F8B358", VA = "0x1F8B358")]
	private void DoLoadBank(string in_bankPath)
	{
	}

	[Token(Token = "0x60024A6")]
	[Address(RVA = "0x1F8B664", Offset = "0x1F8B664", VA = "0x1F8B664")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60024A7")]
	[Address(RVA = "0x1F8B718", Offset = "0x1F8B718", VA = "0x1F8B718")]
	public AkMemBankLoader()
	{
	}
}
[Token(Token = "0x20003E1")]
public abstract class AkObstructionOcclusion : MonoBehaviour
{
	[Token(Token = "0x2000630")]
	protected class ObstructionOcclusionValue
	{
		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float currentValue;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float targetValue;

		[Token(Token = "0x6002E0A")]
		[Address(RVA = "0x1F8E3D0", Offset = "0x1F8E3D0", VA = "0x1F8E3D0")]
		public bool Update(float fadeRate)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E0B")]
		[Address(RVA = "0x1F8DCF4", Offset = "0x1F8DCF4", VA = "0x1F8DCF4")]
		public ObstructionOcclusionValue()
		{
		}
	}

	[Token(Token = "0x4001AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkAudioListener> listenersToRemove;

	[Token(Token = "0x4001AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Dictionary<AkAudioListener, ObstructionOcclusionValue> ObstructionOcclusionValues;

	[Token(Token = "0x4001AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float fadeRate;

	[Token(Token = "0x4001AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEA424", Offset = "0xEEA424")]
	public float fadeTime;

	[Token(Token = "0x4001AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEA45C", Offset = "0xEEA45C")]
	public LayerMask LayerMask;

	[Token(Token = "0x4001AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEA494", Offset = "0xEEA494")]
	public float maxDistance;

	[Token(Token = "0x4001AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEA4CC", Offset = "0xEEA4CC")]
	public float refreshInterval;

	[Token(Token = "0x4001ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float refreshTime;

	[Token(Token = "0x60024A8")]
	[Address(RVA = "0x1F8DA3C", Offset = "0x1F8DA3C", VA = "0x1F8DA3C")]
	protected void InitIntervalsAndFadeRates()
	{
	}

	[Token(Token = "0x60024A9")]
	[Address(RVA = "0x1F8DA7C", Offset = "0x1F8DA7C", VA = "0x1F8DA7C")]
	protected void UpdateObstructionOcclusionValues(List<AkAudioListener> listenerList)
	{
	}

	[Token(Token = "0x60024AA")]
	[Address(RVA = "0x1F8DCFC", Offset = "0x1F8DCFC", VA = "0x1F8DCFC")]
	protected void UpdateObstructionOcclusionValues(AkAudioListener listener)
	{
	}

	[Token(Token = "0x60024AB")]
	[Address(RVA = "0x1F8DF54", Offset = "0x1F8DF54", VA = "0x1F8DF54")]
	private void CastRays()
	{
	}

	[Token(Token = "0x60024AC")]
	protected abstract void UpdateObstructionOcclusionValuesForListeners();

	[Token(Token = "0x60024AD")]
	protected abstract void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair);

	[Token(Token = "0x60024AE")]
	[Address(RVA = "0x1F8E288", Offset = "0x1F8E288", VA = "0x1F8E288")]
	private void Update()
	{
	}

	[Token(Token = "0x60024AF")]
	[Address(RVA = "0x1F8E4C0", Offset = "0x1F8E4C0", VA = "0x1F8E4C0")]
	protected AkObstructionOcclusion()
	{
	}
}
[Serializable]
[Token(Token = "0x20003E2")]
public class AkRTPCPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4001ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool overrideTrackObject;

	[Token(Token = "0x4001ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<GameObject> RTPCObject;

	[Token(Token = "0x4001ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool setRTPCGlobally;

	[Token(Token = "0x4001ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AkRTPCPlayableBehaviour template;

	[Token(Token = "0x4001ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEA504", Offset = "0xEEA504")]
	private RTPC <Parameter>k__BackingField;

	[Token(Token = "0x4001AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEA514", Offset = "0xEEA514")]
	private TimelineClip <OwningClip>k__BackingField;

	[Token(Token = "0x17000367")]
	public RTPC Parameter
	{
		[Token(Token = "0x60024B0")]
		[Address(RVA = "0x1340B34", Offset = "0x1340B34", VA = "0x1340B34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1360", Offset = "0xEF1360")]
		get
		{
			return null;
		}
		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x1340B3C", Offset = "0x1340B3C", VA = "0x1340B3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1370", Offset = "0xEF1370")]
		set
		{
		}
	}

	[Token(Token = "0x17000368")]
	public TimelineClip OwningClip
	{
		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x1340B44", Offset = "0x1340B44", VA = "0x1340B44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1380", Offset = "0xEF1380")]
		get
		{
			return null;
		}
		[Token(Token = "0x60024B3")]
		[Address(RVA = "0x1340B4C", Offset = "0x1340B4C", VA = "0x1340B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1390", Offset = "0xEF1390")]
		set
		{
		}
	}

	[Token(Token = "0x17000369")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60024B4")]
		[Address(RVA = "0x1340B54", Offset = "0x1340B54", VA = "0x1340B54", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60024B5")]
	[Address(RVA = "0x1340B5C", Offset = "0x1340B5C", VA = "0x1340B5C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x60024B6")]
	[Address(RVA = "0x1340C58", Offset = "0x1340C58", VA = "0x1340C58")]
	public void InitializeBehavior(PlayableGraph graph, ref AkRTPCPlayableBehaviour b, GameObject owner)
	{
	}

	[Token(Token = "0x60024B7")]
	[Address(RVA = "0x1340D48", Offset = "0x1340D48", VA = "0x1340D48")]
	public AkRTPCPlayable()
	{
	}
}
[Serializable]
[Token(Token = "0x20003E3")]
public class AkRTPCPlayableBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4001AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_OverrideTrackObject;

	[Token(Token = "0x4001AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RTPC m_Parameter;

	[Token(Token = "0x4001AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject m_RTPCObject;

	[Token(Token = "0x4001AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_SetRTPCGlobally;

	[Token(Token = "0x4001AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float RTPCValue;

	[Token(Token = "0x1700036A")]
	public bool setRTPCGlobally
	{
		[Token(Token = "0x60024B8")]
		[Address(RVA = "0x1340DC4", Offset = "0x1340DC4", VA = "0x1340DC4")]
		set
		{
		}
	}

	[Token(Token = "0x1700036B")]
	public bool overrideTrackObject
	{
		[Token(Token = "0x60024B9")]
		[Address(RVA = "0x1340DD0", Offset = "0x1340DD0", VA = "0x1340DD0")]
		set
		{
		}
	}

	[Token(Token = "0x1700036C")]
	public GameObject rtpcObject
	{
		[Token(Token = "0x60024BB")]
		[Address(RVA = "0x1340DE4", Offset = "0x1340DE4", VA = "0x1340DE4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60024BA")]
		[Address(RVA = "0x1340DDC", Offset = "0x1340DDC", VA = "0x1340DDC")]
		set
		{
		}
	}

	[Token(Token = "0x1700036D")]
	public RTPC parameter
	{
		[Token(Token = "0x60024BC")]
		[Address(RVA = "0x1340DEC", Offset = "0x1340DEC", VA = "0x1340DEC")]
		set
		{
		}
	}

	[Token(Token = "0x60024BD")]
	[Address(RVA = "0x1340DF4", Offset = "0x1340DF4", VA = "0x1340DF4", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60024BE")]
	[Address(RVA = "0x1340DBC", Offset = "0x1340DBC", VA = "0x1340DBC")]
	public AkRTPCPlayableBehaviour()
	{
	}
}
[Token(Token = "0x20003E4")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xEE2E40", Offset = "0xEE2E40")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xEE2E40", Offset = "0xEE2E40")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xEE2E40", Offset = "0xEE2E40")]
public class AkRTPCTrack : TrackAsset
{
	[Token(Token = "0x4001AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public RTPC Parameter;

	[Token(Token = "0x60024BF")]
	[Address(RVA = "0x1340F3C", Offset = "0x1340F3C", VA = "0x1340F3C", Slot = "23")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60024C0")]
	[Address(RVA = "0x1340FF8", Offset = "0x1340FF8", VA = "0x1340FF8")]
	public void setPlayableProperties()
	{
	}

	[Token(Token = "0x60024C1")]
	[Address(RVA = "0x13412E4", Offset = "0x13412E4", VA = "0x13412E4")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x60024C2")]
	[Address(RVA = "0x13415A4", Offset = "0x13415A4", VA = "0x13415A4")]
	public AkRTPCTrack()
	{
	}
}
[Token(Token = "0x20003E5")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEE2EF0", Offset = "0xEE2EF0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE2EF0", Offset = "0xEE2EF0")]
[DisallowMultipleComponent]
public class AkRoom : AkTriggerHandler
{
	[Token(Token = "0x2000631")]
	public class PriorityList
	{
		[Token(Token = "0x200097B")]
		private class CompareByPriority : IComparer<AkRoom>
		{
			[Token(Token = "0x60031CC")]
			[Address(RVA = "0x13447D4", Offset = "0x13447D4", VA = "0x13447D4", Slot = "5")]
			public virtual int Compare(AkRoom a, AkRoom b)
			{
				return default(int);
			}

			[Token(Token = "0x60031CD")]
			[Address(RVA = "0x13447CC", Offset = "0x13447CC", VA = "0x13447CC")]
			public CompareByPriority()
			{
			}
		}

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly CompareByPriority s_compareByPriority;

		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AkRoom> rooms;

		[Token(Token = "0x6002E0C")]
		[Address(RVA = "0x13443C4", Offset = "0x13443C4", VA = "0x13443C4")]
		public ulong GetHighestPriorityRoomID()
		{
			return default(ulong);
		}

		[Token(Token = "0x6002E0D")]
		[Address(RVA = "0x134448C", Offset = "0x134448C", VA = "0x134448C")]
		public AkRoom GetHighestPriorityRoom()
		{
			return null;
		}

		[Token(Token = "0x6002E0E")]
		[Address(RVA = "0x13444F0", Offset = "0x13444F0", VA = "0x13444F0")]
		public void Add(AkRoom room)
		{
		}

		[Token(Token = "0x6002E0F")]
		[Address(RVA = "0x134465C", Offset = "0x134465C", VA = "0x134465C")]
		public void Remove(AkRoom room)
		{
		}

		[Token(Token = "0x6002E10")]
		[Address(RVA = "0x13446C4", Offset = "0x13446C4", VA = "0x13446C4")]
		public bool Contains(AkRoom room)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E11")]
		[Address(RVA = "0x1344580", Offset = "0x1344580", VA = "0x1344580")]
		public int BinarySearch(AkRoom room)
		{
			return default(int);
		}

		[Token(Token = "0x6002E12")]
		[Address(RVA = "0x13446E0", Offset = "0x13446E0", VA = "0x13446E0")]
		public PriorityList()
		{
		}
	}

	[Token(Token = "0x4001AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ulong INVALID_ROOM_ID;

	[Token(Token = "0x4001AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int RoomCount;

	[Token(Token = "0x4001AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEA524", Offset = "0xEEA524")]
	public int priority;

	[Token(Token = "0x4001ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AuxBus reverbAuxBus;

	[Token(Token = "0x4001ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEEA55C", Offset = "0xEEA55C")]
	public float reverbLevel;

	[Token(Token = "0x4001ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEEA574", Offset = "0xEEA574")]
	public float wallOcclusion;

	[Token(Token = "0x4001ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AK.Wwise.Event roomToneEvent;

	[Token(Token = "0x4001ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEEA58C", Offset = "0xEEA58C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEA58C", Offset = "0xEEA58C")]
	public float roomToneAuxSend;

	[Token(Token = "0x1700036E")]
	public static bool IsSpatialAudioEnabled
	{
		[Token(Token = "0x60024C3")]
		[Address(RVA = "0x1343664", Offset = "0x1343664", VA = "0x1343664")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60024C4")]
	[Address(RVA = "0x1343740", Offset = "0x1343740", VA = "0x1343740")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x60024C5")]
	[Address(RVA = "0x1343830", Offset = "0x1343830", VA = "0x1343830")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60024C6")]
	[Address(RVA = "0x1343F98", Offset = "0x1343F98", VA = "0x1343F98", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60024C7")]
	[Address(RVA = "0x1343FA0", Offset = "0x1343FA0", VA = "0x1343FA0", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60024C8")]
	[Address(RVA = "0x1343FD8", Offset = "0x1343FD8", VA = "0x1343FD8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60024C9")]
	[Address(RVA = "0x13440E4", Offset = "0x13440E4", VA = "0x13440E4")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x60024CA")]
	[Address(RVA = "0x13441C0", Offset = "0x13441C0", VA = "0x13441C0")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x60024CB")]
	[Address(RVA = "0x134429C", Offset = "0x134429C", VA = "0x134429C")]
	public AkRoom()
	{
	}
}
[Token(Token = "0x20003E6")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEE2F88", Offset = "0xEE2F88")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE2F88", Offset = "0xEE2F88")]
[DisallowMultipleComponent]
public class AkRoomPortal : AkTriggerHandler
{
	[Token(Token = "0x4001ACF")]
	public const int MAX_ROOMS_PER_PORTAL = 2;

	[Token(Token = "0x4001AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AkVector extent;

	[Token(Token = "0x4001AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AkTransform portalTransform;

	[Token(Token = "0x4001AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ulong backRoomID;

	[Token(Token = "0x4001AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<int> closePortalTriggerList;

	[Token(Token = "0x4001AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ulong frontRoomID;

	[Token(Token = "0x4001AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AkRoom[] rooms;

	[Token(Token = "0x1700036F")]
	public bool IsValid
	{
		[Token(Token = "0x60024CD")]
		[Address(RVA = "0x134566C", Offset = "0x134566C", VA = "0x134566C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60024CE")]
	[Address(RVA = "0x1345680", Offset = "0x1345680", VA = "0x1345680")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x60024CF")]
	[Address(RVA = "0x134569C", Offset = "0x134569C", VA = "0x134569C", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60024D0")]
	[Address(RVA = "0x1345BA0", Offset = "0x1345BA0", VA = "0x1345BA0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60024D1")]
	[Address(RVA = "0x1345C28", Offset = "0x1345C28", VA = "0x1345C28", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60024D2")]
	[Address(RVA = "0x1345B98", Offset = "0x1345B98", VA = "0x1345B98")]
	public void ClosePortal(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60024D3")]
	[Address(RVA = "0x1345C40", Offset = "0x1345C40", VA = "0x1345C40", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60024D4")]
	[Address(RVA = "0x1345C30", Offset = "0x1345C30", VA = "0x1345C30")]
	public void Open()
	{
	}

	[Token(Token = "0x60024D5")]
	[Address(RVA = "0x1345C38", Offset = "0x1345C38", VA = "0x1345C38")]
	public void Close()
	{
	}

	[Token(Token = "0x60024D6")]
	[Address(RVA = "0x1345D18", Offset = "0x1345D18", VA = "0x1345D18")]
	private void ActivatePortal(bool active)
	{
	}

	[Token(Token = "0x60024D7")]
	[Address(RVA = "0x1345F24", Offset = "0x1345F24", VA = "0x1345F24")]
	public void FindOverlappingRooms(AkRoom.PriorityList[] roomList)
	{
	}

	[Token(Token = "0x60024D8")]
	[Address(RVA = "0x134613C", Offset = "0x134613C", VA = "0x134613C")]
	private void FillRoomList(Vector3 center, Vector3 halfExtents, AkRoom.PriorityList list)
	{
	}

	[Token(Token = "0x60024D9")]
	[Address(RVA = "0x134631C", Offset = "0x134631C", VA = "0x134631C")]
	public void SetFrontRoom(AkRoom room)
	{
	}

	[Token(Token = "0x60024DA")]
	[Address(RVA = "0x1346460", Offset = "0x1346460", VA = "0x1346460")]
	public void SetBackRoom(AkRoom room)
	{
	}

	[Token(Token = "0x60024DB")]
	[Address(RVA = "0x1346598", Offset = "0x1346598", VA = "0x1346598")]
	public void UpdateOverlappingRooms()
	{
	}

	[Token(Token = "0x60024DC")]
	[Address(RVA = "0x1346890", Offset = "0x1346890", VA = "0x1346890")]
	public AkRoomPortal()
	{
	}
}
[Token(Token = "0x20003E7")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEE3020", Offset = "0xEE3020")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE3020", Offset = "0xEE3020")]
public class AkRoomPortalObstruction : AkObstructionOcclusion
{
	[Token(Token = "0x4001AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AkRoomPortal m_portal;

	[Token(Token = "0x60024DD")]
	[Address(RVA = "0x1346998", Offset = "0x1346998", VA = "0x1346998")]
	private void Awake()
	{
	}

	[Token(Token = "0x60024DE")]
	[Address(RVA = "0x1346A04", Offset = "0x1346A04", VA = "0x1346A04", Slot = "4")]
	protected override void UpdateObstructionOcclusionValuesForListeners()
	{
	}

	[Token(Token = "0x60024DF")]
	[Address(RVA = "0x1346A78", Offset = "0x1346A78", VA = "0x1346A78", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x60024E0")]
	[Address(RVA = "0x1346BBC", Offset = "0x1346BBC", VA = "0x1346BBC")]
	public AkRoomPortalObstruction()
	{
	}
}
[Token(Token = "0x20003E8")]
public class AkSoundEngineController
{
	[Token(Token = "0x4001AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSoundEngineController ms_Instance;

	[Token(Token = "0x17000370")]
	public static AkSoundEngineController Instance
	{
		[Token(Token = "0x60024E1")]
		[Address(RVA = "0x1362E78", Offset = "0x1362E78", VA = "0x1362E78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60024E2")]
	[Address(RVA = "0x1362F00", Offset = "0x1362F00", VA = "0x1362F00")]
	private AkSoundEngineController()
	{
	}

	[Token(Token = "0x60024E3")]
	[Address(RVA = "0x1362F08", Offset = "0x1362F08", VA = "0x1362F08", Slot = "1")]
	~AkSoundEngineController()
	{
	}

	[Token(Token = "0x60024E4")]
	[Address(RVA = "0x1362FB8", Offset = "0x1362FB8", VA = "0x1362FB8")]
	public static string GetDecodedBankFolder()
	{
		return null;
	}

	[Token(Token = "0x60024E5")]
	[Address(RVA = "0x1363000", Offset = "0x1363000", VA = "0x1363000")]
	public static string GetDecodedBankFullPath()
	{
		return null;
	}

	[Token(Token = "0x60024E6")]
	[Address(RVA = "0x13630A4", Offset = "0x13630A4", VA = "0x13630A4")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60024E7")]
	[Address(RVA = "0x1363150", Offset = "0x1363150", VA = "0x1363150")]
	public void Init(AkInitializer akInitializer)
	{
	}

	[Token(Token = "0x60024E8")]
	[Address(RVA = "0x1363304", Offset = "0x1363304", VA = "0x1363304")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60024E9")]
	[Address(RVA = "0x1363308", Offset = "0x1363308", VA = "0x1363308")]
	public void Terminate()
	{
	}

	[Token(Token = "0x60024EA")]
	[Address(RVA = "0x1363368", Offset = "0x1363368", VA = "0x1363368")]
	public void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60024EB")]
	[Address(RVA = "0x136336C", Offset = "0x136336C", VA = "0x136336C")]
	public void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60024EC")]
	[Address(RVA = "0x1363370", Offset = "0x1363370", VA = "0x1363370")]
	private void ActivateAudio(bool activate)
	{
	}
}
[Token(Token = "0x20003E9")]
public abstract class AkSpatialAudioBase : MonoBehaviour
{
	[Token(Token = "0x4001AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly AkRoom.PriorityList roomPriorityList;

	[Token(Token = "0x60024ED")]
	[Address(RVA = "0x154BBF0", Offset = "0x154BBF0", VA = "0x154BBF0")]
	protected void SetGameObjectInHighestPriorityRoom()
	{
	}

	[Token(Token = "0x60024EE")]
	[Address(RVA = "0x154BC88", Offset = "0x154BC88", VA = "0x154BC88")]
	public void EnteredRoom(AkRoom room)
	{
	}

	[Token(Token = "0x60024EF")]
	[Address(RVA = "0x154BCBC", Offset = "0x154BCBC", VA = "0x154BCBC")]
	public void ExitedRoom(AkRoom room)
	{
	}

	[Token(Token = "0x60024F0")]
	[Address(RVA = "0x154BCF0", Offset = "0x154BCF0", VA = "0x154BCF0")]
	public void SetGameObjectInRoom()
	{
	}

	[Token(Token = "0x60024F1")]
	[Address(RVA = "0x154BE20", Offset = "0x154BE20", VA = "0x154BE20")]
	protected AkSpatialAudioBase()
	{
	}
}
[Token(Token = "0x20003EA")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEE30A8", Offset = "0xEE30A8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE30A8", Offset = "0xEE30A8")]
public class AkSpatialAudioEmitter : AkSpatialAudioBase
{
	[Token(Token = "0x4001AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEEA5E0", Offset = "0xEEA5E0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEA5E0", Offset = "0xEEA5E0")]
	public AuxBus reflectAuxBus;

	[Token(Token = "0x4001ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEA640", Offset = "0xEEA640")]
	public float reflectionMaxPathLength;

	[Token(Token = "0x4001ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEEA678", Offset = "0xEEA678")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEA678", Offset = "0xEEA678")]
	public float reflectionsAuxBusGain;

	[Token(Token = "0x4001ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEEA6CC", Offset = "0xEEA6CC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEA6CC", Offset = "0xEEA6CC")]
	public uint reflectionsOrder;

	[Token(Token = "0x4001ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEEA720", Offset = "0xEEA720")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEEA720", Offset = "0xEEA720")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEA720", Offset = "0xEEA720")]
	public float roomReverbAuxBusGain;

	[Token(Token = "0x4001ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEEA798", Offset = "0xEEA798")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEA798", Offset = "0xEEA798")]
	public uint diffractionMaxEdges;

	[Token(Token = "0x4001ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEA7F8", Offset = "0xEEA7F8")]
	public uint diffractionMaxPaths;

	[Token(Token = "0x4001AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEA830", Offset = "0xEEA830")]
	public uint diffractionMaxPathLength;

	[Token(Token = "0x60024F2")]
	[Address(RVA = "0x154BE94", Offset = "0x154BE94", VA = "0x154BE94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60024F3")]
	[Address(RVA = "0x154C018", Offset = "0x154C018", VA = "0x154C018")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60024F4")]
	[Address(RVA = "0x154C094", Offset = "0x154C094", VA = "0x154C094")]
	public AkSpatialAudioEmitter()
	{
	}
}
[Token(Token = "0x20003EB")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEE3130", Offset = "0xEE3130")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE3130", Offset = "0xEE3130")]
[DisallowMultipleComponent]
public class AkSpatialAudioListener : AkSpatialAudioBase
{
	[Token(Token = "0x2000632")]
	public class SpatialAudioListenerList
	{
		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<AkSpatialAudioListener> listenerList;

		[Token(Token = "0x1700048A")]
		public List<AkSpatialAudioListener> ListenerList
		{
			[Token(Token = "0x6002E14")]
			[Address(RVA = "0x154CE94", Offset = "0x154CE94", VA = "0x154CE94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002E15")]
		[Address(RVA = "0x154CB88", Offset = "0x154CB88", VA = "0x154CB88")]
		public bool Add(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E16")]
		[Address(RVA = "0x154CCD4", Offset = "0x154CCD4", VA = "0x154CCD4")]
		public bool Remove(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002E17")]
		[Address(RVA = "0x154CE9C", Offset = "0x154CE9C", VA = "0x154CE9C")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6002E18")]
		[Address(RVA = "0x154CE18", Offset = "0x154CE18", VA = "0x154CE18")]
		public SpatialAudioListenerList()
		{
		}
	}

	[Token(Token = "0x4001AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSpatialAudioListener s_SpatialAudioListener;

	[Token(Token = "0x4001AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly SpatialAudioListenerList spatialAudioListeners;

	[Token(Token = "0x4001AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AkAudioListener AkAudioListener;

	[Token(Token = "0x17000371")]
	public static AkAudioListener TheSpatialAudioListener
	{
		[Token(Token = "0x60024F5")]
		[Address(RVA = "0x154C970", Offset = "0x154C970", VA = "0x154C970")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000372")]
	public static SpatialAudioListenerList SpatialAudioListeners
	{
		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x154CA48", Offset = "0x154CA48", VA = "0x154CA48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60024F7")]
	[Address(RVA = "0x154CAB0", Offset = "0x154CAB0", VA = "0x154CAB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60024F8")]
	[Address(RVA = "0x154CB10", Offset = "0x154CB10", VA = "0x154CB10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60024F9")]
	[Address(RVA = "0x154CC5C", Offset = "0x154CC5C", VA = "0x154CC5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60024FA")]
	[Address(RVA = "0x154CDA8", Offset = "0x154CDA8", VA = "0x154CDA8")]
	public AkSpatialAudioListener()
	{
	}
}
[Token(Token = "0x20003EC")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEE31C8", Offset = "0xEE31C8")]
public class AkState : AkDragDropTriggerHandler
{
	[Token(Token = "0x4001AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State data;

	[Token(Token = "0x4001AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEA868", Offset = "0xEEA868")]
	private int valueIdInternal;

	[Token(Token = "0x4001AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEA8C4", Offset = "0xEEA8C4")]
	private int groupIdInternal;

	[Token(Token = "0x4001AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEA920", Offset = "0xEEA920")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x4001AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEA97C", Offset = "0xEEA97C")]
	private byte[] groupGuidInternal;

	[Token(Token = "0x17000373")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x154D188", Offset = "0x154D188", VA = "0x154D188", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000374")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF44E0", Offset = "0xEF44E0")]
	public int valueID
	{
		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x154D1AC", Offset = "0x154D1AC", VA = "0x154D1AC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000375")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF4518", Offset = "0xEF4518")]
	public int groupID
	{
		[Token(Token = "0x60024FF")]
		[Address(RVA = "0x154D1C0", Offset = "0x154D1C0", VA = "0x154D1C0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000376")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF4550", Offset = "0xEF4550")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6002500")]
		[Address(RVA = "0x154D1D4", Offset = "0x154D1D4", VA = "0x154D1D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000377")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF4588", Offset = "0xEF4588")]
	public byte[] groupGuid
	{
		[Token(Token = "0x6002501")]
		[Address(RVA = "0x154D298", Offset = "0x154D298", VA = "0x154D298")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60024FD")]
	[Address(RVA = "0x154D190", Offset = "0x154D190", VA = "0x154D190", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6002502")]
	[Address(RVA = "0x154D358", Offset = "0x154D358", VA = "0x154D358")]
	public AkState()
	{
	}
}
[Token(Token = "0x20003ED")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEE3200", Offset = "0xEE3200")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE3200", Offset = "0xEE3200")]
[ExecuteInEditMode]
public class AkSurfaceReflector : MonoBehaviour
{
	[Token(Token = "0x4001AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEA9D8", Offset = "0xEEA9D8")]
	public AcousticTexture AcousticTexture;

	[Token(Token = "0x4001AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xEEAA10", Offset = "0xEEAA10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEAA10", Offset = "0xEEAA10")]
	public bool EnableDiffraction;

	[Token(Token = "0x4001AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xEEAA70", Offset = "0xEEAA70")]
	public bool EnableDiffractionOnBoundaryEdges;

	[Token(Token = "0x4001AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshFilter MeshFilter;

	[Token(Token = "0x6002503")]
	[Address(RVA = "0x154D798", Offset = "0x154D798", VA = "0x154D798")]
	public static ulong GetAkGeometrySetID(MeshFilter meshFilter)
	{
		return default(ulong);
	}

	[Token(Token = "0x6002504")]
	[Address(RVA = "0x154D7BC", Offset = "0x154D7BC", VA = "0x154D7BC")]
	public static void AddGeometrySet(AcousticTexture acousticTexture, MeshFilter meshFilter, bool enableDiffraction, bool enableDiffractionOnBoundaryEdges)
	{
	}

	[Token(Token = "0x6002505")]
	[Address(RVA = "0x154E76C", Offset = "0x154E76C", VA = "0x154E76C")]
	public static void RemoveGeometrySet(MeshFilter meshFilter)
	{
	}

	[Token(Token = "0x6002506")]
	[Address(RVA = "0x154E830", Offset = "0x154E830", VA = "0x154E830")]
	private void Awake()
	{
	}

	[Token(Token = "0x6002507")]
	[Address(RVA = "0x154E890", Offset = "0x154E890", VA = "0x154E890")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6002508")]
	[Address(RVA = "0x154E8A8", Offset = "0x154E8A8", VA = "0x154E8A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6002509")]
	[Address(RVA = "0x154E8B0", Offset = "0x154E8B0", VA = "0x154E8B0")]
	public AkSurfaceReflector()
	{
	}
}
[Token(Token = "0x20003EE")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEE32A8", Offset = "0xEE32A8")]
public class AkSwitch : AkDragDropTriggerHandler
{
	[Token(Token = "0x4001AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AK.Wwise.Switch data;

	[Token(Token = "0x4001AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEAAA8", Offset = "0xEEAAA8")]
	private int valueIdInternal;

	[Token(Token = "0x4001AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEAB04", Offset = "0xEEAB04")]
	private int groupIdInternal;

	[Token(Token = "0x4001AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEAB60", Offset = "0xEEAB60")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x4001AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEABBC", Offset = "0xEEABBC")]
	private byte[] groupGuidInternal;

	[Token(Token = "0x17000378")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x600250A")]
		[Address(RVA = "0x154E924", Offset = "0x154E924", VA = "0x154E924", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000379")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF45C0", Offset = "0xEF45C0")]
	public int valueID
	{
		[Token(Token = "0x600250C")]
		[Address(RVA = "0x154E9DC", Offset = "0x154E9DC", VA = "0x154E9DC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700037A")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF45F8", Offset = "0xEF45F8")]
	public int groupID
	{
		[Token(Token = "0x600250D")]
		[Address(RVA = "0x154E9F0", Offset = "0x154E9F0", VA = "0x154E9F0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700037B")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF4630", Offset = "0xEF4630")]
	public byte[] valueGuid
	{
		[Token(Token = "0x600250E")]
		[Address(RVA = "0x154EA04", Offset = "0x154EA04", VA = "0x154EA04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700037C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF4668", Offset = "0xEF4668")]
	public byte[] groupGuid
	{
		[Token(Token = "0x600250F")]
		[Address(RVA = "0x154EAC8", Offset = "0x154EAC8", VA = "0x154EAC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600250B")]
	[Address(RVA = "0x154E92C", Offset = "0x154E92C", VA = "0x154E92C", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6002510")]
	[Address(RVA = "0x154EB88", Offset = "0x154EB88", VA = "0x154EB88")]
	public AkSwitch()
	{
	}
}
[Token(Token = "0x20003EF")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xEE32E0", Offset = "0xEE32E0")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkTerminator : MonoBehaviour
{
	[Token(Token = "0x6002511")]
	[Address(RVA = "0x154EFC8", Offset = "0x154EFC8", VA = "0x154EFC8")]
	public AkTerminator()
	{
	}
}
[Token(Token = "0x20003F0")]
public abstract class AkTriggerBase : MonoBehaviour
{
	[Token(Token = "0x2000633")]
	public delegate void Trigger(GameObject in_gameObject);

	[Token(Token = "0x4001AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Trigger triggerDelegate;

	[Token(Token = "0x6002512")]
	[Address(RVA = "0x15508DC", Offset = "0x15508DC", VA = "0x15508DC")]
	public static Dictionary<uint, string> GetAllDerivedTypes()
	{
		return null;
	}

	[Token(Token = "0x6002513")]
	[Address(RVA = "0x1550CF8", Offset = "0x1550CF8", VA = "0x1550CF8")]
	protected AkTriggerBase()
	{
	}
}
[Token(Token = "0x20003F1")]
public class AkTriggerCollisionEnter : AkTriggerBase
{
	[Token(Token = "0x4001AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6002514")]
	[Address(RVA = "0x15510D8", Offset = "0x15510D8", VA = "0x15510D8")]
	private void OnCollisionEnter(Collision in_other)
	{
	}

	[Token(Token = "0x6002515")]
	[Address(RVA = "0x15511E4", Offset = "0x15511E4", VA = "0x15511E4")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6002516")]
	[Address(RVA = "0x15512F0", Offset = "0x15512F0", VA = "0x15512F0")]
	public AkTriggerCollisionEnter()
	{
	}
}
[Token(Token = "0x20003F2")]
public class AkTriggerCollisionExit : AkTriggerBase
{
	[Token(Token = "0x4001AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6002517")]
	[Address(RVA = "0x15512F8", Offset = "0x15512F8", VA = "0x15512F8")]
	private void OnCollisionExit(Collision in_other)
	{
	}

	[Token(Token = "0x6002518")]
	[Address(RVA = "0x1551404", Offset = "0x1551404", VA = "0x1551404")]
	public AkTriggerCollisionExit()
	{
	}
}
[Token(Token = "0x20003F3")]
public class AkTriggerDisable : AkTriggerBase
{
	[Token(Token = "0x6002519")]
	[Address(RVA = "0x155140C", Offset = "0x155140C", VA = "0x155140C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600251A")]
	[Address(RVA = "0x1551420", Offset = "0x1551420", VA = "0x1551420")]
	public AkTriggerDisable()
	{
	}
}
[Token(Token = "0x20003F4")]
public class AkTriggerEnable : AkTriggerBase
{
	[Token(Token = "0x600251B")]
	[Address(RVA = "0x1551428", Offset = "0x1551428", VA = "0x1551428")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600251C")]
	[Address(RVA = "0x155143C", Offset = "0x155143C", VA = "0x155143C")]
	public AkTriggerEnable()
	{
	}
}
[Token(Token = "0x20003F5")]
public class AkTriggerEnter : AkTriggerBase
{
	[Token(Token = "0x4001AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x600251D")]
	[Address(RVA = "0x1551444", Offset = "0x1551444", VA = "0x1551444")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x600251E")]
	[Address(RVA = "0x1551550", Offset = "0x1551550", VA = "0x1551550")]
	public AkTriggerEnter()
	{
	}
}
[Token(Token = "0x20003F6")]
public class AkTriggerExit : AkTriggerBase
{
	[Token(Token = "0x4001AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x600251F")]
	[Address(RVA = "0x1551558", Offset = "0x1551558", VA = "0x1551558")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x6002520")]
	[Address(RVA = "0x1551664", Offset = "0x1551664", VA = "0x1551664")]
	public AkTriggerExit()
	{
	}
}
[Token(Token = "0x20003F7")]
public abstract class AkTriggerHandler : MonoBehaviour
{
	[Token(Token = "0x4001AF7")]
	public const int AWAKE_TRIGGER_ID = 1151176110;

	[Token(Token = "0x4001AF8")]
	public const int START_TRIGGER_ID = 1281810935;

	[Token(Token = "0x4001AF9")]
	public const int DESTROY_TRIGGER_ID = -358577003;

	[Token(Token = "0x4001AFA")]
	public const int MAX_NB_TRIGGERS = 32;

	[Token(Token = "0x4001AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, string> triggerTypes;

	[Token(Token = "0x4001AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool didDestroy;

	[Token(Token = "0x4001AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> triggerList;

	[Token(Token = "0x4001AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useOtherObject;

	[Token(Token = "0x6002521")]
	public abstract void HandleEvent(GameObject in_gameObject);

	[Token(Token = "0x6002522")]
	[Address(RVA = "0x155166C", Offset = "0x155166C", VA = "0x155166C", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6002523")]
	[Address(RVA = "0x1551B5C", Offset = "0x1551B5C", VA = "0x1551B5C", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6002524")]
	[Address(RVA = "0x1551BE0", Offset = "0x1551BE0", VA = "0x1551BE0", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6002525")]
	[Address(RVA = "0x1551BF0", Offset = "0x1551BF0", VA = "0x1551BF0")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6002526")]
	[Address(RVA = "0x1551748", Offset = "0x1551748", VA = "0x1551748")]
	protected void RegisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x6002527")]
	[Address(RVA = "0x1551CD4", Offset = "0x1551CD4", VA = "0x1551CD4")]
	protected void UnregisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x6002528")]
	[Address(RVA = "0x1552090", Offset = "0x1552090", VA = "0x1552090")]
	protected AkTriggerHandler()
	{
	}
}
[Token(Token = "0x20003F8")]
[ExecuteInEditMode]
public abstract class AkDragDropTriggerHandler : AkTriggerHandler
{
	[Token(Token = "0x1700037D")]
	protected abstract BaseType WwiseType
	{
		[Token(Token = "0x600252A")]
		get;
	}

	[Token(Token = "0x600252B")]
	[Address(RVA = "0x180ACF4", Offset = "0x180ACF4", VA = "0x180ACF4", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600252C")]
	[Address(RVA = "0x180ACFC", Offset = "0x180ACFC", VA = "0x180ACFC", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600252D")]
	[Address(RVA = "0x180AD04", Offset = "0x180AD04", VA = "0x180AD04", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600252E")]
	[Address(RVA = "0x180AD0C", Offset = "0x180AD0C", VA = "0x180AD0C")]
	protected AkDragDropTriggerHandler()
	{
	}
}
[Token(Token = "0x20003F9")]
public class AkTriggerMouseDown : AkTriggerBase
{
	[Token(Token = "0x600252F")]
	[Address(RVA = "0x155218C", Offset = "0x155218C", VA = "0x155218C")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6002530")]
	[Address(RVA = "0x15521A0", Offset = "0x15521A0", VA = "0x15521A0")]
	public AkTriggerMouseDown()
	{
	}
}
[Token(Token = "0x20003FA")]
public class AkTriggerMouseEnter : AkTriggerBase
{
	[Token(Token = "0x6002531")]
	[Address(RVA = "0x15521A8", Offset = "0x15521A8", VA = "0x15521A8")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x6002532")]
	[Address(RVA = "0x15521BC", Offset = "0x15521BC", VA = "0x15521BC")]
	public AkTriggerMouseEnter()
	{
	}
}
[Token(Token = "0x20003FB")]
public class AkTriggerMouseExit : AkTriggerBase
{
	[Token(Token = "0x6002533")]
	[Address(RVA = "0x15521C4", Offset = "0x15521C4", VA = "0x15521C4")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x6002534")]
	[Address(RVA = "0x15521D8", Offset = "0x15521D8", VA = "0x15521D8")]
	public AkTriggerMouseExit()
	{
	}
}
[Token(Token = "0x20003FC")]
public class AkTriggerMouseUp : AkTriggerBase
{
	[Token(Token = "0x6002535")]
	[Address(RVA = "0x15521E0", Offset = "0x15521E0", VA = "0x15521E0")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x6002536")]
	[Address(RVA = "0x15521F4", Offset = "0x15521F4", VA = "0x15521F4")]
	public AkTriggerMouseUp()
	{
	}
}
namespace AK.Wwise
{
	[Serializable]
	[Token(Token = "0x20003FD")]
	public class AcousticTexture : BaseType
	{
		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAcousticTextureReference WwiseObjectReference;

		[Token(Token = "0x1700037E")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6002537")]
			[Address(RVA = "0x17F4340", Offset = "0x17F4340", VA = "0x17F4340", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002538")]
			[Address(RVA = "0x17F4348", Offset = "0x17F4348", VA = "0x17F4348", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700037F")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6002539")]
			[Address(RVA = "0x17F43DC", Offset = "0x17F43DC", VA = "0x17F43DC", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x600253A")]
		[Address(RVA = "0x17F43E4", Offset = "0x17F43E4", VA = "0x17F43E4")]
		public AcousticTexture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FE")]
	public class AuxBus : BaseType
	{
		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAuxBusReference WwiseObjectReference;

		[Token(Token = "0x17000380")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x600253B")]
			[Address(RVA = "0x17F43F4", Offset = "0x17F43F4", VA = "0x17F43F4", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600253C")]
			[Address(RVA = "0x17F43FC", Offset = "0x17F43FC", VA = "0x17F43FC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000381")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x600253D")]
			[Address(RVA = "0x17F4490", Offset = "0x17F4490", VA = "0x17F4490", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0x17F4498", Offset = "0x17F4498", VA = "0x17F4498")]
		public AuxBus()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FF")]
	public class Bank : BaseType
	{
		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseBankReference WwiseObjectReference;

		[Token(Token = "0x17000382")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x600253F")]
			[Address(RVA = "0x17F44A0", Offset = "0x17F44A0", VA = "0x17F44A0", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002540")]
			[Address(RVA = "0x17F44A8", Offset = "0x17F44A8", VA = "0x17F44A8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000383")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6002541")]
			[Address(RVA = "0x17F453C", Offset = "0x17F453C", VA = "0x17F453C", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6002542")]
		[Address(RVA = "0x17F4544", Offset = "0x17F4544", VA = "0x17F4544")]
		public void Load(bool decodeBank = false, bool saveDecodedBank = false)
		{
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x17F47CC", Offset = "0x17F47CC", VA = "0x17F47CC")]
		public void LoadAsync([Optional] AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0x17F4A10", Offset = "0x17F4A10", VA = "0x17F4A10")]
		public void Unload()
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x17F4BF0", Offset = "0x17F4BF0", VA = "0x17F4BF0")]
		public Bank()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000400")]
	public abstract class BaseGroupType : BaseType
	{
		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEAC18", Offset = "0xEEAC18")]
		private int groupIdInternal;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEAC74", Offset = "0xEEAC74")]
		private byte[] groupGuidInternal;

		[Token(Token = "0x17000384")]
		public WwiseObjectReference GroupWwiseObjectReference
		{
			[Token(Token = "0x6002546")]
			[Address(RVA = "0x17F4BF8", Offset = "0x17F4BF8", VA = "0x17F4BF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000385")]
		public abstract WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x6002547")]
			get;
		}

		[Token(Token = "0x17000386")]
		public uint GroupId
		{
			[Token(Token = "0x6002548")]
			[Address(RVA = "0x17F4CDC", Offset = "0x17F4CDC", VA = "0x17F4CDC")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x17000387")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF46A0", Offset = "0xEF46A0")]
		public int groupID
		{
			[Token(Token = "0x600254A")]
			[Address(RVA = "0x17F4E94", Offset = "0x17F4E94", VA = "0x17F4E94")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000388")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF46D8", Offset = "0xEF46D8")]
		public byte[] groupGuid
		{
			[Token(Token = "0x600254B")]
			[Address(RVA = "0x17F4E98", Offset = "0x17F4E98", VA = "0x17F4E98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0x17F4D78", Offset = "0x17F4D78", VA = "0x17F4D78", Slot = "8")]
		public override bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x600254C")]
		[Address(RVA = "0x17F4F58", Offset = "0x17F4F58", VA = "0x17F4F58")]
		protected BaseGroupType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000401")]
	public abstract class BaseType
	{
		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEACD0", Offset = "0xEEACD0")]
		private int idInternal;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xEEAD2C", Offset = "0xEEAD2C")]
		private byte[] valueGuidInternal;

		[Token(Token = "0x17000389")]
		public abstract WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x600254D")]
			get;
			[Token(Token = "0x600254E")]
			set;
		}

		[Token(Token = "0x1700038A")]
		public abstract WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x600254F")]
			get;
		}

		[Token(Token = "0x1700038B")]
		public virtual string Name
		{
			[Token(Token = "0x6002550")]
			[Address(RVA = "0x17F4F60", Offset = "0x17F4F60", VA = "0x17F4F60", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700038C")]
		public uint Id
		{
			[Token(Token = "0x6002551")]
			[Address(RVA = "0x17F4FF4", Offset = "0x17F4FF4", VA = "0x17F4FF4")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x1700038D")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF4710", Offset = "0xEF4710")]
		public int ID
		{
			[Token(Token = "0x6002556")]
			[Address(RVA = "0x17F51D4", Offset = "0x17F51D4", VA = "0x17F51D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700038E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF4748", Offset = "0xEF4748")]
		public byte[] valueGuid
		{
			[Token(Token = "0x6002557")]
			[Address(RVA = "0x17F51D8", Offset = "0x17F51D8", VA = "0x17F51D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002552")]
		[Address(RVA = "0x17F4E10", Offset = "0x17F4E10", VA = "0x17F4E10", Slot = "8")]
		public virtual bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x17F5044", Offset = "0x17F5044", VA = "0x17F5044")]
		public bool Validate()
		{
			return default(bool);
		}

		[Token(Token = "0x6002554")]
		[Address(RVA = "0x17F5120", Offset = "0x17F5120", VA = "0x17F5120")]
		protected void Verify(AKRESULT result)
		{
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0x17F5124", Offset = "0x17F5124", VA = "0x17F5124", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002558")]
		[Address(RVA = "0x17F43EC", Offset = "0x17F43EC", VA = "0x17F43EC")]
		protected BaseType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000402")]
	public class CallbackFlags
	{
		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint value;

		[Token(Token = "0x6002559")]
		[Address(RVA = "0x17F5298", Offset = "0x17F5298", VA = "0x17F5298")]
		public CallbackFlags()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000403")]
	public class Event : BaseType
	{
		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseEventReference WwiseObjectReference;

		[Token(Token = "0x1700038F")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x600255A")]
			[Address(RVA = "0x17F52A0", Offset = "0x17F52A0", VA = "0x17F52A0", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600255B")]
			[Address(RVA = "0x17F52A8", Offset = "0x17F52A8", VA = "0x17F52A8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000390")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x600255C")]
			[Address(RVA = "0x17F533C", Offset = "0x17F533C", VA = "0x17F533C", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x600255D")]
		[Address(RVA = "0x17F5344", Offset = "0x17F5344", VA = "0x17F5344")]
		private void VerifyPlayingID(uint playingId)
		{
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0x17F5348", Offset = "0x17F5348", VA = "0x17F5348")]
		public uint Post(GameObject gameObject)
		{
			return default(uint);
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0x17F53F8", Offset = "0x17F53F8", VA = "0x17F53F8")]
		public uint Post(GameObject gameObject, CallbackFlags flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0x17F54D4", Offset = "0x17F54D4", VA = "0x17F54D4")]
		public uint Post(GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0x17F55A8", Offset = "0x17F55A8", VA = "0x17F55A8")]
		public void Stop(GameObject gameObject, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
		{
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0x17F55B8", Offset = "0x17F55B8", VA = "0x17F55B8")]
		public void ExecuteAction(GameObject gameObject, AkActionOnEventType actionOnEventType, int transitionDuration, AkCurveInterpolation curveInterpolation)
		{
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0x17F5688", Offset = "0x17F5688", VA = "0x17F5688")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array)
		{
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x17F56F8", Offset = "0x17F56F8", VA = "0x17F56F8")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array, int count)
		{
		}

		[Token(Token = "0x6002565")]
		[Address(RVA = "0x17F5770", Offset = "0x17F5770", VA = "0x17F5770")]
		public void StopMIDI(GameObject gameObject)
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0x17F581C", Offset = "0x17F581C", VA = "0x17F581C")]
		public void StopMIDI()
		{
		}

		[Token(Token = "0x6002567")]
		[Address(RVA = "0x17F58B4", Offset = "0x17F58B4", VA = "0x17F58B4")]
		public Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000404")]
	public class RTPC : BaseType
	{
		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseRtpcReference WwiseObjectReference;

		[Token(Token = "0x17000391")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6002568")]
			[Address(RVA = "0x17F58BC", Offset = "0x17F58BC", VA = "0x17F58BC", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002569")]
			[Address(RVA = "0x17F58C4", Offset = "0x17F58C4", VA = "0x17F58C4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000392")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x600256A")]
			[Address(RVA = "0x17F5958", Offset = "0x17F5958", VA = "0x17F5958", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x17F5960", Offset = "0x17F5960", VA = "0x17F5960")]
		public void SetValue(GameObject gameObject, float value)
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x17F5A20", Offset = "0x17F5A20", VA = "0x17F5A20")]
		public float GetValue(GameObject gameObject)
		{
			return default(float);
		}

		[Token(Token = "0x600256D")]
		[Address(RVA = "0x17F5B14", Offset = "0x17F5B14", VA = "0x17F5B14")]
		public void SetGlobalValue(float value)
		{
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x17F5BC0", Offset = "0x17F5BC0", VA = "0x17F5BC0")]
		public float GetGlobalValue()
		{
			return default(float);
		}

		[Token(Token = "0x600256F")]
		[Address(RVA = "0x17F5BC8", Offset = "0x17F5BC8", VA = "0x17F5BC8")]
		public RTPC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000405")]
	public class State : BaseGroupType
	{
		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseStateReference WwiseObjectReference;

		[Token(Token = "0x17000393")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6002570")]
			[Address(RVA = "0x17F5BD0", Offset = "0x17F5BD0", VA = "0x17F5BD0", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002571")]
			[Address(RVA = "0x17F5BD8", Offset = "0x17F5BD8", VA = "0x17F5BD8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000394")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6002572")]
			[Address(RVA = "0x17F5C6C", Offset = "0x17F5C6C", VA = "0x17F5C6C", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x17000395")]
		public override WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x6002573")]
			[Address(RVA = "0x17F5C74", Offset = "0x17F5C74", VA = "0x17F5C74", Slot = "9")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x6002574")]
		[Address(RVA = "0x17F5C7C", Offset = "0x17F5C7C", VA = "0x17F5C7C")]
		public void SetValue()
		{
		}

		[Token(Token = "0x6002575")]
		[Address(RVA = "0x17F5D24", Offset = "0x17F5D24", VA = "0x17F5D24")]
		public State()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000406")]
	public class Switch : BaseGroupType
	{
		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseSwitchReference WwiseObjectReference;

		[Token(Token = "0x17000396")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x6002576")]
			[Address(RVA = "0x17F5D2C", Offset = "0x17F5D2C", VA = "0x17F5D2C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002577")]
			[Address(RVA = "0x17F5D34", Offset = "0x17F5D34", VA = "0x17F5D34", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000397")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x6002578")]
			[Address(RVA = "0x17F5DC8", Offset = "0x17F5DC8", VA = "0x17F5DC8", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x17000398")]
		public override WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x6002579")]
			[Address(RVA = "0x17F5DD0", Offset = "0x17F5DD0", VA = "0x17F5DD0", Slot = "9")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x17F5DD8", Offset = "0x17F5DD8", VA = "0x17F5DD8")]
		public void SetValue(GameObject gameObject)
		{
		}

		[Token(Token = "0x600257B")]
		[Address(RVA = "0x17F5E94", Offset = "0x17F5E94", VA = "0x17F5E94")]
		public Switch()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000407")]
	public class Trigger : BaseType
	{
		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseTriggerReference WwiseObjectReference;

		[Token(Token = "0x17000399")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x600257C")]
			[Address(RVA = "0x17F5E9C", Offset = "0x17F5E9C", VA = "0x17F5E9C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600257D")]
			[Address(RVA = "0x17F5EA4", Offset = "0x17F5EA4", VA = "0x17F5EA4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700039A")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x600257E")]
			[Address(RVA = "0x17F5F38", Offset = "0x17F5F38", VA = "0x17F5F38", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x600257F")]
		[Address(RVA = "0x17F5F40", Offset = "0x17F5F40", VA = "0x17F5F40")]
		public void Post(GameObject gameObject)
		{
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0x17F5FEC", Offset = "0x17F5FEC", VA = "0x17F5FEC")]
		public Trigger()
		{
		}
	}
}
namespace TMPro
{
	[Serializable]
	[Token(Token = "0x2000408")]
	public class TMP_DigitValidator : TMP_InputValidator
	{
		[Token(Token = "0x6002581")]
		[Address(RVA = "0x11CFC34", Offset = "0x11CFC34", VA = "0x11CFC34", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0x11CFC60", Offset = "0x11CFC60", VA = "0x11CFC60")]
		public TMP_DigitValidator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000409")]
	public class TMP_PhoneNumberValidator : TMP_InputValidator
	{
		[Token(Token = "0x6002583")]
		[Address(RVA = "0x11CFC68", Offset = "0x11CFC68", VA = "0x11CFC68", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0x11D00B0", Offset = "0x11D00B0", VA = "0x11D00B0")]
		public TMP_PhoneNumberValidator()
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class TMP_TextEventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x2000634")]
		public class CharacterSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6002E1D")]
			[Address(RVA = "0x11D0B20", Offset = "0x11D0B20", VA = "0x11D0B20")]
			public CharacterSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000635")]
		public class SpriteSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6002E1E")]
			[Address(RVA = "0x11D0B70", Offset = "0x11D0B70", VA = "0x11D0B70")]
			public SpriteSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000636")]
		public class WordSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6002E1F")]
			[Address(RVA = "0x11D0BC0", Offset = "0x11D0BC0", VA = "0x11D0BC0")]
			public WordSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000637")]
		public class LineSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6002E20")]
			[Address(RVA = "0x11D0C10", Offset = "0x11D0C10", VA = "0x11D0C10")]
			public LineSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000638")]
		public class LinkSelectionEvent : UnityEvent<string, string, int>
		{
			[Token(Token = "0x6002E21")]
			[Address(RVA = "0x11D0C60", Offset = "0x11D0C60", VA = "0x11D0C60")]
			public LinkSelectionEvent()
			{
			}
		}

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterSelectionEvent m_OnCharacterSelection;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteSelectionEvent m_OnSpriteSelection;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WordSelectionEvent m_OnWordSelection;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineSelectionEvent m_OnLineSelection;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LinkSelectionEvent m_OnLinkSelection;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_Camera;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas m_Canvas;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_selectedLink;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_lastCharIndex;

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_lastWordIndex;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_lastLineIndex;

		[Token(Token = "0x1700039B")]
		public CharacterSelectionEvent onCharacterSelection
		{
			[Token(Token = "0x6002585")]
			[Address(RVA = "0x11D00B8", Offset = "0x11D00B8", VA = "0x11D00B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002586")]
			[Address(RVA = "0x11D00C0", Offset = "0x11D00C0", VA = "0x11D00C0")]
			set
			{
			}
		}

		[Token(Token = "0x1700039C")]
		public SpriteSelectionEvent onSpriteSelection
		{
			[Token(Token = "0x6002587")]
			[Address(RVA = "0x11D00C8", Offset = "0x11D00C8", VA = "0x11D00C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002588")]
			[Address(RVA = "0x11D00D0", Offset = "0x11D00D0", VA = "0x11D00D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700039D")]
		public WordSelectionEvent onWordSelection
		{
			[Token(Token = "0x6002589")]
			[Address(RVA = "0x11D00D8", Offset = "0x11D00D8", VA = "0x11D00D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600258A")]
			[Address(RVA = "0x11D00E0", Offset = "0x11D00E0", VA = "0x11D00E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700039E")]
		public LineSelectionEvent onLineSelection
		{
			[Token(Token = "0x600258B")]
			[Address(RVA = "0x11D00E8", Offset = "0x11D00E8", VA = "0x11D00E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600258C")]
			[Address(RVA = "0x11D00F0", Offset = "0x11D00F0", VA = "0x11D00F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700039F")]
		public LinkSelectionEvent onLinkSelection
		{
			[Token(Token = "0x600258D")]
			[Address(RVA = "0x11D00F8", Offset = "0x11D00F8", VA = "0x11D00F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600258E")]
			[Address(RVA = "0x11D0100", Offset = "0x11D0100", VA = "0x11D0100")]
			set
			{
			}
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x11D0108", Offset = "0x11D0108", VA = "0x11D0108")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002590")]
		[Address(RVA = "0x11D02B4", Offset = "0x11D02B4", VA = "0x11D02B4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6002591")]
		[Address(RVA = "0x11D0A00", Offset = "0x11D0A00", VA = "0x11D0A00", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0x11D0A04", Offset = "0x11D0A04", VA = "0x11D0A04", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6002593")]
		[Address(RVA = "0x11D0758", Offset = "0x11D0758", VA = "0x11D0758")]
		private void SendOnCharacterSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x11D07D4", Offset = "0x11D07D4", VA = "0x11D07D4")]
		private void SendOnSpriteSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0x11D0850", Offset = "0x11D0850", VA = "0x11D0850")]
		private void SendOnWordSelection(string word, int charIndex, int length)
		{
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0x11D08E0", Offset = "0x11D08E0", VA = "0x11D08E0")]
		private void SendOnLineSelection(string line, int charIndex, int length)
		{
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0x11D0970", Offset = "0x11D0970", VA = "0x11D0970")]
		private void SendOnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0x11D0A08", Offset = "0x11D0A08", VA = "0x11D0A08")]
		public TMP_TextEventHandler()
		{
		}
	}
}
namespace TMPro.Examples
{
	[Token(Token = "0x200040B")]
	public class Benchmark01 : MonoBehaviour
	{
		[Token(Token = "0x2000639")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE50FC", Offset = "0xEE50FC")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400226F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01 <>4__this;

			[Token(Token = "0x4002272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x1700048B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E25")]
				[Address(RVA = "0x12CE6D8", Offset = "0x12CE6D8", VA = "0x12CE6D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E27")]
				[Address(RVA = "0x12CE740", Offset = "0x12CE740", VA = "0x12CE740", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E22")]
			[Address(RVA = "0x12CE138", Offset = "0x12CE138", VA = "0x12CE138")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002E23")]
			[Address(RVA = "0x12CE16C", Offset = "0x12CE16C", VA = "0x12CE16C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E24")]
			[Address(RVA = "0x12CE170", Offset = "0x12CE170", VA = "0x12CE170", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E26")]
			[Address(RVA = "0x12CE6E0", Offset = "0x12CE6E0", VA = "0x12CE6E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font TextMeshFont;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4001B1E")]
		private const string label01 = "The <#0050FF>count is: </color>{0}";

		[Token(Token = "0x4001B1F")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x6002599")]
		[Address(RVA = "0x12CE0BC", Offset = "0x12CE0BC", VA = "0x12CE0BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF13A0", Offset = "0xEF13A0")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0x12CE164", Offset = "0x12CE164", VA = "0x12CE164")]
		public Benchmark01()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class Benchmark01_UGUI : MonoBehaviour
	{
		[Token(Token = "0x200063A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE510C", Offset = "0xEE510C")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01_UGUI <>4__this;

			[Token(Token = "0x4002276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x1700048D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E2B")]
				[Address(RVA = "0x12CEC84", Offset = "0x12CEC84", VA = "0x12CEC84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E2D")]
				[Address(RVA = "0x12CECEC", Offset = "0x12CECEC", VA = "0x12CECEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E28")]
			[Address(RVA = "0x12CE7C4", Offset = "0x12CE7C4", VA = "0x12CE7C4")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002E29")]
			[Address(RVA = "0x12CE7F8", Offset = "0x12CE7F8", VA = "0x12CE7F8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E2A")]
			[Address(RVA = "0x12CE7FC", Offset = "0x12CE7FC", VA = "0x12CE7FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E2C")]
			[Address(RVA = "0x12CEC8C", Offset = "0x12CEC8C", VA = "0x12CEC8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font TextMeshFont;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshProUGUI m_textMeshPro;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text m_textMesh;

		[Token(Token = "0x4001B28")]
		private const string label01 = "The <#0050FF>count is: </color>";

		[Token(Token = "0x4001B29")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x600259B")]
		[Address(RVA = "0x12CE748", Offset = "0x12CE748", VA = "0x12CE748")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF1404", Offset = "0xEF1404")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0x12CE7F0", Offset = "0x12CE7F0", VA = "0x12CE7F0")]
		public Benchmark01_UGUI()
		{
		}
	}
	[Token(Token = "0x200040D")]
	public class Benchmark02 : MonoBehaviour
	{
		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x600259D")]
		[Address(RVA = "0x12CECF4", Offset = "0x12CECF4", VA = "0x12CECF4")]
		private void Start()
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0x12CF30C", Offset = "0x12CF30C", VA = "0x12CF30C")]
		public Benchmark02()
		{
		}
	}
	[Token(Token = "0x200040E")]
	public class Benchmark03 : MonoBehaviour
	{
		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x600259F")]
		[Address(RVA = "0x12CF31C", Offset = "0x12CF31C", VA = "0x12CF31C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025A0")]
		[Address(RVA = "0x12CF320", Offset = "0x12CF320", VA = "0x12CF320")]
		private void Start()
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0x12CF5C8", Offset = "0x12CF5C8", VA = "0x12CF5C8")]
		public Benchmark03()
		{
		}
	}
	[Token(Token = "0x200040F")]
	public class Benchmark04 : MonoBehaviour
	{
		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int MinPointSize;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MaxPointSize;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Steps;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_Transform;

		[Token(Token = "0x60025A2")]
		[Address(RVA = "0x12CF5D8", Offset = "0x12CF5D8", VA = "0x12CF5D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60025A3")]
		[Address(RVA = "0x12CF94C", Offset = "0x12CF94C", VA = "0x12CF94C")]
		public Benchmark04()
		{
		}
	}
	[Token(Token = "0x2000410")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x200063B")]
		public enum CameraModes
		{
			[Token(Token = "0x4002278")]
			Follow,
			[Token(Token = "0x4002279")]
			Isometric,
			[Token(Token = "0x400227A")]
			Free
		}

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cameraTransform;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform dummyTarget;

		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform CameraTarget;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FollowDistance;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxFollowDistance;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinFollowDistance;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ElevationAngle;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxElevationAngle;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MinElevationAngle;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float OrbitalAngle;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public CameraModes CameraMode;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool MovementSmoothing;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool RotationSmoothing;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool previousSmoothing;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MovementSmoothingValue;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float RotationSmoothingValue;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float MoveSensitivity;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentVelocity;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 desiredPosition;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float mouseX;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float mouseY;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 moveVector;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float mouseWheel;

		[Token(Token = "0x4001B4E")]
		private const string event_SmoothingValue = "Slider - Smoothing Value";

		[Token(Token = "0x4001B4F")]
		private const string event_FollowDistance = "Slider - Camera Zoom";

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0x12CF968", Offset = "0x12CF968", VA = "0x12CF968")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0x12CF9F8", Offset = "0x12CF9F8", VA = "0x12CF9F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0x12CFAE4", Offset = "0x12CFAE4", VA = "0x12CFAE4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0x12CFF60", Offset = "0x12CFF60", VA = "0x12CFF60")]
		private void GetPlayerInput()
		{
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x12D0874", Offset = "0x12D0874", VA = "0x12D0874")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class ObjectSpin : MonoBehaviour
	{
		[Token(Token = "0x200063C")]
		public enum MotionType
		{
			[Token(Token = "0x400227C")]
			Rotation,
			[Token(Token = "0x400227D")]
			BackAndForth,
			[Token(Token = "0x400227E")]
			Translation
		}

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SpinSpeed;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int RotationRange;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_time;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_prevPOS;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_initial_Rotation;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_initial_Position;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color32 m_lightColor;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int frames;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MotionType Motion;

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0x12D091C", Offset = "0x12D091C", VA = "0x12D091C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0x12D0A44", Offset = "0x12D0A44", VA = "0x12D0A44")]
		private void Update()
		{
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x12D0C80", Offset = "0x12D0C80", VA = "0x12D0C80")]
		public ObjectSpin()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class ShaderPropAnimator : MonoBehaviour
	{
		[Token(Token = "0x200063D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE511C", Offset = "0xEE511C")]
		private sealed class <AnimateProperties>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400227F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPropAnimator <>4__this;

			[Token(Token = "0x1700048F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E31")]
				[Address(RVA = "0x12D0F5C", Offset = "0x12D0F5C", VA = "0x12D0F5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000490")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E33")]
				[Address(RVA = "0x12D0FC4", Offset = "0x12D0FC4", VA = "0x12D0FC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E2E")]
			[Address(RVA = "0x12D0DC0", Offset = "0x12D0DC0", VA = "0x12D0DC0")]
			[DebuggerHidden]
			public <AnimateProperties>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002E2F")]
			[Address(RVA = "0x12D0DF4", Offset = "0x12D0DF4", VA = "0x12D0DF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E30")]
			[Address(RVA = "0x12D0DF8", Offset = "0x12D0DF8", VA = "0x12D0DF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E32")]
			[Address(RVA = "0x12D0F64", Offset = "0x12D0F64", VA = "0x12D0F64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer m_Renderer;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve GlowCurve;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_frame;

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x12D0C94", Offset = "0x12D0C94", VA = "0x12D0C94")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x12D0D18", Offset = "0x12D0D18", VA = "0x12D0D18")]
		private void Start()
		{
		}

		[Token(Token = "0x60025AE")]
		[Address(RVA = "0x12D0D44", Offset = "0x12D0D44", VA = "0x12D0D44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF1468", Offset = "0xEF1468")]
		private IEnumerator AnimateProperties()
		{
			return null;
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0x12D0DEC", Offset = "0x12D0DEC", VA = "0x12D0DEC")]
		public ShaderPropAnimator()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class SimpleScript : MonoBehaviour
	{
		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4001B5F")]
		private const string label = "The <#0050FF>count is: </color>{0:2}";

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_frame;

		[Token(Token = "0x60025B0")]
		[Address(RVA = "0x12D0FCC", Offset = "0x12D0FCC", VA = "0x12D0FCC")]
		private void Start()
		{
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x12D1098", Offset = "0x12D1098", VA = "0x12D1098")]
		private void Update()
		{
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x12D1134", Offset = "0x12D1134", VA = "0x12D1134")]
		public SimpleScript()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class SkewTextExample : MonoBehaviour
	{
		[Token(Token = "0x200063E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE512C", Offset = "0xEE512C")]
		private sealed class <WarpText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkewTextExample <>4__this;

			[Token(Token = "0x4002285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4002286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <old_ShearValue>5__3;

			[Token(Token = "0x4002287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__4;

			[Token(Token = "0x17000491")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E37")]
				[Address(RVA = "0x12D2260", Offset = "0x12D2260", VA = "0x12D2260", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000492")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E39")]
				[Address(RVA = "0x12D22C8", Offset = "0x12D22C8", VA = "0x12D22C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E34")]
			[Address(RVA = "0x12D12DC", Offset = "0x12D12DC", VA = "0x12D12DC")]
			[DebuggerHidden]
			public <WarpText>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002E35")]
			[Address(RVA = "0x12D1544", Offset = "0x12D1544", VA = "0x12D1544", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E36")]
			[Address(RVA = "0x12D1548", Offset = "0x12D1548", VA = "0x12D1548", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E38")]
			[Address(RVA = "0x12D2268", Offset = "0x12D2268", VA = "0x12D2268", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CurveScale;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ShearAmount;

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x12D113C", Offset = "0x12D113C", VA = "0x12D113C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x12D11AC", Offset = "0x12D11AC", VA = "0x12D11AC")]
		private void Start()
		{
		}

		[Token(Token = "0x60025B5")]
		[Address(RVA = "0x12D1254", Offset = "0x12D1254", VA = "0x12D1254")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x12D11D8", Offset = "0x12D11D8", VA = "0x12D11D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF14CC", Offset = "0xEF14CC")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x60025B7")]
		[Address(RVA = "0x12D1308", Offset = "0x12D1308", VA = "0x12D1308")]
		public SkewTextExample()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public class TMP_ExampleScript_01 : MonoBehaviour
	{
		[Token(Token = "0x200063F")]
		public enum objectType
		{
			[Token(Token = "0x4002289")]
			TextMeshPro,
			[Token(Token = "0x400228A")]
			TextMeshProUGUI
		}

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public objectType ObjectType;

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isStatic;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x4001B68")]
		private const string k_label = "The count is <#0080ff>{0}</color>";

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int count;

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x12D22D0", Offset = "0x12D22D0", VA = "0x12D22D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x12D24B0", Offset = "0x12D24B0", VA = "0x12D24B0")]
		private void Update()
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x12D254C", Offset = "0x12D254C", VA = "0x12D254C")]
		public TMP_ExampleScript_01()
		{
		}
	}
	[Token(Token = "0x2000416")]
	public class TMP_FrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x2000640")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x400228C")]
			TopLeft,
			[Token(Token = "0x400228D")]
			BottomLeft,
			[Token(Token = "0x400228E")]
			TopRight,
			[Token(Token = "0x400228F")]
			BottomRight
		}

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x4001B6F")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_camera;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0x12D2554", Offset = "0x12D2554", VA = "0x12D2554")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025BC")]
		[Address(RVA = "0x12D2A0C", Offset = "0x12D2A0C", VA = "0x12D2A0C")]
		private void Start()
		{
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0x12D2A38", Offset = "0x12D2A38", VA = "0x12D2A38")]
		private void Update()
		{
		}

		[Token(Token = "0x60025BE")]
		[Address(RVA = "0x12D276C", Offset = "0x12D276C", VA = "0x12D276C")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x12D2BA8", Offset = "0x12D2BA8", VA = "0x12D2BA8")]
		public TMP_FrameRateCounter()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public class TMP_TextEventCheck : MonoBehaviour
	{
		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_TextEventHandler TextEventHandler;

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x12D2BC0", Offset = "0x12D2BC0", VA = "0x12D2BC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0x12D2DF8", Offset = "0x12D2DF8", VA = "0x12D2DF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0x12D3030", Offset = "0x12D3030", VA = "0x12D3030")]
		private void OnCharacterSelection(char c, int index)
		{
		}

		[Token(Token = "0x60025C3")]
		[Address(RVA = "0x12D3250", Offset = "0x12D3250", VA = "0x12D3250")]
		private void OnSpriteSelection(char c, int index)
		{
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0x12D3470", Offset = "0x12D3470", VA = "0x12D3470")]
		private void OnWordSelection(string word, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x60025C5")]
		[Address(RVA = "0x12D3718", Offset = "0x12D3718", VA = "0x12D3718")]
		private void OnLineSelection(string lineText, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0x12D39C0", Offset = "0x12D39C0", VA = "0x12D39C0")]
		private void OnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0x12D3C54", Offset = "0x12D3C54", VA = "0x12D3C54")]
		public TMP_TextEventCheck()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class TMP_TextInfoDebugTool : MonoBehaviour
	{
		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x12D3C5C", Offset = "0x12D3C5C", VA = "0x12D3C5C")]
		public TMP_TextInfoDebugTool()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class TMP_TextSelector_A : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isHoveringObject;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastCharIndex;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_lastWordIndex;

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0x12D3C64", Offset = "0x12D3C64", VA = "0x12D3C64")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025CA")]
		[Address(RVA = "0x12D3D04", Offset = "0x12D3D04", VA = "0x12D3D04")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x12D4440", Offset = "0x12D4440", VA = "0x12D4440", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60025CC")]
		[Address(RVA = "0x12D44BC", Offset = "0x12D44BC", VA = "0x12D44BC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0x12D4534", Offset = "0x12D4534", VA = "0x12D4534")]
		public TMP_TextSelector_A()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class TMP_TextSelector_B : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerUpHandler
	{
		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform TextPopup_Prefab_01;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform m_TextPopup_RectTransform;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI m_TextPopup_TMPComponent;

		[Token(Token = "0x4001B7E")]
		private const string k_LinkText = "You have selected link <#ffff00>";

		[Token(Token = "0x4001B7F")]
		private const string k_WordText = "Word Index: <#ffff00>";

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Canvas m_Canvas;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_Camera;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isHoveringObject;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_selectedWord;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_selectedLink;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_lastIndex;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TMP_MeshInfo[] m_cachedMeshInfoVertexData;

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0x12D454C", Offset = "0x12D454C", VA = "0x12D454C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0x12D46FC", Offset = "0x12D46FC", VA = "0x12D46FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0x12D47C0", Offset = "0x12D47C0", VA = "0x12D47C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0x12D4884", Offset = "0x12D4884", VA = "0x12D4884")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x12D4940", Offset = "0x12D4940", VA = "0x12D4940")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x12D60A4", Offset = "0x12D60A4", VA = "0x12D60A4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x12D60B0", Offset = "0x12D60B0", VA = "0x12D60B0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0x12D60B8", Offset = "0x12D60B8", VA = "0x12D60B8", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0x12D60BC", Offset = "0x12D60BC", VA = "0x12D60BC", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0x12D5814", Offset = "0x12D5814", VA = "0x12D5814")]
		private void RestoreCachedVertexAttributes(int index)
		{
		}

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0x12D60C0", Offset = "0x12D60C0", VA = "0x12D60C0")]
		public TMP_TextSelector_B()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class TMP_UiFrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x2000641")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4002291")]
			TopLeft,
			[Token(Token = "0x4002292")]
			BottomLeft,
			[Token(Token = "0x4002293")]
			TopRight,
			[Token(Token = "0x4002294")]
			BottomRight
		}

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x4001B8E")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform m_frameCounter_transform;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0x12D60D8", Offset = "0x12D60D8", VA = "0x12D60D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0x12D662C", Offset = "0x12D662C", VA = "0x12D662C")]
		private void Start()
		{
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0x12D6658", Offset = "0x12D6658", VA = "0x12D6658")]
		private void Update()
		{
		}

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0x12D62A8", Offset = "0x12D62A8", VA = "0x12D62A8")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0x12D67C8", Offset = "0x12D67C8", VA = "0x12D67C8")]
		public TMP_UiFrameRateCounter()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public class TMPro_InstructionOverlay : MonoBehaviour
	{
		[Token(Token = "0x2000642")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4002296")]
			TopLeft,
			[Token(Token = "0x4002297")]
			BottomLeft,
			[Token(Token = "0x4002298")]
			TopRight,
			[Token(Token = "0x4002299")]
			BottomRight
		}

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4001B93")]
		private const string instructions = "Camera Control - <#ffff00>Shift + RMB\n</color>Zoom - <#ffff00>Mouse wheel.";

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camera;

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0x12D67E0", Offset = "0x12D67E0", VA = "0x12D67E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0x12D6A1C", Offset = "0x12D6A1C", VA = "0x12D6A1C")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0x12D6B6C", Offset = "0x12D6B6C", VA = "0x12D6B6C")]
		public TMPro_InstructionOverlay()
		{
		}
	}
	[Token(Token = "0x200041D")]
	public class TeleType : MonoBehaviour
	{
		[Token(Token = "0x2000643")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE513C", Offset = "0xEE513C")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400229A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400229B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400229C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleType <>4__this;

			[Token(Token = "0x400229D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x400229E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <counter>5__3;

			[Token(Token = "0x17000493")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E3D")]
				[Address(RVA = "0x12D6F88", Offset = "0x12D6F88", VA = "0x12D6F88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000494")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E3F")]
				[Address(RVA = "0x12D6FF0", Offset = "0x12D6FF0", VA = "0x12D6FF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E3A")]
			[Address(RVA = "0x12D6C9C", Offset = "0x12D6C9C", VA = "0x12D6C9C")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002E3B")]
			[Address(RVA = "0x12D6D40", Offset = "0x12D6D40", VA = "0x12D6D40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E3C")]
			[Address(RVA = "0x12D6D44", Offset = "0x12D6D44", VA = "0x12D6D44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E3E")]
			[Address(RVA = "0x12D6F90", Offset = "0x12D6F90", VA = "0x12D6F90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string label01;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string label02;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_textMeshPro;

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x12D6B7C", Offset = "0x12D6B7C", VA = "0x12D6B7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x12D6C20", Offset = "0x12D6C20", VA = "0x12D6C20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF1530", Offset = "0xEF1530")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x12D6CC8", Offset = "0x12D6CC8", VA = "0x12D6CC8")]
		public TeleType()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public class TextConsoleSimulator : MonoBehaviour
	{
		[Token(Token = "0x2000644")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE514C", Offset = "0xEE514C")]
		private sealed class <RevealCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400229F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x40022A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextConsoleSimulator <>4__this;

			[Token(Token = "0x40022A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40022A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x40022A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <visibleCount>5__4;

			[Token(Token = "0x17000495")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E43")]
				[Address(RVA = "0x12D7520", Offset = "0x12D7520", VA = "0x12D7520", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000496")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E45")]
				[Address(RVA = "0x12D7588", Offset = "0x12D7588", VA = "0x12D7588", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E40")]
			[Address(RVA = "0x12D72C4", Offset = "0x12D72C4", VA = "0x12D72C4")]
			[DebuggerHidden]
			public <RevealCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002E41")]
			[Address(RVA = "0x12D73A0", Offset = "0x12D73A0", VA = "0x12D73A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E42")]
			[Address(RVA = "0x12D73A4", Offset = "0x12D73A4", VA = "0x12D73A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E44")]
			[Address(RVA = "0x12D7528", Offset = "0x12D7528", VA = "0x12D7528", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000645")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE515C", Offset = "0xEE515C")]
		private sealed class <RevealWords>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x40022A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalWordCount>5__2;

			[Token(Token = "0x40022AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x40022AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <counter>5__4;

			[Token(Token = "0x40022AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <visibleCount>5__5;

			[Token(Token = "0x17000497")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E49")]
				[Address(RVA = "0x12D7784", Offset = "0x12D7784", VA = "0x12D7784", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000498")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E4B")]
				[Address(RVA = "0x12D77EC", Offset = "0x12D77EC", VA = "0x12D77EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E46")]
			[Address(RVA = "0x12D736C", Offset = "0x12D736C", VA = "0x12D736C")]
			[DebuggerHidden]
			public <RevealWords>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002E47")]
			[Address(RVA = "0x12D7590", Offset = "0x12D7590", VA = "0x12D7590", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E48")]
			[Address(RVA = "0x12D7594", Offset = "0x12D7594", VA = "0x12D7594", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E4A")]
			[Address(RVA = "0x12D778C", Offset = "0x12D778C", VA = "0x12D778C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasTextChanged;

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x12D6FF8", Offset = "0x12D6FF8", VA = "0x12D6FF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0x12D7068", Offset = "0x12D7068", VA = "0x12D7068")]
		private void Start()
		{
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x12D7130", Offset = "0x12D7130", VA = "0x12D7130")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0x12D71F4", Offset = "0x12D71F4", VA = "0x12D71F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x12D72B8", Offset = "0x12D72B8", VA = "0x12D72B8")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x12D7098", Offset = "0x12D7098", VA = "0x12D7098")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF1594", Offset = "0xEF1594")]
		private IEnumerator RevealCharacters(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x12D72F0", Offset = "0x12D72F0", VA = "0x12D72F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF15F8", Offset = "0xEF15F8")]
		private IEnumerator RevealWords(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x12D7398", Offset = "0x12D7398", VA = "0x12D7398")]
		public TextConsoleSimulator()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class TextMeshProFloatingText : MonoBehaviour
	{
		[Token(Token = "0x2000646")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE516C", Offset = "0xEE516C")]
		private sealed class <DisplayTextMeshProFloatingText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x40022B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x40022B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x40022B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x40022B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x40022B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x40022B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x40022B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x17000499")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E4F")]
				[Address(RVA = "0x12D89B8", Offset = "0x12D89B8", VA = "0x12D89B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E51")]
				[Address(RVA = "0x12D8A20", Offset = "0x12D8A20", VA = "0x12D8A20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E4C")]
			[Address(RVA = "0x12D7E68", Offset = "0x12D7E68", VA = "0x12D7E68")]
			[DebuggerHidden]
			public <DisplayTextMeshProFloatingText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002E4D")]
			[Address(RVA = "0x12D84C0", Offset = "0x12D84C0", VA = "0x12D84C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E4E")]
			[Address(RVA = "0x12D84C4", Offset = "0x12D84C4", VA = "0x12D84C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E50")]
			[Address(RVA = "0x12D89C0", Offset = "0x12D89C0", VA = "0x12D89C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000647")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE517C", Offset = "0xEE517C")]
		private sealed class <DisplayTextMeshFloatingText>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x40022BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x40022BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x40022BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x40022BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x40022BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x40022BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x40022C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x1700049B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E55")]
				[Address(RVA = "0x12D8450", Offset = "0x12D8450", VA = "0x12D8450", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E57")]
				[Address(RVA = "0x12D84B8", Offset = "0x12D84B8", VA = "0x12D84B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E52")]
			[Address(RVA = "0x12D7E94", Offset = "0x12D7E94", VA = "0x12D7E94")]
			[DebuggerHidden]
			public <DisplayTextMeshFloatingText>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002E53")]
			[Address(RVA = "0x12D7F68", Offset = "0x12D7F68", VA = "0x12D7F68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E54")]
			[Address(RVA = "0x12D7F6C", Offset = "0x12D7F6C", VA = "0x12D7F6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E56")]
			[Address(RVA = "0x12D8458", Offset = "0x12D8458", VA = "0x12D8458", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font TheFont;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_floatingText;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_transform;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_floatingText_Transform;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_cameraTransform;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 lastPOS;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion lastRotation;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int SpawnType;

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x12D77F4", Offset = "0x12D77F4", VA = "0x12D77F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0x12D78D4", Offset = "0x12D78D4", VA = "0x12D78D4")]
		private void Start()
		{
		}

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0x12D7D70", Offset = "0x12D7D70", VA = "0x12D7D70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF165C", Offset = "0xEF165C")]
		public IEnumerator DisplayTextMeshProFloatingText()
		{
			return null;
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0x12D7DEC", Offset = "0x12D7DEC", VA = "0x12D7DEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF16C0", Offset = "0xEF16C0")]
		public IEnumerator DisplayTextMeshFloatingText()
		{
			return null;
		}

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0x12D7EC0", Offset = "0x12D7EC0", VA = "0x12D7EC0")]
		public TextMeshProFloatingText()
		{
		}
	}
	[Token(Token = "0x2000420")]
	public class TextMeshSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0x12D8A28", Offset = "0x12D8A28", VA = "0x12D8A28")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0x12D8A2C", Offset = "0x12D8A2C", VA = "0x12D8A2C")]
		private void Start()
		{
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0x12D8D68", Offset = "0x12D8D68", VA = "0x12D8D68")]
		public TextMeshSpawner()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public class VertexColorCycler : MonoBehaviour
	{
		[Token(Token = "0x2000648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE518C", Offset = "0xEE518C")]
		private sealed class <AnimateVertexColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexColorCycler <>4__this;

			[Token(Token = "0x40022C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40022C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentCharacter>5__3;

			[Token(Token = "0x1700049D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E5B")]
				[Address(RVA = "0x12D9194", Offset = "0x12D9194", VA = "0x12D9194", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E5D")]
				[Address(RVA = "0x12D91FC", Offset = "0x12D91FC", VA = "0x12D91FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E58")]
			[Address(RVA = "0x12D8E80", Offset = "0x12D8E80", VA = "0x12D8E80")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002E59")]
			[Address(RVA = "0x12D8EB4", Offset = "0x12D8EB4", VA = "0x12D8EB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E5A")]
			[Address(RVA = "0x12D8EB8", Offset = "0x12D8EB8", VA = "0x12D8EB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E5C")]
			[Address(RVA = "0x12D919C", Offset = "0x12D919C", VA = "0x12D919C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0x12D8D78", Offset = "0x12D8D78", VA = "0x12D8D78")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0x12D8DD8", Offset = "0x12D8DD8", VA = "0x12D8DD8")]
		private void Start()
		{
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0x12D8E04", Offset = "0x12D8E04", VA = "0x12D8E04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF1724", Offset = "0xEF1724")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0x12D8EAC", Offset = "0x12D8EAC", VA = "0x12D8EAC")]
		public VertexColorCycler()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class VertexJitter : MonoBehaviour
	{
		[Token(Token = "0x2000649")]
		private struct VertexAnim
		{
			[Token(Token = "0x40022C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angleRange;

			[Token(Token = "0x40022C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angle;

			[Token(Token = "0x40022C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;
		}

		[Token(Token = "0x200064A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE519C", Offset = "0xEE519C")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexJitter <>4__this;

			[Token(Token = "0x40022CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40022CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <loopCount>5__3;

			[Token(Token = "0x40022CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private VertexAnim[] <vertexAnim>5__4;

			[Token(Token = "0x40022CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TMP_MeshInfo[] <cachedMeshInfo>5__5;

			[Token(Token = "0x1700049F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E61")]
				[Address(RVA = "0x12DA048", Offset = "0x12DA048", VA = "0x12DA048", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E63")]
				[Address(RVA = "0x12DA0B0", Offset = "0x12DA0B0", VA = "0x12DA0B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E5E")]
			[Address(RVA = "0x12D9520", Offset = "0x12D9520", VA = "0x12D9520")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002E5F")]
			[Address(RVA = "0x12D9564", Offset = "0x12D9564", VA = "0x12D9564", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E60")]
			[Address(RVA = "0x12D9568", Offset = "0x12D9568", VA = "0x12D9568", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E62")]
			[Address(RVA = "0x12DA050", Offset = "0x12DA050", VA = "0x12DA050", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0x12D9204", Offset = "0x12D9204", VA = "0x12D9204")]
		private void Awake()
		{
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x12D9264", Offset = "0x12D9264", VA = "0x12D9264")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0x12D9328", Offset = "0x12D9328", VA = "0x12D9328")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x12D93EC", Offset = "0x12D93EC", VA = "0x12D93EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x12D9494", Offset = "0x12D9494", VA = "0x12D9494")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x12D9418", Offset = "0x12D9418", VA = "0x12D9418")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF1788", Offset = "0xEF1788")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0x12D954C", Offset = "0x12D954C", VA = "0x12D954C")]
		public VertexJitter()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class VertexShakeA : MonoBehaviour
	{
		[Token(Token = "0x200064B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE51AC", Offset = "0xEE51AC")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeA <>4__this;

			[Token(Token = "0x40022D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40022D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x170004A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E67")]
				[Address(RVA = "0x12DAF48", Offset = "0x12DAF48", VA = "0x12DAF48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E69")]
				[Address(RVA = "0x12DAFB0", Offset = "0x12DAFB0", VA = "0x12DAFB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E64")]
			[Address(RVA = "0x12DA3C4", Offset = "0x12DA3C4", VA = "0x12DA3C4")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002E65")]
			[Address(RVA = "0x12DA400", Offset = "0x12DA400", VA = "0x12DA400", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E66")]
			[Address(RVA = "0x12DA404", Offset = "0x12DA404", VA = "0x12DA404", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E68")]
			[Address(RVA = "0x12DAF50", Offset = "0x12DAF50", VA = "0x12DAF50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ScaleMultiplier;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationMultiplier;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x12DA0B8", Offset = "0x12DA0B8", VA = "0x12DA0B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0x12DA118", Offset = "0x12DA118", VA = "0x12DA118")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0x12DA1DC", Offset = "0x12DA1DC", VA = "0x12DA1DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0x12DA2A0", Offset = "0x12DA2A0", VA = "0x12DA2A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0x12DA348", Offset = "0x12DA348", VA = "0x12DA348")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0x12DA2CC", Offset = "0x12DA2CC", VA = "0x12DA2CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF17EC", Offset = "0xEF17EC")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0x12DA3F0", Offset = "0x12DA3F0", VA = "0x12DA3F0")]
		public VertexShakeA()
		{
		}
	}
	[Token(Token = "0x2000424")]
	public class VertexShakeB : MonoBehaviour
	{
		[Token(Token = "0x200064C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE51BC", Offset = "0xEE51BC")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeB <>4__this;

			[Token(Token = "0x40022D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40022D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x170004A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E6D")]
				[Address(RVA = "0x11CDA3C", Offset = "0x11CDA3C", VA = "0x11CDA3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E6F")]
				[Address(RVA = "0x11CDAA4", Offset = "0x11CDAA4", VA = "0x11CDAA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E6A")]
			[Address(RVA = "0x11CC96C", Offset = "0x11CC96C", VA = "0x11CC96C")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002E6B")]
			[Address(RVA = "0x11CC9B0", Offset = "0x11CC9B0", VA = "0x11CC9B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E6C")]
			[Address(RVA = "0x11CC9B4", Offset = "0x11CC9B4", VA = "0x11CC9B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E6E")]
			[Address(RVA = "0x11CDA44", Offset = "0x11CDA44", VA = "0x11CDA44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x6002606")]
		[Address(RVA = "0x11CC660", Offset = "0x11CC660", VA = "0x11CC660")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002607")]
		[Address(RVA = "0x11CC6C0", Offset = "0x11CC6C0", VA = "0x11CC6C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002608")]
		[Address(RVA = "0x11CC784", Offset = "0x11CC784", VA = "0x11CC784")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002609")]
		[Address(RVA = "0x11CC848", Offset = "0x11CC848", VA = "0x11CC848")]
		private void Start()
		{
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0x11CC8F0", Offset = "0x11CC8F0", VA = "0x11CC8F0")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0x11CC874", Offset = "0x11CC874", VA = "0x11CC874")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF1850", Offset = "0xEF1850")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0x11CC998", Offset = "0x11CC998", VA = "0x11CC998")]
		public VertexShakeB()
		{
		}
	}
	[Token(Token = "0x2000425")]
	public class VertexZoom : MonoBehaviour
	{
		[Token(Token = "0x200064D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE51CC", Offset = "0xEE51CC")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40022DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<float> modifiedCharScale;

			[Token(Token = "0x40022DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Comparison<int> <>9__0;

			[Token(Token = "0x6002E70")]
			[Address(RVA = "0x11CDE0C", Offset = "0x11CDE0C", VA = "0x11CDE0C")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002E71")]
			[Address(RVA = "0x11CDE14", Offset = "0x11CDE14", VA = "0x11CDE14")]
			internal int <AnimateVertexColors>b__0(int a, int b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x200064E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE51DC", Offset = "0xEE51DC")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexZoom <>4__this;

			[Token(Token = "0x40022DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x40022E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x40022E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TMP_MeshInfo[] <cachedMeshInfoVertexData>5__3;

			[Token(Token = "0x40022E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<int> <scaleSortingOrder>5__4;

			[Token(Token = "0x170004A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E75")]
				[Address(RVA = "0x11CEC28", Offset = "0x11CEC28", VA = "0x11CEC28", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E77")]
				[Address(RVA = "0x11CEC90", Offset = "0x11CEC90", VA = "0x11CEC90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E72")]
			[Address(RVA = "0x11CDDC8", Offset = "0x11CDDC8", VA = "0x11CDDC8")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002E73")]
			[Address(RVA = "0x11CDED8", Offset = "0x11CDED8", VA = "0x11CDED8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E74")]
			[Address(RVA = "0x11CDEDC", Offset = "0x11CDEDC", VA = "0x11CDEDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E76")]
			[Address(RVA = "0x11CEC30", Offset = "0x11CEC30", VA = "0x11CEC30", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x600260D")]
		[Address(RVA = "0x11CDAAC", Offset = "0x11CDAAC", VA = "0x11CDAAC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600260E")]
		[Address(RVA = "0x11CDB0C", Offset = "0x11CDB0C", VA = "0x11CDB0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0x11CDBD0", Offset = "0x11CDBD0", VA = "0x11CDBD0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002610")]
		[Address(RVA = "0x11CDC94", Offset = "0x11CDC94", VA = "0x11CDC94")]
		private void Start()
		{
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0x11CDD3C", Offset = "0x11CDD3C", VA = "0x11CDD3C")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0x11CDCC0", Offset = "0x11CDCC0", VA = "0x11CDCC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF18B4", Offset = "0xEF18B4")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0x11CDDF4", Offset = "0x11CDDF4", VA = "0x11CDDF4")]
		public VertexZoom()
		{
		}
	}
	[Token(Token = "0x2000426")]
	public class WarpTextExample : MonoBehaviour
	{
		[Token(Token = "0x200064F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE51EC", Offset = "0xEE51EC")]
		private sealed class <WarpText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WarpTextExample <>4__this;

			[Token(Token = "0x40022E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x40022E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__3;

			[Token(Token = "0x170004A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002E7B")]
				[Address(RVA = "0x11CFBC4", Offset = "0x11CFBC4", VA = "0x11CFBC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002E7D")]
				[Address(RVA = "0x11CFC2C", Offset = "0x11CFC2C", VA = "0x11CFC2C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002E78")]
			[Address(RVA = "0x11CEE38", Offset = "0x11CEE38", VA = "0x11CEE38")]
			[DebuggerHidden]
			public <WarpText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002E79")]
			[Address(RVA = "0x11CF0A8", Offset = "0x11CF0A8", VA = "0x11CF0A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002E7A")]
			[Address(RVA = "0x11CF0AC", Offset = "0x11CF0AC", VA = "0x11CF0AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E7C")]
			[Address(RVA = "0x11CFBCC", Offset = "0x11CFBCC", VA = "0x11CFBCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AngleMultiplier;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CurveScale;

		[Token(Token = "0x6002614")]
		[Address(RVA = "0x11CEC98", Offset = "0x11CEC98", VA = "0x11CEC98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0x11CED08", Offset = "0x11CED08", VA = "0x11CED08")]
		private void Start()
		{
		}

		[Token(Token = "0x6002616")]
		[Address(RVA = "0x11CEDB0", Offset = "0x11CEDB0", VA = "0x11CEDB0")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0x11CED34", Offset = "0x11CED34", VA = "0x11CED34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xEF1918", Offset = "0xEF1918")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0x11CEE64", Offset = "0x11CEE64", VA = "0x11CEE64")]
		public WarpTextExample()
		{
		}
	}
}
namespace SSA
{
	[Token(Token = "0x2000427")]
	public class FlyMonsterSkillOne : SkillBase
	{
		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float fxBeginTime;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool isFxBTimeEnd;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 pos;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion rot;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 TPos;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject chargeFx;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject fireFx;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private WwiseDefine soundWwise;

		[Token(Token = "0x6002619")]
		[Address(RVA = "0x13C1964", Offset = "0x13C1964", VA = "0x13C1964", Slot = "5")]
		public override void Start()
		{
		}

		[Token(Token = "0x600261A")]
		[Address(RVA = "0x13C1E64", Offset = "0x13C1E64", VA = "0x13C1E64", Slot = "8")]
		public override void Stop()
		{
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0x13C20C4", Offset = "0x13C20C4", VA = "0x13C20C4")]
		private void OnCharge_Start(int state)
		{
		}

		[Token(Token = "0x600261C")]
		[Address(RVA = "0x13C23F4", Offset = "0x13C23F4", VA = "0x13C23F4")]
		private void OnCharge_Quit(int state_id)
		{
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0x13C23F8", Offset = "0x13C23F8", VA = "0x13C23F8")]
		private void OnCharge_Update(int state_id, float deltaTime)
		{
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0x13C2770", Offset = "0x13C2770", VA = "0x13C2770")]
		private void OnFire_Start(int state_id)
		{
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0x13C2918", Offset = "0x13C2918", VA = "0x13C2918")]
		private void OnFire_Quit(int state_id)
		{
		}

		[Token(Token = "0x6002620")]
		[Address(RVA = "0x13C2A04", Offset = "0x13C2A04", VA = "0x13C2A04")]
		private void OnFire_Update(int state_id, float deltaTime)
		{
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0x13C2DD0", Offset = "0x13C2DD0", VA = "0x13C2DD0")]
		private void OnFire_LateUpdate(int state_id)
		{
		}

		[Token(Token = "0x6002622")]
		[Address(RVA = "0x13C2EC8", Offset = "0x13C2EC8", VA = "0x13C2EC8")]
		public FlyMonsterSkillOne()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public class FlyMonsterSkillThree : SkillBase
	{
		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float fxBeginTime;

		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool isFxBTimeEnd;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 pos;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion rot;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 TPos;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject chargeFx;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private GameObject fireFx;

		[Token(Token = "0x6002623")]
		[Address(RVA = "0x13C2ED8", Offset = "0x13C2ED8", VA = "0x13C2ED8", Slot = "5")]
		public override void Start()
		{
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0x13C30F0", Offset = "0x13C30F0", VA = "0x13C30F0", Slot = "8")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0x13C3320", Offset = "0x13C3320", VA = "0x13C3320")]
		private void OnCharge_Start(int state)
		{
		}

		[Token(Token = "0x6002626")]
		[Address(RVA = "0x13C34A4", Offset = "0x13C34A4", VA = "0x13C34A4")]
		private void OnCharge_Quit(int state_id)
		{
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0x13C34A8", Offset = "0x13C34A8", VA = "0x13C34A8")]
		private void OnCharge_Update(int state_id, float deltaTime)
		{
		}

		[Token(Token = "0x6002628")]
		[Address(RVA = "0x13C363C", Offset = "0x13C363C", VA = "0x13C363C")]
		private void OnFire_Start(int state_id)
		{
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0x13C37E4", Offset = "0x13C37E4", VA = "0x13C37E4")]
		private void OnFire_Quit(int state_id)
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0x13C3898", Offset = "0x13C3898", VA = "0x13C3898")]
		private void OnFire_Update(int state_id, float deltaTime)
		{
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0x13C3B34", Offset = "0x13C3B34", VA = "0x13C3B34")]
		private void OnFire_LateUpdate(int state_id)
		{
		}

		[Token(Token = "0x600262C")]
		[Address(RVA = "0x13C3C2C", Offset = "0x13C3C2C", VA = "0x13C3C2C")]
		public FlyMonsterSkillThree()
		{
		}
	}
	[Token(Token = "0x2000429")]
	public enum e_Skill_Net_Op_Type
	{
		[Token(Token = "0x4001BD6")]
		Create,
		[Token(Token = "0x4001BD7")]
		Change,
		[Token(Token = "0x4001BD8")]
		Stop
	}
	[Token(Token = "0x200042A")]
	public enum e_Skill_Type
	{
		[Token(Token = "0x4001BDA")]
		Skill1,
		[Token(Token = "0x4001BDB")]
		Skill2
	}
	[Token(Token = "0x200042B")]
	public enum e_Skill_State_Type
	{
		[Token(Token = "0x4001BDD")]
		None,
		[Token(Token = "0x4001BDE")]
		Charge,
		[Token(Token = "0x4001BDF")]
		Fire
	}
	[Token(Token = "0x200042C")]
	public struct SkillInfoStruct
	{
		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Pos;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion Rot;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 TPos;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Target;
	}
	[Token(Token = "0x200042D")]
	public class SimpleSkillAgent : WAgent
	{
		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WUnit owner;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SkillConfigMono configMono;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SkillBase curSkill;

		[Token(Token = "0x600262D")]
		[Address(RVA = "0x13C3C34", Offset = "0x13C3C34", VA = "0x13C3C34", Slot = "4")]
		public void Init(WUnit owner)
		{
		}

		[Token(Token = "0x600262E")]
		[Address(RVA = "0x13C3C3C", Offset = "0x13C3C3C", VA = "0x13C3C3C")]
		public void OnGameObjectLoad()
		{
		}

		[Token(Token = "0x600262F")]
		[Address(RVA = "0x13C3CAC", Offset = "0x13C3CAC", VA = "0x13C3CAC")]
		public void DoUpdate(float deltaTime, int millisDeltaTime)
		{
		}

		[Token(Token = "0x6002630")]
		[Address(RVA = "0x13C3CC4", Offset = "0x13C3CC4", VA = "0x13C3CC4")]
		public void DoLateUpdate()
		{
		}

		[Token(Token = "0x6002631")]
		[Address(RVA = "0x13C3CDC", Offset = "0x13C3CDC", VA = "0x13C3CDC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0x13C3DD8", Offset = "0x13C3DD8", VA = "0x13C3DD8")]
		public void CreateSkill(e_Skill_Type skillType)
		{
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0x13C3ED0", Offset = "0x13C3ED0", VA = "0x13C3ED0")]
		private void DoCreateSkill(e_Skill_Type skillType)
		{
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0x13C3F94", Offset = "0x13C3F94", VA = "0x13C3F94")]
		public void ChangeSkill(e_Skill_Type skillType, e_Skill_State_Type state, [Optional] SkillInfoStruct info)
		{
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0x13C4108", Offset = "0x13C4108", VA = "0x13C4108")]
		private void DoChangeSkill(e_Skill_Type skillType, e_Skill_State_Type state, [Optional] SkillInfoStruct info)
		{
		}

		[Token(Token = "0x6002636")]
		[Address(RVA = "0x13C3CE0", Offset = "0x13C3CE0", VA = "0x13C3CE0")]
		public void StopSkill()
		{
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0x13C4160", Offset = "0x13C4160", VA = "0x13C4160")]
		public void DoStopSkill()
		{
		}

		[Token(Token = "0x6002638")]
		[Address(RVA = "0x13C41A8", Offset = "0x13C41A8", VA = "0x13C41A8")]
		public void SyncSkill(e_Skill_Type skill, e_Skill_Net_Op_Type op, e_Skill_State_Type state, Vector3 pos, Quaternion rot, Vector3 tPos)
		{
		}

		[Token(Token = "0x6002639")]
		[Address(RVA = "0x13C258C", Offset = "0x13C258C", VA = "0x13C258C")]
		public Vector3 GetMiddlePoint(e_Skill_Type skillType, e_Skill_State_Type state)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600263A")]
		[Address(RVA = "0x13C4334", Offset = "0x13C4334", VA = "0x13C4334")]
		public SimpleSkillAgent()
		{
		}
	}
	[Token(Token = "0x200042E")]
	public class SkillBase
	{
		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected WUnit owner;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected FSMSystem fsm;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float runningTime;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected float leftTime;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool isTimeEnd;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected SkillInfoStruct curSkillInfo;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected SkillConfigMono configMono;

		[Token(Token = "0x600263B")]
		[Address(RVA = "0x13C433C", Offset = "0x13C433C", VA = "0x13C433C", Slot = "4")]
		public virtual void Init(WUnit owner, SkillConfigMono configMono)
		{
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0x13C1B7C", Offset = "0x13C1B7C", VA = "0x13C1B7C", Slot = "5")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0x13C4370", Offset = "0x13C4370", VA = "0x13C4370", Slot = "6")]
		public virtual void Update(float deltaTime)
		{
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0x13C4384", Offset = "0x13C4384", VA = "0x13C4384", Slot = "7")]
		public virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0x13C4398", Offset = "0x13C4398", VA = "0x13C4398", Slot = "8")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0x13C439C", Offset = "0x13C439C", VA = "0x13C439C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0x13C1C18", Offset = "0x13C1C18", VA = "0x13C1C18")]
		protected void AddNextState(string name, int stateIndex, OnStateStart onStateStart, [Optional] OnStateQuit onStateQuit, [Optional] OnStateUpdate onStateUpdate, [Optional] OnStateFixedUpdate onStateFixedUpdate, [Optional] OnStateLateUpdate onStateLateUpdate)
		{
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0x13C43A8", Offset = "0x13C43A8", VA = "0x13C43A8", Slot = "9")]
		public virtual void ChangeState(int state_id, [Optional] SkillInfoStruct info)
		{
		}

		[Token(Token = "0x6002643")]
		[Address(RVA = "0x13C2ED0", Offset = "0x13C2ED0", VA = "0x13C2ED0")]
		public SkillBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200042F")]
	public class SkillConfig
	{
		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public e_Skill_Type SkillType;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string ChargeAni;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ChargeTime;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject ChargeFx;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float ChargeFxBTime;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform ChargePoint;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform ChargePoint2;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AudioEvent chargeAudio;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string FireAni;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float FireTime;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject FireFx;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float FireFxBTime;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform FirePoint;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform FirePoint2;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioEvent fireAudio;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float ForwardDis;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool IsBulletMonster;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int BulletMonsterId;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<Transform> CommonTrans;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<float> CommonFloats;

		[Token(Token = "0x6002644")]
		[Address(RVA = "0x13C4448", Offset = "0x13C4448", VA = "0x13C4448")]
		public SkillConfig()
		{
		}
	}
	[Token(Token = "0x2000430")]
	[AttributeAttribute(Name = "SingletonComponentCacheAttribute", RVA = "0xEE334C", Offset = "0xEE334C")]
	public class SkillConfigMono : MonoBehaviour
	{
		[Token(Token = "0x2000650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEE51FC", Offset = "0xEE51FC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40022E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public e_Skill_Type type;

			[Token(Token = "0x6002E7E")]
			[Address(RVA = "0x13C44F8", Offset = "0x13C44F8", VA = "0x13C44F8")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002E7F")]
			[Address(RVA = "0x13C457C", Offset = "0x13C457C", VA = "0x13C457C")]
			internal bool <GetSkillConfigByType>b__0(SkillConfig a)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<SkillConfig> SkillCofings;

		[Token(Token = "0x6002645")]
		[Address(RVA = "0x13C2330", Offset = "0x13C2330", VA = "0x13C2330")]
		public SkillConfig GetSkillConfigByType(e_Skill_Type type)
		{
			return null;
		}

		[Token(Token = "0x6002646")]
		[Address(RVA = "0x13C4500", Offset = "0x13C4500", VA = "0x13C4500")]
		public SkillConfigMono()
		{
		}
	}
}
namespace YanCheZuo
{
	[Token(Token = "0x2000431")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xEE33B0", Offset = "0xEE33B0")]
	public class TestMeshViewer : MonoBehaviour
	{
		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private MeshFilter _meshFilter;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh _mesh;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<Vector3> verticesList;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Vector2> uvList;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<int> triList;

		[Token(Token = "0x6002647")]
		[Address(RVA = "0x1D79A94", Offset = "0x1D79A94", VA = "0x1D79A94")]
		private void Start()
		{
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0x1D79B20", Offset = "0x1D79B20", VA = "0x1D79B20")]
		private void ReadMeshInfo()
		{
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0x1D79CC8", Offset = "0x1D79CC8", VA = "0x1D79CC8")]
		public TestMeshViewer()
		{
		}
	}
}
namespace SubjectNerd.Utilities
{
	[Token(Token = "0x2000432")]
	public class EditScriptableAttribute : PropertyAttribute
	{
		[Token(Token = "0x600264A")]
		[Address(RVA = "0x12CC5C4", Offset = "0x12CC5C4", VA = "0x12CC5C4")]
		public EditScriptableAttribute()
		{
		}
	}
	[Token(Token = "0x2000433")]
	public class ReorderableAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEADD8", Offset = "0xEEADD8")]
		private string <ElementHeader>k__BackingField;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEADE8", Offset = "0xEEADE8")]
		private bool <HeaderZeroIndex>k__BackingField;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEADF8", Offset = "0xEEADF8")]
		private bool <ElementSingleLine>k__BackingField;

		[Token(Token = "0x170003A0")]
		public string ElementHeader
		{
			[Token(Token = "0x600264B")]
			[Address(RVA = "0x12CC5CC", Offset = "0x12CC5CC", VA = "0x12CC5CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF197C", Offset = "0xEF197C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600264C")]
			[Address(RVA = "0x12CC5D4", Offset = "0x12CC5D4", VA = "0x12CC5D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF198C", Offset = "0xEF198C")]
			protected set
			{
			}
		}

		[Token(Token = "0x170003A1")]
		public bool HeaderZeroIndex
		{
			[Token(Token = "0x600264D")]
			[Address(RVA = "0x12CC5DC", Offset = "0x12CC5DC", VA = "0x12CC5DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF199C", Offset = "0xEF199C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600264E")]
			[Address(RVA = "0x12CC5E4", Offset = "0x12CC5E4", VA = "0x12CC5E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF19AC", Offset = "0xEF19AC")]
			protected set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		public bool ElementSingleLine
		{
			[Token(Token = "0x600264F")]
			[Address(RVA = "0x12CC5F0", Offset = "0x12CC5F0", VA = "0x12CC5F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF19BC", Offset = "0xEF19BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002650")]
			[Address(RVA = "0x12CC5F8", Offset = "0x12CC5F8", VA = "0x12CC5F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF19CC", Offset = "0xEF19CC")]
			protected set
			{
			}
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x12CC604", Offset = "0x12CC604", VA = "0x12CC604")]
		public ReorderableAttribute()
		{
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0x12CC674", Offset = "0x12CC674", VA = "0x12CC674")]
		public ReorderableAttribute(string headerString = "", bool isZeroIndex = true, bool isSingleLine = false)
		{
		}
	}
}
namespace DG.Tweening
{
	[Token(Token = "0x2000434")]
	public static class TweenCustomExtensions
	{
		[Token(Token = "0x6002653")]
		[Address(RVA = "0x121F14C", Offset = "0x121F14C", VA = "0x121F14C")]
		public static float PathGetTime(this Tween t, int index)
		{
			return default(float);
		}
	}
}
namespace NodeCanvas.Tasks.Actions
{
	[Token(Token = "0x2000435")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3434", Offset = "0xEE3434")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3434", Offset = "0xEE3434")]
	public class CrowTweenMove : ActionTask<Transform>
	{
		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xEEAE08", Offset = "0xEEAE08")]
		public BBParameter<GameObject> player;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> minMiddleRadius;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> maxMiddleRadius;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<float> speed;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<float> hoverHeight;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BBParameter<float> keepDistance;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public BBParameter<GoTween> saveAsTween;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public BBParameter<float> highPercent;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public BBParameter<Transform> area1;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public BBParameter<Transform> area2;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public BBParameter<List<Transform>> areas;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float duration;

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<GameObject> pointList;

		[Token(Token = "0x170003A3")]
		protected override string info
		{
			[Token(Token = "0x6002654")]
			[Address(RVA = "0x1385864", Offset = "0x1385864", VA = "0x1385864", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0x13858AC", Offset = "0x13858AC", VA = "0x13858AC")]
		public CrowTweenMove()
		{
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0x1385954", Offset = "0x1385954", VA = "0x1385954", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0x1385FD0", Offset = "0x1385FD0", VA = "0x1385FD0", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0x1386014", Offset = "0x1386014", VA = "0x1386014")]
		private Vector3 RandomMiddlePoint(Vector3 pointA, Vector3 pointB)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002659")]
		[Address(RVA = "0x1385E78", Offset = "0x1385E78", VA = "0x1385E78")]
		private Vector3 RandomMiddlePoint2(Vector3 pointBegin, Vector3 pointEnd)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000436")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3494", Offset = "0xEE3494")]
	public class GetLerpTwoVector3 : ActionTask<Transform>
	{
		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> begin;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Vector3> end;

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEEAE18", Offset = "0xEEAE18")]
		public BBParameter<float> ratio;

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<Vector3> result;

		[Token(Token = "0x170003A4")]
		protected override string info
		{
			[Token(Token = "0x600265A")]
			[Address(RVA = "0x13864A0", Offset = "0x13864A0", VA = "0x13864A0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0x1386578", Offset = "0x1386578", VA = "0x1386578", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0x13866A8", Offset = "0x13866A8", VA = "0x13866A8")]
		public GetLerpTwoVector3()
		{
		}
	}
	[Token(Token = "0x2000437")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE34CC", Offset = "0xEE34CC")]
	public class LerpTwoVector3 : ActionTask<Transform>
	{
		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> begin;

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Vector3> end;

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEEAE40", Offset = "0xEEAE40")]
		public BBParameter<float> time;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[BlackboardOnly]
		public BBParameter<Vector3> result;

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float timer;

		[Token(Token = "0x170003A5")]
		protected override string info
		{
			[Token(Token = "0x600265D")]
			[Address(RVA = "0x1387564", Offset = "0x1387564", VA = "0x1387564", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600265E")]
		[Address(RVA = "0x138763C", Offset = "0x138763C", VA = "0x138763C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0x1387644", Offset = "0x1387644", VA = "0x1387644", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002660")]
		[Address(RVA = "0x13877D4", Offset = "0x13877D4", VA = "0x13877D4")]
		public LerpTwoVector3()
		{
		}
	}
	[Token(Token = "0x2000438")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3504", Offset = "0xEE3504")]
	public class GetRandomClosePoint : ActionTask
	{
		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> orignal;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> radius;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<Vector3> result;

		[Token(Token = "0x170003A6")]
		protected override string info
		{
			[Token(Token = "0x6002661")]
			[Address(RVA = "0x13866F8", Offset = "0x13866F8", VA = "0x13866F8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0x13867D0", Offset = "0x13867D0", VA = "0x13867D0", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002663")]
		[Address(RVA = "0x13868E8", Offset = "0x13868E8", VA = "0x13868E8")]
		public GetRandomClosePoint()
		{
		}
	}
	[Token(Token = "0x2000439")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE353C", Offset = "0xEE353C")]
	public class GetRandomPointInList : ActionTask
	{
		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<List<GameObject>> inputList;

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<GameObject> result;

		[Token(Token = "0x170003A7")]
		protected override string info
		{
			[Token(Token = "0x6002664")]
			[Address(RVA = "0x13868F0", Offset = "0x13868F0", VA = "0x13868F0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002665")]
		[Address(RVA = "0x13869C8", Offset = "0x13869C8", VA = "0x13869C8", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0x1386B00", Offset = "0x1386B00", VA = "0x1386B00")]
		public GetRandomPointInList()
		{
		}
	}
	[Token(Token = "0x200043A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3574", Offset = "0xEE3574")]
	public class GetLaserLookAtPoint : ActionTask
	{
		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<Transform> result;

		[Token(Token = "0x170003A8")]
		protected override string info
		{
			[Token(Token = "0x6002667")]
			[Address(RVA = "0x138626C", Offset = "0x138626C", VA = "0x138626C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002668")]
		[Address(RVA = "0x1386344", Offset = "0x1386344", VA = "0x1386344", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002669")]
		[Address(RVA = "0x1386498", Offset = "0x1386498", VA = "0x1386498")]
		public GetLaserLookAtPoint()
		{
		}
	}
	[Token(Token = "0x200043B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE35AC", Offset = "0xEE35AC")]
	public class GetRangeRealValue : ActionTask<Transform>
	{
		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> ratio;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> oldValue;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<float> resultValue;

		[Token(Token = "0x170003A9")]
		protected override string info
		{
			[Token(Token = "0x600266A")]
			[Address(RVA = "0x1386B08", Offset = "0x1386B08", VA = "0x1386B08", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0x1386BE0", Offset = "0x1386BE0", VA = "0x1386BE0", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0x1386C88", Offset = "0x1386C88", VA = "0x1386C88")]
		public GetRangeRealValue()
		{
		}
	}
	[Token(Token = "0x200043C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE35E4", Offset = "0xEE35E4")]
	public class GetRealBulletOffsetDisntance : ActionTask<Transform>
	{
		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<float> BulletV;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> MovePanV;

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> MaxDistance;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<Vector3> beginPoint;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<GameObject> endPoint;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BBParameter<Vector3> orignalDir;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[BlackboardOnly]
		public BBParameter<Vector3> resultDirOffset;

		[Token(Token = "0x170003AA")]
		protected override string info
		{
			[Token(Token = "0x600266D")]
			[Address(RVA = "0x1386CD8", Offset = "0x1386CD8", VA = "0x1386CD8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600266E")]
		[Address(RVA = "0x1386DB0", Offset = "0x1386DB0", VA = "0x1386DB0", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0x1386FA0", Offset = "0x1386FA0", VA = "0x1386FA0")]
		public GetRealBulletOffsetDisntance()
		{
		}
	}
	[Token(Token = "0x200043D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE361C", Offset = "0xEE361C")]
	public class GetTwoPointDirection : ActionTask<Transform>
	{
		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> begin;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Vector3> end;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[BlackboardOnly]
		public BBParameter<Vector3> result;

		[Token(Token = "0x170003AB")]
		protected override string info
		{
			[Token(Token = "0x6002670")]
			[Address(RVA = "0x1386FF0", Offset = "0x1386FF0", VA = "0x1386FF0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002671")]
		[Address(RVA = "0x13870C8", Offset = "0x13870C8", VA = "0x13870C8", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0x1387234", Offset = "0x1387234", VA = "0x1387234")]
		public GetTwoPointDirection()
		{
		}
	}
	[Token(Token = "0x200043E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3654", Offset = "0xEE3654")]
	public class GetTwoPointLimitRatioDisntance : ActionTask<Transform>
	{
		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<AnimationCurve> RatioCurve;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> baseDis;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> maxDistance;

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<Vector3> beginPoint;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<GameObject> endPoint;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[BlackboardOnly]
		public BBParameter<float> resultDis;

		[Token(Token = "0x170003AC")]
		protected override string info
		{
			[Token(Token = "0x6002673")]
			[Address(RVA = "0x1387284", Offset = "0x1387284", VA = "0x1387284", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002674")]
		[Address(RVA = "0x138735C", Offset = "0x138735C", VA = "0x138735C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0x1387514", Offset = "0x1387514", VA = "0x1387514")]
		public GetTwoPointLimitRatioDisntance()
		{
		}
	}
	[Token(Token = "0x200043F")]
	[AttributeAttribute(Name = "NameAttribute", RVA = "0xEE368C", Offset = "0xEE368C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE368C", Offset = "0xEE368C")]
	public class RotateTorwardToLocalRotation : ActionTask<Transform>
	{
		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "RequiredFieldAttribute", RVA = "0xEEAED8", Offset = "0xEEAED8")]
		public BBParameter<Transform> target;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> speed;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xEEAEE8", Offset = "0xEEAEE8")]
		public BBParameter<float> angleDifference;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<Vector3> upVector;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool waitActionFinish;

		[Token(Token = "0x6002676")]
		[Address(RVA = "0x1387824", Offset = "0x1387824", VA = "0x1387824", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x6002677")]
		[Address(RVA = "0x1387AF8", Offset = "0x1387AF8", VA = "0x1387AF8")]
		public RotateTorwardToLocalRotation()
		{
		}
	}
}
namespace PVE.Tasks.Actions
{
	[Token(Token = "0x2000440")]
	public enum e_Direction_Type
	{
		[Token(Token = "0x4001C40")]
		Forward,
		[Token(Token = "0x4001C41")]
		Back,
		[Token(Token = "0x4001C42")]
		Right,
		[Token(Token = "0x4001C43")]
		Left
	}
	[Token(Token = "0x2000441")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE36F0", Offset = "0xEE36F0")]
	public class Avoid : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<GameObject> enemy;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<List<GameObject>> shelterList;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<float> speed;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float keepDistance;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 pointToMove;

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 lastEnemyPostion;

		[Token(Token = "0x6002678")]
		[Address(RVA = "0x1390550", Offset = "0x1390550", VA = "0x1390550")]
		private void CalculatePointToMove()
		{
		}

		[Token(Token = "0x6002679")]
		[Address(RVA = "0x1390B98", Offset = "0x1390B98", VA = "0x1390B98", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600267A")]
		[Address(RVA = "0x1390AF0", Offset = "0x1390AF0", VA = "0x1390AF0")]
		private float GetDot(Vector3 _lhs, Vector3 _rhs)
		{
			return default(float);
		}

		[Token(Token = "0x600267B")]
		[Address(RVA = "0x1390D14", Offset = "0x1390D14", VA = "0x1390D14", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x600267C")]
		[Address(RVA = "0x1390E4C", Offset = "0x1390E4C", VA = "0x1390E4C", Slot = "14")]
		protected override void OnStop()
		{
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0x1390EE0", Offset = "0x1390EE0", VA = "0x1390EE0", Slot = "15")]
		protected override void OnPause()
		{
		}

		[Token(Token = "0x600267E")]
		[Address(RVA = "0x1390EF0", Offset = "0x1390EF0", VA = "0x1390EF0", Slot = "10")]
		public override void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600267F")]
		[Address(RVA = "0x1390F00", Offset = "0x1390F00", VA = "0x1390F00")]
		public Avoid()
		{
		}
	}
	[Token(Token = "0x2000442")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3728", Offset = "0xEE3728")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3728", Offset = "0xEE3728")]
	public class FindMovePoint : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> pointToMove;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<int> radius;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 bornPos;

		[Token(Token = "0x170003AD")]
		protected override string info
		{
			[Token(Token = "0x6002681")]
			[Address(RVA = "0x1390FFC", Offset = "0x1390FFC", VA = "0x1390FFC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002680")]
		[Address(RVA = "0x1390F80", Offset = "0x1390F80", VA = "0x1390F80", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x6002682")]
		[Address(RVA = "0x1391050", Offset = "0x1391050", VA = "0x1391050", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002683")]
		[Address(RVA = "0x1391148", Offset = "0x1391148", VA = "0x1391148")]
		private Vector3 FindNextMovePoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002684")]
		[Address(RVA = "0x1391344", Offset = "0x1391344", VA = "0x1391344")]
		public FindMovePoint()
		{
		}
	}
	[Token(Token = "0x2000443")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3788", Offset = "0xEE3788")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3788", Offset = "0xEE3788")]
	public class FindRandomMovePoint : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> pointToMove;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> pathMaxDis;

		[Token(Token = "0x170003AE")]
		protected override string info
		{
			[Token(Token = "0x6002685")]
			[Address(RVA = "0x13913B8", Offset = "0x13913B8", VA = "0x13913B8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002686")]
		[Address(RVA = "0x139140C", Offset = "0x139140C", VA = "0x139140C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002687")]
		[Address(RVA = "0x13914F0", Offset = "0x13914F0", VA = "0x13914F0")]
		private Vector3 RandomPoint(Vector3 center, float range)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002688")]
		[Address(RVA = "0x139167C", Offset = "0x139167C", VA = "0x139167C")]
		public FindRandomMovePoint()
		{
		}
	}
	[Token(Token = "0x2000444")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE37E8", Offset = "0xEE37E8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE37E8", Offset = "0xEE37E8")]
	public class FindSelfRandomPoint : ActionTask<Transform>
	{
		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<int> minRadius;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<int> maxRadius;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<Transform> RectTrn;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<Vector3> point;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<bool> isUseY;

		[Token(Token = "0x170003AF")]
		protected override string info
		{
			[Token(Token = "0x6002689")]
			[Address(RVA = "0x13916CC", Offset = "0x13916CC", VA = "0x13916CC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0x1391720", Offset = "0x1391720", VA = "0x1391720", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0x1391794", Offset = "0x1391794", VA = "0x1391794")]
		private Vector3 FindNextMovePoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0x1391C48", Offset = "0x1391C48", VA = "0x1391C48")]
		public FindSelfRandomPoint()
		{
		}
	}
	[Token(Token = "0x2000445")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3848", Offset = "0xEE3848")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3848", Offset = "0xEE3848")]
	public class FindSelfRangeRandomPoint : ActionTask<Transform>
	{
		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<int> minRadius;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<int> maxRadius;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<SpawnPointInfo> SpawnPointRectTrn;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<Vector3> point;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<bool> isUseY;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float totalV;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float[] everyV;

		[Token(Token = "0x170003B0")]
		protected override string info
		{
			[Token(Token = "0x600268D")]
			[Address(RVA = "0x1391CD8", Offset = "0x1391CD8", VA = "0x1391CD8", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600268E")]
		[Address(RVA = "0x1391D2C", Offset = "0x1391D2C", VA = "0x1391D2C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600268F")]
		[Address(RVA = "0x1391DA0", Offset = "0x1391DA0", VA = "0x1391DA0")]
		private Vector3 FindNextMovePoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002690")]
		[Address(RVA = "0x1392218", Offset = "0x1392218", VA = "0x1392218")]
		private Transform GetVolumeRatioPoint()
		{
			return null;
		}

		[Token(Token = "0x6002691")]
		[Address(RVA = "0x13924C0", Offset = "0x13924C0", VA = "0x13924C0")]
		public FindSelfRangeRandomPoint()
		{
		}
	}
	[Token(Token = "0x2000446")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE38A8", Offset = "0xEE38A8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE38A8", Offset = "0xEE38A8")]
	public class GetCloseEludePoint : ActionTask
	{
		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<WUnit> unit;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> Dis;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<EludePointCell> EPoint;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<bool> HavePoint;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BBParameter<eMonsterAttackType> AttackType;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BBParameter<eMonsterAttackDirType> AttackDirType;

		[Token(Token = "0x6002692")]
		[Address(RVA = "0x1392574", Offset = "0x1392574", VA = "0x1392574", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002693")]
		[Address(RVA = "0x139288C", Offset = "0x139288C", VA = "0x139288C")]
		public GetCloseEludePoint()
		{
		}
	}
	[Token(Token = "0x2000447")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3908", Offset = "0xEE3908")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3908", Offset = "0xEE3908")]
	public class ResetMonsterWarning : ActionTask
	{
		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<WUnit> attackerUnit;

		[Token(Token = "0x6002694")]
		[Address(RVA = "0x1392B60", Offset = "0x1392B60", VA = "0x1392B60", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002695")]
		[Address(RVA = "0x1392CCC", Offset = "0x1392CCC", VA = "0x1392CCC")]
		public ResetMonsterWarning()
		{
		}
	}
	[Token(Token = "0x2000448")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3968", Offset = "0xEE3968")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3968", Offset = "0xEE3968")]
	public class UseEludePoint : ActionTask
	{
		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<EludePointCell> EPointCell;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<WUnit> Owner;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<Vector3> point;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<GameObject> pointObj;

		[Token(Token = "0x6002696")]
		[Address(RVA = "0x1142EA8", Offset = "0x1142EA8", VA = "0x1142EA8", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0x1143024", Offset = "0x1143024", VA = "0x1143024")]
		public UseEludePoint()
		{
		}
	}
	[Token(Token = "0x2000449")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE39C8", Offset = "0xEE39C8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE39C8", Offset = "0xEE39C8")]
	public class PVERotateTowards : ActionTask<Transform>
	{
		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> upVector;

		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool alreadyRotate;

		[Token(Token = "0x6002698")]
		[Address(RVA = "0x1392894", Offset = "0x1392894", VA = "0x1392894", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0x1392AC8", Offset = "0x1392AC8", VA = "0x1392AC8")]
		public PVERotateTowards()
		{
		}
	}
	[Token(Token = "0x200044A")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3A28", Offset = "0xEE3A28")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3A28", Offset = "0xEE3A28")]
	public class SetBornPosition : ActionTask
	{
		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> bornPosition;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[BlackboardOnly]
		public BBParameter<WUnit> attackerUnit;

		[Token(Token = "0x170003B1")]
		protected override string info
		{
			[Token(Token = "0x600269A")]
			[Address(RVA = "0x1392CD4", Offset = "0x1392CD4", VA = "0x1392CD4", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600269B")]
		[Address(RVA = "0x1392D1C", Offset = "0x1392D1C", VA = "0x1392D1C", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x600269C")]
		[Address(RVA = "0x1392E0C", Offset = "0x1392E0C", VA = "0x1392E0C")]
		public SetBornPosition()
		{
		}
	}
	[Token(Token = "0x200044B")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3A88", Offset = "0xEE3A88")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3A88", Offset = "0xEE3A88")]
	public class SetDirection : ActionTask<NavMeshAgent>
	{
		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> directionV3;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Direction direction;

		[Token(Token = "0x170003B2")]
		protected override string info
		{
			[Token(Token = "0x600269E")]
			[Address(RVA = "0x114227C", Offset = "0x114227C", VA = "0x114227C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0x11421EC", Offset = "0x11421EC", VA = "0x11421EC", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x600269F")]
		[Address(RVA = "0x11422C4", Offset = "0x11422C4", VA = "0x11422C4", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0x1142310", Offset = "0x1142310", VA = "0x1142310")]
		private bool CalculatePath(Direction _dir, int _calculationTimes)
		{
			return default(bool);
		}

		[Token(Token = "0x60026A1")]
		[Address(RVA = "0x11426A8", Offset = "0x11426A8", VA = "0x11426A8")]
		private void DrawPathLine(NavMeshPath _path, Vector3[] _allWayPoints)
		{
		}

		[Token(Token = "0x60026A2")]
		[Address(RVA = "0x1142810", Offset = "0x1142810", VA = "0x1142810")]
		public SetDirection()
		{
		}
	}
	[Token(Token = "0x200044C")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3AE8", Offset = "0xEE3AE8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3AE8", Offset = "0xEE3AE8")]
	public class SetMonsterVisible : ActionTask<Transform>
	{
		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<bool> isVisible;

		[Token(Token = "0x170003B3")]
		protected override string info
		{
			[Token(Token = "0x60026A3")]
			[Address(RVA = "0x1142860", Offset = "0x1142860", VA = "0x1142860", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0x1142938", Offset = "0x1142938", VA = "0x1142938", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60026A5")]
		[Address(RVA = "0x1142A20", Offset = "0x1142A20", VA = "0x1142A20")]
		public SetMonsterVisible()
		{
		}
	}
	[Token(Token = "0x200044D")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3B48", Offset = "0xEE3B48")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3B48", Offset = "0xEE3B48")]
	public class ShowTeleportEffect : ActionTask<Transform>
	{
		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<Vector3> targetPoint;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<Quaternion> targetRot;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BBParameter<bool> isShow;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BBParameter<bool> isUntilFinish;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TeleportEffect teleport;

		[Token(Token = "0x170003B4")]
		protected override string info
		{
			[Token(Token = "0x60026A6")]
			[Address(RVA = "0x1142A70", Offset = "0x1142A70", VA = "0x1142A70", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0x1142B48", Offset = "0x1142B48", VA = "0x1142B48", Slot = "12")]
		protected override void OnExecute()
		{
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0x1142DB4", Offset = "0x1142DB4", VA = "0x1142DB4", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x1142E58", Offset = "0x1142E58", VA = "0x1142E58")]
		public ShowTeleportEffect()
		{
		}
	}
}
namespace PVE.Tasks.Conditions
{
	[Token(Token = "0x200044E")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3BA8", Offset = "0xEE3BA8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3BA8", Offset = "0xEE3BA8")]
	public class AlreadyMove : ConditionTask<Transform>
	{
		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float limitDistance;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 startAgainPos;

		[Token(Token = "0x170003B5")]
		protected override string info
		{
			[Token(Token = "0x60026AA")]
			[Address(RVA = "0x114302C", Offset = "0x114302C", VA = "0x114302C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0x1143154", Offset = "0x1143154", VA = "0x1143154", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0x11431D0", Offset = "0x11431D0", VA = "0x11431D0", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0x1143318", Offset = "0x1143318", VA = "0x1143318", Slot = "11")]
		public override void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0x11434B4", Offset = "0x11434B4", VA = "0x11434B4")]
		public AlreadyMove()
		{
		}
	}
	[Token(Token = "0x200044F")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3C08", Offset = "0xEE3C08")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3C08", Offset = "0xEE3C08")]
	public class CheckWarningActive : ConditionTask
	{
		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<WUnit> Owner;

		[Token(Token = "0x170003B6")]
		protected override string info
		{
			[Token(Token = "0x60026AF")]
			[Address(RVA = "0x1143AE0", Offset = "0x1143AE0", VA = "0x1143AE0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0x1143BB8", Offset = "0x1143BB8", VA = "0x1143BB8", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0x1143D1C", Offset = "0x1143D1C", VA = "0x1143D1C")]
		public CheckWarningActive()
		{
		}
	}
	[Token(Token = "0x2000450")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3C68", Offset = "0xEE3C68")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3C68", Offset = "0xEE3C68")]
	public class HoldGround : ConditionTask<Transform>
	{
		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<WUnit> attackerUnit;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float limitDistance;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float currentDistance;

		[Token(Token = "0x170003B7")]
		protected override string info
		{
			[Token(Token = "0x60026B2")]
			[Address(RVA = "0x1143FB0", Offset = "0x1143FB0", VA = "0x1143FB0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0x1144030", Offset = "0x1144030", VA = "0x1144030", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0x114415C", Offset = "0x114415C", VA = "0x114415C")]
		public HoldGround()
		{
		}
	}
	[Token(Token = "0x2000451")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3CC8", Offset = "0xEE3CC8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3CC8", Offset = "0xEE3CC8")]
	public class IsRoomMonsterActive : ConditionTask
	{
		[Token(Token = "0x170003B8")]
		protected override string info
		{
			[Token(Token = "0x60026B5")]
			[Address(RVA = "0x11441AC", Offset = "0x11441AC", VA = "0x11441AC", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0x1144284", Offset = "0x1144284", VA = "0x1144284", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0x11442FC", Offset = "0x11442FC", VA = "0x11442FC")]
		public IsRoomMonsterActive()
		{
		}
	}
	[Token(Token = "0x2000452")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3D28", Offset = "0xEE3D28")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3D28", Offset = "0xEE3D28")]
	public class JudgeBeHit : ConditionTask
	{
		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<WUnit> selfUnit;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<bool> isBeHit;

		[Token(Token = "0x170003B9")]
		protected override string info
		{
			[Token(Token = "0x60026B9")]
			[Address(RVA = "0x1144404", Offset = "0x1144404", VA = "0x1144404", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x1144304", Offset = "0x1144304", VA = "0x1144304", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x60026BA")]
		[Address(RVA = "0x11444B4", Offset = "0x11444B4", VA = "0x11444B4", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0x114450C", Offset = "0x114450C", VA = "0x114450C")]
		private void HitMessage(e_type_role _typeRole, WUnit _attacker, WUnit _hurter, HitResultData _hitData)
		{
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x1144628", Offset = "0x1144628", VA = "0x1144628")]
		public JudgeBeHit()
		{
		}
	}
	[Token(Token = "0x2000453")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3D88", Offset = "0xEE3D88")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3D88", Offset = "0xEE3D88")]
	public class JudgeHit : ConditionTask
	{
		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[BlackboardOnly]
		public BBParameter<WUnit> selfUnit;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<bool> isItHit;

		[Token(Token = "0x170003BA")]
		protected override string info
		{
			[Token(Token = "0x60026BE")]
			[Address(RVA = "0x1144730", Offset = "0x1144730", VA = "0x1144730", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026BD")]
		[Address(RVA = "0x1144630", Offset = "0x1144630", VA = "0x1144630", Slot = "9")]
		protected override string OnInit()
		{
			return null;
		}

		[Token(Token = "0x60026BF")]
		[Address(RVA = "0x11447E0", Offset = "0x11447E0", VA = "0x11447E0", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60026C0")]
		[Address(RVA = "0x1144838", Offset = "0x1144838", VA = "0x1144838")]
		private void HitMessage(e_type_role _typeRole, WUnit _attacker, WUnit _hurter, HitResultData _hitData)
		{
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x114495C", Offset = "0x114495C", VA = "0x114495C")]
		public JudgeHit()
		{
		}
	}
	[Token(Token = "0x2000454")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3DE8", Offset = "0xEE3DE8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3DE8", Offset = "0xEE3DE8")]
	public class CheckIsElude : ConditionTask
	{
		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<WUnit> Owner;

		[Token(Token = "0x170003BB")]
		protected override string info
		{
			[Token(Token = "0x60026C2")]
			[Address(RVA = "0x1143504", Offset = "0x1143504", VA = "0x1143504", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026C3")]
		[Address(RVA = "0x11435DC", Offset = "0x11435DC", VA = "0x11435DC", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60026C4")]
		[Address(RVA = "0x1143734", Offset = "0x1143734", VA = "0x1143734")]
		public CheckIsElude()
		{
		}
	}
	[Token(Token = "0x2000455")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3E48", Offset = "0xEE3E48")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3E48", Offset = "0xEE3E48")]
	public class CheckIsStandingMode : ConditionTask
	{
		[Token(Token = "0x170003BC")]
		protected override string info
		{
			[Token(Token = "0x60026C5")]
			[Address(RVA = "0x114373C", Offset = "0x114373C", VA = "0x114373C", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026C6")]
		[Address(RVA = "0x1143814", Offset = "0x1143814", VA = "0x1143814", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60026C7")]
		[Address(RVA = "0x114388C", Offset = "0x114388C", VA = "0x114388C")]
		public CheckIsStandingMode()
		{
		}
	}
	[Token(Token = "0x2000456")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3EA8", Offset = "0xEE3EA8")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3EA8", Offset = "0xEE3EA8")]
	public class CheckMonsterBeHit : ConditionTask
	{
		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<WUnit> Owner;

		[Token(Token = "0x170003BD")]
		protected override string info
		{
			[Token(Token = "0x60026C8")]
			[Address(RVA = "0x1143894", Offset = "0x1143894", VA = "0x1143894", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026C9")]
		[Address(RVA = "0x114396C", Offset = "0x114396C", VA = "0x114396C", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60026CA")]
		[Address(RVA = "0x1143AD8", Offset = "0x1143AD8", VA = "0x1143AD8")]
		public CheckMonsterBeHit()
		{
		}
	}
	[Token(Token = "0x2000457")]
	[AttributeAttribute(Name = "CategoryAttribute", RVA = "0xEE3F08", Offset = "0xEE3F08")]
	[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEE3F08", Offset = "0xEE3F08")]
	public class CheckWarningTime : ConditionTask
	{
		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BBParameter<WUnit> Owner;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BBParameter<float> warningTime;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public CompareMethod checkType;

		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "SliderFieldAttribute", RVA = "0xEEAF50", Offset = "0xEEAF50")]
		public float differenceThreshold;

		[Token(Token = "0x170003BE")]
		protected override string info
		{
			[Token(Token = "0x60026CB")]
			[Address(RVA = "0x1143D24", Offset = "0x1143D24", VA = "0x1143D24", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026CC")]
		[Address(RVA = "0x1143DFC", Offset = "0x1143DFC", VA = "0x1143DFC", Slot = "14")]
		protected override bool OnCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x60026CD")]
		[Address(RVA = "0x1143F9C", Offset = "0x1143F9C", VA = "0x1143F9C")]
		public CheckWarningTime()
		{
		}
	}
}
namespace ParagonAI
{
	[Token(Token = "0x2000458")]
	public class RotateToAimGunScript : MonoBehaviour
	{
		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform spineBone;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bulletSpawnTransform;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform targetTransform;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 targetTransformOffset;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool shouldDebug;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 maximumRotationAngles;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float rotationSpeed;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion spineRotationLastFrame;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 tempSpineLocalEulerAngles;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool isEnabled;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float minDistToAim;

		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Quaternion targetRot;

		[Token(Token = "0x170003BF")]
		private Vector3 targetTransformPos
		{
			[Token(Token = "0x60026CE")]
			[Address(RVA = "0x11535E0", Offset = "0x11535E0", VA = "0x11535E0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60026CF")]
		[Address(RVA = "0x1153710", Offset = "0x1153710", VA = "0x1153710")]
		private void Awake()
		{
		}

		[Token(Token = "0x60026D0")]
		[Address(RVA = "0x11537B8", Offset = "0x11537B8", VA = "0x11537B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60026D1")]
		[Address(RVA = "0x1153860", Offset = "0x1153860", VA = "0x1153860")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0x1153878", Offset = "0x1153878", VA = "0x1153878")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0x1153E8C", Offset = "0x1153E8C", VA = "0x1153E8C")]
		public void Activate()
		{
		}

		[Token(Token = "0x60026D4")]
		[Address(RVA = "0x1153870", Offset = "0x1153870", VA = "0x1153870")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x60026D5")]
		[Address(RVA = "0x1153ECC", Offset = "0x1153ECC", VA = "0x1153ECC")]
		public void SetTargetTransform(Transform x, Vector3 offset)
		{
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0x1153DF4", Offset = "0x1153DF4", VA = "0x1153DF4")]
		private float ClampEulerAngles(float r, float lim)
		{
			return default(float);
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0x1153F18", Offset = "0x1153F18", VA = "0x1153F18")]
		private float ResetIfTooHigh(float r, float lim)
		{
			return default(float);
		}

		[Token(Token = "0x60026D8")]
		[Address(RVA = "0x1153F58", Offset = "0x1153F58", VA = "0x1153F58")]
		public RotateToAimGunScript()
		{
		}
	}
}
namespace BoundarySystem_Ext
{
	[Token(Token = "0x2000459")]
	internal static class Pvr_BoundaryAPI
	{
		[Token(Token = "0x4001C8F")]
		private const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x60026D9")]
		[Address(RVA = "0x13D894C", Offset = "0x13D894C", VA = "0x13D894C")]
		public static extern void Pvr_StartSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x60026DA")]
		[Address(RVA = "0x13D89BC", Offset = "0x13D89BC", VA = "0x13D89BC")]
		public static extern void Pvr_ShutdownSDKBoundary();

		[PreserveSig]
		[Token(Token = "0x60026DB")]
		[Address(RVA = "0x13D8A2C", Offset = "0x13D8A2C", VA = "0x13D8A2C")]
		private static extern int Pvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x60026DC")]
		[Address(RVA = "0x13D8B10", Offset = "0x13D8B10", VA = "0x13D8B10")]
		private static extern IntPtr Pvr_GetCameraData_Ext();

		[PreserveSig]
		[Token(Token = "0x60026DD")]
		[Address(RVA = "0x13D8B84", Offset = "0x13D8B84", VA = "0x13D8B84")]
		public static extern void Pvr_ResetVrModebyForce();

		[PreserveSig]
		[Token(Token = "0x60026DE")]
		[Address(RVA = "0x13D8BF4", Offset = "0x13D8BF4", VA = "0x13D8BF4")]
		private static extern bool Pvr_ResumeBoundaryForSTS();

		[PreserveSig]
		[Token(Token = "0x60026DF")]
		[Address(RVA = "0x13D8C70", Offset = "0x13D8C70", VA = "0x13D8C70")]
		private static extern void Pvr_PauseBoundaryForSTS();

		[Token(Token = "0x60026E0")]
		[Address(RVA = "0x13D8CE0", Offset = "0x13D8CE0", VA = "0x13D8CE0")]
		public static int UPvr_GetMainSensorStateExt(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x60026E1")]
		[Address(RVA = "0x13D8CEC", Offset = "0x13D8CEC", VA = "0x13D8CEC")]
		public static IntPtr UPvr_GetCameraData_Ext()
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60026E2")]
		[Address(RVA = "0x13D8D28", Offset = "0x13D8D28", VA = "0x13D8D28")]
		public static bool UPvr_ResumeBoundaryForSTS()
		{
			return default(bool);
		}

		[Token(Token = "0x60026E3")]
		[Address(RVA = "0x13D8D2C", Offset = "0x13D8D2C", VA = "0x13D8D2C")]
		public static void UPvr_PauseBoundaryForSTS()
		{
		}

		[Token(Token = "0x60026E4")]
		public static IntPtr StructToIntPtr<T>(T info)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60026E5")]
		public static T IntPtrToStruct<T>(IntPtr info)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x200045A")]
	internal static class Pvr_SafeAreaAlgoAPI
	{
		[Token(Token = "0x2000651")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xEE520C", Offset = "0xEE520C")]
		public delegate void SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr);

		[Token(Token = "0x2000652")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xEE5220", Offset = "0xEE5220")]
		public delegate void SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr);

		[Token(Token = "0x2000653")]
		public struct GSAPoint3i
		{
			[Token(Token = "0x40022E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int x;

			[Token(Token = "0x40022EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int y;

			[Token(Token = "0x40022EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int z;
		}

		[Token(Token = "0x2000654")]
		public struct GSALine
		{
			[Token(Token = "0x40022EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr pointArray;

			[Token(Token = "0x40022ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int pointCount;
		}

		[Token(Token = "0x2000655")]
		public struct GSALineCollection
		{
			[Token(Token = "0x40022EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntPtr lineArray;

			[Token(Token = "0x40022EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int lineCount;
		}

		[Token(Token = "0x2000656")]
		public struct GSALegalData
		{
			[Token(Token = "0x40022F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int overMaxRange;

			[Token(Token = "0x40022F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int includeBigGrap;

			[Token(Token = "0x40022F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int bigGapNum;

			[Token(Token = "0x40022F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int centerOut;

			[Token(Token = "0x40022F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int removeNarrow;

			[Token(Token = "0x40022F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int overMaxRange_more;

			[Token(Token = "0x40022F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int validShrinkArea;
		}

		[Token(Token = "0x2000657")]
		public struct GSARect
		{
			[Token(Token = "0x40022F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GSAPoint3i leftup;

			[Token(Token = "0x40022F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GSAPoint3i leftdown;

			[Token(Token = "0x40022F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GSAPoint3i rightup;

			[Token(Token = "0x40022FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public GSAPoint3i rightdown;

			[Token(Token = "0x40022FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GSAPoint3i center;

			[Token(Token = "0x40022FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x40022FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x40022FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int isLegal;

			[Token(Token = "0x40022FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public GSALegalData legalData;
		}

		[Token(Token = "0x4001C90")]
		private const string LibFileName = "SafetyArea";

		[PreserveSig]
		[Token(Token = "0x60026E6")]
		[Address(RVA = "0x13D8FD8", Offset = "0x13D8FD8", VA = "0x13D8FD8")]
		private static extern int GSAInit(int width, int height);

		[PreserveSig]
		[Token(Token = "0x60026E7")]
		[Address(RVA = "0x13D9068", Offset = "0x13D9068", VA = "0x13D9068")]
		private static extern int GSAShutDown();

		[PreserveSig]
		[Token(Token = "0x60026E8")]
		[Address(RVA = "0x13D90DC", Offset = "0x13D90DC", VA = "0x13D90DC")]
		private static extern int GSASetCallback(SafeAreaCallback cb);

		[PreserveSig]
		[Token(Token = "0x60026E9")]
		[Address(RVA = "0x13D9160", Offset = "0x13D9160", VA = "0x13D9160")]
		private static extern int GSASetCallbackShrink(SafeAreaCallbackShrink cb);

		[PreserveSig]
		[Token(Token = "0x60026EA")]
		[Address(RVA = "0x13D91E4", Offset = "0x13D91E4", VA = "0x13D91E4")]
		private static extern int GSAUpDateData(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x60026EB")]
		[Address(RVA = "0x13D9264", Offset = "0x13D9264", VA = "0x13D9264")]
		private static extern int GSASetConfigFilePath(IntPtr configPath);

		[PreserveSig]
		[Token(Token = "0x60026EC")]
		[Address(RVA = "0x13D92E4", Offset = "0x13D92E4", VA = "0x13D92E4")]
		private static extern bool GSAGetClosedAreaUpdateFlag();

		[PreserveSig]
		[Token(Token = "0x60026ED")]
		[Address(RVA = "0x13D9360", Offset = "0x13D9360", VA = "0x13D9360")]
		private static extern int GSALoadSafetyArea(IntPtr lineCollectionPtr);

		[PreserveSig]
		[Token(Token = "0x60026EE")]
		[Address(RVA = "0x13D93E0", Offset = "0x13D93E0", VA = "0x13D93E0")]
		private static extern double GSABoundaryDetector(ref GSAPoint3i pointPtr);

		[PreserveSig]
		[Token(Token = "0x60026EF")]
		[Address(RVA = "0x13D9460", Offset = "0x13D9460", VA = "0x13D9460")]
		private static extern int GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x60026F0")]
		[Address(RVA = "0x13D94F0", Offset = "0x13D94F0", VA = "0x13D94F0")]
		private static extern double GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir);

		[Token(Token = "0x60026F1")]
		[Address(RVA = "0x13D9598", Offset = "0x13D9598", VA = "0x13D9598")]
		public static int Pvr_GSAInit(int width, int height)
		{
			return default(int);
		}

		[Token(Token = "0x60026F2")]
		[Address(RVA = "0x13D959C", Offset = "0x13D959C", VA = "0x13D959C")]
		public static int Pvr_GSASetCallback(SafeAreaCallback cb)
		{
			return default(int);
		}

		[Token(Token = "0x60026F3")]
		[Address(RVA = "0x13D95A0", Offset = "0x13D95A0", VA = "0x13D95A0")]
		public static int Pvr_GSASetCallbackShrink(SafeAreaCallbackShrink cb)
		{
			return default(int);
		}

		[Token(Token = "0x60026F4")]
		[Address(RVA = "0x13D95A4", Offset = "0x13D95A4", VA = "0x13D95A4")]
		public static int Pvr_GSAUpDateData(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x60026F5")]
		[Address(RVA = "0x13D95A8", Offset = "0x13D95A8", VA = "0x13D95A8")]
		public static bool Pvr_GSAGetClosedAreaUpdateFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x60026F6")]
		[Address(RVA = "0x13D95AC", Offset = "0x13D95AC", VA = "0x13D95AC")]
		public static int Pvr_GSASetConfigFilePath(string configPath)
		{
			return default(int);
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0x13D9634", Offset = "0x13D9634", VA = "0x13D9634")]
		public static int Pvr_GSALoadSafetyArea(IntPtr lineCollectionPtr)
		{
			return default(int);
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0x13D9638", Offset = "0x13D9638", VA = "0x13D9638")]
		public static double Pvr_GSABoundaryDetector(ref GSAPoint3i point)
		{
			return default(double);
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0x13D963C", Offset = "0x13D963C", VA = "0x13D963C")]
		public static int Pvr_GSAShutDown()
		{
			return default(int);
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0x13D9640", Offset = "0x13D9640", VA = "0x13D9640")]
		public static int Pvr_GSALoadSafetyArea2(IntPtr lineCollectionPtr, bool isPlayArea)
		{
			return default(int);
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0x13D9648", Offset = "0x13D9648", VA = "0x13D9648")]
		public static double Pvr_GSABoundaryDetector2(ref GSAPoint3i point, bool isPlayArea, ref GSAPoint3i closestPoint, ref GSAPoint3i normalDir)
		{
			return default(double);
		}
	}
	[Token(Token = "0x200045B")]
	public class Pvr_BoundarySystem
	{
		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_BoundarySystem instance;

		[Token(Token = "0x4001C92")]
		public const int CameraImageWidth = 1280;

		[Token(Token = "0x4001C93")]
		public const int CameraImageHeight = 400;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr CameraFramePtr;

		[Token(Token = "0x170003C0")]
		public static Pvr_BoundarySystem Instance
		{
			[Token(Token = "0x60026FC")]
			[Address(RVA = "0x13D8D30", Offset = "0x13D8D30", VA = "0x13D8D30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0x13D8E00", Offset = "0x13D8E00", VA = "0x13D8E00")]
		public void OpenBoundary()
		{
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0x13D8E04", Offset = "0x13D8E04", VA = "0x13D8E04")]
		public void CloseBoundary()
		{
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0x13D8E08", Offset = "0x13D8E08", VA = "0x13D8E08")]
		public void Reset6Dof()
		{
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0x13D8E0C", Offset = "0x13D8E0C", VA = "0x13D8E0C")]
		public float[] GetControllerFixedPoseData(int hand)
		{
			return null;
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0x13D8DB4", Offset = "0x13D8DB4", VA = "0x13D8DB4")]
		public Pvr_BoundarySystem()
		{
		}
	}
	[Token(Token = "0x200045C")]
	public class Pvr_SafeAreaAlgoModule
	{
		[Token(Token = "0x2000658")]
		public struct ExtraInfo
		{
			[Token(Token = "0x4002300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool overMaxRange;

			[Token(Token = "0x4002301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeBigGap;

			[Token(Token = "0x4002302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int bigGapNum;

			[Token(Token = "0x4002303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool centerOut;

			[Token(Token = "0x4002304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool removeNarrow;

			[Token(Token = "0x4002305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool overMaxRange_more;

			[Token(Token = "0x4002306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int validShrinkArea;
		}

		[Token(Token = "0x2000659")]
		public struct BoundaryPlayerArea
		{
			[Token(Token = "0x4002307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 lowerleft;

			[Token(Token = "0x4002308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 upperleft;

			[Token(Token = "0x4002309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 upperRight;

			[Token(Token = "0x400230A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 lowerRight;

			[Token(Token = "0x400230B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 center;

			[Token(Token = "0x400230C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public uint width;

			[Token(Token = "0x400230D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public uint height;

			[Token(Token = "0x400230E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool isLegal;

			[Token(Token = "0x400230F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public ExtraInfo extraInfo;
		}

		[Token(Token = "0x200065A")]
		public delegate void BoundarySystemCallback(BoundaryPlayerArea playAreaInfo, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x200065B")]
		public delegate void BoundarySystemCallbackShrink(List<Vector3> rectPoints, List<Vector3> boundaryPoints, List<List<Vector3>> unusedLines);

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pvr_SafeAreaAlgoModule instance;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BoundarySystemCallback boundarySystemCallback;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private BoundarySystemCallbackShrink boundarySystemCallbackShrink;

		[Token(Token = "0x170003C1")]
		public static Pvr_SafeAreaAlgoModule Instance
		{
			[Token(Token = "0x6002702")]
			[Address(RVA = "0x13DAA98", Offset = "0x13DAA98", VA = "0x13DAA98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0x13DAB28", Offset = "0x13DAB28", VA = "0x13DAB28")]
		public void RegisterCallBack(BoundarySystemCallback callback)
		{
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0x13DAB30", Offset = "0x13DAB30", VA = "0x13DAB30")]
		public void RegisterCallBackShrink(BoundarySystemCallbackShrink callback)
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0x13DAB38", Offset = "0x13DAB38", VA = "0x13DAB38")]
		public bool Start()
		{
			return default(bool);
		}

		[Token(Token = "0x6002706")]
		[Address(RVA = "0x13DAC80", Offset = "0x13DAC80", VA = "0x13DAC80")]
		public bool CommitNewLineData(bool isFistLine, Vector3[] points)
		{
			return default(bool);
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x13DAF00", Offset = "0x13DAF00", VA = "0x13DAF00")]
		public bool Shutdown()
		{
			return default(bool);
		}

		[Token(Token = "0x6002708")]
		[Address(RVA = "0x13DAF84", Offset = "0x13DAF84", VA = "0x13DAF84")]
		public double QueryDistanceOfPoint(Vector3 point)
		{
			return default(double);
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0x13DAFDC", Offset = "0x13DAFDC", VA = "0x13DAFDC")]
		public double QueryDistanceOfPoint(Vector3 point, bool isPlayArea, ref Vector3 closestPoint, ref Vector3 normalDir)
		{
			return default(double);
		}

		[Token(Token = "0x600270A")]
		[Address(RVA = "0x13D9CC8", Offset = "0x13D9CC8", VA = "0x13D9CC8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xEF19EC", Offset = "0xEF19EC")]
		private static void _SafeAreaCallback(IntPtr lineCollectionPtr, IntPtr safeAreaRectPtr)
		{
		}

		[Token(Token = "0x600270B")]
		[Address(RVA = "0x13DA3E0", Offset = "0x13DA3E0", VA = "0x13DA3E0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xEF1A50", Offset = "0xEF1A50")]
		private static void _SafeAreaCallbackShrink(IntPtr lineCollectionPtr, IntPtr safeAreaDetailRectPtr)
		{
		}

		[Token(Token = "0x600270C")]
		[Address(RVA = "0x13DAB20", Offset = "0x13DAB20", VA = "0x13DAB20")]
		public Pvr_SafeAreaAlgoModule()
		{
		}
	}
}
namespace Pvr_UnitySDKAPI
{
	[Token(Token = "0x200045D")]
	public class PvrControllerKey
	{
		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool State;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool PressedDown;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool PressedUp;

		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool LongPressed;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool Click;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool Touch;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool TouchDown;

		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool TouchUp;

		[Token(Token = "0x600270D")]
		[Address(RVA = "0x2063EBC", Offset = "0x2063EBC", VA = "0x2063EBC")]
		public PvrControllerKey()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class ControllerHand
	{
		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PvrControllerKey App;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PvrControllerKey Touch;

		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PvrControllerKey Home;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PvrControllerKey VolumeDown;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PvrControllerKey VolumeUp;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PvrControllerKey Trigger;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PvrControllerKey X;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PvrControllerKey Y;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public PvrControllerKey A;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public PvrControllerKey B;

		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PvrControllerKey Left;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PvrControllerKey Right;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public PvrControllerKey Thumbrest;

		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Vector2 TouchPadPosition;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int TriggerNum;

		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int GripValue;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Quaternion Rotation;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Vector3 Position;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public int Battery;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ControllerState ConnectState;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public SwipeDirection SwipeDirection;

		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TouchPadClick TouchPadClick;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool isShowBoundary;

		[Token(Token = "0x600270E")]
		[Address(RVA = "0x2063C38", Offset = "0x2063C38", VA = "0x2063C38")]
		public ControllerHand()
		{
		}
	}
	[Token(Token = "0x200045F")]
	public enum ControllerState
	{
		[Token(Token = "0x4001CB8")]
		Error = -1,
		[Token(Token = "0x4001CB9")]
		DisConnected,
		[Token(Token = "0x4001CBA")]
		Connected
	}
	[Token(Token = "0x2000460")]
	public enum Pvr_KeyCode
	{
		[Token(Token = "0x4001CBC")]
		APP = 1,
		[Token(Token = "0x4001CBD")]
		TOUCHPAD,
		[Token(Token = "0x4001CBE")]
		HOME,
		[Token(Token = "0x4001CBF")]
		VOLUMEUP,
		[Token(Token = "0x4001CC0")]
		VOLUMEDOWN,
		[Token(Token = "0x4001CC1")]
		TRIGGER,
		[Token(Token = "0x4001CC2")]
		A,
		[Token(Token = "0x4001CC3")]
		B,
		[Token(Token = "0x4001CC4")]
		X,
		[Token(Token = "0x4001CC5")]
		Y,
		[Token(Token = "0x4001CC6")]
		Left,
		[Token(Token = "0x4001CC7")]
		Right,
		[Token(Token = "0x4001CC8")]
		Thumbrest
	}
	[Token(Token = "0x2000461")]
	public enum SwipeDirection
	{
		[Token(Token = "0x4001CCA")]
		No,
		[Token(Token = "0x4001CCB")]
		SwipeUp,
		[Token(Token = "0x4001CCC")]
		SwipeDown,
		[Token(Token = "0x4001CCD")]
		SwipeLeft,
		[Token(Token = "0x4001CCE")]
		SwipeRight
	}
	[Token(Token = "0x2000462")]
	public enum TouchPadClick
	{
		[Token(Token = "0x4001CD0")]
		No,
		[Token(Token = "0x4001CD1")]
		ClickUp,
		[Token(Token = "0x4001CD2")]
		ClickDown,
		[Token(Token = "0x4001CD3")]
		ClickLeft,
		[Token(Token = "0x4001CD4")]
		ClickRight
	}
	[Token(Token = "0x2000463")]
	public struct Controller
	{
		[Token(Token = "0x4001CD5")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x600270F")]
		[Address(RVA = "0x205F414", Offset = "0x205F414", VA = "0x205F414")]
		public static Vector2 UPvr_GetTouchPadPosition(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002710")]
		[Address(RVA = "0x205F510", Offset = "0x205F510", VA = "0x205F510")]
		public static float UPvr_GetAxis1D(int hand, Pvr_KeyCode key)
		{
			return default(float);
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0x205F694", Offset = "0x205F694", VA = "0x205F694")]
		public static Vector2 UPvr_GetAxis2D(int hand)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002712")]
		[Address(RVA = "0x205F8C4", Offset = "0x205F8C4", VA = "0x205F8C4")]
		public static ControllerState UPvr_GetControllerState(int hand)
		{
			return default(ControllerState);
		}

		[Token(Token = "0x6002713")]
		[Address(RVA = "0x205F9C8", Offset = "0x205F9C8", VA = "0x205F9C8")]
		public static Quaternion UPvr_GetControllerQUA(int hand)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002714")]
		[Address(RVA = "0x205FAE0", Offset = "0x205FAE0", VA = "0x205FAE0")]
		public static Vector3 UPvr_GetControllerPOS(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002715")]
		[Address(RVA = "0x205FBF4", Offset = "0x205FBF4", VA = "0x205FBF4")]
		public static int UPvr_GetControllerTriggerValue(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6002716")]
		[Address(RVA = "0x205FCC4", Offset = "0x205FCC4", VA = "0x205FCC4")]
		public static int UPvr_GetControllerPower(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0x205FD94", Offset = "0x205FD94", VA = "0x205FD94")]
		public static SwipeDirection UPvr_GetSwipeDirection(int hand)
		{
			return default(SwipeDirection);
		}

		[Token(Token = "0x6002718")]
		[Address(RVA = "0x205FE64", Offset = "0x205FE64", VA = "0x205FE64")]
		public static TouchPadClick UPvr_GetTouchPadClick(int hand)
		{
			return default(TouchPadClick);
		}

		[Token(Token = "0x6002719")]
		[Address(RVA = "0x205FF34", Offset = "0x205FF34", VA = "0x205FF34")]
		public static bool UPvr_GetKey(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600271A")]
		[Address(RVA = "0x2060480", Offset = "0x2060480", VA = "0x2060480")]
		public static bool UPvr_GetKeyDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600271B")]
		[Address(RVA = "0x20609CC", Offset = "0x20609CC", VA = "0x20609CC")]
		public static bool UPvr_GetKeyUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600271C")]
		[Address(RVA = "0x2060F18", Offset = "0x2060F18", VA = "0x2060F18")]
		public static bool UPvr_GetTouch(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0x206125C", Offset = "0x206125C", VA = "0x206125C")]
		public static bool UPvr_GetTouchDown(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0x20615A0", Offset = "0x20615A0", VA = "0x20615A0")]
		public static bool UPvr_GetTouchUp(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x600271F")]
		[Address(RVA = "0x20618E4", Offset = "0x20618E4", VA = "0x20618E4")]
		public static bool UPvr_GetKeyClick(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002720")]
		[Address(RVA = "0x2061E30", Offset = "0x2061E30", VA = "0x2061E30")]
		public static bool UPvr_GetKeyLongPressed(int hand, Pvr_KeyCode key)
		{
			return default(bool);
		}

		[Token(Token = "0x6002721")]
		[Address(RVA = "0x206237C", Offset = "0x206237C", VA = "0x206237C")]
		public static bool UPvr_IsTouching(int hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6002722")]
		[Address(RVA = "0x2062548", Offset = "0x2062548", VA = "0x2062548")]
		public static void UPvr_SetHandNess(Pvr_Controller.UserHandNess hand)
		{
		}

		[Token(Token = "0x6002723")]
		[Address(RVA = "0x2062608", Offset = "0x2062608", VA = "0x2062608")]
		public static Pvr_Controller.UserHandNess UPvr_GetHandNess()
		{
			return default(Pvr_Controller.UserHandNess);
		}

		[Token(Token = "0x6002724")]
		[Address(RVA = "0x206267C", Offset = "0x206267C", VA = "0x206267C")]
		public static int UPvr_GetPreferenceDevice()
		{
			return default(int);
		}

		[Token(Token = "0x6002725")]
		[Address(RVA = "0x2062738", Offset = "0x2062738", VA = "0x2062738")]
		public static bool UPvr_IsEnbleTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6002726")]
		[Address(RVA = "0x20627AC", Offset = "0x20627AC", VA = "0x20627AC")]
		public static int UPvr_GetDeviceType()
		{
			return default(int);
		}

		[Token(Token = "0x6002727")]
		[Address(RVA = "0x2062820", Offset = "0x2062820", VA = "0x2062820")]
		public static int UPvr_GetMainHandNess()
		{
			return default(int);
		}

		[Token(Token = "0x6002728")]
		[Address(RVA = "0x2062894", Offset = "0x2062894", VA = "0x2062894")]
		public static void UPvr_SetMainHandNess(int hand)
		{
		}

		[Token(Token = "0x6002729")]
		[Address(RVA = "0x2062910", Offset = "0x2062910", VA = "0x2062910")]
		public static int UPvr_GetControllerAbility(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x600272A")]
		[Address(RVA = "0x206298C", Offset = "0x206298C", VA = "0x206298C")]
		public static void UPvr_VibrateNeo2Controller(float strength, int time, int hand)
		{
		}

		[Token(Token = "0x600272B")]
		[Address(RVA = "0x2062A28", Offset = "0x2062A28", VA = "0x2062A28")]
		public static int UPvr_GetControllerBindingState(int hand)
		{
			return default(int);
		}

		[Token(Token = "0x600272C")]
		[Address(RVA = "0x2062AA4", Offset = "0x2062AA4", VA = "0x2062AA4")]
		public static Vector3 UPvr_GetVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600272D")]
		[Address(RVA = "0x2062B20", Offset = "0x2062B20", VA = "0x2062B20")]
		public static Vector3 UPvr_GetAngularVelocity(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600272E")]
		[Address(RVA = "0x2062B9C", Offset = "0x2062B9C", VA = "0x2062B9C")]
		public static Vector3 UPvr_GetAcceleration(int hand)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600272F")]
		[Address(RVA = "0x2062C18", Offset = "0x2062C18", VA = "0x2062C18")]
		public static void UPvr_ScanController()
		{
		}

		[Token(Token = "0x6002730")]
		[Address(RVA = "0x2062C8C", Offset = "0x2062C8C", VA = "0x2062C8C")]
		public static void UPvr_StopScanController()
		{
		}

		[Token(Token = "0x6002731")]
		[Address(RVA = "0x2062D00", Offset = "0x2062D00", VA = "0x2062D00")]
		public static void UPvr_ConnectController(string mac)
		{
		}

		[Token(Token = "0x6002732")]
		[Address(RVA = "0x2062DD0", Offset = "0x2062DD0", VA = "0x2062DD0")]
		public static void UPvr_DisConnectController()
		{
		}

		[Token(Token = "0x6002733")]
		[Address(RVA = "0x2062E44", Offset = "0x2062E44", VA = "0x2062E44")]
		public static void UPvr_ResetController(int hand)
		{
		}

		[Token(Token = "0x6002734")]
		[Address(RVA = "0x2062EC0", Offset = "0x2062EC0", VA = "0x2062EC0")]
		public static string UPvr_GetControllerVersion()
		{
			return null;
		}

		[Token(Token = "0x6002735")]
		[Address(RVA = "0x2062F34", Offset = "0x2062F34", VA = "0x2062F34")]
		public static void UPvr_GetDeviceVersion(int deviceType)
		{
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0x2062FB0", Offset = "0x2062FB0", VA = "0x2062FB0")]
		public static void UPvr_GetControllerSnCode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6002737")]
		[Address(RVA = "0x206302C", Offset = "0x206302C", VA = "0x206302C")]
		public static void UPvr_SetControllerUnbind(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0x20630A8", Offset = "0x20630A8", VA = "0x20630A8")]
		public static void UPvr_SetStationRestart()
		{
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0x206311C", Offset = "0x206311C", VA = "0x206311C")]
		public static void UPvr_StartStationOtaUpdate()
		{
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0x2063190", Offset = "0x2063190", VA = "0x2063190")]
		public static void UPvr_StartControllerOtaUpdate(int mode, int controllerSerialNum)
		{
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0x206321C", Offset = "0x206321C", VA = "0x206321C")]
		public static void UPvr_EnterPairMode(int controllerSerialNum)
		{
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0x2063298", Offset = "0x2063298", VA = "0x2063298")]
		public static void UPvr_SetControllerShutdown(int controllerSerialNum)
		{
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0x2063314", Offset = "0x2063314", VA = "0x2063314")]
		public static int UPvr_GetStationPairState()
		{
			return default(int);
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0x2063388", Offset = "0x2063388", VA = "0x2063388")]
		public static int UPvr_GetStationOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0x20633FC", Offset = "0x20633FC", VA = "0x20633FC")]
		public static int UPvr_GetControllerOtaUpdateProgress()
		{
			return default(int);
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0x2063470", Offset = "0x2063470", VA = "0x2063470")]
		public static void UPvr_GetControllerVersionAndSN(int controllerSerialNum)
		{
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0x20634EC", Offset = "0x20634EC", VA = "0x20634EC")]
		public static void UPvr_GetControllerUniqueID()
		{
		}

		[Token(Token = "0x6002742")]
		[Address(RVA = "0x104D6C0", Offset = "0x104D6C0", VA = "0x104D6C0")]
		public void UPvr_InterruptStationPairMode()
		{
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0x104D6C4", Offset = "0x104D6C4", VA = "0x104D6C4")]
		public void UPvr_StartCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6002744")]
		[Address(RVA = "0x104D6C8", Offset = "0x104D6C8", VA = "0x104D6C8")]
		public void UPvr_StopCV2PairingMode(int deviceType)
		{
		}

		[Token(Token = "0x6002745")]
		[Address(RVA = "0x20636CC", Offset = "0x20636CC", VA = "0x20636CC")]
		public static void UPvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle)
		{
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0x2063788", Offset = "0x2063788", VA = "0x2063788")]
		public static void UPvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] controllerPrimary)
		{
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0x206383C", Offset = "0x206383C", VA = "0x206383C")]
		public static void UPvr_GetPointerPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6002748")]
		[Address(RVA = "0x20638E0", Offset = "0x20638E0", VA = "0x20638E0")]
		public static void UPvr_GetElbowPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0x2063980", Offset = "0x2063980", VA = "0x2063980")]
		public static void UPvr_GetWristPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0x2063A20", Offset = "0x2063A20", VA = "0x2063A20")]
		public static void UPvr_GetShoulderPose(float[] rotation, float[] position)
		{
		}

		[Token(Token = "0x600274B")]
		[Address(RVA = "0x2063AC4", Offset = "0x2063AC4", VA = "0x2063AC4")]
		public static void UPvr_IsEnbleHomeKey(bool state)
		{
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0x2063B40", Offset = "0x2063B40", VA = "0x2063B40")]
		public static void UPvr_SwitchHomeKey(bool state)
		{
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0x2063BBC", Offset = "0x2063BBC", VA = "0x2063BBC")]
		public static int UPvr_GetControllerSensorStatus(int id)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600274E")]
		[Address(RVA = "0x206378C", Offset = "0x206378C", VA = "0x206378C")]
		private static extern void Pvr_CalcArmModelParameters(float[] headOrientation, float[] controllerOrientation, float[] gyro);

		[PreserveSig]
		[Token(Token = "0x600274F")]
		[Address(RVA = "0x2063840", Offset = "0x2063840", VA = "0x2063840")]
		private static extern void Pvr_GetPointerPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6002750")]
		[Address(RVA = "0x20638E4", Offset = "0x20638E4", VA = "0x20638E4")]
		private static extern void Pvr_GetElbowPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6002751")]
		[Address(RVA = "0x2063984", Offset = "0x2063984", VA = "0x2063984")]
		private static extern void Pvr_GetWristPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6002752")]
		[Address(RVA = "0x2063A24", Offset = "0x2063A24", VA = "0x2063A24")]
		private static extern void Pvr_GetShoulderPose(float[] rotation, float[] position);

		[PreserveSig]
		[Token(Token = "0x6002753")]
		[Address(RVA = "0x20636D0", Offset = "0x20636D0", VA = "0x20636D0")]
		private static extern void Pvr_SetArmModelParameters(int hand, int gazeType, float elbowHeight, float elbowDepth, float pointerTiltAngle);
	}
	[Token(Token = "0x2000464")]
	public enum ControllerVariety
	{
		[Token(Token = "0x4001CD7")]
		Controller0,
		[Token(Token = "0x4001CD8")]
		Controller1
	}
	[Token(Token = "0x2000465")]
	public enum ControllerDevice
	{
		[Token(Token = "0x4001CDA")]
		Goblin,
		[Token(Token = "0x4001CDB")]
		Neo,
		[Token(Token = "0x4001CDC")]
		G2,
		[Token(Token = "0x4001CDD")]
		Neo2,
		[Token(Token = "0x4001CDE")]
		Neo3,
		[Token(Token = "0x4001CDF")]
		NewController
	}
	[Token(Token = "0x2000466")]
	public enum PBS_SystemInfoEnum
	{
		[Token(Token = "0x4001CE1")]
		ELECTRIC_QUANTITY,
		[Token(Token = "0x4001CE2")]
		PUI_VERSION,
		[Token(Token = "0x4001CE3")]
		EQUIPMENT_MODEL,
		[Token(Token = "0x4001CE4")]
		EQUIPMENT_SN,
		[Token(Token = "0x4001CE5")]
		CUSTOMER_SN,
		[Token(Token = "0x4001CE6")]
		INTERNAL_STORAGE_SPACE_OF_THE_DEVICE,
		[Token(Token = "0x4001CE7")]
		DEVICE_BLUETOOTH_STATUS,
		[Token(Token = "0x4001CE8")]
		BLUETOOTH_NAME_CONNECTED,
		[Token(Token = "0x4001CE9")]
		BLUETOOTH_MAC_ADDRESS,
		[Token(Token = "0x4001CEA")]
		DEVICE_WIFI_STATUS,
		[Token(Token = "0x4001CEB")]
		WIFI_NAME_CONNECTED,
		[Token(Token = "0x4001CEC")]
		WLAN_MAC_ADDRESS,
		[Token(Token = "0x4001CED")]
		DEVICE_IP
	}
	[Token(Token = "0x2000467")]
	public enum PBS_DeviceControlEnum
	{
		[Token(Token = "0x4001CEF")]
		DEVICE_CONTROL_REBOOT,
		[Token(Token = "0x4001CF0")]
		DEVICE_CONTROL_SHUTDOWN
	}
	[Token(Token = "0x2000468")]
	public enum PBS_PackageControlEnum
	{
		[Token(Token = "0x4001CF2")]
		PACKAGE_SILENCE_INSTALL,
		[Token(Token = "0x4001CF3")]
		PACKAGE_SILENCE_UNINSTALL
	}
	[Token(Token = "0x2000469")]
	public enum PBS_SwitchEnum
	{
		[Token(Token = "0x4001CF5")]
		S_ON,
		[Token(Token = "0x4001CF6")]
		S_OFF
	}
	[Token(Token = "0x200046A")]
	public enum PBS_HomeEventEnum
	{
		[Token(Token = "0x4001CF8")]
		SINGLE_CLICK,
		[Token(Token = "0x4001CF9")]
		DOUBLE_CLICK,
		[Token(Token = "0x4001CFA")]
		LONG_PRESS
	}
	[Token(Token = "0x200046B")]
	public enum PBS_HomeFunctionEnum
	{
		[Token(Token = "0x4001CFC")]
		VALUE_HOME_GO_TO_SETTING,
		[Token(Token = "0x4001CFD")]
		VALUE_HOME_BACK,
		[Token(Token = "0x4001CFE")]
		VALUE_HOME_RECENTER,
		[Token(Token = "0x4001CFF")]
		VALUE_HOME_OPEN_APP,
		[Token(Token = "0x4001D00")]
		VALUE_HOME_DISABLE,
		[Token(Token = "0x4001D01")]
		VALUE_HOME_GO_TO_HOME,
		[Token(Token = "0x4001D02")]
		VALUE_HOME_SEND_BROADCAST,
		[Token(Token = "0x4001D03")]
		VALUE_HOME_CLEAN_MEMORY
	}
	[Token(Token = "0x200046C")]
	public enum PBS_ScreenOffDelayTimeEnum
	{
		[Token(Token = "0x4001D05")]
		THREE = 3,
		[Token(Token = "0x4001D06")]
		TEN = 10,
		[Token(Token = "0x4001D07")]
		THIRTY = 30,
		[Token(Token = "0x4001D08")]
		SIXTY = 60,
		[Token(Token = "0x4001D09")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4001D0A")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4001D0B")]
		NEVER = -1
	}
	[Token(Token = "0x200046D")]
	public enum PBS_SleepDelayTimeEnum
	{
		[Token(Token = "0x4001D0D")]
		FIFTEEN = 15,
		[Token(Token = "0x4001D0E")]
		THIRTY = 30,
		[Token(Token = "0x4001D0F")]
		SIXTY = 60,
		[Token(Token = "0x4001D10")]
		THREE_HUNDRED = 300,
		[Token(Token = "0x4001D11")]
		SIX_HUNDRED = 600,
		[Token(Token = "0x4001D12")]
		ONE_THOUSAND_AND_EIGHT_HUNDRED = 1800,
		[Token(Token = "0x4001D13")]
		NEVER = -1
	}
	[Token(Token = "0x200046E")]
	public enum PBS_SystemFunctionSwitchEnum
	{
		[Token(Token = "0x4001D15")]
		SFS_USB,
		[Token(Token = "0x4001D16")]
		SFS_AUTOSLEEP,
		[Token(Token = "0x4001D17")]
		SFS_SCREENON_CHARGING,
		[Token(Token = "0x4001D18")]
		SFS_OTG_CHARGING,
		[Token(Token = "0x4001D19")]
		SFS_RETURN_MENU_IN_2DMODE,
		[Token(Token = "0x4001D1A")]
		SFS_COMBINATION_KEY,
		[Token(Token = "0x4001D1B")]
		SFS_CALIBRATION_WITH_POWER_ON,
		[Token(Token = "0x4001D1C")]
		SFS_SYSTEM_UPDATE,
		[Token(Token = "0x4001D1D")]
		SFS_CAST_SERVICE,
		[Token(Token = "0x4001D1E")]
		SFS_EYE_PROTECTION,
		[Token(Token = "0x4001D1F")]
		SFS_SECURITY_ZONE_PERMANENTLY,
		[Token(Token = "0x4001D20")]
		SFS_GLOBAL_CALIBRATION,
		[Token(Token = "0x4001D21")]
		SFS_Auto_Calibration,
		[Token(Token = "0x4001D22")]
		SFS_USB_BOOT
	}
	[Token(Token = "0x200046F")]
	public enum PBS_USBConfigModeEnum
	{
		[Token(Token = "0x4001D24")]
		MTP,
		[Token(Token = "0x4001D25")]
		CHARGE
	}
	[Token(Token = "0x2000470")]
	public struct ToBService
	{
		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<bool> BoolCallback;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<int> IntCallback;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<long> LongCallback;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass unityPlayer;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaObject currentActivity;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaObject tobHelper;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaClass tobHelperClass;

		[Token(Token = "0x6002754")]
		[Address(RVA = "0x206CBC0", Offset = "0x206CBC0", VA = "0x206CBC0")]
		public static void UPvr_InitToBService()
		{
		}

		[Token(Token = "0x6002755")]
		[Address(RVA = "0x206CD9C", Offset = "0x206CD9C", VA = "0x206CD9C")]
		public static void UPvr_SetUnityObjectName(string obj)
		{
		}

		[Token(Token = "0x6002756")]
		[Address(RVA = "0x206CE74", Offset = "0x206CE74", VA = "0x206CE74")]
		public static void UPvr_BindToBService()
		{
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0x206CF54", Offset = "0x206CF54", VA = "0x206CF54")]
		public static void UPvr_UnBindToBService()
		{
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0x206D034", Offset = "0x206D034", VA = "0x206D034")]
		private static AndroidJavaObject GetEnumType(Enum enumType)
		{
			return null;
		}

		[Token(Token = "0x6002759")]
		[Address(RVA = "0x206D130", Offset = "0x206D130", VA = "0x206D130")]
		public static string UPvr_StateGetDeviceInfo(PBS_SystemInfoEnum type)
		{
			return null;
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0x206D2A4", Offset = "0x206D2A4", VA = "0x206D2A4")]
		public static void UPvr_ControlSetDeviceAction(PBS_DeviceControlEnum deviceControl, Action<int> callback)
		{
		}

		[Token(Token = "0x600275B")]
		[Address(RVA = "0x206D3C4", Offset = "0x206D3C4", VA = "0x206D3C4")]
		public static void UPvr_ControlAPPManger(PBS_PackageControlEnum packageControl, string path, Action<int> callback)
		{
		}

		[Token(Token = "0x600275C")]
		[Address(RVA = "0x206D574", Offset = "0x206D574", VA = "0x206D574")]
		public static void UPvr_ControlSetAutoConnectWIFI(string ssid, string pwd, Action<bool> callback)
		{
		}

		[Token(Token = "0x600275D")]
		[Address(RVA = "0x206D704", Offset = "0x206D704", VA = "0x206D704")]
		public static void UPvr_ControlClearAutoConnectWIFI(Action<bool> callback)
		{
		}

		[Token(Token = "0x600275E")]
		[Address(RVA = "0x206D788", Offset = "0x206D788", VA = "0x206D788")]
		public static void UPvr_PropertySetHomeKey(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, Action<bool> callback)
		{
		}

		[Token(Token = "0x600275F")]
		[Address(RVA = "0x206D908", Offset = "0x206D908", VA = "0x206D908")]
		public static void UPvr_PropertySetHomeKeyAll(PBS_HomeEventEnum eventEnum, PBS_HomeFunctionEnum function, int timesetup, string pkg, string className, Action<bool> callback)
		{
		}

		[Token(Token = "0x6002760")]
		[Address(RVA = "0x206DB5C", Offset = "0x206DB5C", VA = "0x206DB5C")]
		public static void UPvr_PropertyDisablePowerKey(bool isSingleTap, bool enable, Action<int> callback)
		{
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0x206DCD0", Offset = "0x206DCD0", VA = "0x206DCD0")]
		public static void UPvr_PropertySetScreenOffDelay(PBS_ScreenOffDelayTimeEnum timeEnum, Action<int> callback)
		{
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0x206DDF0", Offset = "0x206DDF0", VA = "0x206DDF0")]
		public static void UPvr_PropertySetSleepDelay(PBS_SleepDelayTimeEnum timeEnum)
		{
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0x206DEEC", Offset = "0x206DEEC", VA = "0x206DEEC")]
		public static void UPvr_SwitchSystemFunction(PBS_SystemFunctionSwitchEnum systemFunction, PBS_SwitchEnum switchEnum)
		{
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0x206E098", Offset = "0x206E098", VA = "0x206E098")]
		public static void UPvr_SwitchSetUsbConfigurationOption(PBS_USBConfigModeEnum uSBConfigModeEnum)
		{
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0x206E1E4", Offset = "0x206E1E4", VA = "0x206E1E4")]
		public static void UPvr_ScreenOn()
		{
		}

		[Token(Token = "0x6002766")]
		[Address(RVA = "0x206E2D8", Offset = "0x206E2D8", VA = "0x206E2D8")]
		public static void UPvr_ScreenOff()
		{
		}

		[Token(Token = "0x6002767")]
		[Address(RVA = "0x206E3CC", Offset = "0x206E3CC", VA = "0x206E3CC")]
		public static void UPvr_AcquireWakeLock()
		{
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0x206E4C0", Offset = "0x206E4C0", VA = "0x206E4C0")]
		public static void UPvr_ReleaseWakeLock()
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x206E5B4", Offset = "0x206E5B4", VA = "0x206E5B4")]
		public static void UPvr_EnableEnterKey()
		{
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x206E6A8", Offset = "0x206E6A8", VA = "0x206E6A8")]
		public static void UPvr_DisableEnterKey()
		{
		}

		[Token(Token = "0x600276B")]
		[Address(RVA = "0x206E79C", Offset = "0x206E79C", VA = "0x206E79C")]
		public static void UPvr_EnableVolumeKey()
		{
		}

		[Token(Token = "0x600276C")]
		[Address(RVA = "0x206E890", Offset = "0x206E890", VA = "0x206E890")]
		public static void UPvr_DisableVolumeKey()
		{
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0x206E984", Offset = "0x206E984", VA = "0x206E984")]
		public static void UPvr_EnableBackKey()
		{
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0x206EA78", Offset = "0x206EA78", VA = "0x206EA78")]
		public static void UPvr_DisableBackKey()
		{
		}

		[Token(Token = "0x600276F")]
		[Address(RVA = "0x206EB6C", Offset = "0x206EB6C", VA = "0x206EB6C")]
		public static void UPvr_WriteConfigFileToDataLocal(string path, string content, Action<bool> callback)
		{
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0x206ECA0", Offset = "0x206ECA0", VA = "0x206ECA0")]
		public static void UPvr_ResetAllKeyToDefault(Action<bool> callback)
		{
		}
	}
	[Token(Token = "0x2000471")]
	public enum GlobalIntConfigs
	{
		[Token(Token = "0x4001D2E")]
		EYE_TEXTURE_RESOLUTION0,
		[Token(Token = "0x4001D2F")]
		EYE_TEXTURE_RESOLUTION1,
		[Token(Token = "0x4001D30")]
		SEENSOR_COUNT,
		[Token(Token = "0x4001D31")]
		ABILITY6DOF,
		[Token(Token = "0x4001D32")]
		PLATFORM_TYPE,
		[Token(Token = "0x4001D33")]
		TRACKING_MODE,
		[Token(Token = "0x4001D34")]
		LOG_LEVEL,
		[Token(Token = "0x4001D35")]
		ENBLE_HAND6DOF_BY_HEAD,
		[Token(Token = "0x4001D36")]
		ENBLE_6DOF_GLOBAL_TRACKING,
		[Token(Token = "0x4001D37")]
		TARGET_FRAME_RATE,
		[Token(Token = "0x4001D38")]
		iShowFPS,
		[Token(Token = "0x4001D39")]
		SensorMode,
		[Token(Token = "0x4001D3A")]
		LOGICFLOW,
		[Token(Token = "0x4001D3B")]
		EYE_TEXTURE_RES_HIGH,
		[Token(Token = "0x4001D3C")]
		EYE_TEXTURE_RES_NORMAL,
		[Token(Token = "0x4001D3D")]
		iCtrlModelLoadingPri,
		[Token(Token = "0x4001D3E")]
		iPhoneHMDModeEnabled,
		[Token(Token = "0x4001D3F")]
		isEnableBoundary,
		[Token(Token = "0x4001D40")]
		Enable_Activity_Rotation,
		[Token(Token = "0x4001D41")]
		GetDisplay_Orientation,
		[Token(Token = "0x4001D42")]
		GetWaitFrameNum,
		[Token(Token = "0x4001D43")]
		GetResetFrameNum,
		[Token(Token = "0x4001D44")]
		EnableFFRBYSYS,
		[Token(Token = "0x4001D45")]
		RotControllerMode
	}
	[Token(Token = "0x2000472")]
	public enum GlobalFloatConfigs
	{
		[Token(Token = "0x4001D47")]
		IPD,
		[Token(Token = "0x4001D48")]
		VFOV,
		[Token(Token = "0x4001D49")]
		HFOV,
		[Token(Token = "0x4001D4A")]
		NECK_MODEL_X,
		[Token(Token = "0x4001D4B")]
		NECK_MODEL_Y,
		[Token(Token = "0x4001D4C")]
		NECK_MODEL_Z,
		[Token(Token = "0x4001D4D")]
		DISPLAY_REFRESH_RATE
	}
	[Token(Token = "0x2000473")]
	public enum RenderTextureAntiAliasing
	{
		[Token(Token = "0x4001D4F")]
		X_1 = 1,
		[Token(Token = "0x4001D50")]
		X_2 = 2,
		[Token(Token = "0x4001D51")]
		X_4 = 4,
		[Token(Token = "0x4001D52")]
		X_8 = 8
	}
	[Token(Token = "0x2000474")]
	public enum PlatForm
	{
		[Token(Token = "0x4001D54")]
		Android = 1,
		[Token(Token = "0x4001D55")]
		IOS,
		[Token(Token = "0x4001D56")]
		Win,
		[Token(Token = "0x4001D57")]
		Notsupport
	}
	[Token(Token = "0x2000475")]
	public enum RenderTextureDepth
	{
		[Token(Token = "0x4001D59")]
		BD_0 = 0,
		[Token(Token = "0x4001D5A")]
		BD_16 = 16,
		[Token(Token = "0x4001D5B")]
		BD_24 = 24
	}
	[Token(Token = "0x2000476")]
	public enum RenderTextureLevel
	{
		[Token(Token = "0x4001D5D")]
		Normal,
		[Token(Token = "0x4001D5E")]
		High
	}
	[Token(Token = "0x2000477")]
	public enum Sensorindex
	{
		[Token(Token = "0x4001D60")]
		Default,
		[Token(Token = "0x4001D61")]
		FirstSensor,
		[Token(Token = "0x4001D62")]
		SecondSensor
	}
	[Token(Token = "0x2000478")]
	public enum Eye
	{
		[Token(Token = "0x4001D64")]
		LeftEye,
		[Token(Token = "0x4001D65")]
		RightEye,
		[Token(Token = "0x4001D66")]
		BothEye
	}
	[Token(Token = "0x2000479")]
	public enum ResUtilsType
	{
		[Token(Token = "0x4001D68")]
		TYPE_TEXTSIZE,
		[Token(Token = "0x4001D69")]
		TYPE_COLOR,
		[Token(Token = "0x4001D6A")]
		TYPE_TEXT,
		[Token(Token = "0x4001D6B")]
		TYPE_FONT,
		[Token(Token = "0x4001D6C")]
		TYPE_VALUE,
		[Token(Token = "0x4001D6D")]
		TYPE_DRAWABLE,
		[Token(Token = "0x4001D6E")]
		TYPE_OBJECT,
		[Token(Token = "0x4001D6F")]
		TYPR_OBJECTARRAY
	}
	[Token(Token = "0x200047A")]
	public enum TrackingOrigin
	{
		[Token(Token = "0x4001D71")]
		EyeLevel,
		[Token(Token = "0x4001D72")]
		FloorLevel,
		[Token(Token = "0x4001D73")]
		StageLevel
	}
	[Token(Token = "0x200047B")]
	public enum EFoveationLevel
	{
		[Token(Token = "0x4001D75")]
		Low,
		[Token(Token = "0x4001D76")]
		Med,
		[Token(Token = "0x4001D77")]
		High,
		[Token(Token = "0x4001D78")]
		Top_High
	}
	[Token(Token = "0x200047C")]
	public enum StereoRenderingPathPico
	{
		[Token(Token = "0x4001D7A")]
		MultiPass,
		[Token(Token = "0x4001D7B")]
		SinglePass
	}
	[Token(Token = "0x200047D")]
	public enum pvrEyePoseStatus
	{
		[Token(Token = "0x4001D7D")]
		kGazePointValid = 1,
		[Token(Token = "0x4001D7E")]
		kGazeVectorValid = 2,
		[Token(Token = "0x4001D7F")]
		kEyeOpennessValid = 4,
		[Token(Token = "0x4001D80")]
		kEyePupilDilationValid = 8,
		[Token(Token = "0x4001D81")]
		kEyePositionGuideValid = 0x10
	}
	[Token(Token = "0x200047E")]
	public enum TrackingMode
	{
		[Token(Token = "0x4001D83")]
		PVR_TRACKING_MODE_ROTATION = 1,
		[Token(Token = "0x4001D84")]
		PVR_TRACKING_MODE_POSITION = 2,
		[Token(Token = "0x4001D85")]
		PVR_TRACKING_MODE_EYE = 4
	}
	[Token(Token = "0x200047F")]
	public struct EyeTrackingData
	{
		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 leftEyeGazePoint;

		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rightEyeGazePoint;

		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 combinedEyeGazePoint;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 leftEyeGazeVector;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rightEyeGazeVector;

		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 combinedEyeGazeVector;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 leftEyePositionGuide;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 rightEyePositionGuide;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 foveatedGazeDirection;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int foveatedGazeTrackingState;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public byte[] reserved;
	}
	[Token(Token = "0x2000480")]
	public struct EyeTrackingGazeRay
	{
		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Direction;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool IsValid;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Origin;
	}
	[Token(Token = "0x2000481")]
	public struct EyeDeviceInfo
	{
		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ViewFrustum targetFrustumLeft;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ViewFrustum targetFrustumRight;
	}
	[Token(Token = "0x2000482")]
	public struct ViewFrustum
	{
		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float left;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float right;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float top;

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bottom;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float near;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float far;
	}
	[Token(Token = "0x2000483")]
	public struct EyeSetting
	{
		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform eyelocalPosition;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Rect eyeRect;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float eyeFov;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float eyeAspect;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Matrix4x4 eyeProjectionMatrix;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader eyeShader;
	}
	[Token(Token = "0x2000484")]
	public struct Sensor
	{
		[Token(Token = "0x4001DA9")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6002771")]
		[Address(RVA = "0x206678C", Offset = "0x206678C", VA = "0x206678C")]
		private static extern int Pvr_Enable6DofModule(bool enable);

		[PreserveSig]
		[Token(Token = "0x6002772")]
		[Address(RVA = "0x206680C", Offset = "0x206680C", VA = "0x206680C")]
		private static extern int Pvr_OptionalResetSensor(int index, int resetRot, int resetPos);

		[PreserveSig]
		[Token(Token = "0x6002773")]
		[Address(RVA = "0x20668A0", Offset = "0x20668A0", VA = "0x20668A0")]
		private static extern int Pvr_Init(int index);

		[PreserveSig]
		[Token(Token = "0x6002774")]
		[Address(RVA = "0x2066920", Offset = "0x2066920", VA = "0x2066920")]
		private static extern int Pvr_StartSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6002775")]
		[Address(RVA = "0x20669A0", Offset = "0x20669A0", VA = "0x20669A0")]
		private static extern int Pvr_StopSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6002776")]
		[Address(RVA = "0x2066A20", Offset = "0x2066A20", VA = "0x2066A20")]
		private static extern int Pvr_ResetSensor(int index);

		[PreserveSig]
		[Token(Token = "0x6002777")]
		[Address(RVA = "0x2066AA0", Offset = "0x2066AA0", VA = "0x2066AA0")]
		private static extern int Pvr_ResetSensorAll(int index);

		[PreserveSig]
		[Token(Token = "0x6002778")]
		[Address(RVA = "0x2066B20", Offset = "0x2066B20", VA = "0x2066B20")]
		private static extern int Pvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz);

		[PreserveSig]
		[Token(Token = "0x6002779")]
		[Address(RVA = "0x2066BF8", Offset = "0x2066BF8", VA = "0x2066BF8")]
		private static extern int Pvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber);

		[PreserveSig]
		[Token(Token = "0x600277A")]
		[Address(RVA = "0x2066CDC", Offset = "0x2066CDC", VA = "0x2066CDC")]
		private static extern int Pvr_GetPsensorState();

		[PreserveSig]
		[Token(Token = "0x600277B")]
		[Address(RVA = "0x2066D50", Offset = "0x2066D50", VA = "0x2066D50")]
		private static extern int Pvr_GetHmdPSensorStatus();

		[PreserveSig]
		[Token(Token = "0x600277C")]
		[Address(RVA = "0x2066DC4", Offset = "0x2066DC4", VA = "0x2066DC4")]
		private static extern int Pvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x600277D")]
		[Address(RVA = "0x2066E6C", Offset = "0x2066E6C", VA = "0x2066E6C")]
		private static extern int Pvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z);

		[PreserveSig]
		[Token(Token = "0x600277E")]
		[Address(RVA = "0x2066F14", Offset = "0x2066F14", VA = "0x2066F14")]
		private static extern int Pvr_Get6DofSensorQualityStatus();

		[PreserveSig]
		[Token(Token = "0x600277F")]
		[Address(RVA = "0x2066F88", Offset = "0x2066F88", VA = "0x2066F88")]
		private static extern bool Pvr_Get6DofSafePanelFlag();

		[PreserveSig]
		[Token(Token = "0x6002780")]
		[Address(RVA = "0x2067004", Offset = "0x2067004", VA = "0x2067004")]
		private static extern void Pvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key);

		[PreserveSig]
		[Token(Token = "0x6002781")]
		[Address(RVA = "0x20670F4", Offset = "0x20670F4", VA = "0x20670F4")]
		private static extern bool Pvr_SetTrackingOriginType(TrackingOrigin trackingOriginType);

		[Token(Token = "0x6002782")]
		[Address(RVA = "0x206717C", Offset = "0x206717C", VA = "0x206717C")]
		public static bool UPvr_Pvr_Get6DofSafePanelFlag()
		{
			return default(bool);
		}

		[Token(Token = "0x6002783")]
		[Address(RVA = "0x2067180", Offset = "0x2067180", VA = "0x2067180")]
		public static int UPvr_Init(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6002784")]
		[Address(RVA = "0x2067184", Offset = "0x2067184", VA = "0x2067184")]
		public static void UPvr_InitPsensor()
		{
		}

		[Token(Token = "0x6002785")]
		[Address(RVA = "0x2067378", Offset = "0x2067378", VA = "0x2067378")]
		public static int UPvr_GetPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6002786")]
		[Address(RVA = "0x20675D4", Offset = "0x20675D4", VA = "0x20675D4")]
		public static int UPvr_GetPSensorStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6002787")]
		[Address(RVA = "0x20675D8", Offset = "0x20675D8", VA = "0x20675D8")]
		public static void UPvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6002788")]
		[Address(RVA = "0x20677D0", Offset = "0x20677D0", VA = "0x20677D0")]
		public static int UPvr_StartSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6002789")]
		[Address(RVA = "0x20677D4", Offset = "0x20677D4", VA = "0x20677D4")]
		public static int UPvr_StopSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600278A")]
		[Address(RVA = "0x20677D8", Offset = "0x20677D8", VA = "0x20677D8")]
		public static int UPvr_ResetSensor(int index)
		{
			return default(int);
		}

		[Token(Token = "0x600278B")]
		[Address(RVA = "0x2067854", Offset = "0x2067854", VA = "0x2067854")]
		public static int UPvr_OptionalResetSensor(int index, int resetRot, int resetPos)
		{
			return default(int);
		}

		[Token(Token = "0x600278C")]
		[Address(RVA = "0x2067858", Offset = "0x2067858", VA = "0x2067858")]
		public static int UPvr_GetSensorState(int index, ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz)
		{
			return default(int);
		}

		[Token(Token = "0x600278D")]
		[Address(RVA = "0x206785C", Offset = "0x206785C", VA = "0x206785C")]
		public static int UPvr_GetMainSensorState(ref float x, ref float y, ref float z, ref float w, ref float px, ref float py, ref float pz, ref float vfov, ref float hfov, ref int viewNumber)
		{
			return default(int);
		}

		[Token(Token = "0x600278E")]
		[Address(RVA = "0x2067868", Offset = "0x2067868", VA = "0x2067868")]
		public static int UPvr_GetSensorGyroscope(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x600278F")]
		[Address(RVA = "0x206786C", Offset = "0x206786C", VA = "0x206786C")]
		public static int UPvr_GetSensorMagnet(int index, ref float x, ref float y, ref float z)
		{
			return default(int);
		}

		[Token(Token = "0x6002790")]
		[Address(RVA = "0x2067870", Offset = "0x2067870", VA = "0x2067870")]
		public static int UPvr_Get6DofSensorQualityStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6002791")]
		[Address(RVA = "0x2067874", Offset = "0x2067874", VA = "0x2067874")]
		public static int UPvr_Enable6DofModule(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6002792")]
		[Address(RVA = "0x2067188", Offset = "0x2067188", VA = "0x2067188")]
		public static void Pvr_InitPsensor()
		{
		}

		[Token(Token = "0x6002793")]
		[Address(RVA = "0x2067AD4", Offset = "0x2067AD4", VA = "0x2067AD4")]
		public static bool Pvr_IsHead6dofReset()
		{
			return default(bool);
		}

		[Token(Token = "0x6002794")]
		[Address(RVA = "0x20673CC", Offset = "0x20673CC", VA = "0x20673CC")]
		public static int Pvr_GetAndroidPsensorState()
		{
			return default(int);
		}

		[Token(Token = "0x6002795")]
		[Address(RVA = "0x20675DC", Offset = "0x20675DC", VA = "0x20675DC")]
		public static void Pvr_UnregisterPsensor()
		{
		}

		[Token(Token = "0x6002796")]
		[Address(RVA = "0x2067D00", Offset = "0x2067D00", VA = "0x2067D00")]
		public static int UPvr_ResetSensorAll(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6002797")]
		[Address(RVA = "0x2067D04", Offset = "0x2067D04", VA = "0x2067D04")]
		public static void UPvr_SetReinPosition(float x, float y, float z, float w, float px, float py, float pz, int hand, bool valid, int key)
		{
		}

		[Token(Token = "0x6002798")]
		[Address(RVA = "0x2068198", Offset = "0x2068198", VA = "0x2068198")]
		public static bool UPvr_SetTrackingOriginType(TrackingOrigin trackingOriginType)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000485")]
	public struct Render
	{
		[Token(Token = "0x4001DAA")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x6002799")]
		[Address(RVA = "0x2064F48", Offset = "0x2064F48", VA = "0x2064F48")]
		private static extern void Pvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi);

		[PreserveSig]
		[Token(Token = "0x600279A")]
		[Address(RVA = "0x2065018", Offset = "0x2065018", VA = "0x2065018")]
		private static extern int Pvr_SetRatio(float midH, float midV);

		[PreserveSig]
		[Token(Token = "0x600279B")]
		[Address(RVA = "0x20650A4", Offset = "0x20650A4", VA = "0x20650A4")]
		private static extern int Pvr_SetPupillaryPoint(bool enable);

		[PreserveSig]
		[Token(Token = "0x600279C")]
		[Address(RVA = "0x2065124", Offset = "0x2065124", VA = "0x2065124")]
		private static extern IntPtr Pvr_GetSupportHMDTypes();

		[PreserveSig]
		[Token(Token = "0x600279D")]
		[Address(RVA = "0x2065198", Offset = "0x2065198", VA = "0x2065198")]
		private static extern void Pvr_SetCurrentHMDType(string type);

		[PreserveSig]
		[Token(Token = "0x600279E")]
		[Address(RVA = "0x2065228", Offset = "0x2065228", VA = "0x2065228")]
		private static extern int Pvr_GetIntConfig(int configsenum, ref int res);

		[PreserveSig]
		[Token(Token = "0x600279F")]
		[Address(RVA = "0x20652B4", Offset = "0x20652B4", VA = "0x20652B4")]
		private static extern int Pvr_GetFloatConfig(int configsenum, ref float res);

		[PreserveSig]
		[Token(Token = "0x60027A0")]
		[Address(RVA = "0x2065340", Offset = "0x2065340", VA = "0x2065340")]
		private static extern void Pvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x60027A1")]
		[Address(RVA = "0x2065408", Offset = "0x2065408", VA = "0x2065408")]
		private static extern void Pvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight);

		[PreserveSig]
		[Token(Token = "0x60027A2")]
		[Address(RVA = "0x20654E8", Offset = "0x20654E8", VA = "0x20654E8")]
		private static extern void Pvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, float[] mvMatrix, float[] modelS, float[] modelR, float[] modelT, float[] cameraR, float[] cameraT, float[] colorScaleAndOffset);

		[PreserveSig]
		[Token(Token = "0x60027A3")]
		[Address(RVA = "0x2065624", Offset = "0x2065624", VA = "0x2065624")]
		private static extern bool Pvr_EnableFoveation(bool enable);

		[PreserveSig]
		[Token(Token = "0x60027A4")]
		[Address(RVA = "0x20656AC", Offset = "0x20656AC", VA = "0x20656AC")]
		private static extern void Pvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x60027A5")]
		[Address(RVA = "0x2065784", Offset = "0x2065784", VA = "0x2065784")]
		private static extern void Pvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY);

		[PreserveSig]
		[Token(Token = "0x60027A6")]
		[Address(RVA = "0x206582C", Offset = "0x206582C", VA = "0x206582C")]
		private static extern void Pvr_SetFoveationParameters2(float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum);

		[PreserveSig]
		[Token(Token = "0x60027A7")]
		[Address(RVA = "0x20658D0", Offset = "0x20658D0", VA = "0x20658D0")]
		private static extern void Pvr_SetFoveationLevel(EFoveationLevel level);

		[PreserveSig]
		[Token(Token = "0x60027A8")]
		[Address(RVA = "0x2065950", Offset = "0x2065950", VA = "0x2065950")]
		private static extern EFoveationLevel Pvr_GetFoveationLevel();

		[PreserveSig]
		[Token(Token = "0x60027A9")]
		[Address(RVA = "0x20659C4", Offset = "0x20659C4", VA = "0x20659C4")]
		private static extern bool Pvr_GetIntSysProc(string property, ref int res);

		[PreserveSig]
		[Token(Token = "0x60027AA")]
		[Address(RVA = "0x2065A70", Offset = "0x2065A70", VA = "0x2065A70")]
		private static extern void Pvr_SetColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x60027AB")]
		[Address(RVA = "0x2065AF0", Offset = "0x2065AF0", VA = "0x2065AF0")]
		private static extern void Pvr_SetCastingColorspaceType(int colorspaceType);

		[PreserveSig]
		[Token(Token = "0x60027AC")]
		[Address(RVA = "0x2065B70", Offset = "0x2065B70", VA = "0x2065B70")]
		private static extern IntPtr Pvr_CreateLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x60027AD")]
		[Address(RVA = "0x2065C00", Offset = "0x2065C00", VA = "0x2065C00")]
		private static extern IntPtr Pvr_GetLayerAndroidSurface(int layerType, int layerIndex);

		[PreserveSig]
		[Token(Token = "0x60027AE")]
		[Address(RVA = "0x2065C90", Offset = "0x2065C90", VA = "0x2065C90")]
		private static extern void Pvr_SetMonoMode(bool openMono);

		[PreserveSig]
		[Token(Token = "0x60027AF")]
		[Address(RVA = "0x2065D10", Offset = "0x2065D10", VA = "0x2065D10")]
		private static extern void Pvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexData, ref IntPtr indexData);

		[Token(Token = "0x60027B0")]
		[Address(RVA = "0x2065DC0", Offset = "0x2065DC0", VA = "0x2065DC0")]
		public static void UPvr_ChangeScreenParameters(string model, int width, int height, double xppi, double yppi, double densityDpi)
		{
		}

		[Token(Token = "0x60027B1")]
		[Address(RVA = "0x2065DC4", Offset = "0x2065DC4", VA = "0x2065DC4")]
		public static int UPvr_SetRatio(float midH, float midV)
		{
			return default(int);
		}

		[Token(Token = "0x60027B2")]
		[Address(RVA = "0x2065DC8", Offset = "0x2065DC8", VA = "0x2065DC8")]
		public static void UPvr_EnableFoveation(bool enable)
		{
		}

		[Token(Token = "0x60027B3")]
		[Address(RVA = "0x2065E7C", Offset = "0x2065E7C", VA = "0x2065E7C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF1AB4", Offset = "0xEF1AB4")]
		public static void UPvr_SetFoveationParameters(int textureId, int previousId, float focalPointX, float focalPointY, float foveationGainX, float foveationGainY, float foveationArea, float foveationMinimum)
		{
		}

		[Token(Token = "0x60027B4")]
		[Address(RVA = "0x2065E80", Offset = "0x2065E80", VA = "0x2065E80")]
		public static void UPvr_SetFoveationResource(int textureId, int previousId, float focalPointX, float focalPointY)
		{
		}

		[Token(Token = "0x60027B5")]
		[Address(RVA = "0x2065E84", Offset = "0x2065E84", VA = "0x2065E84")]
		public static void SetFoveatedRenderingLevel(EFoveationLevel level)
		{
		}

		[Token(Token = "0x60027B6")]
		[Address(RVA = "0x2065F88", Offset = "0x2065F88", VA = "0x2065F88")]
		public static EFoveationLevel GetFoveatedRenderingLevel()
		{
			return default(EFoveationLevel);
		}

		[Token(Token = "0x60027B7")]
		[Address(RVA = "0x2065F8C", Offset = "0x2065F8C", VA = "0x2065F8C")]
		public static void SetFoveatedRenderingParameters(Vector2 ffrGainValue, float ffrAreaValue, float ffrMinimumValue)
		{
		}

		[Token(Token = "0x60027B8")]
		[Address(RVA = "0x20660C8", Offset = "0x20660C8", VA = "0x20660C8")]
		public static bool UPvr_GetIntSysProc(string property, ref int res)
		{
			return default(bool);
		}

		[Token(Token = "0x60027B9")]
		[Address(RVA = "0x20660CC", Offset = "0x20660CC", VA = "0x20660CC")]
		public static int UPvr_GetIntConfig(int configsenum, ref int res)
		{
			return default(int);
		}

		[Token(Token = "0x60027BA")]
		[Address(RVA = "0x20660D0", Offset = "0x20660D0", VA = "0x20660D0")]
		public static int UPvr_GetFloatConfig(int configsenum, ref float res)
		{
			return default(int);
		}

		[Token(Token = "0x60027BB")]
		[Address(RVA = "0x20660D4", Offset = "0x20660D4", VA = "0x20660D4")]
		public static string UPvr_GetSupportHMDTypes()
		{
			return null;
		}

		[Token(Token = "0x60027BC")]
		[Address(RVA = "0x2066160", Offset = "0x2066160", VA = "0x2066160")]
		public static void UPvr_SetCurrentHMDType(string type)
		{
		}

		[Token(Token = "0x60027BD")]
		[Address(RVA = "0x2066164", Offset = "0x2066164", VA = "0x2066164")]
		public static void UPvr_SetupLayerData(int layerIndex, int sideMask, int textureId, int textureType, int layerFlags, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x60027BE")]
		[Address(RVA = "0x20662A4", Offset = "0x20662A4", VA = "0x20662A4")]
		public static void UPvr_SetupLayerCoords(int layerIndex, int sideMask, float[] lowerLeft, float[] lowerRight, float[] upperLeft, float[] upperRight)
		{
		}

		[Token(Token = "0x60027BF")]
		[Address(RVA = "0x20662A8", Offset = "0x20662A8", VA = "0x20662A8")]
		public static void UPvr_SetOverlayModelViewMatrix(int overlayType, int overlayShape, int texId, int eyeSide, int layerIndex, bool isHeadLocked, int layerFlags, Matrix4x4 mvMatrix, Vector3 modelS, Quaternion modelR, Vector3 modelT, Quaternion cameraR, Vector3 cameraT, Vector4 colorScale, Vector4 colorOffset)
		{
		}

		[Token(Token = "0x60027C0")]
		[Address(RVA = "0x2066774", Offset = "0x2066774", VA = "0x2066774")]
		public static void UPvr_SetColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x60027C1")]
		[Address(RVA = "0x2066778", Offset = "0x2066778", VA = "0x2066778")]
		public static void UPvr_SetCastingColorspaceType(int colorspaceType)
		{
		}

		[Token(Token = "0x60027C2")]
		[Address(RVA = "0x206677C", Offset = "0x206677C", VA = "0x206677C")]
		public static IntPtr UPvr_CreateLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60027C3")]
		[Address(RVA = "0x2066780", Offset = "0x2066780", VA = "0x2066780")]
		public static IntPtr UPvr_GetLayerAndroidSurface(int layerType, int layerIndex)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60027C4")]
		[Address(RVA = "0x2066784", Offset = "0x2066784", VA = "0x2066784")]
		public static void UPvr_SetMonoMode(bool openMono)
		{
		}

		[Token(Token = "0x60027C5")]
		[Address(RVA = "0x2057390", Offset = "0x2057390", VA = "0x2057390")]
		public static void UPvr_GetStencilMesh(int eye, ref int vertexCount, ref int triangleCount, ref IntPtr vertexDataPtr, ref IntPtr indexDataPtr)
		{
		}
	}
	[Token(Token = "0x2000486")]
	public struct System
	{
		[Token(Token = "0x4001DAB")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4001DAC")]
		public const string UnitySDKVersion = "2.8.9.12";

		[PreserveSig]
		[Token(Token = "0x60027C6")]
		[Address(RVA = "0x206819C", Offset = "0x206819C", VA = "0x206819C")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x60027C7")]
		[Address(RVA = "0x206822C", Offset = "0x206822C", VA = "0x206822C")]
		private static extern IntPtr Pvr_GetSDKVersion();

		[PreserveSig]
		[Token(Token = "0x60027C8")]
		[Address(RVA = "0x20682A0", Offset = "0x20682A0", VA = "0x20682A0")]
		public static extern int Pvr_GetHmdHardwareVersion();

		[PreserveSig]
		[Token(Token = "0x60027C9")]
		[Address(RVA = "0x2068314", Offset = "0x2068314", VA = "0x2068314")]
		public static extern IntPtr Pvr_GetHmdFirmwareVersion();

		[PreserveSig]
		[Token(Token = "0x60027CA")]
		[Address(RVA = "0x2068388", Offset = "0x2068388", VA = "0x2068388")]
		public static extern IntPtr Pvr_GetHmdSerialNumber();

		[PreserveSig]
		[Token(Token = "0x60027CB")]
		[Address(RVA = "0x20683FC", Offset = "0x20683FC", VA = "0x20683FC")]
		public static extern int PVR_GetHmdBatteryStatus();

		[PreserveSig]
		[Token(Token = "0x60027CC")]
		[Address(RVA = "0x2068470", Offset = "0x2068470", VA = "0x2068470")]
		public static extern float PVR_GetHmdBatteryTemperature();

		[PreserveSig]
		[Token(Token = "0x60027CD")]
		[Address(RVA = "0x20684E0", Offset = "0x20684E0", VA = "0x20684E0")]
		public static extern int PVR_SetHmdAudioStatus(bool enable);

		[PreserveSig]
		[Token(Token = "0x60027CE")]
		[Address(RVA = "0x2068560", Offset = "0x2068560", VA = "0x2068560")]
		public static extern bool Pvr_GetEyeTrackingData(ref int leftEyePoseStatus, ref int rightEyePoseStatus, ref int combinedEyePoseStatus, ref float leftEyeGazePointX, ref float leftEyeGazePointY, ref float leftEyeGazePointZ, ref float rightEyeGazePointX, ref float rightEyeGazePointY, ref float rightEyeGazePointZ, ref float combinedEyeGazePointX, ref float combinedEyeGazePointY, ref float combinedEyeGazePointZ, ref float leftEyeGazeVectorX, ref float leftEyeGazeVectorY, ref float leftEyeGazeVectorZ, ref float rightEyeGazeVectorX, ref float rightEyeGazeVectorY, ref float rightEyeGazeVectorZ, ref float combinedEyeGazeVectorX, ref float combinedEyeGazeVectorY, ref float combinedEyeGazeVectorZ, ref float leftEyeOpenness, ref float rightEyeOpenness, ref float leftEyePupilDilation, ref float rightEyePupilDilation, ref float leftEyePositionGuideX, ref float leftEyePositionGuideY, ref float leftEyePositionGuideZ, ref float rightEyePositionGuideX, ref float rightEyePositionGuideY, ref float rightEyePositionGuideZ, ref float foveatedGazeDirectionX, ref float foveatedGazeDirectionY, ref float foveatedGazeDirectionZ, ref int foveatedGazeTrackingState);

		[PreserveSig]
		[Token(Token = "0x60027CF")]
		[Address(RVA = "0x2068750", Offset = "0x2068750", VA = "0x2068750")]
		public static extern bool Pvr_SetTrackingMode(int trackingMode);

		[PreserveSig]
		[Token(Token = "0x60027D0")]
		[Address(RVA = "0x20687D8", Offset = "0x20687D8", VA = "0x20687D8")]
		public static extern int Pvr_GetTrackingMode();

		[PreserveSig]
		[Token(Token = "0x60027D1")]
		[Address(RVA = "0x206884C", Offset = "0x206884C", VA = "0x206884C")]
		public static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x60027D2")]
		[Address(RVA = "0x20688C0", Offset = "0x20688C0", VA = "0x20688C0")]
		public static extern void UnityEventData(long data);

		[PreserveSig]
		[Token(Token = "0x60027D3")]
		[Address(RVA = "0x2068940", Offset = "0x2068940", VA = "0x2068940")]
		public static extern bool Pvr_EnableSinglePass(bool enable);

		[PreserveSig]
		[Token(Token = "0x60027D4")]
		[Address(RVA = "0x20689C8", Offset = "0x20689C8", VA = "0x20689C8")]
		public static extern void Pvr_SetAntiAliasing(int antiAliasing);

		[PreserveSig]
		[Token(Token = "0x60027D5")]
		[Address(RVA = "0x2068A48", Offset = "0x2068A48", VA = "0x2068A48")]
		public static extern void Pvr_SinglePassBeforeForwardOpaque();

		[PreserveSig]
		[Token(Token = "0x60027D6")]
		[Address(RVA = "0x2068AB8", Offset = "0x2068AB8", VA = "0x2068AB8")]
		public static extern void Pvr_SetCurrentRenderTexture(uint textureId);

		[PreserveSig]
		[Token(Token = "0x60027D7")]
		[Address(RVA = "0x2068B38", Offset = "0x2068B38", VA = "0x2068B38")]
		public static extern bool Pvr_SetSinglePassDepthBufferWidthHeight(int width, int height);

		[PreserveSig]
		[Token(Token = "0x60027D8")]
		[Address(RVA = "0x2068BD0", Offset = "0x2068BD0", VA = "0x2068BD0")]
		public static extern int PVR_setPerformanceLevels(int cpuLevel, int gpuLevel);

		[PreserveSig]
		[Token(Token = "0x60027D9")]
		[Address(RVA = "0x2068C60", Offset = "0x2068C60", VA = "0x2068C60")]
		public static extern bool Pvr_SetIPD(float distance);

		[PreserveSig]
		[Token(Token = "0x60027DA")]
		[Address(RVA = "0x2068CF0", Offset = "0x2068CF0", VA = "0x2068CF0")]
		public static extern float Pvr_GetIPD();

		[PreserveSig]
		[Token(Token = "0x60027DB")]
		[Address(RVA = "0x2068D60", Offset = "0x2068D60", VA = "0x2068D60")]
		public static extern bool Pvr_SetTrackingIPDEnabled(bool enable);

		[PreserveSig]
		[Token(Token = "0x60027DC")]
		[Address(RVA = "0x2068DE8", Offset = "0x2068DE8", VA = "0x2068DE8")]
		public static extern bool Pvr_GetTrackingIPDEnabled();

		[PreserveSig]
		[Token(Token = "0x60027DD")]
		[Address(RVA = "0x2068E64", Offset = "0x2068E64", VA = "0x2068E64")]
		public static extern bool Pvr_GetEyeTrackingAutoIPD(ref float autoIPD);

		[PreserveSig]
		[Token(Token = "0x60027DE")]
		[Address(RVA = "0x2064ED4", Offset = "0x2064ED4", VA = "0x2064ED4")]
		public static extern int PVR_GetHmdAudioStatus();

		[Token(Token = "0x60027DF")]
		public static bool UPvr_CallStaticMethod<T>(ref T result, AndroidJavaClass jclass, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60027E0")]
		[Address(RVA = "0x206787C", Offset = "0x206787C", VA = "0x206787C")]
		public static bool UPvr_CallStaticMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60027E1")]
		public static bool UPvr_CallMethod<T>(ref T result, AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60027E2")]
		[Address(RVA = "0x2068EEC", Offset = "0x2068EEC", VA = "0x2068EEC")]
		public static bool UPvr_CallMethod(AndroidJavaObject jobj, string name, params object[] args)
		{
			return default(bool);
		}

		[Token(Token = "0x60027E3")]
		[Address(RVA = "0x2069144", Offset = "0x2069144", VA = "0x2069144")]
		public static string UPvr_GetSDKVersion()
		{
			return null;
		}

		[Token(Token = "0x60027E4")]
		[Address(RVA = "0x20691D8", Offset = "0x20691D8", VA = "0x20691D8")]
		public static string UPvr_GetUnitySDKVersion()
		{
			return null;
		}

		[Token(Token = "0x60027E5")]
		[Address(RVA = "0x2069220", Offset = "0x2069220", VA = "0x2069220")]
		public static string UPvr_GetDeviceMode()
		{
			return null;
		}

		[Token(Token = "0x60027E6")]
		[Address(RVA = "0x2069228", Offset = "0x2069228", VA = "0x2069228")]
		public static string UPvr_GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x60027E7")]
		[Address(RVA = "0x20640CC", Offset = "0x20640CC", VA = "0x20640CC")]
		public static string UPvr_GetDeviceSN()
		{
			return null;
		}

		[Token(Token = "0x60027E8")]
		[Address(RVA = "0x2064508", Offset = "0x2064508", VA = "0x2064508")]
		public static AndroidJavaObject UPvr_GetCurrentActivity()
		{
			return null;
		}

		[Token(Token = "0x60027E9")]
		[Address(RVA = "0x2069230", Offset = "0x2069230", VA = "0x2069230")]
		public static bool UPvr_SetMonoPresentation()
		{
			return default(bool);
		}

		[Token(Token = "0x60027EA")]
		[Address(RVA = "0x2069318", Offset = "0x2069318", VA = "0x2069318")]
		public static bool UPvr_IsPresentationExisted()
		{
			return default(bool);
		}

		[Token(Token = "0x60027EB")]
		[Address(RVA = "0x2069424", Offset = "0x2069424", VA = "0x2069424")]
		public static bool UPvr_GetMainActivityPauseStatus()
		{
			return default(bool);
		}

		[Token(Token = "0x60027EC")]
		[Address(RVA = "0x2069530", Offset = "0x2069530", VA = "0x2069530")]
		public static void UPvr_Sleep()
		{
		}

		[Token(Token = "0x60027ED")]
		[Address(RVA = "0x206963C", Offset = "0x206963C", VA = "0x206963C")]
		public static bool UPvr_StartHomeKeyReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x60027EE")]
		[Address(RVA = "0x20698DC", Offset = "0x20698DC", VA = "0x20698DC")]
		public static bool UPvr_StopHomeKeyReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x60027EF")]
		[Address(RVA = "0x2069B28", Offset = "0x2069B28", VA = "0x2069B28")]
		public static void UPvr_StartVRModel()
		{
		}

		[Token(Token = "0x60027F0")]
		[Address(RVA = "0x2069C34", Offset = "0x2069C34", VA = "0x2069C34")]
		public static void UPvr_RemovePlatformLogo()
		{
		}

		[Token(Token = "0x60027F1")]
		[Address(RVA = "0x2069D40", Offset = "0x2069D40", VA = "0x2069D40")]
		public static void UPvr_ShowPlatformLogo()
		{
		}

		[Token(Token = "0x60027F2")]
		[Address(RVA = "0x2069E4C", Offset = "0x2069E4C", VA = "0x2069E4C")]
		public static bool UPvr_IsPicoActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x60027F3")]
		[Address(RVA = "0x2069F64", Offset = "0x2069F64", VA = "0x2069F64")]
		public static void UPvr_StopVRModel()
		{
		}

		[Token(Token = "0x60027F4")]
		[Address(RVA = "0x206A070", Offset = "0x206A070", VA = "0x206A070")]
		public static string UPvr_GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x60027F5")]
		[Address(RVA = "0x206A18C", Offset = "0x206A18C", VA = "0x206A18C")]
		public static bool UPvr_SetIPD(float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x60027F6")]
		[Address(RVA = "0x206A2A4", Offset = "0x206A2A4", VA = "0x206A2A4")]
		public static float UPvr_GetIPD()
		{
			return default(float);
		}

		[Token(Token = "0x60027F7")]
		[Address(RVA = "0x206A364", Offset = "0x206A364", VA = "0x206A364")]
		public static bool UPvr_SetTrackingIPDEnabled(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60027F8")]
		[Address(RVA = "0x206A36C", Offset = "0x206A36C", VA = "0x206A36C")]
		public static bool UPvr_GetTrackingIPDEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60027F9")]
		[Address(RVA = "0x206A370", Offset = "0x206A370", VA = "0x206A370")]
		public static bool UPvr_GetEyeTrackingAutoIPD(ref float autoipd)
		{
			return default(bool);
		}

		[Token(Token = "0x60027FA")]
		[Address(RVA = "0x205EF74", Offset = "0x205EF74", VA = "0x205EF74")]
		public static void UPvr_UnityEventData(long data)
		{
		}

		[Token(Token = "0x60027FB")]
		[Address(RVA = "0x206A374", Offset = "0x206A374", VA = "0x206A374")]
		public static long UPvr_GetEyeBufferData(int id)
		{
			return default(long);
		}

		[Token(Token = "0x60027FC")]
		[Address(RVA = "0x206A3F0", Offset = "0x206A3F0", VA = "0x206A3F0")]
		public static bool UPvr_checkDevice(string packagename)
		{
			return default(bool);
		}

		[Token(Token = "0x60027FD")]
		[Address(RVA = "0x206A538", Offset = "0x206A538", VA = "0x206A538")]
		public static int UPvr_GetHmdHardwareVersion()
		{
			return default(int);
		}

		[Token(Token = "0x60027FE")]
		[Address(RVA = "0x206A53C", Offset = "0x206A53C", VA = "0x206A53C")]
		public static string UPvr_GetHmdFirmwareVersion()
		{
			return null;
		}

		[Token(Token = "0x60027FF")]
		[Address(RVA = "0x206A5D0", Offset = "0x206A5D0", VA = "0x206A5D0")]
		public static string UPvr_GetHmdSerialNumber()
		{
			return null;
		}

		[Token(Token = "0x6002800")]
		[Address(RVA = "0x206A664", Offset = "0x206A664", VA = "0x206A664")]
		public static int UPvr_GetHmdBatteryStatus()
		{
			return default(int);
		}

		[Token(Token = "0x6002801")]
		[Address(RVA = "0x206A668", Offset = "0x206A668", VA = "0x206A668")]
		public static float UPvr_GetHmdBatteryTemperature()
		{
			return default(float);
		}

		[Token(Token = "0x6002802")]
		[Address(RVA = "0x206A66C", Offset = "0x206A66C", VA = "0x206A66C")]
		public static int UPvr_SetHmdAudioStatus(bool enable)
		{
			return default(int);
		}

		[Token(Token = "0x6002803")]
		[Address(RVA = "0x206A674", Offset = "0x206A674", VA = "0x206A674")]
		public static int UPvr_GetTrackingMode()
		{
			return default(int);
		}

		[Token(Token = "0x6002804")]
		[Address(RVA = "0x206A678", Offset = "0x206A678", VA = "0x206A678")]
		public static bool UPvr_setTrackingMode(int trackingMode)
		{
			return default(bool);
		}

		[Token(Token = "0x6002805")]
		[Address(RVA = "0x206A67C", Offset = "0x206A67C", VA = "0x206A67C")]
		public static bool UPvr_getEyeTrackingData(ref EyeTrackingData trackingData)
		{
			return default(bool);
		}

		[Token(Token = "0x6002806")]
		[Address(RVA = "0x206A8E8", Offset = "0x206A8E8", VA = "0x206A8E8")]
		public static bool UPvr_getEyeTrackingGazeRay(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6002807")]
		[Address(RVA = "0x206AB18", Offset = "0x206AB18", VA = "0x206AB18")]
		public static bool UPvr_getEyeTrackingGazeRayWorld(ref EyeTrackingGazeRay gazeRay)
		{
			return default(bool);
		}

		[Token(Token = "0x6002808")]
		[Address(RVA = "0x206ADF0", Offset = "0x206ADF0", VA = "0x206ADF0")]
		public static Vector3 UPvr_getEyeTrackingPos()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002809")]
		[Address(RVA = "0x206AF40", Offset = "0x206AF40", VA = "0x206AF40")]
		public static int UPvr_GetPhoneScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x600280A")]
		[Address(RVA = "0x206B050", Offset = "0x206B050", VA = "0x206B050")]
		public static void UPvr_SetPhoneScreenBrightness(int level)
		{
		}

		[Token(Token = "0x600280B")]
		[Address(RVA = "0x206B1A4", Offset = "0x206B1A4", VA = "0x206B1A4")]
		public static bool UPvr_IsPicoDefaultActivity()
		{
			return default(bool);
		}

		[Token(Token = "0x600280C")]
		[Address(RVA = "0x206B4C4", Offset = "0x206B4C4", VA = "0x206B4C4")]
		public static bool UPvr_EnableSinglePass(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x600280D")]
		[Address(RVA = "0x206B4CC", Offset = "0x206B4CC", VA = "0x206B4CC")]
		public static void UPvr_SetAntiAliasing(int antiAliasing)
		{
		}

		[Token(Token = "0x600280E")]
		[Address(RVA = "0x206B4D0", Offset = "0x206B4D0", VA = "0x206B4D0")]
		public static void UPvr_SinglePassBeforeForwardOpaque()
		{
		}

		[Token(Token = "0x600280F")]
		[Address(RVA = "0x206B4D4", Offset = "0x206B4D4", VA = "0x206B4D4")]
		public static void UPvr_SetCurrentRenderTexture(uint textureId)
		{
		}

		[Token(Token = "0x6002810")]
		[Address(RVA = "0x206B4D8", Offset = "0x206B4D8", VA = "0x206B4D8")]
		public static bool UPvr_SetSinglePassDepthBufferWidthHeight(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6002811")]
		[Address(RVA = "0x206B4DC", Offset = "0x206B4DC", VA = "0x206B4DC")]
		public static int UPVR_setPerformanceLevels(int cpuLevel, int gpuLevel)
		{
			return default(int);
		}

		[Token(Token = "0x6002812")]
		[Address(RVA = "0x206B4E0", Offset = "0x206B4E0", VA = "0x206B4E0")]
		public static int UPvr_GetColorRes(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6002813")]
		[Address(RVA = "0x206B6D0", Offset = "0x206B6D0", VA = "0x206B6D0")]
		public static int UPvr_GetConfigInt(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6002814")]
		[Address(RVA = "0x206B8C0", Offset = "0x206B8C0", VA = "0x206B8C0")]
		public static string UPvr_GetConfigString(string name)
		{
			return null;
		}

		[Token(Token = "0x6002815")]
		[Address(RVA = "0x206BAB8", Offset = "0x206BAB8", VA = "0x206BAB8")]
		public static string UPvr_GetDrawableLocation(string name)
		{
			return null;
		}

		[Token(Token = "0x6002816")]
		[Address(RVA = "0x206BCB0", Offset = "0x206BCB0", VA = "0x206BCB0")]
		public static int UPvr_GetTextSize(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6002817")]
		[Address(RVA = "0x206BEA0", Offset = "0x206BEA0", VA = "0x206BEA0")]
		public static string UPvr_GetLangString(string name)
		{
			return null;
		}

		[Token(Token = "0x6002818")]
		[Address(RVA = "0x206C098", Offset = "0x206C098", VA = "0x206C098")]
		public static string UPvr_GetStringValue(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x6002819")]
		[Address(RVA = "0x206C308", Offset = "0x206C308", VA = "0x206C308")]
		public static int UPvr_GetIntValue(string id, int type)
		{
			return default(int);
		}

		[Token(Token = "0x600281A")]
		[Address(RVA = "0x206C570", Offset = "0x206C570", VA = "0x206C570")]
		public static float UPvr_GetFloatValue(string id)
		{
			return default(float);
		}

		[Token(Token = "0x600281B")]
		[Address(RVA = "0x206C760", Offset = "0x206C760", VA = "0x206C760")]
		public static string UPvr_GetObjectOrArray(string id, int type)
		{
			return null;
		}

		[Token(Token = "0x600281C")]
		[Address(RVA = "0x206C9D0", Offset = "0x206C9D0", VA = "0x206C9D0")]
		public static int UPvr_GetCharSpace(string id)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000487")]
	public struct BoundarySystem
	{
		[Token(Token = "0x200065C")]
		public enum BoundaryType
		{
			[Token(Token = "0x4002311")]
			OuterBoundary,
			[Token(Token = "0x4002312")]
			PlayArea
		}

		[Token(Token = "0x200065D")]
		public struct BoundaryTestResult
		{
			[Token(Token = "0x4002313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsTriggering;

			[Token(Token = "0x4002314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float ClosestDistance;

			[Token(Token = "0x4002315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 ClosestPoint;

			[Token(Token = "0x4002316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 ClosestPointNormal;
		}

		[Token(Token = "0x200065E")]
		public enum BoundaryTrackingNode
		{
			[Token(Token = "0x4002318")]
			HandLeft,
			[Token(Token = "0x4002319")]
			HandRight,
			[Token(Token = "0x400231A")]
			Head
		}

		[Token(Token = "0x200065F")]
		public enum BoundaryTrackingState
		{
			[Token(Token = "0x400231C")]
			PVR_NOREASON,
			[Token(Token = "0x400231D")]
			PVRRELOCATION_IN_PROGRESS,
			[Token(Token = "0x400231E")]
			PVRLOW_FEATURE_COUNT_ERROR,
			[Token(Token = "0x400231F")]
			PVRLOW_LIGHT_ERROR,
			[Token(Token = "0x4002320")]
			PVRBRIGHT_LIGHT_ERROR,
			[Token(Token = "0x4002321")]
			PVRSTEREO_CAMERA_CALIBRATION_ERROR
		}

		[Token(Token = "0x4001DAD")]
		public const string LibFileName = "Pvr_UnitySDK";

		[PreserveSig]
		[Token(Token = "0x600281D")]
		[Address(RVA = "0x205DAC0", Offset = "0x205DAC0", VA = "0x205DAC0")]
		private static extern float Pvr_GetFloorHeight();

		[PreserveSig]
		[Token(Token = "0x600281E")]
		[Address(RVA = "0x205DB30", Offset = "0x205DB30", VA = "0x205DB30")]
		private static extern int Pvr_GetSeeThroughState();

		[PreserveSig]
		[Token(Token = "0x600281F")]
		[Address(RVA = "0x205DBA4", Offset = "0x205DBA4", VA = "0x205DBA4")]
		private static extern void Pvr_BoundarySetSTBackground(bool value);

		[PreserveSig]
		[Token(Token = "0x6002820")]
		[Address(RVA = "0x205DC24", Offset = "0x205DC24", VA = "0x205DC24")]
		private static extern int Pvr_GetTrackingState();

		[PreserveSig]
		[Token(Token = "0x6002821")]
		[Address(RVA = "0x205DC98", Offset = "0x205DC98", VA = "0x205DC98")]
		private static extern bool Pvr_GetFrameRateLimit();

		[PreserveSig]
		[Token(Token = "0x6002822")]
		[Address(RVA = "0x205DD14", Offset = "0x205DD14", VA = "0x205DD14")]
		private static extern bool Pvr_IsBoundaryEnable();

		[PreserveSig]
		[Token(Token = "0x6002823")]
		[Address(RVA = "0x205DD90", Offset = "0x205DD90", VA = "0x205DD90")]
		private static extern bool Pvr_BoundaryGetConfigured();

		[PreserveSig]
		[Token(Token = "0x6002824")]
		[Address(RVA = "0x205DE0C", Offset = "0x205DE0C", VA = "0x205DE0C")]
		private static extern bool Pvr_BoundaryTestNode(int node, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6002825")]
		[Address(RVA = "0x205DF10", Offset = "0x205DF10", VA = "0x205DF10")]
		private static extern bool Pvr_BoundaryTestPoint(float x, float y, float z, bool isPlayArea, ref bool isTriggering, ref float closestDistance, ref float px, ref float py, ref float pz, ref float nx, ref float ny, ref float nz);

		[PreserveSig]
		[Token(Token = "0x6002826")]
		[Address(RVA = "0x205E038", Offset = "0x205E038", VA = "0x205E038")]
		private static extern int Pvr_BoundaryGetGeometry(out IntPtr handle, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6002827")]
		[Address(RVA = "0x205E0C4", Offset = "0x205E0C4", VA = "0x205E0C4")]
		private static extern int Pvr_BoundaryGetDimensions(ref float x, ref float y, ref float z, bool isPlayArea);

		[PreserveSig]
		[Token(Token = "0x6002828")]
		[Address(RVA = "0x205E16C", Offset = "0x205E16C", VA = "0x205E16C")]
		private static extern bool Pvr_BoundaryGetEnabled();

		[PreserveSig]
		[Token(Token = "0x6002829")]
		[Address(RVA = "0x205E1E8", Offset = "0x205E1E8", VA = "0x205E1E8")]
		private static extern void Pvr_BoundarySetVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x600282A")]
		[Address(RVA = "0x205E268", Offset = "0x205E268", VA = "0x205E268")]
		private static extern bool Pvr_BoundaryGetVisible();

		[PreserveSig]
		[Token(Token = "0x600282B")]
		[Address(RVA = "0x205E2E4", Offset = "0x205E2E4", VA = "0x205E2E4")]
		private static extern bool Pvr_EnableLWRP(bool enable);

		[PreserveSig]
		[Token(Token = "0x600282C")]
		[Address(RVA = "0x205E36C", Offset = "0x205E36C", VA = "0x205E36C")]
		private static extern bool Pvr_SetViewportSize(int w, int h);

		[PreserveSig]
		[Token(Token = "0x600282D")]
		[Address(RVA = "0x205E404", Offset = "0x205E404", VA = "0x205E404")]
		private static extern void Pvr_BoundarySetSeeThroughVisible(bool value);

		[PreserveSig]
		[Token(Token = "0x600282E")]
		[Address(RVA = "0x205E484", Offset = "0x205E484", VA = "0x205E484")]
		private static extern void PVR_SetCameraImageRect(int width, int height);

		[PreserveSig]
		[Token(Token = "0x600282F")]
		[Address(RVA = "0x205E514", Offset = "0x205E514", VA = "0x205E514")]
		private static extern void Pvr_SetGuardianSystemDisable(bool value);

		[PreserveSig]
		[Token(Token = "0x6002830")]
		[Address(RVA = "0x205E594", Offset = "0x205E594", VA = "0x205E594")]
		private static extern int Pvr_GetDialogState();

		[Token(Token = "0x6002831")]
		[Address(RVA = "0x205E608", Offset = "0x205E608", VA = "0x205E608")]
		public static float UPvr_GetFloorHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6002832")]
		[Address(RVA = "0x205E60C", Offset = "0x205E60C", VA = "0x205E60C")]
		public static int UPvr_GetSeeThroughState()
		{
			return default(int);
		}

		[Token(Token = "0x6002833")]
		[Address(RVA = "0x205E610", Offset = "0x205E610", VA = "0x205E610")]
		public static void UPvr_EnableSeeThroughManual(bool enable)
		{
		}

		[Token(Token = "0x6002834")]
		[Address(RVA = "0x205E618", Offset = "0x205E618", VA = "0x205E618")]
		public static BoundaryTrackingState UPvr_GetTrackingState()
		{
			return default(BoundaryTrackingState);
		}

		[Token(Token = "0x6002835")]
		[Address(RVA = "0x205E61C", Offset = "0x205E61C", VA = "0x205E61C")]
		public static bool UPvr_GetFrameRateLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6002836")]
		[Address(RVA = "0x205E620", Offset = "0x205E620", VA = "0x205E620")]
		public static bool UPvr_IsBoundaryEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6002837")]
		[Address(RVA = "0x205E624", Offset = "0x205E624", VA = "0x205E624")]
		public static bool UPvr_BoundaryGetConfigured()
		{
			return default(bool);
		}

		[Token(Token = "0x6002838")]
		[Address(RVA = "0x205E628", Offset = "0x205E628", VA = "0x205E628")]
		public static BoundaryTestResult UPvr_BoundaryTestNode(BoundaryTrackingNode node, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x6002839")]
		[Address(RVA = "0x205E76C", Offset = "0x205E76C", VA = "0x205E76C")]
		public static BoundaryTestResult UPvr_BoundaryTestPoint(Vector3 point, BoundaryType boundaryType)
		{
			return default(BoundaryTestResult);
		}

		[Token(Token = "0x600283A")]
		[Address(RVA = "0x205E8BC", Offset = "0x205E8BC", VA = "0x205E8BC")]
		public static Vector3[] UPvr_BoundaryGetGeometry(BoundaryType boundaryType)
		{
			return null;
		}

		[Token(Token = "0x600283B")]
		[Address(RVA = "0x205EA98", Offset = "0x205EA98", VA = "0x205EA98")]
		public static Vector3 UPvr_BoundaryGetDimensions(BoundaryType boundaryType)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600283C")]
		[Address(RVA = "0x205EAF4", Offset = "0x205EAF4", VA = "0x205EAF4")]
		public static bool UPvr_BoundaryGetEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x600283D")]
		[Address(RVA = "0x205EAF8", Offset = "0x205EAF8", VA = "0x205EAF8")]
		public static void UPvr_BoundarySetVisible(bool value)
		{
		}

		[Token(Token = "0x600283E")]
		[Address(RVA = "0x205EB00", Offset = "0x205EB00", VA = "0x205EB00")]
		public static bool UPvr_BoundaryGetVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x600283F")]
		[Address(RVA = "0x205EB04", Offset = "0x205EB04", VA = "0x205EB04")]
		public static bool UPvr_EnableLWRP(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x6002840")]
		[Address(RVA = "0x205EB0C", Offset = "0x205EB0C", VA = "0x205EB0C")]
		public static bool UPvr_SetViewportSize(int width, int height)
		{
			return default(bool);
		}

		[Token(Token = "0x6002841")]
		[Address(RVA = "0x205EB10", Offset = "0x205EB10", VA = "0x205EB10")]
		public static void UPvr_StartCameraFrame()
		{
		}

		[Token(Token = "0x6002842")]
		[Address(RVA = "0x205EC54", Offset = "0x205EC54", VA = "0x205EC54")]
		public static void UPvr_StopCameraFrame()
		{
		}

		[Token(Token = "0x6002843")]
		[Address(RVA = "0x205ED98", Offset = "0x205ED98", VA = "0x205ED98")]
		public static void UPvr_BoundaryGetSeeThroughData(int cameraIndex, RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x6002844")]
		[Address(RVA = "0x205EF78", Offset = "0x205EF78", VA = "0x205EF78")]
		public static void UPvr_BoundarySetCameraImageRect(int width, int height)
		{
		}

		[Token(Token = "0x6002845")]
		[Address(RVA = "0x205F0B0", Offset = "0x205F0B0", VA = "0x205F0B0")]
		public static void UPvr_BoundarySetSeeThroughVisible(bool value)
		{
		}

		[Token(Token = "0x6002846")]
		[Address(RVA = "0x205F1D4", Offset = "0x205F1D4", VA = "0x205F1D4")]
		public static void UPvr_SetGuardianSystemDisable(bool value)
		{
		}

		[Token(Token = "0x6002847")]
		[Address(RVA = "0x205F2F8", Offset = "0x205F2F8", VA = "0x205F2F8")]
		public static int UPvr_GetDialogState()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000488")]
	public struct PlatformSettings
	{
		[Token(Token = "0x6002848")]
		[Address(RVA = "0x2063EE4", Offset = "0x2063EE4", VA = "0x2063EE4")]
		public static Pvr_UnitySDKPlatformSetting.simulationType UPvr_IsCurrentDeviceValid()
		{
			return default(Pvr_UnitySDKPlatformSetting.simulationType);
		}

		[Token(Token = "0x6002849")]
		[Address(RVA = "0x2064200", Offset = "0x2064200", VA = "0x2064200")]
		public static bool UPvr_AppEntitlementCheck(string appid)
		{
			return default(bool);
		}

		[Token(Token = "0x600284A")]
		[Address(RVA = "0x2064590", Offset = "0x2064590", VA = "0x2064590")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEF1AEC", Offset = "0xEF1AEC")]
		public static bool UPvr_KeyEntitlementCheck(string publicKey)
		{
			return default(bool);
		}

		[Token(Token = "0x600284B")]
		[Address(RVA = "0x2064898", Offset = "0x2064898", VA = "0x2064898")]
		public static int UPvr_AppEntitlementCheckExtra(string appid)
		{
			return default(int);
		}

		[Token(Token = "0x600284C")]
		[Address(RVA = "0x2064BB4", Offset = "0x2064BB4", VA = "0x2064BB4")]
		public static int UPvr_KeyEntitlementCheckExtra(string publicKey)
		{
			return default(int);
		}

		[Token(Token = "0x600284D")]
		[Address(RVA = "0x2064ED0", Offset = "0x2064ED0", VA = "0x2064ED0")]
		public static int UPvr_GetHmdAudioStatus()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000489")]
	public enum DeviceCommand
	{
		[Token(Token = "0x4001DAF")]
		SET_PICO_NEO_HMD_BRIGHTNESS = 12,
		[Token(Token = "0x4001DB0")]
		SET_PICO_NEO_HMD_SLEEPDELAY
	}
	[Token(Token = "0x200048A")]
	public enum BrightnessLevel
	{
		[Token(Token = "0x4001DB2")]
		VR_BRIGHTNESS_LEVEL_MIN = 1,
		[Token(Token = "0x4001DB3")]
		VR_BRIGHTNESS_LEVEL_MAX = 100,
		[Token(Token = "0x4001DB4")]
		VR_BRIGHTNESS_LEVEL_DOWN = 1000,
		[Token(Token = "0x4001DB5")]
		VR_BRIGHTNESS_LEVEL_UP = 1001,
		[Token(Token = "0x4001DB6")]
		VR_BRIGHTNESS_LEVEL_SCREEN_OFF = -100
	}
	[Token(Token = "0x200048B")]
	public struct VolumePowerBrightness
	{
		[Token(Token = "0x4001DB7")]
		public const string LibFileName = "Pvr_UnitySDK";

		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AndroidJavaObject activity;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass javaSysActivityClass;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass batteryjavaVrActivityClass;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass volumejavaVrActivityClass;

		[PreserveSig]
		[Token(Token = "0x600284E")]
		[Address(RVA = "0x206ED24", Offset = "0x206ED24", VA = "0x206ED24")]
		public static extern void Pvr_SetInitActivity(IntPtr activity, IntPtr vrActivityClass);

		[PreserveSig]
		[Token(Token = "0x600284F")]
		[Address(RVA = "0x206EDB4", Offset = "0x206EDB4", VA = "0x206EDB4")]
		private static extern bool Pvr_IsHmdExist();

		[PreserveSig]
		[Token(Token = "0x6002850")]
		[Address(RVA = "0x206EE30", Offset = "0x206EE30", VA = "0x206EE30")]
		private static extern int Pvr_GetHmdScreenBrightness();

		[PreserveSig]
		[Token(Token = "0x6002851")]
		[Address(RVA = "0x206EEA4", Offset = "0x206EEA4", VA = "0x206EEA4")]
		private static extern bool Pvr_SetHmdScreenBrightness(int brightness);

		[Token(Token = "0x6002852")]
		[Address(RVA = "0x206EF2C", Offset = "0x206EF2C", VA = "0x206EF2C")]
		public static bool UPvr_IsHmdExist()
		{
			return default(bool);
		}

		[Token(Token = "0x6002853")]
		[Address(RVA = "0x206EF30", Offset = "0x206EF30", VA = "0x206EF30")]
		public static int UPvr_GetHmdScreenBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6002854")]
		[Address(RVA = "0x206EF34", Offset = "0x206EF34", VA = "0x206EF34")]
		public static bool UPvr_SetHmdScreenBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6002855")]
		[Address(RVA = "0x206EF38", Offset = "0x206EF38", VA = "0x206EF38")]
		public static bool UPvr_SetCommonBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6002856")]
		[Address(RVA = "0x206F1D8", Offset = "0x206F1D8", VA = "0x206F1D8")]
		public static int UPvr_GetCommonBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6002857")]
		[Address(RVA = "0x206F400", Offset = "0x206F400", VA = "0x206F400")]
		public static int[] UPvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6002858")]
		[Address(RVA = "0x206F600", Offset = "0x206F600", VA = "0x206F600")]
		public static void UPvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6002859")]
		[Address(RVA = "0x206F848", Offset = "0x206F848", VA = "0x206F848")]
		public static bool UPvr_SetDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}

		[Token(Token = "0x600285A")]
		[Address(RVA = "0x206F9B4", Offset = "0x206F9B4", VA = "0x206F9B4")]
		public static string UPvr_GetDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x600285B")]
		[Address(RVA = "0x206FAF0", Offset = "0x206FAF0", VA = "0x206FAF0")]
		public static bool UPvr_InitBatteryClass()
		{
			return default(bool);
		}

		[Token(Token = "0x600285C")]
		[Address(RVA = "0x206FD00", Offset = "0x206FD00", VA = "0x206FD00")]
		public static bool UPvr_InitBatteryVolClass()
		{
			return default(bool);
		}

		[Token(Token = "0x600285D")]
		[Address(RVA = "0x206FFF0", Offset = "0x206FFF0", VA = "0x206FFF0")]
		public static bool UPvr_StartBatteryReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x600285E")]
		[Address(RVA = "0x207023C", Offset = "0x207023C", VA = "0x207023C")]
		public static bool UPvr_StopBatteryReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x600285F")]
		[Address(RVA = "0x206EF70", Offset = "0x206EF70", VA = "0x206EF70")]
		public static bool UPvr_SetBrightness(int brightness)
		{
			return default(bool);
		}

		[Token(Token = "0x6002860")]
		[Address(RVA = "0x206F1F8", Offset = "0x206F1F8", VA = "0x206F1F8")]
		public static int UPvr_GetCurrentBrightness()
		{
			return default(int);
		}

		[Token(Token = "0x6002861")]
		[Address(RVA = "0x206F404", Offset = "0x206F404", VA = "0x206F404")]
		public static int[] Pvr_GetScreenBrightnessLevel()
		{
			return null;
		}

		[Token(Token = "0x6002862")]
		[Address(RVA = "0x206F604", Offset = "0x206F604", VA = "0x206F604")]
		public static void Pvr_SetScreenBrightnessLevel(int vrBrightness, int level)
		{
		}

		[Token(Token = "0x6002863")]
		[Address(RVA = "0x2070434", Offset = "0x2070434", VA = "0x2070434")]
		public static bool UPvr_StartAudioReceiver(string startreceivre)
		{
			return default(bool);
		}

		[Token(Token = "0x6002864")]
		[Address(RVA = "0x2070680", Offset = "0x2070680", VA = "0x2070680")]
		public static bool UPvr_StopAudioReceiver()
		{
			return default(bool);
		}

		[Token(Token = "0x6002865")]
		[Address(RVA = "0x2070878", Offset = "0x2070878", VA = "0x2070878")]
		public static int UPvr_GetMaxVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6002866")]
		[Address(RVA = "0x2070A60", Offset = "0x2070A60", VA = "0x2070A60")]
		public static int UPvr_GetCurrentVolumeNumber()
		{
			return default(int);
		}

		[Token(Token = "0x6002867")]
		[Address(RVA = "0x2070C48", Offset = "0x2070C48", VA = "0x2070C48")]
		public static bool UPvr_VolumeUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6002868")]
		[Address(RVA = "0x2070E20", Offset = "0x2070E20", VA = "0x2070E20")]
		public static bool UPvr_VolumeDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6002869")]
		[Address(RVA = "0x2070FF8", Offset = "0x2070FF8", VA = "0x2070FF8")]
		public static bool UPvr_SetVolumeNum(int volume)
		{
			return default(bool);
		}

		[Token(Token = "0x600286A")]
		[Address(RVA = "0x20711D4", Offset = "0x20711D4", VA = "0x20711D4")]
		public static bool UPvr_SetAudio(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x600286B")]
		[Address(RVA = "0x20711DC", Offset = "0x20711DC", VA = "0x20711DC")]
		public static bool UPvr_SetBattery(string s)
		{
			return default(bool);
		}

		[Token(Token = "0x600286C")]
		[Address(RVA = "0x206F9B8", Offset = "0x206F9B8", VA = "0x206F9B8")]
		private static string getDevicePropForUser(DeviceCommand deviceid)
		{
			return null;
		}

		[Token(Token = "0x600286D")]
		[Address(RVA = "0x206F84C", Offset = "0x206F84C", VA = "0x206F84C")]
		private static bool setDevicePropForUser(DeviceCommand deviceid, string number)
		{
			return default(bool);
		}
	}
}
namespace Pvr_UnitySDKAPI.Achievement
{
	[Token(Token = "0x200048C")]
	public sealed class AchievementCore
	{
		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool IsPlatformInitialized;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool LogMessages;

		[Token(Token = "0x600286E")]
		[Address(RVA = "0x2057430", Offset = "0x2057430", VA = "0x2057430")]
		public static bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x600286F")]
		[Address(RVA = "0x2057498", Offset = "0x2057498", VA = "0x2057498")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6002870")]
		[Address(RVA = "0x205749C", Offset = "0x205749C", VA = "0x205749C")]
		public static void RegisterNetwork()
		{
		}

		[Token(Token = "0x6002871")]
		[Address(RVA = "0x2057640", Offset = "0x2057640", VA = "0x2057640")]
		public static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x6002872")]
		[Address(RVA = "0x20577B4", Offset = "0x20577B4", VA = "0x20577B4")]
		public AchievementCore()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public static class Achievements
	{
		[Token(Token = "0x6002874")]
		[Address(RVA = "0x205781C", Offset = "0x205781C", VA = "0x205781C")]
		public static Pvr_Request<Pvr_AchievementUpdate> Init()
		{
			return null;
		}

		[Token(Token = "0x6002875")]
		[Address(RVA = "0x2057E2C", Offset = "0x2057E2C", VA = "0x2057E2C")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddCount(string name, long count)
		{
			return null;
		}

		[Token(Token = "0x6002876")]
		[Address(RVA = "0x20580EC", Offset = "0x20580EC", VA = "0x20580EC")]
		public static Pvr_Request<Pvr_AchievementUpdate> AddFields(string name, string fields)
		{
			return null;
		}

		[Token(Token = "0x6002877")]
		[Address(RVA = "0x205838C", Offset = "0x205838C", VA = "0x205838C")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetAllDefinitions()
		{
			return null;
		}

		[Token(Token = "0x6002878")]
		[Address(RVA = "0x2058624", Offset = "0x2058624", VA = "0x2058624")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetAllProgress()
		{
			return null;
		}

		[Token(Token = "0x6002879")]
		[Address(RVA = "0x2058834", Offset = "0x2058834", VA = "0x2058834")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetDefinitionsByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x600287A")]
		[Address(RVA = "0x2058AD4", Offset = "0x2058AD4", VA = "0x2058AD4")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetProgressByName(string[] names)
		{
			return null;
		}

		[Token(Token = "0x600287B")]
		[Address(RVA = "0x2058D2C", Offset = "0x2058D2C", VA = "0x2058D2C")]
		public static Pvr_Request<Pvr_AchievementUpdate> Unlock(string name)
		{
			return null;
		}

		[Token(Token = "0x600287C")]
		[Address(RVA = "0x2058F84", Offset = "0x2058F84", VA = "0x2058F84")]
		public static Pvr_Request<Pvr_AchievementDefinitionList> GetNextAchievementDefinitionListPage(Pvr_AchievementDefinitionList list)
		{
			return null;
		}

		[Token(Token = "0x600287D")]
		[Address(RVA = "0x2059344", Offset = "0x2059344", VA = "0x2059344")]
		public static Pvr_Request<Pvr_AchievementProgressList> GetNextAchievementProgressListPage(Pvr_AchievementProgressList list)
		{
			return null;
		}
	}
	[Token(Token = "0x200048E")]
	public enum AchievementType
	{
		[Token(Token = "0x4001DBF")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEEAF6C", Offset = "0xEEAF6C")]
		Unknown,
		[Token(Token = "0x4001DC0")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEEAFA4", Offset = "0xEEAFA4")]
		Simple,
		[Token(Token = "0x4001DC1")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEEAFDC", Offset = "0xEEAFDC")]
		Bitfield,
		[Token(Token = "0x4001DC2")]
		[AttributeAttribute(Name = "DescriptionAttribute", RVA = "0xEEB014", Offset = "0xEEB014")]
		Count
	}
	[Token(Token = "0x200048F")]
	public class Pvr_AchievementAPI
	{
		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaClass achievementAPI;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass definitionArrayHandle;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaClass definitionHandle;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaClass progressArrayHandle;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static AndroidJavaClass progressHandle;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static AndroidJavaClass updateHandle;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static AndroidJavaObject errorHandle;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static AndroidJavaObject unityInterface;

		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string openId;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string accessToken;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string appId;

		[Token(Token = "0x600287E")]
		[Address(RVA = "0x2057924", Offset = "0x2057924", VA = "0x2057924")]
		internal static long Init()
		{
			return default(long);
		}

		[Token(Token = "0x600287F")]
		[Address(RVA = "0x20574F8", Offset = "0x20574F8", VA = "0x20574F8")]
		internal static void RegisterNetwork()
		{
		}

		[Token(Token = "0x6002880")]
		[Address(RVA = "0x205769C", Offset = "0x205769C", VA = "0x205769C")]
		internal static void UnRegisterNetwork()
		{
		}

		[Token(Token = "0x6002881")]
		[Address(RVA = "0x2059DE8", Offset = "0x2059DE8", VA = "0x2059DE8")]
		internal static AndroidJavaObject PopMessage()
		{
			return null;
		}

		[Token(Token = "0x6002882")]
		[Address(RVA = "0x2059F08", Offset = "0x2059F08", VA = "0x2059F08")]
		internal static string pvr_Error_GetMessage(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6002883")]
		[Address(RVA = "0x205A008", Offset = "0x205A008", VA = "0x205A008")]
		internal static int pvr_Error_GetHttpCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x6002884")]
		[Address(RVA = "0x205A108", Offset = "0x205A108", VA = "0x205A108")]
		internal static int pvr_Error_GetCode(AndroidJavaObject popMessage)
		{
			return default(int);
		}

		[Token(Token = "0x6002885")]
		[Address(RVA = "0x2057F4C", Offset = "0x2057F4C", VA = "0x2057F4C")]
		internal static long pvr_Achievements_AddCount(string name, long count)
		{
			return default(long);
		}

		[Token(Token = "0x6002886")]
		[Address(RVA = "0x205820C", Offset = "0x205820C", VA = "0x205820C")]
		internal static long pvr_Achievements_AddFields(string name, string fields)
		{
			return default(long);
		}

		[Token(Token = "0x6002887")]
		[Address(RVA = "0x2058494", Offset = "0x2058494", VA = "0x2058494")]
		internal static long pvr_Achievements_GetAllDefinitions()
		{
			return default(long);
		}

		[Token(Token = "0x6002888")]
		[Address(RVA = "0x205872C", Offset = "0x205872C", VA = "0x205872C")]
		internal static long pvr_Achievements_GetAllProgress()
		{
			return default(long);
		}

		[Token(Token = "0x6002889")]
		[Address(RVA = "0x205894C", Offset = "0x205894C", VA = "0x205894C")]
		internal static long pvr_Achievements_GetDefinitionsByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x600288A")]
		[Address(RVA = "0x2058BEC", Offset = "0x2058BEC", VA = "0x2058BEC")]
		internal static long pvr_Achievements_GetProgressByName(string[] names, int v)
		{
			return default(long);
		}

		[Token(Token = "0x600288B")]
		[Address(RVA = "0x2058E44", Offset = "0x2058E44", VA = "0x2058E44")]
		internal static long pvr_Achievements_Unlock(string name)
		{
			return default(long);
		}

		[Token(Token = "0x600288C")]
		[Address(RVA = "0x20590FC", Offset = "0x20590FC", VA = "0x20590FC")]
		internal static long pvr_HTTP_GetWithMessageType(string nextUrl, Pvr_Message.MessageType messageType)
		{
			return default(long);
		}

		[Token(Token = "0x600288D")]
		[Address(RVA = "0x205A208", Offset = "0x205A208", VA = "0x205A208")]
		internal static long pvr_Message_GetType(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x600288E")]
		[Address(RVA = "0x205A3AC", Offset = "0x205A3AC", VA = "0x205A3AC")]
		internal static bool pvr_Message_IsError(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600288F")]
		[Address(RVA = "0x205A4A4", Offset = "0x205A4A4", VA = "0x205A4A4")]
		internal static long pvr_Message_GetRequestID(AndroidJavaObject popMessage)
		{
			return default(long);
		}

		[Token(Token = "0x6002890")]
		[Address(RVA = "0x2059CF0", Offset = "0x2059CF0", VA = "0x2059CF0")]
		internal static string pvr_Message_GetString(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6002891")]
		[Address(RVA = "0x205A59C", Offset = "0x205A59C", VA = "0x205A59C")]
		internal static bool pvr_AchievementUpdate_GetJustUnlocked(AndroidJavaObject popMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6002892")]
		[Address(RVA = "0x205A69C", Offset = "0x205A69C", VA = "0x205A69C")]
		internal static string pvr_AchievementUpdate_GetName(AndroidJavaObject popMessage)
		{
			return null;
		}

		[Token(Token = "0x6002893")]
		[Address(RVA = "0x205A79C", Offset = "0x205A79C", VA = "0x205A79C")]
		internal static int pvr_AchievementProgressArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x6002894")]
		[Address(RVA = "0x205A89C", Offset = "0x205A89C", VA = "0x205A89C")]
		internal static AndroidJavaObject pvr_AchievementProgressArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x6002895")]
		[Address(RVA = "0x205A9FC", Offset = "0x205A9FC", VA = "0x205A9FC")]
		internal static string pvr_AchievementProgressArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6002896")]
		[Address(RVA = "0x205AAFC", Offset = "0x205AAFC", VA = "0x205AAFC")]
		internal static string pvr_AchievementProgress_GetBitfield(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x6002897")]
		[Address(RVA = "0x205ABFC", Offset = "0x205ABFC", VA = "0x205ABFC")]
		internal static long pvr_AchievementProgress_GetCount(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x6002898")]
		[Address(RVA = "0x205ACFC", Offset = "0x205ACFC", VA = "0x205ACFC")]
		internal static bool pvr_AchievementProgress_GetIsUnlocked(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6002899")]
		[Address(RVA = "0x205ADFC", Offset = "0x205ADFC", VA = "0x205ADFC")]
		internal static string pvr_AchievementProgress_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600289A")]
		[Address(RVA = "0x205AEFC", Offset = "0x205AEFC", VA = "0x205AEFC")]
		internal static DateTime pvr_AchievementProgress_GetUnlockTime(AndroidJavaObject msg)
		{
			return default(DateTime);
		}

		[Token(Token = "0x600289B")]
		[Address(RVA = "0x205B038", Offset = "0x205B038", VA = "0x205B038")]
		internal static DateTime DateTimeFromNative(long seconds_since_the_one_true_epoch)
		{
			return default(DateTime);
		}

		[Token(Token = "0x600289C")]
		[Address(RVA = "0x205B0A8", Offset = "0x205B0A8", VA = "0x205B0A8")]
		internal static int pvr_AchievementDefinitionArray_GetSize(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x600289D")]
		[Address(RVA = "0x205B1A8", Offset = "0x205B1A8", VA = "0x205B1A8")]
		internal static AndroidJavaObject pvr_AchievementDefinitionArray_GetElement(AndroidJavaObject msg, int index)
		{
			return null;
		}

		[Token(Token = "0x600289E")]
		[Address(RVA = "0x205B308", Offset = "0x205B308", VA = "0x205B308")]
		internal static string pvr_AchievementDefinitionArray_GetNextUrl(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x600289F")]
		[Address(RVA = "0x205B408", Offset = "0x205B408", VA = "0x205B408")]
		internal static AchievementType pvr_AchievementDefinition_GetType(AndroidJavaObject msg)
		{
			return default(AchievementType);
		}

		[Token(Token = "0x60028A0")]
		[Address(RVA = "0x205B5BC", Offset = "0x205B5BC", VA = "0x205B5BC")]
		internal static string pvr_AchievementDefinition_GetName(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60028A1")]
		[Address(RVA = "0x205B6BC", Offset = "0x205B6BC", VA = "0x205B6BC")]
		internal static int pvr_AchievementDefinition_GetBitfieldLength(AndroidJavaObject msg)
		{
			return default(int);
		}

		[Token(Token = "0x60028A2")]
		[Address(RVA = "0x205B7BC", Offset = "0x205B7BC", VA = "0x205B7BC")]
		internal static long pvr_AchievementDefinition_GetTarget(AndroidJavaObject msg)
		{
			return default(long);
		}

		[Token(Token = "0x60028A3")]
		[Address(RVA = "0x205B8BC", Offset = "0x205B8BC", VA = "0x205B8BC")]
		internal static string pvr_AchievementDefinition_GetTitle(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60028A4")]
		[Address(RVA = "0x205B9BC", Offset = "0x205B9BC", VA = "0x205B9BC")]
		internal static string pvr_AchievementDefinition_GetUnlockedDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60028A5")]
		[Address(RVA = "0x205BABC", Offset = "0x205BABC", VA = "0x205BABC")]
		internal static string pvr_AchievementDefinition_GetLockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60028A6")]
		[Address(RVA = "0x205BBBC", Offset = "0x205BBBC", VA = "0x205BBBC")]
		internal static bool pvr_AchievementDefinition_GetIsSecrect(AndroidJavaObject msg)
		{
			return default(bool);
		}

		[Token(Token = "0x60028A7")]
		[Address(RVA = "0x205BCBC", Offset = "0x205BCBC", VA = "0x205BCBC")]
		internal static string pvr_AchievementDefinition_GetUnlockedIcon(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60028A8")]
		[Address(RVA = "0x205BDBC", Offset = "0x205BDBC", VA = "0x205BDBC")]
		internal static string pvr_AchievementDefinition_GetDescription(AndroidJavaObject msg)
		{
			return null;
		}

		[Token(Token = "0x60028A9")]
		[Address(RVA = "0x205BEBC", Offset = "0x205BEBC", VA = "0x205BEBC")]
		public Pvr_AchievementAPI()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class Pvr_AchievementDefinition
	{
		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly AchievementType Type;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly int BitfieldLength;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly long Target;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly string Title;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly string Description;

		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly string UnlockedDescription;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly string UnlockedIcon;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly string LockedIcon;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public readonly bool IsSecrect;

		[Token(Token = "0x60028AB")]
		[Address(RVA = "0x205C200", Offset = "0x205C200", VA = "0x205C200")]
		public Pvr_AchievementDefinition(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x2000491")]
	public class Pvr_AchievementDefinitionList : Pvr_DeserializableList<Pvr_AchievementDefinition>
	{
		[Token(Token = "0x60028AC")]
		[Address(RVA = "0x205960C", Offset = "0x205960C", VA = "0x205960C")]
		public Pvr_AchievementDefinitionList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x2000492")]
	public class Pvr_AchievementProgress
	{
		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string Bitfield;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly long Count;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool IsUnlocked;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string Name;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly DateTime UnlockTime;

		[Token(Token = "0x60028AD")]
		[Address(RVA = "0x205C33C", Offset = "0x205C33C", VA = "0x205C33C")]
		public Pvr_AchievementProgress(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x2000493")]
	public class Pvr_AchievementProgressList : Pvr_DeserializableList<Pvr_AchievementProgress>
	{
		[Token(Token = "0x60028AE")]
		[Address(RVA = "0x20598AC", Offset = "0x20598AC", VA = "0x20598AC")]
		public Pvr_AchievementProgressList(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x2000494")]
	public class Pvr_AchievementUpdate
	{
		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool JustUnlocked;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Name;

		[Token(Token = "0x60028AF")]
		[Address(RVA = "0x2059B4C", Offset = "0x2059B4C", VA = "0x2059B4C")]
		public Pvr_AchievementUpdate(AndroidJavaObject msg)
		{
		}
	}
	[Token(Token = "0x2000495")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xEE3F68", Offset = "0xEE3F68")]
	public class Pvr_DeserializableList<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<T> data;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string nextUrl;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string previousUrl;

		[Token(Token = "0x170003C2")]
		public int Count
		{
			[Token(Token = "0x60028B0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003C3")]
		private bool System.Collections.Generic.ICollection<T>.IsReadOnly
		{
			[Token(Token = "0x60028B1")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C4")]
		public T Item
		{
			[Token(Token = "0x60028B3")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60028B4")]
			set
			{
			}
		}

		[Token(Token = "0x170003C5")]
		public bool HasNextPage
		{
			[Token(Token = "0x60028BF")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C6")]
		public bool HasPreviousPage
		{
			[Token(Token = "0x60028C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C7")]
		public string NextUrl
		{
			[Token(Token = "0x60028C1")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003C8")]
		public string PreviousUrl
		{
			[Token(Token = "0x60028C2")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60028B2")]
		public int IndexOf(T obj)
		{
			return default(int);
		}

		[Token(Token = "0x60028B5")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x60028B6")]
		public void Clear()
		{
		}

		[Token(Token = "0x60028B7")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60028B8")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x60028B9")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60028BA")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x60028BB")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x60028BC")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60028BD")]
		private IEnumerator GetEnumerator1()
		{
			return null;
		}

		[Token(Token = "0x60028BE")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60028C3")]
		public Pvr_DeserializableList()
		{
		}
	}
	[Token(Token = "0x2000496")]
	public static class Pvr_Callback
	{
		[Token(Token = "0x2000660")]
		private class RequestCallback
		{
			[Token(Token = "0x4002322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Pvr_Message.Callback messageCallback;

			[Token(Token = "0x6002E90")]
			[Address(RVA = "0x205C9DC", Offset = "0x205C9DC", VA = "0x205C9DC")]
			public RequestCallback()
			{
			}

			[Token(Token = "0x6002E91")]
			[Address(RVA = "0x205C9E4", Offset = "0x205C9E4", VA = "0x205C9E4")]
			public RequestCallback(Pvr_Message.Callback callback)
			{
			}

			[Token(Token = "0x6002E92")]
			[Address(RVA = "0x205CA18", Offset = "0x205CA18", VA = "0x205CA18", Slot = "4")]
			public virtual void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x2000661")]
		private sealed class RequestCallback<T> : RequestCallback
		{
			[Token(Token = "0x4002323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Pvr_Message<T>.Callback callback;

			[Token(Token = "0x6002E93")]
			public RequestCallback(Pvr_Message<T>.Callback callback)
			{
			}

			[Token(Token = "0x6002E94")]
			public override void HandleMessage(Pvr_Message msg)
			{
			}
		}

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<long, Request> requestIDsToRequests;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Pvr_Message.MessageType, RequestCallback> notificationCallbacks;

		[Token(Token = "0x60028C4")]
		[Address(RVA = "0x205C40C", Offset = "0x205C40C", VA = "0x205C40C")]
		internal static void AddRequest(Request request)
		{
		}

		[Token(Token = "0x60028C5")]
		[Address(RVA = "0x205C57C", Offset = "0x205C57C", VA = "0x205C57C")]
		internal static void RunCallbacks()
		{
		}

		[Token(Token = "0x60028C6")]
		[Address(RVA = "0x205C7F8", Offset = "0x205C7F8", VA = "0x205C7F8")]
		internal static void RunLimitedCallbacks(uint limit)
		{
		}

		[Token(Token = "0x60028C7")]
		[Address(RVA = "0x205C890", Offset = "0x205C890", VA = "0x205C890")]
		internal static void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60028C8")]
		[Address(RVA = "0x205C658", Offset = "0x205C658", VA = "0x205C658")]
		internal static void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x2000497")]
	public class Pvr_CallbackRunner : MonoBehaviour
	{
		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistantBetweenSceneLoads;

		[Token(Token = "0x60028CA")]
		[Address(RVA = "0x205CDBC", Offset = "0x205CDBC", VA = "0x205CDBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60028CB")]
		[Address(RVA = "0x205CEB8", Offset = "0x205CEB8", VA = "0x205CEB8")]
		private void Update()
		{
		}

		[Token(Token = "0x60028CC")]
		[Address(RVA = "0x205CF44", Offset = "0x205CF44", VA = "0x205CF44")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60028CD")]
		[Address(RVA = "0x205CFA0", Offset = "0x205CFA0", VA = "0x205CFA0")]
		public Pvr_CallbackRunner()
		{
		}
	}
	[Token(Token = "0x2000498")]
	public abstract class Pvr_Message<T> : Pvr_Message
	{
		[Token(Token = "0x2000662")]
		public new delegate void Callback(Pvr_Message<T> message);

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T data;

		[Token(Token = "0x170003C9")]
		public T Data
		{
			[Token(Token = "0x60028CF")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x60028CE")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60028D0")]
		protected abstract T GetDataFromMessage(AndroidJavaObject msg);
	}
	[Token(Token = "0x2000499")]
	public class Pvr_Message
	{
		[Token(Token = "0x2000663")]
		public delegate void Callback(Pvr_Message message);

		[Token(Token = "0x2000664")]
		public enum MessageType : uint
		{
			[Token(Token = "0x4002325")]
			Unknown = 0u,
			[Token(Token = "0x4002326")]
			Achievements_AddCount = 65495601u,
			[Token(Token = "0x4002327")]
			Achievements_AddFields = 346693929u,
			[Token(Token = "0x4002328")]
			Achievements_GetAllDefinitions = 64177549u,
			[Token(Token = "0x4002329")]
			Achievements_GetAllProgress = 1335877149u,
			[Token(Token = "0x400232A")]
			Achievements_GetDefinitionsByName = 1653670332u,
			[Token(Token = "0x400232B")]
			Achievements_GetNextAchievementDefinitionArrayPage = 712888917u,
			[Token(Token = "0x400232C")]
			Achievements_GetNextAchievementProgressArrayPage = 792913703u,
			[Token(Token = "0x400232D")]
			Achievements_GetProgressByName = 354837425u,
			[Token(Token = "0x400232E")]
			Achievements_Unlock = 1497156573u,
			[Token(Token = "0x400232F")]
			Achievements_WriteAchievementProgress = 121027549u,
			[Token(Token = "0x4002330")]
			Achievements_VerifyAccessToken = 53284924u
		}

		[Token(Token = "0x2000665")]
		internal delegate Pvr_Message ExtraMessageTypesHandler(AndroidJavaObject messageHandle, MessageType message_type);

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MessageType type;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private long requestID;

		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Error error;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB04C", Offset = "0xEEB04C")]
		private static ExtraMessageTypesHandler <HandleExtraMessageTypes>k__BackingField;

		[Token(Token = "0x170003CA")]
		public MessageType Type
		{
			[Token(Token = "0x60028D2")]
			[Address(RVA = "0x205D1C4", Offset = "0x205D1C4", VA = "0x205D1C4")]
			get
			{
				return default(MessageType);
			}
		}

		[Token(Token = "0x170003CB")]
		public bool IsError
		{
			[Token(Token = "0x60028D3")]
			[Address(RVA = "0x205D1CC", Offset = "0x205D1CC", VA = "0x205D1CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003CC")]
		public long RequestID
		{
			[Token(Token = "0x60028D4")]
			[Address(RVA = "0x205D1DC", Offset = "0x205D1DC", VA = "0x205D1DC")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170003CD")]
		internal static ExtraMessageTypesHandler HandleExtraMessageTypes
		{
			[Token(Token = "0x60028DD")]
			[Address(RVA = "0x205D404", Offset = "0x205D404", VA = "0x205D404")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1B34", Offset = "0xEF1B34")]
			private get
			{
				return null;
			}
			[Token(Token = "0x60028DC")]
			[Address(RVA = "0x205D3AC", Offset = "0x205D3AC", VA = "0x205D3AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1B24", Offset = "0xEF1B24")]
			set
			{
			}
		}

		[Token(Token = "0x60028D1")]
		[Address(RVA = "0x205CFB0", Offset = "0x205CFB0", VA = "0x205CFB0")]
		public Pvr_Message(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60028D5")]
		[Address(RVA = "0x205D1E4", Offset = "0x205D1E4", VA = "0x205D1E4", Slot = "4")]
		public virtual Error GetError()
		{
			return null;
		}

		[Token(Token = "0x60028D6")]
		[Address(RVA = "0x205D1EC", Offset = "0x205D1EC", VA = "0x205D1EC", Slot = "5")]
		public virtual Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60028D7")]
		[Address(RVA = "0x205D1F4", Offset = "0x205D1F4", VA = "0x205D1F4", Slot = "6")]
		public virtual Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60028D8")]
		[Address(RVA = "0x205D1FC", Offset = "0x205D1FC", VA = "0x205D1FC", Slot = "7")]
		public virtual Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60028D9")]
		[Address(RVA = "0x205D204", Offset = "0x205D204", VA = "0x205D204", Slot = "8")]
		public virtual string GetString()
		{
			return null;
		}

		[Token(Token = "0x60028DA")]
		[Address(RVA = "0x205D20C", Offset = "0x205D20C", VA = "0x205D20C")]
		internal static Pvr_Message ParseMessageHandle(AndroidJavaObject messageHandle)
		{
			return null;
		}

		[Token(Token = "0x60028DB")]
		[Address(RVA = "0x205C5F8", Offset = "0x205C5F8", VA = "0x205C5F8")]
		public static Pvr_Message PopMessage()
		{
			return null;
		}
	}
	[Token(Token = "0x200049A")]
	public class MessageWithAchievementDefinitions : Pvr_Message<Pvr_AchievementDefinitionList>
	{
		[Token(Token = "0x60028DE")]
		[Address(RVA = "0x2059508", Offset = "0x2059508", VA = "0x2059508")]
		public MessageWithAchievementDefinitions(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60028DF")]
		[Address(RVA = "0x2059568", Offset = "0x2059568", VA = "0x2059568", Slot = "5")]
		public override Pvr_AchievementDefinitionList GetAchievementDefinitions()
		{
			return null;
		}

		[Token(Token = "0x60028E0")]
		[Address(RVA = "0x20595AC", Offset = "0x20595AC", VA = "0x20595AC", Slot = "9")]
		protected override Pvr_AchievementDefinitionList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x200049B")]
	public class MessageWithAchievementProgressList : Pvr_Message<Pvr_AchievementProgressList>
	{
		[Token(Token = "0x60028E1")]
		[Address(RVA = "0x20597A8", Offset = "0x20597A8", VA = "0x20597A8")]
		public MessageWithAchievementProgressList(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60028E2")]
		[Address(RVA = "0x2059808", Offset = "0x2059808", VA = "0x2059808", Slot = "6")]
		public override Pvr_AchievementProgressList GetAchievementProgressList()
		{
			return null;
		}

		[Token(Token = "0x60028E3")]
		[Address(RVA = "0x205984C", Offset = "0x205984C", VA = "0x205984C", Slot = "9")]
		protected override Pvr_AchievementProgressList GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x200049C")]
	public class MessageWithAchievementUpdate : Pvr_Message<Pvr_AchievementUpdate>
	{
		[Token(Token = "0x60028E4")]
		[Address(RVA = "0x2059A48", Offset = "0x2059A48", VA = "0x2059A48")]
		public MessageWithAchievementUpdate(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60028E5")]
		[Address(RVA = "0x2059AA8", Offset = "0x2059AA8", VA = "0x2059AA8", Slot = "7")]
		public override Pvr_AchievementUpdate GetAchievementUpdate()
		{
			return null;
		}

		[Token(Token = "0x60028E6")]
		[Address(RVA = "0x2059AEC", Offset = "0x2059AEC", VA = "0x2059AEC", Slot = "9")]
		protected override Pvr_AchievementUpdate GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x200049D")]
	public class MessageWithString : Pvr_Message<string>
	{
		[Token(Token = "0x60028E7")]
		[Address(RVA = "0x2059BE8", Offset = "0x2059BE8", VA = "0x2059BE8")]
		public MessageWithString(AndroidJavaObject msg)
		{
		}

		[Token(Token = "0x60028E8")]
		[Address(RVA = "0x2059C48", Offset = "0x2059C48", VA = "0x2059C48", Slot = "8")]
		public override string GetString()
		{
			return null;
		}

		[Token(Token = "0x60028E9")]
		[Address(RVA = "0x2059C8C", Offset = "0x2059C8C", VA = "0x2059C8C", Slot = "9")]
		protected override string GetDataFromMessage(AndroidJavaObject msg)
		{
			return null;
		}
	}
	[Token(Token = "0x200049E")]
	public class Error
	{
		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int Code;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int HttpCode;

		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string Message;

		[Token(Token = "0x60028EA")]
		[Address(RVA = "0x20594BC", Offset = "0x20594BC", VA = "0x20594BC")]
		public Error(int code, string message, int httpCode)
		{
		}
	}
	[Token(Token = "0x200049F")]
	public sealed class Pvr_Request<T> : Request
	{
		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Pvr_Message<T>.Callback callback_;

		[Token(Token = "0x60028EB")]
		public Pvr_Request(long requestID)
		{
		}

		[Token(Token = "0x60028EC")]
		public Pvr_Request<T> OnComplete(Pvr_Message<T>.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60028ED")]
		public override void HandleMessage(Pvr_Message msg)
		{
		}
	}
	[Token(Token = "0x20004A0")]
	public class Request
	{
		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Pvr_Message.Callback callback_;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB05C", Offset = "0xEEB05C")]
		private long <RequestID>k__BackingField;

		[Token(Token = "0x170003CE")]
		public long RequestID
		{
			[Token(Token = "0x60028EF")]
			[Address(RVA = "0x205D994", Offset = "0x205D994", VA = "0x205D994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1B44", Offset = "0xEF1B44")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60028F0")]
			[Address(RVA = "0x205D99C", Offset = "0x205D99C", VA = "0x205D99C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1B54", Offset = "0xEF1B54")]
			set
			{
			}
		}

		[Token(Token = "0x60028EE")]
		[Address(RVA = "0x205D968", Offset = "0x205D968", VA = "0x205D968")]
		public Request(long requestID)
		{
		}

		[Token(Token = "0x60028F1")]
		[Address(RVA = "0x205D9A4", Offset = "0x205D9A4", VA = "0x205D9A4")]
		public Request OnComplete(Pvr_Message.Callback callback)
		{
			return null;
		}

		[Token(Token = "0x60028F2")]
		[Address(RVA = "0x205DA2C", Offset = "0x205DA2C", VA = "0x205DA2C", Slot = "4")]
		public virtual void HandleMessage(Pvr_Message msg)
		{
		}

		[Token(Token = "0x60028F3")]
		[Address(RVA = "0x205CEC0", Offset = "0x205CEC0", VA = "0x205CEC0")]
		public static void RunCallbacks(uint limit = 0u)
		{
		}
	}
}
namespace Dissonance
{
	[Token(Token = "0x20004A1")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE3FA0", Offset = "0xEE3FA0")]
	internal sealed class CanBeNullAttribute : Attribute
	{
		[Token(Token = "0x60028F4")]
		[Address(RVA = "0x122849C", Offset = "0x122849C", VA = "0x122849C")]
		public CanBeNullAttribute()
		{
		}
	}
	[Token(Token = "0x20004A2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE3FB4", Offset = "0xEE3FB4")]
	internal sealed class NotNullAttribute : Attribute
	{
		[Token(Token = "0x60028F5")]
		[Address(RVA = "0x122BD40", Offset = "0x122BD40", VA = "0x122BD40")]
		public NotNullAttribute()
		{
		}
	}
	[Token(Token = "0x20004A3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE3FC8", Offset = "0xEE3FC8")]
	internal sealed class ItemNotNullAttribute : Attribute
	{
		[Token(Token = "0x60028F6")]
		[Address(RVA = "0x122BB44", Offset = "0x122BB44", VA = "0x122BB44")]
		public ItemNotNullAttribute()
		{
		}
	}
	[Token(Token = "0x20004A4")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE3FDC", Offset = "0xEE3FDC")]
	internal sealed class ItemCanBeNullAttribute : Attribute
	{
		[Token(Token = "0x60028F7")]
		[Address(RVA = "0x122BB3C", Offset = "0x122BB3C", VA = "0x122BB3C")]
		public ItemCanBeNullAttribute()
		{
		}
	}
	[Token(Token = "0x20004A5")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE3FF0", Offset = "0xEE3FF0")]
	internal sealed class StringFormatMethodAttribute : Attribute
	{
		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB06C", Offset = "0xEEB06C")]
		private string <FormatParameterName>k__BackingField;

		[Token(Token = "0x170003CF")]
		[Dissonance.NotNull]
		public string FormatParameterName
		{
			[Token(Token = "0x60028F9")]
			[Address(RVA = "0x122BFA8", Offset = "0x122BFA8", VA = "0x122BFA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1B64", Offset = "0xEF1B64")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028FA")]
			[Address(RVA = "0x122BFB0", Offset = "0x122BFB0", VA = "0x122BFB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1B74", Offset = "0xEF1B74")]
			private set
			{
			}
		}

		[Token(Token = "0x60028F8")]
		[Address(RVA = "0x122BF74", Offset = "0x122BF74", VA = "0x122BF74")]
		public StringFormatMethodAttribute([Dissonance.NotNull] string formatParameterName)
		{
		}
	}
	[Token(Token = "0x20004A6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4004", Offset = "0xEE4004")]
	internal sealed class ValueProviderAttribute : Attribute
	{
		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB07C", Offset = "0xEEB07C")]
		private string <Name>k__BackingField;

		[Token(Token = "0x170003D0")]
		[Dissonance.NotNull]
		public string Name
		{
			[Token(Token = "0x60028FC")]
			[Address(RVA = "0x122C0DC", Offset = "0x122C0DC", VA = "0x122C0DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1B84", Offset = "0xEF1B84")]
			get
			{
				return null;
			}
			[Token(Token = "0x60028FD")]
			[Address(RVA = "0x122C0E4", Offset = "0x122C0E4", VA = "0x122C0E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1B94", Offset = "0xEF1B94")]
			private set
			{
			}
		}

		[Token(Token = "0x60028FB")]
		[Address(RVA = "0x122C0A8", Offset = "0x122C0A8", VA = "0x122C0A8")]
		public ValueProviderAttribute([Dissonance.NotNull] string name)
		{
		}
	}
	[Token(Token = "0x20004A7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE403C", Offset = "0xEE403C")]
	internal sealed class InvokerParameterNameAttribute : Attribute
	{
		[Token(Token = "0x60028FE")]
		[Address(RVA = "0x122BB34", Offset = "0x122BB34", VA = "0x122BB34")]
		public InvokerParameterNameAttribute()
		{
		}
	}
	[Token(Token = "0x20004A8")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4050", Offset = "0xEE4050")]
	internal sealed class NotifyPropertyChangedInvocatorAttribute : Attribute
	{
		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB08C", Offset = "0xEEB08C")]
		private string <ParameterName>k__BackingField;

		[Token(Token = "0x170003D1")]
		[Dissonance.CanBeNull]
		public string ParameterName
		{
			[Token(Token = "0x6002901")]
			[Address(RVA = "0x122BD84", Offset = "0x122BD84", VA = "0x122BD84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1BA4", Offset = "0xEF1BA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002902")]
			[Address(RVA = "0x122BD8C", Offset = "0x122BD8C", VA = "0x122BD8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1BB4", Offset = "0xEF1BB4")]
			private set
			{
			}
		}

		[Token(Token = "0x60028FF")]
		[Address(RVA = "0x122BD48", Offset = "0x122BD48", VA = "0x122BD48")]
		public NotifyPropertyChangedInvocatorAttribute()
		{
		}

		[Token(Token = "0x6002900")]
		[Address(RVA = "0x122BD50", Offset = "0x122BD50", VA = "0x122BD50")]
		public NotifyPropertyChangedInvocatorAttribute([Dissonance.NotNull] string parameterName)
		{
		}
	}
	[Token(Token = "0x20004A9")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4064", Offset = "0xEE4064")]
	internal sealed class ContractAnnotationAttribute : Attribute
	{
		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB09C", Offset = "0xEEB09C")]
		private string <Contract>k__BackingField;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB0AC", Offset = "0xEEB0AC")]
		private bool <ForceFullStates>k__BackingField;

		[Token(Token = "0x170003D2")]
		[Dissonance.NotNull]
		public string Contract
		{
			[Token(Token = "0x6002905")]
			[Address(RVA = "0x1228570", Offset = "0x1228570", VA = "0x1228570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1BC4", Offset = "0xEF1BC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002906")]
			[Address(RVA = "0x1228578", Offset = "0x1228578", VA = "0x1228578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1BD4", Offset = "0xEF1BD4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D3")]
		public bool ForceFullStates
		{
			[Token(Token = "0x6002907")]
			[Address(RVA = "0x1228580", Offset = "0x1228580", VA = "0x1228580")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1BE4", Offset = "0xEF1BE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002908")]
			[Address(RVA = "0x1228588", Offset = "0x1228588", VA = "0x1228588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1BF4", Offset = "0xEF1BF4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002903")]
		[Address(RVA = "0x12284E8", Offset = "0x12284E8", VA = "0x12284E8")]
		public ContractAnnotationAttribute([Dissonance.NotNull] string contract)
		{
		}

		[Token(Token = "0x6002904")]
		[Address(RVA = "0x1228524", Offset = "0x1228524", VA = "0x1228524")]
		public ContractAnnotationAttribute([Dissonance.NotNull] string contract, bool forceFullStates)
		{
		}
	}
	[Token(Token = "0x20004AA")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE409C", Offset = "0xEE409C")]
	internal sealed class LocalizationRequiredAttribute : Attribute
	{
		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB0BC", Offset = "0xEEB0BC")]
		private bool <Required>k__BackingField;

		[Token(Token = "0x170003D4")]
		public bool Required
		{
			[Token(Token = "0x600290B")]
			[Address(RVA = "0x122BBB0", Offset = "0x122BBB0", VA = "0x122BBB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1C04", Offset = "0xEF1C04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600290C")]
			[Address(RVA = "0x122BBB8", Offset = "0x122BBB8", VA = "0x122BBB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1C14", Offset = "0xEF1C14")]
			private set
			{
			}
		}

		[Token(Token = "0x6002909")]
		[Address(RVA = "0x122BB54", Offset = "0x122BB54", VA = "0x122BB54")]
		public LocalizationRequiredAttribute()
		{
		}

		[Token(Token = "0x600290A")]
		[Address(RVA = "0x122BB80", Offset = "0x122BB80", VA = "0x122BB80")]
		public LocalizationRequiredAttribute(bool required)
		{
		}
	}
	[Token(Token = "0x20004AB")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE40B0", Offset = "0xEE40B0")]
	internal sealed class CannotApplyEqualityOperatorAttribute : Attribute
	{
		[Token(Token = "0x600290D")]
		[Address(RVA = "0x12284A4", Offset = "0x12284A4", VA = "0x12284A4")]
		public CannotApplyEqualityOperatorAttribute()
		{
		}
	}
	[Token(Token = "0x20004AC")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE40C4", Offset = "0xEE40C4")]
	[AttributeAttribute(Name = "BaseTypeRequiredAttribute", RVA = "0xEE40C4", Offset = "0xEE40C4")]
	internal sealed class BaseTypeRequiredAttribute : Attribute
	{
		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB0CC", Offset = "0xEEB0CC")]
		private Type <BaseType>k__BackingField;

		[Token(Token = "0x170003D5")]
		[Dissonance.NotNull]
		public Type BaseType
		{
			[Token(Token = "0x600290F")]
			[Address(RVA = "0x122848C", Offset = "0x122848C", VA = "0x122848C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1C24", Offset = "0xEF1C24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002910")]
			[Address(RVA = "0x1228494", Offset = "0x1228494", VA = "0x1228494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1C34", Offset = "0xEF1C34")]
			private set
			{
			}
		}

		[Token(Token = "0x600290E")]
		[Address(RVA = "0x1228458", Offset = "0x1228458", VA = "0x1228458")]
		public BaseTypeRequiredAttribute([Dissonance.NotNull] Type baseType)
		{
		}
	}
	[Token(Token = "0x20004AD")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4148", Offset = "0xEE4148")]
	internal sealed class UsedImplicitlyAttribute : Attribute
	{
		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB0DC", Offset = "0xEEB0DC")]
		private Dissonance.ImplicitUseKindFlags <UseKindFlags>k__BackingField;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB0EC", Offset = "0xEEB0EC")]
		private Dissonance.ImplicitUseTargetFlags <TargetFlags>k__BackingField;

		[Token(Token = "0x170003D6")]
		public Dissonance.ImplicitUseKindFlags UseKindFlags
		{
			[Token(Token = "0x6002915")]
			[Address(RVA = "0x122C088", Offset = "0x122C088", VA = "0x122C088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1C44", Offset = "0xEF1C44")]
			get
			{
				return default(Dissonance.ImplicitUseKindFlags);
			}
			[Token(Token = "0x6002916")]
			[Address(RVA = "0x122C090", Offset = "0x122C090", VA = "0x122C090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1C54", Offset = "0xEF1C54")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D7")]
		public Dissonance.ImplicitUseTargetFlags TargetFlags
		{
			[Token(Token = "0x6002917")]
			[Address(RVA = "0x122C098", Offset = "0x122C098", VA = "0x122C098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1C64", Offset = "0xEF1C64")]
			get
			{
				return default(Dissonance.ImplicitUseTargetFlags);
			}
			[Token(Token = "0x6002918")]
			[Address(RVA = "0x122C0A0", Offset = "0x122C0A0", VA = "0x122C0A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1C74", Offset = "0xEF1C74")]
			private set
			{
			}
		}

		[Token(Token = "0x6002911")]
		[Address(RVA = "0x122BFC0", Offset = "0x122BFC0", VA = "0x122BFC0")]
		public UsedImplicitlyAttribute()
		{
		}

		[Token(Token = "0x6002912")]
		[Address(RVA = "0x122C028", Offset = "0x122C028", VA = "0x122C028")]
		public UsedImplicitlyAttribute(Dissonance.ImplicitUseKindFlags useKindFlags)
		{
		}

		[Token(Token = "0x6002913")]
		[Address(RVA = "0x122C058", Offset = "0x122C058", VA = "0x122C058")]
		public UsedImplicitlyAttribute(Dissonance.ImplicitUseTargetFlags targetFlags)
		{
		}

		[Token(Token = "0x6002914")]
		[Address(RVA = "0x122BFF0", Offset = "0x122BFF0", VA = "0x122BFF0")]
		public UsedImplicitlyAttribute(Dissonance.ImplicitUseKindFlags useKindFlags, Dissonance.ImplicitUseTargetFlags targetFlags)
		{
		}
	}
	[Token(Token = "0x20004AE")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE415C", Offset = "0xEE415C")]
	internal sealed class MeansImplicitUseAttribute : Attribute
	{
		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB0FC", Offset = "0xEEB0FC")]
		private Dissonance.ImplicitUseKindFlags <UseKindFlags>k__BackingField;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB10C", Offset = "0xEEB10C")]
		private Dissonance.ImplicitUseTargetFlags <TargetFlags>k__BackingField;

		[Token(Token = "0x170003D8")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xEF47D0", Offset = "0xEF47D0")]
		public Dissonance.ImplicitUseKindFlags UseKindFlags
		{
			[Token(Token = "0x600291D")]
			[Address(RVA = "0x122BCC4", Offset = "0x122BCC4", VA = "0x122BCC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1C84", Offset = "0xEF1C84")]
			get
			{
				return default(Dissonance.ImplicitUseKindFlags);
			}
			[Token(Token = "0x600291E")]
			[Address(RVA = "0x122BCCC", Offset = "0x122BCCC", VA = "0x122BCCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1C94", Offset = "0xEF1C94")]
			private set
			{
			}
		}

		[Token(Token = "0x170003D9")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xEF47E0", Offset = "0xEF47E0")]
		public Dissonance.ImplicitUseTargetFlags TargetFlags
		{
			[Token(Token = "0x600291F")]
			[Address(RVA = "0x122BCD4", Offset = "0x122BCD4", VA = "0x122BCD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1CA4", Offset = "0xEF1CA4")]
			get
			{
				return default(Dissonance.ImplicitUseTargetFlags);
			}
			[Token(Token = "0x6002920")]
			[Address(RVA = "0x122BCDC", Offset = "0x122BCDC", VA = "0x122BCDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1CB4", Offset = "0xEF1CB4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002919")]
		[Address(RVA = "0x122BBFC", Offset = "0x122BBFC", VA = "0x122BBFC")]
		public MeansImplicitUseAttribute()
		{
		}

		[Token(Token = "0x600291A")]
		[Address(RVA = "0x122BC64", Offset = "0x122BC64", VA = "0x122BC64")]
		public MeansImplicitUseAttribute(Dissonance.ImplicitUseKindFlags useKindFlags)
		{
		}

		[Token(Token = "0x600291B")]
		[Address(RVA = "0x122BC94", Offset = "0x122BC94", VA = "0x122BC94")]
		public MeansImplicitUseAttribute(Dissonance.ImplicitUseTargetFlags targetFlags)
		{
		}

		[Token(Token = "0x600291C")]
		[Address(RVA = "0x122BC2C", Offset = "0x122BC2C", VA = "0x122BC2C")]
		public MeansImplicitUseAttribute(Dissonance.ImplicitUseKindFlags useKindFlags, Dissonance.ImplicitUseTargetFlags targetFlags)
		{
		}
	}
	[Token(Token = "0x20004AF")]
	[Flags]
	internal enum ImplicitUseKindFlags
	{
		[Token(Token = "0x4001DFC")]
		Default = 7,
		[Token(Token = "0x4001DFD")]
		Access = 1,
		[Token(Token = "0x4001DFE")]
		Assign = 2,
		[Token(Token = "0x4001DFF")]
		InstantiatedWithFixedConstructorSignature = 4,
		[Token(Token = "0x4001E00")]
		InstantiatedNoFixedConstructorSignature = 8
	}
	[Token(Token = "0x20004B0")]
	[Flags]
	internal enum ImplicitUseTargetFlags
	{
		[Token(Token = "0x4001E02")]
		Default = 1,
		[Token(Token = "0x4001E03")]
		Itself = 1,
		[Token(Token = "0x4001E04")]
		Members = 2,
		[Token(Token = "0x4001E05")]
		WithMembers = 3
	}
	[Token(Token = "0x20004B1")]
	[AttributeAttribute(Name = "MeansImplicitUseAttribute", RVA = "0xEE4190", Offset = "0xEE4190")]
	internal sealed class PublicAPIAttribute : Attribute
	{
		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB11C", Offset = "0xEEB11C")]
		private string <Comment>k__BackingField;

		[Token(Token = "0x170003DA")]
		[Dissonance.CanBeNull]
		public string Comment
		{
			[Token(Token = "0x6002923")]
			[Address(RVA = "0x122BE24", Offset = "0x122BE24", VA = "0x122BE24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1CC4", Offset = "0xEF1CC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002924")]
			[Address(RVA = "0x122BE2C", Offset = "0x122BE2C", VA = "0x122BE2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1CD4", Offset = "0xEF1CD4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002921")]
		[Address(RVA = "0x122BDE8", Offset = "0x122BDE8", VA = "0x122BDE8")]
		public PublicAPIAttribute()
		{
		}

		[Token(Token = "0x6002922")]
		[Address(RVA = "0x122BDF0", Offset = "0x122BDF0", VA = "0x122BDF0")]
		public PublicAPIAttribute([Dissonance.NotNull] string comment)
		{
		}
	}
	[Token(Token = "0x20004B2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE41A4", Offset = "0xEE41A4")]
	internal sealed class InstantHandleAttribute : Attribute
	{
		[Token(Token = "0x6002925")]
		[Address(RVA = "0x1228624", Offset = "0x1228624", VA = "0x1228624")]
		public InstantHandleAttribute()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE41B8", Offset = "0xEE41B8")]
	internal sealed class PureAttribute : Attribute
	{
		[Token(Token = "0x6002926")]
		[Address(RVA = "0x122BE34", Offset = "0x122BE34", VA = "0x122BE34")]
		public PureAttribute()
		{
		}
	}
	[Token(Token = "0x20004B4")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE41CC", Offset = "0xEE41CC")]
	internal sealed class MustUseReturnValueAttribute : Attribute
	{
		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB12C", Offset = "0xEEB12C")]
		private string <Justification>k__BackingField;

		[Token(Token = "0x170003DB")]
		[Dissonance.CanBeNull]
		public string Justification
		{
			[Token(Token = "0x6002929")]
			[Address(RVA = "0x122BD20", Offset = "0x122BD20", VA = "0x122BD20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1CE4", Offset = "0xEF1CE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600292A")]
			[Address(RVA = "0x122BD28", Offset = "0x122BD28", VA = "0x122BD28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1CF4", Offset = "0xEF1CF4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002927")]
		[Address(RVA = "0x122BCE4", Offset = "0x122BCE4", VA = "0x122BCE4")]
		public MustUseReturnValueAttribute()
		{
		}

		[Token(Token = "0x6002928")]
		[Address(RVA = "0x122BCEC", Offset = "0x122BCEC", VA = "0x122BCEC")]
		public MustUseReturnValueAttribute([Dissonance.NotNull] string justification)
		{
		}
	}
	[Token(Token = "0x20004B5")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE41E0", Offset = "0xEE41E0")]
	internal sealed class ProvidesContextAttribute : Attribute
	{
		[Token(Token = "0x600292B")]
		[Address(RVA = "0x122BDE0", Offset = "0x122BDE0", VA = "0x122BDE0")]
		public ProvidesContextAttribute()
		{
		}
	}
	[Token(Token = "0x20004B6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE41F4", Offset = "0xEE41F4")]
	internal sealed class PathReferenceAttribute : Attribute
	{
		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB13C", Offset = "0xEEB13C")]
		private string <BasePath>k__BackingField;

		[Token(Token = "0x170003DC")]
		[Dissonance.CanBeNull]
		public string BasePath
		{
			[Token(Token = "0x600292E")]
			[Address(RVA = "0x122BDD0", Offset = "0x122BDD0", VA = "0x122BDD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1D04", Offset = "0xEF1D04")]
			get
			{
				return null;
			}
			[Token(Token = "0x600292F")]
			[Address(RVA = "0x122BDD8", Offset = "0x122BDD8", VA = "0x122BDD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1D14", Offset = "0xEF1D14")]
			private set
			{
			}
		}

		[Token(Token = "0x600292C")]
		[Address(RVA = "0x122BD94", Offset = "0x122BD94", VA = "0x122BD94")]
		public PathReferenceAttribute()
		{
		}

		[Token(Token = "0x600292D")]
		[Address(RVA = "0x122BD9C", Offset = "0x122BD9C", VA = "0x122BD9C")]
		public PathReferenceAttribute([Dissonance.NotNull][AttributeAttribute(Name = "PathReferenceAttribute", RVA = "0xEF3F58", Offset = "0xEF3F58")] string basePath)
		{
		}
	}
	[Token(Token = "0x20004B7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4208", Offset = "0xEE4208")]
	internal sealed class SourceTemplateAttribute : Attribute
	{
		[Token(Token = "0x6002930")]
		[Address(RVA = "0x122BF6C", Offset = "0x122BF6C", VA = "0x122BF6C")]
		public SourceTemplateAttribute()
		{
		}
	}
	[Token(Token = "0x20004B8")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE421C", Offset = "0xEE421C")]
	internal sealed class MacroAttribute : Attribute
	{
		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB14C", Offset = "0xEEB14C")]
		private string <Expression>k__BackingField;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB15C", Offset = "0xEEB15C")]
		private int <Editable>k__BackingField;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB16C", Offset = "0xEEB16C")]
		private string <Target>k__BackingField;

		[Token(Token = "0x170003DD")]
		[Dissonance.CanBeNull]
		public string Expression
		{
			[Token(Token = "0x6002931")]
			[Address(RVA = "0x122BBC4", Offset = "0x122BBC4", VA = "0x122BBC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1D24", Offset = "0xEF1D24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002932")]
			[Address(RVA = "0x122BBCC", Offset = "0x122BBCC", VA = "0x122BBCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1D34", Offset = "0xEF1D34")]
			set
			{
			}
		}

		[Token(Token = "0x170003DE")]
		public int Editable
		{
			[Token(Token = "0x6002933")]
			[Address(RVA = "0x122BBD4", Offset = "0x122BBD4", VA = "0x122BBD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1D44", Offset = "0xEF1D44")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002934")]
			[Address(RVA = "0x122BBDC", Offset = "0x122BBDC", VA = "0x122BBDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1D54", Offset = "0xEF1D54")]
			set
			{
			}
		}

		[Token(Token = "0x170003DF")]
		[Dissonance.CanBeNull]
		public string Target
		{
			[Token(Token = "0x6002935")]
			[Address(RVA = "0x122BBE4", Offset = "0x122BBE4", VA = "0x122BBE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1D64", Offset = "0xEF1D64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002936")]
			[Address(RVA = "0x122BBEC", Offset = "0x122BBEC", VA = "0x122BBEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1D74", Offset = "0xEF1D74")]
			set
			{
			}
		}

		[Token(Token = "0x6002937")]
		[Address(RVA = "0x122BBF4", Offset = "0x122BBF4", VA = "0x122BBF4")]
		public MacroAttribute()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4254", Offset = "0xEE4254")]
	internal sealed class AspMvcAreaMasterLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB17C", Offset = "0xEEB17C")]
		private string <Format>k__BackingField;

		[Token(Token = "0x170003E0")]
		[Dissonance.NotNull]
		public string Format
		{
			[Token(Token = "0x6002939")]
			[Address(RVA = "0x122818C", Offset = "0x122818C", VA = "0x122818C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1D84", Offset = "0xEF1D84")]
			get
			{
				return null;
			}
			[Token(Token = "0x600293A")]
			[Address(RVA = "0x1228194", Offset = "0x1228194", VA = "0x1228194")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1D94", Offset = "0xEF1D94")]
			private set
			{
			}
		}

		[Token(Token = "0x6002938")]
		[Address(RVA = "0x1228158", Offset = "0x1228158", VA = "0x1228158")]
		public AspMvcAreaMasterLocationFormatAttribute([Dissonance.NotNull] string format)
		{
		}
	}
	[Token(Token = "0x20004BA")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE428C", Offset = "0xEE428C")]
	internal sealed class AspMvcAreaPartialViewLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB18C", Offset = "0xEEB18C")]
		private string <Format>k__BackingField;

		[Token(Token = "0x170003E1")]
		[Dissonance.NotNull]
		public string Format
		{
			[Token(Token = "0x600293C")]
			[Address(RVA = "0x12281D0", Offset = "0x12281D0", VA = "0x12281D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1DA4", Offset = "0xEF1DA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600293D")]
			[Address(RVA = "0x12281D8", Offset = "0x12281D8", VA = "0x12281D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1DB4", Offset = "0xEF1DB4")]
			private set
			{
			}
		}

		[Token(Token = "0x600293B")]
		[Address(RVA = "0x122819C", Offset = "0x122819C", VA = "0x122819C")]
		public AspMvcAreaPartialViewLocationFormatAttribute([Dissonance.NotNull] string format)
		{
		}
	}
	[Token(Token = "0x20004BB")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE42C4", Offset = "0xEE42C4")]
	internal sealed class AspMvcAreaViewLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB19C", Offset = "0xEEB19C")]
		private string <Format>k__BackingField;

		[Token(Token = "0x170003E2")]
		[Dissonance.NotNull]
		public string Format
		{
			[Token(Token = "0x600293F")]
			[Address(RVA = "0x1228214", Offset = "0x1228214", VA = "0x1228214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1DC4", Offset = "0xEF1DC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002940")]
			[Address(RVA = "0x122821C", Offset = "0x122821C", VA = "0x122821C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1DD4", Offset = "0xEF1DD4")]
			private set
			{
			}
		}

		[Token(Token = "0x600293E")]
		[Address(RVA = "0x12281E0", Offset = "0x12281E0", VA = "0x12281E0")]
		public AspMvcAreaViewLocationFormatAttribute([Dissonance.NotNull] string format)
		{
		}
	}
	[Token(Token = "0x20004BC")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE42FC", Offset = "0xEE42FC")]
	internal sealed class AspMvcMasterLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB1AC", Offset = "0xEEB1AC")]
		private string <Format>k__BackingField;

		[Token(Token = "0x170003E3")]
		[Dissonance.NotNull]
		public string Format
		{
			[Token(Token = "0x6002942")]
			[Address(RVA = "0x12282BC", Offset = "0x12282BC", VA = "0x12282BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1DE4", Offset = "0xEF1DE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002943")]
			[Address(RVA = "0x12282C4", Offset = "0x12282C4", VA = "0x12282C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1DF4", Offset = "0xEF1DF4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002941")]
		[Address(RVA = "0x1228288", Offset = "0x1228288", VA = "0x1228288")]
		public AspMvcMasterLocationFormatAttribute([Dissonance.NotNull] string format)
		{
		}
	}
	[Token(Token = "0x20004BD")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4334", Offset = "0xEE4334")]
	internal sealed class AspMvcPartialViewLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB1BC", Offset = "0xEEB1BC")]
		private string <Format>k__BackingField;

		[Token(Token = "0x170003E4")]
		[Dissonance.NotNull]
		public string Format
		{
			[Token(Token = "0x6002945")]
			[Address(RVA = "0x1228310", Offset = "0x1228310", VA = "0x1228310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1E04", Offset = "0xEF1E04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002946")]
			[Address(RVA = "0x1228318", Offset = "0x1228318", VA = "0x1228318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1E14", Offset = "0xEF1E14")]
			private set
			{
			}
		}

		[Token(Token = "0x6002944")]
		[Address(RVA = "0x12282DC", Offset = "0x12282DC", VA = "0x12282DC")]
		public AspMvcPartialViewLocationFormatAttribute([Dissonance.NotNull] string format)
		{
		}
	}
	[Token(Token = "0x20004BE")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE436C", Offset = "0xEE436C")]
	internal sealed class AspMvcViewLocationFormatAttribute : Attribute
	{
		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB1CC", Offset = "0xEEB1CC")]
		private string <Format>k__BackingField;

		[Token(Token = "0x170003E5")]
		[Dissonance.NotNull]
		public string Format
		{
			[Token(Token = "0x6002948")]
			[Address(RVA = "0x122837C", Offset = "0x122837C", VA = "0x122837C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1E24", Offset = "0xEF1E24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002949")]
			[Address(RVA = "0x1228384", Offset = "0x1228384", VA = "0x1228384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1E34", Offset = "0xEF1E34")]
			private set
			{
			}
		}

		[Token(Token = "0x6002947")]
		[Address(RVA = "0x1228348", Offset = "0x1228348", VA = "0x1228348")]
		public AspMvcViewLocationFormatAttribute([Dissonance.NotNull] string format)
		{
		}
	}
	[Token(Token = "0x20004BF")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE43A4", Offset = "0xEE43A4")]
	internal sealed class AspMvcActionAttribute : Attribute
	{
		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB1DC", Offset = "0xEEB1DC")]
		private string <AnonymousProperty>k__BackingField;

		[Token(Token = "0x170003E6")]
		[Dissonance.CanBeNull]
		public string AnonymousProperty
		{
			[Token(Token = "0x600294C")]
			[Address(RVA = "0x12280F4", Offset = "0x12280F4", VA = "0x12280F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1E44", Offset = "0xEF1E44")]
			get
			{
				return null;
			}
			[Token(Token = "0x600294D")]
			[Address(RVA = "0x12280FC", Offset = "0x12280FC", VA = "0x12280FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1E54", Offset = "0xEF1E54")]
			private set
			{
			}
		}

		[Token(Token = "0x600294A")]
		[Address(RVA = "0x12280B8", Offset = "0x12280B8", VA = "0x12280B8")]
		public AspMvcActionAttribute()
		{
		}

		[Token(Token = "0x600294B")]
		[Address(RVA = "0x12280C0", Offset = "0x12280C0", VA = "0x12280C0")]
		public AspMvcActionAttribute([Dissonance.NotNull] string anonymousProperty)
		{
		}
	}
	[Token(Token = "0x20004C0")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE43B8", Offset = "0xEE43B8")]
	internal sealed class AspMvcAreaAttribute : Attribute
	{
		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB1EC", Offset = "0xEEB1EC")]
		private string <AnonymousProperty>k__BackingField;

		[Token(Token = "0x170003E7")]
		[Dissonance.CanBeNull]
		public string AnonymousProperty
		{
			[Token(Token = "0x6002950")]
			[Address(RVA = "0x1228148", Offset = "0x1228148", VA = "0x1228148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1E64", Offset = "0xEF1E64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002951")]
			[Address(RVA = "0x1228150", Offset = "0x1228150", VA = "0x1228150")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1E74", Offset = "0xEF1E74")]
			private set
			{
			}
		}

		[Token(Token = "0x600294E")]
		[Address(RVA = "0x122810C", Offset = "0x122810C", VA = "0x122810C")]
		public AspMvcAreaAttribute()
		{
		}

		[Token(Token = "0x600294F")]
		[Address(RVA = "0x1228114", Offset = "0x1228114", VA = "0x1228114")]
		public AspMvcAreaAttribute([Dissonance.NotNull] string anonymousProperty)
		{
		}
	}
	[Token(Token = "0x20004C1")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE43CC", Offset = "0xEE43CC")]
	internal sealed class AspMvcControllerAttribute : Attribute
	{
		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB1FC", Offset = "0xEEB1FC")]
		private string <AnonymousProperty>k__BackingField;

		[Token(Token = "0x170003E8")]
		[Dissonance.CanBeNull]
		public string AnonymousProperty
		{
			[Token(Token = "0x6002954")]
			[Address(RVA = "0x1228260", Offset = "0x1228260", VA = "0x1228260")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1E84", Offset = "0xEF1E84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002955")]
			[Address(RVA = "0x1228268", Offset = "0x1228268", VA = "0x1228268")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1E94", Offset = "0xEF1E94")]
			private set
			{
			}
		}

		[Token(Token = "0x6002952")]
		[Address(RVA = "0x1228224", Offset = "0x1228224", VA = "0x1228224")]
		public AspMvcControllerAttribute()
		{
		}

		[Token(Token = "0x6002953")]
		[Address(RVA = "0x122822C", Offset = "0x122822C", VA = "0x122822C")]
		public AspMvcControllerAttribute([Dissonance.NotNull] string anonymousProperty)
		{
		}
	}
	[Token(Token = "0x20004C2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE43E0", Offset = "0xEE43E0")]
	internal sealed class AspMvcMasterAttribute : Attribute
	{
		[Token(Token = "0x6002956")]
		[Address(RVA = "0x1228280", Offset = "0x1228280", VA = "0x1228280")]
		public AspMvcMasterAttribute()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE43F4", Offset = "0xEE43F4")]
	internal sealed class AspMvcModelTypeAttribute : Attribute
	{
		[Token(Token = "0x6002957")]
		[Address(RVA = "0x12282CC", Offset = "0x12282CC", VA = "0x12282CC")]
		public AspMvcModelTypeAttribute()
		{
		}
	}
	[Token(Token = "0x20004C4")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4408", Offset = "0xEE4408")]
	internal sealed class AspMvcPartialViewAttribute : Attribute
	{
		[Token(Token = "0x6002958")]
		[Address(RVA = "0x12282D4", Offset = "0x12282D4", VA = "0x12282D4")]
		public AspMvcPartialViewAttribute()
		{
		}
	}
	[Token(Token = "0x20004C5")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE441C", Offset = "0xEE441C")]
	internal sealed class AspMvcSuppressViewErrorAttribute : Attribute
	{
		[Token(Token = "0x6002959")]
		[Address(RVA = "0x1228320", Offset = "0x1228320", VA = "0x1228320")]
		public AspMvcSuppressViewErrorAttribute()
		{
		}
	}
	[Token(Token = "0x20004C6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4430", Offset = "0xEE4430")]
	internal sealed class AspMvcDisplayTemplateAttribute : Attribute
	{
		[Token(Token = "0x600295A")]
		[Address(RVA = "0x1228270", Offset = "0x1228270", VA = "0x1228270")]
		public AspMvcDisplayTemplateAttribute()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4444", Offset = "0xEE4444")]
	internal sealed class AspMvcEditorTemplateAttribute : Attribute
	{
		[Token(Token = "0x600295B")]
		[Address(RVA = "0x1228278", Offset = "0x1228278", VA = "0x1228278")]
		public AspMvcEditorTemplateAttribute()
		{
		}
	}
	[Token(Token = "0x20004C8")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4458", Offset = "0xEE4458")]
	internal sealed class AspMvcTemplateAttribute : Attribute
	{
		[Token(Token = "0x600295C")]
		[Address(RVA = "0x1228328", Offset = "0x1228328", VA = "0x1228328")]
		public AspMvcTemplateAttribute()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE446C", Offset = "0xEE446C")]
	internal sealed class AspMvcViewAttribute : Attribute
	{
		[Token(Token = "0x600295D")]
		[Address(RVA = "0x1228330", Offset = "0x1228330", VA = "0x1228330")]
		public AspMvcViewAttribute()
		{
		}
	}
	[Token(Token = "0x20004CA")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4480", Offset = "0xEE4480")]
	internal sealed class AspMvcViewComponentAttribute : Attribute
	{
		[Token(Token = "0x600295E")]
		[Address(RVA = "0x1228338", Offset = "0x1228338", VA = "0x1228338")]
		public AspMvcViewComponentAttribute()
		{
		}
	}
	[Token(Token = "0x20004CB")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4494", Offset = "0xEE4494")]
	internal sealed class AspMvcViewComponentViewAttribute : Attribute
	{
		[Token(Token = "0x600295F")]
		[Address(RVA = "0x1228340", Offset = "0x1228340", VA = "0x1228340")]
		public AspMvcViewComponentViewAttribute()
		{
		}
	}
	[Token(Token = "0x20004CC")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE44A8", Offset = "0xEE44A8")]
	internal sealed class AspMvcActionSelectorAttribute : Attribute
	{
		[Token(Token = "0x6002960")]
		[Address(RVA = "0x1228104", Offset = "0x1228104", VA = "0x1228104")]
		public AspMvcActionSelectorAttribute()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE44BC", Offset = "0xEE44BC")]
	internal sealed class HtmlElementAttributesAttribute : Attribute
	{
		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB20C", Offset = "0xEEB20C")]
		private string <Name>k__BackingField;

		[Token(Token = "0x170003E9")]
		[Dissonance.CanBeNull]
		public string Name
		{
			[Token(Token = "0x6002963")]
			[Address(RVA = "0x1228614", Offset = "0x1228614", VA = "0x1228614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1EA4", Offset = "0xEF1EA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002964")]
			[Address(RVA = "0x122861C", Offset = "0x122861C", VA = "0x122861C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1EB4", Offset = "0xEF1EB4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002961")]
		[Address(RVA = "0x12285D8", Offset = "0x12285D8", VA = "0x12285D8")]
		public HtmlElementAttributesAttribute()
		{
		}

		[Token(Token = "0x6002962")]
		[Address(RVA = "0x12285E0", Offset = "0x12285E0", VA = "0x12285E0")]
		public HtmlElementAttributesAttribute([Dissonance.NotNull] string name)
		{
		}
	}
	[Token(Token = "0x20004CE")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE44D0", Offset = "0xEE44D0")]
	internal sealed class HtmlAttributeValueAttribute : Attribute
	{
		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB21C", Offset = "0xEEB21C")]
		private string <Name>k__BackingField;

		[Token(Token = "0x170003EA")]
		[Dissonance.NotNull]
		public string Name
		{
			[Token(Token = "0x6002966")]
			[Address(RVA = "0x12285C8", Offset = "0x12285C8", VA = "0x12285C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1EC4", Offset = "0xEF1EC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002967")]
			[Address(RVA = "0x12285D0", Offset = "0x12285D0", VA = "0x12285D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1ED4", Offset = "0xEF1ED4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002965")]
		[Address(RVA = "0x1228594", Offset = "0x1228594", VA = "0x1228594")]
		public HtmlAttributeValueAttribute([Dissonance.NotNull] string name)
		{
		}
	}
	[Token(Token = "0x20004CF")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE44E4", Offset = "0xEE44E4")]
	internal sealed class RazorSectionAttribute : Attribute
	{
		[Token(Token = "0x6002968")]
		[Address(RVA = "0x122BF44", Offset = "0x122BF44", VA = "0x122BF44")]
		public RazorSectionAttribute()
		{
		}
	}
	[Token(Token = "0x20004D0")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE44F8", Offset = "0xEE44F8")]
	internal sealed class CollectionAccessAttribute : Attribute
	{
		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB22C", Offset = "0xEEB22C")]
		private Dissonance.CollectionAccessType <CollectionAccessType>k__BackingField;

		[Token(Token = "0x170003EB")]
		public Dissonance.CollectionAccessType CollectionAccessType
		{
			[Token(Token = "0x600296A")]
			[Address(RVA = "0x12284D8", Offset = "0x12284D8", VA = "0x12284D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1EE4", Offset = "0xEF1EE4")]
			get
			{
				return default(Dissonance.CollectionAccessType);
			}
			[Token(Token = "0x600296B")]
			[Address(RVA = "0x12284E0", Offset = "0x12284E0", VA = "0x12284E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1EF4", Offset = "0xEF1EF4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002969")]
		[Address(RVA = "0x12284AC", Offset = "0x12284AC", VA = "0x12284AC")]
		public CollectionAccessAttribute(Dissonance.CollectionAccessType collectionAccessType)
		{
		}
	}
	[Token(Token = "0x20004D1")]
	[Flags]
	internal enum CollectionAccessType
	{
		[Token(Token = "0x4001E19")]
		None = 0,
		[Token(Token = "0x4001E1A")]
		Read = 1,
		[Token(Token = "0x4001E1B")]
		ModifyExistingContent = 2,
		[Token(Token = "0x4001E1C")]
		UpdatedContent = 6
	}
	[Token(Token = "0x20004D2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE451C", Offset = "0xEE451C")]
	internal sealed class AssertionMethodAttribute : Attribute
	{
		[Token(Token = "0x600296C")]
		[Address(RVA = "0x1228450", Offset = "0x1228450", VA = "0x1228450")]
		public AssertionMethodAttribute()
		{
		}
	}
	[Token(Token = "0x20004D3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4530", Offset = "0xEE4530")]
	internal sealed class AssertionConditionAttribute : Attribute
	{
		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB23C", Offset = "0xEEB23C")]
		private Dissonance.AssertionConditionType <ConditionType>k__BackingField;

		[Token(Token = "0x170003EC")]
		public Dissonance.AssertionConditionType ConditionType
		{
			[Token(Token = "0x600296E")]
			[Address(RVA = "0x1228440", Offset = "0x1228440", VA = "0x1228440")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1F04", Offset = "0xEF1F04")]
			get
			{
				return default(Dissonance.AssertionConditionType);
			}
			[Token(Token = "0x600296F")]
			[Address(RVA = "0x1228448", Offset = "0x1228448", VA = "0x1228448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1F14", Offset = "0xEF1F14")]
			private set
			{
			}
		}

		[Token(Token = "0x600296D")]
		[Address(RVA = "0x1228414", Offset = "0x1228414", VA = "0x1228414")]
		public AssertionConditionAttribute(Dissonance.AssertionConditionType conditionType)
		{
		}
	}
	[Token(Token = "0x20004D4")]
	internal enum AssertionConditionType
	{
		[Token(Token = "0x4001E1F")]
		IS_TRUE,
		[Token(Token = "0x4001E20")]
		IS_FALSE,
		[Token(Token = "0x4001E21")]
		IS_NULL,
		[Token(Token = "0x4001E22")]
		IS_NOT_NULL
	}
	[Token(Token = "0x20004D5")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xEE4544", Offset = "0xEE4544")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4544", Offset = "0xEE4544")]
	internal sealed class TerminatesProgramAttribute : Attribute
	{
		[Token(Token = "0x6002970")]
		[Address(RVA = "0x122BFB8", Offset = "0x122BFB8", VA = "0x122BFB8")]
		public TerminatesProgramAttribute()
		{
		}
	}
	[Token(Token = "0x20004D6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4594", Offset = "0xEE4594")]
	internal sealed class LinqTunnelAttribute : Attribute
	{
		[Token(Token = "0x6002971")]
		[Address(RVA = "0x122BB4C", Offset = "0x122BB4C", VA = "0x122BB4C")]
		public LinqTunnelAttribute()
		{
		}
	}
	[Token(Token = "0x20004D7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE45A8", Offset = "0xEE45A8")]
	internal sealed class NoEnumerationAttribute : Attribute
	{
		[Token(Token = "0x6002972")]
		[Address(RVA = "0x122BD30", Offset = "0x122BD30", VA = "0x122BD30")]
		public NoEnumerationAttribute()
		{
		}
	}
	[Token(Token = "0x20004D8")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE45BC", Offset = "0xEE45BC")]
	internal sealed class RegexPatternAttribute : Attribute
	{
		[Token(Token = "0x6002973")]
		[Address(RVA = "0x122BF64", Offset = "0x122BF64", VA = "0x122BF64")]
		public RegexPatternAttribute()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE45D0", Offset = "0xEE45D0")]
	internal sealed class NoReorderAttribute : Attribute
	{
		[Token(Token = "0x6002974")]
		[Address(RVA = "0x122BD38", Offset = "0x122BD38", VA = "0x122BD38")]
		public NoReorderAttribute()
		{
		}
	}
	[Token(Token = "0x20004DA")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE45E4", Offset = "0xEE45E4")]
	internal sealed class XamlItemsControlAttribute : Attribute
	{
		[Token(Token = "0x6002975")]
		[Address(RVA = "0x122C0F4", Offset = "0x122C0F4", VA = "0x122C0F4")]
		public XamlItemsControlAttribute()
		{
		}
	}
	[Token(Token = "0x20004DB")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE45F8", Offset = "0xEE45F8")]
	internal sealed class XamlItemBindingOfItemsControlAttribute : Attribute
	{
		[Token(Token = "0x6002976")]
		[Address(RVA = "0x122C0EC", Offset = "0x122C0EC", VA = "0x122C0EC")]
		public XamlItemBindingOfItemsControlAttribute()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE460C", Offset = "0xEE460C")]
	internal sealed class AspChildControlTypeAttribute : Attribute
	{
		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB24C", Offset = "0xEEB24C")]
		private string <TagName>k__BackingField;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB25C", Offset = "0xEEB25C")]
		private Type <ControlType>k__BackingField;

		[Token(Token = "0x170003ED")]
		[Dissonance.NotNull]
		public string TagName
		{
			[Token(Token = "0x6002978")]
			[Address(RVA = "0x1228080", Offset = "0x1228080", VA = "0x1228080")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1F24", Offset = "0xEF1F24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002979")]
			[Address(RVA = "0x1228088", Offset = "0x1228088", VA = "0x1228088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1F34", Offset = "0xEF1F34")]
			private set
			{
			}
		}

		[Token(Token = "0x170003EE")]
		[Dissonance.NotNull]
		public Type ControlType
		{
			[Token(Token = "0x600297A")]
			[Address(RVA = "0x1228090", Offset = "0x1228090", VA = "0x1228090")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1F44", Offset = "0xEF1F44")]
			get
			{
				return null;
			}
			[Token(Token = "0x600297B")]
			[Address(RVA = "0x1228098", Offset = "0x1228098", VA = "0x1228098")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1F54", Offset = "0xEF1F54")]
			private set
			{
			}
		}

		[Token(Token = "0x6002977")]
		[Address(RVA = "0x1228030", Offset = "0x1228030", VA = "0x1228030")]
		public AspChildControlTypeAttribute([Dissonance.NotNull] string tagName, [Dissonance.NotNull] Type controlType)
		{
		}
	}
	[Token(Token = "0x20004DD")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4644", Offset = "0xEE4644")]
	internal sealed class AspDataFieldAttribute : Attribute
	{
		[Token(Token = "0x600297C")]
		[Address(RVA = "0x12280A0", Offset = "0x12280A0", VA = "0x12280A0")]
		public AspDataFieldAttribute()
		{
		}
	}
	[Token(Token = "0x20004DE")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4658", Offset = "0xEE4658")]
	internal sealed class AspDataFieldsAttribute : Attribute
	{
		[Token(Token = "0x600297D")]
		[Address(RVA = "0x12280A8", Offset = "0x12280A8", VA = "0x12280A8")]
		public AspDataFieldsAttribute()
		{
		}
	}
	[Token(Token = "0x20004DF")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE466C", Offset = "0xEE466C")]
	internal sealed class AspMethodPropertyAttribute : Attribute
	{
		[Token(Token = "0x600297E")]
		[Address(RVA = "0x12280B0", Offset = "0x12280B0", VA = "0x12280B0")]
		public AspMethodPropertyAttribute()
		{
		}
	}
	[Token(Token = "0x20004E0")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4680", Offset = "0xEE4680")]
	internal sealed class AspRequiredAttributeAttribute : Attribute
	{
		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB26C", Offset = "0xEEB26C")]
		private string <Attribute>k__BackingField;

		[Token(Token = "0x170003EF")]
		[Dissonance.NotNull]
		public string Attribute
		{
			[Token(Token = "0x6002980")]
			[Address(RVA = "0x12283C0", Offset = "0x12283C0", VA = "0x12283C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1F64", Offset = "0xEF1F64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002981")]
			[Address(RVA = "0x12283C8", Offset = "0x12283C8", VA = "0x12283C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1F74", Offset = "0xEF1F74")]
			private set
			{
			}
		}

		[Token(Token = "0x600297F")]
		[Address(RVA = "0x122838C", Offset = "0x122838C", VA = "0x122838C")]
		public AspRequiredAttributeAttribute([Dissonance.NotNull] string attribute)
		{
		}
	}
	[Token(Token = "0x20004E1")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE46B8", Offset = "0xEE46B8")]
	internal sealed class AspTypePropertyAttribute : Attribute
	{
		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB27C", Offset = "0xEEB27C")]
		private bool <CreateConstructorReferences>k__BackingField;

		[Token(Token = "0x170003F0")]
		public bool CreateConstructorReferences
		{
			[Token(Token = "0x6002982")]
			[Address(RVA = "0x12283D0", Offset = "0x12283D0", VA = "0x12283D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1F84", Offset = "0xEF1F84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002983")]
			[Address(RVA = "0x12283D8", Offset = "0x12283D8", VA = "0x12283D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1F94", Offset = "0xEF1F94")]
			private set
			{
			}
		}

		[Token(Token = "0x6002984")]
		[Address(RVA = "0x12283E4", Offset = "0x12283E4", VA = "0x12283E4")]
		public AspTypePropertyAttribute(bool createConstructorReferences)
		{
		}
	}
	[Token(Token = "0x20004E2")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE46CC", Offset = "0xEE46CC")]
	internal sealed class RazorImportNamespaceAttribute : Attribute
	{
		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB28C", Offset = "0xEEB28C")]
		private string <Name>k__BackingField;

		[Token(Token = "0x170003F1")]
		[Dissonance.NotNull]
		public string Name
		{
			[Token(Token = "0x6002986")]
			[Address(RVA = "0x122BEBC", Offset = "0x122BEBC", VA = "0x122BEBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1FA4", Offset = "0xEF1FA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002987")]
			[Address(RVA = "0x122BEC4", Offset = "0x122BEC4", VA = "0x122BEC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1FB4", Offset = "0xEF1FB4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002985")]
		[Address(RVA = "0x122BE88", Offset = "0x122BE88", VA = "0x122BE88")]
		public RazorImportNamespaceAttribute([Dissonance.NotNull] string name)
		{
		}
	}
	[Token(Token = "0x20004E3")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4704", Offset = "0xEE4704")]
	internal sealed class RazorInjectionAttribute : Attribute
	{
		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB29C", Offset = "0xEEB29C")]
		private string <Type>k__BackingField;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB2AC", Offset = "0xEEB2AC")]
		private string <FieldName>k__BackingField;

		[Token(Token = "0x170003F2")]
		[Dissonance.NotNull]
		public string Type
		{
			[Token(Token = "0x6002989")]
			[Address(RVA = "0x122BF1C", Offset = "0x122BF1C", VA = "0x122BF1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1FC4", Offset = "0xEF1FC4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600298A")]
			[Address(RVA = "0x122BF24", Offset = "0x122BF24", VA = "0x122BF24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1FD4", Offset = "0xEF1FD4")]
			private set
			{
			}
		}

		[Token(Token = "0x170003F3")]
		[Dissonance.NotNull]
		public string FieldName
		{
			[Token(Token = "0x600298B")]
			[Address(RVA = "0x122BF2C", Offset = "0x122BF2C", VA = "0x122BF2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1FE4", Offset = "0xEF1FE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600298C")]
			[Address(RVA = "0x122BF34", Offset = "0x122BF34", VA = "0x122BF34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF1FF4", Offset = "0xEF1FF4")]
			private set
			{
			}
		}

		[Token(Token = "0x6002988")]
		[Address(RVA = "0x122BECC", Offset = "0x122BECC", VA = "0x122BECC")]
		public RazorInjectionAttribute([Dissonance.NotNull] string type, [Dissonance.NotNull] string fieldName)
		{
		}
	}
	[Token(Token = "0x20004E4")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE473C", Offset = "0xEE473C")]
	internal sealed class RazorDirectiveAttribute : Attribute
	{
		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB2BC", Offset = "0xEEB2BC")]
		private string <Directive>k__BackingField;

		[Token(Token = "0x170003F4")]
		[Dissonance.NotNull]
		public string Directive
		{
			[Token(Token = "0x600298E")]
			[Address(RVA = "0x122BE70", Offset = "0x122BE70", VA = "0x122BE70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2004", Offset = "0xEF2004")]
			get
			{
				return null;
			}
			[Token(Token = "0x600298F")]
			[Address(RVA = "0x122BE78", Offset = "0x122BE78", VA = "0x122BE78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2014", Offset = "0xEF2014")]
			private set
			{
			}
		}

		[Token(Token = "0x600298D")]
		[Address(RVA = "0x122BE3C", Offset = "0x122BE3C", VA = "0x122BE3C")]
		public RazorDirectiveAttribute([Dissonance.NotNull] string directive)
		{
		}
	}
	[Token(Token = "0x20004E5")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4774", Offset = "0xEE4774")]
	internal sealed class RazorHelperCommonAttribute : Attribute
	{
		[Token(Token = "0x6002990")]
		[Address(RVA = "0x122BE80", Offset = "0x122BE80", VA = "0x122BE80")]
		public RazorHelperCommonAttribute()
		{
		}
	}
	[Token(Token = "0x20004E6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE4788", Offset = "0xEE4788")]
	internal sealed class RazorLayoutAttribute : Attribute
	{
		[Token(Token = "0x6002991")]
		[Address(RVA = "0x122BF3C", Offset = "0x122BF3C", VA = "0x122BF3C")]
		public RazorLayoutAttribute()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE479C", Offset = "0xEE479C")]
	internal sealed class RazorWriteLiteralMethodAttribute : Attribute
	{
		[Token(Token = "0x6002992")]
		[Address(RVA = "0x122BF4C", Offset = "0x122BF4C", VA = "0x122BF4C")]
		public RazorWriteLiteralMethodAttribute()
		{
		}
	}
	[Token(Token = "0x20004E8")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE47B0", Offset = "0xEE47B0")]
	internal sealed class RazorWriteMethodAttribute : Attribute
	{
		[Token(Token = "0x6002993")]
		[Address(RVA = "0x122BF54", Offset = "0x122BF54", VA = "0x122BF54")]
		public RazorWriteMethodAttribute()
		{
		}
	}
	[Token(Token = "0x20004E9")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xEE47C4", Offset = "0xEE47C4")]
	internal sealed class RazorWriteMethodParameterAttribute : Attribute
	{
		[Token(Token = "0x6002994")]
		[Address(RVA = "0x122BF5C", Offset = "0x122BF5C", VA = "0x122BF5C")]
		public RazorWriteMethodParameterAttribute()
		{
		}
	}
}
namespace Dissonance.Integrations.UNet_LLAPI
{
	[Token(Token = "0x20004EA")]
	public class UNetClient : BaseClient<UNetServer, UNetClient, int>
	{
		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly UNetCommsNetwork _network;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly ClientConnectionDetails _server;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly byte[] _readBuffer;

		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool _connectionEstablished;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int _socket;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int _connection;

		[Token(Token = "0x6002995")]
		[Address(RVA = "0x122A8B8", Offset = "0x122A8B8", VA = "0x122A8B8")]
		public UNetClient([Dissonance.NotNull] UNetCommsNetwork network, ClientConnectionDetails server)
		{
		}

		[Token(Token = "0x6002996")]
		[Address(RVA = "0x122A978", Offset = "0x122A978", VA = "0x122A978", Slot = "8")]
		public override void Connect()
		{
		}

		[Token(Token = "0x6002997")]
		[Address(RVA = "0x122AAA8", Offset = "0x122AAA8", VA = "0x122AAA8", Slot = "9")]
		public override void Disconnect()
		{
		}

		[Token(Token = "0x6002998")]
		[Address(RVA = "0x122ABB4", Offset = "0x122ABB4", VA = "0x122ABB4", Slot = "11")]
		protected override void ReadMessages()
		{
		}

		[Token(Token = "0x6002999")]
		[Address(RVA = "0x122AEAC", Offset = "0x122AEAC", VA = "0x122AEAC")]
		private void Send(int channel, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x600299A")]
		[Address(RVA = "0x122B0B4", Offset = "0x122B0B4", VA = "0x122B0B4", Slot = "12")]
		protected override void SendReliable(ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x600299B")]
		[Address(RVA = "0x122B0D8", Offset = "0x122B0D8", VA = "0x122B0D8", Slot = "13")]
		protected override void SendUnreliable(ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x600299C")]
		[Address(RVA = "0x122ADE8", Offset = "0x122ADE8", VA = "0x122ADE8")]
		private bool IsFatalError(NetworkError error)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004EB")]
	public struct ClientConnectionDetails
	{
		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB2CC", Offset = "0xEEB2CC")]
		private string <Address>k__BackingField;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB2DC", Offset = "0xEEB2DC")]
		private int <Port>k__BackingField;

		[Token(Token = "0x170003F5")]
		public string Address
		{
			[Token(Token = "0x600299D")]
			[Address(RVA = "0x1001584", Offset = "0x1001584", VA = "0x1001584")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2024", Offset = "0xEF2024")]
			get
			{
				return null;
			}
			[Token(Token = "0x600299E")]
			[Address(RVA = "0x100158C", Offset = "0x100158C", VA = "0x100158C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2034", Offset = "0xEF2034")]
			set
			{
			}
		}

		[Token(Token = "0x170003F6")]
		public int Port
		{
			[Token(Token = "0x600299F")]
			[Address(RVA = "0x1001594", Offset = "0x1001594", VA = "0x1001594")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2044", Offset = "0xEF2044")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60029A0")]
			[Address(RVA = "0x100159C", Offset = "0x100159C", VA = "0x100159C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2054", Offset = "0xEF2054")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20004EC")]
	public struct ServerConnectionDetails
	{
		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB2EC", Offset = "0xEEB2EC")]
		private int <Port>k__BackingField;

		[Token(Token = "0x170003F7")]
		public int Port
		{
			[Token(Token = "0x60029A1")]
			[Address(RVA = "0x10015A4", Offset = "0x10015A4", VA = "0x10015A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2064", Offset = "0xEF2064")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60029A2")]
			[Address(RVA = "0x10015AC", Offset = "0x10015AC", VA = "0x10015AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2074", Offset = "0xEF2074")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20004ED")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0xEE47D8", Offset = "0xEE47D8")]
	public class UNetCommsNetwork : BaseCommsNetwork<UNetServer, UNetClient, int, ClientConnectionDetails, ServerConnectionDetails>
	{
		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB2FC", Offset = "0xEEB2FC")]
		private string <ServerAddress>k__BackingField;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private int _maxConnections;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private readonly int _voiceChannel;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private readonly int _sysChannel;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private int _port;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly HostTopology _topology;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0xEEB32C", Offset = "0xEEB32C")]
		private bool _disableNetworkLifetimeManagement;

		[Token(Token = "0x170003F8")]
		public string ServerAddress
		{
			[Token(Token = "0x60029A3")]
			[Address(RVA = "0x122B0FC", Offset = "0x122B0FC", VA = "0x122B0FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2084", Offset = "0xEF2084")]
			get
			{
				return null;
			}
			[Token(Token = "0x60029A4")]
			[Address(RVA = "0x122B104", Offset = "0x122B104", VA = "0x122B104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2094", Offset = "0xEF2094")]
			private set
			{
			}
		}

		[Token(Token = "0x170003F9")]
		public int MaxConnections
		{
			[Token(Token = "0x60029A5")]
			[Address(RVA = "0x122B10C", Offset = "0x122B10C", VA = "0x122B10C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003FA")]
		public int VoiceDataChannel
		{
			[Token(Token = "0x60029A6")]
			[Address(RVA = "0x122B114", Offset = "0x122B114", VA = "0x122B114")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003FB")]
		public int SystemMessagesChannel
		{
			[Token(Token = "0x60029A7")]
			[Address(RVA = "0x122B11C", Offset = "0x122B11C", VA = "0x122B11C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003FC")]
		public ushort Port
		{
			[Token(Token = "0x60029A8")]
			[Address(RVA = "0x122B124", Offset = "0x122B124", VA = "0x122B124")]
			get
			{
				return default(ushort);
			}
			[Token(Token = "0x60029A9")]
			[Address(RVA = "0x122B12C", Offset = "0x122B12C", VA = "0x122B12C")]
			set
			{
			}
		}

		[Token(Token = "0x170003FD")]
		[Dissonance.NotNull]
		internal HostTopology Topology
		{
			[Token(Token = "0x60029AA")]
			[Address(RVA = "0x122B1B8", Offset = "0x122B1B8", VA = "0x122B1B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60029AB")]
		[Address(RVA = "0x122B1C0", Offset = "0x122B1C0", VA = "0x122B1C0")]
		public UNetCommsNetwork()
		{
		}

		[Token(Token = "0x60029AC")]
		[Address(RVA = "0x122B2B4", Offset = "0x122B2B4", VA = "0x122B2B4", Slot = "32")]
		protected override UNetServer CreateServer(ServerConnectionDetails details)
		{
			return null;
		}

		[Token(Token = "0x60029AD")]
		[Address(RVA = "0x122B3C8", Offset = "0x122B3C8", VA = "0x122B3C8", Slot = "33")]
		protected override UNetClient CreateClient(ClientConnectionDetails details)
		{
			return null;
		}

		[Token(Token = "0x60029AE")]
		[Address(RVA = "0x122B440", Offset = "0x122B440", VA = "0x122B440", Slot = "34")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60029AF")]
		[Address(RVA = "0x122B4B8", Offset = "0x122B4B8", VA = "0x122B4B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60029B0")]
		[Address(RVA = "0x1229484", Offset = "0x1229484", VA = "0x1229484")]
		public void InitializeAsDedicatedServer()
		{
		}

		[Token(Token = "0x60029B1")]
		[Address(RVA = "0x1229EB0", Offset = "0x1229EB0", VA = "0x1229EB0")]
		public void InitializeAsServer()
		{
		}

		[Token(Token = "0x60029B2")]
		[Address(RVA = "0x1228A08", Offset = "0x1228A08", VA = "0x1228A08")]
		public void InitializeAsClient(string serverAddress)
		{
		}

		[Token(Token = "0x60029B3")]
		[Address(RVA = "0x122AFB8", Offset = "0x122AFB8", VA = "0x122AFB8")]
		internal static NetworkError Send(int socket, int connection, int channel, ArraySegment<byte> packet)
		{
			return default(NetworkError);
		}
	}
	[Token(Token = "0x20004EE")]
	public class UNetServer : BaseServer<UNetServer, UNetClient, int>
	{
		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly UNetCommsNetwork _network;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly ServerConnectionDetails _connection;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly byte[] _receiveBuffer;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _socketValid;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int _socket;

		[Token(Token = "0x60029B4")]
		[Address(RVA = "0x122B324", Offset = "0x122B324", VA = "0x122B324")]
		public UNetServer(UNetCommsNetwork network, ServerConnectionDetails connection)
		{
		}

		[Token(Token = "0x60029B5")]
		[Address(RVA = "0x122B530", Offset = "0x122B530", VA = "0x122B530", Slot = "9")]
		public override void Connect()
		{
		}

		[Token(Token = "0x60029B6")]
		[Address(RVA = "0x122B658", Offset = "0x122B658", VA = "0x122B658", Slot = "10")]
		public override void Disconnect()
		{
		}

		[Token(Token = "0x60029B7")]
		[Address(RVA = "0x122B6E8", Offset = "0x122B6E8", VA = "0x122B6E8", Slot = "16")]
		protected override void ReadMessages()
		{
		}

		[Token(Token = "0x60029B8")]
		[Address(RVA = "0x122B9CC", Offset = "0x122B9CC", VA = "0x122B9CC")]
		private void Send(int connection, int channel, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x60029B9")]
		[Address(RVA = "0x122BAEC", Offset = "0x122BAEC", VA = "0x122BAEC", Slot = "12")]
		protected override void SendReliable(int connection, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x60029BA")]
		[Address(RVA = "0x122BB10", Offset = "0x122BB10", VA = "0x122BB10", Slot = "13")]
		protected override void SendUnreliable(int connection, ArraySegment<byte> packet)
		{
		}

		[Token(Token = "0x60029BB")]
		[Address(RVA = "0x122B908", Offset = "0x122B908", VA = "0x122B908")]
		private bool IsFatalError(NetworkError error)
		{
			return default(bool);
		}
	}
}
namespace Dissonance.Integrations.UNet_LLAPI.Demo
{
	[Token(Token = "0x20004EF")]
	public class StateManager : MonoBehaviour
	{
		[Token(Token = "0x2000666")]
		private interface IState
		{
			[Token(Token = "0x6002EA1")]
			void Awake();

			[Token(Token = "0x6002EA2")]
			[Dissonance.NotNull]
			IState Update();
		}

		[Token(Token = "0x2000667")]
		private class LoadWorld : IState
		{
			[Token(Token = "0x4002331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly IState _nextState;

			[Token(Token = "0x6002EA3")]
			[Address(RVA = "0x1229D34", Offset = "0x1229D34", VA = "0x1229D34")]
			public LoadWorld(IState nextState)
			{
			}

			[Token(Token = "0x6002EA4")]
			[Address(RVA = "0x1229D68", Offset = "0x1229D68", VA = "0x1229D68", Slot = "4")]
			public void Awake()
			{
			}

			[Token(Token = "0x6002EA5")]
			[Address(RVA = "0x1229DF8", Offset = "0x1229DF8", VA = "0x1229DF8", Slot = "5")]
			public IState Update()
			{
				return null;
			}
		}

		[Token(Token = "0x2000668")]
		private class UnloadWorld : IState
		{
			[Token(Token = "0x4002332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly IState _nextState;

			[Token(Token = "0x6002EA6")]
			[Address(RVA = "0x12293C4", Offset = "0x12293C4", VA = "0x12293C4")]
			public UnloadWorld(IState nextState)
			{
			}

			[Token(Token = "0x6002EA7")]
			[Address(RVA = "0x122A7D8", Offset = "0x122A7D8", VA = "0x122A7D8", Slot = "4")]
			public void Awake()
			{
			}

			[Token(Token = "0x6002EA8")]
			[Address(RVA = "0x122A8A0", Offset = "0x122A8A0", VA = "0x122A8A0", Slot = "5")]
			public IState Update()
			{
				return null;
			}
		}

		[Token(Token = "0x2000669")]
		private class InMenu : IState
		{
			[Token(Token = "0x4002333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string _serverIp;

			[Token(Token = "0x6002EA9")]
			[Address(RVA = "0x12297D8", Offset = "0x12297D8", VA = "0x12297D8", Slot = "4")]
			public void Awake()
			{
			}

			[Token(Token = "0x6002EAA")]
			[Address(RVA = "0x12297DC", Offset = "0x12297DC", VA = "0x12297DC", Slot = "5")]
			public IState Update()
			{
				return null;
			}

			[Token(Token = "0x6002EAB")]
			[Address(RVA = "0x122870C", Offset = "0x122870C", VA = "0x122870C")]
			public InMenu()
			{
			}
		}

		[Token(Token = "0x200066A")]
		private class DedicatedServer : IState
		{
			[Token(Token = "0x4002334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private UNetCommsNetwork _net;

			[Token(Token = "0x6002EAC")]
			[Address(RVA = "0x12293F8", Offset = "0x12293F8", VA = "0x12293F8", Slot = "4")]
			public void Awake()
			{
			}

			[Token(Token = "0x6002EAD")]
			[Address(RVA = "0x12294D8", Offset = "0x12294D8", VA = "0x12294D8", Slot = "5")]
			public IState Update()
			{
				return null;
			}

			[Token(Token = "0x6002EAE")]
			[Address(RVA = "0x12297D0", Offset = "0x12297D0", VA = "0x12297D0")]
			public DedicatedServer()
			{
			}
		}

		[Token(Token = "0x200066B")]
		private class Server : IState
		{
			[Token(Token = "0x4002335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private UNetCommsNetwork _net;

			[Token(Token = "0x4002336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private DissonanceComms _comms;

			[Token(Token = "0x6002EAF")]
			[Address(RVA = "0x1229E00", Offset = "0x1229E00", VA = "0x1229E00", Slot = "4")]
			public void Awake()
			{
			}

			[Token(Token = "0x6002EB0")]
			[Address(RVA = "0x1229F54", Offset = "0x1229F54", VA = "0x1229F54", Slot = "5")]
			public IState Update()
			{
				return null;
			}

			[Token(Token = "0x6002EB1")]
			[Address(RVA = "0x1229D2C", Offset = "0x1229D2C", VA = "0x1229D2C")]
			public Server()
			{
			}
		}

		[Token(Token = "0x200066C")]
		private class Client : IState
		{
			[Token(Token = "0x4002337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private UNetCommsNetwork _net;

			[Token(Token = "0x4002338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly string _serverIp;

			[Token(Token = "0x4002339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private DissonanceComms _comms;

			[Token(Token = "0x6002EB2")]
			[Address(RVA = "0x1228920", Offset = "0x1228920", VA = "0x1228920")]
			public Client(string serverIp)
			{
			}

			[Token(Token = "0x6002EB3")]
			[Address(RVA = "0x1228954", Offset = "0x1228954", VA = "0x1228954", Slot = "4")]
			public void Awake()
			{
			}

			[Token(Token = "0x6002EB4")]
			[Address(RVA = "0x1228AD8", Offset = "0x1228AD8", VA = "0x1228AD8", Slot = "5")]
			public IState Update()
			{
				return null;
			}
		}

		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IState _state;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IState _nextState;

		[Token(Token = "0x60029BC")]
		[Address(RVA = "0x122864C", Offset = "0x122864C", VA = "0x122864C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029BD")]
		[Address(RVA = "0x122876C", Offset = "0x122876C", VA = "0x122876C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60029BE")]
		[Address(RVA = "0x1228830", Offset = "0x1228830", VA = "0x1228830")]
		private void Update()
		{
		}

		[Token(Token = "0x60029BF")]
		[Address(RVA = "0x1228918", Offset = "0x1228918", VA = "0x1228918")]
		public StateManager()
		{
		}
	}
}
namespace UnityEngine.Experimental.Rendering
{
	[Token(Token = "0x20004F0")]
	public class SRPBatcherProfiler : MonoBehaviour
	{
		[Token(Token = "0x200066D")]
		internal class RecorderEntry
		{
			[Token(Token = "0x400233A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x400233B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string oldName;

			[Token(Token = "0x400233C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int callCount;

			[Token(Token = "0x400233D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float accTime;

			[Token(Token = "0x400233E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Recorder recorder;

			[Token(Token = "0x6002EB5")]
			[Address(RVA = "0x130E164", Offset = "0x130E164", VA = "0x130E164")]
			public RecorderEntry()
			{
			}
		}

		[Token(Token = "0x200066E")]
		private enum SRPBMarkers
		{
			[Token(Token = "0x4002340")]
			kStdRenderDraw,
			[Token(Token = "0x4002341")]
			kStdShadowDraw,
			[Token(Token = "0x4002342")]
			kSRPBRenderDraw,
			[Token(Token = "0x4002343")]
			kSRPBShadowDraw,
			[Token(Token = "0x4002344")]
			kRenderThreadIdle,
			[Token(Token = "0x4002345")]
			kStdRenderApplyShader,
			[Token(Token = "0x4002346")]
			kStdShadowApplyShader,
			[Token(Token = "0x4002347")]
			kSRPBRenderApplyShader,
			[Token(Token = "0x4002348")]
			kSRPBShadowApplyShader,
			[Token(Token = "0x4002349")]
			kPrepareBatchRendererGroupNodes
		}

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool m_Enable;

		[Token(Token = "0x4001E43")]
		private const float kAverageStatDuration = 1f;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_frameCount;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_AccDeltaTime;

		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_statsLabel;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GUIStyle m_style;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_oldBatcherEnable;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RecorderEntry[] recordersList;

		[Token(Token = "0x60029C0")]
		[Address(RVA = "0x130D08C", Offset = "0x130D08C", VA = "0x130D08C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60029C1")]
		[Address(RVA = "0x130D2D8", Offset = "0x130D2D8", VA = "0x130D2D8")]
		private void RazCounters()
		{
		}

		[Token(Token = "0x60029C2")]
		[Address(RVA = "0x130D27C", Offset = "0x130D27C", VA = "0x130D27C")]
		private void ResetStats()
		{
		}

		[Token(Token = "0x60029C3")]
		[Address(RVA = "0x130D358", Offset = "0x130D358", VA = "0x130D358")]
		private void ToggleStats()
		{
		}

		[Token(Token = "0x60029C4")]
		[Address(RVA = "0x130D368", Offset = "0x130D368", VA = "0x130D368")]
		private void Update()
		{
		}

		[Token(Token = "0x60029C5")]
		[Address(RVA = "0x130DA78", Offset = "0x130DA78", VA = "0x130DA78")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60029C6")]
		[Address(RVA = "0x130DCCC", Offset = "0x130DCCC", VA = "0x130DCCC")]
		public SRPBatcherProfiler()
		{
		}
	}
}
namespace UnityEngine.Rendering.Universal
{
	[Token(Token = "0x20004F1")]
	public class Outline : ScriptableRendererFeature
	{
		[Serializable]
		[Token(Token = "0x200066F")]
		public class OutlineSettings
		{
			[Token(Token = "0x400234A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string passTag;

			[Token(Token = "0x400234B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RenderPassEvent Event;

			[Token(Token = "0x400234C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Source source;

			[Token(Token = "0x400234D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string srcTextureId;

			[Token(Token = "0x400234E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Target destination;

			[Token(Token = "0x400234F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string dstTextureId;

			[Token(Token = "0x4002350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public FilterSettings filterSettings;

			[Token(Token = "0x4002351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public bool overrideDepthState;

			[Token(Token = "0x4002352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public CompareFunction depthCompareFunction;

			[Token(Token = "0x4002353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool enableWrite;

			[Token(Token = "0x4002354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public BlurMethod blurMethod;

			[Token(Token = "0x4002355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool highQualitySampling;

			[Token(Token = "0x4002356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEEBA78", Offset = "0xEEBA78")]
			public float maxRadius;

			[Token(Token = "0x4002357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEEBA94", Offset = "0xEEBA94")]
			public int iteration;

			[Token(Token = "0x4002358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xEEBAAC", Offset = "0xEEBAAC")]
			public float downScaling;

			[Token(Token = "0x4002359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0xEEBAC4", Offset = "0xEEBAC4")]
			public Color outlineColor;

			[Token(Token = "0x6002EB6")]
			[Address(RVA = "0x13113D0", Offset = "0x13113D0", VA = "0x13113D0")]
			public OutlineSettings()
			{
			}
		}

		[Token(Token = "0x2000670")]
		public enum Source
		{
			[Token(Token = "0x400235B")]
			Color,
			[Token(Token = "0x400235C")]
			RenderTexture
		}

		[Token(Token = "0x2000671")]
		public enum Target
		{
			[Token(Token = "0x400235E")]
			Color,
			[Token(Token = "0x400235F")]
			RenderTexture
		}

		[Token(Token = "0x2000672")]
		public enum BlurMethod
		{
			[Token(Token = "0x4002361")]
			Gaussian,
			[Token(Token = "0x4002362")]
			Kawase,
			[Token(Token = "0x4002363")]
			Grainy
		}

		[Serializable]
		[Token(Token = "0x2000673")]
		public class FilterSettings
		{
			[Token(Token = "0x4002364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RenderQueueType RenderQueueType;

			[Token(Token = "0x4002365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public LayerMask LayerMask;

			[Token(Token = "0x4002366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string[] PassNames;

			[Token(Token = "0x6002EB7")]
			[Address(RVA = "0x13114E0", Offset = "0x13114E0", VA = "0x13114E0")]
			public FilterSettings()
			{
			}
		}

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OutlineSettings settings;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTargetHandle m_SrcRenderTextureHandle;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private RenderTargetHandle m_DstRenderTextureHandle;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTargetHandle m_InternalRenderTextureHandle;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OutlinePrefilterPass outlinePrefilterPass;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OutlineBlurPass outlineBlurPass;

		[Token(Token = "0x60029C7")]
		[Address(RVA = "0x1310F68", Offset = "0x1310F68", VA = "0x1310F68", Slot = "4")]
		public override void Create()
		{
		}

		[Token(Token = "0x60029C8")]
		[Address(RVA = "0x1311134", Offset = "0x1311134", VA = "0x1311134", Slot = "5")]
		public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60029C9")]
		[Address(RVA = "0x131132C", Offset = "0x131132C", VA = "0x131132C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60029CA")]
		[Address(RVA = "0x1311360", Offset = "0x1311360", VA = "0x1311360")]
		public Outline()
		{
		}
	}
}
namespace UnityEngine.Rendering.Universal.Internal
{
	[Token(Token = "0x20004F2")]
	public class OutlineBlurPass : ScriptableRenderPass
	{
		[Token(Token = "0x2000674")]
		public enum RenderTarget
		{
			[Token(Token = "0x4002368")]
			Color,
			[Token(Token = "0x4002369")]
			RenderTexture
		}

		[Token(Token = "0x2000675")]
		public enum BlurMethod
		{
			[Token(Token = "0x400236B")]
			Gaussian,
			[Token(Token = "0x400236C")]
			Kawase,
			[Token(Token = "0x400236D")]
			Grainy
		}

		[Token(Token = "0x2000676")]
		private struct Level
		{
			[Token(Token = "0x400236E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int down;

			[Token(Token = "0x400236F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal int up;
		}

		[Token(Token = "0x2000677")]
		private static class ShaderConstants
		{
			[Token(Token = "0x4002370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly int _MainTex;

			[Token(Token = "0x4002371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static readonly int _ColorTexture;

			[Token(Token = "0x4002372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static readonly int _Params;

			[Token(Token = "0x4002373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static readonly int _PongTexture;

			[Token(Token = "0x4002374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static readonly int _PingTexture;

			[Token(Token = "0x4002375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static readonly int _OutlineColor;
		}

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB364", Offset = "0xEEB364")]
		private RenderTargetIdentifier <source>k__BackingField;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB374", Offset = "0xEEB374")]
		private RenderTargetHandle <destination>k__BackingField;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB384", Offset = "0xEEB384")]
		private RenderTargetIdentifier <cameraColorTarget>k__BackingField;

		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB394", Offset = "0xEEB394")]
		private BlurMethod <blurMethod>k__BackingField;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB3A4", Offset = "0xEEB3A4")]
		private bool <highQualitySampling>k__BackingField;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB3B4", Offset = "0xEEB3B4")]
		private float <gaussianMaxRadius>k__BackingField;

		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB3C4", Offset = "0xEEB3C4")]
		private int <iteration>k__BackingField;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB3D4", Offset = "0xEEB3D4")]
		private float <downScaling>k__BackingField;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB3E4", Offset = "0xEEB3E4")]
		private Color <outlineColor>k__BackingField;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Shader outlineGaussianPS;

		[Token(Token = "0x4001E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Shader outlineKawasePS;

		[Token(Token = "0x4001E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Shader outlineGrainyPS;

		[Token(Token = "0x4001E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Material m_gaussianBlur;

		[Token(Token = "0x4001E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Material m_kawaseBlur;

		[Token(Token = "0x4001E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Material m_grainyBlur;

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Material m_outline;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private RenderTextureDescriptor m_Descriptor;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private string m_ProfilerTag;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private ProfilingSampler m_ProfilingSampler;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private readonly GraphicsFormat m_DefaultHDRFormat;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Level[] m_Pyramid;

		[Token(Token = "0x4001E65")]
		private const int k_MaxPyramidSize = 16;

		[Token(Token = "0x170003FE")]
		private RenderTargetIdentifier source
		{
			[Token(Token = "0x60029CB")]
			[Address(RVA = "0x130E16C", Offset = "0x130E16C", VA = "0x130E16C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF20A4", Offset = "0xEF20A4")]
			get
			{
				return default(RenderTargetIdentifier);
			}
			[Token(Token = "0x60029CC")]
			[Address(RVA = "0x130E184", Offset = "0x130E184", VA = "0x130E184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF20B4", Offset = "0xEF20B4")]
			set
			{
			}
		}

		[Token(Token = "0x170003FF")]
		private RenderTargetHandle destination
		{
			[Token(Token = "0x60029CD")]
			[Address(RVA = "0x130E19C", Offset = "0x130E19C", VA = "0x130E19C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF20C4", Offset = "0xEF20C4")]
			get
			{
				return default(RenderTargetHandle);
			}
			[Token(Token = "0x60029CE")]
			[Address(RVA = "0x130E1A4", Offset = "0x130E1A4", VA = "0x130E1A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF20D4", Offset = "0xEF20D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000400")]
		private RenderTargetIdentifier cameraColorTarget
		{
			[Token(Token = "0x60029CF")]
			[Address(RVA = "0x130E1AC", Offset = "0x130E1AC", VA = "0x130E1AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF20E4", Offset = "0xEF20E4")]
			get
			{
				return default(RenderTargetIdentifier);
			}
			[Token(Token = "0x60029D0")]
			[Address(RVA = "0x130E1C4", Offset = "0x130E1C4", VA = "0x130E1C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF20F4", Offset = "0xEF20F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000401")]
		private BlurMethod blurMethod
		{
			[Token(Token = "0x60029D1")]
			[Address(RVA = "0x130E1DC", Offset = "0x130E1DC", VA = "0x130E1DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2104", Offset = "0xEF2104")]
			get
			{
				return default(BlurMethod);
			}
			[Token(Token = "0x60029D2")]
			[Address(RVA = "0x130E1E4", Offset = "0x130E1E4", VA = "0x130E1E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2114", Offset = "0xEF2114")]
			set
			{
			}
		}

		[Token(Token = "0x17000402")]
		private bool highQualitySampling
		{
			[Token(Token = "0x60029D3")]
			[Address(RVA = "0x130E1EC", Offset = "0x130E1EC", VA = "0x130E1EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2124", Offset = "0xEF2124")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60029D4")]
			[Address(RVA = "0x130E1F4", Offset = "0x130E1F4", VA = "0x130E1F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2134", Offset = "0xEF2134")]
			set
			{
			}
		}

		[Token(Token = "0x17000403")]
		private float gaussianMaxRadius
		{
			[Token(Token = "0x60029D5")]
			[Address(RVA = "0x130E200", Offset = "0x130E200", VA = "0x130E200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2144", Offset = "0xEF2144")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60029D6")]
			[Address(RVA = "0x130E208", Offset = "0x130E208", VA = "0x130E208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2154", Offset = "0xEF2154")]
			set
			{
			}
		}

		[Token(Token = "0x17000404")]
		private int iteration
		{
			[Token(Token = "0x60029D7")]
			[Address(RVA = "0x130E210", Offset = "0x130E210", VA = "0x130E210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2164", Offset = "0xEF2164")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60029D8")]
			[Address(RVA = "0x130E218", Offset = "0x130E218", VA = "0x130E218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2174", Offset = "0xEF2174")]
			set
			{
			}
		}

		[Token(Token = "0x17000405")]
		private float downScaling
		{
			[Token(Token = "0x60029D9")]
			[Address(RVA = "0x130E220", Offset = "0x130E220", VA = "0x130E220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2184", Offset = "0xEF2184")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60029DA")]
			[Address(RVA = "0x130E228", Offset = "0x130E228", VA = "0x130E228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2194", Offset = "0xEF2194")]
			set
			{
			}
		}

		[Token(Token = "0x17000406")]
		private Color outlineColor
		{
			[Token(Token = "0x60029DB")]
			[Address(RVA = "0x130E230", Offset = "0x130E230", VA = "0x130E230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF21A4", Offset = "0xEF21A4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60029DC")]
			[Address(RVA = "0x130E23C", Offset = "0x130E23C", VA = "0x130E23C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF21B4", Offset = "0xEF21B4")]
			set
			{
			}
		}

		[Token(Token = "0x60029DD")]
		[Address(RVA = "0x130E248", Offset = "0x130E248", VA = "0x130E248")]
		public void SetBlurSetting(int blurMethod, bool highQualitySampling, float gaussianMaxRadius, Color outlineColor)
		{
		}

		[Token(Token = "0x60029DE")]
		[Address(RVA = "0x130E29C", Offset = "0x130E29C", VA = "0x130E29C")]
		public void SetKawaseSetting(int iteration, float downScaling)
		{
		}

		[Token(Token = "0x60029DF")]
		[Address(RVA = "0x130E2A8", Offset = "0x130E2A8", VA = "0x130E2A8")]
		public void SetGrainySetting(int iteration, float downScaling)
		{
		}

		[Token(Token = "0x60029E0")]
		[Address(RVA = "0x130E2B4", Offset = "0x130E2B4", VA = "0x130E2B4")]
		public OutlineBlurPass(RenderPassEvent renderPassEvent, string profilerTag)
		{
		}

		[Token(Token = "0x60029E1")]
		[Address(RVA = "0x130E54C", Offset = "0x130E54C", VA = "0x130E54C")]
		public void Setup(RenderTargetIdentifier source, RenderTargetHandle destination, RenderTargetIdentifier cameraColorTarget)
		{
		}

		[Token(Token = "0x60029E2")]
		[Address(RVA = "0x130E57C", Offset = "0x130E57C", VA = "0x130E57C", Slot = "7")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60029E3")]
		[Address(RVA = "0x130FDD8", Offset = "0x130FDD8", VA = "0x130FDD8", Slot = "4")]
		public override void Configure(CommandBuffer cmd, RenderTextureDescriptor cameraTextureDescriptor)
		{
		}

		[Token(Token = "0x60029E4")]
		[Address(RVA = "0x130FE28", Offset = "0x130FE28", VA = "0x130FE28")]
		public void CleanUp()
		{
		}

		[Token(Token = "0x60029E5")]
		[Address(RVA = "0x130E5A4", Offset = "0x130E5A4", VA = "0x130E5A4")]
		private void ExecuteGaussianBlur(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60029E6")]
		[Address(RVA = "0x130EE80", Offset = "0x130EE80", VA = "0x130EE80")]
		private void ExecuteKawaseBlur(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60029E7")]
		[Address(RVA = "0x130F97C", Offset = "0x130F97C", VA = "0x130F97C")]
		private void ExecuteGrainyBlur(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60029E8")]
		[Address(RVA = "0x130FEB8", Offset = "0x130FEB8", VA = "0x130FEB8")]
		private RenderTextureDescriptor GetStereoCompatibleDescriptor(int width, int height, GraphicsFormat format, int depthBufferBits = 0)
		{
			return default(RenderTextureDescriptor);
		}

		[Token(Token = "0x60029E9")]
		[Address(RVA = "0x130FF4C", Offset = "0x130FF4C", VA = "0x130FF4C")]
		private BuiltinRenderTextureType BlitDstDiscardContent(CommandBuffer cmd, RenderTargetIdentifier rt)
		{
			return default(BuiltinRenderTextureType);
		}
	}
	[Token(Token = "0x20004F3")]
	public class OutlinePrefilterPass : ScriptableRenderPass
	{
		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private RenderQueueType renderQueueType;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private FilteringSettings m_FilteringSettings;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private string m_ProfilerTag;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ProfilingSampler m_ProfilingSampler;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material overrideMaterial;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int overrideMaterialPassIndex;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int m_ScaleBiasId;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool createDstRT;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		private bool copyDepthToDst;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB3F4", Offset = "0xEEB3F4")]
		private RenderTargetIdentifier <source>k__BackingField;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB404", Offset = "0xEEB404")]
		private RenderTargetHandle <destination>k__BackingField;

		[Token(Token = "0x4001E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEEB414", Offset = "0xEEB414")]
		private FilterMode <filterMode>k__BackingField;

		[Token(Token = "0x4001E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private RenderTextureDescriptor m_Descriptor;

		[Token(Token = "0x4001E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Material m_CopyDepthMaterial;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<ShaderTagId> m_ShaderTagIdList;

		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private RenderStateBlock m_RenderStateBlock;

		[Token(Token = "0x17000407")]
		private RenderTargetIdentifier source
		{
			[Token(Token = "0x60029EA")]
			[Address(RVA = "0x13100F0", Offset = "0x13100F0", VA = "0x13100F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF21C4", Offset = "0xEF21C4")]
			get
			{
				return default(RenderTargetIdentifier);
			}
			[Token(Token = "0x60029EB")]
			[Address(RVA = "0x1310108", Offset = "0x1310108", VA = "0x1310108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF21D4", Offset = "0xEF21D4")]
			set
			{
			}
		}

		[Token(Token = "0x17000408")]
		private RenderTargetHandle destination
		{
			[Token(Token = "0x60029EC")]
			[Address(RVA = "0x1310120", Offset = "0x1310120", VA = "0x1310120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF21E4", Offset = "0xEF21E4")]
			get
			{
				return default(RenderTargetHandle);
			}
			[Token(Token = "0x60029ED")]
			[Address(RVA = "0x1310128", Offset = "0x1310128", VA = "0x1310128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF21F4", Offset = "0xEF21F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000409")]
		public FilterMode filterMode
		{
			[Token(Token = "0x60029EE")]
			[Address(RVA = "0x1310130", Offset = "0x1310130", VA = "0x1310130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2204", Offset = "0xEF2204")]
			get
			{
				return default(FilterMode);
			}
			[Token(Token = "0x60029EF")]
			[Address(RVA = "0x1310138", Offset = "0x1310138", VA = "0x1310138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xEF2214", Offset = "0xEF2214")]
			set
			{
			}
		}

		[Token(Token = "0x60029F0")]
		[Address(RVA = "0x1310140", Offset = "0x1310140", VA = "0x1310140")]
		public void Setup(RenderTargetIdentifier source, RenderTargetHandle destination, bool createDstRT = false)
		{
		}

		[Token(Token = "0x60029F1")]
		[Address(RVA = "0x1310164", Offset = "0x1310164", VA = "0x1310164")]
		public void SetDetphState(bool overrideDepth, bool writeEnabled, CompareFunction function = CompareFunction.Less)
		{
		}

		[Token(Token = "0x60029F2")]
		[Address(RVA = "0x13101DC", Offset = "0x13101DC", VA = "0x13101DC")]
		public void SetStencilState(int reference, CompareFunction compareFunction, StencilOp passOp, StencilOp failOp, StencilOp zFailOp)
		{
		}

		[Token(Token = "0x60029F3")]
		[Address(RVA = "0x13102C8", Offset = "0x13102C8", VA = "0x13102C8")]
		public OutlinePrefilterPass(string profilerTag, RenderPassEvent renderPassEvent, string[] shaderTags, RenderQueueType renderQueueType, int layerMask)
		{
		}

		[Token(Token = "0x60029F4")]
		[Address(RVA = "0x131067C", Offset = "0x131067C", VA = "0x131067C", Slot = "7")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60029F5")]
		[Address(RVA = "0x1310CC0", Offset = "0x1310CC0", VA = "0x1310CC0", Slot = "4")]
		public override void Configure(CommandBuffer cmd, RenderTextureDescriptor cameraTextureDescriptor)
		{
		}

		[Token(Token = "0x60029F6")]
		[Address(RVA = "0x1310E68", Offset = "0x1310E68", VA = "0x1310E68", Slot = "5")]
		public override void FrameCleanup(CommandBuffer cmd)
		{
		}

		[Token(Token = "0x60029F7")]
		[Address(RVA = "0x1310E98", Offset = "0x1310E98", VA = "0x1310E98")]
		public void CleanUp()
		{
		}

		[Token(Token = "0x60029F8")]
		[Address(RVA = "0x1310F04", Offset = "0x1310F04", VA = "0x1310F04")]
		private RenderTextureDescriptor GetStereoCompatibleDescriptor(GraphicsFormat format, int depthBufferBits = 0)
		{
			return default(RenderTextureDescriptor);
		}
	}
}
namespace ParadoxNotion.Internal
{
	[Token(Token = "0x20004F4")]
	internal class AOTDummy
	{
		[Token(Token = "0x2000678")]
		private class _CreateList_System_Boolean : CreateList<bool>
		{
			[Token(Token = "0x6002EB9")]
			[Address(RVA = "0x1151650", Offset = "0x1151650", VA = "0x1151650")]
			public _CreateList_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000679")]
		private class _CreateList_System_Single : CreateList<float>
		{
			[Token(Token = "0x6002EBA")]
			[Address(RVA = "0x11516F0", Offset = "0x11516F0", VA = "0x11516F0")]
			public _CreateList_System_Single()
			{
			}
		}

		[Token(Token = "0x200067A")]
		private class _CreateList_System_Int32 : CreateList<int>
		{
			[Token(Token = "0x6002EBB")]
			[Address(RVA = "0x11516A0", Offset = "0x11516A0", VA = "0x11516A0")]
			public _CreateList_System_Int32()
			{
			}
		}

		[Token(Token = "0x200067B")]
		private class _CreateList_UnityEngine_Vector2 : CreateList<Vector2>
		{
			[Token(Token = "0x6002EBC")]
			[Address(RVA = "0x1151BA0", Offset = "0x1151BA0", VA = "0x1151BA0")]
			public _CreateList_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200067C")]
		private class _CreateList_UnityEngine_Vector3 : CreateList<Vector3>
		{
			[Token(Token = "0x6002EBD")]
			[Address(RVA = "0x1151BF0", Offset = "0x1151BF0", VA = "0x1151BF0")]
			public _CreateList_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200067D")]
		private class _CreateList_UnityEngine_Vector4 : CreateList<Vector4>
		{
			[Token(Token = "0x6002EBE")]
			[Address(RVA = "0x1151C40", Offset = "0x1151C40", VA = "0x1151C40")]
			public _CreateList_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200067E")]
		private class _CreateList_UnityEngine_Quaternion : CreateList<Quaternion>
		{
			[Token(Token = "0x6002EBF")]
			[Address(RVA = "0x11519C0", Offset = "0x11519C0", VA = "0x11519C0")]
			public _CreateList_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200067F")]
		private class _CreateList_UnityEngine_Keyframe : CreateList<Keyframe>
		{
			[Token(Token = "0x6002EC0")]
			[Address(RVA = "0x1151920", Offset = "0x1151920", VA = "0x1151920")]
			public _CreateList_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000680")]
		private class _CreateList_UnityEngine_Bounds : CreateList<Bounds>
		{
			[Token(Token = "0x6002EC1")]
			[Address(RVA = "0x1151740", Offset = "0x1151740", VA = "0x1151740")]
			public _CreateList_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000681")]
		private class _CreateList_UnityEngine_Color : CreateList<Color>
		{
			[Token(Token = "0x6002EC2")]
			[Address(RVA = "0x1151830", Offset = "0x1151830", VA = "0x1151830")]
			public _CreateList_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000682")]
		private class _CreateList_UnityEngine_Rect : CreateList<Rect>
		{
			[Token(Token = "0x6002EC3")]
			[Address(RVA = "0x1151B00", Offset = "0x1151B00", VA = "0x1151B00")]
			public _CreateList_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000683")]
		private class _CreateList_UnityEngine_ContactPoint : CreateList<ContactPoint>
		{
			[Token(Token = "0x6002EC4")]
			[Address(RVA = "0x1151880", Offset = "0x1151880", VA = "0x1151880")]
			public _CreateList_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000684")]
		private class _CreateList_UnityEngine_ContactPoint2D : CreateList<ContactPoint2D>
		{
			[Token(Token = "0x6002EC5")]
			[Address(RVA = "0x11518D0", Offset = "0x11518D0", VA = "0x11518D0")]
			public _CreateList_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000685")]
		private class _CreateList_UnityEngine_Collision : CreateList<Collision>
		{
			[Token(Token = "0x6002EC6")]
			[Address(RVA = "0x1151790", Offset = "0x1151790", VA = "0x1151790")]
			public _CreateList_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000686")]
		private class _CreateList_UnityEngine_Collision2D : CreateList<Collision2D>
		{
			[Token(Token = "0x6002EC7")]
			[Address(RVA = "0x11517E0", Offset = "0x11517E0", VA = "0x11517E0")]
			public _CreateList_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000687")]
		private class _CreateList_UnityEngine_RaycastHit : CreateList<RaycastHit>
		{
			[Token(Token = "0x6002EC8")]
			[Address(RVA = "0x1151A60", Offset = "0x1151A60", VA = "0x1151A60")]
			public _CreateList_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000688")]
		private class _CreateList_UnityEngine_RaycastHit2D : CreateList<RaycastHit2D>
		{
			[Token(Token = "0x6002EC9")]
			[Address(RVA = "0x1151AB0", Offset = "0x1151AB0", VA = "0x1151AB0")]
			public _CreateList_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000689")]
		private class _CreateList_UnityEngine_Ray : CreateList<Ray>
		{
			[Token(Token = "0x6002ECA")]
			[Address(RVA = "0x1151A10", Offset = "0x1151A10", VA = "0x1151A10")]
			public _CreateList_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200068A")]
		private class _CreateList_UnityEngine_Space : CreateList<Space>
		{
			[Token(Token = "0x6002ECB")]
			[Address(RVA = "0x1151B50", Offset = "0x1151B50", VA = "0x1151B50")]
			public _CreateList_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200068B")]
		private class _CreateList_BossMainDone : CreateList<BossMainDone>
		{
			[Token(Token = "0x6002ECC")]
			[Address(RVA = "0x1151560", Offset = "0x1151560", VA = "0x1151560")]
			public _CreateList_BossMainDone()
			{
			}
		}

		[Token(Token = "0x200068C")]
		private class _CreateList_BossMainToDo : CreateList<BossMainToDo>
		{
			[Token(Token = "0x6002ECD")]
			[Address(RVA = "0x11515B0", Offset = "0x11515B0", VA = "0x11515B0")]
			public _CreateList_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x200068D")]
		private class _CreateList_e_group_type : CreateList<e_group_type>
		{
			[Token(Token = "0x6002ECE")]
			[Address(RVA = "0x1151D30", Offset = "0x1151D30", VA = "0x1151D30")]
			public _CreateList_e_group_type()
			{
			}
		}

		[Token(Token = "0x200068E")]
		private class _CreateList_eMonsterAttackDirType : CreateList<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002ECF")]
			[Address(RVA = "0x1151C90", Offset = "0x1151C90", VA = "0x1151C90")]
			public _CreateList_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x200068F")]
		private class _CreateList_eMonsterAttackType : CreateList<eMonsterAttackType>
		{
			[Token(Token = "0x6002ED0")]
			[Address(RVA = "0x1151CE0", Offset = "0x1151CE0", VA = "0x1151CE0")]
			public _CreateList_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000690")]
		private class _CreateList_MoveTargetType : CreateList<MoveTargetType>
		{
			[Token(Token = "0x6002ED1")]
			[Address(RVA = "0x1151600", Offset = "0x1151600", VA = "0x1151600")]
			public _CreateList_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000691")]
		private class _CreateList_UnityEngine_LayerMask : CreateList<LayerMask>
		{
			[Token(Token = "0x6002ED2")]
			[Address(RVA = "0x1151970", Offset = "0x1151970", VA = "0x1151970")]
			public _CreateList_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000692")]
		private class _CreateVariable_System_Boolean : CreateVariable<bool>
		{
			[Token(Token = "0x6002ED3")]
			[Address(RVA = "0x1151E70", Offset = "0x1151E70", VA = "0x1151E70")]
			public _CreateVariable_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000693")]
		private class _CreateVariable_System_Single : CreateVariable<float>
		{
			[Token(Token = "0x6002ED4")]
			[Address(RVA = "0x1151F10", Offset = "0x1151F10", VA = "0x1151F10")]
			public _CreateVariable_System_Single()
			{
			}
		}

		[Token(Token = "0x2000694")]
		private class _CreateVariable_System_Int32 : CreateVariable<int>
		{
			[Token(Token = "0x6002ED5")]
			[Address(RVA = "0x1151EC0", Offset = "0x1151EC0", VA = "0x1151EC0")]
			public _CreateVariable_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000695")]
		private class _CreateVariable_UnityEngine_Vector2 : CreateVariable<Vector2>
		{
			[Token(Token = "0x6002ED6")]
			[Address(RVA = "0x11523C0", Offset = "0x11523C0", VA = "0x11523C0")]
			public _CreateVariable_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000696")]
		private class _CreateVariable_UnityEngine_Vector3 : CreateVariable<Vector3>
		{
			[Token(Token = "0x6002ED7")]
			[Address(RVA = "0x1152410", Offset = "0x1152410", VA = "0x1152410")]
			public _CreateVariable_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000697")]
		private class _CreateVariable_UnityEngine_Vector4 : CreateVariable<Vector4>
		{
			[Token(Token = "0x6002ED8")]
			[Address(RVA = "0x1152460", Offset = "0x1152460", VA = "0x1152460")]
			public _CreateVariable_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000698")]
		private class _CreateVariable_UnityEngine_Quaternion : CreateVariable<Quaternion>
		{
			[Token(Token = "0x6002ED9")]
			[Address(RVA = "0x11521E0", Offset = "0x11521E0", VA = "0x11521E0")]
			public _CreateVariable_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000699")]
		private class _CreateVariable_UnityEngine_Keyframe : CreateVariable<Keyframe>
		{
			[Token(Token = "0x6002EDA")]
			[Address(RVA = "0x1152140", Offset = "0x1152140", VA = "0x1152140")]
			public _CreateVariable_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200069A")]
		private class _CreateVariable_UnityEngine_Bounds : CreateVariable<Bounds>
		{
			[Token(Token = "0x6002EDB")]
			[Address(RVA = "0x1151F60", Offset = "0x1151F60", VA = "0x1151F60")]
			public _CreateVariable_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200069B")]
		private class _CreateVariable_UnityEngine_Color : CreateVariable<Color>
		{
			[Token(Token = "0x6002EDC")]
			[Address(RVA = "0x1152050", Offset = "0x1152050", VA = "0x1152050")]
			public _CreateVariable_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200069C")]
		private class _CreateVariable_UnityEngine_Rect : CreateVariable<Rect>
		{
			[Token(Token = "0x6002EDD")]
			[Address(RVA = "0x1152320", Offset = "0x1152320", VA = "0x1152320")]
			public _CreateVariable_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200069D")]
		private class _CreateVariable_UnityEngine_ContactPoint : CreateVariable<ContactPoint>
		{
			[Token(Token = "0x6002EDE")]
			[Address(RVA = "0x11520A0", Offset = "0x11520A0", VA = "0x11520A0")]
			public _CreateVariable_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200069E")]
		private class _CreateVariable_UnityEngine_ContactPoint2D : CreateVariable<ContactPoint2D>
		{
			[Token(Token = "0x6002EDF")]
			[Address(RVA = "0x11520F0", Offset = "0x11520F0", VA = "0x11520F0")]
			public _CreateVariable_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200069F")]
		private class _CreateVariable_UnityEngine_Collision : CreateVariable<Collision>
		{
			[Token(Token = "0x6002EE0")]
			[Address(RVA = "0x1151FB0", Offset = "0x1151FB0", VA = "0x1151FB0")]
			public _CreateVariable_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20006A0")]
		private class _CreateVariable_UnityEngine_Collision2D : CreateVariable<Collision2D>
		{
			[Token(Token = "0x6002EE1")]
			[Address(RVA = "0x1152000", Offset = "0x1152000", VA = "0x1152000")]
			public _CreateVariable_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20006A1")]
		private class _CreateVariable_UnityEngine_RaycastHit : CreateVariable<RaycastHit>
		{
			[Token(Token = "0x6002EE2")]
			[Address(RVA = "0x1152280", Offset = "0x1152280", VA = "0x1152280")]
			public _CreateVariable_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20006A2")]
		private class _CreateVariable_UnityEngine_RaycastHit2D : CreateVariable<RaycastHit2D>
		{
			[Token(Token = "0x6002EE3")]
			[Address(RVA = "0x11522D0", Offset = "0x11522D0", VA = "0x11522D0")]
			public _CreateVariable_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20006A3")]
		private class _CreateVariable_UnityEngine_Ray : CreateVariable<Ray>
		{
			[Token(Token = "0x6002EE4")]
			[Address(RVA = "0x1152230", Offset = "0x1152230", VA = "0x1152230")]
			public _CreateVariable_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20006A4")]
		private class _CreateVariable_UnityEngine_Space : CreateVariable<Space>
		{
			[Token(Token = "0x6002EE5")]
			[Address(RVA = "0x1152370", Offset = "0x1152370", VA = "0x1152370")]
			public _CreateVariable_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20006A5")]
		private class _CreateVariable_BossMainDone : CreateVariable<BossMainDone>
		{
			[Token(Token = "0x6002EE6")]
			[Address(RVA = "0x1151D80", Offset = "0x1151D80", VA = "0x1151D80")]
			public _CreateVariable_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20006A6")]
		private class _CreateVariable_BossMainToDo : CreateVariable<BossMainToDo>
		{
			[Token(Token = "0x6002EE7")]
			[Address(RVA = "0x1151DD0", Offset = "0x1151DD0", VA = "0x1151DD0")]
			public _CreateVariable_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20006A7")]
		private class _CreateVariable_e_group_type : CreateVariable<e_group_type>
		{
			[Token(Token = "0x6002EE8")]
			[Address(RVA = "0x1152550", Offset = "0x1152550", VA = "0x1152550")]
			public _CreateVariable_e_group_type()
			{
			}
		}

		[Token(Token = "0x20006A8")]
		private class _CreateVariable_eMonsterAttackDirType : CreateVariable<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002EE9")]
			[Address(RVA = "0x11524B0", Offset = "0x11524B0", VA = "0x11524B0")]
			public _CreateVariable_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20006A9")]
		private class _CreateVariable_eMonsterAttackType : CreateVariable<eMonsterAttackType>
		{
			[Token(Token = "0x6002EEA")]
			[Address(RVA = "0x1152500", Offset = "0x1152500", VA = "0x1152500")]
			public _CreateVariable_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20006AA")]
		private class _CreateVariable_MoveTargetType : CreateVariable<MoveTargetType>
		{
			[Token(Token = "0x6002EEB")]
			[Address(RVA = "0x1151E20", Offset = "0x1151E20", VA = "0x1151E20")]
			public _CreateVariable_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20006AB")]
		private class _CreateVariable_UnityEngine_LayerMask : CreateVariable<LayerMask>
		{
			[Token(Token = "0x6002EEC")]
			[Address(RVA = "0x1152190", Offset = "0x1152190", VA = "0x1152190")]
			public _CreateVariable_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20006AC")]
		private class _GetElementInList_System_Boolean : GetElementInList<bool>
		{
			[Token(Token = "0x6002EED")]
			[Address(RVA = "0x1152690", Offset = "0x1152690", VA = "0x1152690")]
			public _GetElementInList_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20006AD")]
		private class _GetElementInList_System_Single : GetElementInList<float>
		{
			[Token(Token = "0x6002EEE")]
			[Address(RVA = "0x1152730", Offset = "0x1152730", VA = "0x1152730")]
			public _GetElementInList_System_Single()
			{
			}
		}

		[Token(Token = "0x20006AE")]
		private class _GetElementInList_System_Int32 : GetElementInList<int>
		{
			[Token(Token = "0x6002EEF")]
			[Address(RVA = "0x11526E0", Offset = "0x11526E0", VA = "0x11526E0")]
			public _GetElementInList_System_Int32()
			{
			}
		}

		[Token(Token = "0x20006AF")]
		private class _GetElementInList_UnityEngine_Vector2 : GetElementInList<Vector2>
		{
			[Token(Token = "0x6002EF0")]
			[Address(RVA = "0x1152BE0", Offset = "0x1152BE0", VA = "0x1152BE0")]
			public _GetElementInList_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20006B0")]
		private class _GetElementInList_UnityEngine_Vector3 : GetElementInList<Vector3>
		{
			[Token(Token = "0x6002EF1")]
			[Address(RVA = "0x1152C30", Offset = "0x1152C30", VA = "0x1152C30")]
			public _GetElementInList_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20006B1")]
		private class _GetElementInList_UnityEngine_Vector4 : GetElementInList<Vector4>
		{
			[Token(Token = "0x6002EF2")]
			[Address(RVA = "0x1152C80", Offset = "0x1152C80", VA = "0x1152C80")]
			public _GetElementInList_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20006B2")]
		private class _GetElementInList_UnityEngine_Quaternion : GetElementInList<Quaternion>
		{
			[Token(Token = "0x6002EF3")]
			[Address(RVA = "0x1152A00", Offset = "0x1152A00", VA = "0x1152A00")]
			public _GetElementInList_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20006B3")]
		private class _GetElementInList_UnityEngine_Keyframe : GetElementInList<Keyframe>
		{
			[Token(Token = "0x6002EF4")]
			[Address(RVA = "0x1152960", Offset = "0x1152960", VA = "0x1152960")]
			public _GetElementInList_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20006B4")]
		private class _GetElementInList_UnityEngine_Bounds : GetElementInList<Bounds>
		{
			[Token(Token = "0x6002EF5")]
			[Address(RVA = "0x1152780", Offset = "0x1152780", VA = "0x1152780")]
			public _GetElementInList_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20006B5")]
		private class _GetElementInList_UnityEngine_Color : GetElementInList<Color>
		{
			[Token(Token = "0x6002EF6")]
			[Address(RVA = "0x1152870", Offset = "0x1152870", VA = "0x1152870")]
			public _GetElementInList_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20006B6")]
		private class _GetElementInList_UnityEngine_Rect : GetElementInList<Rect>
		{
			[Token(Token = "0x6002EF7")]
			[Address(RVA = "0x1152B40", Offset = "0x1152B40", VA = "0x1152B40")]
			public _GetElementInList_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20006B7")]
		private class _GetElementInList_UnityEngine_ContactPoint : GetElementInList<ContactPoint>
		{
			[Token(Token = "0x6002EF8")]
			[Address(RVA = "0x11528C0", Offset = "0x11528C0", VA = "0x11528C0")]
			public _GetElementInList_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20006B8")]
		private class _GetElementInList_UnityEngine_ContactPoint2D : GetElementInList<ContactPoint2D>
		{
			[Token(Token = "0x6002EF9")]
			[Address(RVA = "0x1152910", Offset = "0x1152910", VA = "0x1152910")]
			public _GetElementInList_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20006B9")]
		private class _GetElementInList_UnityEngine_Collision : GetElementInList<Collision>
		{
			[Token(Token = "0x6002EFA")]
			[Address(RVA = "0x11527D0", Offset = "0x11527D0", VA = "0x11527D0")]
			public _GetElementInList_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20006BA")]
		private class _GetElementInList_UnityEngine_Collision2D : GetElementInList<Collision2D>
		{
			[Token(Token = "0x6002EFB")]
			[Address(RVA = "0x1152820", Offset = "0x1152820", VA = "0x1152820")]
			public _GetElementInList_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20006BB")]
		private class _GetElementInList_UnityEngine_RaycastHit : GetElementInList<RaycastHit>
		{
			[Token(Token = "0x6002EFC")]
			[Address(RVA = "0x1152AA0", Offset = "0x1152AA0", VA = "0x1152AA0")]
			public _GetElementInList_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20006BC")]
		private class _GetElementInList_UnityEngine_RaycastHit2D : GetElementInList<RaycastHit2D>
		{
			[Token(Token = "0x6002EFD")]
			[Address(RVA = "0x1152AF0", Offset = "0x1152AF0", VA = "0x1152AF0")]
			public _GetElementInList_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20006BD")]
		private class _GetElementInList_UnityEngine_Ray : GetElementInList<Ray>
		{
			[Token(Token = "0x6002EFE")]
			[Address(RVA = "0x1152A50", Offset = "0x1152A50", VA = "0x1152A50")]
			public _GetElementInList_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20006BE")]
		private class _GetElementInList_UnityEngine_Space : GetElementInList<Space>
		{
			[Token(Token = "0x6002EFF")]
			[Address(RVA = "0x1152B90", Offset = "0x1152B90", VA = "0x1152B90")]
			public _GetElementInList_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20006BF")]
		private class _GetElementInList_BossMainDone : GetElementInList<BossMainDone>
		{
			[Token(Token = "0x6002F00")]
			[Address(RVA = "0x11525A0", Offset = "0x11525A0", VA = "0x11525A0")]
			public _GetElementInList_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20006C0")]
		private class _GetElementInList_BossMainToDo : GetElementInList<BossMainToDo>
		{
			[Token(Token = "0x6002F01")]
			[Address(RVA = "0x11525F0", Offset = "0x11525F0", VA = "0x11525F0")]
			public _GetElementInList_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20006C1")]
		private class _GetElementInList_e_group_type : GetElementInList<e_group_type>
		{
			[Token(Token = "0x6002F02")]
			[Address(RVA = "0x1152D70", Offset = "0x1152D70", VA = "0x1152D70")]
			public _GetElementInList_e_group_type()
			{
			}
		}

		[Token(Token = "0x20006C2")]
		private class _GetElementInList_eMonsterAttackDirType : GetElementInList<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002F03")]
			[Address(RVA = "0x1152CD0", Offset = "0x1152CD0", VA = "0x1152CD0")]
			public _GetElementInList_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20006C3")]
		private class _GetElementInList_eMonsterAttackType : GetElementInList<eMonsterAttackType>
		{
			[Token(Token = "0x6002F04")]
			[Address(RVA = "0x1152D20", Offset = "0x1152D20", VA = "0x1152D20")]
			public _GetElementInList_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20006C4")]
		private class _GetElementInList_MoveTargetType : GetElementInList<MoveTargetType>
		{
			[Token(Token = "0x6002F05")]
			[Address(RVA = "0x1152640", Offset = "0x1152640", VA = "0x1152640")]
			public _GetElementInList_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20006C5")]
		private class _GetElementInList_UnityEngine_LayerMask : GetElementInList<LayerMask>
		{
			[Token(Token = "0x6002F06")]
			[Address(RVA = "0x11529B0", Offset = "0x11529B0", VA = "0x11529B0")]
			public _GetElementInList_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20006C6")]
		private class _GetElementsInList_System_Boolean : GetElementsInList<bool>
		{
			[Token(Token = "0x6002F07")]
			[Address(RVA = "0x1152EB0", Offset = "0x1152EB0", VA = "0x1152EB0")]
			public _GetElementsInList_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20006C7")]
		private class _GetElementsInList_System_Single : GetElementsInList<float>
		{
			[Token(Token = "0x6002F08")]
			[Address(RVA = "0x1152F50", Offset = "0x1152F50", VA = "0x1152F50")]
			public _GetElementsInList_System_Single()
			{
			}
		}

		[Token(Token = "0x20006C8")]
		private class _GetElementsInList_System_Int32 : GetElementsInList<int>
		{
			[Token(Token = "0x6002F09")]
			[Address(RVA = "0x1152F00", Offset = "0x1152F00", VA = "0x1152F00")]
			public _GetElementsInList_System_Int32()
			{
			}
		}

		[Token(Token = "0x20006C9")]
		private class _GetElementsInList_UnityEngine_Vector2 : GetElementsInList<Vector2>
		{
			[Token(Token = "0x6002F0A")]
			[Address(RVA = "0x1153400", Offset = "0x1153400", VA = "0x1153400")]
			public _GetElementsInList_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20006CA")]
		private class _GetElementsInList_UnityEngine_Vector3 : GetElementsInList<Vector3>
		{
			[Token(Token = "0x6002F0B")]
			[Address(RVA = "0x1153450", Offset = "0x1153450", VA = "0x1153450")]
			public _GetElementsInList_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20006CB")]
		private class _GetElementsInList_UnityEngine_Vector4 : GetElementsInList<Vector4>
		{
			[Token(Token = "0x6002F0C")]
			[Address(RVA = "0x11534A0", Offset = "0x11534A0", VA = "0x11534A0")]
			public _GetElementsInList_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20006CC")]
		private class _GetElementsInList_UnityEngine_Quaternion : GetElementsInList<Quaternion>
		{
			[Token(Token = "0x6002F0D")]
			[Address(RVA = "0x1153220", Offset = "0x1153220", VA = "0x1153220")]
			public _GetElementsInList_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20006CD")]
		private class _GetElementsInList_UnityEngine_Keyframe : GetElementsInList<Keyframe>
		{
			[Token(Token = "0x6002F0E")]
			[Address(RVA = "0x1153180", Offset = "0x1153180", VA = "0x1153180")]
			public _GetElementsInList_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20006CE")]
		private class _GetElementsInList_UnityEngine_Bounds : GetElementsInList<Bounds>
		{
			[Token(Token = "0x6002F0F")]
			[Address(RVA = "0x1152FA0", Offset = "0x1152FA0", VA = "0x1152FA0")]
			public _GetElementsInList_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20006CF")]
		private class _GetElementsInList_UnityEngine_Color : GetElementsInList<Color>
		{
			[Token(Token = "0x6002F10")]
			[Address(RVA = "0x1153090", Offset = "0x1153090", VA = "0x1153090")]
			public _GetElementsInList_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20006D0")]
		private class _GetElementsInList_UnityEngine_Rect : GetElementsInList<Rect>
		{
			[Token(Token = "0x6002F11")]
			[Address(RVA = "0x1153360", Offset = "0x1153360", VA = "0x1153360")]
			public _GetElementsInList_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20006D1")]
		private class _GetElementsInList_UnityEngine_ContactPoint : GetElementsInList<ContactPoint>
		{
			[Token(Token = "0x6002F12")]
			[Address(RVA = "0x11530E0", Offset = "0x11530E0", VA = "0x11530E0")]
			public _GetElementsInList_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20006D2")]
		private class _GetElementsInList_UnityEngine_ContactPoint2D : GetElementsInList<ContactPoint2D>
		{
			[Token(Token = "0x6002F13")]
			[Address(RVA = "0x1153130", Offset = "0x1153130", VA = "0x1153130")]
			public _GetElementsInList_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20006D3")]
		private class _GetElementsInList_UnityEngine_Collision : GetElementsInList<Collision>
		{
			[Token(Token = "0x6002F14")]
			[Address(RVA = "0x1152FF0", Offset = "0x1152FF0", VA = "0x1152FF0")]
			public _GetElementsInList_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20006D4")]
		private class _GetElementsInList_UnityEngine_Collision2D : GetElementsInList<Collision2D>
		{
			[Token(Token = "0x6002F15")]
			[Address(RVA = "0x1153040", Offset = "0x1153040", VA = "0x1153040")]
			public _GetElementsInList_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20006D5")]
		private class _GetElementsInList_UnityEngine_RaycastHit : GetElementsInList<RaycastHit>
		{
			[Token(Token = "0x6002F16")]
			[Address(RVA = "0x11532C0", Offset = "0x11532C0", VA = "0x11532C0")]
			public _GetElementsInList_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20006D6")]
		private class _GetElementsInList_UnityEngine_RaycastHit2D : GetElementsInList<RaycastHit2D>
		{
			[Token(Token = "0x6002F17")]
			[Address(RVA = "0x1153310", Offset = "0x1153310", VA = "0x1153310")]
			public _GetElementsInList_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20006D7")]
		private class _GetElementsInList_UnityEngine_Ray : GetElementsInList<Ray>
		{
			[Token(Token = "0x6002F18")]
			[Address(RVA = "0x1153270", Offset = "0x1153270", VA = "0x1153270")]
			public _GetElementsInList_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20006D8")]
		private class _GetElementsInList_UnityEngine_Space : GetElementsInList<Space>
		{
			[Token(Token = "0x6002F19")]
			[Address(RVA = "0x11533B0", Offset = "0x11533B0", VA = "0x11533B0")]
			public _GetElementsInList_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20006D9")]
		private class _GetElementsInList_BossMainDone : GetElementsInList<BossMainDone>
		{
			[Token(Token = "0x6002F1A")]
			[Address(RVA = "0x1152DC0", Offset = "0x1152DC0", VA = "0x1152DC0")]
			public _GetElementsInList_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20006DA")]
		private class _GetElementsInList_BossMainToDo : GetElementsInList<BossMainToDo>
		{
			[Token(Token = "0x6002F1B")]
			[Address(RVA = "0x1152E10", Offset = "0x1152E10", VA = "0x1152E10")]
			public _GetElementsInList_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20006DB")]
		private class _GetElementsInList_e_group_type : GetElementsInList<e_group_type>
		{
			[Token(Token = "0x6002F1C")]
			[Address(RVA = "0x1153590", Offset = "0x1153590", VA = "0x1153590")]
			public _GetElementsInList_e_group_type()
			{
			}
		}

		[Token(Token = "0x20006DC")]
		private class _GetElementsInList_eMonsterAttackDirType : GetElementsInList<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002F1D")]
			[Address(RVA = "0x11534F0", Offset = "0x11534F0", VA = "0x11534F0")]
			public _GetElementsInList_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20006DD")]
		private class _GetElementsInList_eMonsterAttackType : GetElementsInList<eMonsterAttackType>
		{
			[Token(Token = "0x6002F1E")]
			[Address(RVA = "0x1153540", Offset = "0x1153540", VA = "0x1153540")]
			public _GetElementsInList_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20006DE")]
		private class _GetElementsInList_MoveTargetType : GetElementsInList<MoveTargetType>
		{
			[Token(Token = "0x6002F1F")]
			[Address(RVA = "0x1152E60", Offset = "0x1152E60", VA = "0x1152E60")]
			public _GetElementsInList_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20006DF")]
		private class _GetElementsInList_UnityEngine_LayerMask : GetElementsInList<LayerMask>
		{
			[Token(Token = "0x6002F20")]
			[Address(RVA = "0x11531D0", Offset = "0x11531D0", VA = "0x11531D0")]
			public _GetElementsInList_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20006E0")]
		private class NodeCanvas_Framework_BBParameter_System_Boolean : BBParameter<bool>
		{
			[Token(Token = "0x6002F21")]
			[Address(RVA = "0x1144B30", Offset = "0x1144B30", VA = "0x1144B30")]
			public NodeCanvas_Framework_BBParameter_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20006E1")]
		private class NodeCanvas_Framework_BBParameter_System_Single : BBParameter<float>
		{
			[Token(Token = "0x6002F22")]
			[Address(RVA = "0x1144BD0", Offset = "0x1144BD0", VA = "0x1144BD0")]
			public NodeCanvas_Framework_BBParameter_System_Single()
			{
			}
		}

		[Token(Token = "0x20006E2")]
		private class NodeCanvas_Framework_BBParameter_System_Int32 : BBParameter<int>
		{
			[Token(Token = "0x6002F23")]
			[Address(RVA = "0x1144B80", Offset = "0x1144B80", VA = "0x1144B80")]
			public NodeCanvas_Framework_BBParameter_System_Int32()
			{
			}
		}

		[Token(Token = "0x20006E3")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Vector2 : BBParameter<Vector2>
		{
			[Token(Token = "0x6002F24")]
			[Address(RVA = "0x1145080", Offset = "0x1145080", VA = "0x1145080")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20006E4")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Vector3 : BBParameter<Vector3>
		{
			[Token(Token = "0x6002F25")]
			[Address(RVA = "0x11450D0", Offset = "0x11450D0", VA = "0x11450D0")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20006E5")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Vector4 : BBParameter<Vector4>
		{
			[Token(Token = "0x6002F26")]
			[Address(RVA = "0x1145120", Offset = "0x1145120", VA = "0x1145120")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20006E6")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Quaternion : BBParameter<Quaternion>
		{
			[Token(Token = "0x6002F27")]
			[Address(RVA = "0x1144EA0", Offset = "0x1144EA0", VA = "0x1144EA0")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20006E7")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Keyframe : BBParameter<Keyframe>
		{
			[Token(Token = "0x6002F28")]
			[Address(RVA = "0x1144E00", Offset = "0x1144E00", VA = "0x1144E00")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20006E8")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Bounds : BBParameter<Bounds>
		{
			[Token(Token = "0x6002F29")]
			[Address(RVA = "0x1144C20", Offset = "0x1144C20", VA = "0x1144C20")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20006E9")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Color : BBParameter<Color>
		{
			[Token(Token = "0x6002F2A")]
			[Address(RVA = "0x1144D10", Offset = "0x1144D10", VA = "0x1144D10")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20006EA")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Rect : BBParameter<Rect>
		{
			[Token(Token = "0x6002F2B")]
			[Address(RVA = "0x1144FE0", Offset = "0x1144FE0", VA = "0x1144FE0")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20006EB")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_ContactPoint : BBParameter<ContactPoint>
		{
			[Token(Token = "0x6002F2C")]
			[Address(RVA = "0x1144D60", Offset = "0x1144D60", VA = "0x1144D60")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20006EC")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_ContactPoint2D : BBParameter<ContactPoint2D>
		{
			[Token(Token = "0x6002F2D")]
			[Address(RVA = "0x1144DB0", Offset = "0x1144DB0", VA = "0x1144DB0")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20006ED")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Collision : BBParameter<Collision>
		{
			[Token(Token = "0x6002F2E")]
			[Address(RVA = "0x1144C70", Offset = "0x1144C70", VA = "0x1144C70")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20006EE")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Collision2D : BBParameter<Collision2D>
		{
			[Token(Token = "0x6002F2F")]
			[Address(RVA = "0x1144CC0", Offset = "0x1144CC0", VA = "0x1144CC0")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20006EF")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_RaycastHit : BBParameter<RaycastHit>
		{
			[Token(Token = "0x6002F30")]
			[Address(RVA = "0x1144F40", Offset = "0x1144F40", VA = "0x1144F40")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20006F0")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_RaycastHit2D : BBParameter<RaycastHit2D>
		{
			[Token(Token = "0x6002F31")]
			[Address(RVA = "0x1144F90", Offset = "0x1144F90", VA = "0x1144F90")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20006F1")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Ray : BBParameter<Ray>
		{
			[Token(Token = "0x6002F32")]
			[Address(RVA = "0x1144EF0", Offset = "0x1144EF0", VA = "0x1144EF0")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20006F2")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_Space : BBParameter<Space>
		{
			[Token(Token = "0x6002F33")]
			[Address(RVA = "0x1145030", Offset = "0x1145030", VA = "0x1145030")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20006F3")]
		private class NodeCanvas_Framework_BBParameter_BossMainDone : BBParameter<BossMainDone>
		{
			[Token(Token = "0x6002F34")]
			[Address(RVA = "0x1144A40", Offset = "0x1144A40", VA = "0x1144A40")]
			public NodeCanvas_Framework_BBParameter_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20006F4")]
		private class NodeCanvas_Framework_BBParameter_BossMainToDo : BBParameter<BossMainToDo>
		{
			[Token(Token = "0x6002F35")]
			[Address(RVA = "0x1144A90", Offset = "0x1144A90", VA = "0x1144A90")]
			public NodeCanvas_Framework_BBParameter_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20006F5")]
		private class NodeCanvas_Framework_BBParameter_e_group_type : BBParameter<e_group_type>
		{
			[Token(Token = "0x6002F36")]
			[Address(RVA = "0x1145210", Offset = "0x1145210", VA = "0x1145210")]
			public NodeCanvas_Framework_BBParameter_e_group_type()
			{
			}
		}

		[Token(Token = "0x20006F6")]
		private class NodeCanvas_Framework_BBParameter_eMonsterAttackDirType : BBParameter<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002F37")]
			[Address(RVA = "0x1145170", Offset = "0x1145170", VA = "0x1145170")]
			public NodeCanvas_Framework_BBParameter_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20006F7")]
		private class NodeCanvas_Framework_BBParameter_eMonsterAttackType : BBParameter<eMonsterAttackType>
		{
			[Token(Token = "0x6002F38")]
			[Address(RVA = "0x11451C0", Offset = "0x11451C0", VA = "0x11451C0")]
			public NodeCanvas_Framework_BBParameter_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20006F8")]
		private class NodeCanvas_Framework_BBParameter_MoveTargetType : BBParameter<MoveTargetType>
		{
			[Token(Token = "0x6002F39")]
			[Address(RVA = "0x1144AE0", Offset = "0x1144AE0", VA = "0x1144AE0")]
			public NodeCanvas_Framework_BBParameter_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20006F9")]
		private class NodeCanvas_Framework_BBParameter_UnityEngine_LayerMask : BBParameter<LayerMask>
		{
			[Token(Token = "0x6002F3A")]
			[Address(RVA = "0x1144E50", Offset = "0x1144E50", VA = "0x1144E50")]
			public NodeCanvas_Framework_BBParameter_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20006FA")]
		private class NodeCanvas_Framework_Variable_System_Boolean : Variable<bool>
		{
			[Token(Token = "0x6002F3B")]
			[Address(RVA = "0x1145350", Offset = "0x1145350", VA = "0x1145350")]
			public NodeCanvas_Framework_Variable_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20006FB")]
		private class NodeCanvas_Framework_Variable_System_Single : Variable<float>
		{
			[Token(Token = "0x6002F3C")]
			[Address(RVA = "0x11453F0", Offset = "0x11453F0", VA = "0x11453F0")]
			public NodeCanvas_Framework_Variable_System_Single()
			{
			}
		}

		[Token(Token = "0x20006FC")]
		private class NodeCanvas_Framework_Variable_System_Int32 : Variable<int>
		{
			[Token(Token = "0x6002F3D")]
			[Address(RVA = "0x11453A0", Offset = "0x11453A0", VA = "0x11453A0")]
			public NodeCanvas_Framework_Variable_System_Int32()
			{
			}
		}

		[Token(Token = "0x20006FD")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Vector2 : Variable<Vector2>
		{
			[Token(Token = "0x6002F3E")]
			[Address(RVA = "0x11458A0", Offset = "0x11458A0", VA = "0x11458A0")]
			public NodeCanvas_Framework_Variable_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20006FE")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Vector3 : Variable<Vector3>
		{
			[Token(Token = "0x6002F3F")]
			[Address(RVA = "0x11458F0", Offset = "0x11458F0", VA = "0x11458F0")]
			public NodeCanvas_Framework_Variable_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20006FF")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Vector4 : Variable<Vector4>
		{
			[Token(Token = "0x6002F40")]
			[Address(RVA = "0x1145940", Offset = "0x1145940", VA = "0x1145940")]
			public NodeCanvas_Framework_Variable_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000700")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Quaternion : Variable<Quaternion>
		{
			[Token(Token = "0x6002F41")]
			[Address(RVA = "0x11456C0", Offset = "0x11456C0", VA = "0x11456C0")]
			public NodeCanvas_Framework_Variable_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000701")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Keyframe : Variable<Keyframe>
		{
			[Token(Token = "0x6002F42")]
			[Address(RVA = "0x1145620", Offset = "0x1145620", VA = "0x1145620")]
			public NodeCanvas_Framework_Variable_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000702")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Bounds : Variable<Bounds>
		{
			[Token(Token = "0x6002F43")]
			[Address(RVA = "0x1145440", Offset = "0x1145440", VA = "0x1145440")]
			public NodeCanvas_Framework_Variable_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000703")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Color : Variable<Color>
		{
			[Token(Token = "0x6002F44")]
			[Address(RVA = "0x1145530", Offset = "0x1145530", VA = "0x1145530")]
			public NodeCanvas_Framework_Variable_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000704")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Rect : Variable<Rect>
		{
			[Token(Token = "0x6002F45")]
			[Address(RVA = "0x1145800", Offset = "0x1145800", VA = "0x1145800")]
			public NodeCanvas_Framework_Variable_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000705")]
		private class NodeCanvas_Framework_Variable_UnityEngine_ContactPoint : Variable<ContactPoint>
		{
			[Token(Token = "0x6002F46")]
			[Address(RVA = "0x1145580", Offset = "0x1145580", VA = "0x1145580")]
			public NodeCanvas_Framework_Variable_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000706")]
		private class NodeCanvas_Framework_Variable_UnityEngine_ContactPoint2D : Variable<ContactPoint2D>
		{
			[Token(Token = "0x6002F47")]
			[Address(RVA = "0x11455D0", Offset = "0x11455D0", VA = "0x11455D0")]
			public NodeCanvas_Framework_Variable_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000707")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Collision : Variable<Collision>
		{
			[Token(Token = "0x6002F48")]
			[Address(RVA = "0x1145490", Offset = "0x1145490", VA = "0x1145490")]
			public NodeCanvas_Framework_Variable_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000708")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Collision2D : Variable<Collision2D>
		{
			[Token(Token = "0x6002F49")]
			[Address(RVA = "0x11454E0", Offset = "0x11454E0", VA = "0x11454E0")]
			public NodeCanvas_Framework_Variable_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000709")]
		private class NodeCanvas_Framework_Variable_UnityEngine_RaycastHit : Variable<RaycastHit>
		{
			[Token(Token = "0x6002F4A")]
			[Address(RVA = "0x1145760", Offset = "0x1145760", VA = "0x1145760")]
			public NodeCanvas_Framework_Variable_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200070A")]
		private class NodeCanvas_Framework_Variable_UnityEngine_RaycastHit2D : Variable<RaycastHit2D>
		{
			[Token(Token = "0x6002F4B")]
			[Address(RVA = "0x11457B0", Offset = "0x11457B0", VA = "0x11457B0")]
			public NodeCanvas_Framework_Variable_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200070B")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Ray : Variable<Ray>
		{
			[Token(Token = "0x6002F4C")]
			[Address(RVA = "0x1145710", Offset = "0x1145710", VA = "0x1145710")]
			public NodeCanvas_Framework_Variable_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200070C")]
		private class NodeCanvas_Framework_Variable_UnityEngine_Space : Variable<Space>
		{
			[Token(Token = "0x6002F4D")]
			[Address(RVA = "0x1145850", Offset = "0x1145850", VA = "0x1145850")]
			public NodeCanvas_Framework_Variable_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200070D")]
		private class NodeCanvas_Framework_Variable_BossMainDone : Variable<BossMainDone>
		{
			[Token(Token = "0x6002F4E")]
			[Address(RVA = "0x1145260", Offset = "0x1145260", VA = "0x1145260")]
			public NodeCanvas_Framework_Variable_BossMainDone()
			{
			}
		}

		[Token(Token = "0x200070E")]
		private class NodeCanvas_Framework_Variable_BossMainToDo : Variable<BossMainToDo>
		{
			[Token(Token = "0x6002F4F")]
			[Address(RVA = "0x11452B0", Offset = "0x11452B0", VA = "0x11452B0")]
			public NodeCanvas_Framework_Variable_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x200070F")]
		private class NodeCanvas_Framework_Variable_e_group_type : Variable<e_group_type>
		{
			[Token(Token = "0x6002F50")]
			[Address(RVA = "0x1145A30", Offset = "0x1145A30", VA = "0x1145A30")]
			public NodeCanvas_Framework_Variable_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000710")]
		private class NodeCanvas_Framework_Variable_eMonsterAttackDirType : Variable<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002F51")]
			[Address(RVA = "0x1145990", Offset = "0x1145990", VA = "0x1145990")]
			public NodeCanvas_Framework_Variable_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000711")]
		private class NodeCanvas_Framework_Variable_eMonsterAttackType : Variable<eMonsterAttackType>
		{
			[Token(Token = "0x6002F52")]
			[Address(RVA = "0x11459E0", Offset = "0x11459E0", VA = "0x11459E0")]
			public NodeCanvas_Framework_Variable_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000712")]
		private class NodeCanvas_Framework_Variable_MoveTargetType : Variable<MoveTargetType>
		{
			[Token(Token = "0x6002F53")]
			[Address(RVA = "0x1145300", Offset = "0x1145300", VA = "0x1145300")]
			public NodeCanvas_Framework_Variable_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000713")]
		private class NodeCanvas_Framework_Variable_UnityEngine_LayerMask : Variable<LayerMask>
		{
			[Token(Token = "0x6002F54")]
			[Address(RVA = "0x1145670", Offset = "0x1145670", VA = "0x1145670")]
			public NodeCanvas_Framework_Variable_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000714")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_System_Boolean : AddElementToDictionary<bool>
		{
			[Token(Token = "0x6002F55")]
			[Address(RVA = "0x1145B70", Offset = "0x1145B70", VA = "0x1145B70")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000715")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_System_Single : AddElementToDictionary<float>
		{
			[Token(Token = "0x6002F56")]
			[Address(RVA = "0x1145C10", Offset = "0x1145C10", VA = "0x1145C10")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_System_Single()
			{
			}
		}

		[Token(Token = "0x2000716")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_System_Int32 : AddElementToDictionary<int>
		{
			[Token(Token = "0x6002F57")]
			[Address(RVA = "0x1145BC0", Offset = "0x1145BC0", VA = "0x1145BC0")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000717")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Vector2 : AddElementToDictionary<Vector2>
		{
			[Token(Token = "0x6002F58")]
			[Address(RVA = "0x11460C0", Offset = "0x11460C0", VA = "0x11460C0")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000718")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Vector3 : AddElementToDictionary<Vector3>
		{
			[Token(Token = "0x6002F59")]
			[Address(RVA = "0x1146110", Offset = "0x1146110", VA = "0x1146110")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000719")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Vector4 : AddElementToDictionary<Vector4>
		{
			[Token(Token = "0x6002F5A")]
			[Address(RVA = "0x1146160", Offset = "0x1146160", VA = "0x1146160")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200071A")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Quaternion : AddElementToDictionary<Quaternion>
		{
			[Token(Token = "0x6002F5B")]
			[Address(RVA = "0x1145EE0", Offset = "0x1145EE0", VA = "0x1145EE0")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200071B")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Keyframe : AddElementToDictionary<Keyframe>
		{
			[Token(Token = "0x6002F5C")]
			[Address(RVA = "0x1145E40", Offset = "0x1145E40", VA = "0x1145E40")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200071C")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Bounds : AddElementToDictionary<Bounds>
		{
			[Token(Token = "0x6002F5D")]
			[Address(RVA = "0x1145C60", Offset = "0x1145C60", VA = "0x1145C60")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200071D")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Color : AddElementToDictionary<Color>
		{
			[Token(Token = "0x6002F5E")]
			[Address(RVA = "0x1145D50", Offset = "0x1145D50", VA = "0x1145D50")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200071E")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Rect : AddElementToDictionary<Rect>
		{
			[Token(Token = "0x6002F5F")]
			[Address(RVA = "0x1146020", Offset = "0x1146020", VA = "0x1146020")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200071F")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_ContactPoint : AddElementToDictionary<ContactPoint>
		{
			[Token(Token = "0x6002F60")]
			[Address(RVA = "0x1145DA0", Offset = "0x1145DA0", VA = "0x1145DA0")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000720")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_ContactPoint2D : AddElementToDictionary<ContactPoint2D>
		{
			[Token(Token = "0x6002F61")]
			[Address(RVA = "0x1145DF0", Offset = "0x1145DF0", VA = "0x1145DF0")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000721")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Collision : AddElementToDictionary<Collision>
		{
			[Token(Token = "0x6002F62")]
			[Address(RVA = "0x1145CB0", Offset = "0x1145CB0", VA = "0x1145CB0")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000722")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Collision2D : AddElementToDictionary<Collision2D>
		{
			[Token(Token = "0x6002F63")]
			[Address(RVA = "0x1145D00", Offset = "0x1145D00", VA = "0x1145D00")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000723")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_RaycastHit : AddElementToDictionary<RaycastHit>
		{
			[Token(Token = "0x6002F64")]
			[Address(RVA = "0x1145F80", Offset = "0x1145F80", VA = "0x1145F80")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000724")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_RaycastHit2D : AddElementToDictionary<RaycastHit2D>
		{
			[Token(Token = "0x6002F65")]
			[Address(RVA = "0x1145FD0", Offset = "0x1145FD0", VA = "0x1145FD0")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000725")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Ray : AddElementToDictionary<Ray>
		{
			[Token(Token = "0x6002F66")]
			[Address(RVA = "0x1145F30", Offset = "0x1145F30", VA = "0x1145F30")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000726")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Space : AddElementToDictionary<Space>
		{
			[Token(Token = "0x6002F67")]
			[Address(RVA = "0x1146070", Offset = "0x1146070", VA = "0x1146070")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000727")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_BossMainDone : AddElementToDictionary<BossMainDone>
		{
			[Token(Token = "0x6002F68")]
			[Address(RVA = "0x1145A80", Offset = "0x1145A80", VA = "0x1145A80")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000728")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_BossMainToDo : AddElementToDictionary<BossMainToDo>
		{
			[Token(Token = "0x6002F69")]
			[Address(RVA = "0x1145AD0", Offset = "0x1145AD0", VA = "0x1145AD0")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000729")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_e_group_type : AddElementToDictionary<e_group_type>
		{
			[Token(Token = "0x6002F6A")]
			[Address(RVA = "0x1146250", Offset = "0x1146250", VA = "0x1146250")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_e_group_type()
			{
			}
		}

		[Token(Token = "0x200072A")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_eMonsterAttackDirType : AddElementToDictionary<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002F6B")]
			[Address(RVA = "0x11461B0", Offset = "0x11461B0", VA = "0x11461B0")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x200072B")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_eMonsterAttackType : AddElementToDictionary<eMonsterAttackType>
		{
			[Token(Token = "0x6002F6C")]
			[Address(RVA = "0x1146200", Offset = "0x1146200", VA = "0x1146200")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x200072C")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_MoveTargetType : AddElementToDictionary<MoveTargetType>
		{
			[Token(Token = "0x6002F6D")]
			[Address(RVA = "0x1145B20", Offset = "0x1145B20", VA = "0x1145B20")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x200072D")]
		private class NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_LayerMask : AddElementToDictionary<LayerMask>
		{
			[Token(Token = "0x6002F6E")]
			[Address(RVA = "0x1145E90", Offset = "0x1145E90", VA = "0x1145E90")]
			public NodeCanvas_Tasks_Actions_AddElementToDictionary_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200072E")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_System_Boolean : AddElementToList<bool>
		{
			[Token(Token = "0x6002F6F")]
			[Address(RVA = "0x1146390", Offset = "0x1146390", VA = "0x1146390")]
			public NodeCanvas_Tasks_Actions_AddElementToList_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200072F")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_System_Single : AddElementToList<float>
		{
			[Token(Token = "0x6002F70")]
			[Address(RVA = "0x1146430", Offset = "0x1146430", VA = "0x1146430")]
			public NodeCanvas_Tasks_Actions_AddElementToList_System_Single()
			{
			}
		}

		[Token(Token = "0x2000730")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_System_Int32 : AddElementToList<int>
		{
			[Token(Token = "0x6002F71")]
			[Address(RVA = "0x11463E0", Offset = "0x11463E0", VA = "0x11463E0")]
			public NodeCanvas_Tasks_Actions_AddElementToList_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000731")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Vector2 : AddElementToList<Vector2>
		{
			[Token(Token = "0x6002F72")]
			[Address(RVA = "0x11468E0", Offset = "0x11468E0", VA = "0x11468E0")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000732")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Vector3 : AddElementToList<Vector3>
		{
			[Token(Token = "0x6002F73")]
			[Address(RVA = "0x1146930", Offset = "0x1146930", VA = "0x1146930")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000733")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Vector4 : AddElementToList<Vector4>
		{
			[Token(Token = "0x6002F74")]
			[Address(RVA = "0x1146980", Offset = "0x1146980", VA = "0x1146980")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000734")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Quaternion : AddElementToList<Quaternion>
		{
			[Token(Token = "0x6002F75")]
			[Address(RVA = "0x1146700", Offset = "0x1146700", VA = "0x1146700")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000735")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Keyframe : AddElementToList<Keyframe>
		{
			[Token(Token = "0x6002F76")]
			[Address(RVA = "0x1146660", Offset = "0x1146660", VA = "0x1146660")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000736")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Bounds : AddElementToList<Bounds>
		{
			[Token(Token = "0x6002F77")]
			[Address(RVA = "0x1146480", Offset = "0x1146480", VA = "0x1146480")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000737")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Color : AddElementToList<Color>
		{
			[Token(Token = "0x6002F78")]
			[Address(RVA = "0x1146570", Offset = "0x1146570", VA = "0x1146570")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000738")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Rect : AddElementToList<Rect>
		{
			[Token(Token = "0x6002F79")]
			[Address(RVA = "0x1146840", Offset = "0x1146840", VA = "0x1146840")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000739")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_ContactPoint : AddElementToList<ContactPoint>
		{
			[Token(Token = "0x6002F7A")]
			[Address(RVA = "0x11465C0", Offset = "0x11465C0", VA = "0x11465C0")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200073A")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_ContactPoint2D : AddElementToList<ContactPoint2D>
		{
			[Token(Token = "0x6002F7B")]
			[Address(RVA = "0x1146610", Offset = "0x1146610", VA = "0x1146610")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200073B")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Collision : AddElementToList<Collision>
		{
			[Token(Token = "0x6002F7C")]
			[Address(RVA = "0x11464D0", Offset = "0x11464D0", VA = "0x11464D0")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200073C")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Collision2D : AddElementToList<Collision2D>
		{
			[Token(Token = "0x6002F7D")]
			[Address(RVA = "0x1146520", Offset = "0x1146520", VA = "0x1146520")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200073D")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_RaycastHit : AddElementToList<RaycastHit>
		{
			[Token(Token = "0x6002F7E")]
			[Address(RVA = "0x11467A0", Offset = "0x11467A0", VA = "0x11467A0")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200073E")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_RaycastHit2D : AddElementToList<RaycastHit2D>
		{
			[Token(Token = "0x6002F7F")]
			[Address(RVA = "0x11467F0", Offset = "0x11467F0", VA = "0x11467F0")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200073F")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Ray : AddElementToList<Ray>
		{
			[Token(Token = "0x6002F80")]
			[Address(RVA = "0x1146750", Offset = "0x1146750", VA = "0x1146750")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000740")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Space : AddElementToList<Space>
		{
			[Token(Token = "0x6002F81")]
			[Address(RVA = "0x1146890", Offset = "0x1146890", VA = "0x1146890")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000741")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_BossMainDone : AddElementToList<BossMainDone>
		{
			[Token(Token = "0x6002F82")]
			[Address(RVA = "0x11462A0", Offset = "0x11462A0", VA = "0x11462A0")]
			public NodeCanvas_Tasks_Actions_AddElementToList_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000742")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_BossMainToDo : AddElementToList<BossMainToDo>
		{
			[Token(Token = "0x6002F83")]
			[Address(RVA = "0x11462F0", Offset = "0x11462F0", VA = "0x11462F0")]
			public NodeCanvas_Tasks_Actions_AddElementToList_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000743")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_e_group_type : AddElementToList<e_group_type>
		{
			[Token(Token = "0x6002F84")]
			[Address(RVA = "0x1146A70", Offset = "0x1146A70", VA = "0x1146A70")]
			public NodeCanvas_Tasks_Actions_AddElementToList_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000744")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_eMonsterAttackDirType : AddElementToList<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002F85")]
			[Address(RVA = "0x11469D0", Offset = "0x11469D0", VA = "0x11469D0")]
			public NodeCanvas_Tasks_Actions_AddElementToList_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000745")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_eMonsterAttackType : AddElementToList<eMonsterAttackType>
		{
			[Token(Token = "0x6002F86")]
			[Address(RVA = "0x1146A20", Offset = "0x1146A20", VA = "0x1146A20")]
			public NodeCanvas_Tasks_Actions_AddElementToList_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000746")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_MoveTargetType : AddElementToList<MoveTargetType>
		{
			[Token(Token = "0x6002F87")]
			[Address(RVA = "0x1146340", Offset = "0x1146340", VA = "0x1146340")]
			public NodeCanvas_Tasks_Actions_AddElementToList_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000747")]
		private class NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_LayerMask : AddElementToList<LayerMask>
		{
			[Token(Token = "0x6002F88")]
			[Address(RVA = "0x11466B0", Offset = "0x11466B0", VA = "0x11466B0")]
			public NodeCanvas_Tasks_Actions_AddElementToList_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000748")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_System_Boolean : GetDictionaryElement<bool>
		{
			[Token(Token = "0x6002F89")]
			[Address(RVA = "0x1146BB0", Offset = "0x1146BB0", VA = "0x1146BB0")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000749")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_System_Single : GetDictionaryElement<float>
		{
			[Token(Token = "0x6002F8A")]
			[Address(RVA = "0x1146C50", Offset = "0x1146C50", VA = "0x1146C50")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_System_Single()
			{
			}
		}

		[Token(Token = "0x200074A")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_System_Int32 : GetDictionaryElement<int>
		{
			[Token(Token = "0x6002F8B")]
			[Address(RVA = "0x1146C00", Offset = "0x1146C00", VA = "0x1146C00")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_System_Int32()
			{
			}
		}

		[Token(Token = "0x200074B")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Vector2 : GetDictionaryElement<Vector2>
		{
			[Token(Token = "0x6002F8C")]
			[Address(RVA = "0x1147100", Offset = "0x1147100", VA = "0x1147100")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200074C")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Vector3 : GetDictionaryElement<Vector3>
		{
			[Token(Token = "0x6002F8D")]
			[Address(RVA = "0x1147150", Offset = "0x1147150", VA = "0x1147150")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200074D")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Vector4 : GetDictionaryElement<Vector4>
		{
			[Token(Token = "0x6002F8E")]
			[Address(RVA = "0x11471A0", Offset = "0x11471A0", VA = "0x11471A0")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200074E")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Quaternion : GetDictionaryElement<Quaternion>
		{
			[Token(Token = "0x6002F8F")]
			[Address(RVA = "0x1146F20", Offset = "0x1146F20", VA = "0x1146F20")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200074F")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Keyframe : GetDictionaryElement<Keyframe>
		{
			[Token(Token = "0x6002F90")]
			[Address(RVA = "0x1146E80", Offset = "0x1146E80", VA = "0x1146E80")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000750")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Bounds : GetDictionaryElement<Bounds>
		{
			[Token(Token = "0x6002F91")]
			[Address(RVA = "0x1146CA0", Offset = "0x1146CA0", VA = "0x1146CA0")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000751")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Color : GetDictionaryElement<Color>
		{
			[Token(Token = "0x6002F92")]
			[Address(RVA = "0x1146D90", Offset = "0x1146D90", VA = "0x1146D90")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000752")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Rect : GetDictionaryElement<Rect>
		{
			[Token(Token = "0x6002F93")]
			[Address(RVA = "0x1147060", Offset = "0x1147060", VA = "0x1147060")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000753")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_ContactPoint : GetDictionaryElement<ContactPoint>
		{
			[Token(Token = "0x6002F94")]
			[Address(RVA = "0x1146DE0", Offset = "0x1146DE0", VA = "0x1146DE0")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000754")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_ContactPoint2D : GetDictionaryElement<ContactPoint2D>
		{
			[Token(Token = "0x6002F95")]
			[Address(RVA = "0x1146E30", Offset = "0x1146E30", VA = "0x1146E30")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000755")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Collision : GetDictionaryElement<Collision>
		{
			[Token(Token = "0x6002F96")]
			[Address(RVA = "0x1146CF0", Offset = "0x1146CF0", VA = "0x1146CF0")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000756")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Collision2D : GetDictionaryElement<Collision2D>
		{
			[Token(Token = "0x6002F97")]
			[Address(RVA = "0x1146D40", Offset = "0x1146D40", VA = "0x1146D40")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000757")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_RaycastHit : GetDictionaryElement<RaycastHit>
		{
			[Token(Token = "0x6002F98")]
			[Address(RVA = "0x1146FC0", Offset = "0x1146FC0", VA = "0x1146FC0")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000758")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_RaycastHit2D : GetDictionaryElement<RaycastHit2D>
		{
			[Token(Token = "0x6002F99")]
			[Address(RVA = "0x1147010", Offset = "0x1147010", VA = "0x1147010")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000759")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Ray : GetDictionaryElement<Ray>
		{
			[Token(Token = "0x6002F9A")]
			[Address(RVA = "0x1146F70", Offset = "0x1146F70", VA = "0x1146F70")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200075A")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Space : GetDictionaryElement<Space>
		{
			[Token(Token = "0x6002F9B")]
			[Address(RVA = "0x11470B0", Offset = "0x11470B0", VA = "0x11470B0")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200075B")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_BossMainDone : GetDictionaryElement<BossMainDone>
		{
			[Token(Token = "0x6002F9C")]
			[Address(RVA = "0x1146AC0", Offset = "0x1146AC0", VA = "0x1146AC0")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_BossMainDone()
			{
			}
		}

		[Token(Token = "0x200075C")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_BossMainToDo : GetDictionaryElement<BossMainToDo>
		{
			[Token(Token = "0x6002F9D")]
			[Address(RVA = "0x1146B10", Offset = "0x1146B10", VA = "0x1146B10")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x200075D")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_e_group_type : GetDictionaryElement<e_group_type>
		{
			[Token(Token = "0x6002F9E")]
			[Address(RVA = "0x1147290", Offset = "0x1147290", VA = "0x1147290")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_e_group_type()
			{
			}
		}

		[Token(Token = "0x200075E")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_eMonsterAttackDirType : GetDictionaryElement<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002F9F")]
			[Address(RVA = "0x11471F0", Offset = "0x11471F0", VA = "0x11471F0")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x200075F")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_eMonsterAttackType : GetDictionaryElement<eMonsterAttackType>
		{
			[Token(Token = "0x6002FA0")]
			[Address(RVA = "0x1147240", Offset = "0x1147240", VA = "0x1147240")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000760")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_MoveTargetType : GetDictionaryElement<MoveTargetType>
		{
			[Token(Token = "0x6002FA1")]
			[Address(RVA = "0x1146B60", Offset = "0x1146B60", VA = "0x1146B60")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000761")]
		private class NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_LayerMask : GetDictionaryElement<LayerMask>
		{
			[Token(Token = "0x6002FA2")]
			[Address(RVA = "0x1146ED0", Offset = "0x1146ED0", VA = "0x1146ED0")]
			public NodeCanvas_Tasks_Actions_GetDictionaryElement_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000762")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_System_Boolean : GetIndexOfElement<bool>
		{
			[Token(Token = "0x6002FA3")]
			[Address(RVA = "0x11473D0", Offset = "0x11473D0", VA = "0x11473D0")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000763")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_System_Single : GetIndexOfElement<float>
		{
			[Token(Token = "0x6002FA4")]
			[Address(RVA = "0x1147470", Offset = "0x1147470", VA = "0x1147470")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_System_Single()
			{
			}
		}

		[Token(Token = "0x2000764")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_System_Int32 : GetIndexOfElement<int>
		{
			[Token(Token = "0x6002FA5")]
			[Address(RVA = "0x1147420", Offset = "0x1147420", VA = "0x1147420")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000765")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Vector2 : GetIndexOfElement<Vector2>
		{
			[Token(Token = "0x6002FA6")]
			[Address(RVA = "0x1147920", Offset = "0x1147920", VA = "0x1147920")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000766")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Vector3 : GetIndexOfElement<Vector3>
		{
			[Token(Token = "0x6002FA7")]
			[Address(RVA = "0x1147970", Offset = "0x1147970", VA = "0x1147970")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000767")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Vector4 : GetIndexOfElement<Vector4>
		{
			[Token(Token = "0x6002FA8")]
			[Address(RVA = "0x11479C0", Offset = "0x11479C0", VA = "0x11479C0")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000768")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Quaternion : GetIndexOfElement<Quaternion>
		{
			[Token(Token = "0x6002FA9")]
			[Address(RVA = "0x1147740", Offset = "0x1147740", VA = "0x1147740")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000769")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Keyframe : GetIndexOfElement<Keyframe>
		{
			[Token(Token = "0x6002FAA")]
			[Address(RVA = "0x11476A0", Offset = "0x11476A0", VA = "0x11476A0")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200076A")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Bounds : GetIndexOfElement<Bounds>
		{
			[Token(Token = "0x6002FAB")]
			[Address(RVA = "0x11474C0", Offset = "0x11474C0", VA = "0x11474C0")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200076B")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Color : GetIndexOfElement<Color>
		{
			[Token(Token = "0x6002FAC")]
			[Address(RVA = "0x11475B0", Offset = "0x11475B0", VA = "0x11475B0")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200076C")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Rect : GetIndexOfElement<Rect>
		{
			[Token(Token = "0x6002FAD")]
			[Address(RVA = "0x1147880", Offset = "0x1147880", VA = "0x1147880")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200076D")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_ContactPoint : GetIndexOfElement<ContactPoint>
		{
			[Token(Token = "0x6002FAE")]
			[Address(RVA = "0x1147600", Offset = "0x1147600", VA = "0x1147600")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200076E")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_ContactPoint2D : GetIndexOfElement<ContactPoint2D>
		{
			[Token(Token = "0x6002FAF")]
			[Address(RVA = "0x1147650", Offset = "0x1147650", VA = "0x1147650")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200076F")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Collision : GetIndexOfElement<Collision>
		{
			[Token(Token = "0x6002FB0")]
			[Address(RVA = "0x1147510", Offset = "0x1147510", VA = "0x1147510")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000770")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Collision2D : GetIndexOfElement<Collision2D>
		{
			[Token(Token = "0x6002FB1")]
			[Address(RVA = "0x1147560", Offset = "0x1147560", VA = "0x1147560")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000771")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_RaycastHit : GetIndexOfElement<RaycastHit>
		{
			[Token(Token = "0x6002FB2")]
			[Address(RVA = "0x11477E0", Offset = "0x11477E0", VA = "0x11477E0")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000772")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_RaycastHit2D : GetIndexOfElement<RaycastHit2D>
		{
			[Token(Token = "0x6002FB3")]
			[Address(RVA = "0x1147830", Offset = "0x1147830", VA = "0x1147830")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000773")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Ray : GetIndexOfElement<Ray>
		{
			[Token(Token = "0x6002FB4")]
			[Address(RVA = "0x1147790", Offset = "0x1147790", VA = "0x1147790")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000774")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Space : GetIndexOfElement<Space>
		{
			[Token(Token = "0x6002FB5")]
			[Address(RVA = "0x11478D0", Offset = "0x11478D0", VA = "0x11478D0")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000775")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_BossMainDone : GetIndexOfElement<BossMainDone>
		{
			[Token(Token = "0x6002FB6")]
			[Address(RVA = "0x11472E0", Offset = "0x11472E0", VA = "0x11472E0")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000776")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_BossMainToDo : GetIndexOfElement<BossMainToDo>
		{
			[Token(Token = "0x6002FB7")]
			[Address(RVA = "0x1147330", Offset = "0x1147330", VA = "0x1147330")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000777")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_e_group_type : GetIndexOfElement<e_group_type>
		{
			[Token(Token = "0x6002FB8")]
			[Address(RVA = "0x1147AB0", Offset = "0x1147AB0", VA = "0x1147AB0")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000778")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_eMonsterAttackDirType : GetIndexOfElement<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002FB9")]
			[Address(RVA = "0x1147A10", Offset = "0x1147A10", VA = "0x1147A10")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000779")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_eMonsterAttackType : GetIndexOfElement<eMonsterAttackType>
		{
			[Token(Token = "0x6002FBA")]
			[Address(RVA = "0x1147A60", Offset = "0x1147A60", VA = "0x1147A60")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x200077A")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_MoveTargetType : GetIndexOfElement<MoveTargetType>
		{
			[Token(Token = "0x6002FBB")]
			[Address(RVA = "0x1147380", Offset = "0x1147380", VA = "0x1147380")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x200077B")]
		private class NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_LayerMask : GetIndexOfElement<LayerMask>
		{
			[Token(Token = "0x6002FBC")]
			[Address(RVA = "0x11476F0", Offset = "0x11476F0", VA = "0x11476F0")]
			public NodeCanvas_Tasks_Actions_GetIndexOfElement_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200077C")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_System_Boolean : InsertElementToList<bool>
		{
			[Token(Token = "0x6002FBD")]
			[Address(RVA = "0x1147BF0", Offset = "0x1147BF0", VA = "0x1147BF0")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200077D")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_System_Single : InsertElementToList<float>
		{
			[Token(Token = "0x6002FBE")]
			[Address(RVA = "0x1147C90", Offset = "0x1147C90", VA = "0x1147C90")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_System_Single()
			{
			}
		}

		[Token(Token = "0x200077E")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_System_Int32 : InsertElementToList<int>
		{
			[Token(Token = "0x6002FBF")]
			[Address(RVA = "0x1147C40", Offset = "0x1147C40", VA = "0x1147C40")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_System_Int32()
			{
			}
		}

		[Token(Token = "0x200077F")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Vector2 : InsertElementToList<Vector2>
		{
			[Token(Token = "0x6002FC0")]
			[Address(RVA = "0x1148140", Offset = "0x1148140", VA = "0x1148140")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000780")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Vector3 : InsertElementToList<Vector3>
		{
			[Token(Token = "0x6002FC1")]
			[Address(RVA = "0x1148190", Offset = "0x1148190", VA = "0x1148190")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000781")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Vector4 : InsertElementToList<Vector4>
		{
			[Token(Token = "0x6002FC2")]
			[Address(RVA = "0x11481E0", Offset = "0x11481E0", VA = "0x11481E0")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000782")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Quaternion : InsertElementToList<Quaternion>
		{
			[Token(Token = "0x6002FC3")]
			[Address(RVA = "0x1147F60", Offset = "0x1147F60", VA = "0x1147F60")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000783")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Keyframe : InsertElementToList<Keyframe>
		{
			[Token(Token = "0x6002FC4")]
			[Address(RVA = "0x1147EC0", Offset = "0x1147EC0", VA = "0x1147EC0")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000784")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Bounds : InsertElementToList<Bounds>
		{
			[Token(Token = "0x6002FC5")]
			[Address(RVA = "0x1147CE0", Offset = "0x1147CE0", VA = "0x1147CE0")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000785")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Color : InsertElementToList<Color>
		{
			[Token(Token = "0x6002FC6")]
			[Address(RVA = "0x1147DD0", Offset = "0x1147DD0", VA = "0x1147DD0")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000786")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Rect : InsertElementToList<Rect>
		{
			[Token(Token = "0x6002FC7")]
			[Address(RVA = "0x11480A0", Offset = "0x11480A0", VA = "0x11480A0")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000787")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_ContactPoint : InsertElementToList<ContactPoint>
		{
			[Token(Token = "0x6002FC8")]
			[Address(RVA = "0x1147E20", Offset = "0x1147E20", VA = "0x1147E20")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000788")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_ContactPoint2D : InsertElementToList<ContactPoint2D>
		{
			[Token(Token = "0x6002FC9")]
			[Address(RVA = "0x1147E70", Offset = "0x1147E70", VA = "0x1147E70")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000789")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Collision : InsertElementToList<Collision>
		{
			[Token(Token = "0x6002FCA")]
			[Address(RVA = "0x1147D30", Offset = "0x1147D30", VA = "0x1147D30")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200078A")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Collision2D : InsertElementToList<Collision2D>
		{
			[Token(Token = "0x6002FCB")]
			[Address(RVA = "0x1147D80", Offset = "0x1147D80", VA = "0x1147D80")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200078B")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_RaycastHit : InsertElementToList<RaycastHit>
		{
			[Token(Token = "0x6002FCC")]
			[Address(RVA = "0x1148000", Offset = "0x1148000", VA = "0x1148000")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200078C")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_RaycastHit2D : InsertElementToList<RaycastHit2D>
		{
			[Token(Token = "0x6002FCD")]
			[Address(RVA = "0x1148050", Offset = "0x1148050", VA = "0x1148050")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200078D")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Ray : InsertElementToList<Ray>
		{
			[Token(Token = "0x6002FCE")]
			[Address(RVA = "0x1147FB0", Offset = "0x1147FB0", VA = "0x1147FB0")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200078E")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Space : InsertElementToList<Space>
		{
			[Token(Token = "0x6002FCF")]
			[Address(RVA = "0x11480F0", Offset = "0x11480F0", VA = "0x11480F0")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200078F")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_BossMainDone : InsertElementToList<BossMainDone>
		{
			[Token(Token = "0x6002FD0")]
			[Address(RVA = "0x1147B00", Offset = "0x1147B00", VA = "0x1147B00")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000790")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_BossMainToDo : InsertElementToList<BossMainToDo>
		{
			[Token(Token = "0x6002FD1")]
			[Address(RVA = "0x1147B50", Offset = "0x1147B50", VA = "0x1147B50")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000791")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_e_group_type : InsertElementToList<e_group_type>
		{
			[Token(Token = "0x6002FD2")]
			[Address(RVA = "0x11482D0", Offset = "0x11482D0", VA = "0x11482D0")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000792")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_eMonsterAttackDirType : InsertElementToList<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002FD3")]
			[Address(RVA = "0x1148230", Offset = "0x1148230", VA = "0x1148230")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000793")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_eMonsterAttackType : InsertElementToList<eMonsterAttackType>
		{
			[Token(Token = "0x6002FD4")]
			[Address(RVA = "0x1148280", Offset = "0x1148280", VA = "0x1148280")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000794")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_MoveTargetType : InsertElementToList<MoveTargetType>
		{
			[Token(Token = "0x6002FD5")]
			[Address(RVA = "0x1147BA0", Offset = "0x1147BA0", VA = "0x1147BA0")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000795")]
		private class NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_LayerMask : InsertElementToList<LayerMask>
		{
			[Token(Token = "0x6002FD6")]
			[Address(RVA = "0x1147F10", Offset = "0x1147F10", VA = "0x1147F10")]
			public NodeCanvas_Tasks_Actions_InsertElementToList_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000796")]
		private class NodeCanvas_Tasks_Actions_PickListElement_System_Boolean : PickListElement<bool>
		{
			[Token(Token = "0x6002FD7")]
			[Address(RVA = "0x1148410", Offset = "0x1148410", VA = "0x1148410")]
			public NodeCanvas_Tasks_Actions_PickListElement_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000797")]
		private class NodeCanvas_Tasks_Actions_PickListElement_System_Single : PickListElement<float>
		{
			[Token(Token = "0x6002FD8")]
			[Address(RVA = "0x11484B0", Offset = "0x11484B0", VA = "0x11484B0")]
			public NodeCanvas_Tasks_Actions_PickListElement_System_Single()
			{
			}
		}

		[Token(Token = "0x2000798")]
		private class NodeCanvas_Tasks_Actions_PickListElement_System_Int32 : PickListElement<int>
		{
			[Token(Token = "0x6002FD9")]
			[Address(RVA = "0x1148460", Offset = "0x1148460", VA = "0x1148460")]
			public NodeCanvas_Tasks_Actions_PickListElement_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000799")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Vector2 : PickListElement<Vector2>
		{
			[Token(Token = "0x6002FDA")]
			[Address(RVA = "0x1148960", Offset = "0x1148960", VA = "0x1148960")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200079A")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Vector3 : PickListElement<Vector3>
		{
			[Token(Token = "0x6002FDB")]
			[Address(RVA = "0x11489B0", Offset = "0x11489B0", VA = "0x11489B0")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200079B")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Vector4 : PickListElement<Vector4>
		{
			[Token(Token = "0x6002FDC")]
			[Address(RVA = "0x1148A00", Offset = "0x1148A00", VA = "0x1148A00")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200079C")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Quaternion : PickListElement<Quaternion>
		{
			[Token(Token = "0x6002FDD")]
			[Address(RVA = "0x1148780", Offset = "0x1148780", VA = "0x1148780")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200079D")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Keyframe : PickListElement<Keyframe>
		{
			[Token(Token = "0x6002FDE")]
			[Address(RVA = "0x11486E0", Offset = "0x11486E0", VA = "0x11486E0")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200079E")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Bounds : PickListElement<Bounds>
		{
			[Token(Token = "0x6002FDF")]
			[Address(RVA = "0x1148500", Offset = "0x1148500", VA = "0x1148500")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200079F")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Color : PickListElement<Color>
		{
			[Token(Token = "0x6002FE0")]
			[Address(RVA = "0x11485F0", Offset = "0x11485F0", VA = "0x11485F0")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20007A0")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Rect : PickListElement<Rect>
		{
			[Token(Token = "0x6002FE1")]
			[Address(RVA = "0x11488C0", Offset = "0x11488C0", VA = "0x11488C0")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20007A1")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_ContactPoint : PickListElement<ContactPoint>
		{
			[Token(Token = "0x6002FE2")]
			[Address(RVA = "0x1148640", Offset = "0x1148640", VA = "0x1148640")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20007A2")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_ContactPoint2D : PickListElement<ContactPoint2D>
		{
			[Token(Token = "0x6002FE3")]
			[Address(RVA = "0x1148690", Offset = "0x1148690", VA = "0x1148690")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20007A3")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Collision : PickListElement<Collision>
		{
			[Token(Token = "0x6002FE4")]
			[Address(RVA = "0x1148550", Offset = "0x1148550", VA = "0x1148550")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20007A4")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Collision2D : PickListElement<Collision2D>
		{
			[Token(Token = "0x6002FE5")]
			[Address(RVA = "0x11485A0", Offset = "0x11485A0", VA = "0x11485A0")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20007A5")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_RaycastHit : PickListElement<RaycastHit>
		{
			[Token(Token = "0x6002FE6")]
			[Address(RVA = "0x1148820", Offset = "0x1148820", VA = "0x1148820")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20007A6")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_RaycastHit2D : PickListElement<RaycastHit2D>
		{
			[Token(Token = "0x6002FE7")]
			[Address(RVA = "0x1148870", Offset = "0x1148870", VA = "0x1148870")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20007A7")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Ray : PickListElement<Ray>
		{
			[Token(Token = "0x6002FE8")]
			[Address(RVA = "0x11487D0", Offset = "0x11487D0", VA = "0x11487D0")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20007A8")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Space : PickListElement<Space>
		{
			[Token(Token = "0x6002FE9")]
			[Address(RVA = "0x1148910", Offset = "0x1148910", VA = "0x1148910")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20007A9")]
		private class NodeCanvas_Tasks_Actions_PickListElement_BossMainDone : PickListElement<BossMainDone>
		{
			[Token(Token = "0x6002FEA")]
			[Address(RVA = "0x1148320", Offset = "0x1148320", VA = "0x1148320")]
			public NodeCanvas_Tasks_Actions_PickListElement_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20007AA")]
		private class NodeCanvas_Tasks_Actions_PickListElement_BossMainToDo : PickListElement<BossMainToDo>
		{
			[Token(Token = "0x6002FEB")]
			[Address(RVA = "0x1148370", Offset = "0x1148370", VA = "0x1148370")]
			public NodeCanvas_Tasks_Actions_PickListElement_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20007AB")]
		private class NodeCanvas_Tasks_Actions_PickListElement_e_group_type : PickListElement<e_group_type>
		{
			[Token(Token = "0x6002FEC")]
			[Address(RVA = "0x1148AF0", Offset = "0x1148AF0", VA = "0x1148AF0")]
			public NodeCanvas_Tasks_Actions_PickListElement_e_group_type()
			{
			}
		}

		[Token(Token = "0x20007AC")]
		private class NodeCanvas_Tasks_Actions_PickListElement_eMonsterAttackDirType : PickListElement<eMonsterAttackDirType>
		{
			[Token(Token = "0x6002FED")]
			[Address(RVA = "0x1148A50", Offset = "0x1148A50", VA = "0x1148A50")]
			public NodeCanvas_Tasks_Actions_PickListElement_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20007AD")]
		private class NodeCanvas_Tasks_Actions_PickListElement_eMonsterAttackType : PickListElement<eMonsterAttackType>
		{
			[Token(Token = "0x6002FEE")]
			[Address(RVA = "0x1148AA0", Offset = "0x1148AA0", VA = "0x1148AA0")]
			public NodeCanvas_Tasks_Actions_PickListElement_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20007AE")]
		private class NodeCanvas_Tasks_Actions_PickListElement_MoveTargetType : PickListElement<MoveTargetType>
		{
			[Token(Token = "0x6002FEF")]
			[Address(RVA = "0x11483C0", Offset = "0x11483C0", VA = "0x11483C0")]
			public NodeCanvas_Tasks_Actions_PickListElement_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20007AF")]
		private class NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_LayerMask : PickListElement<LayerMask>
		{
			[Token(Token = "0x6002FF0")]
			[Address(RVA = "0x1148730", Offset = "0x1148730", VA = "0x1148730")]
			public NodeCanvas_Tasks_Actions_PickListElement_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20007B0")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_System_Boolean : PickRandomListElement<bool>
		{
			[Token(Token = "0x6002FF1")]
			[Address(RVA = "0x1148C30", Offset = "0x1148C30", VA = "0x1148C30")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20007B1")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_System_Single : PickRandomListElement<float>
		{
			[Token(Token = "0x6002FF2")]
			[Address(RVA = "0x1148CD0", Offset = "0x1148CD0", VA = "0x1148CD0")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_System_Single()
			{
			}
		}

		[Token(Token = "0x20007B2")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_System_Int32 : PickRandomListElement<int>
		{
			[Token(Token = "0x6002FF3")]
			[Address(RVA = "0x1148C80", Offset = "0x1148C80", VA = "0x1148C80")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_System_Int32()
			{
			}
		}

		[Token(Token = "0x20007B3")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Vector2 : PickRandomListElement<Vector2>
		{
			[Token(Token = "0x6002FF4")]
			[Address(RVA = "0x1149180", Offset = "0x1149180", VA = "0x1149180")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20007B4")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Vector3 : PickRandomListElement<Vector3>
		{
			[Token(Token = "0x6002FF5")]
			[Address(RVA = "0x11491D0", Offset = "0x11491D0", VA = "0x11491D0")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20007B5")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Vector4 : PickRandomListElement<Vector4>
		{
			[Token(Token = "0x6002FF6")]
			[Address(RVA = "0x1149220", Offset = "0x1149220", VA = "0x1149220")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20007B6")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Quaternion : PickRandomListElement<Quaternion>
		{
			[Token(Token = "0x6002FF7")]
			[Address(RVA = "0x1148FA0", Offset = "0x1148FA0", VA = "0x1148FA0")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20007B7")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Keyframe : PickRandomListElement<Keyframe>
		{
			[Token(Token = "0x6002FF8")]
			[Address(RVA = "0x1148F00", Offset = "0x1148F00", VA = "0x1148F00")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20007B8")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Bounds : PickRandomListElement<Bounds>
		{
			[Token(Token = "0x6002FF9")]
			[Address(RVA = "0x1148D20", Offset = "0x1148D20", VA = "0x1148D20")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20007B9")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Color : PickRandomListElement<Color>
		{
			[Token(Token = "0x6002FFA")]
			[Address(RVA = "0x1148E10", Offset = "0x1148E10", VA = "0x1148E10")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20007BA")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Rect : PickRandomListElement<Rect>
		{
			[Token(Token = "0x6002FFB")]
			[Address(RVA = "0x11490E0", Offset = "0x11490E0", VA = "0x11490E0")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20007BB")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_ContactPoint : PickRandomListElement<ContactPoint>
		{
			[Token(Token = "0x6002FFC")]
			[Address(RVA = "0x1148E60", Offset = "0x1148E60", VA = "0x1148E60")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20007BC")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_ContactPoint2D : PickRandomListElement<ContactPoint2D>
		{
			[Token(Token = "0x6002FFD")]
			[Address(RVA = "0x1148EB0", Offset = "0x1148EB0", VA = "0x1148EB0")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20007BD")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Collision : PickRandomListElement<Collision>
		{
			[Token(Token = "0x6002FFE")]
			[Address(RVA = "0x1148D70", Offset = "0x1148D70", VA = "0x1148D70")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20007BE")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Collision2D : PickRandomListElement<Collision2D>
		{
			[Token(Token = "0x6002FFF")]
			[Address(RVA = "0x1148DC0", Offset = "0x1148DC0", VA = "0x1148DC0")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20007BF")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_RaycastHit : PickRandomListElement<RaycastHit>
		{
			[Token(Token = "0x6003000")]
			[Address(RVA = "0x1149040", Offset = "0x1149040", VA = "0x1149040")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20007C0")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_RaycastHit2D : PickRandomListElement<RaycastHit2D>
		{
			[Token(Token = "0x6003001")]
			[Address(RVA = "0x1149090", Offset = "0x1149090", VA = "0x1149090")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20007C1")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Ray : PickRandomListElement<Ray>
		{
			[Token(Token = "0x6003002")]
			[Address(RVA = "0x1148FF0", Offset = "0x1148FF0", VA = "0x1148FF0")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20007C2")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Space : PickRandomListElement<Space>
		{
			[Token(Token = "0x6003003")]
			[Address(RVA = "0x1149130", Offset = "0x1149130", VA = "0x1149130")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20007C3")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_BossMainDone : PickRandomListElement<BossMainDone>
		{
			[Token(Token = "0x6003004")]
			[Address(RVA = "0x1148B40", Offset = "0x1148B40", VA = "0x1148B40")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20007C4")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_BossMainToDo : PickRandomListElement<BossMainToDo>
		{
			[Token(Token = "0x6003005")]
			[Address(RVA = "0x1148B90", Offset = "0x1148B90", VA = "0x1148B90")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20007C5")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_e_group_type : PickRandomListElement<e_group_type>
		{
			[Token(Token = "0x6003006")]
			[Address(RVA = "0x1149310", Offset = "0x1149310", VA = "0x1149310")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_e_group_type()
			{
			}
		}

		[Token(Token = "0x20007C6")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_eMonsterAttackDirType : PickRandomListElement<eMonsterAttackDirType>
		{
			[Token(Token = "0x6003007")]
			[Address(RVA = "0x1149270", Offset = "0x1149270", VA = "0x1149270")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20007C7")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_eMonsterAttackType : PickRandomListElement<eMonsterAttackType>
		{
			[Token(Token = "0x6003008")]
			[Address(RVA = "0x11492C0", Offset = "0x11492C0", VA = "0x11492C0")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20007C8")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_MoveTargetType : PickRandomListElement<MoveTargetType>
		{
			[Token(Token = "0x6003009")]
			[Address(RVA = "0x1148BE0", Offset = "0x1148BE0", VA = "0x1148BE0")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20007C9")]
		private class NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_LayerMask : PickRandomListElement<LayerMask>
		{
			[Token(Token = "0x600300A")]
			[Address(RVA = "0x1148F50", Offset = "0x1148F50", VA = "0x1148F50")]
			public NodeCanvas_Tasks_Actions_PickRandomListElement_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20007CA")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_System_Boolean : RemoveElementFromList<bool>
		{
			[Token(Token = "0x600300B")]
			[Address(RVA = "0x1149450", Offset = "0x1149450", VA = "0x1149450")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20007CB")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_System_Single : RemoveElementFromList<float>
		{
			[Token(Token = "0x600300C")]
			[Address(RVA = "0x11494F0", Offset = "0x11494F0", VA = "0x11494F0")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_System_Single()
			{
			}
		}

		[Token(Token = "0x20007CC")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_System_Int32 : RemoveElementFromList<int>
		{
			[Token(Token = "0x600300D")]
			[Address(RVA = "0x11494A0", Offset = "0x11494A0", VA = "0x11494A0")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_System_Int32()
			{
			}
		}

		[Token(Token = "0x20007CD")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Vector2 : RemoveElementFromList<Vector2>
		{
			[Token(Token = "0x600300E")]
			[Address(RVA = "0x11499A0", Offset = "0x11499A0", VA = "0x11499A0")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20007CE")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Vector3 : RemoveElementFromList<Vector3>
		{
			[Token(Token = "0x600300F")]
			[Address(RVA = "0x11499F0", Offset = "0x11499F0", VA = "0x11499F0")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20007CF")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Vector4 : RemoveElementFromList<Vector4>
		{
			[Token(Token = "0x6003010")]
			[Address(RVA = "0x1149A40", Offset = "0x1149A40", VA = "0x1149A40")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20007D0")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Quaternion : RemoveElementFromList<Quaternion>
		{
			[Token(Token = "0x6003011")]
			[Address(RVA = "0x11497C0", Offset = "0x11497C0", VA = "0x11497C0")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20007D1")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Keyframe : RemoveElementFromList<Keyframe>
		{
			[Token(Token = "0x6003012")]
			[Address(RVA = "0x1149720", Offset = "0x1149720", VA = "0x1149720")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20007D2")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Bounds : RemoveElementFromList<Bounds>
		{
			[Token(Token = "0x6003013")]
			[Address(RVA = "0x1149540", Offset = "0x1149540", VA = "0x1149540")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20007D3")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Color : RemoveElementFromList<Color>
		{
			[Token(Token = "0x6003014")]
			[Address(RVA = "0x1149630", Offset = "0x1149630", VA = "0x1149630")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20007D4")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Rect : RemoveElementFromList<Rect>
		{
			[Token(Token = "0x6003015")]
			[Address(RVA = "0x1149900", Offset = "0x1149900", VA = "0x1149900")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20007D5")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_ContactPoint : RemoveElementFromList<ContactPoint>
		{
			[Token(Token = "0x6003016")]
			[Address(RVA = "0x1149680", Offset = "0x1149680", VA = "0x1149680")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20007D6")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_ContactPoint2D : RemoveElementFromList<ContactPoint2D>
		{
			[Token(Token = "0x6003017")]
			[Address(RVA = "0x11496D0", Offset = "0x11496D0", VA = "0x11496D0")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20007D7")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Collision : RemoveElementFromList<Collision>
		{
			[Token(Token = "0x6003018")]
			[Address(RVA = "0x1149590", Offset = "0x1149590", VA = "0x1149590")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20007D8")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Collision2D : RemoveElementFromList<Collision2D>
		{
			[Token(Token = "0x6003019")]
			[Address(RVA = "0x11495E0", Offset = "0x11495E0", VA = "0x11495E0")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20007D9")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_RaycastHit : RemoveElementFromList<RaycastHit>
		{
			[Token(Token = "0x600301A")]
			[Address(RVA = "0x1149860", Offset = "0x1149860", VA = "0x1149860")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20007DA")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_RaycastHit2D : RemoveElementFromList<RaycastHit2D>
		{
			[Token(Token = "0x600301B")]
			[Address(RVA = "0x11498B0", Offset = "0x11498B0", VA = "0x11498B0")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20007DB")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Ray : RemoveElementFromList<Ray>
		{
			[Token(Token = "0x600301C")]
			[Address(RVA = "0x1149810", Offset = "0x1149810", VA = "0x1149810")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20007DC")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Space : RemoveElementFromList<Space>
		{
			[Token(Token = "0x600301D")]
			[Address(RVA = "0x1149950", Offset = "0x1149950", VA = "0x1149950")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20007DD")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_BossMainDone : RemoveElementFromList<BossMainDone>
		{
			[Token(Token = "0x600301E")]
			[Address(RVA = "0x1149360", Offset = "0x1149360", VA = "0x1149360")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20007DE")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_BossMainToDo : RemoveElementFromList<BossMainToDo>
		{
			[Token(Token = "0x600301F")]
			[Address(RVA = "0x11493B0", Offset = "0x11493B0", VA = "0x11493B0")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20007DF")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_e_group_type : RemoveElementFromList<e_group_type>
		{
			[Token(Token = "0x6003020")]
			[Address(RVA = "0x1149B30", Offset = "0x1149B30", VA = "0x1149B30")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_e_group_type()
			{
			}
		}

		[Token(Token = "0x20007E0")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_eMonsterAttackDirType : RemoveElementFromList<eMonsterAttackDirType>
		{
			[Token(Token = "0x6003021")]
			[Address(RVA = "0x1149A90", Offset = "0x1149A90", VA = "0x1149A90")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20007E1")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_eMonsterAttackType : RemoveElementFromList<eMonsterAttackType>
		{
			[Token(Token = "0x6003022")]
			[Address(RVA = "0x1149AE0", Offset = "0x1149AE0", VA = "0x1149AE0")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20007E2")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_MoveTargetType : RemoveElementFromList<MoveTargetType>
		{
			[Token(Token = "0x6003023")]
			[Address(RVA = "0x1149400", Offset = "0x1149400", VA = "0x1149400")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20007E3")]
		private class NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_LayerMask : RemoveElementFromList<LayerMask>
		{
			[Token(Token = "0x6003024")]
			[Address(RVA = "0x1149770", Offset = "0x1149770", VA = "0x1149770")]
			public NodeCanvas_Tasks_Actions_RemoveElementFromList_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20007E4")]
		private class NodeCanvas_Tasks_Actions_SendEvent_System_Boolean : SendEvent<bool>
		{
			[Token(Token = "0x6003025")]
			[Address(RVA = "0x114A490", Offset = "0x114A490", VA = "0x114A490")]
			public NodeCanvas_Tasks_Actions_SendEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20007E5")]
		private class NodeCanvas_Tasks_Actions_SendEvent_System_Single : SendEvent<float>
		{
			[Token(Token = "0x6003026")]
			[Address(RVA = "0x114A530", Offset = "0x114A530", VA = "0x114A530")]
			public NodeCanvas_Tasks_Actions_SendEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x20007E6")]
		private class NodeCanvas_Tasks_Actions_SendEvent_System_Int32 : SendEvent<int>
		{
			[Token(Token = "0x6003027")]
			[Address(RVA = "0x114A4E0", Offset = "0x114A4E0", VA = "0x114A4E0")]
			public NodeCanvas_Tasks_Actions_SendEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x20007E7")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Vector2 : SendEvent<Vector2>
		{
			[Token(Token = "0x6003028")]
			[Address(RVA = "0x114A9E0", Offset = "0x114A9E0", VA = "0x114A9E0")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20007E8")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Vector3 : SendEvent<Vector3>
		{
			[Token(Token = "0x6003029")]
			[Address(RVA = "0x114AA30", Offset = "0x114AA30", VA = "0x114AA30")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20007E9")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Vector4 : SendEvent<Vector4>
		{
			[Token(Token = "0x600302A")]
			[Address(RVA = "0x114AA80", Offset = "0x114AA80", VA = "0x114AA80")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20007EA")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Quaternion : SendEvent<Quaternion>
		{
			[Token(Token = "0x600302B")]
			[Address(RVA = "0x114A800", Offset = "0x114A800", VA = "0x114A800")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20007EB")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Keyframe : SendEvent<Keyframe>
		{
			[Token(Token = "0x600302C")]
			[Address(RVA = "0x114A760", Offset = "0x114A760", VA = "0x114A760")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20007EC")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Bounds : SendEvent<Bounds>
		{
			[Token(Token = "0x600302D")]
			[Address(RVA = "0x114A580", Offset = "0x114A580", VA = "0x114A580")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20007ED")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Color : SendEvent<Color>
		{
			[Token(Token = "0x600302E")]
			[Address(RVA = "0x114A670", Offset = "0x114A670", VA = "0x114A670")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20007EE")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Rect : SendEvent<Rect>
		{
			[Token(Token = "0x600302F")]
			[Address(RVA = "0x114A940", Offset = "0x114A940", VA = "0x114A940")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20007EF")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_ContactPoint : SendEvent<ContactPoint>
		{
			[Token(Token = "0x6003030")]
			[Address(RVA = "0x114A6C0", Offset = "0x114A6C0", VA = "0x114A6C0")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20007F0")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_ContactPoint2D : SendEvent<ContactPoint2D>
		{
			[Token(Token = "0x6003031")]
			[Address(RVA = "0x114A710", Offset = "0x114A710", VA = "0x114A710")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20007F1")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Collision : SendEvent<Collision>
		{
			[Token(Token = "0x6003032")]
			[Address(RVA = "0x114A5D0", Offset = "0x114A5D0", VA = "0x114A5D0")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20007F2")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Collision2D : SendEvent<Collision2D>
		{
			[Token(Token = "0x6003033")]
			[Address(RVA = "0x114A620", Offset = "0x114A620", VA = "0x114A620")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20007F3")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_RaycastHit : SendEvent<RaycastHit>
		{
			[Token(Token = "0x6003034")]
			[Address(RVA = "0x114A8A0", Offset = "0x114A8A0", VA = "0x114A8A0")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20007F4")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_RaycastHit2D : SendEvent<RaycastHit2D>
		{
			[Token(Token = "0x6003035")]
			[Address(RVA = "0x114A8F0", Offset = "0x114A8F0", VA = "0x114A8F0")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20007F5")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Ray : SendEvent<Ray>
		{
			[Token(Token = "0x6003036")]
			[Address(RVA = "0x114A850", Offset = "0x114A850", VA = "0x114A850")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20007F6")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Space : SendEvent<Space>
		{
			[Token(Token = "0x6003037")]
			[Address(RVA = "0x114A990", Offset = "0x114A990", VA = "0x114A990")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20007F7")]
		private class NodeCanvas_Tasks_Actions_SendEvent_BossMainDone : SendEvent<BossMainDone>
		{
			[Token(Token = "0x6003038")]
			[Address(RVA = "0x114A3A0", Offset = "0x114A3A0", VA = "0x114A3A0")]
			public NodeCanvas_Tasks_Actions_SendEvent_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20007F8")]
		private class NodeCanvas_Tasks_Actions_SendEvent_BossMainToDo : SendEvent<BossMainToDo>
		{
			[Token(Token = "0x6003039")]
			[Address(RVA = "0x114A3F0", Offset = "0x114A3F0", VA = "0x114A3F0")]
			public NodeCanvas_Tasks_Actions_SendEvent_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20007F9")]
		private class NodeCanvas_Tasks_Actions_SendEvent_e_group_type : SendEvent<e_group_type>
		{
			[Token(Token = "0x600303A")]
			[Address(RVA = "0x114AB70", Offset = "0x114AB70", VA = "0x114AB70")]
			public NodeCanvas_Tasks_Actions_SendEvent_e_group_type()
			{
			}
		}

		[Token(Token = "0x20007FA")]
		private class NodeCanvas_Tasks_Actions_SendEvent_eMonsterAttackDirType : SendEvent<eMonsterAttackDirType>
		{
			[Token(Token = "0x600303B")]
			[Address(RVA = "0x114AAD0", Offset = "0x114AAD0", VA = "0x114AAD0")]
			public NodeCanvas_Tasks_Actions_SendEvent_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20007FB")]
		private class NodeCanvas_Tasks_Actions_SendEvent_eMonsterAttackType : SendEvent<eMonsterAttackType>
		{
			[Token(Token = "0x600303C")]
			[Address(RVA = "0x114AB20", Offset = "0x114AB20", VA = "0x114AB20")]
			public NodeCanvas_Tasks_Actions_SendEvent_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20007FC")]
		private class NodeCanvas_Tasks_Actions_SendEvent_MoveTargetType : SendEvent<MoveTargetType>
		{
			[Token(Token = "0x600303D")]
			[Address(RVA = "0x114A440", Offset = "0x114A440", VA = "0x114A440")]
			public NodeCanvas_Tasks_Actions_SendEvent_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20007FD")]
		private class NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_LayerMask : SendEvent<LayerMask>
		{
			[Token(Token = "0x600303E")]
			[Address(RVA = "0x114A7B0", Offset = "0x114A7B0", VA = "0x114A7B0")]
			public NodeCanvas_Tasks_Actions_SendEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20007FE")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_System_Boolean : SendEventToObjects<bool>
		{
			[Token(Token = "0x600303F")]
			[Address(RVA = "0x1149C70", Offset = "0x1149C70", VA = "0x1149C70")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20007FF")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_System_Single : SendEventToObjects<float>
		{
			[Token(Token = "0x6003040")]
			[Address(RVA = "0x1149D10", Offset = "0x1149D10", VA = "0x1149D10")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_System_Single()
			{
			}
		}

		[Token(Token = "0x2000800")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_System_Int32 : SendEventToObjects<int>
		{
			[Token(Token = "0x6003041")]
			[Address(RVA = "0x1149CC0", Offset = "0x1149CC0", VA = "0x1149CC0")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000801")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Vector2 : SendEventToObjects<Vector2>
		{
			[Token(Token = "0x6003042")]
			[Address(RVA = "0x114A1C0", Offset = "0x114A1C0", VA = "0x114A1C0")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000802")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Vector3 : SendEventToObjects<Vector3>
		{
			[Token(Token = "0x6003043")]
			[Address(RVA = "0x114A210", Offset = "0x114A210", VA = "0x114A210")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000803")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Vector4 : SendEventToObjects<Vector4>
		{
			[Token(Token = "0x6003044")]
			[Address(RVA = "0x114A260", Offset = "0x114A260", VA = "0x114A260")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000804")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Quaternion : SendEventToObjects<Quaternion>
		{
			[Token(Token = "0x6003045")]
			[Address(RVA = "0x1149FE0", Offset = "0x1149FE0", VA = "0x1149FE0")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000805")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Keyframe : SendEventToObjects<Keyframe>
		{
			[Token(Token = "0x6003046")]
			[Address(RVA = "0x1149F40", Offset = "0x1149F40", VA = "0x1149F40")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000806")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Bounds : SendEventToObjects<Bounds>
		{
			[Token(Token = "0x6003047")]
			[Address(RVA = "0x1149D60", Offset = "0x1149D60", VA = "0x1149D60")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000807")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Color : SendEventToObjects<Color>
		{
			[Token(Token = "0x6003048")]
			[Address(RVA = "0x1149E50", Offset = "0x1149E50", VA = "0x1149E50")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000808")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Rect : SendEventToObjects<Rect>
		{
			[Token(Token = "0x6003049")]
			[Address(RVA = "0x114A120", Offset = "0x114A120", VA = "0x114A120")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000809")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_ContactPoint : SendEventToObjects<ContactPoint>
		{
			[Token(Token = "0x600304A")]
			[Address(RVA = "0x1149EA0", Offset = "0x1149EA0", VA = "0x1149EA0")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200080A")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_ContactPoint2D : SendEventToObjects<ContactPoint2D>
		{
			[Token(Token = "0x600304B")]
			[Address(RVA = "0x1149EF0", Offset = "0x1149EF0", VA = "0x1149EF0")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200080B")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Collision : SendEventToObjects<Collision>
		{
			[Token(Token = "0x600304C")]
			[Address(RVA = "0x1149DB0", Offset = "0x1149DB0", VA = "0x1149DB0")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200080C")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Collision2D : SendEventToObjects<Collision2D>
		{
			[Token(Token = "0x600304D")]
			[Address(RVA = "0x1149E00", Offset = "0x1149E00", VA = "0x1149E00")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200080D")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_RaycastHit : SendEventToObjects<RaycastHit>
		{
			[Token(Token = "0x600304E")]
			[Address(RVA = "0x114A080", Offset = "0x114A080", VA = "0x114A080")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200080E")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_RaycastHit2D : SendEventToObjects<RaycastHit2D>
		{
			[Token(Token = "0x600304F")]
			[Address(RVA = "0x114A0D0", Offset = "0x114A0D0", VA = "0x114A0D0")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200080F")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Ray : SendEventToObjects<Ray>
		{
			[Token(Token = "0x6003050")]
			[Address(RVA = "0x114A030", Offset = "0x114A030", VA = "0x114A030")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000810")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Space : SendEventToObjects<Space>
		{
			[Token(Token = "0x6003051")]
			[Address(RVA = "0x114A170", Offset = "0x114A170", VA = "0x114A170")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000811")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_BossMainDone : SendEventToObjects<BossMainDone>
		{
			[Token(Token = "0x6003052")]
			[Address(RVA = "0x1149B80", Offset = "0x1149B80", VA = "0x1149B80")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000812")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_BossMainToDo : SendEventToObjects<BossMainToDo>
		{
			[Token(Token = "0x6003053")]
			[Address(RVA = "0x1149BD0", Offset = "0x1149BD0", VA = "0x1149BD0")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000813")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_e_group_type : SendEventToObjects<e_group_type>
		{
			[Token(Token = "0x6003054")]
			[Address(RVA = "0x114A350", Offset = "0x114A350", VA = "0x114A350")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000814")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_eMonsterAttackDirType : SendEventToObjects<eMonsterAttackDirType>
		{
			[Token(Token = "0x6003055")]
			[Address(RVA = "0x114A2B0", Offset = "0x114A2B0", VA = "0x114A2B0")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000815")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_eMonsterAttackType : SendEventToObjects<eMonsterAttackType>
		{
			[Token(Token = "0x6003056")]
			[Address(RVA = "0x114A300", Offset = "0x114A300", VA = "0x114A300")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000816")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_MoveTargetType : SendEventToObjects<MoveTargetType>
		{
			[Token(Token = "0x6003057")]
			[Address(RVA = "0x1149C20", Offset = "0x1149C20", VA = "0x1149C20")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000817")]
		private class NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_LayerMask : SendEventToObjects<LayerMask>
		{
			[Token(Token = "0x6003058")]
			[Address(RVA = "0x1149F90", Offset = "0x1149F90", VA = "0x1149F90")]
			public NodeCanvas_Tasks_Actions_SendEventToObjects_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000818")]
		private class NodeCanvas_Tasks_Actions_SendMessage_System_Boolean : SendMessage<bool>
		{
			[Token(Token = "0x6003059")]
			[Address(RVA = "0x114ACB0", Offset = "0x114ACB0", VA = "0x114ACB0")]
			public NodeCanvas_Tasks_Actions_SendMessage_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000819")]
		private class NodeCanvas_Tasks_Actions_SendMessage_System_Single : SendMessage<float>
		{
			[Token(Token = "0x600305A")]
			[Address(RVA = "0x114AD50", Offset = "0x114AD50", VA = "0x114AD50")]
			public NodeCanvas_Tasks_Actions_SendMessage_System_Single()
			{
			}
		}

		[Token(Token = "0x200081A")]
		private class NodeCanvas_Tasks_Actions_SendMessage_System_Int32 : SendMessage<int>
		{
			[Token(Token = "0x600305B")]
			[Address(RVA = "0x114AD00", Offset = "0x114AD00", VA = "0x114AD00")]
			public NodeCanvas_Tasks_Actions_SendMessage_System_Int32()
			{
			}
		}

		[Token(Token = "0x200081B")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Vector2 : SendMessage<Vector2>
		{
			[Token(Token = "0x600305C")]
			[Address(RVA = "0x114B200", Offset = "0x114B200", VA = "0x114B200")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200081C")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Vector3 : SendMessage<Vector3>
		{
			[Token(Token = "0x600305D")]
			[Address(RVA = "0x114B250", Offset = "0x114B250", VA = "0x114B250")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200081D")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Vector4 : SendMessage<Vector4>
		{
			[Token(Token = "0x600305E")]
			[Address(RVA = "0x114B2A0", Offset = "0x114B2A0", VA = "0x114B2A0")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200081E")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Quaternion : SendMessage<Quaternion>
		{
			[Token(Token = "0x600305F")]
			[Address(RVA = "0x114B020", Offset = "0x114B020", VA = "0x114B020")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200081F")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Keyframe : SendMessage<Keyframe>
		{
			[Token(Token = "0x6003060")]
			[Address(RVA = "0x114AF80", Offset = "0x114AF80", VA = "0x114AF80")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000820")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Bounds : SendMessage<Bounds>
		{
			[Token(Token = "0x6003061")]
			[Address(RVA = "0x114ADA0", Offset = "0x114ADA0", VA = "0x114ADA0")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000821")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Color : SendMessage<Color>
		{
			[Token(Token = "0x6003062")]
			[Address(RVA = "0x114AE90", Offset = "0x114AE90", VA = "0x114AE90")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000822")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Rect : SendMessage<Rect>
		{
			[Token(Token = "0x6003063")]
			[Address(RVA = "0x114B160", Offset = "0x114B160", VA = "0x114B160")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000823")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_ContactPoint : SendMessage<ContactPoint>
		{
			[Token(Token = "0x6003064")]
			[Address(RVA = "0x114AEE0", Offset = "0x114AEE0", VA = "0x114AEE0")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000824")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_ContactPoint2D : SendMessage<ContactPoint2D>
		{
			[Token(Token = "0x6003065")]
			[Address(RVA = "0x114AF30", Offset = "0x114AF30", VA = "0x114AF30")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000825")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Collision : SendMessage<Collision>
		{
			[Token(Token = "0x6003066")]
			[Address(RVA = "0x114ADF0", Offset = "0x114ADF0", VA = "0x114ADF0")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000826")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Collision2D : SendMessage<Collision2D>
		{
			[Token(Token = "0x6003067")]
			[Address(RVA = "0x114AE40", Offset = "0x114AE40", VA = "0x114AE40")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000827")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_RaycastHit : SendMessage<RaycastHit>
		{
			[Token(Token = "0x6003068")]
			[Address(RVA = "0x114B0C0", Offset = "0x114B0C0", VA = "0x114B0C0")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000828")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_RaycastHit2D : SendMessage<RaycastHit2D>
		{
			[Token(Token = "0x6003069")]
			[Address(RVA = "0x114B110", Offset = "0x114B110", VA = "0x114B110")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000829")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Ray : SendMessage<Ray>
		{
			[Token(Token = "0x600306A")]
			[Address(RVA = "0x114B070", Offset = "0x114B070", VA = "0x114B070")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200082A")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Space : SendMessage<Space>
		{
			[Token(Token = "0x600306B")]
			[Address(RVA = "0x114B1B0", Offset = "0x114B1B0", VA = "0x114B1B0")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200082B")]
		private class NodeCanvas_Tasks_Actions_SendMessage_BossMainDone : SendMessage<BossMainDone>
		{
			[Token(Token = "0x600306C")]
			[Address(RVA = "0x114ABC0", Offset = "0x114ABC0", VA = "0x114ABC0")]
			public NodeCanvas_Tasks_Actions_SendMessage_BossMainDone()
			{
			}
		}

		[Token(Token = "0x200082C")]
		private class NodeCanvas_Tasks_Actions_SendMessage_BossMainToDo : SendMessage<BossMainToDo>
		{
			[Token(Token = "0x600306D")]
			[Address(RVA = "0x114AC10", Offset = "0x114AC10", VA = "0x114AC10")]
			public NodeCanvas_Tasks_Actions_SendMessage_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x200082D")]
		private class NodeCanvas_Tasks_Actions_SendMessage_e_group_type : SendMessage<e_group_type>
		{
			[Token(Token = "0x600306E")]
			[Address(RVA = "0x114B390", Offset = "0x114B390", VA = "0x114B390")]
			public NodeCanvas_Tasks_Actions_SendMessage_e_group_type()
			{
			}
		}

		[Token(Token = "0x200082E")]
		private class NodeCanvas_Tasks_Actions_SendMessage_eMonsterAttackDirType : SendMessage<eMonsterAttackDirType>
		{
			[Token(Token = "0x600306F")]
			[Address(RVA = "0x114B2F0", Offset = "0x114B2F0", VA = "0x114B2F0")]
			public NodeCanvas_Tasks_Actions_SendMessage_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x200082F")]
		private class NodeCanvas_Tasks_Actions_SendMessage_eMonsterAttackType : SendMessage<eMonsterAttackType>
		{
			[Token(Token = "0x6003070")]
			[Address(RVA = "0x114B340", Offset = "0x114B340", VA = "0x114B340")]
			public NodeCanvas_Tasks_Actions_SendMessage_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000830")]
		private class NodeCanvas_Tasks_Actions_SendMessage_MoveTargetType : SendMessage<MoveTargetType>
		{
			[Token(Token = "0x6003071")]
			[Address(RVA = "0x114AC60", Offset = "0x114AC60", VA = "0x114AC60")]
			public NodeCanvas_Tasks_Actions_SendMessage_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000831")]
		private class NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_LayerMask : SendMessage<LayerMask>
		{
			[Token(Token = "0x6003072")]
			[Address(RVA = "0x114AFD0", Offset = "0x114AFD0", VA = "0x114AFD0")]
			public NodeCanvas_Tasks_Actions_SendMessage_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000832")]
		private class NodeCanvas_Tasks_Actions_SetListElement_System_Boolean : SetListElement<bool>
		{
			[Token(Token = "0x6003073")]
			[Address(RVA = "0x114B4D0", Offset = "0x114B4D0", VA = "0x114B4D0")]
			public NodeCanvas_Tasks_Actions_SetListElement_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000833")]
		private class NodeCanvas_Tasks_Actions_SetListElement_System_Single : SetListElement<float>
		{
			[Token(Token = "0x6003074")]
			[Address(RVA = "0x114B570", Offset = "0x114B570", VA = "0x114B570")]
			public NodeCanvas_Tasks_Actions_SetListElement_System_Single()
			{
			}
		}

		[Token(Token = "0x2000834")]
		private class NodeCanvas_Tasks_Actions_SetListElement_System_Int32 : SetListElement<int>
		{
			[Token(Token = "0x6003075")]
			[Address(RVA = "0x114B520", Offset = "0x114B520", VA = "0x114B520")]
			public NodeCanvas_Tasks_Actions_SetListElement_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000835")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Vector2 : SetListElement<Vector2>
		{
			[Token(Token = "0x6003076")]
			[Address(RVA = "0x114BA20", Offset = "0x114BA20", VA = "0x114BA20")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000836")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Vector3 : SetListElement<Vector3>
		{
			[Token(Token = "0x6003077")]
			[Address(RVA = "0x114BA70", Offset = "0x114BA70", VA = "0x114BA70")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000837")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Vector4 : SetListElement<Vector4>
		{
			[Token(Token = "0x6003078")]
			[Address(RVA = "0x114BAC0", Offset = "0x114BAC0", VA = "0x114BAC0")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000838")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Quaternion : SetListElement<Quaternion>
		{
			[Token(Token = "0x6003079")]
			[Address(RVA = "0x114B840", Offset = "0x114B840", VA = "0x114B840")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000839")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Keyframe : SetListElement<Keyframe>
		{
			[Token(Token = "0x600307A")]
			[Address(RVA = "0x114B7A0", Offset = "0x114B7A0", VA = "0x114B7A0")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200083A")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Bounds : SetListElement<Bounds>
		{
			[Token(Token = "0x600307B")]
			[Address(RVA = "0x114B5C0", Offset = "0x114B5C0", VA = "0x114B5C0")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200083B")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Color : SetListElement<Color>
		{
			[Token(Token = "0x600307C")]
			[Address(RVA = "0x114B6B0", Offset = "0x114B6B0", VA = "0x114B6B0")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200083C")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Rect : SetListElement<Rect>
		{
			[Token(Token = "0x600307D")]
			[Address(RVA = "0x114B980", Offset = "0x114B980", VA = "0x114B980")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200083D")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_ContactPoint : SetListElement<ContactPoint>
		{
			[Token(Token = "0x600307E")]
			[Address(RVA = "0x114B700", Offset = "0x114B700", VA = "0x114B700")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200083E")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_ContactPoint2D : SetListElement<ContactPoint2D>
		{
			[Token(Token = "0x600307F")]
			[Address(RVA = "0x114B750", Offset = "0x114B750", VA = "0x114B750")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200083F")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Collision : SetListElement<Collision>
		{
			[Token(Token = "0x6003080")]
			[Address(RVA = "0x114B610", Offset = "0x114B610", VA = "0x114B610")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000840")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Collision2D : SetListElement<Collision2D>
		{
			[Token(Token = "0x6003081")]
			[Address(RVA = "0x114B660", Offset = "0x114B660", VA = "0x114B660")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000841")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_RaycastHit : SetListElement<RaycastHit>
		{
			[Token(Token = "0x6003082")]
			[Address(RVA = "0x114B8E0", Offset = "0x114B8E0", VA = "0x114B8E0")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000842")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_RaycastHit2D : SetListElement<RaycastHit2D>
		{
			[Token(Token = "0x6003083")]
			[Address(RVA = "0x114B930", Offset = "0x114B930", VA = "0x114B930")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000843")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Ray : SetListElement<Ray>
		{
			[Token(Token = "0x6003084")]
			[Address(RVA = "0x114B890", Offset = "0x114B890", VA = "0x114B890")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000844")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Space : SetListElement<Space>
		{
			[Token(Token = "0x6003085")]
			[Address(RVA = "0x114B9D0", Offset = "0x114B9D0", VA = "0x114B9D0")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000845")]
		private class NodeCanvas_Tasks_Actions_SetListElement_BossMainDone : SetListElement<BossMainDone>
		{
			[Token(Token = "0x6003086")]
			[Address(RVA = "0x114B3E0", Offset = "0x114B3E0", VA = "0x114B3E0")]
			public NodeCanvas_Tasks_Actions_SetListElement_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000846")]
		private class NodeCanvas_Tasks_Actions_SetListElement_BossMainToDo : SetListElement<BossMainToDo>
		{
			[Token(Token = "0x6003087")]
			[Address(RVA = "0x114B430", Offset = "0x114B430", VA = "0x114B430")]
			public NodeCanvas_Tasks_Actions_SetListElement_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000847")]
		private class NodeCanvas_Tasks_Actions_SetListElement_e_group_type : SetListElement<e_group_type>
		{
			[Token(Token = "0x6003088")]
			[Address(RVA = "0x114BBB0", Offset = "0x114BBB0", VA = "0x114BBB0")]
			public NodeCanvas_Tasks_Actions_SetListElement_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000848")]
		private class NodeCanvas_Tasks_Actions_SetListElement_eMonsterAttackDirType : SetListElement<eMonsterAttackDirType>
		{
			[Token(Token = "0x6003089")]
			[Address(RVA = "0x114BB10", Offset = "0x114BB10", VA = "0x114BB10")]
			public NodeCanvas_Tasks_Actions_SetListElement_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000849")]
		private class NodeCanvas_Tasks_Actions_SetListElement_eMonsterAttackType : SetListElement<eMonsterAttackType>
		{
			[Token(Token = "0x600308A")]
			[Address(RVA = "0x114BB60", Offset = "0x114BB60", VA = "0x114BB60")]
			public NodeCanvas_Tasks_Actions_SetListElement_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x200084A")]
		private class NodeCanvas_Tasks_Actions_SetListElement_MoveTargetType : SetListElement<MoveTargetType>
		{
			[Token(Token = "0x600308B")]
			[Address(RVA = "0x114B480", Offset = "0x114B480", VA = "0x114B480")]
			public NodeCanvas_Tasks_Actions_SetListElement_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x200084B")]
		private class NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_LayerMask : SetListElement<LayerMask>
		{
			[Token(Token = "0x600308C")]
			[Address(RVA = "0x114B7F0", Offset = "0x114B7F0", VA = "0x114B7F0")]
			public NodeCanvas_Tasks_Actions_SetListElement_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200084C")]
		private class NodeCanvas_Tasks_Actions_SetVariable_System_Boolean : SetVariable<bool>
		{
			[Token(Token = "0x600308D")]
			[Address(RVA = "0x114BCF0", Offset = "0x114BCF0", VA = "0x114BCF0")]
			public NodeCanvas_Tasks_Actions_SetVariable_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200084D")]
		private class NodeCanvas_Tasks_Actions_SetVariable_System_Single : SetVariable<float>
		{
			[Token(Token = "0x600308E")]
			[Address(RVA = "0x114BD90", Offset = "0x114BD90", VA = "0x114BD90")]
			public NodeCanvas_Tasks_Actions_SetVariable_System_Single()
			{
			}
		}

		[Token(Token = "0x200084E")]
		private class NodeCanvas_Tasks_Actions_SetVariable_System_Int32 : SetVariable<int>
		{
			[Token(Token = "0x600308F")]
			[Address(RVA = "0x114BD40", Offset = "0x114BD40", VA = "0x114BD40")]
			public NodeCanvas_Tasks_Actions_SetVariable_System_Int32()
			{
			}
		}

		[Token(Token = "0x200084F")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Vector2 : SetVariable<Vector2>
		{
			[Token(Token = "0x6003090")]
			[Address(RVA = "0x114C240", Offset = "0x114C240", VA = "0x114C240")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000850")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Vector3 : SetVariable<Vector3>
		{
			[Token(Token = "0x6003091")]
			[Address(RVA = "0x114C290", Offset = "0x114C290", VA = "0x114C290")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000851")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Vector4 : SetVariable<Vector4>
		{
			[Token(Token = "0x6003092")]
			[Address(RVA = "0x114C2E0", Offset = "0x114C2E0", VA = "0x114C2E0")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000852")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Quaternion : SetVariable<Quaternion>
		{
			[Token(Token = "0x6003093")]
			[Address(RVA = "0x114C060", Offset = "0x114C060", VA = "0x114C060")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000853")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Keyframe : SetVariable<Keyframe>
		{
			[Token(Token = "0x6003094")]
			[Address(RVA = "0x114BFC0", Offset = "0x114BFC0", VA = "0x114BFC0")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000854")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Bounds : SetVariable<Bounds>
		{
			[Token(Token = "0x6003095")]
			[Address(RVA = "0x114BDE0", Offset = "0x114BDE0", VA = "0x114BDE0")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000855")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Color : SetVariable<Color>
		{
			[Token(Token = "0x6003096")]
			[Address(RVA = "0x114BED0", Offset = "0x114BED0", VA = "0x114BED0")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000856")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Rect : SetVariable<Rect>
		{
			[Token(Token = "0x6003097")]
			[Address(RVA = "0x114C1A0", Offset = "0x114C1A0", VA = "0x114C1A0")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000857")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_ContactPoint : SetVariable<ContactPoint>
		{
			[Token(Token = "0x6003098")]
			[Address(RVA = "0x114BF20", Offset = "0x114BF20", VA = "0x114BF20")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000858")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_ContactPoint2D : SetVariable<ContactPoint2D>
		{
			[Token(Token = "0x6003099")]
			[Address(RVA = "0x114BF70", Offset = "0x114BF70", VA = "0x114BF70")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000859")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Collision : SetVariable<Collision>
		{
			[Token(Token = "0x600309A")]
			[Address(RVA = "0x114BE30", Offset = "0x114BE30", VA = "0x114BE30")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200085A")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Collision2D : SetVariable<Collision2D>
		{
			[Token(Token = "0x600309B")]
			[Address(RVA = "0x114BE80", Offset = "0x114BE80", VA = "0x114BE80")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200085B")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_RaycastHit : SetVariable<RaycastHit>
		{
			[Token(Token = "0x600309C")]
			[Address(RVA = "0x114C100", Offset = "0x114C100", VA = "0x114C100")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200085C")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_RaycastHit2D : SetVariable<RaycastHit2D>
		{
			[Token(Token = "0x600309D")]
			[Address(RVA = "0x114C150", Offset = "0x114C150", VA = "0x114C150")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200085D")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Ray : SetVariable<Ray>
		{
			[Token(Token = "0x600309E")]
			[Address(RVA = "0x114C0B0", Offset = "0x114C0B0", VA = "0x114C0B0")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200085E")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Space : SetVariable<Space>
		{
			[Token(Token = "0x600309F")]
			[Address(RVA = "0x114C1F0", Offset = "0x114C1F0", VA = "0x114C1F0")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200085F")]
		private class NodeCanvas_Tasks_Actions_SetVariable_BossMainDone : SetVariable<BossMainDone>
		{
			[Token(Token = "0x60030A0")]
			[Address(RVA = "0x114BC00", Offset = "0x114BC00", VA = "0x114BC00")]
			public NodeCanvas_Tasks_Actions_SetVariable_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000860")]
		private class NodeCanvas_Tasks_Actions_SetVariable_BossMainToDo : SetVariable<BossMainToDo>
		{
			[Token(Token = "0x60030A1")]
			[Address(RVA = "0x114BC50", Offset = "0x114BC50", VA = "0x114BC50")]
			public NodeCanvas_Tasks_Actions_SetVariable_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000861")]
		private class NodeCanvas_Tasks_Actions_SetVariable_e_group_type : SetVariable<e_group_type>
		{
			[Token(Token = "0x60030A2")]
			[Address(RVA = "0x114C3D0", Offset = "0x114C3D0", VA = "0x114C3D0")]
			public NodeCanvas_Tasks_Actions_SetVariable_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000862")]
		private class NodeCanvas_Tasks_Actions_SetVariable_eMonsterAttackDirType : SetVariable<eMonsterAttackDirType>
		{
			[Token(Token = "0x60030A3")]
			[Address(RVA = "0x114C330", Offset = "0x114C330", VA = "0x114C330")]
			public NodeCanvas_Tasks_Actions_SetVariable_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000863")]
		private class NodeCanvas_Tasks_Actions_SetVariable_eMonsterAttackType : SetVariable<eMonsterAttackType>
		{
			[Token(Token = "0x60030A4")]
			[Address(RVA = "0x114C380", Offset = "0x114C380", VA = "0x114C380")]
			public NodeCanvas_Tasks_Actions_SetVariable_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000864")]
		private class NodeCanvas_Tasks_Actions_SetVariable_MoveTargetType : SetVariable<MoveTargetType>
		{
			[Token(Token = "0x60030A5")]
			[Address(RVA = "0x114BCA0", Offset = "0x114BCA0", VA = "0x114BCA0")]
			public NodeCanvas_Tasks_Actions_SetVariable_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000865")]
		private class NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_LayerMask : SetVariable<LayerMask>
		{
			[Token(Token = "0x60030A6")]
			[Address(RVA = "0x114C010", Offset = "0x114C010", VA = "0x114C010")]
			public NodeCanvas_Tasks_Actions_SetVariable_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000866")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_System_Boolean : CheckCSharpEvent<bool>
		{
			[Token(Token = "0x60030A7")]
			[Address(RVA = "0x114CD30", Offset = "0x114CD30", VA = "0x114CD30")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000867")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_System_Single : CheckCSharpEvent<float>
		{
			[Token(Token = "0x60030A8")]
			[Address(RVA = "0x114CDD0", Offset = "0x114CDD0", VA = "0x114CDD0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x2000868")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_System_Int32 : CheckCSharpEvent<int>
		{
			[Token(Token = "0x60030A9")]
			[Address(RVA = "0x114CD80", Offset = "0x114CD80", VA = "0x114CD80")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000869")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Vector2 : CheckCSharpEvent<Vector2>
		{
			[Token(Token = "0x60030AA")]
			[Address(RVA = "0x114D280", Offset = "0x114D280", VA = "0x114D280")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200086A")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Vector3 : CheckCSharpEvent<Vector3>
		{
			[Token(Token = "0x60030AB")]
			[Address(RVA = "0x114D2D0", Offset = "0x114D2D0", VA = "0x114D2D0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200086B")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Vector4 : CheckCSharpEvent<Vector4>
		{
			[Token(Token = "0x60030AC")]
			[Address(RVA = "0x114D320", Offset = "0x114D320", VA = "0x114D320")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200086C")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Quaternion : CheckCSharpEvent<Quaternion>
		{
			[Token(Token = "0x60030AD")]
			[Address(RVA = "0x114D0A0", Offset = "0x114D0A0", VA = "0x114D0A0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200086D")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Keyframe : CheckCSharpEvent<Keyframe>
		{
			[Token(Token = "0x60030AE")]
			[Address(RVA = "0x114D000", Offset = "0x114D000", VA = "0x114D000")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200086E")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Bounds : CheckCSharpEvent<Bounds>
		{
			[Token(Token = "0x60030AF")]
			[Address(RVA = "0x114CE20", Offset = "0x114CE20", VA = "0x114CE20")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200086F")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Color : CheckCSharpEvent<Color>
		{
			[Token(Token = "0x60030B0")]
			[Address(RVA = "0x114CF10", Offset = "0x114CF10", VA = "0x114CF10")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000870")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Rect : CheckCSharpEvent<Rect>
		{
			[Token(Token = "0x60030B1")]
			[Address(RVA = "0x114D1E0", Offset = "0x114D1E0", VA = "0x114D1E0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000871")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_ContactPoint : CheckCSharpEvent<ContactPoint>
		{
			[Token(Token = "0x60030B2")]
			[Address(RVA = "0x114CF60", Offset = "0x114CF60", VA = "0x114CF60")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000872")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_ContactPoint2D : CheckCSharpEvent<ContactPoint2D>
		{
			[Token(Token = "0x60030B3")]
			[Address(RVA = "0x114CFB0", Offset = "0x114CFB0", VA = "0x114CFB0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000873")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Collision : CheckCSharpEvent<Collision>
		{
			[Token(Token = "0x60030B4")]
			[Address(RVA = "0x114CE70", Offset = "0x114CE70", VA = "0x114CE70")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000874")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Collision2D : CheckCSharpEvent<Collision2D>
		{
			[Token(Token = "0x60030B5")]
			[Address(RVA = "0x114CEC0", Offset = "0x114CEC0", VA = "0x114CEC0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000875")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_RaycastHit : CheckCSharpEvent<RaycastHit>
		{
			[Token(Token = "0x60030B6")]
			[Address(RVA = "0x114D140", Offset = "0x114D140", VA = "0x114D140")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000876")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_RaycastHit2D : CheckCSharpEvent<RaycastHit2D>
		{
			[Token(Token = "0x60030B7")]
			[Address(RVA = "0x114D190", Offset = "0x114D190", VA = "0x114D190")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000877")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Ray : CheckCSharpEvent<Ray>
		{
			[Token(Token = "0x60030B8")]
			[Address(RVA = "0x114D0F0", Offset = "0x114D0F0", VA = "0x114D0F0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000878")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Space : CheckCSharpEvent<Space>
		{
			[Token(Token = "0x60030B9")]
			[Address(RVA = "0x114D230", Offset = "0x114D230", VA = "0x114D230")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000879")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_BossMainDone : CheckCSharpEvent<BossMainDone>
		{
			[Token(Token = "0x60030BA")]
			[Address(RVA = "0x114CC40", Offset = "0x114CC40", VA = "0x114CC40")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_BossMainDone()
			{
			}
		}

		[Token(Token = "0x200087A")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_BossMainToDo : CheckCSharpEvent<BossMainToDo>
		{
			[Token(Token = "0x60030BB")]
			[Address(RVA = "0x114CC90", Offset = "0x114CC90", VA = "0x114CC90")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x200087B")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_e_group_type : CheckCSharpEvent<e_group_type>
		{
			[Token(Token = "0x60030BC")]
			[Address(RVA = "0x114D410", Offset = "0x114D410", VA = "0x114D410")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_e_group_type()
			{
			}
		}

		[Token(Token = "0x200087C")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_eMonsterAttackDirType : CheckCSharpEvent<eMonsterAttackDirType>
		{
			[Token(Token = "0x60030BD")]
			[Address(RVA = "0x114D370", Offset = "0x114D370", VA = "0x114D370")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x200087D")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_eMonsterAttackType : CheckCSharpEvent<eMonsterAttackType>
		{
			[Token(Token = "0x60030BE")]
			[Address(RVA = "0x114D3C0", Offset = "0x114D3C0", VA = "0x114D3C0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x200087E")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_MoveTargetType : CheckCSharpEvent<MoveTargetType>
		{
			[Token(Token = "0x60030BF")]
			[Address(RVA = "0x114CCE0", Offset = "0x114CCE0", VA = "0x114CCE0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x200087F")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_LayerMask : CheckCSharpEvent<LayerMask>
		{
			[Token(Token = "0x60030C0")]
			[Address(RVA = "0x114D050", Offset = "0x114D050", VA = "0x114D050")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000880")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_System_Boolean : CheckCSharpEventValue<bool>
		{
			[Token(Token = "0x60030C1")]
			[Address(RVA = "0x114C510", Offset = "0x114C510", VA = "0x114C510")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000881")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_System_Single : CheckCSharpEventValue<float>
		{
			[Token(Token = "0x60030C2")]
			[Address(RVA = "0x114C5B0", Offset = "0x114C5B0", VA = "0x114C5B0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_System_Single()
			{
			}
		}

		[Token(Token = "0x2000882")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_System_Int32 : CheckCSharpEventValue<int>
		{
			[Token(Token = "0x60030C3")]
			[Address(RVA = "0x114C560", Offset = "0x114C560", VA = "0x114C560")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000883")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Vector2 : CheckCSharpEventValue<Vector2>
		{
			[Token(Token = "0x60030C4")]
			[Address(RVA = "0x114CA60", Offset = "0x114CA60", VA = "0x114CA60")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000884")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Vector3 : CheckCSharpEventValue<Vector3>
		{
			[Token(Token = "0x60030C5")]
			[Address(RVA = "0x114CAB0", Offset = "0x114CAB0", VA = "0x114CAB0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000885")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Vector4 : CheckCSharpEventValue<Vector4>
		{
			[Token(Token = "0x60030C6")]
			[Address(RVA = "0x114CB00", Offset = "0x114CB00", VA = "0x114CB00")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000886")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Quaternion : CheckCSharpEventValue<Quaternion>
		{
			[Token(Token = "0x60030C7")]
			[Address(RVA = "0x114C880", Offset = "0x114C880", VA = "0x114C880")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000887")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Keyframe : CheckCSharpEventValue<Keyframe>
		{
			[Token(Token = "0x60030C8")]
			[Address(RVA = "0x114C7E0", Offset = "0x114C7E0", VA = "0x114C7E0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000888")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Bounds : CheckCSharpEventValue<Bounds>
		{
			[Token(Token = "0x60030C9")]
			[Address(RVA = "0x114C600", Offset = "0x114C600", VA = "0x114C600")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000889")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Color : CheckCSharpEventValue<Color>
		{
			[Token(Token = "0x60030CA")]
			[Address(RVA = "0x114C6F0", Offset = "0x114C6F0", VA = "0x114C6F0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200088A")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Rect : CheckCSharpEventValue<Rect>
		{
			[Token(Token = "0x60030CB")]
			[Address(RVA = "0x114C9C0", Offset = "0x114C9C0", VA = "0x114C9C0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200088B")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_ContactPoint : CheckCSharpEventValue<ContactPoint>
		{
			[Token(Token = "0x60030CC")]
			[Address(RVA = "0x114C740", Offset = "0x114C740", VA = "0x114C740")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200088C")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_ContactPoint2D : CheckCSharpEventValue<ContactPoint2D>
		{
			[Token(Token = "0x60030CD")]
			[Address(RVA = "0x114C790", Offset = "0x114C790", VA = "0x114C790")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200088D")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Collision : CheckCSharpEventValue<Collision>
		{
			[Token(Token = "0x60030CE")]
			[Address(RVA = "0x114C650", Offset = "0x114C650", VA = "0x114C650")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200088E")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Collision2D : CheckCSharpEventValue<Collision2D>
		{
			[Token(Token = "0x60030CF")]
			[Address(RVA = "0x114C6A0", Offset = "0x114C6A0", VA = "0x114C6A0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200088F")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_RaycastHit : CheckCSharpEventValue<RaycastHit>
		{
			[Token(Token = "0x60030D0")]
			[Address(RVA = "0x114C920", Offset = "0x114C920", VA = "0x114C920")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000890")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_RaycastHit2D : CheckCSharpEventValue<RaycastHit2D>
		{
			[Token(Token = "0x60030D1")]
			[Address(RVA = "0x114C970", Offset = "0x114C970", VA = "0x114C970")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000891")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Ray : CheckCSharpEventValue<Ray>
		{
			[Token(Token = "0x60030D2")]
			[Address(RVA = "0x114C8D0", Offset = "0x114C8D0", VA = "0x114C8D0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000892")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Space : CheckCSharpEventValue<Space>
		{
			[Token(Token = "0x60030D3")]
			[Address(RVA = "0x114CA10", Offset = "0x114CA10", VA = "0x114CA10")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000893")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_BossMainDone : CheckCSharpEventValue<BossMainDone>
		{
			[Token(Token = "0x60030D4")]
			[Address(RVA = "0x114C420", Offset = "0x114C420", VA = "0x114C420")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000894")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_BossMainToDo : CheckCSharpEventValue<BossMainToDo>
		{
			[Token(Token = "0x60030D5")]
			[Address(RVA = "0x114C470", Offset = "0x114C470", VA = "0x114C470")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000895")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_e_group_type : CheckCSharpEventValue<e_group_type>
		{
			[Token(Token = "0x60030D6")]
			[Address(RVA = "0x114CBF0", Offset = "0x114CBF0", VA = "0x114CBF0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000896")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_eMonsterAttackDirType : CheckCSharpEventValue<eMonsterAttackDirType>
		{
			[Token(Token = "0x60030D7")]
			[Address(RVA = "0x114CB50", Offset = "0x114CB50", VA = "0x114CB50")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000897")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_eMonsterAttackType : CheckCSharpEventValue<eMonsterAttackType>
		{
			[Token(Token = "0x60030D8")]
			[Address(RVA = "0x114CBA0", Offset = "0x114CBA0", VA = "0x114CBA0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000898")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_MoveTargetType : CheckCSharpEventValue<MoveTargetType>
		{
			[Token(Token = "0x60030D9")]
			[Address(RVA = "0x114C4C0", Offset = "0x114C4C0", VA = "0x114C4C0")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000899")]
		private class NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_LayerMask : CheckCSharpEventValue<LayerMask>
		{
			[Token(Token = "0x60030DA")]
			[Address(RVA = "0x114C830", Offset = "0x114C830", VA = "0x114C830")]
			public NodeCanvas_Tasks_Conditions_CheckCSharpEventValue_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200089A")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_System_Boolean : CheckEvent<bool>
		{
			[Token(Token = "0x60030DB")]
			[Address(RVA = "0x114DD70", Offset = "0x114DD70", VA = "0x114DD70")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200089B")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_System_Single : CheckEvent<float>
		{
			[Token(Token = "0x60030DC")]
			[Address(RVA = "0x114DE10", Offset = "0x114DE10", VA = "0x114DE10")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x200089C")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_System_Int32 : CheckEvent<int>
		{
			[Token(Token = "0x60030DD")]
			[Address(RVA = "0x114DDC0", Offset = "0x114DDC0", VA = "0x114DDC0")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x200089D")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Vector2 : CheckEvent<Vector2>
		{
			[Token(Token = "0x60030DE")]
			[Address(RVA = "0x114E2C0", Offset = "0x114E2C0", VA = "0x114E2C0")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200089E")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Vector3 : CheckEvent<Vector3>
		{
			[Token(Token = "0x60030DF")]
			[Address(RVA = "0x114E310", Offset = "0x114E310", VA = "0x114E310")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200089F")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Vector4 : CheckEvent<Vector4>
		{
			[Token(Token = "0x60030E0")]
			[Address(RVA = "0x114E360", Offset = "0x114E360", VA = "0x114E360")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20008A0")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Quaternion : CheckEvent<Quaternion>
		{
			[Token(Token = "0x60030E1")]
			[Address(RVA = "0x114E0E0", Offset = "0x114E0E0", VA = "0x114E0E0")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20008A1")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Keyframe : CheckEvent<Keyframe>
		{
			[Token(Token = "0x60030E2")]
			[Address(RVA = "0x114E040", Offset = "0x114E040", VA = "0x114E040")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20008A2")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Bounds : CheckEvent<Bounds>
		{
			[Token(Token = "0x60030E3")]
			[Address(RVA = "0x114DE60", Offset = "0x114DE60", VA = "0x114DE60")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20008A3")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Color : CheckEvent<Color>
		{
			[Token(Token = "0x60030E4")]
			[Address(RVA = "0x114DF50", Offset = "0x114DF50", VA = "0x114DF50")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20008A4")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Rect : CheckEvent<Rect>
		{
			[Token(Token = "0x60030E5")]
			[Address(RVA = "0x114E220", Offset = "0x114E220", VA = "0x114E220")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20008A5")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_ContactPoint : CheckEvent<ContactPoint>
		{
			[Token(Token = "0x60030E6")]
			[Address(RVA = "0x114DFA0", Offset = "0x114DFA0", VA = "0x114DFA0")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20008A6")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_ContactPoint2D : CheckEvent<ContactPoint2D>
		{
			[Token(Token = "0x60030E7")]
			[Address(RVA = "0x114DFF0", Offset = "0x114DFF0", VA = "0x114DFF0")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20008A7")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Collision : CheckEvent<Collision>
		{
			[Token(Token = "0x60030E8")]
			[Address(RVA = "0x114DEB0", Offset = "0x114DEB0", VA = "0x114DEB0")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20008A8")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Collision2D : CheckEvent<Collision2D>
		{
			[Token(Token = "0x60030E9")]
			[Address(RVA = "0x114DF00", Offset = "0x114DF00", VA = "0x114DF00")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20008A9")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_RaycastHit : CheckEvent<RaycastHit>
		{
			[Token(Token = "0x60030EA")]
			[Address(RVA = "0x114E180", Offset = "0x114E180", VA = "0x114E180")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20008AA")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_RaycastHit2D : CheckEvent<RaycastHit2D>
		{
			[Token(Token = "0x60030EB")]
			[Address(RVA = "0x114E1D0", Offset = "0x114E1D0", VA = "0x114E1D0")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20008AB")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Ray : CheckEvent<Ray>
		{
			[Token(Token = "0x60030EC")]
			[Address(RVA = "0x114E130", Offset = "0x114E130", VA = "0x114E130")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20008AC")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Space : CheckEvent<Space>
		{
			[Token(Token = "0x60030ED")]
			[Address(RVA = "0x114E270", Offset = "0x114E270", VA = "0x114E270")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20008AD")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_BossMainDone : CheckEvent<BossMainDone>
		{
			[Token(Token = "0x60030EE")]
			[Address(RVA = "0x114DC80", Offset = "0x114DC80", VA = "0x114DC80")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20008AE")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_BossMainToDo : CheckEvent<BossMainToDo>
		{
			[Token(Token = "0x60030EF")]
			[Address(RVA = "0x114DCD0", Offset = "0x114DCD0", VA = "0x114DCD0")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20008AF")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_e_group_type : CheckEvent<e_group_type>
		{
			[Token(Token = "0x60030F0")]
			[Address(RVA = "0x114E450", Offset = "0x114E450", VA = "0x114E450")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_e_group_type()
			{
			}
		}

		[Token(Token = "0x20008B0")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_eMonsterAttackDirType : CheckEvent<eMonsterAttackDirType>
		{
			[Token(Token = "0x60030F1")]
			[Address(RVA = "0x114E3B0", Offset = "0x114E3B0", VA = "0x114E3B0")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20008B1")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_eMonsterAttackType : CheckEvent<eMonsterAttackType>
		{
			[Token(Token = "0x60030F2")]
			[Address(RVA = "0x114E400", Offset = "0x114E400", VA = "0x114E400")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20008B2")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_MoveTargetType : CheckEvent<MoveTargetType>
		{
			[Token(Token = "0x60030F3")]
			[Address(RVA = "0x114DD20", Offset = "0x114DD20", VA = "0x114DD20")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20008B3")]
		private class NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_LayerMask : CheckEvent<LayerMask>
		{
			[Token(Token = "0x60030F4")]
			[Address(RVA = "0x114E090", Offset = "0x114E090", VA = "0x114E090")]
			public NodeCanvas_Tasks_Conditions_CheckEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20008B4")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_System_Boolean : CheckEventValue<bool>
		{
			[Token(Token = "0x60030F5")]
			[Address(RVA = "0x114D550", Offset = "0x114D550", VA = "0x114D550")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20008B5")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_System_Single : CheckEventValue<float>
		{
			[Token(Token = "0x60030F6")]
			[Address(RVA = "0x114D5F0", Offset = "0x114D5F0", VA = "0x114D5F0")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_System_Single()
			{
			}
		}

		[Token(Token = "0x20008B6")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_System_Int32 : CheckEventValue<int>
		{
			[Token(Token = "0x60030F7")]
			[Address(RVA = "0x114D5A0", Offset = "0x114D5A0", VA = "0x114D5A0")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_System_Int32()
			{
			}
		}

		[Token(Token = "0x20008B7")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Vector2 : CheckEventValue<Vector2>
		{
			[Token(Token = "0x60030F8")]
			[Address(RVA = "0x114DAA0", Offset = "0x114DAA0", VA = "0x114DAA0")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20008B8")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Vector3 : CheckEventValue<Vector3>
		{
			[Token(Token = "0x60030F9")]
			[Address(RVA = "0x114DAF0", Offset = "0x114DAF0", VA = "0x114DAF0")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20008B9")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Vector4 : CheckEventValue<Vector4>
		{
			[Token(Token = "0x60030FA")]
			[Address(RVA = "0x114DB40", Offset = "0x114DB40", VA = "0x114DB40")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20008BA")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Quaternion : CheckEventValue<Quaternion>
		{
			[Token(Token = "0x60030FB")]
			[Address(RVA = "0x114D8C0", Offset = "0x114D8C0", VA = "0x114D8C0")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20008BB")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Keyframe : CheckEventValue<Keyframe>
		{
			[Token(Token = "0x60030FC")]
			[Address(RVA = "0x114D820", Offset = "0x114D820", VA = "0x114D820")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20008BC")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Bounds : CheckEventValue<Bounds>
		{
			[Token(Token = "0x60030FD")]
			[Address(RVA = "0x114D640", Offset = "0x114D640", VA = "0x114D640")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20008BD")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Color : CheckEventValue<Color>
		{
			[Token(Token = "0x60030FE")]
			[Address(RVA = "0x114D730", Offset = "0x114D730", VA = "0x114D730")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20008BE")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Rect : CheckEventValue<Rect>
		{
			[Token(Token = "0x60030FF")]
			[Address(RVA = "0x114DA00", Offset = "0x114DA00", VA = "0x114DA00")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20008BF")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_ContactPoint : CheckEventValue<ContactPoint>
		{
			[Token(Token = "0x6003100")]
			[Address(RVA = "0x114D780", Offset = "0x114D780", VA = "0x114D780")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20008C0")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_ContactPoint2D : CheckEventValue<ContactPoint2D>
		{
			[Token(Token = "0x6003101")]
			[Address(RVA = "0x114D7D0", Offset = "0x114D7D0", VA = "0x114D7D0")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20008C1")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Collision : CheckEventValue<Collision>
		{
			[Token(Token = "0x6003102")]
			[Address(RVA = "0x114D690", Offset = "0x114D690", VA = "0x114D690")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20008C2")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Collision2D : CheckEventValue<Collision2D>
		{
			[Token(Token = "0x6003103")]
			[Address(RVA = "0x114D6E0", Offset = "0x114D6E0", VA = "0x114D6E0")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20008C3")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_RaycastHit : CheckEventValue<RaycastHit>
		{
			[Token(Token = "0x6003104")]
			[Address(RVA = "0x114D960", Offset = "0x114D960", VA = "0x114D960")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20008C4")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_RaycastHit2D : CheckEventValue<RaycastHit2D>
		{
			[Token(Token = "0x6003105")]
			[Address(RVA = "0x114D9B0", Offset = "0x114D9B0", VA = "0x114D9B0")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20008C5")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Ray : CheckEventValue<Ray>
		{
			[Token(Token = "0x6003106")]
			[Address(RVA = "0x114D910", Offset = "0x114D910", VA = "0x114D910")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20008C6")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Space : CheckEventValue<Space>
		{
			[Token(Token = "0x6003107")]
			[Address(RVA = "0x114DA50", Offset = "0x114DA50", VA = "0x114DA50")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20008C7")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_BossMainDone : CheckEventValue<BossMainDone>
		{
			[Token(Token = "0x6003108")]
			[Address(RVA = "0x114D460", Offset = "0x114D460", VA = "0x114D460")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20008C8")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_BossMainToDo : CheckEventValue<BossMainToDo>
		{
			[Token(Token = "0x6003109")]
			[Address(RVA = "0x114D4B0", Offset = "0x114D4B0", VA = "0x114D4B0")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20008C9")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_e_group_type : CheckEventValue<e_group_type>
		{
			[Token(Token = "0x600310A")]
			[Address(RVA = "0x114DC30", Offset = "0x114DC30", VA = "0x114DC30")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_e_group_type()
			{
			}
		}

		[Token(Token = "0x20008CA")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_eMonsterAttackDirType : CheckEventValue<eMonsterAttackDirType>
		{
			[Token(Token = "0x600310B")]
			[Address(RVA = "0x114DB90", Offset = "0x114DB90", VA = "0x114DB90")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20008CB")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_eMonsterAttackType : CheckEventValue<eMonsterAttackType>
		{
			[Token(Token = "0x600310C")]
			[Address(RVA = "0x114DBE0", Offset = "0x114DBE0", VA = "0x114DBE0")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20008CC")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_MoveTargetType : CheckEventValue<MoveTargetType>
		{
			[Token(Token = "0x600310D")]
			[Address(RVA = "0x114D500", Offset = "0x114D500", VA = "0x114D500")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20008CD")]
		private class NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_LayerMask : CheckEventValue<LayerMask>
		{
			[Token(Token = "0x600310E")]
			[Address(RVA = "0x114D870", Offset = "0x114D870", VA = "0x114D870")]
			public NodeCanvas_Tasks_Conditions_CheckEventValue_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20008CE")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_System_Boolean : CheckStaticCSharpEvent<bool>
		{
			[Token(Token = "0x600310F")]
			[Address(RVA = "0x114E590", Offset = "0x114E590", VA = "0x114E590")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20008CF")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_System_Single : CheckStaticCSharpEvent<float>
		{
			[Token(Token = "0x6003110")]
			[Address(RVA = "0x114E630", Offset = "0x114E630", VA = "0x114E630")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x20008D0")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_System_Int32 : CheckStaticCSharpEvent<int>
		{
			[Token(Token = "0x6003111")]
			[Address(RVA = "0x114E5E0", Offset = "0x114E5E0", VA = "0x114E5E0")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x20008D1")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Vector2 : CheckStaticCSharpEvent<Vector2>
		{
			[Token(Token = "0x6003112")]
			[Address(RVA = "0x114EAE0", Offset = "0x114EAE0", VA = "0x114EAE0")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20008D2")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Vector3 : CheckStaticCSharpEvent<Vector3>
		{
			[Token(Token = "0x6003113")]
			[Address(RVA = "0x114EB30", Offset = "0x114EB30", VA = "0x114EB30")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20008D3")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Vector4 : CheckStaticCSharpEvent<Vector4>
		{
			[Token(Token = "0x6003114")]
			[Address(RVA = "0x114EB80", Offset = "0x114EB80", VA = "0x114EB80")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20008D4")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Quaternion : CheckStaticCSharpEvent<Quaternion>
		{
			[Token(Token = "0x6003115")]
			[Address(RVA = "0x114E900", Offset = "0x114E900", VA = "0x114E900")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20008D5")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Keyframe : CheckStaticCSharpEvent<Keyframe>
		{
			[Token(Token = "0x6003116")]
			[Address(RVA = "0x114E860", Offset = "0x114E860", VA = "0x114E860")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20008D6")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Bounds : CheckStaticCSharpEvent<Bounds>
		{
			[Token(Token = "0x6003117")]
			[Address(RVA = "0x114E680", Offset = "0x114E680", VA = "0x114E680")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20008D7")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Color : CheckStaticCSharpEvent<Color>
		{
			[Token(Token = "0x6003118")]
			[Address(RVA = "0x114E770", Offset = "0x114E770", VA = "0x114E770")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20008D8")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Rect : CheckStaticCSharpEvent<Rect>
		{
			[Token(Token = "0x6003119")]
			[Address(RVA = "0x114EA40", Offset = "0x114EA40", VA = "0x114EA40")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20008D9")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_ContactPoint : CheckStaticCSharpEvent<ContactPoint>
		{
			[Token(Token = "0x600311A")]
			[Address(RVA = "0x114E7C0", Offset = "0x114E7C0", VA = "0x114E7C0")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20008DA")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_ContactPoint2D : CheckStaticCSharpEvent<ContactPoint2D>
		{
			[Token(Token = "0x600311B")]
			[Address(RVA = "0x114E810", Offset = "0x114E810", VA = "0x114E810")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20008DB")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Collision : CheckStaticCSharpEvent<Collision>
		{
			[Token(Token = "0x600311C")]
			[Address(RVA = "0x114E6D0", Offset = "0x114E6D0", VA = "0x114E6D0")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20008DC")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Collision2D : CheckStaticCSharpEvent<Collision2D>
		{
			[Token(Token = "0x600311D")]
			[Address(RVA = "0x114E720", Offset = "0x114E720", VA = "0x114E720")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20008DD")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_RaycastHit : CheckStaticCSharpEvent<RaycastHit>
		{
			[Token(Token = "0x600311E")]
			[Address(RVA = "0x114E9A0", Offset = "0x114E9A0", VA = "0x114E9A0")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20008DE")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_RaycastHit2D : CheckStaticCSharpEvent<RaycastHit2D>
		{
			[Token(Token = "0x600311F")]
			[Address(RVA = "0x114E9F0", Offset = "0x114E9F0", VA = "0x114E9F0")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20008DF")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Ray : CheckStaticCSharpEvent<Ray>
		{
			[Token(Token = "0x6003120")]
			[Address(RVA = "0x114E950", Offset = "0x114E950", VA = "0x114E950")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20008E0")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Space : CheckStaticCSharpEvent<Space>
		{
			[Token(Token = "0x6003121")]
			[Address(RVA = "0x114EA90", Offset = "0x114EA90", VA = "0x114EA90")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20008E1")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_BossMainDone : CheckStaticCSharpEvent<BossMainDone>
		{
			[Token(Token = "0x6003122")]
			[Address(RVA = "0x114E4A0", Offset = "0x114E4A0", VA = "0x114E4A0")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20008E2")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_BossMainToDo : CheckStaticCSharpEvent<BossMainToDo>
		{
			[Token(Token = "0x6003123")]
			[Address(RVA = "0x114E4F0", Offset = "0x114E4F0", VA = "0x114E4F0")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20008E3")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_e_group_type : CheckStaticCSharpEvent<e_group_type>
		{
			[Token(Token = "0x6003124")]
			[Address(RVA = "0x114EC70", Offset = "0x114EC70", VA = "0x114EC70")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_e_group_type()
			{
			}
		}

		[Token(Token = "0x20008E4")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_eMonsterAttackDirType : CheckStaticCSharpEvent<eMonsterAttackDirType>
		{
			[Token(Token = "0x6003125")]
			[Address(RVA = "0x114EBD0", Offset = "0x114EBD0", VA = "0x114EBD0")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20008E5")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_eMonsterAttackType : CheckStaticCSharpEvent<eMonsterAttackType>
		{
			[Token(Token = "0x6003126")]
			[Address(RVA = "0x114EC20", Offset = "0x114EC20", VA = "0x114EC20")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x20008E6")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_MoveTargetType : CheckStaticCSharpEvent<MoveTargetType>
		{
			[Token(Token = "0x6003127")]
			[Address(RVA = "0x114E540", Offset = "0x114E540", VA = "0x114E540")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x20008E7")]
		private class NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_LayerMask : CheckStaticCSharpEvent<LayerMask>
		{
			[Token(Token = "0x6003128")]
			[Address(RVA = "0x114E8B0", Offset = "0x114E8B0", VA = "0x114E8B0")]
			public NodeCanvas_Tasks_Conditions_CheckStaticCSharpEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x20008E8")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_System_Boolean : CheckUnityEvent<bool>
		{
			[Token(Token = "0x6003129")]
			[Address(RVA = "0x114F5D0", Offset = "0x114F5D0", VA = "0x114F5D0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_System_Boolean()
			{
			}
		}

		[Token(Token = "0x20008E9")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_System_Single : CheckUnityEvent<float>
		{
			[Token(Token = "0x600312A")]
			[Address(RVA = "0x114F670", Offset = "0x114F670", VA = "0x114F670")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_System_Single()
			{
			}
		}

		[Token(Token = "0x20008EA")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_System_Int32 : CheckUnityEvent<int>
		{
			[Token(Token = "0x600312B")]
			[Address(RVA = "0x114F620", Offset = "0x114F620", VA = "0x114F620")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_System_Int32()
			{
			}
		}

		[Token(Token = "0x20008EB")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Vector2 : CheckUnityEvent<Vector2>
		{
			[Token(Token = "0x600312C")]
			[Address(RVA = "0x114FB20", Offset = "0x114FB20", VA = "0x114FB20")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x20008EC")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Vector3 : CheckUnityEvent<Vector3>
		{
			[Token(Token = "0x600312D")]
			[Address(RVA = "0x114FB70", Offset = "0x114FB70", VA = "0x114FB70")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x20008ED")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Vector4 : CheckUnityEvent<Vector4>
		{
			[Token(Token = "0x600312E")]
			[Address(RVA = "0x114FBC0", Offset = "0x114FBC0", VA = "0x114FBC0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x20008EE")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Quaternion : CheckUnityEvent<Quaternion>
		{
			[Token(Token = "0x600312F")]
			[Address(RVA = "0x114F940", Offset = "0x114F940", VA = "0x114F940")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x20008EF")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Keyframe : CheckUnityEvent<Keyframe>
		{
			[Token(Token = "0x6003130")]
			[Address(RVA = "0x114F8A0", Offset = "0x114F8A0", VA = "0x114F8A0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x20008F0")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Bounds : CheckUnityEvent<Bounds>
		{
			[Token(Token = "0x6003131")]
			[Address(RVA = "0x114F6C0", Offset = "0x114F6C0", VA = "0x114F6C0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x20008F1")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Color : CheckUnityEvent<Color>
		{
			[Token(Token = "0x6003132")]
			[Address(RVA = "0x114F7B0", Offset = "0x114F7B0", VA = "0x114F7B0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x20008F2")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Rect : CheckUnityEvent<Rect>
		{
			[Token(Token = "0x6003133")]
			[Address(RVA = "0x114FA80", Offset = "0x114FA80", VA = "0x114FA80")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x20008F3")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_ContactPoint : CheckUnityEvent<ContactPoint>
		{
			[Token(Token = "0x6003134")]
			[Address(RVA = "0x114F800", Offset = "0x114F800", VA = "0x114F800")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x20008F4")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_ContactPoint2D : CheckUnityEvent<ContactPoint2D>
		{
			[Token(Token = "0x6003135")]
			[Address(RVA = "0x114F850", Offset = "0x114F850", VA = "0x114F850")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x20008F5")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Collision : CheckUnityEvent<Collision>
		{
			[Token(Token = "0x6003136")]
			[Address(RVA = "0x114F710", Offset = "0x114F710", VA = "0x114F710")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x20008F6")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Collision2D : CheckUnityEvent<Collision2D>
		{
			[Token(Token = "0x6003137")]
			[Address(RVA = "0x114F760", Offset = "0x114F760", VA = "0x114F760")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x20008F7")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_RaycastHit : CheckUnityEvent<RaycastHit>
		{
			[Token(Token = "0x6003138")]
			[Address(RVA = "0x114F9E0", Offset = "0x114F9E0", VA = "0x114F9E0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x20008F8")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_RaycastHit2D : CheckUnityEvent<RaycastHit2D>
		{
			[Token(Token = "0x6003139")]
			[Address(RVA = "0x114FA30", Offset = "0x114FA30", VA = "0x114FA30")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x20008F9")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Ray : CheckUnityEvent<Ray>
		{
			[Token(Token = "0x600313A")]
			[Address(RVA = "0x114F990", Offset = "0x114F990", VA = "0x114F990")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x20008FA")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Space : CheckUnityEvent<Space>
		{
			[Token(Token = "0x600313B")]
			[Address(RVA = "0x114FAD0", Offset = "0x114FAD0", VA = "0x114FAD0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x20008FB")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_BossMainDone : CheckUnityEvent<BossMainDone>
		{
			[Token(Token = "0x600313C")]
			[Address(RVA = "0x114F4E0", Offset = "0x114F4E0", VA = "0x114F4E0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_BossMainDone()
			{
			}
		}

		[Token(Token = "0x20008FC")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_BossMainToDo : CheckUnityEvent<BossMainToDo>
		{
			[Token(Token = "0x600313D")]
			[Address(RVA = "0x114F530", Offset = "0x114F530", VA = "0x114F530")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x20008FD")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_e_group_type : CheckUnityEvent<e_group_type>
		{
			[Token(Token = "0x600313E")]
			[Address(RVA = "0x114FCB0", Offset = "0x114FCB0", VA = "0x114FCB0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_e_group_type()
			{
			}
		}

		[Token(Token = "0x20008FE")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_eMonsterAttackDirType : CheckUnityEvent<eMonsterAttackDirType>
		{
			[Token(Token = "0x600313F")]
			[Address(RVA = "0x114FC10", Offset = "0x114FC10", VA = "0x114FC10")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x20008FF")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_eMonsterAttackType : CheckUnityEvent<eMonsterAttackType>
		{
			[Token(Token = "0x6003140")]
			[Address(RVA = "0x114FC60", Offset = "0x114FC60", VA = "0x114FC60")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000900")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_MoveTargetType : CheckUnityEvent<MoveTargetType>
		{
			[Token(Token = "0x6003141")]
			[Address(RVA = "0x114F580", Offset = "0x114F580", VA = "0x114F580")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000901")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_LayerMask : CheckUnityEvent<LayerMask>
		{
			[Token(Token = "0x6003142")]
			[Address(RVA = "0x114F8F0", Offset = "0x114F8F0", VA = "0x114F8F0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEvent_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000902")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_System_Boolean : CheckUnityEventValue<bool>
		{
			[Token(Token = "0x6003143")]
			[Address(RVA = "0x114EDB0", Offset = "0x114EDB0", VA = "0x114EDB0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000903")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_System_Single : CheckUnityEventValue<float>
		{
			[Token(Token = "0x6003144")]
			[Address(RVA = "0x114EE50", Offset = "0x114EE50", VA = "0x114EE50")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_System_Single()
			{
			}
		}

		[Token(Token = "0x2000904")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_System_Int32 : CheckUnityEventValue<int>
		{
			[Token(Token = "0x6003145")]
			[Address(RVA = "0x114EE00", Offset = "0x114EE00", VA = "0x114EE00")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000905")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Vector2 : CheckUnityEventValue<Vector2>
		{
			[Token(Token = "0x6003146")]
			[Address(RVA = "0x114F300", Offset = "0x114F300", VA = "0x114F300")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000906")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Vector3 : CheckUnityEventValue<Vector3>
		{
			[Token(Token = "0x6003147")]
			[Address(RVA = "0x114F350", Offset = "0x114F350", VA = "0x114F350")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000907")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Vector4 : CheckUnityEventValue<Vector4>
		{
			[Token(Token = "0x6003148")]
			[Address(RVA = "0x114F3A0", Offset = "0x114F3A0", VA = "0x114F3A0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000908")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Quaternion : CheckUnityEventValue<Quaternion>
		{
			[Token(Token = "0x6003149")]
			[Address(RVA = "0x114F120", Offset = "0x114F120", VA = "0x114F120")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000909")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Keyframe : CheckUnityEventValue<Keyframe>
		{
			[Token(Token = "0x600314A")]
			[Address(RVA = "0x114F080", Offset = "0x114F080", VA = "0x114F080")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200090A")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Bounds : CheckUnityEventValue<Bounds>
		{
			[Token(Token = "0x600314B")]
			[Address(RVA = "0x114EEA0", Offset = "0x114EEA0", VA = "0x114EEA0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200090B")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Color : CheckUnityEventValue<Color>
		{
			[Token(Token = "0x600314C")]
			[Address(RVA = "0x114EF90", Offset = "0x114EF90", VA = "0x114EF90")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200090C")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Rect : CheckUnityEventValue<Rect>
		{
			[Token(Token = "0x600314D")]
			[Address(RVA = "0x114F260", Offset = "0x114F260", VA = "0x114F260")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200090D")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_ContactPoint : CheckUnityEventValue<ContactPoint>
		{
			[Token(Token = "0x600314E")]
			[Address(RVA = "0x114EFE0", Offset = "0x114EFE0", VA = "0x114EFE0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200090E")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_ContactPoint2D : CheckUnityEventValue<ContactPoint2D>
		{
			[Token(Token = "0x600314F")]
			[Address(RVA = "0x114F030", Offset = "0x114F030", VA = "0x114F030")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200090F")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Collision : CheckUnityEventValue<Collision>
		{
			[Token(Token = "0x6003150")]
			[Address(RVA = "0x114EEF0", Offset = "0x114EEF0", VA = "0x114EEF0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000910")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Collision2D : CheckUnityEventValue<Collision2D>
		{
			[Token(Token = "0x6003151")]
			[Address(RVA = "0x114EF40", Offset = "0x114EF40", VA = "0x114EF40")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000911")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_RaycastHit : CheckUnityEventValue<RaycastHit>
		{
			[Token(Token = "0x6003152")]
			[Address(RVA = "0x114F1C0", Offset = "0x114F1C0", VA = "0x114F1C0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000912")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_RaycastHit2D : CheckUnityEventValue<RaycastHit2D>
		{
			[Token(Token = "0x6003153")]
			[Address(RVA = "0x114F210", Offset = "0x114F210", VA = "0x114F210")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000913")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Ray : CheckUnityEventValue<Ray>
		{
			[Token(Token = "0x6003154")]
			[Address(RVA = "0x114F170", Offset = "0x114F170", VA = "0x114F170")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000914")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Space : CheckUnityEventValue<Space>
		{
			[Token(Token = "0x6003155")]
			[Address(RVA = "0x114F2B0", Offset = "0x114F2B0", VA = "0x114F2B0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000915")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_BossMainDone : CheckUnityEventValue<BossMainDone>
		{
			[Token(Token = "0x6003156")]
			[Address(RVA = "0x114ECC0", Offset = "0x114ECC0", VA = "0x114ECC0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000916")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_BossMainToDo : CheckUnityEventValue<BossMainToDo>
		{
			[Token(Token = "0x6003157")]
			[Address(RVA = "0x114ED10", Offset = "0x114ED10", VA = "0x114ED10")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000917")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_e_group_type : CheckUnityEventValue<e_group_type>
		{
			[Token(Token = "0x6003158")]
			[Address(RVA = "0x114F490", Offset = "0x114F490", VA = "0x114F490")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000918")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_eMonsterAttackDirType : CheckUnityEventValue<eMonsterAttackDirType>
		{
			[Token(Token = "0x6003159")]
			[Address(RVA = "0x114F3F0", Offset = "0x114F3F0", VA = "0x114F3F0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000919")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_eMonsterAttackType : CheckUnityEventValue<eMonsterAttackType>
		{
			[Token(Token = "0x600315A")]
			[Address(RVA = "0x114F440", Offset = "0x114F440", VA = "0x114F440")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x200091A")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_MoveTargetType : CheckUnityEventValue<MoveTargetType>
		{
			[Token(Token = "0x600315B")]
			[Address(RVA = "0x114ED60", Offset = "0x114ED60", VA = "0x114ED60")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x200091B")]
		private class NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_LayerMask : CheckUnityEventValue<LayerMask>
		{
			[Token(Token = "0x600315C")]
			[Address(RVA = "0x114F0D0", Offset = "0x114F0D0", VA = "0x114F0D0")]
			public NodeCanvas_Tasks_Conditions_CheckUnityEventValue_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x200091C")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_System_Boolean : CheckVariable<bool>
		{
			[Token(Token = "0x600315D")]
			[Address(RVA = "0x114FDF0", Offset = "0x114FDF0", VA = "0x114FDF0")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_System_Boolean()
			{
			}
		}

		[Token(Token = "0x200091D")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_System_Single : CheckVariable<float>
		{
			[Token(Token = "0x600315E")]
			[Address(RVA = "0x114FE90", Offset = "0x114FE90", VA = "0x114FE90")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_System_Single()
			{
			}
		}

		[Token(Token = "0x200091E")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_System_Int32 : CheckVariable<int>
		{
			[Token(Token = "0x600315F")]
			[Address(RVA = "0x114FE40", Offset = "0x114FE40", VA = "0x114FE40")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_System_Int32()
			{
			}
		}

		[Token(Token = "0x200091F")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Vector2 : CheckVariable<Vector2>
		{
			[Token(Token = "0x6003160")]
			[Address(RVA = "0x1150340", Offset = "0x1150340", VA = "0x1150340")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000920")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Vector3 : CheckVariable<Vector3>
		{
			[Token(Token = "0x6003161")]
			[Address(RVA = "0x1150390", Offset = "0x1150390", VA = "0x1150390")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000921")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Vector4 : CheckVariable<Vector4>
		{
			[Token(Token = "0x6003162")]
			[Address(RVA = "0x11503E0", Offset = "0x11503E0", VA = "0x11503E0")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000922")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Quaternion : CheckVariable<Quaternion>
		{
			[Token(Token = "0x6003163")]
			[Address(RVA = "0x1150160", Offset = "0x1150160", VA = "0x1150160")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000923")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Keyframe : CheckVariable<Keyframe>
		{
			[Token(Token = "0x6003164")]
			[Address(RVA = "0x11500C0", Offset = "0x11500C0", VA = "0x11500C0")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000924")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Bounds : CheckVariable<Bounds>
		{
			[Token(Token = "0x6003165")]
			[Address(RVA = "0x114FEE0", Offset = "0x114FEE0", VA = "0x114FEE0")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000925")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Color : CheckVariable<Color>
		{
			[Token(Token = "0x6003166")]
			[Address(RVA = "0x114FFD0", Offset = "0x114FFD0", VA = "0x114FFD0")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000926")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Rect : CheckVariable<Rect>
		{
			[Token(Token = "0x6003167")]
			[Address(RVA = "0x11502A0", Offset = "0x11502A0", VA = "0x11502A0")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000927")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_ContactPoint : CheckVariable<ContactPoint>
		{
			[Token(Token = "0x6003168")]
			[Address(RVA = "0x1150020", Offset = "0x1150020", VA = "0x1150020")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000928")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_ContactPoint2D : CheckVariable<ContactPoint2D>
		{
			[Token(Token = "0x6003169")]
			[Address(RVA = "0x1150070", Offset = "0x1150070", VA = "0x1150070")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000929")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Collision : CheckVariable<Collision>
		{
			[Token(Token = "0x600316A")]
			[Address(RVA = "0x114FF30", Offset = "0x114FF30", VA = "0x114FF30")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200092A")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Collision2D : CheckVariable<Collision2D>
		{
			[Token(Token = "0x600316B")]
			[Address(RVA = "0x114FF80", Offset = "0x114FF80", VA = "0x114FF80")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200092B")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_RaycastHit : CheckVariable<RaycastHit>
		{
			[Token(Token = "0x600316C")]
			[Address(RVA = "0x1150200", Offset = "0x1150200", VA = "0x1150200")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x200092C")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_RaycastHit2D : CheckVariable<RaycastHit2D>
		{
			[Token(Token = "0x600316D")]
			[Address(RVA = "0x1150250", Offset = "0x1150250", VA = "0x1150250")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x200092D")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Ray : CheckVariable<Ray>
		{
			[Token(Token = "0x600316E")]
			[Address(RVA = "0x11501B0", Offset = "0x11501B0", VA = "0x11501B0")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x200092E")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Space : CheckVariable<Space>
		{
			[Token(Token = "0x600316F")]
			[Address(RVA = "0x11502F0", Offset = "0x11502F0", VA = "0x11502F0")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x200092F")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_BossMainDone : CheckVariable<BossMainDone>
		{
			[Token(Token = "0x6003170")]
			[Address(RVA = "0x114FD00", Offset = "0x114FD00", VA = "0x114FD00")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000930")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_BossMainToDo : CheckVariable<BossMainToDo>
		{
			[Token(Token = "0x6003171")]
			[Address(RVA = "0x114FD50", Offset = "0x114FD50", VA = "0x114FD50")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000931")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_e_group_type : CheckVariable<e_group_type>
		{
			[Token(Token = "0x6003172")]
			[Address(RVA = "0x11504D0", Offset = "0x11504D0", VA = "0x11504D0")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000932")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_eMonsterAttackDirType : CheckVariable<eMonsterAttackDirType>
		{
			[Token(Token = "0x6003173")]
			[Address(RVA = "0x1150430", Offset = "0x1150430", VA = "0x1150430")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000933")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_eMonsterAttackType : CheckVariable<eMonsterAttackType>
		{
			[Token(Token = "0x6003174")]
			[Address(RVA = "0x1150480", Offset = "0x1150480", VA = "0x1150480")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000934")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_MoveTargetType : CheckVariable<MoveTargetType>
		{
			[Token(Token = "0x6003175")]
			[Address(RVA = "0x114FDA0", Offset = "0x114FDA0", VA = "0x114FDA0")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000935")]
		private class NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_LayerMask : CheckVariable<LayerMask>
		{
			[Token(Token = "0x6003176")]
			[Address(RVA = "0x1150110", Offset = "0x1150110", VA = "0x1150110")]
			public NodeCanvas_Tasks_Conditions_CheckVariable_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000936")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_System_Boolean : ListContainsElement<bool>
		{
			[Token(Token = "0x6003177")]
			[Address(RVA = "0x1150610", Offset = "0x1150610", VA = "0x1150610")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000937")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_System_Single : ListContainsElement<float>
		{
			[Token(Token = "0x6003178")]
			[Address(RVA = "0x11506B0", Offset = "0x11506B0", VA = "0x11506B0")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_System_Single()
			{
			}
		}

		[Token(Token = "0x2000938")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_System_Int32 : ListContainsElement<int>
		{
			[Token(Token = "0x6003179")]
			[Address(RVA = "0x1150660", Offset = "0x1150660", VA = "0x1150660")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000939")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Vector2 : ListContainsElement<Vector2>
		{
			[Token(Token = "0x600317A")]
			[Address(RVA = "0x1150B60", Offset = "0x1150B60", VA = "0x1150B60")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x200093A")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Vector3 : ListContainsElement<Vector3>
		{
			[Token(Token = "0x600317B")]
			[Address(RVA = "0x1150BB0", Offset = "0x1150BB0", VA = "0x1150BB0")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x200093B")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Vector4 : ListContainsElement<Vector4>
		{
			[Token(Token = "0x600317C")]
			[Address(RVA = "0x1150C00", Offset = "0x1150C00", VA = "0x1150C00")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x200093C")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Quaternion : ListContainsElement<Quaternion>
		{
			[Token(Token = "0x600317D")]
			[Address(RVA = "0x1150980", Offset = "0x1150980", VA = "0x1150980")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x200093D")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Keyframe : ListContainsElement<Keyframe>
		{
			[Token(Token = "0x600317E")]
			[Address(RVA = "0x11508E0", Offset = "0x11508E0", VA = "0x11508E0")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x200093E")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Bounds : ListContainsElement<Bounds>
		{
			[Token(Token = "0x600317F")]
			[Address(RVA = "0x1150700", Offset = "0x1150700", VA = "0x1150700")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x200093F")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Color : ListContainsElement<Color>
		{
			[Token(Token = "0x6003180")]
			[Address(RVA = "0x11507F0", Offset = "0x11507F0", VA = "0x11507F0")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x2000940")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Rect : ListContainsElement<Rect>
		{
			[Token(Token = "0x6003181")]
			[Address(RVA = "0x1150AC0", Offset = "0x1150AC0", VA = "0x1150AC0")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x2000941")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_ContactPoint : ListContainsElement<ContactPoint>
		{
			[Token(Token = "0x6003182")]
			[Address(RVA = "0x1150840", Offset = "0x1150840", VA = "0x1150840")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x2000942")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_ContactPoint2D : ListContainsElement<ContactPoint2D>
		{
			[Token(Token = "0x6003183")]
			[Address(RVA = "0x1150890", Offset = "0x1150890", VA = "0x1150890")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x2000943")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Collision : ListContainsElement<Collision>
		{
			[Token(Token = "0x6003184")]
			[Address(RVA = "0x1150750", Offset = "0x1150750", VA = "0x1150750")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x2000944")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Collision2D : ListContainsElement<Collision2D>
		{
			[Token(Token = "0x6003185")]
			[Address(RVA = "0x11507A0", Offset = "0x11507A0", VA = "0x11507A0")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x2000945")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_RaycastHit : ListContainsElement<RaycastHit>
		{
			[Token(Token = "0x6003186")]
			[Address(RVA = "0x1150A20", Offset = "0x1150A20", VA = "0x1150A20")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000946")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_RaycastHit2D : ListContainsElement<RaycastHit2D>
		{
			[Token(Token = "0x6003187")]
			[Address(RVA = "0x1150A70", Offset = "0x1150A70", VA = "0x1150A70")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000947")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Ray : ListContainsElement<Ray>
		{
			[Token(Token = "0x6003188")]
			[Address(RVA = "0x11509D0", Offset = "0x11509D0", VA = "0x11509D0")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000948")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Space : ListContainsElement<Space>
		{
			[Token(Token = "0x6003189")]
			[Address(RVA = "0x1150B10", Offset = "0x1150B10", VA = "0x1150B10")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000949")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_BossMainDone : ListContainsElement<BossMainDone>
		{
			[Token(Token = "0x600318A")]
			[Address(RVA = "0x1150520", Offset = "0x1150520", VA = "0x1150520")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_BossMainDone()
			{
			}
		}

		[Token(Token = "0x200094A")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_BossMainToDo : ListContainsElement<BossMainToDo>
		{
			[Token(Token = "0x600318B")]
			[Address(RVA = "0x1150570", Offset = "0x1150570", VA = "0x1150570")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x200094B")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_e_group_type : ListContainsElement<e_group_type>
		{
			[Token(Token = "0x600318C")]
			[Address(RVA = "0x1150CF0", Offset = "0x1150CF0", VA = "0x1150CF0")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_e_group_type()
			{
			}
		}

		[Token(Token = "0x200094C")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_eMonsterAttackDirType : ListContainsElement<eMonsterAttackDirType>
		{
			[Token(Token = "0x600318D")]
			[Address(RVA = "0x1150C50", Offset = "0x1150C50", VA = "0x1150C50")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x200094D")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_eMonsterAttackType : ListContainsElement<eMonsterAttackType>
		{
			[Token(Token = "0x600318E")]
			[Address(RVA = "0x1150CA0", Offset = "0x1150CA0", VA = "0x1150CA0")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x200094E")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_MoveTargetType : ListContainsElement<MoveTargetType>
		{
			[Token(Token = "0x600318F")]
			[Address(RVA = "0x11505C0", Offset = "0x11505C0", VA = "0x11505C0")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x200094F")]
		private class NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_LayerMask : ListContainsElement<LayerMask>
		{
			[Token(Token = "0x6003190")]
			[Address(RVA = "0x1150930", Offset = "0x1150930", VA = "0x1150930")]
			public NodeCanvas_Tasks_Conditions_ListContainsElement_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x2000950")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_System_Boolean : TryGetValue<bool>
		{
			[Token(Token = "0x6003191")]
			[Address(RVA = "0x1150E30", Offset = "0x1150E30", VA = "0x1150E30")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_System_Boolean()
			{
			}
		}

		[Token(Token = "0x2000951")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_System_Single : TryGetValue<float>
		{
			[Token(Token = "0x6003192")]
			[Address(RVA = "0x1150ED0", Offset = "0x1150ED0", VA = "0x1150ED0")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_System_Single()
			{
			}
		}

		[Token(Token = "0x2000952")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_System_Int32 : TryGetValue<int>
		{
			[Token(Token = "0x6003193")]
			[Address(RVA = "0x1150E80", Offset = "0x1150E80", VA = "0x1150E80")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_System_Int32()
			{
			}
		}

		[Token(Token = "0x2000953")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Vector2 : TryGetValue<Vector2>
		{
			[Token(Token = "0x6003194")]
			[Address(RVA = "0x1151380", Offset = "0x1151380", VA = "0x1151380")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Vector2()
			{
			}
		}

		[Token(Token = "0x2000954")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Vector3 : TryGetValue<Vector3>
		{
			[Token(Token = "0x6003195")]
			[Address(RVA = "0x11513D0", Offset = "0x11513D0", VA = "0x11513D0")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Vector3()
			{
			}
		}

		[Token(Token = "0x2000955")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Vector4 : TryGetValue<Vector4>
		{
			[Token(Token = "0x6003196")]
			[Address(RVA = "0x1151420", Offset = "0x1151420", VA = "0x1151420")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Vector4()
			{
			}
		}

		[Token(Token = "0x2000956")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Quaternion : TryGetValue<Quaternion>
		{
			[Token(Token = "0x6003197")]
			[Address(RVA = "0x11511A0", Offset = "0x11511A0", VA = "0x11511A0")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Quaternion()
			{
			}
		}

		[Token(Token = "0x2000957")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Keyframe : TryGetValue<Keyframe>
		{
			[Token(Token = "0x6003198")]
			[Address(RVA = "0x1151100", Offset = "0x1151100", VA = "0x1151100")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Keyframe()
			{
			}
		}

		[Token(Token = "0x2000958")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Bounds : TryGetValue<Bounds>
		{
			[Token(Token = "0x6003199")]
			[Address(RVA = "0x1150F20", Offset = "0x1150F20", VA = "0x1150F20")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Bounds()
			{
			}
		}

		[Token(Token = "0x2000959")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Color : TryGetValue<Color>
		{
			[Token(Token = "0x600319A")]
			[Address(RVA = "0x1151010", Offset = "0x1151010", VA = "0x1151010")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Color()
			{
			}
		}

		[Token(Token = "0x200095A")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Rect : TryGetValue<Rect>
		{
			[Token(Token = "0x600319B")]
			[Address(RVA = "0x11512E0", Offset = "0x11512E0", VA = "0x11512E0")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Rect()
			{
			}
		}

		[Token(Token = "0x200095B")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_ContactPoint : TryGetValue<ContactPoint>
		{
			[Token(Token = "0x600319C")]
			[Address(RVA = "0x1151060", Offset = "0x1151060", VA = "0x1151060")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_ContactPoint()
			{
			}
		}

		[Token(Token = "0x200095C")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_ContactPoint2D : TryGetValue<ContactPoint2D>
		{
			[Token(Token = "0x600319D")]
			[Address(RVA = "0x11510B0", Offset = "0x11510B0", VA = "0x11510B0")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_ContactPoint2D()
			{
			}
		}

		[Token(Token = "0x200095D")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Collision : TryGetValue<Collision>
		{
			[Token(Token = "0x600319E")]
			[Address(RVA = "0x1150F70", Offset = "0x1150F70", VA = "0x1150F70")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Collision()
			{
			}
		}

		[Token(Token = "0x200095E")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Collision2D : TryGetValue<Collision2D>
		{
			[Token(Token = "0x600319F")]
			[Address(RVA = "0x1150FC0", Offset = "0x1150FC0", VA = "0x1150FC0")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Collision2D()
			{
			}
		}

		[Token(Token = "0x200095F")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_RaycastHit : TryGetValue<RaycastHit>
		{
			[Token(Token = "0x60031A0")]
			[Address(RVA = "0x1151240", Offset = "0x1151240", VA = "0x1151240")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_RaycastHit()
			{
			}
		}

		[Token(Token = "0x2000960")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_RaycastHit2D : TryGetValue<RaycastHit2D>
		{
			[Token(Token = "0x60031A1")]
			[Address(RVA = "0x1151290", Offset = "0x1151290", VA = "0x1151290")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_RaycastHit2D()
			{
			}
		}

		[Token(Token = "0x2000961")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Ray : TryGetValue<Ray>
		{
			[Token(Token = "0x60031A2")]
			[Address(RVA = "0x11511F0", Offset = "0x11511F0", VA = "0x11511F0")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Ray()
			{
			}
		}

		[Token(Token = "0x2000962")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Space : TryGetValue<Space>
		{
			[Token(Token = "0x60031A3")]
			[Address(RVA = "0x1151330", Offset = "0x1151330", VA = "0x1151330")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_Space()
			{
			}
		}

		[Token(Token = "0x2000963")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_BossMainDone : TryGetValue<BossMainDone>
		{
			[Token(Token = "0x60031A4")]
			[Address(RVA = "0x1150D40", Offset = "0x1150D40", VA = "0x1150D40")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_BossMainDone()
			{
			}
		}

		[Token(Token = "0x2000964")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_BossMainToDo : TryGetValue<BossMainToDo>
		{
			[Token(Token = "0x60031A5")]
			[Address(RVA = "0x1150D90", Offset = "0x1150D90", VA = "0x1150D90")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_BossMainToDo()
			{
			}
		}

		[Token(Token = "0x2000965")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_e_group_type : TryGetValue<e_group_type>
		{
			[Token(Token = "0x60031A6")]
			[Address(RVA = "0x1151510", Offset = "0x1151510", VA = "0x1151510")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_e_group_type()
			{
			}
		}

		[Token(Token = "0x2000966")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_eMonsterAttackDirType : TryGetValue<eMonsterAttackDirType>
		{
			[Token(Token = "0x60031A7")]
			[Address(RVA = "0x1151470", Offset = "0x1151470", VA = "0x1151470")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_eMonsterAttackDirType()
			{
			}
		}

		[Token(Token = "0x2000967")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_eMonsterAttackType : TryGetValue<eMonsterAttackType>
		{
			[Token(Token = "0x60031A8")]
			[Address(RVA = "0x11514C0", Offset = "0x11514C0", VA = "0x11514C0")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_eMonsterAttackType()
			{
			}
		}

		[Token(Token = "0x2000968")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_MoveTargetType : TryGetValue<MoveTargetType>
		{
			[Token(Token = "0x60031A9")]
			[Address(RVA = "0x1150DE0", Offset = "0x1150DE0", VA = "0x1150DE0")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_MoveTargetType()
			{
			}
		}

		[Token(Token = "0x2000969")]
		private class NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_LayerMask : TryGetValue<LayerMask>
		{
			[Token(Token = "0x60031AA")]
			[Address(RVA = "0x1151150", Offset = "0x1151150", VA = "0x1151150")]
			public NodeCanvas_Tasks_Conditions_TryGetValue_UnityEngine_LayerMask()
			{
			}
		}

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private object o;

		[Token(Token = "0x60029F9")]
		[Address(RVA = "0x1144964", Offset = "0x1144964", VA = "0x1144964")]
		private void NodeCanvas_Framework_Blackboard_GetVariable_1()
		{
		}

		[Token(Token = "0x60029FA")]
		[Address(RVA = "0x1144998", Offset = "0x1144998", VA = "0x1144998")]
		private void NodeCanvas_Framework_Blackboard_GetValue_2()
		{
		}

		[Token(Token = "0x60029FB")]
		[Address(RVA = "0x11449CC", Offset = "0x11449CC", VA = "0x11449CC")]
		private void NodeCanvas_Framework_IBlackboard_GetVariable_1()
		{
		}

		[Token(Token = "0x60029FC")]
		[Address(RVA = "0x1144A00", Offset = "0x1144A00", VA = "0x1144A00")]
		private void NodeCanvas_Framework_IBlackboard_GetValue_2()
		{
		}

		[Token(Token = "0x60029FD")]
		[Address(RVA = "0x1144A34", Offset = "0x1144A34", VA = "0x1144A34")]
		private void CustomSpoof()
		{
		}

		[Token(Token = "0x60029FE")]
		[Address(RVA = "0x1144A38", Offset = "0x1144A38", VA = "0x1144A38")]
		public AOTDummy()
		{
		}
	}
}
